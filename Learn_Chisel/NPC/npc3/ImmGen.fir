circuit ImmGen :
  module ImmGen :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip instin : UInt<32>, flip immop : UInt<3>, immout : SInt<32>}

    node _immI_T = bits(io.instin, 31, 31) @[ImmGen.scala 12:38]
    node _immI_T_1 = bits(_immI_T, 0, 0) @[Bitwise.scala 74:15]
    node _immI_T_2 = mux(_immI_T_1, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 74:12]
    node _immI_T_3 = bits(io.instin, 31, 20) @[ImmGen.scala 12:54]
    node _immI_T_4 = cat(_immI_T_2, _immI_T_3) @[Cat.scala 31:58]
    node immI = asSInt(_immI_T_4) @[ImmGen.scala 12:64]
    node _immS_T = bits(io.instin, 31, 31) @[ImmGen.scala 13:38]
    node _immS_T_1 = bits(_immS_T, 0, 0) @[Bitwise.scala 74:15]
    node _immS_T_2 = mux(_immS_T_1, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 74:12]
    node _immS_T_3 = bits(io.instin, 30, 25) @[ImmGen.scala 13:54]
    node _immS_T_4 = bits(io.instin, 11, 7) @[ImmGen.scala 13:73]
    node immS_hi = cat(_immS_T_2, _immS_T_3) @[Cat.scala 31:58]
    node _immS_T_5 = cat(immS_hi, _immS_T_4) @[Cat.scala 31:58]
    node immS = asSInt(_immS_T_5) @[ImmGen.scala 13:82]
    node _immB_T = bits(io.instin, 31, 31) @[ImmGen.scala 14:38]
    node _immB_T_1 = bits(_immB_T, 0, 0) @[Bitwise.scala 74:15]
    node _immB_T_2 = mux(_immB_T_1, UInt<20>("hfffff"), UInt<20>("h0")) @[Bitwise.scala 74:12]
    node _immB_T_3 = bits(io.instin, 7, 7) @[ImmGen.scala 14:54]
    node _immB_T_4 = bits(io.instin, 30, 25) @[ImmGen.scala 14:68]
    node _immB_T_5 = bits(io.instin, 11, 8) @[ImmGen.scala 14:87]
    node immB_lo = cat(_immB_T_5, UInt<1>("h0")) @[Cat.scala 31:58]
    node immB_hi_hi = cat(_immB_T_2, _immB_T_3) @[Cat.scala 31:58]
    node immB_hi = cat(immB_hi_hi, _immB_T_4) @[Cat.scala 31:58]
    node _immB_T_6 = cat(immB_hi, immB_lo) @[Cat.scala 31:58]
    node immB = asSInt(_immB_T_6) @[ImmGen.scala 14:106]
    node _immU_T = bits(io.instin, 31, 12) @[ImmGen.scala 15:29]
    node _immU_T_1 = cat(_immU_T, UInt<12>("h0")) @[Cat.scala 31:58]
    node immU = asSInt(_immU_T_1) @[ImmGen.scala 15:57]
    node _immJ_T = bits(io.instin, 31, 31) @[ImmGen.scala 16:38]
    node _immJ_T_1 = bits(_immJ_T, 0, 0) @[Bitwise.scala 74:15]
    node _immJ_T_2 = mux(_immJ_T_1, UInt<12>("hfff"), UInt<12>("h0")) @[Bitwise.scala 74:12]
    node _immJ_T_3 = bits(io.instin, 19, 12) @[ImmGen.scala 16:54]
    node _immJ_T_4 = bits(io.instin, 20, 20) @[ImmGen.scala 16:73]
    node _immJ_T_5 = bits(io.instin, 30, 21) @[ImmGen.scala 16:88]
    node immJ_lo = cat(_immJ_T_5, UInt<1>("h0")) @[Cat.scala 31:58]
    node immJ_hi_hi = cat(_immJ_T_2, _immJ_T_3) @[Cat.scala 31:58]
    node immJ_hi = cat(immJ_hi_hi, _immJ_T_4) @[Cat.scala 31:58]
    node _immJ_T_6 = cat(immJ_hi, immJ_lo) @[Cat.scala 31:58]
    node immJ = asSInt(_immJ_T_6) @[ImmGen.scala 16:108]
    node _io_immout_T = eq(UInt<1>("h0"), io.immop) @[Mux.scala 81:61]
    node _io_immout_T_1 = mux(_io_immout_T, immI, asSInt(UInt<1>("h0"))) @[Mux.scala 81:58]
    node _io_immout_T_2 = eq(UInt<1>("h1"), io.immop) @[Mux.scala 81:61]
    node _io_immout_T_3 = mux(_io_immout_T_2, immS, _io_immout_T_1) @[Mux.scala 81:58]
    node _io_immout_T_4 = eq(UInt<2>("h2"), io.immop) @[Mux.scala 81:61]
    node _io_immout_T_5 = mux(_io_immout_T_4, immB, _io_immout_T_3) @[Mux.scala 81:58]
    node _io_immout_T_6 = eq(UInt<2>("h3"), io.immop) @[Mux.scala 81:61]
    node _io_immout_T_7 = mux(_io_immout_T_6, immU, _io_immout_T_5) @[Mux.scala 81:58]
    node _io_immout_T_8 = eq(UInt<3>("h4"), io.immop) @[Mux.scala 81:61]
    node _io_immout_T_9 = mux(_io_immout_T_8, immJ, _io_immout_T_7) @[Mux.scala 81:58]
    io.immout <= _io_immout_T_9 @[ImmGen.scala 19:15]

