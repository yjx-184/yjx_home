!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/yjx/user/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
-0,0 +1,39	my_project/libgit2/fuzzers/corpora/patch_parse/patch_fuzzer-patch.diff	/^@@ -0,0 +1,39 @@$/;"	h	newFile:b/fuzzers/patch_fuzzer.c
-32,7 +32,7	my_project/libgit2/fuzzers/corpora/patch_parse/edit-file.diff	/^@@ -32,7 +32,7 @@ int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)$/;"	h	modifiedFile:a/fuzzers/patch_fuzzer.c
0	my_project/libgit2/.vscode/launch.json	/^                {$/;"	o	array:configurations.0.setupCommands
0	my_project/libgit2/.vscode/launch.json	/^        {$/;"	o	array:configurations
0	my_project/libgit2/.vscode/tasks.json	/^      {$/;"	o	array:tasks
1	my_project/libgit2/.vscode/tasks.json	/^      {$/;"	o	array:tasks
A	my_project/libgit2/src/util/wildmatch.c	/^	A = GIT_ALPHA,$/;"	e	enum:__anon8b99d91e0103	file:
ABS_PATH_MARKER	my_project/libgit2/tests/util/path/core.c	/^#define ABS_PATH_MARKER /;"	d	file:
ACROSSCHAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define ACROSSCHAR(/;"	d
ACTION_ADD	my_project/libgit2/src/cli/cmd_config.c	/^	ACTION_ADD,$/;"	e	enum:__anon345171c40103	file:
ACTION_GET	my_project/libgit2/src/cli/cmd_config.c	/^	ACTION_GET,$/;"	e	enum:__anon345171c40103	file:
ACTION_LIST	my_project/libgit2/src/cli/cmd_config.c	/^	ACTION_LIST$/;"	e	enum:__anon345171c40103	file:
ACTION_NONE	my_project/libgit2/src/cli/cmd_config.c	/^	ACTION_NONE = 0,$/;"	e	enum:__anon345171c40103	file:
ACTION_REPLACE_ALL	my_project/libgit2/src/cli/cmd_config.c	/^	ACTION_REPLACE_ALL,$/;"	e	enum:__anon345171c40103	file:
AC_VERSION_KHASH_H	my_project/libgit2/src/util/khash.h	/^#define AC_VERSION_KHASH_H /;"	d
ADDED_IN_MASTER_INDEX_ENTRY	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define ADDED_IN_MASTER_INDEX_ENTRY	/;"	d	file:
ADDED_IN_MASTER_INDEX_ENTRY	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define ADDED_IN_MASTER_INDEX_ENTRY	/;"	d	file:
ADD_ACTIVE	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define ADD_ACTIVE(/;"	d	file:
ADD_ACTIVE_DATA	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define ADD_ACTIVE_DATA(/;"	d	file:
ADD_CLAR_TEST	my_project/libgit2/cmake/AddClarTest.cmake	/^function(ADD_CLAR_TEST project name)$/;"	f
ADD_C_FLAG	my_project/libgit2/cmake/AddCFlagIfSupported.cmake	/^macro(ADD_C_FLAG _FLAG)$/;"	m
ADD_C_FLAG_IF_SUPPORTED	my_project/libgit2/cmake/AddCFlagIfSupported.cmake	/^macro(ADD_C_FLAG_IF_SUPPORTED _FLAG)$/;"	m
ADD_DELTA	my_project/libgit2/src/libgit2/delta.c	/^#define ADD_DELTA(/;"	d	file:
ADD_NEW	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define ADD_NEW(/;"	d	file:
ADD_NEW_DATA	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define ADD_NEW_DATA(/;"	d	file:
ALIGN	my_project/libgit2/deps/llhttp/llhttp.c	/^ #define ALIGN(/;"	d	file:
ALL_CRLF_TEXT_AS_CRLF	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define ALL_CRLF_TEXT_AS_CRLF	/;"	d
ALL_CRLF_TEXT_AS_CRLF	my_project/libgit2/tests/util/crlf.h	/^#define ALL_CRLF_TEXT_AS_CRLF	/;"	d
ALL_CRLF_TEXT_AS_LF	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define ALL_CRLF_TEXT_AS_LF	/;"	d
ALL_CRLF_TEXT_AS_LF	my_project/libgit2/tests/util/crlf.h	/^#define ALL_CRLF_TEXT_AS_LF	/;"	d
ALL_CRLF_TEXT_RAW	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define ALL_CRLF_TEXT_RAW	/;"	d
ALL_CRLF_TEXT_RAW	my_project/libgit2/tests/util/crlf.h	/^#define ALL_CRLF_TEXT_RAW	/;"	d
ALL_FLAGS	my_project/libgit2/src/libgit2/commit_list.h	/^#define ALL_FLAGS /;"	d
ALL_LF_TEXT_AS_CRLF	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define ALL_LF_TEXT_AS_CRLF	/;"	d
ALL_LF_TEXT_AS_CRLF	my_project/libgit2/tests/util/crlf.h	/^#define ALL_LF_TEXT_AS_CRLF	/;"	d
ALL_LF_TEXT_AS_LF	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define ALL_LF_TEXT_AS_LF	/;"	d
ALL_LF_TEXT_AS_LF	my_project/libgit2/tests/util/crlf.h	/^#define ALL_LF_TEXT_AS_LF	/;"	d
ALL_LF_TEXT_RAW	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define ALL_LF_TEXT_RAW	/;"	d
ALL_LF_TEXT_RAW	my_project/libgit2/tests/util/crlf.h	/^#define ALL_LF_TEXT_RAW	/;"	d
ALTERNATE_MALFORMED_FOLDER1	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define ALTERNATE_MALFORMED_FOLDER1 /;"	d	file:
ALTERNATE_MALFORMED_FOLDER2	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define ALTERNATE_MALFORMED_FOLDER2 /;"	d	file:
ALTERNATE_MALFORMED_FOLDER3	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define ALTERNATE_MALFORMED_FOLDER3 /;"	d	file:
ALTERNATE_NOT_FOUND_FOLDER	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define ALTERNATE_NOT_FOUND_FOLDER /;"	d	file:
ANOTHER_POEM	my_project/libgit2/tests/libgit2/stress/diff.c	/^#define ANOTHER_POEM /;"	d	file:
API additions	my_project/libgit2/docs/changelog.md	/^### API additions$/;"	S	section:Security Fixes""v0.22
API additions	my_project/libgit2/docs/changelog.md	/^### API additions$/;"	S	section:Security Fixes""v0.23
API additions	my_project/libgit2/docs/changelog.md	/^### API additions$/;"	S	section:Security Fixes""v0.24
API additions	my_project/libgit2/docs/changelog.md	/^### API additions$/;"	S	section:Security Fixes""v0.25
API additions	my_project/libgit2/docs/changelog.md	/^### API additions$/;"	S	section:Security Fixes""v0.26
API additions	my_project/libgit2/docs/changelog.md	/^### API additions$/;"	S	section:Security Fixes""v0.27
API additions	my_project/libgit2/docs/changelog.md	/^### API additions$/;"	S	section:Security Fixes""v0.28
API additions	my_project/libgit2/docs/changelog.md	/^### API additions$/;"	S	section:v0.99
API removals	my_project/libgit2/docs/changelog.md	/^### API removals$/;"	S	section:Security Fixes""v0.22
API removals	my_project/libgit2/docs/changelog.md	/^### API removals$/;"	S	section:Security Fixes""v0.23
API removals	my_project/libgit2/docs/changelog.md	/^### API removals$/;"	S	section:Security Fixes""v0.24
API removals	my_project/libgit2/docs/changelog.md	/^### API removals$/;"	S	section:Security Fixes""v0.25
API removals	my_project/libgit2/docs/changelog.md	/^### API removals$/;"	S	section:Security Fixes""v0.27
API removals	my_project/libgit2/docs/changelog.md	/^### API removals$/;"	S	section:Security Fixes""v0.28
API removals	my_project/libgit2/docs/changelog.md	/^### API removals$/;"	S	section:v0.99
API_QUERY_DATA_AVAILABLE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define API_QUERY_DATA_AVAILABLE /;"	d
API_READ_DATA	my_project/libgit2/deps/winhttp/winhttp.h	/^#define API_READ_DATA /;"	d
API_RECEIVE_RESPONSE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define API_RECEIVE_RESPONSE /;"	d
API_SEND_REQUEST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define API_SEND_REQUEST /;"	d
API_WRITE_DATA	my_project/libgit2/deps/winhttp/winhttp.h	/^#define API_WRITE_DATA /;"	d
APTCOLS	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define APTCOLS /;"	d	file:
APTROWS	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define APTROWS /;"	d	file:
ARGS_CURRENT	my_project/libgit2/examples/args.h	/^#define ARGS_CURRENT(/;"	d
ARGS_INFO_INIT	my_project/libgit2/examples/args.h	/^#define ARGS_INFO_INIT /;"	d
ARGUMENTS	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define ARGUMENTS /;"	d	file:
ARMCRC32	my_project/libgit2/deps/zlib/crc32.c	/^#  define ARMCRC32$/;"	d	file:
ARRAY_LEN	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^#define ARRAY_LEN(/;"	d	file:
ARRAY_SIZE	my_project/libgit2/examples/common.h	/^#define ARRAY_SIZE(/;"	d
ARRAY_SIZE	my_project/libgit2/src/util/util.h	/^#define ARRAY_SIZE(/;"	d
ASN1_STRING	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^} ASN1_STRING;$/;"	t	typeref:struct:__anon6b5cad8b0108
ASN1_STRING_data	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^unsigned char *(*ASN1_STRING_data)(ASN1_STRING *x);$/;"	v	typeref:typename:unsigned char * (*)(ASN1_STRING * x)
ASN1_STRING_get0_data	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^const unsigned char *(*ASN1_STRING_get0_data)(const ASN1_STRING *x);$/;"	v	typeref:typename:const unsigned char * (*)(const ASN1_STRING * x)
ASN1_STRING_get0_data	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define ASN1_STRING_get0_data /;"	d
ASN1_STRING_get0_data__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^const unsigned char *ASN1_STRING_get0_data__legacy(const ASN1_STRING *x)$/;"	f	typeref:typename:const unsigned char *
ASN1_STRING_length	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*ASN1_STRING_length)(const ASN1_STRING *x);$/;"	v	typeref:typename:int (*)(const ASN1_STRING * x)
ASN1_STRING_to_UTF8	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*ASN1_STRING_to_UTF8)(unsigned char **out, const ASN1_STRING *in);$/;"	v	typeref:typename:int (*)(unsigned char ** out,const ASN1_STRING * in)
ASN1_STRING_type	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*ASN1_STRING_type)(const ASN1_STRING *x);$/;"	v	typeref:typename:int (*)(const ASN1_STRING * x)
AUTHORITY	my_project/libgit2/src/util/net.c	/^		AUTHORITY_START, AUTHORITY,$/;"	e	enum:git_net_url_parse::__anon850d8ea80403	file:
AUTHORITY_START	my_project/libgit2/src/util/net.c	/^		AUTHORITY_START, AUTHORITY,$/;"	e	enum:git_net_url_parse::__anon850d8ea80403	file:
AUTOMERGEABLE_ANCESTOR_OID	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define AUTOMERGEABLE_ANCESTOR_OID /;"	d	file:
AUTOMERGEABLE_IDSTR	my_project/libgit2/tests/libgit2/merge/driver.c	/^#define AUTOMERGEABLE_IDSTR /;"	d	file:
AUTOMERGEABLE_INDEX_ENTRY	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define AUTOMERGEABLE_INDEX_ENTRY /;"	d	file:
AUTOMERGEABLE_INDEX_ENTRY	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define AUTOMERGEABLE_INDEX_ENTRY /;"	d	file:
AUTOMERGEABLE_MERGED_FILE	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define AUTOMERGEABLE_MERGED_FILE /;"	d	file:
AUTOMERGEABLE_MERGED_FILE	my_project/libgit2/tests/libgit2/merge/conflict_data.h	/^#define AUTOMERGEABLE_MERGED_FILE /;"	d
AUTOMERGEABLE_MERGED_FILE	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^#define AUTOMERGEABLE_MERGED_FILE /;"	d	file:
AUTOMERGEABLE_MERGED_FILE_CRLF	my_project/libgit2/tests/libgit2/merge/conflict_data.h	/^#define AUTOMERGEABLE_MERGED_FILE_CRLF /;"	d
AUTOMERGEABLE_OURS_OID	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define AUTOMERGEABLE_OURS_OID /;"	d	file:
AUTOMERGEABLE_REUC_ENTRY	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define AUTOMERGEABLE_REUC_ENTRY /;"	d	file:
AUTOMERGEABLE_REUC_ENTRY	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define AUTOMERGEABLE_REUC_ENTRY /;"	d	file:
AUTOMERGEABLE_THEIRS_OID	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define AUTOMERGEABLE_THEIRS_OID /;"	d	file:
Adding commands	my_project/libgit2/src/cli/README.md	/^## Adding commands$/;"	s	chapter:cli
Advanced Usage	my_project/libgit2/README.md	/^Advanced Usage$/;"	s	chapter:Building libgit2 - Using CMake
Android	my_project/libgit2/README.md	/^Android$/;"	s	chapter:Building libgit2 - Using CMake
Assert	my_project/libgit2/deps/zlib/zutil.h	/^#  define Assert(/;"	d
Attribution	my_project/libgit2/docs/code_of_conduct.md	/^## Attribution$/;"	s	chapter:Contributor Covenant Code of Conduct
Authors	my_project/libgit2/docs/changelog.md	/^### Authors$/;"	S	chapter:Security Fixes
BACKCHAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define BACKCHAR(/;"	d
BACKTRACK_AS	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define BACKTRACK_AS(/;"	d	file:
BAD	my_project/libgit2/deps/zlib/inflate.h	/^    BAD,        \/* got a data error -- remain here until reset *\/$/;"	e	enum:__anona0359fa00103
BARE_REPO	my_project/libgit2/tests/libgit2/object/blob/write.c	/^#define BARE_REPO /;"	d	file:
BARE_REPOSITORY	my_project/libgit2/tests/libgit2/repo/init.c	/^	BARE_REPOSITORY = 1$/;"	e	enum:repo_mode	file:
BASE	my_project/libgit2/deps/zlib/adler32.c	/^#define BASE /;"	d	file:
BASEDIR	my_project/libgit2/tests/util/mkdir.c	/^#define BASEDIR /;"	d	file:
BB_REPO_URL	my_project/libgit2/tests/libgit2/online/clone.c	/^#define BB_REPO_URL /;"	d	file:
BB_REPO_URL_WITH_PASS	my_project/libgit2/tests/libgit2/online/clone.c	/^#define BB_REPO_URL_WITH_PASS /;"	d	file:
BB_REPO_URL_WITH_WRONG_PASS	my_project/libgit2/tests/libgit2/online/clone.c	/^#define BB_REPO_URL_WITH_WRONG_PASS /;"	d	file:
BIGFILE	my_project/libgit2/tests/libgit2/object/tree/read.c	/^#define BIGFILE /;"	d	file:
BIGFILE_SIZE	my_project/libgit2/tests/libgit2/object/tree/read.c	/^# define BIGFILE_SIZE /;"	d	file:
BIGFILE_SIZE	my_project/libgit2/tests/libgit2/object/tree/read.c	/^#define BIGFILE_SIZE /;"	d	file:
BIG_STRING_PART	my_project/libgit2/tests/util/zstream.c	/^#define BIG_STRING_PART /;"	d	file:
BIO	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef struct bio_st BIO;$/;"	t	typeref:struct:bio_st
BIO_CTRL_FLUSH	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define BIO_CTRL_FLUSH /;"	d
BIO_METHOD	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef struct bio_method_st BIO_METHOD;$/;"	t	typeref:struct:bio_method_st
BIO_TYPE_SOURCE_SINK	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define BIO_TYPE_SOURCE_SINK /;"	d
BIO_get_data	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void *(*BIO_get_data)(BIO *a);$/;"	v	typeref:typename:void * (*)(BIO * a)
BIO_get_data	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define BIO_get_data /;"	d
BIO_get_data__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^void *BIO_get_data__legacy(BIO *a)$/;"	f	typeref:typename:void *
BIO_get_new_index	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*BIO_get_new_index)(void);$/;"	v	typeref:typename:int (*)(void)
BIO_get_new_index	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define BIO_get_new_index /;"	d
BIO_get_new_index__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^int BIO_get_new_index__legacy(void)$/;"	f	typeref:typename:int
BIO_meth_free	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*BIO_meth_free)(BIO_METHOD *biom);$/;"	v	typeref:typename:void (*)(BIO_METHOD * biom)
BIO_meth_free	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define BIO_meth_free /;"	d
BIO_meth_free__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^void BIO_meth_free__legacy(BIO_METHOD *biom)$/;"	f	typeref:typename:void
BIO_meth_new	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^BIO_METHOD *(*BIO_meth_new)(int type, const char *name);$/;"	v	typeref:typename:BIO_METHOD * (*)(int type,const char * name)
BIO_meth_new	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define BIO_meth_new /;"	d
BIO_meth_new__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^BIO_METHOD *BIO_meth_new__legacy(int type, const char *name)$/;"	f	typeref:typename:BIO_METHOD *
BIO_meth_set_create	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*BIO_meth_set_create)(BIO_METHOD *biom, int (*create) (BIO *));$/;"	v	typeref:typename:int (*)(BIO_METHOD * biom,int (* create)(BIO *))
BIO_meth_set_create	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define BIO_meth_set_create /;"	d
BIO_meth_set_create__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^int BIO_meth_set_create__legacy(BIO_METHOD *biom, int (*create) (BIO *))$/;"	f	typeref:typename:int
BIO_meth_set_ctrl	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*BIO_meth_set_ctrl)(BIO_METHOD *biom, long (*ctrl) (BIO *, int, long, void *));$/;"	v	typeref:typename:int (*)(BIO_METHOD * biom,long (* ctrl)(BIO *,int,long,void *))
BIO_meth_set_ctrl	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define BIO_meth_set_ctrl /;"	d
BIO_meth_set_ctrl__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^int BIO_meth_set_ctrl__legacy(BIO_METHOD *biom, long (*ctrl) (BIO *, int, long, void *))$/;"	f	typeref:typename:int
BIO_meth_set_destroy	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*BIO_meth_set_destroy)(BIO_METHOD *biom, int (*destroy) (BIO *));$/;"	v	typeref:typename:int (*)(BIO_METHOD * biom,int (* destroy)(BIO *))
BIO_meth_set_destroy	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define BIO_meth_set_destroy /;"	d
BIO_meth_set_destroy__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^int BIO_meth_set_destroy__legacy(BIO_METHOD *biom, int (*destroy) (BIO *))$/;"	f	typeref:typename:int
BIO_meth_set_gets	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*BIO_meth_set_gets)(BIO_METHOD *biom, int (*gets) (BIO *, char *, int));$/;"	v	typeref:typename:int (*)(BIO_METHOD * biom,int (* gets)(BIO *,char *,int))
BIO_meth_set_gets	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define BIO_meth_set_gets /;"	d
BIO_meth_set_gets__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^int BIO_meth_set_gets__legacy(BIO_METHOD *biom, int (*gets) (BIO *, char *, int))$/;"	f	typeref:typename:int
BIO_meth_set_puts	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*BIO_meth_set_puts)(BIO_METHOD *biom, int (*puts) (BIO *, const char *));$/;"	v	typeref:typename:int (*)(BIO_METHOD * biom,int (* puts)(BIO *,const char *))
BIO_meth_set_puts	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define BIO_meth_set_puts /;"	d
BIO_meth_set_puts__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^int BIO_meth_set_puts__legacy(BIO_METHOD *biom, int (*puts) (BIO *, const char *))$/;"	f	typeref:typename:int
BIO_meth_set_read	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*BIO_meth_set_read)(BIO_METHOD *biom, int (*read) (BIO *, char *, int));$/;"	v	typeref:typename:int (*)(BIO_METHOD * biom,int (* read)(BIO *,char *,int))
BIO_meth_set_read	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define BIO_meth_set_read /;"	d
BIO_meth_set_read__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^int BIO_meth_set_read__legacy(BIO_METHOD *biom, int (*read) (BIO *, char *, int))$/;"	f	typeref:typename:int
BIO_meth_set_write	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*BIO_meth_set_write)(BIO_METHOD *biom, int (*write) (BIO *, const char *, int));$/;"	v	typeref:typename:int (*)(BIO_METHOD * biom,int (* write)(BIO *,const char *,int))
BIO_meth_set_write	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define BIO_meth_set_write /;"	d
BIO_meth_set_write__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^int BIO_meth_set_write__legacy(BIO_METHOD *biom, int (*write) (BIO *, const char *, int))$/;"	f	typeref:typename:int
BIO_new	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^BIO *(*BIO_new)(const BIO_METHOD *type);$/;"	v	typeref:typename:BIO * (*)(const BIO_METHOD * type)
BIO_set_data	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*BIO_set_data)(BIO *a, void *ptr);$/;"	v	typeref:typename:void (*)(BIO * a,void * ptr)
BIO_set_data	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define BIO_set_data /;"	d
BIO_set_data__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^void BIO_set_data__legacy(BIO *a, void *ptr)$/;"	f	typeref:typename:void
BIO_set_init	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*BIO_set_init)(BIO *a, int init);$/;"	v	typeref:typename:void (*)(BIO * a,int init)
BIO_set_init	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define BIO_set_init /;"	d
BIO_set_init__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^void BIO_set_init__legacy(BIO *b, int init)$/;"	f	typeref:typename:void
BITFLIPPED_AND_REVERSED_DATA_LEN	my_project/libgit2/tests/libgit2/filter/custom.c	/^#define BITFLIPPED_AND_REVERSED_DATA_LEN /;"	d	file:
BITFLIP_FILTER_PRIORITY	my_project/libgit2/tests/libgit2/filter/custom.c	/^#define BITFLIP_FILTER_PRIORITY /;"	d	file:
BITS	my_project/libgit2/deps/zlib/infback.c	/^#define BITS(/;"	d	file:
BITS	my_project/libgit2/deps/zlib/inflate.c	/^#define BITS(/;"	d	file:
BLOB_DIFF	my_project/libgit2/tests/libgit2/diff/blob.c	/^#define BLOB_DIFF /;"	d	file:
BL_CODES	my_project/libgit2/deps/zlib/deflate.h	/^#define BL_CODES /;"	d
BOOL	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef int BOOL;$/;"	t	typeref:typename:int
BOOLAPI	my_project/libgit2/deps/winhttp/winhttp.h	/^#define BOOLAPI /;"	d
BRANCH_A_CHANGE	my_project/libgit2/tests/libgit2/merge/trees/whitespace.c	/^#define BRANCH_A_CHANGE /;"	d	file:
BRANCH_A_EOL	my_project/libgit2/tests/libgit2/merge/trees/whitespace.c	/^#define BRANCH_A_EOL /;"	d	file:
BRANCH_B_CHANGE	my_project/libgit2/tests/libgit2/merge/trees/whitespace.c	/^#define BRANCH_B_CHANGE /;"	d	file:
BRANCH_B_EOL	my_project/libgit2/tests/libgit2/merge/trees/whitespace.c	/^#define BRANCH_B_EOL /;"	d	file:
BRANCH_ID	my_project/libgit2/tests/libgit2/merge/driver.c	/^#define BRANCH_ID /;"	d	file:
BRANCH_RENAME_OURS	my_project/libgit2/tests/libgit2/merge/trees/renames.c	/^#define BRANCH_RENAME_OURS	/;"	d	file:
BRANCH_RENAME_OURS	my_project/libgit2/tests/libgit2/merge/workdir/renames.c	/^#define BRANCH_RENAME_OURS	/;"	d	file:
BRANCH_RENAME_THEIRS	my_project/libgit2/tests/libgit2/merge/trees/renames.c	/^#define BRANCH_RENAME_THEIRS	/;"	d	file:
BRANCH_RENAME_THEIRS	my_project/libgit2/tests/libgit2/merge/workdir/renames.c	/^#define BRANCH_RENAME_THEIRS	/;"	d	file:
BREAK_REWRITE_BASE_COMMIT	my_project/libgit2/tests/libgit2/diff/rename.c	/^#define BREAK_REWRITE_BASE_COMMIT /;"	d	file:
BREAK_REWRITE_COMMIT	my_project/libgit2/tests/libgit2/diff/rename.c	/^#define BREAK_REWRITE_COMMIT /;"	d	file:
BSR_ANYCRLF	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(BSR_ANYCRLF 0)$/;"	v
BUFERR_MEM	my_project/libgit2/src/util/filebuf.c	/^	BUFERR_MEM$/;"	e	enum:buferr_t	file:
BUFERR_OK	my_project/libgit2/src/util/filebuf.c	/^	BUFERR_OK = 0,$/;"	e	enum:buferr_t	file:
BUFERR_WRITE	my_project/libgit2/src/util/filebuf.c	/^	BUFERR_WRITE,$/;"	e	enum:buferr_t	file:
BUFERR_ZLIB	my_project/libgit2/src/util/filebuf.c	/^	BUFERR_ZLIB,$/;"	e	enum:buferr_t	file:
BUFFER_SIZE	my_project/libgit2/src/cli/cmd_index_pack.c	/^#define BUFFER_SIZE /;"	d	file:
BUF_TO_STRUCT	my_project/libgit2/src/libgit2/filter.c	/^# define BUF_TO_STRUCT(/;"	d	file:
BUILDFIXED	my_project/libgit2/deps/zlib/inflate.c	/^#    define BUILDFIXED$/;"	d	file:
BUILD_CLI	my_project/libgit2/CMakeLists.txt	/^option(BUILD_CLI               "Build the command-line interface"                       ON)$/;"	D
BUILD_EXAMPLES	my_project/libgit2/CMakeLists.txt	/^option(BUILD_EXAMPLES          "Build library usage example apps"                      OFF)$/;"	D
BUILD_FUZZERS	my_project/libgit2/CMakeLists.txt	/^option(BUILD_FUZZERS           "Build the fuzz targets"                                OFF)$/;"	D
BUILD_SHARED_LIBS	my_project/libgit2/CMakeLists.txt	/^option(BUILD_SHARED_LIBS       "Build Shared Library (OFF for Static)"                  ON)$/;"	D
BUILD_TESTS	my_project/libgit2/CMakeLists.txt	/^option(BUILD_TESTS             "Build Tests using the Clar suite"                       ON)$/;"	D
BUSY_STATE	my_project/libgit2/deps/zlib/deflate.h	/^#define BUSY_STATE /;"	d
BYTEBITS	my_project/libgit2/deps/zlib/infback.c	/^#define BYTEBITS(/;"	d	file:
BYTEBITS	my_project/libgit2/deps/zlib/inflate.c	/^#define BYTEBITS(/;"	d	file:
BYTE_MAP	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define BYTE_MAP /;"	d	file:
Before You Start	my_project/libgit2/docs/projects.md	/^## Before You Start$/;"	s	chapter:Projects For LibGit2
Benchmark example	my_project/libgit2/tests/benchmarks/README.md	/^### Benchmark example$/;"	S	section:libgit2 benchmarks""Writing benchmark tests
Braces	my_project/libgit2/docs/coding-style.md	/^### Braces$/;"	S	section:libgit2 Coding Style""C Coding Style
Breaking API changes	my_project/libgit2/docs/changelog.md	/^### Breaking API changes$/;"	S	chapter:Security Fixes
Breaking API changes	my_project/libgit2/docs/changelog.md	/^### Breaking API changes$/;"	S	section:Security Fixes""v0.22
Breaking API changes	my_project/libgit2/docs/changelog.md	/^### Breaking API changes$/;"	S	section:Security Fixes""v0.23
Breaking API changes	my_project/libgit2/docs/changelog.md	/^### Breaking API changes$/;"	S	section:Security Fixes""v0.24
Breaking API changes	my_project/libgit2/docs/changelog.md	/^### Breaking API changes$/;"	S	section:Security Fixes""v0.25
Breaking API changes	my_project/libgit2/docs/changelog.md	/^### Breaking API changes$/;"	S	section:Security Fixes""v0.26
Breaking API changes	my_project/libgit2/docs/changelog.md	/^### Breaking API changes$/;"	S	section:Security Fixes""v0.27
Breaking API changes	my_project/libgit2/docs/changelog.md	/^### Breaking API changes$/;"	S	section:Security Fixes""v0.28
Breaking CMake configuration changes	my_project/libgit2/docs/changelog.md	/^### Breaking CMake configuration changes$/;"	S	chapter:Security Fixes
Breaking changes	my_project/libgit2/docs/changelog.md	/^## Breaking changes$/;"	s
Buf_size	my_project/libgit2/deps/zlib/deflate.h	/^#define Buf_size /;"	d
Bug fixes	my_project/libgit2/docs/changelog.md	/^## Bug fixes$/;"	s
Bug fixes	my_project/libgit2/docs/changelog.md	/^### Bug fixes$/;"	S	section:Other changes
Bug fixes	my_project/libgit2/docs/changelog.md	/^### Bug fixes$/;"	S	section:What's Changed
Build	my_project/libgit2/docs/fuzzing.md	/^## Build$/;"	s	chapter:Fuzzing
Build and CI improvements	my_project/libgit2/docs/changelog.md	/^### Build and CI improvements$/;"	S	section:Other changes
Build and CI improvements	my_project/libgit2/docs/changelog.md	/^### Build and CI improvements$/;"	S	section:What's Changed
Building	my_project/libgit2/README.md	/^Building$/;"	s	chapter:Building libgit2 - Using CMake
Building libgit2 - Using CMake	my_project/libgit2/README.md	/^Building libgit2 - Using CMake$/;"	c
Byte	my_project/libgit2/deps/zlib/zconf.h	/^#  define Byte /;"	d
Byte	my_project/libgit2/deps/zlib/zconf.h	/^typedef unsigned char  Byte;  \/* 8 bits *\/$/;"	t	typeref:typename:unsigned char
Bytef	my_project/libgit2/deps/zlib/zconf.h	/^   typedef Byte  FAR Bytef;$/;"	t	typeref:typename:Byte FAR
Bytef	my_project/libgit2/deps/zlib/zconf.h	/^#  define Bytef /;"	d
C	my_project/libgit2/examples/blame.c	/^	int C;$/;"	m	struct:blame_opts	typeref:typename:int	file:
C Coding Style	my_project/libgit2/docs/coding-style.md	/^## C Coding Style$/;"	s	chapter:libgit2 Coding Style
CACHED_POST_BODY_BUF_SIZE	my_project/libgit2/src/libgit2/transports/winhttp.c	/^#define CACHED_POST_BODY_BUF_SIZE	/;"	d	file:
CACHE_FLUSH	my_project/libgit2/src/libgit2/submodule.c	/^	CACHE_FLUSH = 2$/;"	e	enum:__anon705203a00103	file:
CACHE_NONE	my_project/libgit2/examples/diff.c	/^	CACHE_NONE = 2$/;"	e	enum:__anonaa3048640203	file:
CACHE_NORMAL	my_project/libgit2/examples/diff.c	/^	CACHE_NORMAL = 0,$/;"	e	enum:__anonaa3048640203	file:
CACHE_OK	my_project/libgit2/src/libgit2/submodule.c	/^	CACHE_OK = 0,$/;"	e	enum:__anon705203a00103	file:
CACHE_ONLY	my_project/libgit2/examples/diff.c	/^	CACHE_ONLY = 1,$/;"	e	enum:__anonaa3048640203	file:
CACHE_REFRESH	my_project/libgit2/src/libgit2/submodule.c	/^	CACHE_REFRESH = 1,$/;"	e	enum:__anon705203a00103	file:
CALLBACK_MAYBE	my_project/libgit2/deps/llhttp/api.c	/^#define CALLBACK_MAYBE(/;"	d	file:
CALLOUT_ARG_OFFSET	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CALLOUT_ARG_OFFSET(/;"	d	file:
CALLOUT_ARG_SIZE	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CALLOUT_ARG_SIZE /;"	d	file:
CANCEL_VALUE	my_project/libgit2/tests/libgit2/attr/repo.c	/^#define CANCEL_VALUE /;"	d	file:
CANCEL_VALUE	my_project/libgit2/tests/util/path/core.c	/^#define CANCEL_VALUE /;"	d	file:
CAPLMASK	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define CAPLMASK /;"	d	file:
CASESELECT	my_project/libgit2/src/util/util.h	/^#define CASESELECT(/;"	d
CASE_ITERATOR_PRIVATE_DATA_1	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CASE_ITERATOR_PRIVATE_DATA_1 /;"	d	file:
CASE_ITERATOR_PRIVATE_DATA_2A	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CASE_ITERATOR_PRIVATE_DATA_2A /;"	d	file:
CASE_ITERATOR_PRIVATE_DATA_2B	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CASE_ITERATOR_PRIVATE_DATA_2B /;"	d	file:
CASE_ITERATOR_TYPE_PRIVATE_DATA_1	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CASE_ITERATOR_TYPE_PRIVATE_DATA_1 /;"	d	file:
CASE_ITERATOR_TYPE_PRIVATE_DATA_2A	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CASE_ITERATOR_TYPE_PRIVATE_DATA_2A /;"	d	file:
CASE_ITERATOR_TYPE_PRIVATE_DATA_2B	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CASE_ITERATOR_TYPE_PRIVATE_DATA_2B /;"	d	file:
CC_EQ	my_project/libgit2/src/util/wildmatch.c	/^#define CC_EQ(/;"	d	file:
CC_LONG_MAX	my_project/libgit2/src/util/hash/common_crypto.c	/^#define CC_LONG_MAX /;"	d	file:
CERT_LOCATION	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^						set(CERT_LOCATION ${LOC})$/;"	v
CHANGED_IN_BRANCH_FILE	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^#define CHANGED_IN_BRANCH_FILE /;"	d	file:
CHANGED_IN_BRANCH_INDEX_ENTRY	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define CHANGED_IN_BRANCH_INDEX_ENTRY /;"	d	file:
CHANGED_IN_BRANCH_INDEX_ENTRY	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define CHANGED_IN_BRANCH_INDEX_ENTRY /;"	d	file:
CHANGED_IN_MASTER_INDEX_ENTRY	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define CHANGED_IN_MASTER_INDEX_ENTRY /;"	d	file:
CHANGED_IN_MASTER_INDEX_ENTRY	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define CHANGED_IN_MASTER_INDEX_ENTRY /;"	d	file:
CHAR_0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_0 /;"	d
CHAR_1	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_1 /;"	d
CHAR_2	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_2 /;"	d
CHAR_3	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_3 /;"	d
CHAR_4	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_4 /;"	d
CHAR_5	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_5 /;"	d
CHAR_6	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_6 /;"	d
CHAR_7	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_7 /;"	d
CHAR_8	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_8 /;"	d
CHAR_9	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_9 /;"	d
CHAR_A	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_A /;"	d
CHAR_AMPERSAND	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_AMPERSAND /;"	d
CHAR_APOSTROPHE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_APOSTROPHE /;"	d
CHAR_ASTERISK	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_ASTERISK /;"	d
CHAR_B	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_B /;"	d
CHAR_BACKSLASH	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_BACKSLASH /;"	d
CHAR_BEL	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_BEL /;"	d
CHAR_BS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_BS /;"	d
CHAR_C	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_C /;"	d
CHAR_CIRCUMFLEX_ACCENT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_CIRCUMFLEX_ACCENT /;"	d
CHAR_COLON	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_COLON /;"	d
CHAR_COMMA	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_COMMA /;"	d
CHAR_COMMERCIAL_AT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_COMMERCIAL_AT /;"	d
CHAR_CR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_CR /;"	d
CHAR_D	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_D /;"	d
CHAR_DEL	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_DEL /;"	d
CHAR_DOLLAR_SIGN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_DOLLAR_SIGN /;"	d
CHAR_DOT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_DOT /;"	d
CHAR_E	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_E /;"	d
CHAR_EQUALS_SIGN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_EQUALS_SIGN /;"	d
CHAR_ESC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_ESC /;"	d
CHAR_EXCLAMATION_MARK	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_EXCLAMATION_MARK /;"	d
CHAR_F	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_F /;"	d
CHAR_FF	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_FF /;"	d
CHAR_G	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_G /;"	d
CHAR_GRAVE_ACCENT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_GRAVE_ACCENT /;"	d
CHAR_GREATER_THAN_SIGN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_GREATER_THAN_SIGN /;"	d
CHAR_H	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_H /;"	d
CHAR_HT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_HT /;"	d
CHAR_I	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_I /;"	d
CHAR_J	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_J /;"	d
CHAR_K	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_K /;"	d
CHAR_L	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_L /;"	d
CHAR_LEFT_CURLY_BRACKET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_LEFT_CURLY_BRACKET /;"	d
CHAR_LEFT_PARENTHESIS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_LEFT_PARENTHESIS /;"	d
CHAR_LEFT_SQUARE_BRACKET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_LEFT_SQUARE_BRACKET /;"	d
CHAR_LESS_THAN_SIGN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_LESS_THAN_SIGN /;"	d
CHAR_LF	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_LF /;"	d
CHAR_M	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_M /;"	d
CHAR_MINUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_MINUS /;"	d
CHAR_N	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_N /;"	d
CHAR_NBSP	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_NBSP /;"	d
CHAR_NEL	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_NEL /;"	d
CHAR_NL	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_NL /;"	d
CHAR_NULL	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_NULL /;"	d
CHAR_NUMBER_SIGN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_NUMBER_SIGN /;"	d
CHAR_O	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_O /;"	d
CHAR_P	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_P /;"	d
CHAR_PERCENT_SIGN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_PERCENT_SIGN /;"	d
CHAR_PLUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_PLUS /;"	d
CHAR_Q	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_Q /;"	d
CHAR_QUESTION_MARK	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_QUESTION_MARK /;"	d
CHAR_QUOTATION_MARK	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_QUOTATION_MARK /;"	d
CHAR_R	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_R /;"	d
CHAR_RIGHT_CURLY_BRACKET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_RIGHT_CURLY_BRACKET /;"	d
CHAR_RIGHT_PARENTHESIS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_RIGHT_PARENTHESIS /;"	d
CHAR_RIGHT_SQUARE_BRACKET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_RIGHT_SQUARE_BRACKET /;"	d
CHAR_S	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_S /;"	d
CHAR_SEMICOLON	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_SEMICOLON /;"	d
CHAR_SLASH	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_SLASH /;"	d
CHAR_SPACE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_SPACE /;"	d
CHAR_T	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_T /;"	d
CHAR_TILDE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_TILDE /;"	d
CHAR_U	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_U /;"	d
CHAR_UNDERSCORE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_UNDERSCORE /;"	d
CHAR_V	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_V /;"	d
CHAR_VERTICAL_LINE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_VERTICAL_LINE /;"	d
CHAR_VT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_VT /;"	d
CHAR_W	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_W /;"	d
CHAR_X	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_X /;"	d
CHAR_Y	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_Y /;"	d
CHAR_Z	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_Z /;"	d
CHAR_a	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_a /;"	d
CHAR_b	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_b /;"	d
CHAR_c	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_c /;"	d
CHAR_d	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_d /;"	d
CHAR_e	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_e /;"	d
CHAR_f	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_f /;"	d
CHAR_g	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_g /;"	d
CHAR_h	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_h /;"	d
CHAR_i	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_i /;"	d
CHAR_j	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_j /;"	d
CHAR_k	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_k /;"	d
CHAR_l	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_l /;"	d
CHAR_m	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_m /;"	d
CHAR_n	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_n /;"	d
CHAR_o	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_o /;"	d
CHAR_p	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_p /;"	d
CHAR_q	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_q /;"	d
CHAR_r	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_r /;"	d
CHAR_s	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_s /;"	d
CHAR_t	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_t /;"	d
CHAR_u	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_u /;"	d
CHAR_v	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_v /;"	d
CHAR_w	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_w /;"	d
CHAR_x	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_x /;"	d
CHAR_y	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_y /;"	d
CHAR_z	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define CHAR_z /;"	d
CHECK	my_project/libgit2/deps/zlib/inflate.h	/^    CHECK,      \/* i: waiting for 32-bit check value *\/$/;"	e	enum:__anona0359fa00103
CHECKOUT_ACTION_IF	my_project/libgit2/src/libgit2/checkout.c	/^#define CHECKOUT_ACTION_IF(/;"	d	file:
CHECKOUT_ACTION__CONFLICT	my_project/libgit2/src/libgit2/checkout.c	/^	CHECKOUT_ACTION__CONFLICT = 8,$/;"	e	enum:__anon35c6e5c60103	file:
CHECKOUT_ACTION__MAX	my_project/libgit2/src/libgit2/checkout.c	/^	CHECKOUT_ACTION__MAX = 32,$/;"	e	enum:__anon35c6e5c60103	file:
CHECKOUT_ACTION__NONE	my_project/libgit2/src/libgit2/checkout.c	/^	CHECKOUT_ACTION__NONE = 0,$/;"	e	enum:__anon35c6e5c60103	file:
CHECKOUT_ACTION__REMOVE	my_project/libgit2/src/libgit2/checkout.c	/^	CHECKOUT_ACTION__REMOVE = 1,$/;"	e	enum:__anon35c6e5c60103	file:
CHECKOUT_ACTION__REMOVE_AND_UPDATE	my_project/libgit2/src/libgit2/checkout.c	/^	CHECKOUT_ACTION__REMOVE_AND_UPDATE =$/;"	e	enum:__anon35c6e5c60103	file:
CHECKOUT_ACTION__REMOVE_CONFLICT	my_project/libgit2/src/libgit2/checkout.c	/^	CHECKOUT_ACTION__REMOVE_CONFLICT = 16,$/;"	e	enum:__anon35c6e5c60103	file:
CHECKOUT_ACTION__UPDATE_BLOB	my_project/libgit2/src/libgit2/checkout.c	/^	CHECKOUT_ACTION__UPDATE_BLOB = 2,$/;"	e	enum:__anon35c6e5c60103	file:
CHECKOUT_ACTION__UPDATE_CONFLICT	my_project/libgit2/src/libgit2/checkout.c	/^	CHECKOUT_ACTION__UPDATE_CONFLICT = 32,$/;"	e	enum:__anon35c6e5c60103	file:
CHECKOUT_ACTION__UPDATE_SUBMODULE	my_project/libgit2/src/libgit2/checkout.c	/^	CHECKOUT_ACTION__UPDATE_SUBMODULE = 4,$/;"	e	enum:__anon35c6e5c60103	file:
CHECKOUT_INDEX_DONT_WRITE_MASK	my_project/libgit2/src/libgit2/checkout.c	/^#define CHECKOUT_INDEX_DONT_WRITE_MASK /;"	d	file:
CHECK_DVMASK	my_project/libgit2/src/util/hash/sha1dc/ubc_check.h	/^#define CHECK_DVMASK(/;"	d
CHECK_MACRO_FUNC_INIT_EQUAL	my_project/libgit2/tests/libgit2/core/structinit.c	/^#define CHECK_MACRO_FUNC_INIT_EQUAL(/;"	d	file:
CHECK_PARTIAL	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define CHECK_PARTIAL(/;"	d	file:
CHOP	my_project/libgit2/deps/zlib/adler32.c	/^#  define CHOP(/;"	d	file:
CHUNKSIZE	my_project/libgit2/tests/libgit2/filter/stream.c	/^#define CHUNKSIZE /;"	d	file:
CI Improvements	my_project/libgit2/docs/changelog.md	/^## CI Improvements$/;"	s
CI improvements	my_project/libgit2/docs/changelog.md	/^### CI improvements$/;"	S	section:What's Changed
CLAR_FIXTURES	my_project/libgit2/tests/libgit2/CMakeLists.txt	/^set(CLAR_FIXTURES "${PROJECT_SOURCE_DIR}\/tests\/resources\/")$/;"	v
CLAR_FIXTURES	my_project/libgit2/tests/util/CMakeLists.txt	/^set(CLAR_FIXTURES "${libgit2_SOURCE_DIR}\/tests\/resources\/")$/;"	v
CLAR_MAX_PATH	my_project/libgit2/tests/clar/clar/fs.h	/^# define CLAR_MAX_PATH /;"	d
CLAR_PATH	my_project/libgit2/tests/libgit2/CMakeLists.txt	/^set(CLAR_PATH "${PROJECT_SOURCE_DIR}\/tests\/clar")$/;"	v
CLAR_PATH	my_project/libgit2/tests/util/CMakeLists.txt	/^set(CLAR_PATH "${libgit2_SOURCE_DIR}\/tests\/clar")$/;"	v
CLAR_PATH_MAX	my_project/libgit2/tests/clar/clar/sandbox.h	/^#define CLAR_PATH_MAX /;"	d
CLEAN_THREAD_EXIT	my_project/libgit2/src/util/win32/thread.c	/^#define CLEAN_THREAD_EXIT /;"	d	file:
CLEAR_FOR_CORE_FILEMODE	my_project/libgit2/tests/libgit2/repo/template.c	/^#define CLEAR_FOR_CORE_FILEMODE(/;"	d	file:
CLEAR_HASH	my_project/libgit2/deps/zlib/deflate.c	/^#define CLEAR_HASH(/;"	d	file:
CLI_COMMON_OPT	my_project/libgit2/src/cli/common.h	/^#define CLI_COMMON_OPT /;"	d
CLI_COMMON_OPT_CONFIG	my_project/libgit2/src/cli/common.h	/^#define CLI_COMMON_OPT_CONFIG /;"	d
CLI_COMMON_OPT_CONFIG_ENV	my_project/libgit2/src/cli/common.h	/^#define CLI_COMMON_OPT_CONFIG_ENV /;"	d
CLI_COMMON_OPT_HELP	my_project/libgit2/src/cli/common.h	/^#define CLI_COMMON_OPT_HELP /;"	d
CLI_EXIT_ERROR	my_project/libgit2/src/cli/error.h	/^#define CLI_EXIT_ERROR /;"	d
CLI_EXIT_GIT	my_project/libgit2/src/cli/error.h	/^#define CLI_EXIT_GIT /;"	d
CLI_EXIT_OK	my_project/libgit2/src/cli/error.h	/^#define CLI_EXIT_OK /;"	d
CLI_EXIT_OS	my_project/libgit2/src/cli/error.h	/^#define CLI_EXIT_OS /;"	d
CLI_EXIT_USAGE	my_project/libgit2/src/cli/error.h	/^#define CLI_EXIT_USAGE /;"	d
CLI_INCLUDES	my_project/libgit2/src/cli/CMakeLists.txt	/^set(CLI_INCLUDES$/;"	v
CLI_LIBGIT2_LIBRARY	my_project/libgit2/src/cli/CMakeLists.txt	/^	set(CLI_LIBGIT2_LIBRARY libgit2package)$/;"	v
CLI_LIBGIT2_OBJECTS	my_project/libgit2/src/cli/CMakeLists.txt	/^	set(CLI_LIBGIT2_OBJECTS $<TARGET_OBJECTS:libgit2>)$/;"	v
CLI_OPT_PARSE_DEFAULT	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_PARSE_DEFAULT  = 0,$/;"	e	enum:__anond03082330303
CLI_OPT_PARSE_FORCE_GNU	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_PARSE_FORCE_GNU = (1u << 1),$/;"	e	enum:__anond03082330303
CLI_OPT_PARSE_GNU	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_PARSE_GNU = (1u << 0),$/;"	e	enum:__anond03082330303
CLI_OPT_STATUS_DONE	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_STATUS_DONE = 0,$/;"	e	enum:__anond03082330403
CLI_OPT_STATUS_MISSING_ARGUMENT	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_STATUS_MISSING_ARGUMENT = 4,$/;"	e	enum:__anond03082330403
CLI_OPT_STATUS_MISSING_VALUE	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_STATUS_MISSING_VALUE = 3,$/;"	e	enum:__anond03082330403
CLI_OPT_STATUS_OK	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_STATUS_OK = 1,$/;"	e	enum:__anond03082330403
CLI_OPT_STATUS_UNKNOWN_OPTION	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_STATUS_UNKNOWN_OPTION = 2,$/;"	e	enum:__anond03082330403
CLI_OPT_TYPE_ACCUMULATOR	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_TYPE_ACCUMULATOR,$/;"	e	enum:__anond03082330103
CLI_OPT_TYPE_ARG	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_TYPE_ARG,$/;"	e	enum:__anond03082330103
CLI_OPT_TYPE_ARGS	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_TYPE_ARGS,$/;"	e	enum:__anond03082330103
CLI_OPT_TYPE_BOOL	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_TYPE_BOOL,$/;"	e	enum:__anond03082330103
CLI_OPT_TYPE_LITERAL	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_TYPE_LITERAL,$/;"	e	enum:__anond03082330103
CLI_OPT_TYPE_NONE	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_TYPE_NONE = 0,$/;"	e	enum:__anond03082330103
CLI_OPT_TYPE_SWITCH	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_TYPE_SWITCH,$/;"	e	enum:__anond03082330103
CLI_OPT_TYPE_VALUE	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_TYPE_VALUE,$/;"	e	enum:__anond03082330103
CLI_OPT_USAGE_CHOICE	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_USAGE_CHOICE = (1u << 1),$/;"	e	enum:__anond03082330203
CLI_OPT_USAGE_DEFAULT	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_USAGE_DEFAULT  = 0,$/;"	e	enum:__anond03082330203
CLI_OPT_USAGE_HIDDEN	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_USAGE_HIDDEN = (1u << 4),$/;"	e	enum:__anond03082330203
CLI_OPT_USAGE_REQUIRED	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_USAGE_REQUIRED = (1u << 0),$/;"	e	enum:__anond03082330203
CLI_OPT_USAGE_SHOW_LONG	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_USAGE_SHOW_LONG = (1u << 5),$/;"	e	enum:__anond03082330203
CLI_OPT_USAGE_STOP_PARSING	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_USAGE_STOP_PARSING = (1u << 2),$/;"	e	enum:__anond03082330203
CLI_OPT_USAGE_VALUE_OPTIONAL	my_project/libgit2/src/cli/opt.h	/^	CLI_OPT_USAGE_VALUE_OPTIONAL = (1u << 3),$/;"	e	enum:__anond03082330203
CLI_PROGRESS_CHECKING_OUT	my_project/libgit2/src/cli/progress.h	/^	CLI_PROGRESS_CHECKING_OUT$/;"	e	enum:__anonb5f2ec150103
CLI_PROGRESS_INDEXING	my_project/libgit2/src/cli/progress.h	/^	CLI_PROGRESS_INDEXING,$/;"	e	enum:__anonb5f2ec150103
CLI_PROGRESS_INIT	my_project/libgit2/src/cli/progress.h	/^#define CLI_PROGRESS_INIT /;"	d
CLI_PROGRESS_NONE	my_project/libgit2/src/cli/progress.h	/^	CLI_PROGRESS_NONE,$/;"	e	enum:__anonb5f2ec150103
CLI_PROGRESS_RECEIVING	my_project/libgit2/src/cli/progress.h	/^	CLI_PROGRESS_RECEIVING,$/;"	e	enum:__anonb5f2ec150103
CLI_PROGRESS_RESOLVING	my_project/libgit2/src/cli/progress.h	/^	CLI_PROGRESS_RESOLVING,$/;"	e	enum:__anonb5f2ec150103
CLI_cmd_h__	my_project/libgit2/src/cli/cmd.h	/^#define CLI_cmd_h__$/;"	d
CLI_common_h__	my_project/libgit2/src/cli/common.h	/^#define CLI_common_h__$/;"	d
CLI_error_h__	my_project/libgit2/src/cli/error.h	/^#define CLI_error_h__$/;"	d
CLI_opt_h__	my_project/libgit2/src/cli/opt.h	/^#define CLI_opt_h__$/;"	d
CLI_opt_usage_h__	my_project/libgit2/src/cli/opt_usage.h	/^#define CLI_opt_usage_h__$/;"	d
CLI_progress_h__	my_project/libgit2/src/cli/progress.h	/^#define CLI_progress_h__$/;"	d
CLI_sighandler_h__	my_project/libgit2/src/cli/sighandler.h	/^#define CLI_sighandler_h__$/;"	d
CLOSE_FD	my_project/libgit2/src/util/unix/process.c	/^#define CLOSE_FD(/;"	d	file:
CLOSE_HANDLE	my_project/libgit2/src/util/win32/process.c	/^#define CLOSE_HANDLE(/;"	d	file:
CLSID_InternetSecurityManager	my_project/libgit2/src/libgit2/transports/winhttp.c	/^# define CLSID_InternetSecurityManager /;"	d	file:
CLSID_InternetSecurityManager_mingw	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static const CLSID CLSID_InternetSecurityManager_mingw =$/;"	v	typeref:typename:const CLSID	file:
CL_COMMIT_EMAIL	my_project/libgit2/tests/clar/clar_libgit2.c	/^#define CL_COMMIT_EMAIL /;"	d	file:
CL_COMMIT_MSG	my_project/libgit2/tests/clar/clar_libgit2.c	/^#define CL_COMMIT_MSG /;"	d	file:
CL_COMMIT_NAME	my_project/libgit2/tests/clar/clar_libgit2.c	/^#define CL_COMMIT_NAME /;"	d	file:
CL_OUTPUT_CLAP	my_project/libgit2/tests/clar/clar.h	/^	CL_OUTPUT_CLAP,$/;"	e	enum:cl_output_format
CL_OUTPUT_TAP	my_project/libgit2/tests/clar/clar.h	/^	CL_OUTPUT_TAP,$/;"	e	enum:cl_output_format
CL_PERF_TIMER_INIT	my_project/libgit2/tests/clar/clar_libgit2_timer.h	/^#define CL_PERF_TIMER_INIT /;"	d
CL_TEST_FAILURE	my_project/libgit2/tests/clar/clar.h	/^	CL_TEST_FAILURE,$/;"	e	enum:cl_test_status
CL_TEST_NOTRUN	my_project/libgit2/tests/clar/clar.h	/^	CL_TEST_NOTRUN,$/;"	e	enum:cl_test_status
CL_TEST_OK	my_project/libgit2/tests/clar/clar.h	/^	CL_TEST_OK,$/;"	e	enum:cl_test_status
CL_TEST_SKIP	my_project/libgit2/tests/clar/clar.h	/^	CL_TEST_SKIP,$/;"	e	enum:cl_test_status
CL_TRACE	my_project/libgit2/tests/clar/clar.c	/^#define CL_TRACE(/;"	d	file:
CL_TRACE__SUITE_BEGIN	my_project/libgit2/tests/clar/clar.h	/^	CL_TRACE__SUITE_BEGIN,$/;"	e	enum:cl_trace_event
CL_TRACE__SUITE_END	my_project/libgit2/tests/clar/clar.h	/^	CL_TRACE__SUITE_END,$/;"	e	enum:cl_trace_event
CL_TRACE__TEST__BEGIN	my_project/libgit2/tests/clar/clar.h	/^	CL_TRACE__TEST__BEGIN,$/;"	e	enum:cl_trace_event
CL_TRACE__TEST__END	my_project/libgit2/tests/clar/clar.h	/^	CL_TRACE__TEST__END,$/;"	e	enum:cl_trace_event
CL_TRACE__TEST__LONGJMP	my_project/libgit2/tests/clar/clar.h	/^	CL_TRACE__TEST__LONGJMP,$/;"	e	enum:cl_trace_event
CL_TRACE__TEST__RUN_BEGIN	my_project/libgit2/tests/clar/clar.h	/^	CL_TRACE__TEST__RUN_BEGIN,$/;"	e	enum:cl_trace_event
CL_TRACE__TEST__RUN_END	my_project/libgit2/tests/clar/clar.h	/^	CL_TRACE__TEST__RUN_END,$/;"	e	enum:cl_trace_event
CMAKE_BUILD_TYPE	my_project/libgit2/CMakeLists.txt	/^	set(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Choose the type of build, options are: Debug Release/;"	v
CMAKE_C_ARCHIVE_APPEND	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(CMAKE_C_ARCHIVE_APPEND "<CMAKE_AR> Dq  <TARGET> <LINK_FLAGS> <OBJECTS>")$/;"	v
CMAKE_C_ARCHIVE_CREATE	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(CMAKE_C_ARCHIVE_CREATE "<CMAKE_AR> Dqc <TARGET> <LINK_FLAGS> <OBJECTS>")$/;"	v
CMAKE_C_ARCHIVE_FINISH	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(CMAKE_C_ARCHIVE_FINISH "<CMAKE_RANLIB> -D <TARGET>")$/;"	v
CMAKE_C_FLAGS	my_project/libgit2/cmake/AddCFlagIfSupported.cmake	/^		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${_FLAG}")$/;"	v
CMAKE_C_FLAGS	my_project/libgit2/cmake/CheckPrototypeDefinitionSafe.cmake	/^	set(CMAKE_C_FLAGS "${SAVED_CMAKE_C_FLAGS}")$/;"	v	function:check_prototype_definition_safe
CMAKE_C_FLAGS	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")$/;"	v
CMAKE_C_FLAGS	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} \/guard:cf")$/;"	v
CMAKE_C_FLAGS	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(CMAKE_C_FLAGS "-D_POSIX_C_SOURCE=200112L -D__EXTENSIONS__ -D_POSIX_PTHREAD_SEMANTICS ${CMA/;"	v
CMAKE_C_FLAGS	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} \/Gd")$/;"	v
CMAKE_C_FLAGS	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_C_FLAGS "-D_GNU_SOURCE ${CMAKE_C_FLAGS}")$/;"	v
CMAKE_C_FLAGS	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_C_FLAGS "\/GF \/MP \/nologo ${CMAKE_C_FLAGS}")$/;"	v
CMAKE_C_FLAGS_DEBUG	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -D_DEBUG -O0")$/;"	v
CMAKE_C_FLAGS_DEBUG	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} \/Zi \/Od \/D_DEBUG \/RTC1 ${CRT_FLAG_DEBUG}")$/;"	v
CMAKE_C_FLAGS_MINSIZEREL	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_C_FLAGS_MINSIZEREL "\/DNDEBUG \/O1 \/Oy \/GL \/Gy ${CRT_FLAG_RELEASE}")$/;"	v
CMAKE_C_FLAGS_RELEASE	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_C_FLAGS_RELEASE "\/DNDEBUG \/O2 \/Oy \/GL \/Gy ${CRT_FLAG_RELEASE}")$/;"	v
CMAKE_C_FLAGS_RELEASE	my_project/libgit2/deps/chromium-zlib/CMakeLists.txt	/^set(CMAKE_C_FLAGS_RELEASE "-O3 -DNDEBUG")$/;"	v
CMAKE_C_FLAGS_RELWITHDEBINFO	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_C_FLAGS_RELWITHDEBINFO "\/DNDEBUG \/Zi \/O2 \/Oy- \/GL \/Gy ${CRT_FLAG_RELEASE}")$/;"	v
CMAKE_C_FLAGS_RELWITHDEBINFO	my_project/libgit2/deps/chromium-zlib/CMakeLists.txt	/^set(CMAKE_C_FLAGS_RELWITHDEBINFO "-O3 -g -DNDEBUG")$/;"	v
CMAKE_C_STANDARD_LIBRARIES	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(CMAKE_C_STANDARD_LIBRARIES "${CMAKE_C_STANDARD_LIBRARIES} Dbghelp.lib")$/;"	v
CMAKE_EXE_LINKER_FLAGS	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} \/GUARD:CF")$/;"	v
CMAKE_EXE_LINKER_FLAGS	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_EXE_LINKER_FLAGS "\/DYNAMICBASE \/NXCOMPAT \/LARGEADDRESSAWARE \/VERSION:${libgit2_VE/;"	v
CMAKE_EXE_LINKER_FLAGS_DEBUG	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_EXE_LINKER_FLAGS_DEBUG "\/DEBUG")$/;"	v
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL "\/RELEASE \/LTCG \/OPT:REF \/OPT:ICF \/INCREMENTAL:NO")$/;"	v
CMAKE_EXE_LINKER_FLAGS_RELEASE	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_EXE_LINKER_FLAGS_RELEASE "\/RELEASE \/LTCG \/OPT:REF \/OPT:ICF \/INCREMENTAL:NO")$/;"	v
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO "\/DEBUG \/RELEASE \/LTCG \/OPT:REF \/OPT:ICF \/INCRE/;"	v
CMAKE_FIND_LIBRARY_SUFFIXES	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(CMAKE_FIND_LIBRARY_SUFFIXES ".a")$/;"	v
CMAKE_INCLUDE_CURRENT_DIR	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(CMAKE_INCLUDE_CURRENT_DIR 1)$/;"	v
CMAKE_MODULE_PATH	my_project/libgit2/CMakeLists.txt	/^set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}\/cmake")$/;"	v
CMAKE_REQUIRED_FLAGS	my_project/libgit2/fuzzers/CMakeLists.txt	/^	set(CMAKE_REQUIRED_FLAGS "-fsanitize=fuzzer-no-link")$/;"	v
CMAKE_SHARED_LINKER_FLAGS	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS}")$/;"	v
CMAKE_SHARED_LINKER_FLAGS_DEBUG	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_SHARED_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG}")$/;"	v
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL "${CMAKE_EXE_LINKER_FLAGS_MINSIZEREL}")$/;"	v
CMAKE_SHARED_LINKER_FLAGS_RELEASE	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE}")$/;"	v
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO "${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO}")$/;"	v
CMAKE_STATIC_LINKER_FLAGS	my_project/libgit2/cmake/DefaultCFlags.cmake	/^	set(CMAKE_STATIC_LINKER_FLAGS "\/IGNORE:4221")$/;"	v
CMP	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CMP(/;"	d	file:
CMP	my_project/libgit2/deps/xdiff/xhistogram.c	/^#define CMP(/;"	d	file:
CMPTO	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CMPTO(/;"	d	file:
CMT_FILE_FMT	my_project/libgit2/src/libgit2/rebase.c	/^#define CMT_FILE_FMT /;"	d	file:
CMake Coding Style	my_project/libgit2/docs/coding-style.md	/^## CMake Coding Style$/;"	s	chapter:libgit2 Coding Style
CMake Failures	my_project/libgit2/docs/troubleshooting.md	/^CMake Failures$/;"	s	chapter:Troubleshooting libgit2 Problems
CNT	my_project/libgit2/deps/xdiff/xhistogram.c	/^#define CNT(/;"	d	file:
CODELENS	my_project/libgit2/deps/zlib/inflate.h	/^        CODELENS,   \/* i: waiting for length\/lit and distance code lengths *\/$/;"	e	enum:__anona0359fa00103
CODES	my_project/libgit2/deps/zlib/inftrees.h	/^    CODES,$/;"	e	enum:__anon3554db3d0203
COMMAND_NAME	my_project/libgit2/src/cli/cmd_cat_file.c	/^#define COMMAND_NAME /;"	d	file:
COMMAND_NAME	my_project/libgit2/src/cli/cmd_clone.c	/^#define COMMAND_NAME /;"	d	file:
COMMAND_NAME	my_project/libgit2/src/cli/cmd_config.c	/^#define COMMAND_NAME /;"	d	file:
COMMAND_NAME	my_project/libgit2/src/cli/cmd_hash_object.c	/^#define COMMAND_NAME /;"	d	file:
COMMAND_NAME	my_project/libgit2/src/cli/cmd_help.c	/^#define COMMAND_NAME /;"	d	file:
COMMAND_NAME	my_project/libgit2/src/cli/cmd_index_pack.c	/^#define COMMAND_NAME /;"	d	file:
COMMENT	my_project/libgit2/deps/zlib/inflate.h	/^    COMMENT,    \/* i: waiting for end of comment (gzip) *\/$/;"	e	enum:__anona0359fa00103
COMMENT_LINE_CHAR	my_project/libgit2/src/libgit2/trailer.c	/^#define COMMENT_LINE_CHAR /;"	d	file:
COMMENT_STATE	my_project/libgit2/deps/zlib/deflate.h	/^#define COMMENT_STATE /;"	d
COMMIT_ALLOC	my_project/libgit2/src/libgit2/commit_list.h	/^#define COMMIT_ALLOC /;"	d
COMMIT_GRAPH_BLOOM_FILTER_DATA_ID	my_project/libgit2/src/libgit2/commit_graph.c	/^#define COMMIT_GRAPH_BLOOM_FILTER_DATA_ID /;"	d	file:
COMMIT_GRAPH_BLOOM_FILTER_INDEX_ID	my_project/libgit2/src/libgit2/commit_graph.c	/^#define COMMIT_GRAPH_BLOOM_FILTER_INDEX_ID /;"	d	file:
COMMIT_GRAPH_COMMIT_DATA_ID	my_project/libgit2/src/libgit2/commit_graph.c	/^#define COMMIT_GRAPH_COMMIT_DATA_ID /;"	d	file:
COMMIT_GRAPH_EXTRA_EDGE_LIST_ID	my_project/libgit2/src/libgit2/commit_graph.c	/^#define COMMIT_GRAPH_EXTRA_EDGE_LIST_ID /;"	d	file:
COMMIT_GRAPH_OBJECT_ID_VERSION	my_project/libgit2/src/libgit2/commit_graph.c	/^#define COMMIT_GRAPH_OBJECT_ID_VERSION /;"	d	file:
COMMIT_GRAPH_OID_FANOUT_ID	my_project/libgit2/src/libgit2/commit_graph.c	/^#define COMMIT_GRAPH_OID_FANOUT_ID /;"	d	file:
COMMIT_GRAPH_OID_LOOKUP_ID	my_project/libgit2/src/libgit2/commit_graph.c	/^#define COMMIT_GRAPH_OID_LOOKUP_ID /;"	d	file:
COMMIT_GRAPH_SIGNATURE	my_project/libgit2/src/libgit2/commit_graph.c	/^#define COMMIT_GRAPH_SIGNATURE /;"	d	file:
COMMIT_GRAPH_VERSION	my_project/libgit2/src/libgit2/commit_graph.c	/^#define COMMIT_GRAPH_VERSION /;"	d	file:
COMMON_REPO	my_project/libgit2/tests/libgit2/worktree/bare.c	/^#define COMMON_REPO /;"	d	file:
COMMON_REPO	my_project/libgit2/tests/libgit2/worktree/config.c	/^#define COMMON_REPO /;"	d	file:
COMMON_REPO	my_project/libgit2/tests/libgit2/worktree/merge.c	/^#define COMMON_REPO /;"	d	file:
COMMON_REPO	my_project/libgit2/tests/libgit2/worktree/open.c	/^#define COMMON_REPO /;"	d	file:
COMMON_REPO	my_project/libgit2/tests/libgit2/worktree/reflog.c	/^#define COMMON_REPO /;"	d	file:
COMMON_REPO	my_project/libgit2/tests/libgit2/worktree/refs.c	/^#define COMMON_REPO /;"	d	file:
COMMON_REPO	my_project/libgit2/tests/libgit2/worktree/repository.c	/^#define COMMON_REPO /;"	d	file:
COMMON_REPO	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^#define COMMON_REPO /;"	d	file:
COMPILE_BACKTRACKINGPATH	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define COMPILE_BACKTRACKINGPATH(/;"	d	file:
COMPILE_PCRE8	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define COMPILE_PCRE8$/;"	d
COMPILE_PCRE8	my_project/libgit2/deps/pcre/pcre_ord2utf8.c	/^#define COMPILE_PCRE8$/;"	d	file:
COMPILE_WORK_SIZE	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define COMPILE_WORK_SIZE /;"	d	file:
COMPILE_WORK_SIZE_MAX	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define COMPILE_WORK_SIZE_MAX /;"	d	file:
COMPRESS_BUFLEN	my_project/libgit2/src/libgit2/pack-objects.c	/^#define COMPRESS_BUFLEN /;"	d	file:
CONFIG_FETCH_FMT	my_project/libgit2/src/libgit2/remote.c	/^#define CONFIG_FETCH_FMT /;"	d	file:
CONFIG_FILE_TYPE	my_project/libgit2/src/libgit2/config_file.c	/^#define CONFIG_FILE_TYPE /;"	d	file:
CONFIG_PUSHURL_FMT	my_project/libgit2/src/libgit2/remote.c	/^#define CONFIG_PUSHURL_FMT /;"	d	file:
CONFIG_PUSH_FMT	my_project/libgit2/src/libgit2/remote.c	/^#define CONFIG_PUSH_FMT /;"	d	file:
CONFIG_TAGOPT_FMT	my_project/libgit2/src/libgit2/remote.c	/^#define CONFIG_TAGOPT_FMT /;"	d	file:
CONFIG_URL_FMT	my_project/libgit2/src/libgit2/remote.c	/^#define CONFIG_URL_FMT /;"	d	file:
CONFLICTING_ANCESTOR_OID	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define CONFLICTING_ANCESTOR_OID /;"	d	file:
CONFLICTING_DIFF3_FILE	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define CONFLICTING_DIFF3_FILE /;"	d	file:
CONFLICTING_DIFF3_FILE	my_project/libgit2/tests/libgit2/merge/conflict_data.h	/^#define CONFLICTING_DIFF3_FILE /;"	d
CONFLICTING_MERGE_FILE	my_project/libgit2/tests/libgit2/merge/conflict_data.h	/^#define CONFLICTING_MERGE_FILE /;"	d
CONFLICTING_OURS_FILE	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define CONFLICTING_OURS_FILE /;"	d	file:
CONFLICTING_OURS_OID	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define CONFLICTING_OURS_OID /;"	d	file:
CONFLICTING_RECURSIVE_F1_TO_F2	my_project/libgit2/tests/libgit2/merge/conflict_data.h	/^#define CONFLICTING_RECURSIVE_F1_TO_F2 /;"	d
CONFLICTING_RECURSIVE_H2_TO_H1_WITH_DIFF3	my_project/libgit2/tests/libgit2/merge/conflict_data.h	/^#define CONFLICTING_RECURSIVE_H2_TO_H1_WITH_DIFF3 /;"	d
CONFLICTING_REUC_ENTRY	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define CONFLICTING_REUC_ENTRY /;"	d	file:
CONFLICTING_REUC_ENTRY	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define CONFLICTING_REUC_ENTRY /;"	d	file:
CONFLICTING_THEIRS_FILE	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define CONFLICTING_THEIRS_FILE /;"	d	file:
CONFLICTING_THEIRS_OID	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define CONFLICTING_THEIRS_OID /;"	d	file:
CONFLICTING_UNION_FILE	my_project/libgit2/tests/libgit2/merge/conflict_data.h	/^#define CONFLICTING_UNION_FILE /;"	d
CONFLICTING_ZDIFF3_FILE	my_project/libgit2/tests/libgit2/merge/conflict_data.h	/^#define CONFLICTING_ZDIFF3_FILE /;"	d
CONFLICTS_ONE_ANCESTOR_OID	my_project/libgit2/tests/libgit2/index/conflicts.h	/^#define CONFLICTS_ONE_ANCESTOR_OID /;"	d
CONFLICTS_ONE_OUR_OID	my_project/libgit2/tests/libgit2/index/conflicts.h	/^#define CONFLICTS_ONE_OUR_OID /;"	d
CONFLICTS_ONE_THEIR_OID	my_project/libgit2/tests/libgit2/index/conflicts.h	/^#define CONFLICTS_ONE_THEIR_OID /;"	d
CONFLICTS_TWO_ANCESTOR_OID	my_project/libgit2/tests/libgit2/index/conflicts.h	/^#define CONFLICTS_TWO_ANCESTOR_OID /;"	d
CONFLICTS_TWO_OUR_OID	my_project/libgit2/tests/libgit2/index/conflicts.h	/^#define CONFLICTS_TWO_OUR_OID /;"	d
CONFLICTS_TWO_THEIR_OID	my_project/libgit2/tests/libgit2/index/conflicts.h	/^#define CONFLICTS_TWO_THEIR_OID /;"	d
CONFLICT_BRANCH	my_project/libgit2/tests/libgit2/worktree/merge.c	/^#define CONFLICT_BRANCH /;"	d	file:
CONFLICT_BRANCH_FILE_TXT	my_project/libgit2/tests/libgit2/worktree/merge.c	/^#define CONFLICT_BRANCH_FILE_TXT /;"	d	file:
CONST_STRLEN	my_project/libgit2/src/util/util.h	/^#define CONST_STRLEN(/;"	d
CONTENT	my_project/libgit2/tests/libgit2/attr/repo.c	/^#define CONTENT /;"	d	file:
COPY	my_project/libgit2/deps/zlib/gzguts.h	/^#define COPY /;"	d
COPY	my_project/libgit2/deps/zlib/inflate.h	/^        COPY,       \/* i\/o: waiting for input or output to copy stored block *\/$/;"	e	enum:__anona0359fa00103
COPY_	my_project/libgit2/deps/zlib/inflate.h	/^        COPY_,      \/* i\/o: same as COPY below, but only first time in *\/$/;"	e	enum:__anona0359fa00103
COPY_RENAME_COMMIT	my_project/libgit2/tests/libgit2/diff/rename.c	/^#define COPY_RENAME_COMMIT /;"	d	file:
COREFOUNDATION_FOUND	my_project/libgit2/cmake/FindCoreFoundation.cmake	/^	set(COREFOUNDATION_FOUND TRUE)$/;"	v
COREFOUNDATION_LDFLAGS	my_project/libgit2/cmake/FindCoreFoundation.cmake	/^	set(COREFOUNDATION_LDFLAGS "-framework CoreFoundation")$/;"	v
COUNT_MATCH	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define COUNT_MATCH /;"	d	file:
CRC2	my_project/libgit2/deps/zlib/inflate.c	/^#  define CRC2(/;"	d	file:
CRC4	my_project/libgit2/deps/zlib/inflate.c	/^#  define CRC4(/;"	d	file:
CRLF_NUM_TEST_OBJECTS	my_project/libgit2/tests/libgit2/object/blob/filter.c	/^#define CRLF_NUM_TEST_OBJECTS	/;"	d	file:
CRT_FLAG_DEBUG	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(CRT_FLAG_DEBUG "${CRT_FLAG_DEBUG}")$/;"	v
CRT_FLAG_DEBUG	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(CRT_FLAG_DEBUG "\/MDd")$/;"	v
CRT_FLAG_DEBUG	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(CRT_FLAG_DEBUG "\/MTd")$/;"	v
CRT_FLAG_RELEASE	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(CRT_FLAG_RELEASE "\/MD")$/;"	v
CRT_FLAG_RELEASE	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(CRT_FLAG_RELEASE "\/MT")$/;"	v
CRYPTO_EX_DATA	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef void * CRYPTO_EX_DATA;$/;"	t	typeref:typename:void *
CRYPTO_LOCK	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define CRYPTO_LOCK /;"	d
CRYPTO_THREADID	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef void CRYPTO_THREADID;$/;"	t	typeref:typename:void
CRYPTO_THREADID_set_callback	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*CRYPTO_THREADID_set_callback)(void (*func)(CRYPTO_THREADID *id));$/;"	v	typeref:typename:int (*)(void (* func)(CRYPTO_THREADID * id))
CRYPTO_THREADID_set_numeric	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*CRYPTO_THREADID_set_numeric)(CRYPTO_THREADID *id, unsigned long val);$/;"	v	typeref:typename:void (*)(CRYPTO_THREADID * id,unsigned long val)
CRYPTO_free	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*CRYPTO_free)(void *ptr, const char *file, int line);$/;"	v	typeref:typename:void (*)(void * ptr,const char * file,int line)
CRYPTO_malloc	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void *(*CRYPTO_malloc)(size_t num, const char *file, int line);$/;"	v	typeref:typename:void * (*)(size_t num,const char * file,int line)
CRYPTO_num_locks	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*CRYPTO_num_locks)(void);$/;"	v	typeref:typename:int (*)(void)
CRYPTO_set_locking_callback	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*CRYPTO_set_locking_callback)(void (*func)(int mode, int type, const char *file, int line)/;"	v	typeref:typename:void (*)(void (* func)(int mode,int type,const char * file,int line))
CRYPTO_set_mem_functions	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*CRYPTO_set_mem_functions)(void *(*m)(size_t bytes), void *(*r)(void *mem, size_t size), vo/;"	v	typeref:typename:int (*)(void * (* m)(size_t bytes),void * (* r)(void * mem,size_t size),void (* f)(void * mem))
CRYPT_COMMONCRYPTO	my_project/libgit2/src/libgit2/transports/auth_ntlm.h	/^# define CRYPT_COMMONCRYPTO$/;"	d
CRYPT_DES_BLOCKSIZE	my_project/libgit2/deps/ntlmclient/crypt.h	/^#define CRYPT_DES_BLOCKSIZE /;"	d
CRYPT_MBEDTLS	my_project/libgit2/src/libgit2/transports/auth_ntlm.h	/^# define CRYPT_MBEDTLS$/;"	d
CRYPT_MD4_DIGESTSIZE	my_project/libgit2/deps/ntlmclient/crypt.h	/^#define CRYPT_MD4_DIGESTSIZE /;"	d
CRYPT_MD5_DIGESTSIZE	my_project/libgit2/deps/ntlmclient/crypt.h	/^#define CRYPT_MD5_DIGESTSIZE /;"	d
CRYPT_OPENSSL	my_project/libgit2/src/libgit2/transports/auth_ntlm.h	/^# define CRYPT_OPENSSL$/;"	d
CURRENT_AS	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define CURRENT_AS(/;"	d	file:
CURRENT_FILE	my_project/libgit2/src/libgit2/rebase.c	/^#define CURRENT_FILE /;"	d	file:
CUSTOM_CERT_ONE_PATH	my_project/libgit2/tests/libgit2/online/customcert.c	/^#define CUSTOM_CERT_ONE_PATH /;"	d	file:
CUSTOM_CERT_ONE_URL	my_project/libgit2/tests/libgit2/online/customcert.c	/^#define CUSTOM_CERT_ONE_URL /;"	d	file:
CUSTOM_CERT_TWO_FILE	my_project/libgit2/tests/libgit2/online/customcert.c	/^#define CUSTOM_CERT_TWO_FILE /;"	d	file:
CUSTOM_CERT_TWO_URL	my_project/libgit2/tests/libgit2/online/customcert.c	/^#define CUSTOM_CERT_TWO_URL /;"	d	file:
CallbacksTemplate	my_project/libgit2/tests/clar/generate.py	/^    class CallbacksTemplate(Template):$/;"	c	class:Module
Case	my_project/libgit2/docs/coding-style.md	/^### Case$/;"	S	section:libgit2 Coding Style""CMake Coding Style
Changes or improvements	my_project/libgit2/docs/changelog.md	/^### Changes or improvements$/;"	S	section:Security Fixes""v0.22
Changes or improvements	my_project/libgit2/docs/changelog.md	/^### Changes or improvements$/;"	S	section:Security Fixes""v0.23
Changes or improvements	my_project/libgit2/docs/changelog.md	/^### Changes or improvements$/;"	S	section:Security Fixes""v0.24
Changes or improvements	my_project/libgit2/docs/changelog.md	/^### Changes or improvements$/;"	S	section:Security Fixes""v0.25
Changes or improvements	my_project/libgit2/docs/changelog.md	/^### Changes or improvements$/;"	S	section:Security Fixes""v0.26
Changes or improvements	my_project/libgit2/docs/changelog.md	/^### Changes or improvements$/;"	S	section:Security Fixes""v0.27
Changes or improvements	my_project/libgit2/docs/changelog.md	/^### Changes or improvements$/;"	S	section:Security Fixes""v0.28
Changes or improvements	my_project/libgit2/docs/changelog.md	/^### Changes or improvements$/;"	S	section:v0.99
Changes or improvements	my_project/libgit2/docs/changelog.md	/^### Changes or improvements$/;"	S	section:v1.0
Changes or improvements	my_project/libgit2/docs/changelog.md	/^### Changes or improvements$/;"	S	section:v1.1
Checkout From 3 Iterators (2 not workdir, 1 workdir)	my_project/libgit2/docs/checkout-internals.md	/^Checkout From 3 Iterators (2 not workdir, 1 workdir)$/;"	s	chapter:Picking Actions
Checkout Internals	my_project/libgit2/docs/checkout-internals.md	/^Checkout Internals$/;"	c
Code	my_project/libgit2/deps/zlib/deflate.h	/^#define Code /;"	d
Code Layout	my_project/libgit2/docs/conventions.md	/^## Code Layout$/;"	s	chapter:Libgit2 Conventions
Code cleanups	my_project/libgit2/docs/changelog.md	/^## Code cleanups$/;"	s
Code cleanups	my_project/libgit2/docs/changelog.md	/^### Code cleanups$/;"	S	section:What's Changed
Comments	my_project/libgit2/docs/coding-style.md	/^### Comments$/;"	S	section:libgit2 Coding Style""C Coding Style
Commits	my_project/libgit2/tests/resources/typechanges/README.md	/^Commits$/;"	s
Compatibility	my_project/libgit2/docs/conventions.md	/^## Compatibility$/;"	s	chapter:Libgit2 Conventions
Compiler and linker options	my_project/libgit2/README.md	/^Compiler and linker options$/;"	s	chapter:Building libgit2 - Using CMake
Computed	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    int Computed;                   \/* Is the hash computed? *\/$/;"	m	struct:SHA1Context	typeref:typename:int
Computed	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    int Computed;                   \/* Is the hash computed? *\/$/;"	m	struct:SHA256Context	typeref:typename:int
Computed	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    int Computed;                   \/* Is the hash computed?*\/$/;"	m	struct:SHA512Context	typeref:typename:int
Contributor Covenant Code of Conduct	my_project/libgit2/docs/code_of_conduct.md	/^# Contributor Covenant Code of Conduct$/;"	c
Conventions	my_project/libgit2/README.md	/^Conventions$/;"	c
ConversionFlags	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^} ConversionFlags;$/;"	t	typeref:enum:__anon2762a15e0203	file:
ConversionResult	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^} ConversionResult;$/;"	t	typeref:enum:__anon2762a15e0103	file:
ConvertUTF16toUTF8	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^static ConversionResult ConvertUTF16toUTF8 ($/;"	f	typeref:typename:ConversionResult	file:
ConvertUTF8toUTF16	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^static ConversionResult ConvertUTF8toUTF16 ($/;"	f	typeref:typename:ConversionResult	file:
Corrupted	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    int Corrupted;                  \/* Cumulative corruption code *\/$/;"	m	struct:SHA1Context	typeref:typename:int
Corrupted	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    int Corrupted;                  \/* Cumulative corruption code *\/$/;"	m	struct:SHA256Context	typeref:typename:int
Corrupted	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    int Corrupted;                  \/* Cumulative corruption code *\/$/;"	m	struct:SHA512Context	typeref:typename:int
D	my_project/libgit2/src/util/wildmatch.c	/^	D = GIT_DIGIT,$/;"	e	enum:__anon8b99d91e0103	file:
DATA_LEN	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^#define DATA_LEN /;"	d	file:
DATE_ISO8601	my_project/libgit2/src/util/date.c	/^	DATE_ISO8601,$/;"	e	enum:__anon0f244edf0103	file:
DATE_LOCAL	my_project/libgit2/src/util/date.c	/^	DATE_LOCAL,$/;"	e	enum:__anon0f244edf0103	file:
DATE_NORMAL	my_project/libgit2/src/util/date.c	/^	DATE_NORMAL = 0,$/;"	e	enum:__anon0f244edf0103	file:
DATE_RAW	my_project/libgit2/src/util/date.c	/^	DATE_RAW$/;"	e	enum:__anon0f244edf0103	file:
DATE_RELATIVE	my_project/libgit2/src/util/date.c	/^	DATE_RELATIVE,$/;"	e	enum:__anon0f244edf0103	file:
DATE_RFC2822	my_project/libgit2/src/util/date.c	/^	DATE_RFC2822,$/;"	e	enum:__anon0f244edf0103	file:
DATE_SHORT	my_project/libgit2/src/util/date.c	/^	DATE_SHORT,$/;"	e	enum:__anon0f244edf0103	file:
DEBUG_POOL	my_project/libgit2/CMakeLists.txt	/^option(DEBUG_POOL              "Enable debug pool allocator"                           OFF)$/;"	D
DEBUG_STRICT_ALLOC	my_project/libgit2/CMakeLists.txt	/^option(DEBUG_STRICT_ALLOC      "Enable strict allocator behavior"                      OFF)$/;"	D
DEBUG_STRICT_OPEN	my_project/libgit2/CMakeLists.txt	/^option(DEBUG_STRICT_OPEN       "Enable path validation in open"                        OFF)$/;"	D
DEFAULT_BREAK_REWRITE_THRESHOLD	my_project/libgit2/src/libgit2/diff_tform.c	/^#define DEFAULT_BREAK_REWRITE_THRESHOLD /;"	d	file:
DEFAULT_CONFLICT_MARKER_SIZE	my_project/libgit2/deps/xdiff/xdiff.h	/^#define DEFAULT_CONFLICT_MARKER_SIZE /;"	d
DEFAULT_CONNECT_TIMEOUT	my_project/libgit2/src/libgit2/transports/winhttp.c	/^#define DEFAULT_CONNECT_TIMEOUT /;"	d	file:
DEFAULT_FILE_LIMIT	my_project/libgit2/src/libgit2/mwindow.c	/^#define DEFAULT_FILE_LIMIT /;"	d	file:
DEFAULT_MAPPED_LIMIT	my_project/libgit2/src/libgit2/mwindow.c	/^#define DEFAULT_MAPPED_LIMIT /;"	d	file:
DEFAULT_NESTING_LEVEL	my_project/libgit2/src/libgit2/refdb.c	/^#define DEFAULT_NESTING_LEVEL	/;"	d	file:
DEFAULT_NESTING_LEVEL	my_project/libgit2/src/libgit2/refdb_fs.c	/^#define DEFAULT_NESTING_LEVEL	/;"	d	file:
DEFAULT_PORT_GIT	my_project/libgit2/src/util/net.c	/^#define DEFAULT_PORT_GIT /;"	d	file:
DEFAULT_PORT_HTTP	my_project/libgit2/src/util/net.c	/^#define DEFAULT_PORT_HTTP /;"	d	file:
DEFAULT_PORT_HTTPS	my_project/libgit2/src/util/net.c	/^#define DEFAULT_PORT_HTTPS /;"	d	file:
DEFAULT_PORT_SSH	my_project/libgit2/src/util/net.c	/^#define DEFAULT_PORT_SSH /;"	d	file:
DEFAULT_RENAME_LIMIT	my_project/libgit2/src/libgit2/diff_tform.c	/^#define DEFAULT_RENAME_LIMIT /;"	d	file:
DEFAULT_THRESHOLD	my_project/libgit2/src/libgit2/diff_tform.c	/^#define DEFAULT_THRESHOLD /;"	d	file:
DEFAULT_TREE_SIZE	my_project/libgit2/src/libgit2/tree.c	/^#define DEFAULT_TREE_SIZE /;"	d	file:
DEFAULT_WINDOW_SIZE	my_project/libgit2/src/libgit2/mwindow.c	/^#define DEFAULT_WINDOW_SIZE /;"	d	file:
DEFINE_COMPILER	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define DEFINE_COMPILER /;"	d	file:
DEFLATE_H	my_project/libgit2/deps/zlib/deflate.h	/^#define DEFLATE_H$/;"	d
DEF_MEM_LEVEL	my_project/libgit2/deps/zlib/gzguts.h	/^#  define DEF_MEM_LEVEL /;"	d
DEF_MEM_LEVEL	my_project/libgit2/deps/zlib/zutil.h	/^#  define DEF_MEM_LEVEL /;"	d
DEF_WBITS	my_project/libgit2/deps/zlib/zutil.h	/^#  define DEF_WBITS /;"	d
DELETE_RENAME_COMMIT	my_project/libgit2/tests/libgit2/diff/rename.c	/^#define DELETE_RENAME_COMMIT /;"	d	file:
DELTA_HEADER_BUFFER_LEN	my_project/libgit2/src/libgit2/delta.c	/^#define DELTA_HEADER_BUFFER_LEN /;"	d	file:
DEPRECATE_HARD	my_project/libgit2/CMakeLists.txt	/^option(DEPRECATE_HARD          "Do not include deprecated functions in the library"    OFF)$/;"	D
DESTROY_REGISTERS	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define DESTROY_REGISTERS /;"	d	file:
DES_ENCRYPT	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^#define DES_ENCRYPT /;"	d
DES_LONG	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^typedef unsigned long DES_LONG;$/;"	t	typeref:typename:unsigned long
DES_cblock	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^typedef unsigned char DES_cblock[8];$/;"	t	typeref:typename:unsigned char[8]
DES_key_schedule	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^} DES_key_schedule;$/;"	t	typeref:struct:DES_ks
DES_ks	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^typedef struct DES_ks {$/;"	s
DF_SIDE1_BRANCH	my_project/libgit2/tests/libgit2/merge/trees/modeconflict.c	/^#define DF_SIDE1_BRANCH	/;"	d	file:
DF_SIDE2_BRANCH	my_project/libgit2/tests/libgit2/merge/trees/modeconflict.c	/^#define DF_SIDE2_BRANCH	/;"	d	file:
DICT	my_project/libgit2/deps/zlib/inflate.h	/^    DICT,       \/* waiting for inflateSetDictionary() call *\/$/;"	e	enum:__anona0359fa00103
DICTID	my_project/libgit2/deps/zlib/inflate.h	/^    DICTID,     \/* i: waiting for dictionary check value *\/$/;"	e	enum:__anona0359fa00103
DIFF_ADD_FILE	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_ADD_FILE /;"	d
DIFF_ADD_INVALID_FILENAME	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_ADD_INVALID_FILENAME /;"	d
DIFF_DELETE_AND_READD_FILE	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_DELETE_AND_READD_FILE /;"	d
DIFF_DELETE_FILE	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_DELETE_FILE /;"	d
DIFF_DRIVER_AUTO	my_project/libgit2/src/libgit2/diff_driver.c	/^	DIFF_DRIVER_AUTO = 0,$/;"	e	enum:__anon9fad28f40103	file:
DIFF_DRIVER_BINARY	my_project/libgit2/src/libgit2/diff_driver.c	/^	DIFF_DRIVER_BINARY = 1,$/;"	e	enum:__anon9fad28f40103	file:
DIFF_DRIVER_PATTERNLIST	my_project/libgit2/src/libgit2/diff_driver.c	/^	DIFF_DRIVER_PATTERNLIST = 3$/;"	e	enum:__anon9fad28f40103	file:
DIFF_DRIVER_TEXT	my_project/libgit2/src/libgit2/diff_driver.c	/^	DIFF_DRIVER_TEXT = 2,$/;"	e	enum:__anon9fad28f40103	file:
DIFF_EXECUTABLE_FILE	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_EXECUTABLE_FILE /;"	d
DIFF_FLAGS_KNOWN_BINARY	my_project/libgit2/src/libgit2/diff_generate.h	/^#define DIFF_FLAGS_KNOWN_BINARY /;"	d
DIFF_FLAGS_NOT_BINARY	my_project/libgit2/src/libgit2/diff_generate.h	/^#define DIFF_FLAGS_NOT_BINARY /;"	d
DIFF_FLAG_ISNT_SET	my_project/libgit2/src/libgit2/diff_generate.c	/^#define DIFF_FLAG_ISNT_SET(/;"	d	file:
DIFF_FLAG_IS_SET	my_project/libgit2/src/libgit2/diff_generate.c	/^#define DIFF_FLAG_IS_SET(/;"	d	file:
DIFF_FLAG_SET	my_project/libgit2/src/libgit2/diff_generate.c	/^#define DIFF_FLAG_SET(/;"	d	file:
DIFF_MANY_CHANGES_ONE	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_MANY_CHANGES_ONE /;"	d
DIFF_MANY_CHANGES_TWO	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_MANY_CHANGES_TWO /;"	d
DIFF_MAX_FILESIZE	my_project/libgit2/src/libgit2/diff_file.c	/^#define DIFF_MAX_FILESIZE /;"	d	file:
DIFF_MODIFY_TWO_FILES	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_MODIFY_TWO_FILES /;"	d
DIFF_MODIFY_TWO_FILES_BINARY	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_MODIFY_TWO_FILES_BINARY /;"	d
DIFF_NEW_PREFIX_DEFAULT	my_project/libgit2/src/libgit2/diff.h	/^#define DIFF_NEW_PREFIX_DEFAULT /;"	d
DIFF_OLD_PREFIX_DEFAULT	my_project/libgit2/src/libgit2/diff.h	/^#define DIFF_OLD_PREFIX_DEFAULT /;"	d
DIFF_OPTS	my_project/libgit2/tests/libgit2/diff/tree.c	/^#define DIFF_OPTS(/;"	d	file:
DIFF_REMOVE_FILE_TWICE	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_REMOVE_FILE_TWICE /;"	d
DIFF_RENAME_1_TO_2	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_RENAME_1_TO_2 /;"	d
DIFF_RENAME_2_TO_1	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_RENAME_2_TO_1 /;"	d
DIFF_RENAME_AFTER_MODIFY	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_RENAME_AFTER_MODIFY /;"	d
DIFF_RENAME_AFTER_MODIFY_TARGET_PATH	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_RENAME_AFTER_MODIFY_TARGET_PATH /;"	d
DIFF_RENAME_AND_MODIFY_DELTAS	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_RENAME_AND_MODIFY_DELTAS /;"	d
DIFF_RENAME_AND_MODIFY_FILE	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_RENAME_AND_MODIFY_FILE /;"	d
DIFF_RENAME_AND_MODIFY_SOURCE_PATH	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_RENAME_AND_MODIFY_SOURCE_PATH /;"	d
DIFF_RENAME_A_TO_B_TO_C	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_RENAME_A_TO_B_TO_C /;"	d
DIFF_RENAME_A_TO_B_TO_C_EXACT	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_RENAME_A_TO_B_TO_C_EXACT /;"	d
DIFF_RENAME_CIRCULAR	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_RENAME_CIRCULAR /;"	d
DIFF_RENAME_FILE	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_RENAME_FILE /;"	d
DIFF_RENAME_FILE_SEPARATOR	my_project/libgit2/src/libgit2/diff_stats.c	/^#define DIFF_RENAME_FILE_SEPARATOR /;"	d	file:
DIFF_TWO_DELTAS_ONE_FILE	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_TWO_DELTAS_ONE_FILE /;"	d
DIFF_TWO_DELTAS_ONE_NEW_FILE	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define DIFF_TWO_DELTAS_ONE_NEW_FILE /;"	d
DIR	my_project/libgit2/src/util/win32/dir.h	/^#	define DIR /;"	d
DISABLE_WARNINGS	my_project/libgit2/cmake/EnableWarnings.cmake	/^macro(DISABLE_WARNINGS flag)$/;"	m
DISCOVER_FOLDER	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define DISCOVER_FOLDER /;"	d	file:
DISPLAY_CONTENT	my_project/libgit2/src/cli/cmd_cat_file.c	/^	DISPLAY_CONTENT = 0,$/;"	e	enum:__anon97a0de250103	file:
DISPLAY_EXISTS	my_project/libgit2/src/cli/cmd_cat_file.c	/^	DISPLAY_EXISTS,$/;"	e	enum:__anon97a0de250103	file:
DISPLAY_PRETTY	my_project/libgit2/src/cli/cmd_cat_file.c	/^	DISPLAY_PRETTY,$/;"	e	enum:__anon97a0de250103	file:
DISPLAY_SIZE	my_project/libgit2/src/cli/cmd_cat_file.c	/^	DISPLAY_SIZE,$/;"	e	enum:__anon97a0de250103	file:
DISPLAY_TYPE	my_project/libgit2/src/cli/cmd_cat_file.c	/^	DISPLAY_TYPE$/;"	e	enum:__anon97a0de250103	file:
DIST	my_project/libgit2/deps/zlib/inflate.h	/^            DIST,       \/* i: waiting for distance code *\/$/;"	e	enum:__anona0359fa00103
DISTEXT	my_project/libgit2/deps/zlib/inflate.h	/^            DISTEXT,    \/* i: waiting for distance extra bits *\/$/;"	e	enum:__anona0359fa00103
DISTS	my_project/libgit2/deps/zlib/inftrees.h	/^    DISTS$/;"	e	enum:__anon3554db3d0203
DIST_CODE_LEN	my_project/libgit2/deps/zlib/trees.c	/^#define DIST_CODE_LEN /;"	d	file:
DO1	my_project/libgit2/deps/zlib/adler32.c	/^#define DO1(/;"	d	file:
DO16	my_project/libgit2/deps/zlib/adler32.c	/^#define DO16(/;"	d	file:
DO2	my_project/libgit2/deps/zlib/adler32.c	/^#define DO2(/;"	d	file:
DO4	my_project/libgit2/deps/zlib/adler32.c	/^#define DO4(/;"	d	file:
DO8	my_project/libgit2/deps/zlib/adler32.c	/^#define DO8(/;"	d	file:
DONE	my_project/libgit2/deps/zlib/inflate.h	/^    DONE,       \/* finished check, done -- remain here until reset *\/$/;"	e	enum:__anona0359fa00103
DONE	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	DONE$/;"	e	enum:__anon3d590bbe0303	file:
DOSTORESTATE58	my_project/libgit2/src/util/hash/sha1dc/ubc_check.h	/^#define DOSTORESTATE58$/;"	d
DOSTORESTATE65	my_project/libgit2/src/util/hash/sha1dc/ubc_check.h	/^#define DOSTORESTATE65$/;"	d
DOT_GIT	my_project/libgit2/src/libgit2/repository.h	/^#define DOT_GIT /;"	d
DO_LOCAL_TEST	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^#define DO_LOCAL_TEST /;"	d	file:
DPRINTF	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define DPRINTF(/;"	d
DROPBITS	my_project/libgit2/deps/zlib/infback.c	/^#define DROPBITS(/;"	d	file:
DROPBITS	my_project/libgit2/deps/zlib/inflate.c	/^#define DROPBITS(/;"	d	file:
DVMASKSIZE	my_project/libgit2/src/util/hash/sha1dc/ubc_check.h	/^#define DVMASKSIZE /;"	d
DV_II_45_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_45_0_bit 	= (uint32_t)(1) << 16;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_46_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_46_0_bit 	= (uint32_t)(1) << 17;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_46_2_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_46_2_bit 	= (uint32_t)(1) << 18;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_47_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_47_0_bit 	= (uint32_t)(1) << 19;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_48_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_48_0_bit 	= (uint32_t)(1) << 20;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_49_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_49_0_bit 	= (uint32_t)(1) << 21;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_49_2_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_49_2_bit 	= (uint32_t)(1) << 22;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_50_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_50_0_bit 	= (uint32_t)(1) << 23;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_50_2_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_50_2_bit 	= (uint32_t)(1) << 24;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_51_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_51_0_bit 	= (uint32_t)(1) << 25;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_51_2_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_51_2_bit 	= (uint32_t)(1) << 26;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_52_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_52_0_bit 	= (uint32_t)(1) << 27;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_53_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_53_0_bit 	= (uint32_t)(1) << 28;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_54_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_54_0_bit 	= (uint32_t)(1) << 29;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_55_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_55_0_bit 	= (uint32_t)(1) << 30;$/;"	v	typeref:typename:const uint32_t	file:
DV_II_56_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_II_56_0_bit 	= (uint32_t)(1) << 31;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_43_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_43_0_bit 	= (uint32_t)(1) << 0;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_44_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_44_0_bit 	= (uint32_t)(1) << 1;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_45_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_45_0_bit 	= (uint32_t)(1) << 2;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_46_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_46_0_bit 	= (uint32_t)(1) << 3;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_46_2_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_46_2_bit 	= (uint32_t)(1) << 4;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_47_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_47_0_bit 	= (uint32_t)(1) << 5;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_47_2_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_47_2_bit 	= (uint32_t)(1) << 6;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_48_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_48_0_bit 	= (uint32_t)(1) << 7;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_48_2_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_48_2_bit 	= (uint32_t)(1) << 8;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_49_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_49_0_bit 	= (uint32_t)(1) << 9;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_49_2_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_49_2_bit 	= (uint32_t)(1) << 10;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_50_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_50_0_bit 	= (uint32_t)(1) << 11;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_50_2_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_50_2_bit 	= (uint32_t)(1) << 12;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_51_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_51_0_bit 	= (uint32_t)(1) << 13;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_51_2_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_51_2_bit 	= (uint32_t)(1) << 14;$/;"	v	typeref:typename:const uint32_t	file:
DV_I_52_0_bit	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^static const uint32_t DV_I_52_0_bit 	= (uint32_t)(1) << 15;$/;"	v	typeref:typename:const uint32_t	file:
DWORD_MAX	my_project/libgit2/src/libgit2/transports/winhttp.c	/^# define DWORD_MAX /;"	d	file:
DWORD_MAX	my_project/libgit2/src/util/win32/process.c	/^# define DWORD_MAX /;"	d	file:
DYNAMIC_CRC_TABLE	my_project/libgit2/deps/zlib/crc32.c	/^#    define DYNAMIC_CRC_TABLE$/;"	d	file:
DYN_TREES	my_project/libgit2/deps/zlib/zutil.h	/^#define DYN_TREES /;"	d
D_CODES	my_project/libgit2/deps/zlib/deflate.h	/^#define D_CODES /;"	d
Dad	my_project/libgit2/deps/zlib/deflate.h	/^#define Dad /;"	d
DataBuffer	my_project/libgit2/src/util/win32/reparse.h	/^			UCHAR DataBuffer[1];$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0408	typeref:typename:UCHAR[1]
DeclarationTemplate	my_project/libgit2/tests/clar/generate.py	/^    class DeclarationTemplate(Template):$/;"	c	class:Module
Decode	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^static void Decode (UINT4 *output, const unsigned char *input, unsigned int len)$/;"	f	typeref:typename:void	file:
Dependencies	my_project/libgit2/docs/coding-style.md	/^### Dependencies$/;"	S	section:libgit2 Coding Style""CMake Coding Style
Dependency updates	my_project/libgit2/docs/changelog.md	/^## Dependency updates$/;"	s
Dependency updates	my_project/libgit2/docs/changelog.md	/^### Dependency updates$/;"	S	section:Other changes
Dependency updates	my_project/libgit2/docs/changelog.md	/^### Dependency updates$/;"	S	section:What's Changed
Dependency upgrades	my_project/libgit2/docs/changelog.md	/^### Dependency upgrades$/;"	S	section:Other changes
Deprecated APIs	my_project/libgit2/docs/changelog.md	/^## Deprecated APIs$/;"	s
Development improvements	my_project/libgit2/docs/changelog.md	/^## Development improvements$/;"	s
Deviations from the standard	my_project/libgit2/docs/error-handling.md	/^Deviations from the standard$/;"	s	chapter:Error reporting in libgit2
Diff with 2 non-workdir iterators	my_project/libgit2/docs/checkout-internals.md	/^Diff with 2 non-workdir iterators$/;"	s	chapter:Picking Actions
Diff with non-work & workdir iterators	my_project/libgit2/docs/checkout-internals.md	/^Diff with non-work & workdir iterators$/;"	s	chapter:Picking Actions
Differences from Git	my_project/libgit2/docs/differences-from-git.md	/^# Differences from Git$/;"	c
Discussion & Chat	my_project/libgit2/docs/contributing.md	/^## Discussion & Chat$/;"	s	chapter:Welcome to libgit2!
Documentation	my_project/libgit2/docs/conventions.md	/^## Documentation$/;"	s	chapter:Libgit2 Conventions
Documentation changes	my_project/libgit2/docs/changelog.md	/^## Documentation changes$/;"	s
Documentation improvements	my_project/libgit2/docs/changelog.md	/^## Documentation improvements$/;"	s
Documentation improvements	my_project/libgit2/docs/changelog.md	/^### Documentation improvements$/;"	S	section:Other changes
Documentation improvements	my_project/libgit2/docs/changelog.md	/^### Documentation improvements$/;"	S	section:What's Changed
EAFNOSUPPORT	my_project/libgit2/src/util/posix.h	/^#define EAFNOSUPPORT /;"	d
EDITLINE_FOUND	my_project/libgit2/deps/pcre/cmake/FindEditline.cmake	/^  set(EDITLINE_FOUND TRUE)$/;"	v
ELSEWHERE	my_project/libgit2/tests/libgit2/object/blob/write.c	/^#define ELSEWHERE /;"	d	file:
EMAIL_TIMESTAMP	my_project/libgit2/src/libgit2/email.c	/^#define EMAIL_TIMESTAMP /;"	d	file:
EMBED_SSH_PATH	my_project/libgit2/CMakeLists.txt	/^	option(EMBED_SSH_PATH      "Path to libssh2 to embed (Windows)"                OFF)$/;"	D
EMPTY_HASH	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^#define EMPTY_HASH /;"	d	file:
EMPTY_TREE	my_project/libgit2/tests/libgit2/stash/save.c	/^#define EMPTY_TREE /;"	d	file:
ENABLE_INTSAFE_SIGNED_FUNCTIONS	my_project/libgit2/src/util/integer.h	/^#  define ENABLE_INTSAFE_SIGNED_FUNCTIONS$/;"	d
ENABLE_REPRODUCIBLE_BUILDS	my_project/libgit2/CMakeLists.txt	/^	option(ENABLE_REPRODUCIBLE_BUILDS "Enable reproducible builds"                 OFF)$/;"	D
ENABLE_WARNINGS	my_project/libgit2/cmake/EnableWarnings.cmake	/^macro(ENABLE_WARNINGS flag)$/;"	m
ENABLE_WERROR	my_project/libgit2/CMakeLists.txt	/^option(ENABLE_WERROR           "Enable compilation with -Werror"                       OFF)$/;"	D
END_BLOCK	my_project/libgit2/deps/zlib/trees.c	/^#define END_BLOCK /;"	d	file:
END_FILE	my_project/libgit2/src/libgit2/rebase.c	/^#define END_FILE /;"	d	file:
END_OF_FILE_PENALTY	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define END_OF_FILE_PENALTY /;"	d	file:
ENGINE	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^typedef void ENGINE;$/;"	t	typeref:typename:void
ENOUGH	my_project/libgit2/deps/zlib/inftrees.h	/^#define ENOUGH /;"	d
ENOUGH_DISTS	my_project/libgit2/deps/zlib/inftrees.h	/^#define ENOUGH_DISTS /;"	d
ENOUGH_LENS	my_project/libgit2/deps/zlib/inftrees.h	/^#define ENOUGH_LENS /;"	d
ENSURE_BUF_OK	my_project/libgit2/src/util/filebuf.c	/^#define ENSURE_BUF_OK(/;"	d	file:
ENSURE_INITIALIZED	my_project/libgit2/deps/ntlmclient/ntlm.c	/^#define ENSURE_INITIALIZED(/;"	d	file:
ENSURE_SIZE	my_project/libgit2/src/util/str.c	/^#define ENSURE_SIZE(/;"	d	file:
ENV_MAX	my_project/libgit2/src/util/win32/process.c	/^#define ENV_MAX /;"	d	file:
EOF	my_project/libgit2/ci/test.sh	/^	cat >"${SSHD_DIR}\/sshd_config" <<-EOF$/;"	h
EOF	my_project/libgit2/tests/benchmarks/benchmark_helpers.sh	/^	cat >> "${SANDBOX_DIR}\/prepare.sh" << EOF$/;"	h
EQUAL	my_project/libgit2/deps/zlib/deflate.c	/^#define EQUAL /;"	d	file:
ERR0	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon9562267c0303
ERR1	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon9562267c0303
ERR10	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon9562267c0303
ERR11	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon9562267c0303
ERR12	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon9562267c0303
ERR13	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon9562267c0303
ERR14	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon9562267c0303
ERR15	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon9562267c0303
ERR16	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon9562267c0303
ERR17	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon9562267c0303
ERR18	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon9562267c0303
ERR19	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR10, ERR11, ERR12, ERR13, ERR14, ERR15, ERR16, ERR17, ERR18, ERR19,$/;"	e	enum:__anon9562267c0303
ERR2	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon9562267c0303
ERR20	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon9562267c0303
ERR21	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon9562267c0303
ERR22	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon9562267c0303
ERR23	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon9562267c0303
ERR24	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon9562267c0303
ERR25	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon9562267c0303
ERR26	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon9562267c0303
ERR27	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon9562267c0303
ERR28	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon9562267c0303
ERR29	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR20, ERR21, ERR22, ERR23, ERR24, ERR25, ERR26, ERR27, ERR28, ERR29,$/;"	e	enum:__anon9562267c0303
ERR3	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon9562267c0303
ERR30	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon9562267c0303
ERR31	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon9562267c0303
ERR32	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon9562267c0303
ERR33	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon9562267c0303
ERR34	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon9562267c0303
ERR35	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon9562267c0303
ERR36	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon9562267c0303
ERR37	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon9562267c0303
ERR38	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon9562267c0303
ERR39	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR30, ERR31, ERR32, ERR33, ERR34, ERR35, ERR36, ERR37, ERR38, ERR39,$/;"	e	enum:__anon9562267c0303
ERR4	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon9562267c0303
ERR40	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon9562267c0303
ERR41	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon9562267c0303
ERR42	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon9562267c0303
ERR43	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon9562267c0303
ERR44	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon9562267c0303
ERR45	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon9562267c0303
ERR46	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon9562267c0303
ERR47	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon9562267c0303
ERR48	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon9562267c0303
ERR49	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR40, ERR41, ERR42, ERR43, ERR44, ERR45, ERR46, ERR47, ERR48, ERR49,$/;"	e	enum:__anon9562267c0303
ERR5	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon9562267c0303
ERR50	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anon9562267c0303
ERR51	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anon9562267c0303
ERR52	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anon9562267c0303
ERR53	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anon9562267c0303
ERR54	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anon9562267c0303
ERR55	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anon9562267c0303
ERR56	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anon9562267c0303
ERR57	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anon9562267c0303
ERR58	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anon9562267c0303
ERR59	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR50, ERR51, ERR52, ERR53, ERR54, ERR55, ERR56, ERR57, ERR58, ERR59,$/;"	e	enum:__anon9562267c0303
ERR6	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon9562267c0303
ERR60	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anon9562267c0303
ERR61	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anon9562267c0303
ERR62	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anon9562267c0303
ERR63	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anon9562267c0303
ERR64	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anon9562267c0303
ERR65	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anon9562267c0303
ERR66	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anon9562267c0303
ERR67	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anon9562267c0303
ERR68	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anon9562267c0303
ERR69	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR60, ERR61, ERR62, ERR63, ERR64, ERR65, ERR66, ERR67, ERR68, ERR69,$/;"	e	enum:__anon9562267c0303
ERR7	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon9562267c0303
ERR70	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anon9562267c0303
ERR71	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anon9562267c0303
ERR72	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anon9562267c0303
ERR73	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anon9562267c0303
ERR74	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anon9562267c0303
ERR75	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anon9562267c0303
ERR76	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anon9562267c0303
ERR77	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anon9562267c0303
ERR78	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anon9562267c0303
ERR79	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR70, ERR71, ERR72, ERR73, ERR74, ERR75, ERR76, ERR77, ERR78, ERR79,$/;"	e	enum:__anon9562267c0303
ERR8	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon9562267c0303
ERR80	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anon9562267c0303
ERR81	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anon9562267c0303
ERR82	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anon9562267c0303
ERR83	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anon9562267c0303
ERR84	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anon9562267c0303
ERR85	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anon9562267c0303
ERR86	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anon9562267c0303
ERR87	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anon9562267c0303
ERR9	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	e	enum:__anon9562267c0303
ERRCOUNT	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ERR80, ERR81, ERR82, ERR83, ERR84, ERR85, ERR86, ERR87, ERRCOUNT };$/;"	e	enum:__anon9562267c0303
ERROR_MSG	my_project/libgit2/src/libgit2/reset.c	/^#define ERROR_MSG /;"	d	file:
ERROR_WINHTTP_AUTODETECTION_FAILED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_AUTODETECTION_FAILED /;"	d
ERROR_WINHTTP_AUTO_PROXY_SERVICE_ERROR	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_AUTO_PROXY_SERVICE_ERROR /;"	d
ERROR_WINHTTP_BAD_AUTO_PROXY_SCRIPT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_BAD_AUTO_PROXY_SCRIPT /;"	d
ERROR_WINHTTP_CANNOT_CALL_AFTER_OPEN	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CANNOT_CALL_AFTER_OPEN /;"	d
ERROR_WINHTTP_CANNOT_CALL_AFTER_SEND	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CANNOT_CALL_AFTER_SEND /;"	d
ERROR_WINHTTP_CANNOT_CALL_BEFORE_OPEN	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CANNOT_CALL_BEFORE_OPEN /;"	d
ERROR_WINHTTP_CANNOT_CALL_BEFORE_SEND	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CANNOT_CALL_BEFORE_SEND /;"	d
ERROR_WINHTTP_CANNOT_CONNECT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CANNOT_CONNECT /;"	d
ERROR_WINHTTP_CHUNKED_ENCODING_HEADER_SIZE_OVERFLOW	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CHUNKED_ENCODING_HEADER_SIZE_OVERFLOW /;"	d
ERROR_WINHTTP_CLIENT_AUTH_CERT_NEEDED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CLIENT_AUTH_CERT_NEEDED /;"	d
ERROR_WINHTTP_CLIENT_CERT_NO_ACCESS_PRIVATE_KEY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CLIENT_CERT_NO_ACCESS_PRIVATE_KEY /;"	d
ERROR_WINHTTP_CLIENT_CERT_NO_PRIVATE_KEY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CLIENT_CERT_NO_PRIVATE_KEY /;"	d
ERROR_WINHTTP_CONNECTION_ERROR	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_CONNECTION_ERROR /;"	d
ERROR_WINHTTP_HEADER_ALREADY_EXISTS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_HEADER_ALREADY_EXISTS /;"	d
ERROR_WINHTTP_HEADER_COUNT_EXCEEDED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_HEADER_COUNT_EXCEEDED /;"	d
ERROR_WINHTTP_HEADER_NOT_FOUND	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_HEADER_NOT_FOUND /;"	d
ERROR_WINHTTP_HEADER_SIZE_OVERFLOW	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_HEADER_SIZE_OVERFLOW /;"	d
ERROR_WINHTTP_INCORRECT_HANDLE_STATE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INCORRECT_HANDLE_STATE /;"	d
ERROR_WINHTTP_INCORRECT_HANDLE_TYPE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INCORRECT_HANDLE_TYPE /;"	d
ERROR_WINHTTP_INTERNAL_ERROR	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INTERNAL_ERROR /;"	d
ERROR_WINHTTP_INVALID_HEADER	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INVALID_HEADER /;"	d
ERROR_WINHTTP_INVALID_OPTION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INVALID_OPTION /;"	d
ERROR_WINHTTP_INVALID_QUERY_REQUEST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INVALID_QUERY_REQUEST /;"	d
ERROR_WINHTTP_INVALID_SERVER_RESPONSE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INVALID_SERVER_RESPONSE /;"	d
ERROR_WINHTTP_INVALID_URL	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_INVALID_URL /;"	d
ERROR_WINHTTP_LOGIN_FAILURE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_LOGIN_FAILURE /;"	d
ERROR_WINHTTP_NAME_NOT_RESOLVED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_NAME_NOT_RESOLVED /;"	d
ERROR_WINHTTP_NOT_INITIALIZED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_NOT_INITIALIZED /;"	d
ERROR_WINHTTP_OPERATION_CANCELLED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_OPERATION_CANCELLED /;"	d
ERROR_WINHTTP_OPTION_NOT_SETTABLE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_OPTION_NOT_SETTABLE /;"	d
ERROR_WINHTTP_OUT_OF_HANDLES	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_OUT_OF_HANDLES /;"	d
ERROR_WINHTTP_REDIRECT_FAILED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_REDIRECT_FAILED /;"	d
ERROR_WINHTTP_RESEND_REQUEST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_RESEND_REQUEST /;"	d
ERROR_WINHTTP_RESPONSE_DRAIN_OVERFLOW	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_RESPONSE_DRAIN_OVERFLOW /;"	d
ERROR_WINHTTP_SECURE_CERT_CN_INVALID	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_CERT_CN_INVALID /;"	d
ERROR_WINHTTP_SECURE_CERT_DATE_INVALID	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_CERT_DATE_INVALID /;"	d
ERROR_WINHTTP_SECURE_CERT_REVOKED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_CERT_REVOKED /;"	d
ERROR_WINHTTP_SECURE_CERT_REV_FAILED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_CERT_REV_FAILED /;"	d
ERROR_WINHTTP_SECURE_CERT_WRONG_USAGE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_CERT_WRONG_USAGE /;"	d
ERROR_WINHTTP_SECURE_CHANNEL_ERROR	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_CHANNEL_ERROR /;"	d
ERROR_WINHTTP_SECURE_FAILURE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_FAILURE /;"	d
ERROR_WINHTTP_SECURE_INVALID_CA	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_INVALID_CA /;"	d
ERROR_WINHTTP_SECURE_INVALID_CERT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SECURE_INVALID_CERT /;"	d
ERROR_WINHTTP_SHUTDOWN	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_SHUTDOWN /;"	d
ERROR_WINHTTP_TIMEOUT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_TIMEOUT /;"	d
ERROR_WINHTTP_UNABLE_TO_DOWNLOAD_SCRIPT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_UNABLE_TO_DOWNLOAD_SCRIPT /;"	d
ERROR_WINHTTP_UNRECOGNIZED_SCHEME	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ERROR_WINHTTP_UNRECOGNIZED_SCHEME /;"	d
ERR_MSG	my_project/libgit2/deps/zlib/zutil.h	/^#define ERR_MSG(/;"	d
ERR_RETURN	my_project/libgit2/deps/zlib/zutil.h	/^#define ERR_RETURN(/;"	d
ERR_error_string	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^char *(*ERR_error_string)(unsigned long e, char *buf);$/;"	v	typeref:typename:char * (*)(unsigned long e,char * buf)
ERR_error_string_n	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*ERR_error_string_n)(unsigned long e, char *buf, size_t len);$/;"	v	typeref:typename:void (*)(unsigned long e,char * buf,size_t len)
ERR_get_error	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^unsigned long (*ERR_get_error)(void);$/;"	v	typeref:typename:unsigned long (*)(void)
ESC_A	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anon9562267c0103
ESC_B	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anon9562267c0103
ESC_C	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anon9562267c0103
ESC_D	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anon9562267c0103
ESC_DU	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_DU, ESC_du, ESC_SU, ESC_su, ESC_WU, ESC_wu };$/;"	e	enum:__anon9562267c0103
ESC_E	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_E, ESC_Q, ESC_g, ESC_k,$/;"	e	enum:__anon9562267c0103
ESC_G	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anon9562267c0103
ESC_H	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anon9562267c0103
ESC_K	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anon9562267c0103
ESC_N	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anon9562267c0103
ESC_P	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anon9562267c0103
ESC_Q	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_E, ESC_Q, ESC_g, ESC_k,$/;"	e	enum:__anon9562267c0103
ESC_R	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anon9562267c0103
ESC_S	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anon9562267c0103
ESC_SU	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_DU, ESC_du, ESC_SU, ESC_su, ESC_WU, ESC_wu };$/;"	e	enum:__anon9562267c0103
ESC_V	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_h, ESC_V, ESC_v, ESC_X, ESC_Z, ESC_z,$/;"	e	enum:__anon9562267c0103
ESC_W	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anon9562267c0103
ESC_WU	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_DU, ESC_du, ESC_SU, ESC_su, ESC_WU, ESC_wu };$/;"	e	enum:__anon9562267c0103
ESC_X	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_h, ESC_V, ESC_v, ESC_X, ESC_Z, ESC_z,$/;"	e	enum:__anon9562267c0103
ESC_Z	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_h, ESC_V, ESC_v, ESC_X, ESC_Z, ESC_z,$/;"	e	enum:__anon9562267c0103
ESC_a	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define ESC_a /;"	d
ESC_b	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anon9562267c0103
ESC_d	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anon9562267c0103
ESC_du	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_DU, ESC_du, ESC_SU, ESC_su, ESC_WU, ESC_wu };$/;"	e	enum:__anon9562267c0103
ESC_dum	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anon9562267c0103
ESC_e	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define ESC_e /;"	d
ESC_f	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define ESC_f /;"	d
ESC_g	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_E, ESC_Q, ESC_g, ESC_k,$/;"	e	enum:__anon9562267c0103
ESC_h	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_h, ESC_V, ESC_v, ESC_X, ESC_Z, ESC_z,$/;"	e	enum:__anon9562267c0103
ESC_k	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_E, ESC_Q, ESC_g, ESC_k,$/;"	e	enum:__anon9562267c0103
ESC_n	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define ESC_n /;"	d
ESC_p	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anon9562267c0103
ESC_r	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define ESC_r /;"	d
ESC_s	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	e	enum:__anon9562267c0103
ESC_su	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_DU, ESC_du, ESC_SU, ESC_su, ESC_WU, ESC_wu };$/;"	e	enum:__anon9562267c0103
ESC_tee	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define ESC_tee /;"	d
ESC_v	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_h, ESC_V, ESC_v, ESC_X, ESC_Z, ESC_z,$/;"	e	enum:__anon9562267c0103
ESC_w	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_W, ESC_w, ESC_N, ESC_dum, ESC_C, ESC_P, ESC_p, ESC_R, ESC_H,$/;"	e	enum:__anon9562267c0103
ESC_wu	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_DU, ESC_du, ESC_SU, ESC_su, ESC_WU, ESC_wu };$/;"	e	enum:__anon9562267c0103
ESC_z	my_project/libgit2/deps/pcre/pcre_internal.h	/^       ESC_h, ESC_V, ESC_v, ESC_X, ESC_Z, ESC_z,$/;"	e	enum:__anon9562267c0103
EVEN_PARITY	my_project/libgit2/deps/ntlmclient/ntlm.c	/^#define EVEN_PARITY(/;"	d	file:
EVIL_SM_NAME	my_project/libgit2/tests/libgit2/submodule/escape.c	/^#define EVIL_SM_NAME /;"	d	file:
EVIL_SM_NAME_WINDOWS	my_project/libgit2/tests/libgit2/submodule/escape.c	/^#define EVIL_SM_NAME_WINDOWS /;"	d	file:
EVIL_SM_NAME_WINDOWS_UNESC	my_project/libgit2/tests/libgit2/submodule/escape.c	/^#define EVIL_SM_NAME_WINDOWS_UNESC /;"	d	file:
EVP_MD	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^typedef void EVP_MD;$/;"	t	typeref:typename:void
EVP_MD_CTX	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^typedef struct env_md_ctx_st EVP_MD_CTX;$/;"	t	typeref:struct:env_md_ctx_st
EVP_PKEY_CTX	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^typedef void EVP_PKEY_CTX;$/;"	t	typeref:typename:void
EXISTING_HASH	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^#define EXISTING_HASH /;"	d	file:
EXISTING_HASH	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^#define EXISTING_HASH /;"	d	file:
EXISTING_HASH	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^#define EXISTING_HASH /;"	d	file:
EXLEN	my_project/libgit2/deps/zlib/inflate.h	/^    EXLEN,      \/* i: waiting for extra length (gzip) *\/$/;"	e	enum:__anona0359fa00103
EXPECTATIONS_COUNT	my_project/libgit2/tests/libgit2/notes/notes.c	/^#define EXPECTATIONS_COUNT /;"	d	file:
EXPECTED_HEADER	my_project/libgit2/tests/libgit2/diff/patch.c	/^#define EXPECTED_HEADER /;"	d	file:
EXPECTED_HUNK	my_project/libgit2/tests/libgit2/diff/patch.c	/^#define EXPECTED_HUNK /;"	d	file:
EXPECT_FALSE	my_project/libgit2/tests/libgit2/attr/attr_expect.h	/^	EXPECT_FALSE,$/;"	e	enum:attr_expect_t
EXPECT_STATUS_ADM	my_project/libgit2/tests/libgit2/diff/tree.c	/^#define EXPECT_STATUS_ADM(/;"	d	file:
EXPECT_STRING	my_project/libgit2/tests/libgit2/attr/attr_expect.h	/^	EXPECT_STRING$/;"	e	enum:attr_expect_t
EXPECT_TRUE	my_project/libgit2/tests/libgit2/attr/attr_expect.h	/^	EXPECT_TRUE,$/;"	e	enum:attr_expect_t
EXPECT_UNDEFINED	my_project/libgit2/tests/libgit2/attr/attr_expect.h	/^	EXPECT_UNDEFINED,$/;"	e	enum:attr_expect_t
EXPERIMENTAL	my_project/libgit2/cmake/ExperimentalFeatures.cmake	/^	set(EXPERIMENTAL 1)$/;"	v
EXPERIMENTAL_SHA256	my_project/libgit2/CMakeLists.txt	/^option(EXPERIMENTAL_SHA256     "Enable experimental SHA256 support (for R&D\/testing)"  OFF)$/;"	D
EXTRA	my_project/libgit2/deps/zlib/inflate.h	/^    EXTRA,      \/* i: waiting for extra bytes (gzip) *\/$/;"	e	enum:__anona0359fa00103
EXTRA_STATE	my_project/libgit2/deps/zlib/deflate.h	/^#define EXTRA_STATE /;"	d
Encode	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^static void Encode (unsigned char *output, UINT4 *input, unsigned int len)$/;"	f	typeref:typename:void	file:
Enforcement	my_project/libgit2/docs/code_of_conduct.md	/^## Enforcement$/;"	s	chapter:Contributor Covenant Code of Conduct
Enumerations	my_project/libgit2/docs/conventions.md	/^## Enumerations$/;"	s	chapter:Libgit2 Conventions
Error	my_project/libgit2/script/release.py	/^class Error(Exception):$/;"	c
Error Handling	my_project/libgit2/docs/coding-style.md	/^### Error Handling$/;"	S	section:libgit2 Coding Style""C Coding Style
Error messages	my_project/libgit2/docs/threading.md	/^Error messages$/;"	s	chapter:Threading in libgit2
Error reporting in libgit2	my_project/libgit2/docs/error-handling.md	/^Error reporting in libgit2$/;"	c
Example internal implementation	my_project/libgit2/docs/error-handling.md	/^Example internal implementation$/;"	s	chapter:Error reporting in libgit2
Example usage	my_project/libgit2/docs/error-handling.md	/^Example usage$/;"	s	chapter:Error reporting in libgit2
Exports	my_project/libgit2/docs/conventions.md	/^## Exports$/;"	s	chapter:Libgit2 Conventions
External API	my_project/libgit2/docs/conventions.md	/^## External API$/;"	s	chapter:Libgit2 Conventions
External Objects	my_project/libgit2/docs/diff-internals.md	/^External Objects$/;"	s
F	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define F(/;"	d	file:
F	my_project/libgit2/examples/blame.c	/^	int F;$/;"	m	struct:blame_opts	typeref:typename:int	file:
FAKE_GLOBALCONFIG_NAME	my_project/libgit2/tests/clar/clar_libgit2.c	/^#define FAKE_GLOBALCONFIG_NAME /;"	d	file:
FAKE_HOMEDIR_NAME	my_project/libgit2/tests/clar/clar_libgit2.c	/^#define FAKE_HOMEDIR_NAME /;"	d	file:
FALSE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define FALSE /;"	d
FAR	my_project/libgit2/deps/zlib/zconf.h	/^#      define FAR /;"	d
FAR	my_project/libgit2/deps/zlib/zconf.h	/^#  define FAR$/;"	d
FASTFORWARD_BRANCH	my_project/libgit2/tests/libgit2/merge/analysis.c	/^#define FASTFORWARD_BRANCH /;"	d	file:
FASTFORWARD_ID	my_project/libgit2/tests/libgit2/merge/analysis.c	/^#define FASTFORWARD_ID /;"	d	file:
FETCH_HEAD_EXPLICIT_DATA	my_project/libgit2/tests/libgit2/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_EXPLICIT_DATA /;"	d
FETCH_HEAD_NO_MERGE_DATA	my_project/libgit2/tests/libgit2/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_NO_MERGE_DATA /;"	d
FETCH_HEAD_NO_MERGE_DATA2	my_project/libgit2/tests/libgit2/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_NO_MERGE_DATA2 /;"	d
FETCH_HEAD_NO_MERGE_DATA3	my_project/libgit2/tests/libgit2/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_NO_MERGE_DATA3 /;"	d
FETCH_HEAD_QUOTE_DATA	my_project/libgit2/tests/libgit2/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_QUOTE_DATA /;"	d
FETCH_HEAD_WILDCARD_DATA	my_project/libgit2/tests/libgit2/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_WILDCARD_DATA /;"	d
FETCH_HEAD_WILDCARD_DATA2	my_project/libgit2/tests/libgit2/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_WILDCARD_DATA2 /;"	d
FETCH_HEAD_WILDCARD_DATA_LOCAL	my_project/libgit2/tests/libgit2/fetchhead/fetchhead_data.h	/^#define FETCH_HEAD_WILDCARD_DATA_LOCAL /;"	d
FEW_UTF8_CRLF_RAW	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define FEW_UTF8_CRLF_RAW	/;"	d
FEW_UTF8_CRLF_RAW	my_project/libgit2/tests/util/crlf.h	/^#define FEW_UTF8_CRLF_RAW	/;"	d
FEW_UTF8_LF_RAW	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define FEW_UTF8_LF_RAW	/;"	d
FEW_UTF8_LF_RAW	my_project/libgit2/tests/util/crlf.h	/^#define FEW_UTF8_LF_RAW	/;"	d
FF	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define FF(/;"	d	file:
FILESYSTEM_MAX_DEPTH	my_project/libgit2/src/libgit2/iterator.c	/^#define FILESYSTEM_MAX_DEPTH /;"	d	file:
FILE_APPEND	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_APPEND /;"	d
FILE_APPEND_NO_NL	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_APPEND_NO_NL /;"	d
FILE_BINARY_DELTA_MODIFIED	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_BINARY_DELTA_MODIFIED /;"	d
FILE_BINARY_DELTA_MODIFIED_LEN	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_BINARY_DELTA_MODIFIED_LEN /;"	d
FILE_BINARY_DELTA_ORIGINAL	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_BINARY_DELTA_ORIGINAL /;"	d
FILE_BINARY_DELTA_ORIGINAL_LEN	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_BINARY_DELTA_ORIGINAL_LEN /;"	d
FILE_BINARY_LITERAL_MODIFIED	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_BINARY_LITERAL_MODIFIED /;"	d
FILE_BINARY_LITERAL_MODIFIED_LEN	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_BINARY_LITERAL_MODIFIED_LEN /;"	d
FILE_BINARY_LITERAL_ORIGINAL	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_BINARY_LITERAL_ORIGINAL /;"	d
FILE_BINARY_LITERAL_ORIGINAL_LEN	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_BINARY_LITERAL_ORIGINAL_LEN /;"	d
FILE_CHANGE_FIRSTLINE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_CHANGE_FIRSTLINE /;"	d
FILE_CHANGE_LASTLINE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_CHANGE_LASTLINE /;"	d
FILE_CHANGE_MIDDLE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_CHANGE_MIDDLE /;"	d
FILE_CHANGE_MIDDLE_AND_LASTLINE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_CHANGE_MIDDLE_AND_LASTLINE /;"	d
FILE_CHANGE_MIDDLE_GROW	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_CHANGE_MIDDLE_GROW /;"	d
FILE_CHANGE_MIDDLE_SHRINK	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_CHANGE_MIDDLE_SHRINK /;"	d
FILE_CONTENTS_CRLF	my_project/libgit2/tests/libgit2/index/crlf.c	/^#define FILE_CONTENTS_CRLF /;"	d	file:
FILE_CONTENTS_LF	my_project/libgit2/tests/libgit2/index/crlf.c	/^#define FILE_CONTENTS_LF /;"	d	file:
FILE_DELETE_AND_CHANGE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_DELETE_AND_CHANGE /;"	d
FILE_DELETE_FIRSTLINE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_DELETE_FIRSTLINE /;"	d
FILE_EMPTY_CONTEXT_MODIFIED	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_EMPTY_CONTEXT_MODIFIED /;"	d
FILE_EMPTY_CONTEXT_ORIGINAL	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_EMPTY_CONTEXT_ORIGINAL /;"	d
FILE_NAME_NORMALIZED	my_project/libgit2/src/util/win32/posix_w32.c	/^# define FILE_NAME_NORMALIZED /;"	d	file:
FILE_OID_CRLF	my_project/libgit2/tests/libgit2/index/crlf.c	/^#define FILE_OID_CRLF /;"	d	file:
FILE_OID_LF	my_project/libgit2/tests/libgit2/index/crlf.c	/^#define FILE_OID_LF /;"	d	file:
FILE_ORIGINAL	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_ORIGINAL /;"	d
FILE_PREPEND	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_PREPEND /;"	d
FILE_PREPEND_AND_APPEND	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_PREPEND_AND_APPEND /;"	d
FILE_PREPEND_AND_CHANGE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define FILE_PREPEND_AND_CHANGE /;"	d
FILE_WITHOUT_BRACKET	my_project/libgit2/tests/libgit2/status/worktree_init.c	/^	#define FILE_WITHOUT_BRACKET /;"	d	file:
FILE_WITH_BRACKET	my_project/libgit2/tests/libgit2/status/worktree_init.c	/^	#define FILE_WITH_BRACKET /;"	d	file:
FILE_WITH_SPACE	my_project/libgit2/tests/libgit2/status/worktree_init.c	/^#define FILE_WITH_SPACE /;"	d	file:
FIND_FIRST_EX_LARGE_FETCH	my_project/libgit2/src/util/fs_path.c	/^# define FIND_FIRST_EX_LARGE_FETCH /;"	d	file:
FIND_PACKAGE_HANDLE_STANDARD_ARGS	my_project/libgit2/deps/pcre/cmake/FindPackageHandleStandardArgs.cmake	/^MACRO(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FAIL_MSG _VAR1 )$/;"	m
FIND_PKGLIBRARIES	my_project/libgit2/cmake/FindPkgLibraries.cmake	/^function(FIND_PKGLIBRARIES prefix package)$/;"	f
FINISH_STATE	my_project/libgit2/deps/zlib/deflate.h	/^#define FINISH_STATE /;"	d
FIRST_AUTOTAB_OP	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define FIRST_AUTOTAB_OP /;"	d
FIXTURE_DIR	my_project/libgit2/tests/util/sha1.c	/^#define FIXTURE_DIR /;"	d	file:
FIXTURE_DIR	my_project/libgit2/tests/util/sha256.c	/^#define FIXTURE_DIR /;"	d	file:
FLAGS	my_project/libgit2/deps/zlib/inflate.h	/^    FLAGS,      \/* i: waiting for method and flags (gzip) *\/$/;"	e	enum:__anona0359fa00103
FLAG_BITS	my_project/libgit2/src/libgit2/commit_list.h	/^#define FLAG_BITS /;"	d
FLAG_SET	my_project/libgit2/src/libgit2/diff_tform.c	/^#define FLAG_SET(/;"	d	file:
FLUSH_BLOCK	my_project/libgit2/deps/zlib/deflate.c	/^#define FLUSH_BLOCK(/;"	d	file:
FLUSH_BLOCK_ONLY	my_project/libgit2/deps/zlib/deflate.c	/^#define FLUSH_BLOCK_ONLY(/;"	d	file:
FOO_COMMENT	my_project/libgit2/tests/libgit2/config/write.c	/^#define FOO_COMMENT /;"	d	file:
FORCE_DIFFABLE	my_project/libgit2/src/libgit2/diff_driver.c	/^#define FORCE_DIFFABLE /;"	d	file:
FORCE_FETCHSPEC	my_project/libgit2/tests/libgit2/remote/fetch.c	/^static char *FORCE_FETCHSPEC = "+refs\/heads\/main:refs\/remotes\/repo1\/main";$/;"	v	typeref:typename:char *	file:
FORMAT_DEFAULT	my_project/libgit2/examples/status.c	/^	FORMAT_DEFAULT   = 0,$/;"	e	enum:__anon137acc0f0103	file:
FORMAT_LONG	my_project/libgit2/examples/status.c	/^	FORMAT_LONG      = 1,$/;"	e	enum:__anon137acc0f0103	file:
FORMAT_PORCELAIN	my_project/libgit2/examples/status.c	/^	FORMAT_PORCELAIN = 3$/;"	e	enum:__anon137acc0f0103	file:
FORMAT_SHORT	my_project/libgit2/examples/status.c	/^	FORMAT_SHORT     = 2,$/;"	e	enum:__anon137acc0f0103	file:
FORWARDCHAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define FORWARDCHAR(/;"	d
FRAGMENT	my_project/libgit2/src/util/net.c	/^	enum { PATH, QUERY, FRAGMENT } state = PATH;$/;"	e	enum:url_parse_path::__anon850d8ea80303	file:
FRESHEN_FREQUENCY	my_project/libgit2/src/libgit2/odb_pack.c	/^#define FRESHEN_FREQUENCY /;"	d	file:
FSCTL_GET_REPARSE_POINT	my_project/libgit2/src/util/win32/reparse.h	/^# define FSCTL_GET_REPARSE_POINT	/;"	d
FSCTL_SET_REPARSE_POINT	my_project/libgit2/src/util/win32/reparse.h	/^# define FSCTL_SET_REPARSE_POINT	/;"	d
FUTILS_MAX_DEPTH	my_project/libgit2/src/util/futils.c	/^#define FUTILS_MAX_DEPTH /;"	d	file:
F_CHUNKED	my_project/libgit2/deps/llhttp/llhttp.h	/^  F_CHUNKED = 0x8,$/;"	e	enum:llhttp_flags
F_CONNECTION_CLOSE	my_project/libgit2/deps/llhttp/llhttp.h	/^  F_CONNECTION_CLOSE = 0x2,$/;"	e	enum:llhttp_flags
F_CONNECTION_KEEP_ALIVE	my_project/libgit2/deps/llhttp/llhttp.h	/^  F_CONNECTION_KEEP_ALIVE = 0x1,$/;"	e	enum:llhttp_flags
F_CONNECTION_UPGRADE	my_project/libgit2/deps/llhttp/llhttp.h	/^  F_CONNECTION_UPGRADE = 0x4,$/;"	e	enum:llhttp_flags
F_CONTENT_LENGTH	my_project/libgit2/deps/llhttp/llhttp.h	/^  F_CONTENT_LENGTH = 0x20,$/;"	e	enum:llhttp_flags
F_OK	my_project/libgit2/src/util/posix.h	/^#define F_OK /;"	d
F_OPEN	my_project/libgit2/deps/zlib/zutil.h	/^#  define F_OPEN(/;"	d
F_SKIPBODY	my_project/libgit2/deps/llhttp/llhttp.h	/^  F_SKIPBODY = 0x40,$/;"	e	enum:llhttp_flags
F_TRAILING	my_project/libgit2/deps/llhttp/llhttp.h	/^  F_TRAILING = 0x80,$/;"	e	enum:llhttp_flags
F_TRANSFER_ENCODING	my_project/libgit2/deps/llhttp/llhttp.h	/^  F_TRANSFER_ENCODING = 0x200$/;"	e	enum:llhttp_flags
F_UPGRADE	my_project/libgit2/deps/llhttp/llhttp.h	/^  F_UPGRADE = 0x10,$/;"	e	enum:llhttp_flags
Faker	my_project/libgit2/tests/resources/userdiff/after/file.php	/^namespace Faker;$/;"	n
Faker	my_project/libgit2/tests/resources/userdiff/before/file.php	/^namespace Faker;$/;"	n
Faker	my_project/libgit2/tests/resources/userdiff/files/file.php	/^namespace Faker;$/;"	n
Flags	my_project/libgit2/src/util/win32/reparse.h	/^			ULONG  Flags;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0208	typeref:typename:ULONG
Freq	my_project/libgit2/deps/zlib/deflate.h	/^#define Freq /;"	d
Full release	my_project/libgit2/docs/release.md	/^## Full release$/;"	s	chapter:Releasing the library
Fuzzing	my_project/libgit2/docs/fuzzing.md	/^# Fuzzing$/;"	c
G	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define G(/;"	d	file:
G	my_project/libgit2/src/util/wildmatch.c	/^	G = GIT_GLOB_SPECIAL,	\/* *, ?, [, \\\\ *\/$/;"	e	enum:__anon8b99d91e0103	file:
GENERAL_NAME	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^} GENERAL_NAME;$/;"	t	typeref:struct:__anon6b5cad8b0208
GENERAL_NAMES	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef void GENERAL_NAMES;$/;"	t	typeref:typename:void
GENERAL_NAMES_free	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void GENERAL_NAMES_free(GENERAL_NAME *sk)$/;"	f	typeref:typename:void
GENERATION_NUMBER_COMMIT_STATE_ADDED	my_project/libgit2/src/libgit2/commit_graph.c	/^	GENERATION_NUMBER_COMMIT_STATE_ADDED = 1,$/;"	e	enum:generation_number_commit_state	file:
GENERATION_NUMBER_COMMIT_STATE_EXPANDED	my_project/libgit2/src/libgit2/commit_graph.c	/^	GENERATION_NUMBER_COMMIT_STATE_EXPANDED = 2,$/;"	e	enum:generation_number_commit_state	file:
GENERATION_NUMBER_COMMIT_STATE_UNVISITED	my_project/libgit2/src/libgit2/commit_graph.c	/^	GENERATION_NUMBER_COMMIT_STATE_UNVISITED = 0,$/;"	e	enum:generation_number_commit_state	file:
GENERATION_NUMBER_COMMIT_STATE_VISITED	my_project/libgit2/src/libgit2/commit_graph.c	/^	GENERATION_NUMBER_COMMIT_STATE_VISITED = 3$/;"	e	enum:generation_number_commit_state	file:
GEN_DNS	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define GEN_DNS /;"	d
GEN_IPADD	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define GEN_IPADD /;"	d
GET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GET(/;"	d
GET2	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GET2(/;"	d
GETCHAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GETCHAR(/;"	d
GETCHARINC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GETCHARINC(/;"	d
GETCHARINCTEST	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GETCHARINCTEST(/;"	d
GETCHARLEN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GETCHARLEN(/;"	d
GETCHARLENTEST	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GETCHARLENTEST(/;"	d
GETCHARTEST	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GETCHARTEST(/;"	d
GETUTF16	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GETUTF16(/;"	d
GETUTF16INC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GETUTF16INC(/;"	d
GETUTF16LEN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GETUTF16LEN(/;"	d
GETUTF8	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GETUTF8(/;"	d
GETUTF8INC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GETUTF8INC(/;"	d
GETUTF8LEN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GETUTF8LEN(/;"	d
GET_ALL_ERRORS	my_project/libgit2/src/libgit2/config.c	/^	GET_ALL_ERRORS = 0,$/;"	e	enum:__anona0399aa60403	file:
GET_EXTRALEN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GET_EXTRALEN(/;"	d
GET_LOCAL_BASE	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define GET_LOCAL_BASE(/;"	d	file:
GET_NO_ERRORS	my_project/libgit2/src/libgit2/config.c	/^	GET_NO_ERRORS  = 2$/;"	e	enum:__anona0399aa60403	file:
GET_NO_MISSING	my_project/libgit2/src/libgit2/config.c	/^	GET_NO_MISSING = 1,$/;"	e	enum:__anona0399aa60403	file:
GET_UCD	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define GET_UCD(/;"	d
GG	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define GG(/;"	d	file:
GITATTR	my_project/libgit2/tests/libgit2/attr/repo.c	/^#define GITATTR /;"	d	file:
GITATTR	my_project/libgit2/tests/libgit2/object/blob/fromstream.c	/^#define GITATTR /;"	d	file:
GITERR_CALLBACK	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_CALLBACK /;"	d
GITERR_CHECKOUT	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_CHECKOUT /;"	d
GITERR_CHERRYPICK	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_CHERRYPICK /;"	d
GITERR_CONFIG	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_CONFIG /;"	d
GITERR_DESCRIBE	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_DESCRIBE /;"	d
GITERR_FETCHHEAD	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_FETCHHEAD /;"	d
GITERR_FILESYSTEM	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_FILESYSTEM /;"	d
GITERR_FILTER	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_FILTER /;"	d
GITERR_INDEX	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_INDEX /;"	d
GITERR_INDEXER	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_INDEXER /;"	d
GITERR_INVALID	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_INVALID /;"	d
GITERR_MERGE	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_MERGE /;"	d
GITERR_NET	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_NET /;"	d
GITERR_NOMEMORY	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_NOMEMORY /;"	d
GITERR_NONE	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_NONE /;"	d
GITERR_OBJECT	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_OBJECT /;"	d
GITERR_ODB	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_ODB /;"	d
GITERR_OS	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_OS /;"	d
GITERR_PATCH	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_PATCH /;"	d
GITERR_REBASE	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_REBASE /;"	d
GITERR_REFERENCE	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_REFERENCE /;"	d
GITERR_REGEX	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_REGEX /;"	d
GITERR_REPOSITORY	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_REPOSITORY /;"	d
GITERR_REVERT	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_REVERT /;"	d
GITERR_SHA1	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_SHA1 /;"	d
GITERR_SSH	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_SSH /;"	d
GITERR_SSL	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_SSL /;"	d
GITERR_STASH	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_STASH /;"	d
GITERR_SUBMODULE	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_SUBMODULE /;"	d
GITERR_TAG	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_TAG /;"	d
GITERR_THREAD	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_THREAD /;"	d
GITERR_TREE	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_TREE /;"	d
GITERR_WORKTREE	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_WORKTREE /;"	d
GITERR_ZLIB	my_project/libgit2/include/git2/deprecated.h	/^#define GITERR_ZLIB /;"	d
GITMODULES_CREATE	my_project/libgit2/src/libgit2/submodule.c	/^	GITMODULES_CREATE = 1$/;"	e	enum:__anon705203a00203	file:
GITMODULES_EXISTING	my_project/libgit2/src/libgit2/submodule.c	/^	GITMODULES_EXISTING = 0,$/;"	e	enum:__anon705203a00203	file:
GIT_ABBREV_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_ABBREV_DEFAULT = 7,$/;"	e	enum:__anon453495b50203
GIT_ACK_COMMON	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_ACK_COMMON,$/;"	e	enum:git_ack_status
GIT_ACK_CONTINUE	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_ACK_CONTINUE,$/;"	e	enum:git_ack_status
GIT_ACK_NONE	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_ACK_NONE,$/;"	e	enum:git_ack_status
GIT_ACK_READY	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_ACK_READY$/;"	e	enum:git_ack_status
GIT_ADD_SIZET_OVERFLOW	my_project/libgit2/src/util/git2_util.h	/^#define GIT_ADD_SIZET_OVERFLOW(/;"	d
GIT_ALIGN	my_project/libgit2/src/util/cc-compat.h	/^#	define GIT_ALIGN(/;"	d
GIT_ALPHA	my_project/libgit2/src/util/wildmatch.c	/^#define GIT_ALPHA /;"	d	file:
GIT_ALTERNATES_FILE	my_project/libgit2/src/libgit2/odb.c	/^#define GIT_ALTERNATES_FILE /;"	d	file:
GIT_ALTERNATES_MAX_DEPTH	my_project/libgit2/src/libgit2/odb.c	/^#define GIT_ALTERNATES_MAX_DEPTH /;"	d	file:
GIT_ANNOTATED_COMMIT_REAL	my_project/libgit2/src/libgit2/annotated_commit.h	/^	GIT_ANNOTATED_COMMIT_REAL = 1,$/;"	e	enum:__anon3860199b0103
GIT_ANNOTATED_COMMIT_VIRTUAL	my_project/libgit2/src/libgit2/annotated_commit.h	/^	GIT_ANNOTATED_COMMIT_VIRTUAL = 2$/;"	e	enum:__anon3860199b0103
GIT_APPLY_CHECK	my_project/libgit2/include/git2/apply.h	/^	GIT_APPLY_CHECK = (1 << 0)$/;"	e	enum:__anon9141b5a00103
GIT_APPLY_LOCATION_BOTH	my_project/libgit2/include/git2/apply.h	/^	GIT_APPLY_LOCATION_BOTH = 2$/;"	e	enum:__anon9141b5a00303
GIT_APPLY_LOCATION_INDEX	my_project/libgit2/include/git2/apply.h	/^	GIT_APPLY_LOCATION_INDEX = 1,$/;"	e	enum:__anon9141b5a00303
GIT_APPLY_LOCATION_WORKDIR	my_project/libgit2/include/git2/apply.h	/^	GIT_APPLY_LOCATION_WORKDIR = 0,$/;"	e	enum:__anon9141b5a00303
GIT_APPLY_OPTIONS_INIT	my_project/libgit2/include/git2/apply.h	/^#define GIT_APPLY_OPTIONS_INIT /;"	d
GIT_APPLY_OPTIONS_VERSION	my_project/libgit2/include/git2/apply.h	/^#define GIT_APPLY_OPTIONS_VERSION /;"	d
GIT_ARCH_32	my_project/libgit2/src/CMakeLists.txt	/^	set(GIT_ARCH_32 1)$/;"	v
GIT_ARCH_64	my_project/libgit2/src/CMakeLists.txt	/^	set(GIT_ARCH_64 1)$/;"	v
GIT_ARRAY_INIT	my_project/libgit2/src/util/array.h	/^#define GIT_ARRAY_INIT /;"	d
GIT_ASSERT	my_project/libgit2/src/util/assert_safe.h	/^# define GIT_ASSERT(/;"	d
GIT_ASSERT_ARG	my_project/libgit2/src/util/assert_safe.h	/^# define GIT_ASSERT_ARG(/;"	d
GIT_ASSERT_ARG_WITH_RETVAL	my_project/libgit2/src/util/assert_safe.h	/^# define GIT_ASSERT_ARG_WITH_RETVAL(/;"	d
GIT_ASSERT_HARD	my_project/libgit2/tests/util/assert.c	/^#define GIT_ASSERT_HARD /;"	d	file:
GIT_ASSERT_WITH_CLEANUP	my_project/libgit2/src/util/assert_safe.h	/^# define GIT_ASSERT_WITH_CLEANUP(/;"	d
GIT_ASSERT_WITH_RETVAL	my_project/libgit2/src/util/assert_safe.h	/^# define GIT_ASSERT_WITH_RETVAL(/;"	d
GIT_ASSERT__WITH_CLEANUP	my_project/libgit2/src/util/assert_safe.h	/^# define GIT_ASSERT__WITH_CLEANUP(/;"	d
GIT_ASSERT__WITH_RETVAL	my_project/libgit2/src/util/assert_safe.h	/^# define GIT_ASSERT__WITH_RETVAL(/;"	d
GIT_ATTR_CHECK_FILE_THEN_INDEX	my_project/libgit2/include/git2/attr.h	/^#define GIT_ATTR_CHECK_FILE_THEN_INDEX	/;"	d
GIT_ATTR_CHECK_INCLUDE_COMMIT	my_project/libgit2/include/git2/attr.h	/^#define GIT_ATTR_CHECK_INCLUDE_COMMIT /;"	d
GIT_ATTR_CHECK_INCLUDE_HEAD	my_project/libgit2/include/git2/attr.h	/^#define GIT_ATTR_CHECK_INCLUDE_HEAD /;"	d
GIT_ATTR_CHECK_INDEX_ONLY	my_project/libgit2/include/git2/attr.h	/^#define GIT_ATTR_CHECK_INDEX_ONLY	/;"	d
GIT_ATTR_CHECK_INDEX_THEN_FILE	my_project/libgit2/include/git2/attr.h	/^#define GIT_ATTR_CHECK_INDEX_THEN_FILE	/;"	d
GIT_ATTR_CHECK_NO_SYSTEM	my_project/libgit2/include/git2/attr.h	/^#define GIT_ATTR_CHECK_NO_SYSTEM /;"	d
GIT_ATTR_CONFIG	my_project/libgit2/src/libgit2/attrcache.h	/^#define GIT_ATTR_CONFIG /;"	d
GIT_ATTR_FALSE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_ATTR_FALSE(/;"	d
GIT_ATTR_FALSE_T	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_ATTR_FALSE_T /;"	d
GIT_ATTR_FILE	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FILE	/;"	d
GIT_ATTR_FILE_INREPO	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FILE_INREPO	/;"	d
GIT_ATTR_FILE_NUM_SOURCES	my_project/libgit2/src/libgit2/attr_file.h	/^	GIT_ATTR_FILE_NUM_SOURCES   = 5$/;"	e	enum:__anon0df92d8f0103
GIT_ATTR_FILE_SOURCE_COMMIT	my_project/libgit2/src/libgit2/attr_file.h	/^	GIT_ATTR_FILE_SOURCE_COMMIT = 4,$/;"	e	enum:__anon0df92d8f0103
GIT_ATTR_FILE_SOURCE_FILE	my_project/libgit2/src/libgit2/attr_file.h	/^	GIT_ATTR_FILE_SOURCE_FILE   = 1,$/;"	e	enum:__anon0df92d8f0103
GIT_ATTR_FILE_SOURCE_HEAD	my_project/libgit2/src/libgit2/attr_file.h	/^	GIT_ATTR_FILE_SOURCE_HEAD   = 3,$/;"	e	enum:__anon0df92d8f0103
GIT_ATTR_FILE_SOURCE_INDEX	my_project/libgit2/src/libgit2/attr_file.h	/^	GIT_ATTR_FILE_SOURCE_INDEX  = 2,$/;"	e	enum:__anon0df92d8f0103
GIT_ATTR_FILE_SOURCE_MEMORY	my_project/libgit2/src/libgit2/attr_file.h	/^	GIT_ATTR_FILE_SOURCE_MEMORY = 0,$/;"	e	enum:__anon0df92d8f0103
GIT_ATTR_FILE_SYSTEM	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FILE_SYSTEM	/;"	d
GIT_ATTR_FILE_XDG	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FILE_XDG	/;"	d
GIT_ATTR_FNMATCH_ALLOWMACRO	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FNMATCH_ALLOWMACRO /;"	d
GIT_ATTR_FNMATCH_ALLOWNEG	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FNMATCH_ALLOWNEG /;"	d
GIT_ATTR_FNMATCH_ALLOWSPACE	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FNMATCH_ALLOWSPACE	/;"	d
GIT_ATTR_FNMATCH_DIRECTORY	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FNMATCH_DIRECTORY	/;"	d
GIT_ATTR_FNMATCH_FULLPATH	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FNMATCH_FULLPATH	/;"	d
GIT_ATTR_FNMATCH_HASWILD	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FNMATCH_HASWILD	/;"	d
GIT_ATTR_FNMATCH_ICASE	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FNMATCH_ICASE	/;"	d
GIT_ATTR_FNMATCH_IGNORE	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FNMATCH_IGNORE	/;"	d
GIT_ATTR_FNMATCH_MACRO	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FNMATCH_MACRO	/;"	d
GIT_ATTR_FNMATCH_MATCH_ALL	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FNMATCH_MATCH_ALL	/;"	d
GIT_ATTR_FNMATCH_NEGATIVE	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FNMATCH_NEGATIVE	/;"	d
GIT_ATTR_FNMATCH__INCOMING	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_FNMATCH__INCOMING /;"	d
GIT_ATTR_HAS_VALUE	my_project/libgit2/include/git2/attr.h	/^#define GIT_ATTR_HAS_VALUE(/;"	d
GIT_ATTR_IS_FALSE	my_project/libgit2/include/git2/attr.h	/^#define GIT_ATTR_IS_FALSE(/;"	d
GIT_ATTR_IS_TRUE	my_project/libgit2/include/git2/attr.h	/^#define GIT_ATTR_IS_TRUE(/;"	d
GIT_ATTR_IS_UNSPECIFIED	my_project/libgit2/include/git2/attr.h	/^#define GIT_ATTR_IS_UNSPECIFIED(/;"	d
GIT_ATTR_MAX_FILE_SIZE	my_project/libgit2/src/libgit2/attr_file.h	/^#define GIT_ATTR_MAX_FILE_SIZE	/;"	d
GIT_ATTR_OPTIONS_INIT	my_project/libgit2/include/git2/attr.h	/^#define GIT_ATTR_OPTIONS_INIT /;"	d
GIT_ATTR_OPTIONS_VERSION	my_project/libgit2/include/git2/attr.h	/^#define GIT_ATTR_OPTIONS_VERSION /;"	d
GIT_ATTR_TRUE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_ATTR_TRUE(/;"	d
GIT_ATTR_TRUE_T	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_ATTR_TRUE_T /;"	d
GIT_ATTR_UNSPECIFIED	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_ATTR_UNSPECIFIED(/;"	d
GIT_ATTR_UNSPECIFIED_T	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_ATTR_UNSPECIFIED_T /;"	d
GIT_ATTR_VALUE_FALSE	my_project/libgit2/include/git2/attr.h	/^	GIT_ATTR_VALUE_FALSE,  \/**< The attribute has been unset *\/$/;"	e	enum:__anon790e91d50103
GIT_ATTR_VALUE_STRING	my_project/libgit2/include/git2/attr.h	/^	GIT_ATTR_VALUE_STRING  \/**< This attribute has a value *\/$/;"	e	enum:__anon790e91d50103
GIT_ATTR_VALUE_T	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_ATTR_VALUE_T /;"	d
GIT_ATTR_VALUE_TRUE	my_project/libgit2/include/git2/attr.h	/^	GIT_ATTR_VALUE_TRUE,   \/**< The attribute has been set *\/$/;"	e	enum:__anon790e91d50103
GIT_ATTR_VALUE_UNSPECIFIED	my_project/libgit2/include/git2/attr.h	/^	GIT_ATTR_VALUE_UNSPECIFIED = 0, \/**< The attribute has been left unspecified *\/$/;"	e	enum:__anon790e91d50103
GIT_AUTH_STEPS_NTLM	my_project/libgit2/src/libgit2/transports/auth_ntlm.h	/^#define GIT_AUTH_STEPS_NTLM /;"	d
GIT_AUTO_CRLF_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_AUTO_CRLF_DEFAULT = GIT_AUTO_CRLF_FALSE,$/;"	e	enum:__anon453495b50203
GIT_AUTO_CRLF_FALSE	my_project/libgit2/src/libgit2/repository.h	/^	GIT_AUTO_CRLF_FALSE = 0,$/;"	e	enum:__anon453495b50203
GIT_AUTO_CRLF_INPUT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_AUTO_CRLF_INPUT = 2,$/;"	e	enum:__anon453495b50203
GIT_AUTO_CRLF_TRUE	my_project/libgit2/src/libgit2/repository.h	/^	GIT_AUTO_CRLF_TRUE = 1,$/;"	e	enum:__anon453495b50203
GIT_BARE_DIR_MODE	my_project/libgit2/src/libgit2/repository.h	/^#define GIT_BARE_DIR_MODE /;"	d
GIT_BEGIN_DECL	my_project/libgit2/include/git2/common.h	/^# define GIT_BEGIN_DECL /;"	d
GIT_BISECT_LOG_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_BISECT_LOG_FILE /;"	d
GIT_BITVEC_MASK	my_project/libgit2/src/util/bitvec.h	/^#define GIT_BITVEC_MASK(/;"	d
GIT_BITVEC_WORD	my_project/libgit2/src/util/bitvec.h	/^#define GIT_BITVEC_WORD(/;"	d
GIT_BLAME_FIRST_PARENT	my_project/libgit2/include/git2/blame.h	/^	GIT_BLAME_FIRST_PARENT = (1<<4),$/;"	e	enum:__anond3d8179b0103
GIT_BLAME_IGNORE_WHITESPACE	my_project/libgit2/include/git2/blame.h	/^	GIT_BLAME_IGNORE_WHITESPACE = (1<<6)$/;"	e	enum:__anond3d8179b0103
GIT_BLAME_NORMAL	my_project/libgit2/include/git2/blame.h	/^	GIT_BLAME_NORMAL = 0,$/;"	e	enum:__anond3d8179b0103
GIT_BLAME_OPTIONS_INIT	my_project/libgit2/include/git2/blame.h	/^#define GIT_BLAME_OPTIONS_INIT /;"	d
GIT_BLAME_OPTIONS_VERSION	my_project/libgit2/include/git2/blame.h	/^#define GIT_BLAME_OPTIONS_VERSION /;"	d
GIT_BLAME_TRACK_COPIES_ANY_COMMIT_COPIES	my_project/libgit2/include/git2/blame.h	/^	GIT_BLAME_TRACK_COPIES_ANY_COMMIT_COPIES = (1<<3),$/;"	e	enum:__anond3d8179b0103
GIT_BLAME_TRACK_COPIES_SAME_COMMIT_COPIES	my_project/libgit2/include/git2/blame.h	/^	GIT_BLAME_TRACK_COPIES_SAME_COMMIT_COPIES = (1<<2),$/;"	e	enum:__anond3d8179b0103
GIT_BLAME_TRACK_COPIES_SAME_COMMIT_MOVES	my_project/libgit2/include/git2/blame.h	/^	GIT_BLAME_TRACK_COPIES_SAME_COMMIT_MOVES = (1<<1),$/;"	e	enum:__anond3d8179b0103
GIT_BLAME_TRACK_COPIES_SAME_FILE	my_project/libgit2/include/git2/blame.h	/^	GIT_BLAME_TRACK_COPIES_SAME_FILE = (1<<0),$/;"	e	enum:__anond3d8179b0103
GIT_BLAME_USE_MAILMAP	my_project/libgit2/include/git2/blame.h	/^	GIT_BLAME_USE_MAILMAP = (1<<5),$/;"	e	enum:__anond3d8179b0103
GIT_BLOB_FILTER_ATTRIBUTES_FROM_COMMIT	my_project/libgit2/include/git2/blob.h	/^	GIT_BLOB_FILTER_ATTRIBUTES_FROM_COMMIT = (1 << 3)$/;"	e	enum:__anon7acff4790103
GIT_BLOB_FILTER_ATTRIBUTES_FROM_HEAD	my_project/libgit2/include/git2/blob.h	/^	GIT_BLOB_FILTER_ATTRIBUTES_FROM_HEAD = (1 << 2),$/;"	e	enum:__anon7acff4790103
GIT_BLOB_FILTER_ATTTRIBUTES_FROM_HEAD	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_BLOB_FILTER_ATTTRIBUTES_FROM_HEAD /;"	d
GIT_BLOB_FILTER_CHECK_FOR_BINARY	my_project/libgit2/include/git2/blob.h	/^	GIT_BLOB_FILTER_CHECK_FOR_BINARY = (1 << 0),$/;"	e	enum:__anon7acff4790103
GIT_BLOB_FILTER_NO_SYSTEM_ATTRIBUTES	my_project/libgit2/include/git2/blob.h	/^	GIT_BLOB_FILTER_NO_SYSTEM_ATTRIBUTES = (1 << 1),$/;"	e	enum:__anon7acff4790103
GIT_BLOB_FILTER_OPTIONS_INIT	my_project/libgit2/include/git2/blob.h	/^#define GIT_BLOB_FILTER_OPTIONS_INIT /;"	d
GIT_BLOB_FILTER_OPTIONS_VERSION	my_project/libgit2/include/git2/blob.h	/^#define GIT_BLOB_FILTER_OPTIONS_VERSION /;"	d
GIT_BRANCH_ALL	my_project/libgit2/include/git2/types.h	/^	GIT_BRANCH_ALL = GIT_BRANCH_LOCAL|GIT_BRANCH_REMOTE$/;"	e	enum:__anon5cceb56f0303
GIT_BRANCH_DEFAULT	my_project/libgit2/src/libgit2/repository.c	/^#define GIT_BRANCH_DEFAULT /;"	d	file:
GIT_BRANCH_LOCAL	my_project/libgit2/include/git2/types.h	/^	GIT_BRANCH_LOCAL = 1,$/;"	e	enum:__anon5cceb56f0303
GIT_BRANCH_REMOTE	my_project/libgit2/include/git2/types.h	/^	GIT_BRANCH_REMOTE = 2,$/;"	e	enum:__anon5cceb56f0303
GIT_BUFSIZE_DEFAULT	my_project/libgit2/src/util/git2_util.h	/^#define GIT_BUFSIZE_DEFAULT /;"	d
GIT_BUFSIZE_FILEIO	my_project/libgit2/src/util/git2_util.h	/^#define GIT_BUFSIZE_FILEIO /;"	d
GIT_BUFSIZE_FILTERIO	my_project/libgit2/src/util/git2_util.h	/^#define GIT_BUFSIZE_FILTERIO /;"	d
GIT_BUFSIZE_NETIO	my_project/libgit2/src/util/git2_util.h	/^#define GIT_BUFSIZE_NETIO /;"	d
GIT_BUF_INIT	my_project/libgit2/include/git2/buffer.h	/^#define GIT_BUF_INIT /;"	d
GIT_BUF_INIT_CONST	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_BUF_INIT_CONST(/;"	d
GIT_BUF_WRAP_PRIVATE	my_project/libgit2/src/libgit2/buf.h	/^#define GIT_BUF_WRAP_PRIVATE(/;"	d
GIT_BUILTIN_ATOMIC	my_project/libgit2/src/util/thread.h	/^#  define GIT_BUILTIN_ATOMIC$/;"	d
GIT_BUILTIN_SYNC	my_project/libgit2/src/util/thread.h	/^#  define GIT_BUILTIN_SYNC$/;"	d
GIT_CACHE_STORE_ANY	my_project/libgit2/src/libgit2/cache.h	/^	GIT_CACHE_STORE_ANY = 0,$/;"	e	enum:__anon6f0f98290103
GIT_CACHE_STORE_PARSED	my_project/libgit2/src/libgit2/cache.h	/^	GIT_CACHE_STORE_PARSED = 2$/;"	e	enum:__anon6f0f98290103
GIT_CACHE_STORE_RAW	my_project/libgit2/src/libgit2/cache.h	/^	GIT_CACHE_STORE_RAW = 1,$/;"	e	enum:__anon6f0f98290103
GIT_CALLBACK	my_project/libgit2/include/git2/common.h	/^# define GIT_CALLBACK(/;"	d
GIT_CAP_AGENT	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_AGENT /;"	d
GIT_CAP_DELETE_REFS	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_DELETE_REFS /;"	d
GIT_CAP_INCLUDE_TAG	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_INCLUDE_TAG /;"	d
GIT_CAP_MULTI_ACK	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_MULTI_ACK /;"	d
GIT_CAP_MULTI_ACK_DETAILED	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_MULTI_ACK_DETAILED /;"	d
GIT_CAP_OBJECT_FORMAT	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_OBJECT_FORMAT /;"	d
GIT_CAP_OFS_DELTA	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_OFS_DELTA /;"	d
GIT_CAP_PUSH_OPTIONS	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_PUSH_OPTIONS /;"	d
GIT_CAP_REPORT_STATUS	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_REPORT_STATUS /;"	d
GIT_CAP_SHALLOW	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_SHALLOW /;"	d
GIT_CAP_SIDE_BAND	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_SIDE_BAND /;"	d
GIT_CAP_SIDE_BAND_64K	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_SIDE_BAND_64K /;"	d
GIT_CAP_SYMREF	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_SYMREF /;"	d
GIT_CAP_THIN_PACK	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_THIN_PACK /;"	d
GIT_CAP_WANT_REACHABLE_SHA1	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_WANT_REACHABLE_SHA1 /;"	d
GIT_CAP_WANT_TIP_SHA1	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_CAP_WANT_TIP_SHA1 /;"	d
GIT_CERT_HOSTKEY_LIBSSH2	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_HOSTKEY_LIBSSH2,$/;"	e	enum:git_cert_t
GIT_CERT_NONE	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_NONE,$/;"	e	enum:git_cert_t
GIT_CERT_SSH_MD5	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_SSH_MD5 = (1 << 0),$/;"	e	enum:__anon7ca863480103
GIT_CERT_SSH_RAW	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_SSH_RAW = (1 << 3)$/;"	e	enum:__anon7ca863480103
GIT_CERT_SSH_RAW_TYPE_DSS	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_SSH_RAW_TYPE_DSS = 2,$/;"	e	enum:__anon7ca863480203
GIT_CERT_SSH_RAW_TYPE_KEY_ECDSA_256	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_SSH_RAW_TYPE_KEY_ECDSA_256 = 3,$/;"	e	enum:__anon7ca863480203
GIT_CERT_SSH_RAW_TYPE_KEY_ECDSA_384	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_SSH_RAW_TYPE_KEY_ECDSA_384 = 4,$/;"	e	enum:__anon7ca863480203
GIT_CERT_SSH_RAW_TYPE_KEY_ECDSA_521	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_SSH_RAW_TYPE_KEY_ECDSA_521 = 5,$/;"	e	enum:__anon7ca863480203
GIT_CERT_SSH_RAW_TYPE_KEY_ED25519	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_SSH_RAW_TYPE_KEY_ED25519 = 6$/;"	e	enum:__anon7ca863480203
GIT_CERT_SSH_RAW_TYPE_RSA	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_SSH_RAW_TYPE_RSA = 1,$/;"	e	enum:__anon7ca863480203
GIT_CERT_SSH_RAW_TYPE_UNKNOWN	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_SSH_RAW_TYPE_UNKNOWN = 0,$/;"	e	enum:__anon7ca863480203
GIT_CERT_SSH_SHA1	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_SSH_SHA1 = (1 << 1),$/;"	e	enum:__anon7ca863480103
GIT_CERT_SSH_SHA256	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_SSH_SHA256 = (1 << 2),$/;"	e	enum:__anon7ca863480103
GIT_CERT_STRARRAY	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_STRARRAY$/;"	e	enum:git_cert_t
GIT_CERT_X509	my_project/libgit2/include/git2/cert.h	/^	GIT_CERT_X509,$/;"	e	enum:git_cert_t
GIT_CHECKOUT_ALLOW_CONFLICTS	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_ALLOW_CONFLICTS = (1u << 4),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_CONFLICT_STYLE_DIFF3	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_CONFLICT_STYLE_DIFF3 = (1u << 21),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_CONFLICT_STYLE_MERGE	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_CONFLICT_STYLE_MERGE = (1u << 20),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_CONFLICT_STYLE_ZDIFF3	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_CONFLICT_STYLE_ZDIFF3 = (1u << 25),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_DISABLE_PATHSPEC_MATCH = (1u << 13),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_DONT_OVERWRITE_IGNORED	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_DONT_OVERWRITE_IGNORED = (1u << 19),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_DONT_REMOVE_EXISTING	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_DONT_REMOVE_EXISTING = (1u << 22),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_DONT_UPDATE_INDEX	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_DONT_UPDATE_INDEX = (1u << 8),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_DONT_WRITE_INDEX	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_DONT_WRITE_INDEX = (1u << 23),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_DRY_RUN	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_DRY_RUN = (1u << 24),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_FORCE	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_FORCE = (1u << 1),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_NONE	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NONE = 0, \/**< default is a dry run, no actual updates *\/$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_NOTIFY_ALL	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NOTIFY_ALL       = 0x0FFFFu$/;"	e	enum:__anon65c3b8100203
GIT_CHECKOUT_NOTIFY_CONFLICT	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NOTIFY_CONFLICT  = (1u << 0),$/;"	e	enum:__anon65c3b8100203
GIT_CHECKOUT_NOTIFY_DIRTY	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NOTIFY_DIRTY     = (1u << 1),$/;"	e	enum:__anon65c3b8100203
GIT_CHECKOUT_NOTIFY_IGNORED	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NOTIFY_IGNORED   = (1u << 4),$/;"	e	enum:__anon65c3b8100203
GIT_CHECKOUT_NOTIFY_NONE	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NOTIFY_NONE      = 0,$/;"	e	enum:__anon65c3b8100203
GIT_CHECKOUT_NOTIFY_UNTRACKED	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NOTIFY_UNTRACKED = (1u << 3),$/;"	e	enum:__anon65c3b8100203
GIT_CHECKOUT_NOTIFY_UPDATED	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NOTIFY_UPDATED   = (1u << 2),$/;"	e	enum:__anon65c3b8100203
GIT_CHECKOUT_NO_REFRESH	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_NO_REFRESH = (1u << 9),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_OPTIONS_INIT	my_project/libgit2/include/git2/checkout.h	/^#define GIT_CHECKOUT_OPTIONS_INIT /;"	d
GIT_CHECKOUT_OPTIONS_VERSION	my_project/libgit2/include/git2/checkout.h	/^#define GIT_CHECKOUT_OPTIONS_VERSION /;"	d
GIT_CHECKOUT_RECREATE_MISSING	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_RECREATE_MISSING = (1u << 2),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_REMOVE_IGNORED	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_REMOVE_IGNORED = (1u << 6),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_REMOVE_UNTRACKED	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_REMOVE_UNTRACKED = (1u << 5),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_SAFE	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_SAFE = (1u << 0),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_SKIP_LOCKED_DIRECTORIES	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_SKIP_LOCKED_DIRECTORIES = (1u << 18),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_SKIP_UNMERGED	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_SKIP_UNMERGED = (1u << 10),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_UPDATE_ONLY	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_UPDATE_ONLY = (1u << 7),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_UPDATE_SUBMODULES	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_UPDATE_SUBMODULES = (1u << 16),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_UPDATE_SUBMODULES_IF_CHANGED	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_UPDATE_SUBMODULES_IF_CHANGED = (1u << 17)$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_USE_OURS	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_USE_OURS = (1u << 11),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT_USE_THEIRS	my_project/libgit2/include/git2/checkout.h	/^	GIT_CHECKOUT_USE_THEIRS = (1u << 12),$/;"	e	enum:__anon65c3b8100103
GIT_CHECKOUT__NOTIFY_CONFLICT_TREE	my_project/libgit2/src/libgit2/checkout.h	/^#define GIT_CHECKOUT__NOTIFY_CONFLICT_TREE /;"	d
GIT_CHERRYPICK_FILE_MODE	my_project/libgit2/src/libgit2/cherrypick.c	/^#define GIT_CHERRYPICK_FILE_MODE	/;"	d	file:
GIT_CHERRYPICK_HEAD_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_CHERRYPICK_HEAD_FILE /;"	d
GIT_CHERRYPICK_OPTIONS_INIT	my_project/libgit2/include/git2/cherrypick.h	/^#define GIT_CHERRYPICK_OPTIONS_INIT /;"	d
GIT_CHERRYPICK_OPTIONS_VERSION	my_project/libgit2/include/git2/cherrypick.h	/^#define GIT_CHERRYPICK_OPTIONS_VERSION /;"	d
GIT_CLONE_LOCAL	my_project/libgit2/include/git2/clone.h	/^	GIT_CLONE_LOCAL,$/;"	e	enum:__anon21d037cb0103
GIT_CLONE_LOCAL_AUTO	my_project/libgit2/include/git2/clone.h	/^	GIT_CLONE_LOCAL_AUTO,$/;"	e	enum:__anon21d037cb0103
GIT_CLONE_LOCAL_NO_LINKS	my_project/libgit2/include/git2/clone.h	/^	GIT_CLONE_LOCAL_NO_LINKS$/;"	e	enum:__anon21d037cb0103
GIT_CLONE_NO_LOCAL	my_project/libgit2/include/git2/clone.h	/^	GIT_CLONE_NO_LOCAL,$/;"	e	enum:__anon21d037cb0103
GIT_CLONE_OPTIONS_INIT	my_project/libgit2/include/git2/clone.h	/^#define GIT_CLONE_OPTIONS_INIT /;"	d
GIT_CLONE_OPTIONS_VERSION	my_project/libgit2/include/git2/clone.h	/^#define GIT_CLONE_OPTIONS_VERSION /;"	d
GIT_CNTRL	my_project/libgit2/src/util/wildmatch.c	/^#define GIT_CNTRL /;"	d	file:
GIT_COMMIT_CREATE_OPTIONS_INIT	my_project/libgit2/include/git2/commit.h	/^#define GIT_COMMIT_CREATE_OPTIONS_INIT /;"	d
GIT_COMMIT_CREATE_OPTIONS_VERSION	my_project/libgit2/include/git2/commit.h	/^#define GIT_COMMIT_CREATE_OPTIONS_VERSION /;"	d
GIT_COMMIT_GETTER	my_project/libgit2/src/libgit2/commit.c	/^#define GIT_COMMIT_GETTER(/;"	d	file:
GIT_COMMIT_GRAPH_GENERATION_NUMBER_INFINITY	my_project/libgit2/src/libgit2/commit_graph.c	/^#define GIT_COMMIT_GRAPH_GENERATION_NUMBER_INFINITY /;"	d	file:
GIT_COMMIT_GRAPH_GENERATION_NUMBER_MAX	my_project/libgit2/src/libgit2/commit_graph.c	/^#define GIT_COMMIT_GRAPH_GENERATION_NUMBER_MAX /;"	d	file:
GIT_COMMIT_GRAPH_MISSING_PARENT	my_project/libgit2/src/libgit2/commit_graph.c	/^#define GIT_COMMIT_GRAPH_MISSING_PARENT /;"	d	file:
GIT_COMMIT_GRAPH_SPLIT_STRATEGY_SINGLE_FILE	my_project/libgit2/include/git2/sys/commit_graph.h	/^	GIT_COMMIT_GRAPH_SPLIT_STRATEGY_SINGLE_FILE = 0$/;"	e	enum:__anon6744c2020103
GIT_COMMIT_GRAPH_WRITER_OPTIONS_INIT	my_project/libgit2/include/git2/sys/commit_graph.h	/^#define GIT_COMMIT_GRAPH_WRITER_OPTIONS_INIT /;"	d
GIT_COMMIT_GRAPH_WRITER_OPTIONS_VERSION	my_project/libgit2/include/git2/sys/commit_graph.h	/^#define GIT_COMMIT_GRAPH_WRITER_OPTIONS_VERSION /;"	d
GIT_COMMIT_PARSE_QUICK	my_project/libgit2/src/libgit2/commit.h	/^	GIT_COMMIT_PARSE_QUICK = (1 << 0)$/;"	e	enum:__anon9e6354de0203
GIT_COMMONDIR_FILE	my_project/libgit2/src/libgit2/repository.c	/^#define GIT_COMMONDIR_FILE /;"	d	file:
GIT_CONFIGMAP_ABBREV	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_ABBREV,           \/* core.abbrev *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_AUTO_CRLF	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_AUTO_CRLF = 0,    \/* core.autocrlf *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_CACHE_MAX	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_CACHE_MAX$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_EOL	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_EOL,              \/* core.eol *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_FALSE	my_project/libgit2/include/git2/config.h	/^	GIT_CONFIGMAP_FALSE = 0,$/;"	e	enum:__anon3fe317b00203
GIT_CONFIGMAP_FILEMODE	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_FILEMODE,         \/* core.filemode *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_FSYNCOBJECTFILES	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_FSYNCOBJECTFILES, \/* core.fsyncObjectFiles *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_IGNORECASE	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_IGNORECASE,       \/* core.ignorecase *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_IGNORESTAT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_IGNORESTAT,       \/* core.ignorestat *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_INT32	my_project/libgit2/include/git2/config.h	/^	GIT_CONFIGMAP_INT32,$/;"	e	enum:__anon3fe317b00203
GIT_CONFIGMAP_LOGALLREFUPDATES	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_LOGALLREFUPDATES, \/* core.logallrefupdates *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_LONGPATHS	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_LONGPATHS,        \/* core.longpaths *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_NOT_CACHED	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_NOT_CACHED = -1,$/;"	e	enum:__anon453495b50203
GIT_CONFIGMAP_PRECOMPOSE	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_PRECOMPOSE,       \/* core.precomposeunicode *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_PROTECTHFS	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_PROTECTHFS,       \/* core.protectHFS *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_PROTECTNTFS	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_PROTECTNTFS,      \/* core.protectNTFS *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_SAFE_CRLF	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_SAFE_CRLF,		\/* core.safecrlf *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_STRING	my_project/libgit2/include/git2/config.h	/^	GIT_CONFIGMAP_STRING$/;"	e	enum:__anon3fe317b00203
GIT_CONFIGMAP_SYMLINKS	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_SYMLINKS,         \/* core.symlinks *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIGMAP_TRUE	my_project/libgit2/include/git2/config.h	/^	GIT_CONFIGMAP_TRUE = 1,$/;"	e	enum:__anon3fe317b00203
GIT_CONFIGMAP_TRUSTCTIME	my_project/libgit2/src/libgit2/repository.h	/^	GIT_CONFIGMAP_TRUSTCTIME,       \/* core.trustctime *\/$/;"	e	enum:__anon453495b50103
GIT_CONFIG_BACKEND_INIT	my_project/libgit2/include/git2/sys/config.h	/^#define GIT_CONFIG_BACKEND_INIT /;"	d
GIT_CONFIG_BACKEND_MEMORY_OPTIONS_INIT	my_project/libgit2/include/git2/sys/config.h	/^#define GIT_CONFIG_BACKEND_MEMORY_OPTIONS_INIT /;"	d
GIT_CONFIG_BACKEND_MEMORY_OPTIONS_VERSION	my_project/libgit2/include/git2/sys/config.h	/^#define GIT_CONFIG_BACKEND_MEMORY_OPTIONS_VERSION /;"	d
GIT_CONFIG_BACKEND_VERSION	my_project/libgit2/include/git2/sys/config.h	/^#define GIT_CONFIG_BACKEND_VERSION /;"	d
GIT_CONFIG_FILENAME_GLOBAL	my_project/libgit2/src/libgit2/config.h	/^#define GIT_CONFIG_FILENAME_GLOBAL /;"	d
GIT_CONFIG_FILENAME_INREPO	my_project/libgit2/src/libgit2/config.h	/^#define GIT_CONFIG_FILENAME_INREPO /;"	d
GIT_CONFIG_FILENAME_PROGRAMDATA	my_project/libgit2/src/libgit2/config.h	/^#define GIT_CONFIG_FILENAME_PROGRAMDATA /;"	d
GIT_CONFIG_FILENAME_SYSTEM	my_project/libgit2/src/libgit2/config.h	/^#define GIT_CONFIG_FILENAME_SYSTEM /;"	d
GIT_CONFIG_FILENAME_XDG	my_project/libgit2/src/libgit2/config.h	/^#define GIT_CONFIG_FILENAME_XDG /;"	d
GIT_CONFIG_FILE_MODE	my_project/libgit2/src/libgit2/config.h	/^#define GIT_CONFIG_FILE_MODE /;"	d
GIT_CONFIG_HIGHEST_LEVEL	my_project/libgit2/include/git2/config.h	/^	GIT_CONFIG_HIGHEST_LEVEL = -1$/;"	e	enum:__anon3fe317b00103
GIT_CONFIG_LEVEL_APP	my_project/libgit2/include/git2/config.h	/^	GIT_CONFIG_LEVEL_APP = 7,$/;"	e	enum:__anon3fe317b00103
GIT_CONFIG_LEVEL_GLOBAL	my_project/libgit2/include/git2/config.h	/^	GIT_CONFIG_LEVEL_GLOBAL = 4,$/;"	e	enum:__anon3fe317b00103
GIT_CONFIG_LEVEL_LOCAL	my_project/libgit2/include/git2/config.h	/^	GIT_CONFIG_LEVEL_LOCAL = 5,$/;"	e	enum:__anon3fe317b00103
GIT_CONFIG_LEVEL_PROGRAMDATA	my_project/libgit2/include/git2/config.h	/^	GIT_CONFIG_LEVEL_PROGRAMDATA = 1,$/;"	e	enum:__anon3fe317b00103
GIT_CONFIG_LEVEL_SYSTEM	my_project/libgit2/include/git2/config.h	/^	GIT_CONFIG_LEVEL_SYSTEM = 2,$/;"	e	enum:__anon3fe317b00103
GIT_CONFIG_LEVEL_WORKTREE	my_project/libgit2/include/git2/config.h	/^	GIT_CONFIG_LEVEL_WORKTREE = 6,$/;"	e	enum:__anon3fe317b00103
GIT_CONFIG_LEVEL_XDG	my_project/libgit2/include/git2/config.h	/^	GIT_CONFIG_LEVEL_XDG = 3,$/;"	e	enum:__anon3fe317b00103
GIT_CONFIG_PARSER_INIT	my_project/libgit2/src/libgit2/config_parse.h	/^#define GIT_CONFIG_PARSER_INIT /;"	d
GIT_CONTAINER_OF	my_project/libgit2/src/util/util.h	/^# define GIT_CONTAINER_OF(/;"	d
GIT_CPDIR_CHMOD_DIRS	my_project/libgit2/src/util/futils.h	/^	GIT_CPDIR_CHMOD_DIRS        = (1u << 4),$/;"	e	enum:__anon45ee975d0303
GIT_CPDIR_COPY_DOTFILES	my_project/libgit2/src/util/futils.h	/^	GIT_CPDIR_COPY_DOTFILES     = (1u << 2),$/;"	e	enum:__anon45ee975d0303
GIT_CPDIR_COPY_SYMLINKS	my_project/libgit2/src/util/futils.h	/^	GIT_CPDIR_COPY_SYMLINKS     = (1u << 1),$/;"	e	enum:__anon45ee975d0303
GIT_CPDIR_CREATE_EMPTY_DIRS	my_project/libgit2/src/util/futils.h	/^	GIT_CPDIR_CREATE_EMPTY_DIRS = (1u << 0),$/;"	e	enum:__anon45ee975d0303
GIT_CPDIR_LINK_FILES	my_project/libgit2/src/util/futils.h	/^	GIT_CPDIR_LINK_FILES        = (1u << 6)$/;"	e	enum:__anon45ee975d0303
GIT_CPDIR_OVERWRITE	my_project/libgit2/src/util/futils.h	/^	GIT_CPDIR_OVERWRITE         = (1u << 3),$/;"	e	enum:__anon45ee975d0303
GIT_CPDIR_SIMPLE_TO_MODE	my_project/libgit2/src/util/futils.h	/^	GIT_CPDIR_SIMPLE_TO_MODE    = (1u << 5),$/;"	e	enum:__anon45ee975d0303
GIT_CPDIR__MKDIR_DONE_FOR_TO_ROOT	my_project/libgit2/src/util/futils.c	/^#define GIT_CPDIR__MKDIR_DONE_FOR_TO_ROOT /;"	d	file:
GIT_CREDENTIAL_DEFAULT	my_project/libgit2/include/git2/credential.h	/^	GIT_CREDENTIAL_DEFAULT = (1u << 3),$/;"	e	enum:__anonb62820150103
GIT_CREDENTIAL_SSH_CUSTOM	my_project/libgit2/include/git2/credential.h	/^	GIT_CREDENTIAL_SSH_CUSTOM = (1u << 2),$/;"	e	enum:__anonb62820150103
GIT_CREDENTIAL_SSH_INTERACTIVE	my_project/libgit2/include/git2/credential.h	/^	GIT_CREDENTIAL_SSH_INTERACTIVE = (1u << 4),$/;"	e	enum:__anonb62820150103
GIT_CREDENTIAL_SSH_KEY	my_project/libgit2/include/git2/credential.h	/^	GIT_CREDENTIAL_SSH_KEY = (1u << 1),$/;"	e	enum:__anonb62820150103
GIT_CREDENTIAL_SSH_MEMORY	my_project/libgit2/include/git2/credential.h	/^	GIT_CREDENTIAL_SSH_MEMORY = (1u << 6)$/;"	e	enum:__anonb62820150103
GIT_CREDENTIAL_USERNAME	my_project/libgit2/include/git2/credential.h	/^	GIT_CREDENTIAL_USERNAME = (1u << 5),$/;"	e	enum:__anonb62820150103
GIT_CREDENTIAL_USERPASS_PLAINTEXT	my_project/libgit2/include/git2/credential.h	/^	GIT_CREDENTIAL_USERPASS_PLAINTEXT = (1u << 0),$/;"	e	enum:__anonb62820150103
GIT_CREDTYPE_DEFAULT	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_CREDTYPE_DEFAULT /;"	d
GIT_CREDTYPE_SSH_CUSTOM	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_CREDTYPE_SSH_CUSTOM /;"	d
GIT_CREDTYPE_SSH_INTERACTIVE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_CREDTYPE_SSH_INTERACTIVE /;"	d
GIT_CREDTYPE_SSH_KEY	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_CREDTYPE_SSH_KEY /;"	d
GIT_CREDTYPE_SSH_MEMORY	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_CREDTYPE_SSH_MEMORY /;"	d
GIT_CREDTYPE_USERNAME	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_CREDTYPE_USERNAME /;"	d
GIT_CREDTYPE_USERPASS_PLAINTEXT	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_CREDTYPE_USERPASS_PLAINTEXT /;"	d
GIT_CRLF_AUTO	my_project/libgit2/src/libgit2/crlf.c	/^	GIT_CRLF_AUTO,$/;"	e	enum:__anon3ae3a4370103	file:
GIT_CRLF_AUTO_CRLF	my_project/libgit2/src/libgit2/crlf.c	/^	GIT_CRLF_AUTO_CRLF$/;"	e	enum:__anon3ae3a4370103	file:
GIT_CRLF_AUTO_INPUT	my_project/libgit2/src/libgit2/crlf.c	/^	GIT_CRLF_AUTO_INPUT,$/;"	e	enum:__anon3ae3a4370103	file:
GIT_CRLF_BINARY	my_project/libgit2/src/libgit2/crlf.c	/^	GIT_CRLF_BINARY,$/;"	e	enum:__anon3ae3a4370103	file:
GIT_CRLF_TEXT	my_project/libgit2/src/libgit2/crlf.c	/^	GIT_CRLF_TEXT,$/;"	e	enum:__anon3ae3a4370103	file:
GIT_CRLF_TEXT_CRLF	my_project/libgit2/src/libgit2/crlf.c	/^	GIT_CRLF_TEXT_CRLF,$/;"	e	enum:__anon3ae3a4370103	file:
GIT_CRLF_TEXT_INPUT	my_project/libgit2/src/libgit2/crlf.c	/^	GIT_CRLF_TEXT_INPUT,$/;"	e	enum:__anon3ae3a4370103	file:
GIT_CRLF_UNDEFINED	my_project/libgit2/src/libgit2/crlf.c	/^	GIT_CRLF_UNDEFINED,$/;"	e	enum:__anon3ae3a4370103	file:
GIT_CVAR_FALSE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_CVAR_FALSE /;"	d
GIT_CVAR_INT32	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_CVAR_INT32 /;"	d
GIT_CVAR_STRING	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_CVAR_STRING /;"	d
GIT_CVAR_TRUE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_CVAR_TRUE /;"	d
GIT_DEBUG_POOL	my_project/libgit2/src/CMakeLists.txt	/^	set(GIT_DEBUG_POOL 1)$/;"	v
GIT_DEBUG_STRICT_ALLOC	my_project/libgit2/src/CMakeLists.txt	/^	set(GIT_DEBUG_STRICT_ALLOC 1)$/;"	v
GIT_DEBUG_STRICT_OPEN	my_project/libgit2/src/CMakeLists.txt	/^	set(GIT_DEBUG_STRICT_OPEN 1)$/;"	v
GIT_DEFAULT_CERT_LOCATION	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^#define GIT_DEFAULT_CERT_LOCATION /;"	d	file:
GIT_DEFAULT_PORT	my_project/libgit2/include/git2/net.h	/^#define GIT_DEFAULT_PORT /;"	d
GIT_DELTA_ADDED	my_project/libgit2/include/git2/diff.h	/^	GIT_DELTA_ADDED = 1,	   \/**< entry does not exist in old version *\/$/;"	e	enum:__anon7f3f1dd30303
GIT_DELTA_CONFLICTED	my_project/libgit2/include/git2/diff.h	/^	GIT_DELTA_CONFLICTED = 10  \/**< entry in the index is conflicted *\/$/;"	e	enum:__anon7f3f1dd30303
GIT_DELTA_COPIED	my_project/libgit2/include/git2/diff.h	/^	GIT_DELTA_COPIED = 5,      \/**< entry was copied from another old entry *\/$/;"	e	enum:__anon7f3f1dd30303
GIT_DELTA_DELETED	my_project/libgit2/include/git2/diff.h	/^	GIT_DELTA_DELETED = 2,	   \/**< entry does not exist in new version *\/$/;"	e	enum:__anon7f3f1dd30303
GIT_DELTA_IGNORED	my_project/libgit2/include/git2/diff.h	/^	GIT_DELTA_IGNORED = 6,     \/**< entry is ignored item in workdir *\/$/;"	e	enum:__anon7f3f1dd30303
GIT_DELTA_MODIFIED	my_project/libgit2/include/git2/diff.h	/^	GIT_DELTA_MODIFIED = 3,    \/**< entry content changed between old and new *\/$/;"	e	enum:__anon7f3f1dd30303
GIT_DELTA_RENAMED	my_project/libgit2/include/git2/diff.h	/^	GIT_DELTA_RENAMED = 4,     \/**< entry was renamed between old and new *\/$/;"	e	enum:__anon7f3f1dd30303
GIT_DELTA_SIZE_MIN	my_project/libgit2/src/libgit2/delta.h	/^#define GIT_DELTA_SIZE_MIN	/;"	d
GIT_DELTA_TYPECHANGE	my_project/libgit2/include/git2/diff.h	/^	GIT_DELTA_TYPECHANGE = 8,  \/**< type of entry changed between old and new *\/$/;"	e	enum:__anon7f3f1dd30303
GIT_DELTA_UNMODIFIED	my_project/libgit2/include/git2/diff.h	/^	GIT_DELTA_UNMODIFIED = 0,  \/**< no changes *\/$/;"	e	enum:__anon7f3f1dd30303
GIT_DELTA_UNREADABLE	my_project/libgit2/include/git2/diff.h	/^	GIT_DELTA_UNREADABLE = 9,  \/**< entry is unreadable *\/$/;"	e	enum:__anon7f3f1dd30303
GIT_DELTA_UNTRACKED	my_project/libgit2/include/git2/diff.h	/^	GIT_DELTA_UNTRACKED = 7,   \/**< entry is untracked item in workdir *\/$/;"	e	enum:__anon7f3f1dd30303
GIT_DEPRECATED	my_project/libgit2/include/git2/common.h	/^# define GIT_DEPRECATED(/;"	d
GIT_DESCRIBE_ALL	my_project/libgit2/include/git2/describe.h	/^	GIT_DESCRIBE_ALL$/;"	e	enum:__anon07cf78db0103
GIT_DESCRIBE_DEFAULT	my_project/libgit2/include/git2/describe.h	/^	GIT_DESCRIBE_DEFAULT,$/;"	e	enum:__anon07cf78db0103
GIT_DESCRIBE_DEFAULT_ABBREVIATED_SIZE	my_project/libgit2/include/git2/describe.h	/^#define GIT_DESCRIBE_DEFAULT_ABBREVIATED_SIZE /;"	d
GIT_DESCRIBE_DEFAULT_MAX_CANDIDATES_TAGS	my_project/libgit2/include/git2/describe.h	/^#define GIT_DESCRIBE_DEFAULT_MAX_CANDIDATES_TAGS /;"	d
GIT_DESCRIBE_FORMAT_OPTIONS_INIT	my_project/libgit2/include/git2/describe.h	/^#define GIT_DESCRIBE_FORMAT_OPTIONS_INIT /;"	d
GIT_DESCRIBE_FORMAT_OPTIONS_VERSION	my_project/libgit2/include/git2/describe.h	/^#define GIT_DESCRIBE_FORMAT_OPTIONS_VERSION /;"	d
GIT_DESCRIBE_OPTIONS_INIT	my_project/libgit2/include/git2/describe.h	/^#define GIT_DESCRIBE_OPTIONS_INIT /;"	d
GIT_DESCRIBE_OPTIONS_VERSION	my_project/libgit2/include/git2/describe.h	/^#define GIT_DESCRIBE_OPTIONS_VERSION /;"	d
GIT_DESCRIBE_TAGS	my_project/libgit2/include/git2/describe.h	/^	GIT_DESCRIBE_TAGS,$/;"	e	enum:__anon07cf78db0103
GIT_DESC_CONTENT	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_DESC_CONTENT /;"	d
GIT_DESC_FILE	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_DESC_FILE /;"	d
GIT_DESC_MODE	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_DESC_MODE /;"	d
GIT_DIFFCAPS_HAS_SYMLINKS	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFFCAPS_HAS_SYMLINKS     = (1 << 0), \/* symlinks on platform? *\/$/;"	e	enum:__anonff5a2cd80103
GIT_DIFFCAPS_IGNORE_STAT	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFFCAPS_IGNORE_STAT      = (1 << 1), \/* use stat? *\/$/;"	e	enum:__anonff5a2cd80103
GIT_DIFFCAPS_TRUST_CTIME	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFFCAPS_TRUST_CTIME      = (1 << 3), \/* use st_ctime? *\/$/;"	e	enum:__anonff5a2cd80103
GIT_DIFFCAPS_TRUST_MODE_BITS	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFFCAPS_TRUST_MODE_BITS  = (1 << 2), \/* use st_mode? *\/$/;"	e	enum:__anonff5a2cd80103
GIT_DIFFCAPS_USE_DEV	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFFCAPS_USE_DEV          = (1 << 4)  \/* use st_dev? *\/$/;"	e	enum:__anonff5a2cd80103
GIT_DIFF_BINARY_DELTA	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_BINARY_DELTA$/;"	e	enum:__anon7f3f1dd30703
GIT_DIFF_BINARY_LITERAL	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_BINARY_LITERAL,$/;"	e	enum:__anon7f3f1dd30703
GIT_DIFF_BINARY_NONE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_BINARY_NONE,$/;"	e	enum:__anon7f3f1dd30703
GIT_DIFF_BREAK_REWRITES	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_BREAK_REWRITES = (1u << 5),$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_BREAK_REWRITES_FOR_RENAMES_ONLY  = (1u << 15),$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_DISABLE_PATHSPEC_MATCH	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_DISABLE_PATHSPEC_MATCH = (1u << 12),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_ENABLE_FAST_UNTRACKED_DIRS	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_ENABLE_FAST_UNTRACKED_DIRS = (1u << 14),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_FILE_CONTENT_SRC__BLOB	my_project/libgit2/src/libgit2/diff_file.h	/^#define GIT_DIFF_FILE_CONTENT_SRC__BLOB(/;"	d
GIT_DIFF_FILE_CONTENT_SRC__BUF	my_project/libgit2/src/libgit2/diff_file.h	/^#define GIT_DIFF_FILE_CONTENT_SRC__BUF(/;"	d
GIT_DIFF_FIND_ALL	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_ALL = (0x0ff),$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_FIND_AND_BREAK_REWRITES	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_AND_BREAK_REWRITES =$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_FIND_BY_CONFIG	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_BY_CONFIG = 0,$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_FIND_COPIES	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_COPIES = (1u << 2),$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_COPIES_FROM_UNMODIFIED = (1u << 3),$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_DONT_IGNORE_WHITESPACE = (1u << 13),$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_FIND_EXACT_MATCH_ONLY	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_EXACT_MATCH_ONLY = (1u << 14),$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_FIND_FOR_UNTRACKED	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_FOR_UNTRACKED = (1u << 6),$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_IGNORE_LEADING_WHITESPACE = 0,$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_FIND_IGNORE_WHITESPACE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_IGNORE_WHITESPACE = (1u << 12),$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_FIND_OPTIONS_INIT	my_project/libgit2/include/git2/diff.h	/^#define GIT_DIFF_FIND_OPTIONS_INIT /;"	d
GIT_DIFF_FIND_OPTIONS_VERSION	my_project/libgit2/include/git2/diff.h	/^#define GIT_DIFF_FIND_OPTIONS_VERSION /;"	d
GIT_DIFF_FIND_REMOVE_UNMODIFIED	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_REMOVE_UNMODIFIED = (1u << 16)$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_FIND_RENAMES	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_RENAMES = (1u << 0),$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_FIND_RENAMES_FROM_REWRITES	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_RENAMES_FROM_REWRITES = (1u << 1),$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_FIND_REWRITES	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FIND_REWRITES = (1u << 4),$/;"	e	enum:__anon7f3f1dd30d03
GIT_DIFF_FLAG_BINARY	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FLAG_BINARY     = (1u << 0), \/**< file(s) treated as binary data *\/$/;"	e	enum:__anon7f3f1dd30203
GIT_DIFF_FLAG_EXISTS	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FLAG_EXISTS     = (1u << 3), \/**< file exists at this side of the delta *\/$/;"	e	enum:__anon7f3f1dd30203
GIT_DIFF_FLAG_NOT_BINARY	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FLAG_NOT_BINARY = (1u << 1), \/**< file(s) treated as text data *\/$/;"	e	enum:__anon7f3f1dd30203
GIT_DIFF_FLAG_VALID_ID	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FLAG_VALID_ID   = (1u << 2), \/**< `id` value is known correct *\/$/;"	e	enum:__anon7f3f1dd30203
GIT_DIFF_FLAG_VALID_SIZE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FLAG_VALID_SIZE = (1u << 4)  \/**< file size value is known correct *\/$/;"	e	enum:__anon7f3f1dd30203
GIT_DIFF_FLAG__CLEAR_INTERNAL	my_project/libgit2/src/libgit2/diff_generate.h	/^#define GIT_DIFF_FLAG__CLEAR_INTERNAL(/;"	d
GIT_DIFF_FLAG__FREE_BLOB	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFF_FLAG__FREE_BLOB  = (1 << 11), \/* release the blob when done *\/$/;"	e	enum:__anonff5a2cd80203
GIT_DIFF_FLAG__FREE_DATA	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFF_FLAG__FREE_DATA  = (1 << 8),  \/* internal file data is allocated *\/$/;"	e	enum:__anonff5a2cd80203
GIT_DIFF_FLAG__FREE_PATH	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFF_FLAG__FREE_PATH  = (1 << 7),  \/* `path` is allocated memory *\/$/;"	e	enum:__anonff5a2cd80203
GIT_DIFF_FLAG__HAS_SELF_SIMILARITY	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFF_FLAG__HAS_SELF_SIMILARITY = (1 << 20)$/;"	e	enum:__anonff5a2cd80203
GIT_DIFF_FLAG__IS_RENAME_SOURCE	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFF_FLAG__IS_RENAME_SOURCE = (1 << 19),$/;"	e	enum:__anonff5a2cd80203
GIT_DIFF_FLAG__IS_RENAME_TARGET	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFF_FLAG__IS_RENAME_TARGET = (1 << 18),$/;"	e	enum:__anonff5a2cd80203
GIT_DIFF_FLAG__LOADED	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFF_FLAG__LOADED     = (1 << 12), \/* file data has been loaded *\/$/;"	e	enum:__anonff5a2cd80203
GIT_DIFF_FLAG__NO_DATA	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFF_FLAG__NO_DATA    = (1 << 10), \/* file data should not be loaded *\/$/;"	e	enum:__anonff5a2cd80203
GIT_DIFF_FLAG__TO_DELETE	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFF_FLAG__TO_DELETE  = (1 << 16), \/* delete entry during rename det. *\/$/;"	e	enum:__anonff5a2cd80203
GIT_DIFF_FLAG__TO_SPLIT	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFF_FLAG__TO_SPLIT   = (1 << 17), \/* split entry during rename det. *\/$/;"	e	enum:__anonff5a2cd80203
GIT_DIFF_FLAG__UNMAP_DATA	my_project/libgit2/src/libgit2/diff_generate.h	/^	GIT_DIFF_FLAG__UNMAP_DATA = (1 << 9),  \/* internal file data is mmap'ed *\/$/;"	e	enum:__anonff5a2cd80203
GIT_DIFF_FORCE_BINARY	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORCE_BINARY = (1u << 21),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_FORCE_TEXT	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORCE_TEXT = (1u << 20),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_FORMAT_EMAIL_EXCLUDE_SUBJECT_PATCH_MARKER	my_project/libgit2/include/git2/deprecated.h	/^	GIT_DIFF_FORMAT_EMAIL_EXCLUDE_SUBJECT_PATCH_MARKER = (1 << 0)$/;"	e	enum:__anon325f306b0103
GIT_DIFF_FORMAT_EMAIL_NONE	my_project/libgit2/include/git2/deprecated.h	/^	GIT_DIFF_FORMAT_EMAIL_NONE = 0,$/;"	e	enum:__anon325f306b0103
GIT_DIFF_FORMAT_EMAIL_OPTIONS_INIT	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_DIFF_FORMAT_EMAIL_OPTIONS_INIT /;"	d
GIT_DIFF_FORMAT_EMAIL_OPTIONS_VERSION	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_DIFF_FORMAT_EMAIL_OPTIONS_VERSION /;"	d
GIT_DIFF_FORMAT_NAME_ONLY	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORMAT_NAME_ONLY    = 4u, \/**< like git diff --name-only *\/$/;"	e	enum:__anon7f3f1dd31003
GIT_DIFF_FORMAT_NAME_STATUS	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORMAT_NAME_STATUS  = 5u, \/**< like git diff --name-status *\/$/;"	e	enum:__anon7f3f1dd31003
GIT_DIFF_FORMAT_PATCH	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORMAT_PATCH        = 1u, \/**< full git diff *\/$/;"	e	enum:__anon7f3f1dd31003
GIT_DIFF_FORMAT_PATCH_HEADER	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORMAT_PATCH_HEADER = 2u, \/**< just the file headers of patch *\/$/;"	e	enum:__anon7f3f1dd31003
GIT_DIFF_FORMAT_PATCH_ID	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORMAT_PATCH_ID     = 6u  \/**< git diff as used by git patch-id *\/$/;"	e	enum:__anon7f3f1dd31003
GIT_DIFF_FORMAT_RAW	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_FORMAT_RAW          = 3u, \/**< like git diff --raw *\/$/;"	e	enum:__anon7f3f1dd31003
GIT_DIFF_HUNK_HEADER_SIZE	my_project/libgit2/include/git2/diff.h	/^#define GIT_DIFF_HUNK_HEADER_SIZE	/;"	d
GIT_DIFF_IGNORE_BLANK_LINES	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_IGNORE_BLANK_LINES = (1u << 19),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_IGNORE_CASE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_IGNORE_CASE = (1u << 10),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_IGNORE_FILEMODE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_IGNORE_FILEMODE = (1u << 8),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_IGNORE_SUBMODULES	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_IGNORE_SUBMODULES = (1u << 9),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_IGNORE_WHITESPACE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_IGNORE_WHITESPACE = (1u << 22),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_IGNORE_WHITESPACE_CHANGE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_IGNORE_WHITESPACE_CHANGE = (1u << 23),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_IGNORE_WHITESPACE_EOL	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_IGNORE_WHITESPACE_EOL = (1u << 24),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_INCLUDE_CASECHANGE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_CASECHANGE = (1u << 11),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_INCLUDE_IGNORED	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_IGNORED = (1u << 1),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_INCLUDE_TYPECHANGE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_TYPECHANGE = (1u << 6),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_INCLUDE_TYPECHANGE_TREES	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_TYPECHANGE_TREES = (1u << 7),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_INCLUDE_UNMODIFIED	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_UNMODIFIED = (1u << 5),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_INCLUDE_UNREADABLE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_UNREADABLE = (1u << 16),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_INCLUDE_UNREADABLE_AS_UNTRACKED	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_UNREADABLE_AS_UNTRACKED = (1u << 17),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_INCLUDE_UNTRACKED	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_INCLUDE_UNTRACKED = (1u << 3),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_INDENT_HEURISTIC	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_INDENT_HEURISTIC = (1u << 18),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_LINE_ADDITION	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_ADDITION  = '+',$/;"	e	enum:__anon7f3f1dd30b03
GIT_DIFF_LINE_ADD_EOFNL	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_ADD_EOFNL = '>',     \/**< Old has no LF at end, new does *\/$/;"	e	enum:__anon7f3f1dd30b03
GIT_DIFF_LINE_BINARY	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_BINARY    = 'B' \/**< For "Binary files x and y differ" *\/$/;"	e	enum:__anon7f3f1dd30b03
GIT_DIFF_LINE_CONTEXT	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_CONTEXT   = ' ',$/;"	e	enum:__anon7f3f1dd30b03
GIT_DIFF_LINE_CONTEXT_EOFNL	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_CONTEXT_EOFNL = '=', \/**< Both files have no LF at end *\/$/;"	e	enum:__anon7f3f1dd30b03
GIT_DIFF_LINE_DELETION	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_DELETION  = '-',$/;"	e	enum:__anon7f3f1dd30b03
GIT_DIFF_LINE_DEL_EOFNL	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_DEL_EOFNL = '<',     \/**< Old has LF at end, new does not *\/$/;"	e	enum:__anon7f3f1dd30b03
GIT_DIFF_LINE_FILE_HDR	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_FILE_HDR  = 'F',$/;"	e	enum:__anon7f3f1dd30b03
GIT_DIFF_LINE_HUNK_HDR	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_LINE_HUNK_HDR  = 'H',$/;"	e	enum:__anon7f3f1dd30b03
GIT_DIFF_MINIMAL	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_MINIMAL = (1u << 29),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_NORMAL	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_NORMAL = 0,$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_OPTIONS_INIT	my_project/libgit2/include/git2/diff.h	/^#define GIT_DIFF_OPTIONS_INIT /;"	d
GIT_DIFF_OPTIONS_VERSION	my_project/libgit2/include/git2/diff.h	/^#define GIT_DIFF_OPTIONS_VERSION /;"	d
GIT_DIFF_PARSE_OPTIONS_INIT	my_project/libgit2/include/git2/diff.h	/^#define GIT_DIFF_PARSE_OPTIONS_INIT /;"	d
GIT_DIFF_PARSE_OPTIONS_VERSION	my_project/libgit2/include/git2/diff.h	/^#define GIT_DIFF_PARSE_OPTIONS_VERSION /;"	d
GIT_DIFF_PATCHID_OPTIONS_INIT	my_project/libgit2/include/git2/diff.h	/^#define GIT_DIFF_PATCHID_OPTIONS_INIT /;"	d
GIT_DIFF_PATCHID_OPTIONS_VERSION	my_project/libgit2/include/git2/diff.h	/^#define GIT_DIFF_PATCHID_OPTIONS_VERSION /;"	d
GIT_DIFF_PATIENCE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_PATIENCE = (1u << 28),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_PERFDATA_INIT	my_project/libgit2/include/git2/sys/diff.h	/^#define GIT_DIFF_PERFDATA_INIT /;"	d
GIT_DIFF_PERFDATA_VERSION	my_project/libgit2/include/git2/sys/diff.h	/^#define GIT_DIFF_PERFDATA_VERSION /;"	d
GIT_DIFF_RECURSE_IGNORED_DIRS	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_RECURSE_IGNORED_DIRS = (1u << 2),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_RECURSE_UNTRACKED_DIRS	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_RECURSE_UNTRACKED_DIRS = (1u << 4),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_REVERSE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_REVERSE = (1u << 0),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_SHOW_BINARY	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_SHOW_BINARY = (1u << 30)$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_SHOW_UNMODIFIED	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_SHOW_UNMODIFIED = (1u << 26),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_SHOW_UNTRACKED_CONTENT	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_SHOW_UNTRACKED_CONTENT = (1u << 25),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_SKIP_BINARY_CHECK	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_SKIP_BINARY_CHECK = (1u << 13),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF_STATS_FULL	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_STATS_FULL = (1u << 0),$/;"	e	enum:__anon7f3f1dd31203
GIT_DIFF_STATS_INCLUDE_SUMMARY	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_STATS_INCLUDE_SUMMARY = (1u << 3)$/;"	e	enum:__anon7f3f1dd31203
GIT_DIFF_STATS_NONE	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_STATS_NONE = 0,$/;"	e	enum:__anon7f3f1dd31203
GIT_DIFF_STATS_NUMBER	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_STATS_NUMBER = (1u << 2),$/;"	e	enum:__anon7f3f1dd31203
GIT_DIFF_STATS_SHORT	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_STATS_SHORT = (1u << 1),$/;"	e	enum:__anon7f3f1dd31203
GIT_DIFF_TYPE_GENERATED	my_project/libgit2/src/libgit2/diff.h	/^	GIT_DIFF_TYPE_GENERATED = 1,$/;"	e	enum:__anon3c92a60e0103
GIT_DIFF_TYPE_PARSED	my_project/libgit2/src/libgit2/diff.h	/^	GIT_DIFF_TYPE_PARSED = 2$/;"	e	enum:__anon3c92a60e0103
GIT_DIFF_TYPE_UNKNOWN	my_project/libgit2/src/libgit2/diff.h	/^	GIT_DIFF_TYPE_UNKNOWN = 0,$/;"	e	enum:__anon3c92a60e0103
GIT_DIFF_UPDATE_INDEX	my_project/libgit2/include/git2/diff.h	/^	GIT_DIFF_UPDATE_INDEX = (1u << 15),$/;"	e	enum:__anon7f3f1dd30103
GIT_DIFF__VERBOSE	my_project/libgit2/src/libgit2/diff_generate.h	/^#define GIT_DIFF__VERBOSE /;"	d
GIT_DIGIT	my_project/libgit2/src/util/wildmatch.c	/^#define GIT_DIGIT /;"	d	file:
GIT_DIR	my_project/libgit2/src/libgit2/repository.h	/^#define GIT_DIR /;"	d
GIT_DIRECTION_FETCH	my_project/libgit2/include/git2/net.h	/^	GIT_DIRECTION_FETCH = 0,$/;"	e	enum:__anonc67e94210103
GIT_DIRECTION_PUSH	my_project/libgit2/include/git2/net.h	/^	GIT_DIRECTION_PUSH  = 1$/;"	e	enum:__anonc67e94210103
GIT_DIR_FLAG_FALSE	my_project/libgit2/src/libgit2/attr_file.h	/^typedef enum { GIT_DIR_FLAG_TRUE = 1, GIT_DIR_FLAG_FALSE = 0, GIT_DIR_FLAG_UNKNOWN = -1 } git_di/;"	e	enum:__anon0df92d8f0b03
GIT_DIR_FLAG_TRUE	my_project/libgit2/src/libgit2/attr_file.h	/^typedef enum { GIT_DIR_FLAG_TRUE = 1, GIT_DIR_FLAG_FALSE = 0, GIT_DIR_FLAG_UNKNOWN = -1 } git_di/;"	e	enum:__anon0df92d8f0b03
GIT_DIR_FLAG_UNKNOWN	my_project/libgit2/src/libgit2/attr_file.h	/^typedef enum { GIT_DIR_FLAG_TRUE = 1, GIT_DIR_FLAG_FALSE = 0, GIT_DIR_FLAG_UNKNOWN = -1 } git_di/;"	e	enum:__anon0df92d8f0b03
GIT_DIR_MODE	my_project/libgit2/src/libgit2/repository.h	/^#define GIT_DIR_MODE /;"	d
GIT_DIR_SHORTNAME	my_project/libgit2/src/libgit2/repository.h	/^#define GIT_DIR_SHORTNAME /;"	d
GIT_EAMBIGUOUS	my_project/libgit2/include/git2/errors.h	/^	GIT_EAMBIGUOUS      = -5,		\/**< More than one object matches *\/$/;"	e	enum:__anon095219370103
GIT_EAPPLIED	my_project/libgit2/include/git2/errors.h	/^	GIT_EAPPLIED        = -18,	\/**< Patch\/merge has already been applied *\/$/;"	e	enum:__anon095219370103
GIT_EAPPLYFAIL	my_project/libgit2/include/git2/errors.h	/^	GIT_EAPPLYFAIL      = -35,	\/**< Patch application failed *\/$/;"	e	enum:__anon095219370103
GIT_EAUTH	my_project/libgit2/include/git2/errors.h	/^	GIT_EAUTH           = -16,	\/**< Authentication error *\/$/;"	e	enum:__anon095219370103
GIT_EBAREREPO	my_project/libgit2/include/git2/errors.h	/^	GIT_EBAREREPO       =  -8,	\/**< Operation not allowed on bare repository *\/$/;"	e	enum:__anon095219370103
GIT_EBUFS	my_project/libgit2/include/git2/errors.h	/^	GIT_EBUFS           = -6,		\/**< Output buffer too short to hold data *\/$/;"	e	enum:__anon095219370103
GIT_ECERTIFICATE	my_project/libgit2/include/git2/errors.h	/^	GIT_ECERTIFICATE    = -17,	\/**< Server certificate is invalid *\/$/;"	e	enum:__anon095219370103
GIT_ECONFLICT	my_project/libgit2/include/git2/errors.h	/^	GIT_ECONFLICT       = -13,	\/**< Checkout conflicts prevented operation *\/$/;"	e	enum:__anon095219370103
GIT_EDIRECTORY	my_project/libgit2/include/git2/errors.h	/^	GIT_EDIRECTORY      = -23,	\/**< The operation is not valid for a directory *\/$/;"	e	enum:__anon095219370103
GIT_EEOF	my_project/libgit2/include/git2/errors.h	/^	GIT_EEOF            = -20,	\/**< Unexpected EOF *\/$/;"	e	enum:__anon095219370103
GIT_EEXISTS	my_project/libgit2/include/git2/errors.h	/^	GIT_EEXISTS         = -4,		\/**< Object exists preventing operation *\/$/;"	e	enum:__anon095219370103
GIT_EINDEXDIRTY	my_project/libgit2/include/git2/errors.h	/^	GIT_EINDEXDIRTY     = -34,	\/**< Unsaved changes in the index would be overwritten *\/$/;"	e	enum:__anon095219370103
GIT_EINVALID	my_project/libgit2/include/git2/errors.h	/^	GIT_EINVALID        = -21,	\/**< Invalid operation or input *\/$/;"	e	enum:__anon095219370103
GIT_EINVALIDSPEC	my_project/libgit2/include/git2/errors.h	/^	GIT_EINVALIDSPEC    = -12,	\/**< Name\/ref spec was not in a valid format *\/$/;"	e	enum:__anon095219370103
GIT_ELOCKED	my_project/libgit2/include/git2/errors.h	/^	GIT_ELOCKED         = -14,	\/**< Lock file prevented operation *\/$/;"	e	enum:__anon095219370103
GIT_EMAIL_CREATE_ALWAYS_NUMBER	my_project/libgit2/include/git2/email.h	/^	GIT_EMAIL_CREATE_ALWAYS_NUMBER = (1u << 1),$/;"	e	enum:__anonbd19e2c20103
GIT_EMAIL_CREATE_DEFAULT	my_project/libgit2/include/git2/email.h	/^	GIT_EMAIL_CREATE_DEFAULT = 0,$/;"	e	enum:__anonbd19e2c20103
GIT_EMAIL_CREATE_NO_RENAMES	my_project/libgit2/include/git2/email.h	/^	GIT_EMAIL_CREATE_NO_RENAMES = (1u << 2)$/;"	e	enum:__anonbd19e2c20103
GIT_EMAIL_CREATE_OMIT_NUMBERS	my_project/libgit2/include/git2/email.h	/^	GIT_EMAIL_CREATE_OMIT_NUMBERS = (1u << 0),$/;"	e	enum:__anonbd19e2c20103
GIT_EMAIL_CREATE_OPTIONS_INIT	my_project/libgit2/include/git2/email.h	/^#define GIT_EMAIL_CREATE_OPTIONS_INIT /;"	d
GIT_EMAIL_CREATE_OPTIONS_VERSION	my_project/libgit2/include/git2/email.h	/^#define GIT_EMAIL_CREATE_OPTIONS_VERSION /;"	d
GIT_EMERGECONFLICT	my_project/libgit2/include/git2/errors.h	/^	GIT_EMERGECONFLICT  = -24,	\/**< A merge conflict exists and cannot continue *\/$/;"	e	enum:__anon095219370103
GIT_EMISMATCH	my_project/libgit2/include/git2/errors.h	/^	GIT_EMISMATCH       = -33,	\/**< Hashsum mismatch in object *\/$/;"	e	enum:__anon095219370103
GIT_EMODIFIED	my_project/libgit2/include/git2/errors.h	/^	GIT_EMODIFIED       = -15,	\/**< Reference value does not match expected *\/$/;"	e	enum:__anon095219370103
GIT_END_DECL	my_project/libgit2/include/git2/common.h	/^# define GIT_END_DECL	/;"	d
GIT_ENONFASTFORWARD	my_project/libgit2/include/git2/errors.h	/^	GIT_ENONFASTFORWARD = -11,	\/**< Reference was not fast-forwardable *\/$/;"	e	enum:__anon095219370103
GIT_ENOTFOUND	my_project/libgit2/include/git2/errors.h	/^	GIT_ENOTFOUND       = -3,		\/**< Requested object could not be found *\/$/;"	e	enum:__anon095219370103
GIT_ENOTSUPPORTED	my_project/libgit2/include/git2/errors.h	/^	GIT_ENOTSUPPORTED   = -39,	\/**< An option is not supported *\/$/;"	e	enum:__anon095219370103
GIT_EOL_CRLF	my_project/libgit2/src/libgit2/repository.h	/^	GIT_EOL_CRLF = 1,$/;"	e	enum:__anon453495b50203
GIT_EOL_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_EOL_DEFAULT = GIT_EOL_NATIVE,$/;"	e	enum:__anon453495b50203
GIT_EOL_LF	my_project/libgit2/src/libgit2/repository.h	/^	GIT_EOL_LF = 2,$/;"	e	enum:__anon453495b50203
GIT_EOL_NATIVE	my_project/libgit2/src/libgit2/repository.h	/^	GIT_EOL_NATIVE = GIT_EOL_CRLF,$/;"	e	enum:__anon453495b50203
GIT_EOL_UNSET	my_project/libgit2/src/libgit2/repository.h	/^	GIT_EOL_UNSET = 0,$/;"	e	enum:__anon453495b50203
GIT_EOWNER	my_project/libgit2/include/git2/errors.h	/^	GIT_EOWNER          = -36,	\/**< The object is not owned by the current user *\/$/;"	e	enum:__anon095219370103
GIT_EPEEL	my_project/libgit2/include/git2/errors.h	/^	GIT_EPEEL           = -19,	\/**< The requested peel operation is not possible *\/$/;"	e	enum:__anon095219370103
GIT_EREADONLY	my_project/libgit2/include/git2/errors.h	/^	GIT_EREADONLY       = -40	\/**< The subject is read-only *\/$/;"	e	enum:__anon095219370103
GIT_ERROR	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR           = -1,		\/**< Generic error *\/$/;"	e	enum:__anon095219370103
GIT_ERROR_CALLBACK	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_CALLBACK,$/;"	e	enum:__anon095219370303
GIT_ERROR_CHECKOUT	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_CHECKOUT,$/;"	e	enum:__anon095219370303
GIT_ERROR_CHECK_ALLOC	my_project/libgit2/src/util/git2_util.h	/^#define GIT_ERROR_CHECK_ALLOC(/;"	d
GIT_ERROR_CHECK_ALLOC_ADD	my_project/libgit2/src/util/git2_util.h	/^#define GIT_ERROR_CHECK_ALLOC_ADD(/;"	d
GIT_ERROR_CHECK_ALLOC_ADD3	my_project/libgit2/src/util/git2_util.h	/^#define GIT_ERROR_CHECK_ALLOC_ADD3(/;"	d
GIT_ERROR_CHECK_ALLOC_ADD4	my_project/libgit2/src/util/git2_util.h	/^#define GIT_ERROR_CHECK_ALLOC_ADD4(/;"	d
GIT_ERROR_CHECK_ALLOC_ADD5	my_project/libgit2/src/util/git2_util.h	/^#define GIT_ERROR_CHECK_ALLOC_ADD5(/;"	d
GIT_ERROR_CHECK_ALLOC_MULTIPLY	my_project/libgit2/src/util/git2_util.h	/^#define GIT_ERROR_CHECK_ALLOC_MULTIPLY(/;"	d
GIT_ERROR_CHECK_ALLOC_STR	my_project/libgit2/src/util/git2_util.h	/^#define GIT_ERROR_CHECK_ALLOC_STR(/;"	d
GIT_ERROR_CHECK_ARRAY	my_project/libgit2/src/util/array.h	/^#define GIT_ERROR_CHECK_ARRAY(/;"	d
GIT_ERROR_CHECK_BLOBSIZE	my_project/libgit2/src/libgit2/blob.h	/^#define GIT_ERROR_CHECK_BLOBSIZE(/;"	d
GIT_ERROR_CHECK_ERROR	my_project/libgit2/src/util/git2_util.h	/^#define GIT_ERROR_CHECK_ERROR(/;"	d
GIT_ERROR_CHECK_VERSION	my_project/libgit2/src/libgit2/common.h	/^#define GIT_ERROR_CHECK_VERSION(/;"	d
GIT_ERROR_CHERRYPICK	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_CHERRYPICK,$/;"	e	enum:__anon095219370303
GIT_ERROR_CONFIG	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_CONFIG,$/;"	e	enum:__anon095219370303
GIT_ERROR_DESCRIBE	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_DESCRIBE,$/;"	e	enum:__anon095219370303
GIT_ERROR_FETCHHEAD	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_FETCHHEAD,$/;"	e	enum:__anon095219370303
GIT_ERROR_FILESYSTEM	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_FILESYSTEM,$/;"	e	enum:__anon095219370303
GIT_ERROR_FILTER	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_FILTER,$/;"	e	enum:__anon095219370303
GIT_ERROR_GRAFTS	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_GRAFTS$/;"	e	enum:__anon095219370303
GIT_ERROR_HTTP	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_HTTP,$/;"	e	enum:__anon095219370303
GIT_ERROR_INDEX	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_INDEX,$/;"	e	enum:__anon095219370303
GIT_ERROR_INDEXER	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_INDEXER,$/;"	e	enum:__anon095219370303
GIT_ERROR_INTERNAL	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_INTERNAL,$/;"	e	enum:__anon095219370303
GIT_ERROR_INVALID	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_INVALID,$/;"	e	enum:__anon095219370303
GIT_ERROR_MERGE	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_MERGE,$/;"	e	enum:__anon095219370303
GIT_ERROR_NET	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_NET,$/;"	e	enum:__anon095219370303
GIT_ERROR_NOMEMORY	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_NOMEMORY,$/;"	e	enum:__anon095219370303
GIT_ERROR_NONE	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_NONE = 0,$/;"	e	enum:__anon095219370303
GIT_ERROR_OBJECT	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_OBJECT,$/;"	e	enum:__anon095219370303
GIT_ERROR_ODB	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_ODB,$/;"	e	enum:__anon095219370303
GIT_ERROR_OS	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_OS,$/;"	e	enum:__anon095219370303
GIT_ERROR_PATCH	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_PATCH,$/;"	e	enum:__anon095219370303
GIT_ERROR_REBASE	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_REBASE,$/;"	e	enum:__anon095219370303
GIT_ERROR_REFERENCE	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_REFERENCE,$/;"	e	enum:__anon095219370303
GIT_ERROR_REGEX	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_REGEX,$/;"	e	enum:__anon095219370303
GIT_ERROR_REPOSITORY	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_REPOSITORY,$/;"	e	enum:__anon095219370303
GIT_ERROR_REVERT	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_REVERT,$/;"	e	enum:__anon095219370303
GIT_ERROR_SHA	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_SHA,$/;"	e	enum:__anon095219370303
GIT_ERROR_SHA1	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_ERROR_SHA1 /;"	d
GIT_ERROR_SSH	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_SSH,$/;"	e	enum:__anon095219370303
GIT_ERROR_SSL	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_SSL,$/;"	e	enum:__anon095219370303
GIT_ERROR_STASH	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_STASH,$/;"	e	enum:__anon095219370303
GIT_ERROR_SUBMODULE	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_SUBMODULE,$/;"	e	enum:__anon095219370303
GIT_ERROR_TAG	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_TAG,$/;"	e	enum:__anon095219370303
GIT_ERROR_THREAD	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_THREAD,$/;"	e	enum:__anon095219370303
GIT_ERROR_TREE	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_TREE,$/;"	e	enum:__anon095219370303
GIT_ERROR_WORKTREE	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_WORKTREE,$/;"	e	enum:__anon095219370303
GIT_ERROR_ZLIB	my_project/libgit2/include/git2/errors.h	/^	GIT_ERROR_ZLIB,$/;"	e	enum:__anon095219370303
GIT_EUNBORNBRANCH	my_project/libgit2/include/git2/errors.h	/^	GIT_EUNBORNBRANCH   =  -9,	\/**< HEAD refers to branch with no commits *\/$/;"	e	enum:__anon095219370103
GIT_EUNCHANGED	my_project/libgit2/include/git2/errors.h	/^	GIT_EUNCHANGED      = -38,	\/**< There were no changes *\/$/;"	e	enum:__anon095219370103
GIT_EUNCOMMITTED	my_project/libgit2/include/git2/errors.h	/^	GIT_EUNCOMMITTED    = -22,	\/**< Uncommitted changes in index prevented operation *\/$/;"	e	enum:__anon095219370103
GIT_EUNMERGED	my_project/libgit2/include/git2/errors.h	/^	GIT_EUNMERGED       = -10,	\/**< Merge in progress prevented operation *\/$/;"	e	enum:__anon095219370103
GIT_EUSER	my_project/libgit2/include/git2/errors.h	/^	GIT_EUSER           = -7,$/;"	e	enum:__anon095219370103
GIT_EXPERIMENTAL_SHA256	my_project/libgit2/cmake/ExperimentalFeatures.cmake	/^	set(GIT_EXPERIMENTAL_SHA256 1)$/;"	v
GIT_EXTERN	my_project/libgit2/include/git2/common.h	/^# define GIT_EXTERN(/;"	d
GIT_FEATURE_HTTPS	my_project/libgit2/include/git2/common.h	/^	GIT_FEATURE_HTTPS	= (1 << 1),$/;"	e	enum:__anon3e1002a30103
GIT_FEATURE_NSEC	my_project/libgit2/include/git2/common.h	/^	GIT_FEATURE_NSEC	= (1 << 3)$/;"	e	enum:__anon3e1002a30103
GIT_FEATURE_SSH	my_project/libgit2/include/git2/common.h	/^	GIT_FEATURE_SSH		= (1 << 2),$/;"	e	enum:__anon3e1002a30103
GIT_FEATURE_THREADS	my_project/libgit2/include/git2/common.h	/^	GIT_FEATURE_THREADS	= (1 << 0),$/;"	e	enum:__anon3e1002a30103
GIT_FETCH_DEPTH_FULL	my_project/libgit2/include/git2/remote.h	/^	GIT_FETCH_DEPTH_FULL = 0,$/;"	e	enum:__anon144be4e60703
GIT_FETCH_DEPTH_UNSHALLOW	my_project/libgit2/include/git2/remote.h	/^	GIT_FETCH_DEPTH_UNSHALLOW = 2147483647$/;"	e	enum:__anon144be4e60703
GIT_FETCH_HEAD_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_FETCH_HEAD_FILE /;"	d
GIT_FETCH_NO_PRUNE	my_project/libgit2/include/git2/remote.h	/^	GIT_FETCH_NO_PRUNE$/;"	e	enum:__anon144be4e60503
GIT_FETCH_OPTIONS_INIT	my_project/libgit2/include/git2/remote.h	/^#define GIT_FETCH_OPTIONS_INIT /;"	d
GIT_FETCH_OPTIONS_VERSION	my_project/libgit2/include/git2/remote.h	/^#define GIT_FETCH_OPTIONS_VERSION /;"	d
GIT_FETCH_PRUNE	my_project/libgit2/include/git2/remote.h	/^	GIT_FETCH_PRUNE,$/;"	e	enum:__anon144be4e60503
GIT_FETCH_PRUNE_UNSPECIFIED	my_project/libgit2/include/git2/remote.h	/^	GIT_FETCH_PRUNE_UNSPECIFIED,$/;"	e	enum:__anon144be4e60503
GIT_FILEBUF_APPEND	my_project/libgit2/src/util/filebuf.h	/^#define GIT_FILEBUF_APPEND /;"	d
GIT_FILEBUF_CREATE_LEADING_DIRS	my_project/libgit2/src/util/filebuf.h	/^#define GIT_FILEBUF_CREATE_LEADING_DIRS	/;"	d
GIT_FILEBUF_DEFLATE_SHIFT	my_project/libgit2/src/util/filebuf.h	/^#define GIT_FILEBUF_DEFLATE_SHIFT /;"	d
GIT_FILEBUF_DO_NOT_BUFFER	my_project/libgit2/src/util/filebuf.h	/^#define GIT_FILEBUF_DO_NOT_BUFFER /;"	d
GIT_FILEBUF_FSYNC	my_project/libgit2/src/util/filebuf.h	/^#define GIT_FILEBUF_FSYNC /;"	d
GIT_FILEBUF_HASH_SHA1	my_project/libgit2/src/util/filebuf.h	/^#define GIT_FILEBUF_HASH_SHA1 /;"	d
GIT_FILEBUF_HASH_SHA256	my_project/libgit2/src/util/filebuf.h	/^#define GIT_FILEBUF_HASH_SHA256 /;"	d
GIT_FILEBUF_INIT	my_project/libgit2/src/util/filebuf.h	/^#define GIT_FILEBUF_INIT /;"	d
GIT_FILEBUF_TEMPORARY	my_project/libgit2/src/util/filebuf.h	/^#define GIT_FILEBUF_TEMPORARY /;"	d
GIT_FILEBUF_THREADS	my_project/libgit2/src/util/filebuf.h	/^#	define GIT_FILEBUF_THREADS$/;"	d
GIT_FILELOCK_EXTENSION	my_project/libgit2/src/util/filebuf.h	/^#define GIT_FILELOCK_EXTENSION /;"	d
GIT_FILELOCK_EXTLENGTH	my_project/libgit2/src/util/filebuf.h	/^#define GIT_FILELOCK_EXTLENGTH /;"	d
GIT_FILEMODE_BLOB	my_project/libgit2/include/git2/types.h	/^	GIT_FILEMODE_BLOB                = 0100644,$/;"	e	enum:__anon5cceb56f0403
GIT_FILEMODE_BLOB_EXECUTABLE	my_project/libgit2/include/git2/types.h	/^	GIT_FILEMODE_BLOB_EXECUTABLE     = 0100755,$/;"	e	enum:__anon5cceb56f0403
GIT_FILEMODE_BLOB_GROUP_WRITABLE	my_project/libgit2/src/libgit2/tree.h	/^#define GIT_FILEMODE_BLOB_GROUP_WRITABLE /;"	d
GIT_FILEMODE_COMMIT	my_project/libgit2/include/git2/types.h	/^	GIT_FILEMODE_COMMIT              = 0160000$/;"	e	enum:__anon5cceb56f0403
GIT_FILEMODE_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_FILEMODE_DEFAULT = GIT_CONFIGMAP_TRUE,$/;"	e	enum:__anon453495b50203
GIT_FILEMODE_DEFAULT	my_project/libgit2/src/util/futils.c	/^#define GIT_FILEMODE_DEFAULT /;"	d	file:
GIT_FILEMODE_LINK	my_project/libgit2/include/git2/types.h	/^	GIT_FILEMODE_LINK                = 0120000,$/;"	e	enum:__anon5cceb56f0403
GIT_FILEMODE_TREE	my_project/libgit2/include/git2/types.h	/^	GIT_FILEMODE_TREE                = 0040000,$/;"	e	enum:__anon5cceb56f0403
GIT_FILEMODE_UNREADABLE	my_project/libgit2/include/git2/types.h	/^	GIT_FILEMODE_UNREADABLE          = 0000000,$/;"	e	enum:__anon5cceb56f0403
GIT_FILE_CONTENT_PREFIX	my_project/libgit2/src/libgit2/repository.c	/^#define GIT_FILE_CONTENT_PREFIX /;"	d	file:
GIT_FILTER_ALLOW_UNSAFE	my_project/libgit2/include/git2/filter.h	/^	GIT_FILTER_ALLOW_UNSAFE = (1u << 0),$/;"	e	enum:__anon331c2ce00203
GIT_FILTER_ATTRIBUTES_FROM_COMMIT	my_project/libgit2/include/git2/filter.h	/^	GIT_FILTER_ATTRIBUTES_FROM_COMMIT = (1u << 3)$/;"	e	enum:__anon331c2ce00203
GIT_FILTER_ATTRIBUTES_FROM_HEAD	my_project/libgit2/include/git2/filter.h	/^	GIT_FILTER_ATTRIBUTES_FROM_HEAD = (1u << 2),$/;"	e	enum:__anon331c2ce00203
GIT_FILTER_BYTES_TO_CHECK_NUL	my_project/libgit2/src/libgit2/filter.h	/^#define GIT_FILTER_BYTES_TO_CHECK_NUL /;"	d
GIT_FILTER_CLEAN	my_project/libgit2/include/git2/filter.h	/^	GIT_FILTER_CLEAN = GIT_FILTER_TO_ODB$/;"	e	enum:__anon331c2ce00103
GIT_FILTER_CRLF	my_project/libgit2/include/git2/sys/filter.h	/^#define GIT_FILTER_CRLF /;"	d
GIT_FILTER_CRLF_PRIORITY	my_project/libgit2/include/git2/sys/filter.h	/^#define GIT_FILTER_CRLF_PRIORITY /;"	d
GIT_FILTER_DEFAULT	my_project/libgit2/include/git2/filter.h	/^	GIT_FILTER_DEFAULT = 0u,$/;"	e	enum:__anon331c2ce00203
GIT_FILTER_DRIVER_PRIORITY	my_project/libgit2/include/git2/sys/filter.h	/^#define GIT_FILTER_DRIVER_PRIORITY /;"	d
GIT_FILTER_IDENT	my_project/libgit2/include/git2/sys/filter.h	/^#define GIT_FILTER_IDENT /;"	d
GIT_FILTER_IDENT_PRIORITY	my_project/libgit2/include/git2/sys/filter.h	/^#define GIT_FILTER_IDENT_PRIORITY /;"	d
GIT_FILTER_INIT	my_project/libgit2/include/git2/sys/filter.h	/^#define GIT_FILTER_INIT /;"	d
GIT_FILTER_NO_SYSTEM_ATTRIBUTES	my_project/libgit2/include/git2/filter.h	/^	GIT_FILTER_NO_SYSTEM_ATTRIBUTES = (1u << 1),$/;"	e	enum:__anon331c2ce00203
GIT_FILTER_OPTIONS_INIT	my_project/libgit2/include/git2/filter.h	/^ #define GIT_FILTER_OPTIONS_INIT /;"	d
GIT_FILTER_OPTIONS_VERSION	my_project/libgit2/include/git2/filter.h	/^ #define GIT_FILTER_OPTIONS_VERSION /;"	d
GIT_FILTER_SESSION_INIT	my_project/libgit2/src/libgit2/filter.h	/^#define GIT_FILTER_SESSION_INIT /;"	d
GIT_FILTER_SMUDGE	my_project/libgit2/include/git2/filter.h	/^	GIT_FILTER_SMUDGE = GIT_FILTER_TO_WORKTREE,$/;"	e	enum:__anon331c2ce00103
GIT_FILTER_TO_ODB	my_project/libgit2/include/git2/filter.h	/^	GIT_FILTER_TO_ODB = 1,$/;"	e	enum:__anon331c2ce00103
GIT_FILTER_TO_WORKTREE	my_project/libgit2/include/git2/filter.h	/^	GIT_FILTER_TO_WORKTREE = 0,$/;"	e	enum:__anon331c2ce00103
GIT_FILTER_VERSION	my_project/libgit2/include/git2/sys/filter.h	/^#define GIT_FILTER_VERSION /;"	d
GIT_FLEX_ARRAY	my_project/libgit2/src/util/cc-compat.h	/^#			define GIT_FLEX_ARRAY /;"	d
GIT_FLEX_ARRAY	my_project/libgit2/src/util/cc-compat.h	/^#		define GIT_FLEX_ARRAY /;"	d
GIT_FORMAT_PRINTF	my_project/libgit2/include/git2/common.h	/^# define GIT_FORMAT_PRINTF(/;"	d
GIT_FSYNCOBJECTFILES_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_FSYNCOBJECTFILES_DEFAULT = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon453495b50203
GIT_FS_PATH_DIRITER_INIT	my_project/libgit2/src/util/fs_path.h	/^#define GIT_FS_PATH_DIRITER_INIT /;"	d
GIT_FS_PATH_DIR_IGNORE_CASE	my_project/libgit2/src/util/fs_path.h	/^	GIT_FS_PATH_DIR_IGNORE_CASE = (1u << 0),$/;"	e	enum:__anonea45684b0103
GIT_FS_PATH_DIR_INCLUDE_DOT_AND_DOTDOT	my_project/libgit2/src/util/fs_path.h	/^	GIT_FS_PATH_DIR_INCLUDE_DOT_AND_DOTDOT = (1u << 2),$/;"	e	enum:__anonea45684b0103
GIT_FS_PATH_DIR_PRECOMPOSE_UNICODE	my_project/libgit2/src/util/fs_path.h	/^	GIT_FS_PATH_DIR_PRECOMPOSE_UNICODE = (1u << 1),$/;"	e	enum:__anonea45684b0103
GIT_FS_PATH_EQUAL	my_project/libgit2/src/util/fs_path.h	/^	GIT_FS_PATH_EQUAL = 1,$/;"	e	enum:__anonea45684b0203
GIT_FS_PATH_NOTEQUAL	my_project/libgit2/src/util/fs_path.h	/^	GIT_FS_PATH_NOTEQUAL = 0,$/;"	e	enum:__anonea45684b0203
GIT_FS_PATH_OWNER_ADMINISTRATOR	my_project/libgit2/src/util/fs_path.h	/^	GIT_FS_PATH_OWNER_ADMINISTRATOR = (1 << 1),$/;"	e	enum:__anonea45684b0403
GIT_FS_PATH_OWNER_CURRENT_USER	my_project/libgit2/src/util/fs_path.h	/^	GIT_FS_PATH_OWNER_CURRENT_USER = (1 << 0),$/;"	e	enum:__anonea45684b0403
GIT_FS_PATH_OWNER_NONE	my_project/libgit2/src/util/fs_path.h	/^	GIT_FS_PATH_OWNER_NONE = 0,$/;"	e	enum:__anonea45684b0403
GIT_FS_PATH_OWNER_OTHER	my_project/libgit2/src/util/fs_path.h	/^	GIT_FS_PATH_OWNER_OTHER = (1 << 4)$/;"	e	enum:__anonea45684b0403
GIT_FS_PATH_OWNER_RUNNING_SUDO	my_project/libgit2/src/util/fs_path.h	/^	GIT_FS_PATH_OWNER_RUNNING_SUDO = (1 << 3),$/;"	e	enum:__anonea45684b0403
GIT_FS_PATH_PREFIX	my_project/libgit2/src/util/fs_path.h	/^	GIT_FS_PATH_PREFIX = 2$/;"	e	enum:__anonea45684b0203
GIT_FS_PATH_REJECT_BACKSLASH	my_project/libgit2/src/util/fs_path.h	/^#define GIT_FS_PATH_REJECT_BACKSLASH /;"	d
GIT_FS_PATH_REJECT_DOS_PATHS	my_project/libgit2/src/util/fs_path.h	/^#define GIT_FS_PATH_REJECT_DOS_PATHS /;"	d
GIT_FS_PATH_REJECT_EMPTY_COMPONENT	my_project/libgit2/src/util/fs_path.h	/^#define GIT_FS_PATH_REJECT_EMPTY_COMPONENT /;"	d
GIT_FS_PATH_REJECT_FILESYSTEM_DEFAULTS	my_project/libgit2/src/util/fs_path.h	/^# define GIT_FS_PATH_REJECT_FILESYSTEM_DEFAULTS /;"	d
GIT_FS_PATH_REJECT_LONG_PATHS	my_project/libgit2/src/util/fs_path.h	/^#define GIT_FS_PATH_REJECT_LONG_PATHS /;"	d
GIT_FS_PATH_REJECT_MAX	my_project/libgit2/src/util/fs_path.h	/^#define GIT_FS_PATH_REJECT_MAX /;"	d
GIT_FS_PATH_REJECT_NT_CHARS	my_project/libgit2/src/util/fs_path.h	/^#define GIT_FS_PATH_REJECT_NT_CHARS /;"	d
GIT_FS_PATH_REJECT_SLASH	my_project/libgit2/src/util/fs_path.h	/^#define GIT_FS_PATH_REJECT_SLASH /;"	d
GIT_FS_PATH_REJECT_TRAILING_COLON	my_project/libgit2/src/util/fs_path.h	/^#define GIT_FS_PATH_REJECT_TRAILING_COLON /;"	d
GIT_FS_PATH_REJECT_TRAILING_DOT	my_project/libgit2/src/util/fs_path.h	/^#define GIT_FS_PATH_REJECT_TRAILING_DOT /;"	d
GIT_FS_PATH_REJECT_TRAILING_SPACE	my_project/libgit2/src/util/fs_path.h	/^#define GIT_FS_PATH_REJECT_TRAILING_SPACE /;"	d
GIT_FS_PATH_REJECT_TRAVERSAL	my_project/libgit2/src/util/fs_path.h	/^#define GIT_FS_PATH_REJECT_TRAVERSAL /;"	d
GIT_FS_PATH_USER_IS_ADMINISTRATOR	my_project/libgit2/src/util/fs_path.h	/^	GIT_FS_PATH_USER_IS_ADMINISTRATOR = (1 << 2),$/;"	e	enum:__anonea45684b0403
GIT_GITDIR_FILE	my_project/libgit2/src/libgit2/repository.c	/^#define GIT_GITDIR_FILE /;"	d	file:
GIT_GLOB_SPECIAL	my_project/libgit2/src/util/wildmatch.c	/^#define GIT_GLOB_SPECIAL /;"	d	file:
GIT_GSSAPI	my_project/libgit2/cmake/SelectGSSAPI.cmake	/^		set(GIT_GSSAPI 1)$/;"	v
GIT_GSSAPI	my_project/libgit2/cmake/SelectGSSAPI.cmake	/^	set(GIT_GSSAPI 0)$/;"	v
GIT_GSSFRAMEWORK	my_project/libgit2/cmake/SelectGSSAPI.cmake	/^		set(GIT_GSSFRAMEWORK 1)$/;"	v
GIT_HASHSIG_ALLOW_SMALL_FILES	my_project/libgit2/include/git2/sys/hashsig.h	/^	GIT_HASHSIG_ALLOW_SMALL_FILES = (1 << 2)$/;"	e	enum:__anon4cb943af0103
GIT_HASHSIG_IGNORE_WHITESPACE	my_project/libgit2/include/git2/sys/hashsig.h	/^	GIT_HASHSIG_IGNORE_WHITESPACE = (1 << 0),$/;"	e	enum:__anon4cb943af0103
GIT_HASHSIG_NORMAL	my_project/libgit2/include/git2/sys/hashsig.h	/^	GIT_HASHSIG_NORMAL = 0,$/;"	e	enum:__anon4cb943af0103
GIT_HASHSIG_SMART_WHITESPACE	my_project/libgit2/include/git2/sys/hashsig.h	/^	GIT_HASHSIG_SMART_WHITESPACE = (1 << 1),$/;"	e	enum:__anon4cb943af0103
GIT_HASH_ALGORITHM_NONE	my_project/libgit2/src/util/hash.h	/^	GIT_HASH_ALGORITHM_NONE = 0,$/;"	e	enum:__anon187871ca0203
GIT_HASH_ALGORITHM_SHA1	my_project/libgit2/src/util/hash.h	/^	GIT_HASH_ALGORITHM_SHA1,$/;"	e	enum:__anon187871ca0203
GIT_HASH_ALGORITHM_SHA256	my_project/libgit2/src/util/hash.h	/^	GIT_HASH_ALGORITHM_SHA256$/;"	e	enum:__anon187871ca0203
GIT_HASH_CNG_DLL_NAME	my_project/libgit2/src/util/hash/win32.c	/^#define GIT_HASH_CNG_DLL_NAME /;"	d	file:
GIT_HASH_CNG_HASH_OBJECT_LEN	my_project/libgit2/src/util/hash/win32.c	/^#define GIT_HASH_CNG_HASH_OBJECT_LEN /;"	d	file:
GIT_HASH_CNG_HASH_REUSABLE	my_project/libgit2/src/util/hash/win32.c	/^#define GIT_HASH_CNG_HASH_REUSABLE /;"	d	file:
GIT_HASH_CNG_SHA1_TYPE	my_project/libgit2/src/util/hash/win32.c	/^#define GIT_HASH_CNG_SHA1_TYPE /;"	d	file:
GIT_HASH_CNG_SHA256_TYPE	my_project/libgit2/src/util/hash/win32.c	/^#define GIT_HASH_CNG_SHA256_TYPE /;"	d	file:
GIT_HASH_MAX_SIZE	my_project/libgit2/src/util/hash.h	/^#define GIT_HASH_MAX_SIZE /;"	d
GIT_HASH_SHA1_SIZE	my_project/libgit2/src/util/hash/sha.h	/^#define GIT_HASH_SHA1_SIZE /;"	d
GIT_HASH_SHA256_SIZE	my_project/libgit2/src/util/hash/sha.h	/^#define GIT_HASH_SHA256_SIZE /;"	d
GIT_HASH_WIN32_CNG	my_project/libgit2/src/util/hash/win32.h	/^	GIT_HASH_WIN32_CNG$/;"	e	enum:__anon3079894c0103
GIT_HASH_WIN32_CRYPTOAPI	my_project/libgit2/src/util/hash/win32.h	/^	GIT_HASH_WIN32_CRYPTOAPI,$/;"	e	enum:__anon3079894c0103
GIT_HASH_WIN32_INVALID	my_project/libgit2/src/util/hash/win32.h	/^	GIT_HASH_WIN32_INVALID = 0,$/;"	e	enum:__anon3079894c0103
GIT_HEAD_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_HEAD_FILE /;"	d
GIT_HOOKS_DIR	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_HOOKS_DIR /;"	d
GIT_HOOKS_DIR_MODE	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_HOOKS_DIR_MODE /;"	d
GIT_HOOKS_README_CONTENT	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_HOOKS_README_CONTENT /;"	d
GIT_HOOKS_README_FILE	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_HOOKS_README_FILE /;"	d
GIT_HOOKS_README_MODE	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_HOOKS_README_MODE /;"	d
GIT_HTTPPARSER_BUILTIN	my_project/libgit2/cmake/SelectHTTPParser.cmake	/^	set(GIT_HTTPPARSER_BUILTIN 1)$/;"	v
GIT_HTTPPARSER_HTTPPARSER	my_project/libgit2/cmake/SelectHTTPParser.cmake	/^		set(GIT_HTTPPARSER_HTTPPARSER 1)$/;"	v
GIT_HTTPPARSER_LLHTTP	my_project/libgit2/cmake/SelectHTTPParser.cmake	/^		set(GIT_HTTPPARSER_LLHTTP 1)$/;"	v
GIT_HTTPS	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^	set(GIT_HTTPS 0)$/;"	v
GIT_HTTPS	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^	set(GIT_HTTPS 1)$/;"	v
GIT_HTTP_AUTH_BASIC	my_project/libgit2/src/libgit2/transports/auth.h	/^	GIT_HTTP_AUTH_BASIC = 1,$/;"	e	enum:__anon4118c2d60103
GIT_HTTP_AUTH_NEGOTIATE	my_project/libgit2/src/libgit2/transports/auth.h	/^	GIT_HTTP_AUTH_NEGOTIATE = 2,$/;"	e	enum:__anon4118c2d60103
GIT_HTTP_AUTH_NTLM	my_project/libgit2/src/libgit2/transports/auth.h	/^	GIT_HTTP_AUTH_NTLM = 4$/;"	e	enum:__anon4118c2d60103
GIT_HTTP_FOUND	my_project/libgit2/src/libgit2/transports/httpclient.h	/^#define GIT_HTTP_FOUND /;"	d
GIT_HTTP_METHOD_CONNECT	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	GIT_HTTP_METHOD_CONNECT$/;"	e	enum:__anon3d590bc30103
GIT_HTTP_METHOD_GET	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	GIT_HTTP_METHOD_GET,$/;"	e	enum:__anon3d590bc30103
GIT_HTTP_METHOD_POST	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	GIT_HTTP_METHOD_POST,$/;"	e	enum:__anon3d590bc30103
GIT_HTTP_MOVED_PERMANENTLY	my_project/libgit2/src/libgit2/transports/httpclient.h	/^#define GIT_HTTP_MOVED_PERMANENTLY /;"	d
GIT_HTTP_PARSER_OK	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	GIT_HTTP_PARSER_OK     = HPE_OK,$/;"	e	enum:__anon03e70bb10103
GIT_HTTP_PARSER_OK	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	GIT_HTTP_PARSER_OK     = HPE_OK,$/;"	e	enum:__anon03e70bb10403
GIT_HTTP_PARSER_PAUSED	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	GIT_HTTP_PARSER_PAUSED = HPE_PAUSED,$/;"	e	enum:__anon03e70bb10103
GIT_HTTP_PARSER_PAUSED	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	GIT_HTTP_PARSER_PAUSED = HPE_PAUSED,$/;"	e	enum:__anon03e70bb10403
GIT_HTTP_PARSER_REQUEST	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	GIT_HTTP_PARSER_REQUEST  = HTTP_REQUEST,$/;"	e	enum:__anon03e70bb10203
GIT_HTTP_PARSER_REQUEST	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	GIT_HTTP_PARSER_REQUEST  = HTTP_REQUEST,$/;"	e	enum:__anon03e70bb10503
GIT_HTTP_PARSER_RESPONSE	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	GIT_HTTP_PARSER_RESPONSE = HTTP_RESPONSE,$/;"	e	enum:__anon03e70bb10203
GIT_HTTP_PARSER_RESPONSE	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	GIT_HTTP_PARSER_RESPONSE = HTTP_RESPONSE,$/;"	e	enum:__anon03e70bb10503
GIT_HTTP_PERMANENT_REDIRECT	my_project/libgit2/src/libgit2/transports/httpclient.h	/^#define GIT_HTTP_PERMANENT_REDIRECT /;"	d
GIT_HTTP_REPLAY_MAX	my_project/libgit2/src/libgit2/transports/http.h	/^#define GIT_HTTP_REPLAY_MAX /;"	d
GIT_HTTP_SEE_OTHER	my_project/libgit2/src/libgit2/transports/httpclient.h	/^#define GIT_HTTP_SEE_OTHER /;"	d
GIT_HTTP_STATUS_CONTINUE	my_project/libgit2/src/libgit2/transports/httpclient.h	/^#define GIT_HTTP_STATUS_CONTINUE /;"	d
GIT_HTTP_STATUS_OK	my_project/libgit2/src/libgit2/transports/httpclient.h	/^#define GIT_HTTP_STATUS_OK /;"	d
GIT_HTTP_STATUS_PROXY_AUTHENTICATION_REQUIRED	my_project/libgit2/src/libgit2/transports/httpclient.h	/^#define GIT_HTTP_STATUS_PROXY_AUTHENTICATION_REQUIRED /;"	d
GIT_HTTP_STATUS_UNAUTHORIZED	my_project/libgit2/src/libgit2/transports/httpclient.h	/^#define GIT_HTTP_STATUS_UNAUTHORIZED /;"	d
GIT_HTTP_TEMPORARY_REDIRECT	my_project/libgit2/src/libgit2/transports/httpclient.h	/^#define GIT_HTTP_TEMPORARY_REDIRECT /;"	d
GIT_IDXENTRY_ADDED	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_ADDED /;"	d
GIT_IDXENTRY_CONFLICTED	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_CONFLICTED /;"	d
GIT_IDXENTRY_EXTENDED	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_EXTENDED /;"	d
GIT_IDXENTRY_EXTENDED2	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_EXTENDED2 /;"	d
GIT_IDXENTRY_EXTENDED_FLAGS	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_EXTENDED_FLAGS /;"	d
GIT_IDXENTRY_HASHED	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_HASHED /;"	d
GIT_IDXENTRY_INTENT_TO_ADD	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_INTENT_TO_ADD /;"	d
GIT_IDXENTRY_NAMEMASK	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_NAMEMASK /;"	d
GIT_IDXENTRY_NEW_SKIP_WORKTREE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_NEW_SKIP_WORKTREE /;"	d
GIT_IDXENTRY_REMOVE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_REMOVE /;"	d
GIT_IDXENTRY_SKIP_WORKTREE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_SKIP_WORKTREE /;"	d
GIT_IDXENTRY_STAGE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_STAGE(/;"	d
GIT_IDXENTRY_STAGEMASK	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_STAGEMASK /;"	d
GIT_IDXENTRY_STAGESHIFT	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_STAGESHIFT /;"	d
GIT_IDXENTRY_STAGE_SET	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_STAGE_SET(/;"	d
GIT_IDXENTRY_UNHASHED	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_UNHASHED /;"	d
GIT_IDXENTRY_UNPACKED	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_UNPACKED /;"	d
GIT_IDXENTRY_UPDATE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_UPDATE /;"	d
GIT_IDXENTRY_UPTODATE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_UPTODATE /;"	d
GIT_IDXENTRY_VALID	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_VALID /;"	d
GIT_IDXENTRY_WT_REMOVE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_IDXENTRY_WT_REMOVE /;"	d
GIT_IGNORECASE_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_IGNORECASE_DEFAULT = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon453495b50203
GIT_IGNORESTAT_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_IGNORESTAT_DEFAULT = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon453495b50203
GIT_IGNORE_CONFIG	my_project/libgit2/src/libgit2/attrcache.h	/^#define GIT_IGNORE_CONFIG /;"	d
GIT_IGNORE_DEFAULT_RULES	my_project/libgit2/src/libgit2/ignore.c	/^#define GIT_IGNORE_DEFAULT_RULES /;"	d	file:
GIT_IGNORE_FALSE	my_project/libgit2/src/libgit2/ignore.h	/^	GIT_IGNORE_FALSE = 0,$/;"	e	enum:__anonc29a75590203
GIT_IGNORE_FILE	my_project/libgit2/src/libgit2/ignore.h	/^#define GIT_IGNORE_FILE	/;"	d
GIT_IGNORE_FILE_INREPO	my_project/libgit2/src/libgit2/ignore.h	/^#define GIT_IGNORE_FILE_INREPO	/;"	d
GIT_IGNORE_FILE_XDG	my_project/libgit2/src/libgit2/ignore.h	/^#define GIT_IGNORE_FILE_XDG	/;"	d
GIT_IGNORE_INTERNAL	my_project/libgit2/src/libgit2/ignore.c	/^#define GIT_IGNORE_INTERNAL	/;"	d	file:
GIT_IGNORE_NOTFOUND	my_project/libgit2/src/libgit2/ignore.h	/^	GIT_IGNORE_NOTFOUND = -1,$/;"	e	enum:__anonc29a75590203
GIT_IGNORE_TRUE	my_project/libgit2/src/libgit2/ignore.h	/^	GIT_IGNORE_TRUE = 1$/;"	e	enum:__anonc29a75590203
GIT_IGNORE_UNCHECKED	my_project/libgit2/src/libgit2/ignore.h	/^	GIT_IGNORE_UNCHECKED = -2,$/;"	e	enum:__anonc29a75590203
GIT_INDEXCAP_FROM_OWNER	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_INDEXCAP_FROM_OWNER /;"	d
GIT_INDEXCAP_IGNORE_CASE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_INDEXCAP_IGNORE_CASE /;"	d
GIT_INDEXCAP_NO_FILEMODE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_INDEXCAP_NO_FILEMODE /;"	d
GIT_INDEXCAP_NO_SYMLINKS	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_INDEXCAP_NO_SYMLINKS /;"	d
GIT_INDEXER_OPTIONS_INIT	my_project/libgit2/include/git2/indexer.h	/^#define GIT_INDEXER_OPTIONS_INIT /;"	d
GIT_INDEXER_OPTIONS_VERSION	my_project/libgit2/include/git2/indexer.h	/^#define GIT_INDEXER_OPTIONS_VERSION /;"	d
GIT_INDEXWRITER_INIT	my_project/libgit2/src/libgit2/index.h	/^#define GIT_INDEXWRITER_INIT /;"	d
GIT_INDEX_ADD_CHECK_PATHSPEC	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_ADD_CHECK_PATHSPEC = (1u << 2)$/;"	e	enum:__anonf38c49720503
GIT_INDEX_ADD_DEFAULT	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_ADD_DEFAULT = 0,$/;"	e	enum:__anonf38c49720503
GIT_INDEX_ADD_DISABLE_PATHSPEC_MATCH	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_ADD_DISABLE_PATHSPEC_MATCH = (1u << 1),$/;"	e	enum:__anonf38c49720503
GIT_INDEX_ADD_FORCE	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_ADD_FORCE = (1u << 0),$/;"	e	enum:__anonf38c49720503
GIT_INDEX_CAPABILITY_FROM_OWNER	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_CAPABILITY_FROM_OWNER  = -1$/;"	e	enum:__anonf38c49720403
GIT_INDEX_CAPABILITY_IGNORE_CASE	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_CAPABILITY_IGNORE_CASE = 1,$/;"	e	enum:__anonf38c49720403
GIT_INDEX_CAPABILITY_NO_FILEMODE	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_CAPABILITY_NO_FILEMODE = 2,$/;"	e	enum:__anonf38c49720403
GIT_INDEX_CAPABILITY_NO_SYMLINKS	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_CAPABILITY_NO_SYMLINKS = 4,$/;"	e	enum:__anonf38c49720403
GIT_INDEX_ENTRY_EXTENDED	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_ENTRY_EXTENDED  = (0x4000),$/;"	e	enum:__anonf38c49720203
GIT_INDEX_ENTRY_EXTENDED_FLAGS	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_ENTRY_EXTENDED_FLAGS =  (GIT_INDEX_ENTRY_INTENT_TO_ADD | GIT_INDEX_ENTRY_SKIP_WORKTRE/;"	e	enum:__anonf38c49720303
GIT_INDEX_ENTRY_INTENT_TO_ADD	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_ENTRY_INTENT_TO_ADD  =  (1 << 13),$/;"	e	enum:__anonf38c49720303
GIT_INDEX_ENTRY_NAMEMASK	my_project/libgit2/include/git2/index.h	/^#define GIT_INDEX_ENTRY_NAMEMASK /;"	d
GIT_INDEX_ENTRY_SKIP_WORKTREE	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_ENTRY_SKIP_WORKTREE  =  (1 << 14),$/;"	e	enum:__anonf38c49720303
GIT_INDEX_ENTRY_STAGE	my_project/libgit2/include/git2/index.h	/^#define GIT_INDEX_ENTRY_STAGE(/;"	d
GIT_INDEX_ENTRY_STAGEMASK	my_project/libgit2/include/git2/index.h	/^#define GIT_INDEX_ENTRY_STAGEMASK /;"	d
GIT_INDEX_ENTRY_STAGESHIFT	my_project/libgit2/include/git2/index.h	/^#define GIT_INDEX_ENTRY_STAGESHIFT /;"	d
GIT_INDEX_ENTRY_STAGE_SET	my_project/libgit2/include/git2/index.h	/^#define GIT_INDEX_ENTRY_STAGE_SET(/;"	d
GIT_INDEX_ENTRY_UPTODATE	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_ENTRY_UPTODATE       =  (1 << 2)$/;"	e	enum:__anonf38c49720303
GIT_INDEX_ENTRY_VALID	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_ENTRY_VALID     = (0x8000)$/;"	e	enum:__anonf38c49720203
GIT_INDEX_FILE	my_project/libgit2/src/libgit2/index.h	/^#define GIT_INDEX_FILE /;"	d
GIT_INDEX_FILE_MODE	my_project/libgit2/src/libgit2/index.h	/^#define GIT_INDEX_FILE_MODE /;"	d
GIT_INDEX_STAGE_ANCESTOR	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_STAGE_ANCESTOR = 1,$/;"	e	enum:__anonf38c49720603
GIT_INDEX_STAGE_ANY	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_STAGE_ANY = -1,$/;"	e	enum:__anonf38c49720603
GIT_INDEX_STAGE_NORMAL	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_STAGE_NORMAL = 0,$/;"	e	enum:__anonf38c49720603
GIT_INDEX_STAGE_OURS	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_STAGE_OURS = 2,$/;"	e	enum:__anonf38c49720603
GIT_INDEX_STAGE_THEIRS	my_project/libgit2/include/git2/index.h	/^	GIT_INDEX_STAGE_THEIRS = 3$/;"	e	enum:__anonf38c49720603
GIT_INFO_DIR	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_INFO_DIR /;"	d
GIT_INFO_DIR_MODE	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_INFO_DIR_MODE /;"	d
GIT_INFO_EXCLUDE_CONTENT	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_INFO_EXCLUDE_CONTENT /;"	d
GIT_INFO_EXCLUDE_FILE	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_INFO_EXCLUDE_FILE /;"	d
GIT_INFO_EXCLUDE_MODE	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_INFO_EXCLUDE_MODE /;"	d
GIT_INIT_STRUCTURE	my_project/libgit2/src/libgit2/common.h	/^#define GIT_INIT_STRUCTURE(/;"	d
GIT_INIT_STRUCTURE_FROM_TEMPLATE	my_project/libgit2/src/libgit2/common.h	/^#define GIT_INIT_STRUCTURE_FROM_TEMPLATE(/;"	d
GIT_INLINE	my_project/libgit2/src/util/git2_util.h	/^# define GIT_INLINE(/;"	d
GIT_IO_WSAPOLL	my_project/libgit2/src/CMakeLists.txt	/^	set(GIT_IO_WSAPOLL 1)$/;"	v
GIT_ISBLOCKED	my_project/libgit2/src/util/posix.h	/^#define GIT_ISBLOCKED(/;"	d
GIT_ITERATOR_DESCEND_SYMLINKS	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_DESCEND_SYMLINKS = (1u << 7),$/;"	e	enum:__anon2f88b95f0203
GIT_ITERATOR_DONT_AUTOEXPAND	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_DONT_AUTOEXPAND  = (1u << 3),$/;"	e	enum:__anon2f88b95f0203
GIT_ITERATOR_DONT_IGNORE_CASE	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_DONT_IGNORE_CASE = (1u << 1),$/;"	e	enum:__anon2f88b95f0203
GIT_ITERATOR_DONT_PRECOMPOSE_UNICODE	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_DONT_PRECOMPOSE_UNICODE = (1u << 5),$/;"	e	enum:__anon2f88b95f0203
GIT_ITERATOR_EMPTY	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_EMPTY = 0,$/;"	e	enum:__anon2f88b95f0103
GIT_ITERATOR_FIRST_ACCESS	my_project/libgit2/src/libgit2/iterator.c	/^#define GIT_ITERATOR_FIRST_ACCESS /;"	d	file:
GIT_ITERATOR_FS	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_FS = 4$/;"	e	enum:__anon2f88b95f0103
GIT_ITERATOR_HONOR_IGNORES	my_project/libgit2/src/libgit2/iterator.c	/^#define GIT_ITERATOR_HONOR_IGNORES /;"	d	file:
GIT_ITERATOR_IGNORE_CASE	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_IGNORE_CASE = (1u << 0),$/;"	e	enum:__anon2f88b95f0203
GIT_ITERATOR_IGNORE_DOT_GIT	my_project/libgit2/src/libgit2/iterator.c	/^#define GIT_ITERATOR_IGNORE_DOT_GIT /;"	d	file:
GIT_ITERATOR_INCLUDE_CONFLICTS	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_INCLUDE_CONFLICTS = (1u << 6),$/;"	e	enum:__anon2f88b95f0203
GIT_ITERATOR_INCLUDE_HASH	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_INCLUDE_HASH = (1u << 8)$/;"	e	enum:__anon2f88b95f0203
GIT_ITERATOR_INCLUDE_TREES	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_INCLUDE_TREES    = (1u << 2),$/;"	e	enum:__anon2f88b95f0203
GIT_ITERATOR_INDEX	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_INDEX = 2,$/;"	e	enum:__anon2f88b95f0103
GIT_ITERATOR_OPTIONS_INIT	my_project/libgit2/src/libgit2/iterator.h	/^#define GIT_ITERATOR_OPTIONS_INIT /;"	d
GIT_ITERATOR_PRECOMPOSE_UNICODE	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_PRECOMPOSE_UNICODE = (1u << 4),$/;"	e	enum:__anon2f88b95f0203
GIT_ITERATOR_STATUS_EMPTY	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_STATUS_EMPTY = 2,$/;"	e	enum:__anon2f88b95f0303
GIT_ITERATOR_STATUS_FILTERED	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_STATUS_FILTERED = 3$/;"	e	enum:__anon2f88b95f0303
GIT_ITERATOR_STATUS_IGNORED	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_STATUS_IGNORED = 1,$/;"	e	enum:__anon2f88b95f0303
GIT_ITERATOR_STATUS_NORMAL	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_STATUS_NORMAL = 0,$/;"	e	enum:__anon2f88b95f0303
GIT_ITERATOR_TREE	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_TREE = 1,$/;"	e	enum:__anon2f88b95f0103
GIT_ITERATOR_WORKDIR	my_project/libgit2/src/libgit2/iterator.h	/^	GIT_ITERATOR_WORKDIR = 3,$/;"	e	enum:__anon2f88b95f0103
GIT_ITEROVER	my_project/libgit2/include/git2/errors.h	/^	GIT_ITEROVER        = -31,	\/**< Signals end of iteration with iterator *\/$/;"	e	enum:__anon095219370103
GIT_LIBGIT2_CALL	my_project/libgit2/src/util/git2_util.h	/^#define GIT_LIBGIT2_CALL$/;"	d
GIT_LIBGIT2_CALL	my_project/libgit2/src/util/win32/msvc-compat.h	/^#define GIT_LIBGIT2_CALL /;"	d
GIT_LOGALLREFUPDATES_ALWAYS	my_project/libgit2/src/libgit2/repository.h	/^	GIT_LOGALLREFUPDATES_ALWAYS = 3,$/;"	e	enum:__anon453495b50203
GIT_LOGALLREFUPDATES_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_LOGALLREFUPDATES_DEFAULT = GIT_LOGALLREFUPDATES_UNSET,$/;"	e	enum:__anon453495b50203
GIT_LOGALLREFUPDATES_FALSE	my_project/libgit2/src/libgit2/repository.h	/^	GIT_LOGALLREFUPDATES_FALSE = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon453495b50203
GIT_LOGALLREFUPDATES_TRUE	my_project/libgit2/src/libgit2/repository.h	/^	GIT_LOGALLREFUPDATES_TRUE = GIT_CONFIGMAP_TRUE,$/;"	e	enum:__anon453495b50203
GIT_LOGALLREFUPDATES_UNSET	my_project/libgit2/src/libgit2/repository.h	/^	GIT_LOGALLREFUPDATES_UNSET = 2,$/;"	e	enum:__anon453495b50203
GIT_LONGPATHS_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_LONGPATHS_DEFAULT = GIT_CONFIGMAP_FALSE$/;"	e	enum:__anon453495b50203
GIT_MAP_FILE	my_project/libgit2/src/util/map.h	/^#define GIT_MAP_FILE	/;"	d
GIT_MAP_FIXED	my_project/libgit2/src/util/map.h	/^#define GIT_MAP_FIXED	/;"	d
GIT_MAP_PRIVATE	my_project/libgit2/src/util/map.h	/^#define GIT_MAP_PRIVATE /;"	d
GIT_MAP_SHARED	my_project/libgit2/src/util/map.h	/^#define GIT_MAP_SHARED /;"	d
GIT_MAP_TYPE	my_project/libgit2/src/util/map.h	/^#define GIT_MAP_TYPE	/;"	d
GIT_MBEDTLS	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^		set(GIT_MBEDTLS 1)$/;"	v
GIT_MEMORY_BARRIER	my_project/libgit2/src/util/thread.h	/^#  define GIT_MEMORY_BARRIER /;"	d
GIT_MEMORY_BARRIER	my_project/libgit2/src/util/thread.h	/^# define GIT_MEMORY_BARRIER /;"	d
GIT_MERGE_ANALYSIS_FASTFORWARD	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_ANALYSIS_FASTFORWARD = (1 << 2),$/;"	e	enum:__anon1374edca0803
GIT_MERGE_ANALYSIS_NONE	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_ANALYSIS_NONE = 0,$/;"	e	enum:__anon1374edca0803
GIT_MERGE_ANALYSIS_NORMAL	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_ANALYSIS_NORMAL = (1 << 0),$/;"	e	enum:__anon1374edca0803
GIT_MERGE_ANALYSIS_UNBORN	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_ANALYSIS_UNBORN = (1 << 3)$/;"	e	enum:__anon1374edca0803
GIT_MERGE_ANALYSIS_UP_TO_DATE	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_ANALYSIS_UP_TO_DATE = (1 << 1),$/;"	e	enum:__anon1374edca0803
GIT_MERGE_CONFLICT_MARKER_SIZE	my_project/libgit2/include/git2/merge.h	/^#define GIT_MERGE_CONFLICT_MARKER_SIZE	/;"	d
GIT_MERGE_DEFAULT_RENAME_THRESHOLD	my_project/libgit2/src/libgit2/merge.h	/^#define GIT_MERGE_DEFAULT_RENAME_THRESHOLD	/;"	d
GIT_MERGE_DEFAULT_TARGET_LIMIT	my_project/libgit2/src/libgit2/merge.h	/^#define GIT_MERGE_DEFAULT_TARGET_LIMIT	/;"	d
GIT_MERGE_DIFF_BOTH_ADDED	my_project/libgit2/src/libgit2/merge.h	/^	GIT_MERGE_DIFF_BOTH_ADDED = (1 << 1),$/;"	e	enum:__anon7b397d650103
GIT_MERGE_DIFF_BOTH_DELETED	my_project/libgit2/src/libgit2/merge.h	/^	GIT_MERGE_DIFF_BOTH_DELETED = (1 << 2),$/;"	e	enum:__anon7b397d650103
GIT_MERGE_DIFF_BOTH_MODIFIED	my_project/libgit2/src/libgit2/merge.h	/^	GIT_MERGE_DIFF_BOTH_MODIFIED = (1 << 0),$/;"	e	enum:__anon7b397d650103
GIT_MERGE_DIFF_BOTH_RENAMED	my_project/libgit2/src/libgit2/merge.h	/^	GIT_MERGE_DIFF_BOTH_RENAMED = (1 << 7),$/;"	e	enum:__anon7b397d650103
GIT_MERGE_DIFF_BOTH_RENAMED_1_TO_2	my_project/libgit2/src/libgit2/merge.h	/^	GIT_MERGE_DIFF_BOTH_RENAMED_1_TO_2 = (1 << 8),$/;"	e	enum:__anon7b397d650103
GIT_MERGE_DIFF_BOTH_RENAMED_2_TO_1	my_project/libgit2/src/libgit2/merge.h	/^	GIT_MERGE_DIFF_BOTH_RENAMED_2_TO_1 = (1 << 9),$/;"	e	enum:__anon7b397d650103
GIT_MERGE_DIFF_DF_CHILD	my_project/libgit2/src/libgit2/merge.h	/^	GIT_MERGE_DIFF_DF_CHILD = (1 << 11)$/;"	e	enum:__anon7b397d650103
GIT_MERGE_DIFF_DIRECTORY_FILE	my_project/libgit2/src/libgit2/merge.h	/^	GIT_MERGE_DIFF_DIRECTORY_FILE = (1 << 10),$/;"	e	enum:__anon7b397d650103
GIT_MERGE_DIFF_MODIFIED_DELETED	my_project/libgit2/src/libgit2/merge.h	/^	GIT_MERGE_DIFF_MODIFIED_DELETED = (1 << 3),$/;"	e	enum:__anon7b397d650103
GIT_MERGE_DIFF_NONE	my_project/libgit2/src/libgit2/merge.h	/^	GIT_MERGE_DIFF_NONE = 0,$/;"	e	enum:__anon7b397d650103
GIT_MERGE_DIFF_RENAMED_ADDED	my_project/libgit2/src/libgit2/merge.h	/^	GIT_MERGE_DIFF_RENAMED_ADDED = (1 << 6),$/;"	e	enum:__anon7b397d650103
GIT_MERGE_DIFF_RENAMED_DELETED	my_project/libgit2/src/libgit2/merge.h	/^	GIT_MERGE_DIFF_RENAMED_DELETED = (1 << 5),$/;"	e	enum:__anon7b397d650103
GIT_MERGE_DIFF_RENAMED_MODIFIED	my_project/libgit2/src/libgit2/merge.h	/^	GIT_MERGE_DIFF_RENAMED_MODIFIED = (1 << 4),$/;"	e	enum:__anon7b397d650103
GIT_MERGE_DRIVER_BINARY	my_project/libgit2/include/git2/sys/merge.h	/^#define GIT_MERGE_DRIVER_BINARY /;"	d
GIT_MERGE_DRIVER_TEXT	my_project/libgit2/include/git2/sys/merge.h	/^#define GIT_MERGE_DRIVER_TEXT /;"	d
GIT_MERGE_DRIVER_UNION	my_project/libgit2/include/git2/sys/merge.h	/^#define GIT_MERGE_DRIVER_UNION /;"	d
GIT_MERGE_DRIVER_VERSION	my_project/libgit2/include/git2/sys/merge.h	/^#define GIT_MERGE_DRIVER_VERSION /;"	d
GIT_MERGE_FAIL_ON_CONFLICT	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FAIL_ON_CONFLICT = (1 << 1),$/;"	e	enum:__anon1374edca0203
GIT_MERGE_FILE_ACCEPT_CONFLICTS	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_ACCEPT_CONFLICTS = (1 << 9)$/;"	e	enum:__anon1374edca0403
GIT_MERGE_FILE_BINARY_SIZE	my_project/libgit2/src/libgit2/merge_file.c	/^#define GIT_MERGE_FILE_BINARY_SIZE /;"	d	file:
GIT_MERGE_FILE_DEFAULT	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_DEFAULT = 0,$/;"	e	enum:__anon1374edca0403
GIT_MERGE_FILE_DIFF_MINIMAL	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_DIFF_MINIMAL = (1 << 7),$/;"	e	enum:__anon1374edca0403
GIT_MERGE_FILE_DIFF_PATIENCE	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_DIFF_PATIENCE = (1 << 6),$/;"	e	enum:__anon1374edca0403
GIT_MERGE_FILE_FAVOR_NORMAL	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_FAVOR_NORMAL = 0,$/;"	e	enum:__anon1374edca0303
GIT_MERGE_FILE_FAVOR_OURS	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_FAVOR_OURS = 1,$/;"	e	enum:__anon1374edca0303
GIT_MERGE_FILE_FAVOR_THEIRS	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_FAVOR_THEIRS = 2,$/;"	e	enum:__anon1374edca0303
GIT_MERGE_FILE_FAVOR_UNION	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_FAVOR_UNION = 3$/;"	e	enum:__anon1374edca0303
GIT_MERGE_FILE_IGNORE_WHITESPACE	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_IGNORE_WHITESPACE = (1 << 3),$/;"	e	enum:__anon1374edca0403
GIT_MERGE_FILE_IGNORE_WHITESPACE_CHANGE	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_IGNORE_WHITESPACE_CHANGE = (1 << 4),$/;"	e	enum:__anon1374edca0403
GIT_MERGE_FILE_IGNORE_WHITESPACE_EOL	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_IGNORE_WHITESPACE_EOL = (1 << 5),$/;"	e	enum:__anon1374edca0403
GIT_MERGE_FILE_INPUT_INIT	my_project/libgit2/include/git2/merge.h	/^#define GIT_MERGE_FILE_INPUT_INIT /;"	d
GIT_MERGE_FILE_INPUT_VERSION	my_project/libgit2/include/git2/merge.h	/^#define GIT_MERGE_FILE_INPUT_VERSION /;"	d
GIT_MERGE_FILE_MODE	my_project/libgit2/src/libgit2/merge.h	/^#define GIT_MERGE_FILE_MODE	/;"	d
GIT_MERGE_FILE_OPTIONS_INIT	my_project/libgit2/include/git2/merge.h	/^#define GIT_MERGE_FILE_OPTIONS_INIT /;"	d
GIT_MERGE_FILE_OPTIONS_VERSION	my_project/libgit2/include/git2/merge.h	/^#define GIT_MERGE_FILE_OPTIONS_VERSION /;"	d
GIT_MERGE_FILE_SIDE_EXISTS	my_project/libgit2/src/libgit2/merge_file.c	/^#define GIT_MERGE_FILE_SIDE_EXISTS(/;"	d	file:
GIT_MERGE_FILE_SIMPLIFY_ALNUM	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_SIMPLIFY_ALNUM = (1 << 2),$/;"	e	enum:__anon1374edca0403
GIT_MERGE_FILE_STYLE_DIFF3	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_STYLE_DIFF3 = (1 << 1),$/;"	e	enum:__anon1374edca0403
GIT_MERGE_FILE_STYLE_MERGE	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_STYLE_MERGE = (1 << 0),$/;"	e	enum:__anon1374edca0403
GIT_MERGE_FILE_STYLE_ZDIFF3	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FILE_STYLE_ZDIFF3 = (1 << 8),$/;"	e	enum:__anon1374edca0403
GIT_MERGE_FIND_RENAMES	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_FIND_RENAMES = (1 << 0),$/;"	e	enum:__anon1374edca0203
GIT_MERGE_HEAD_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_MERGE_HEAD_FILE /;"	d
GIT_MERGE_INDEX_ENTRY_EXISTS	my_project/libgit2/src/libgit2/merge.c	/^#define GIT_MERGE_INDEX_ENTRY_EXISTS(/;"	d	file:
GIT_MERGE_INDEX_ENTRY_ISFILE	my_project/libgit2/src/libgit2/merge.c	/^#define GIT_MERGE_INDEX_ENTRY_ISFILE(/;"	d	file:
GIT_MERGE_MODE_FILE	my_project/libgit2/src/libgit2/merge.h	/^#define GIT_MERGE_MODE_FILE	/;"	d
GIT_MERGE_MSG_FILE	my_project/libgit2/src/libgit2/merge.h	/^#define GIT_MERGE_MSG_FILE	/;"	d
GIT_MERGE_NO_RECURSIVE	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_NO_RECURSIVE = (1 << 3),$/;"	e	enum:__anon1374edca0203
GIT_MERGE_OPTIONS_INIT	my_project/libgit2/include/git2/merge.h	/^#define GIT_MERGE_OPTIONS_INIT /;"	d
GIT_MERGE_OPTIONS_VERSION	my_project/libgit2/include/git2/merge.h	/^#define GIT_MERGE_OPTIONS_VERSION /;"	d
GIT_MERGE_PREFERENCE_FASTFORWARD_ONLY	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_PREFERENCE_FASTFORWARD_ONLY = (1 << 1)$/;"	e	enum:__anon1374edca0903
GIT_MERGE_PREFERENCE_NONE	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_PREFERENCE_NONE = 0,$/;"	e	enum:__anon1374edca0903
GIT_MERGE_PREFERENCE_NO_FASTFORWARD	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_PREFERENCE_NO_FASTFORWARD = (1 << 0),$/;"	e	enum:__anon1374edca0903
GIT_MERGE_SKIP_REUC	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_SKIP_REUC = (1 << 2),$/;"	e	enum:__anon1374edca0203
GIT_MERGE_VIRTUAL_BASE	my_project/libgit2/include/git2/merge.h	/^	GIT_MERGE_VIRTUAL_BASE = (1 << 4)$/;"	e	enum:__anon1374edca0203
GIT_MKDIR_CHMOD	my_project/libgit2/src/util/futils.h	/^	GIT_MKDIR_CHMOD = 4,$/;"	e	enum:__anon45ee975d0103
GIT_MKDIR_CHMOD_PATH	my_project/libgit2/src/util/futils.h	/^	GIT_MKDIR_CHMOD_PATH = 8,$/;"	e	enum:__anon45ee975d0103
GIT_MKDIR_EXCL	my_project/libgit2/src/util/futils.h	/^	GIT_MKDIR_EXCL = 1,$/;"	e	enum:__anon45ee975d0103
GIT_MKDIR_PATH	my_project/libgit2/src/util/futils.h	/^	GIT_MKDIR_PATH = 2,$/;"	e	enum:__anon45ee975d0103
GIT_MKDIR_REMOVE_FILES	my_project/libgit2/src/util/futils.h	/^	GIT_MKDIR_REMOVE_FILES = 128,$/;"	e	enum:__anon45ee975d0103
GIT_MKDIR_REMOVE_SYMLINKS	my_project/libgit2/src/util/futils.h	/^	GIT_MKDIR_REMOVE_SYMLINKS = 256$/;"	e	enum:__anon45ee975d0103
GIT_MKDIR_SKIP_LAST	my_project/libgit2/src/util/futils.h	/^	GIT_MKDIR_SKIP_LAST = 16,$/;"	e	enum:__anon45ee975d0103
GIT_MKDIR_SKIP_LAST2	my_project/libgit2/src/util/futils.h	/^	GIT_MKDIR_SKIP_LAST2 = 32,$/;"	e	enum:__anon45ee975d0103
GIT_MKDIR_VERIFY_DIR	my_project/libgit2/src/util/futils.h	/^	GIT_MKDIR_VERIFY_DIR = 64,$/;"	e	enum:__anon45ee975d0103
GIT_MMAP_VALIDATE	my_project/libgit2/src/util/map.h	/^#define GIT_MMAP_VALIDATE(/;"	d
GIT_MODE_ISBLOB	my_project/libgit2/src/util/futils.h	/^#define GIT_MODE_ISBLOB(/;"	d
GIT_MODE_PERMS_MASK	my_project/libgit2/src/util/futils.h	/^#define GIT_MODE_PERMS_MASK	/;"	d
GIT_MODE_TYPE	my_project/libgit2/src/util/futils.h	/^#define GIT_MODE_TYPE(/;"	d
GIT_MODE_TYPE_MASK	my_project/libgit2/src/util/futils.h	/^#define GIT_MODE_TYPE_MASK	/;"	d
GIT_MODULES_FILE	my_project/libgit2/src/libgit2/submodule.c	/^#define GIT_MODULES_FILE /;"	d	file:
GIT_MULTIPLY_SIZET_OVERFLOW	my_project/libgit2/src/util/git2_util.h	/^#define GIT_MULTIPLY_SIZET_OVERFLOW(/;"	d
GIT_MWINDOW__LRU	my_project/libgit2/src/libgit2/mwindow.c	/^#define GIT_MWINDOW__LRU /;"	d	file:
GIT_MWINDOW__MRU	my_project/libgit2/src/libgit2/mwindow.c	/^#define GIT_MWINDOW__MRU /;"	d	file:
GIT_NET_URL_INIT	my_project/libgit2/src/util/net.h	/^#define GIT_NET_URL_INIT /;"	d
GIT_NET_URL_PARSER_INIT	my_project/libgit2/src/util/net.c	/^#define GIT_NET_URL_PARSER_INIT /;"	d	file:
GIT_NOTES_DEFAULT_MSG_ADD	my_project/libgit2/src/libgit2/notes.h	/^#define GIT_NOTES_DEFAULT_MSG_ADD /;"	d
GIT_NOTES_DEFAULT_MSG_RM	my_project/libgit2/src/libgit2/notes.h	/^#define GIT_NOTES_DEFAULT_MSG_RM /;"	d
GIT_NOTES_DEFAULT_REF	my_project/libgit2/src/libgit2/notes.h	/^#define GIT_NOTES_DEFAULT_REF /;"	d
GIT_NTLM	my_project/libgit2/src/CMakeLists.txt	/^	set(GIT_NTLM 1)$/;"	v
GIT_OBJECTS_DIR	my_project/libgit2/src/libgit2/odb.h	/^#define GIT_OBJECTS_DIR /;"	d
GIT_OBJECTS_INFO_DIR	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_OBJECTS_INFO_DIR /;"	d
GIT_OBJECTS_PACK_DIR	my_project/libgit2/src/libgit2/repo_template.h	/^#define GIT_OBJECTS_PACK_DIR /;"	d
GIT_OBJECT_ANY	my_project/libgit2/include/git2/types.h	/^	GIT_OBJECT_ANY =      -2, \/**< Object can be any of the following *\/$/;"	e	enum:__anon5cceb56f0103
GIT_OBJECT_BLOB	my_project/libgit2/include/git2/types.h	/^	GIT_OBJECT_BLOB =      3, \/**< A file revision object. *\/$/;"	e	enum:__anon5cceb56f0103
GIT_OBJECT_COMMIT	my_project/libgit2/include/git2/types.h	/^	GIT_OBJECT_COMMIT =    1, \/**< A commit object. *\/$/;"	e	enum:__anon5cceb56f0103
GIT_OBJECT_DIR_MODE	my_project/libgit2/src/libgit2/odb.h	/^#define GIT_OBJECT_DIR_MODE /;"	d
GIT_OBJECT_FILE_MODE	my_project/libgit2/src/libgit2/odb.h	/^#define GIT_OBJECT_FILE_MODE /;"	d
GIT_OBJECT_INVALID	my_project/libgit2/include/git2/types.h	/^	GIT_OBJECT_INVALID =  -1, \/**< Object is invalid. *\/$/;"	e	enum:__anon5cceb56f0103
GIT_OBJECT_OFS_DELTA	my_project/libgit2/include/git2/types.h	/^	GIT_OBJECT_OFS_DELTA = 6, \/**< A delta, base is given by an offset. *\/$/;"	e	enum:__anon5cceb56f0103
GIT_OBJECT_REF_DELTA	my_project/libgit2/include/git2/types.h	/^	GIT_OBJECT_REF_DELTA = 7  \/**< A delta, base is given by object id. *\/$/;"	e	enum:__anon5cceb56f0103
GIT_OBJECT_SIZE_MAX	my_project/libgit2/include/git2/object.h	/^#define GIT_OBJECT_SIZE_MAX /;"	d
GIT_OBJECT_SIZE_MAX	my_project/libgit2/src/libgit2/object.h	/^#define GIT_OBJECT_SIZE_MAX /;"	d
GIT_OBJECT_TAG	my_project/libgit2/include/git2/types.h	/^	GIT_OBJECT_TAG =       4, \/**< An annotated tag object. *\/$/;"	e	enum:__anon5cceb56f0103
GIT_OBJECT_TREE	my_project/libgit2/include/git2/types.h	/^	GIT_OBJECT_TREE =      2, \/**< A tree (directory listing) object. *\/$/;"	e	enum:__anon5cceb56f0103
GIT_OBJ_ANY	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_ANY /;"	d
GIT_OBJ_BAD	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_BAD /;"	d
GIT_OBJ_BLOB	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_BLOB /;"	d
GIT_OBJ_COMMIT	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_COMMIT /;"	d
GIT_OBJ_OFS_DELTA	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_OFS_DELTA /;"	d
GIT_OBJ_REF_DELTA	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_REF_DELTA /;"	d
GIT_OBJ_TAG	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_TAG /;"	d
GIT_OBJ_TREE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ_TREE /;"	d
GIT_OBJ__EXT1	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ__EXT1 /;"	d
GIT_OBJ__EXT2	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_OBJ__EXT2 /;"	d
GIT_ODB_BACKEND_INIT	my_project/libgit2/include/git2/sys/odb_backend.h	/^#define GIT_ODB_BACKEND_INIT /;"	d
GIT_ODB_BACKEND_LOOSE_FSYNC	my_project/libgit2/include/git2/odb_backend.h	/^	GIT_ODB_BACKEND_LOOSE_FSYNC = (1 << 0)$/;"	e	enum:__anon6d9003760203
GIT_ODB_BACKEND_LOOSE_OPTIONS_INIT	my_project/libgit2/include/git2/odb_backend.h	/^#define GIT_ODB_BACKEND_LOOSE_OPTIONS_INIT /;"	d
GIT_ODB_BACKEND_LOOSE_OPTIONS_VERSION	my_project/libgit2/include/git2/odb_backend.h	/^#define GIT_ODB_BACKEND_LOOSE_OPTIONS_VERSION /;"	d
GIT_ODB_BACKEND_PACK_OPTIONS_INIT	my_project/libgit2/include/git2/odb_backend.h	/^#define GIT_ODB_BACKEND_PACK_OPTIONS_INIT /;"	d
GIT_ODB_BACKEND_PACK_OPTIONS_VERSION	my_project/libgit2/include/git2/odb_backend.h	/^#define GIT_ODB_BACKEND_PACK_OPTIONS_VERSION /;"	d
GIT_ODB_BACKEND_VERSION	my_project/libgit2/include/git2/sys/odb_backend.h	/^#define GIT_ODB_BACKEND_VERSION /;"	d
GIT_ODB_CAP_FROM_OWNER	my_project/libgit2/src/libgit2/odb.h	/^	GIT_ODB_CAP_FROM_OWNER = -1$/;"	e	enum:__anon3125c08a0203
GIT_ODB_DEFAULT_LOOSE_PRIORITY	my_project/libgit2/src/libgit2/odb.h	/^#define GIT_ODB_DEFAULT_LOOSE_PRIORITY /;"	d
GIT_ODB_DEFAULT_PACKED_PRIORITY	my_project/libgit2/src/libgit2/odb.h	/^#define GIT_ODB_DEFAULT_PACKED_PRIORITY /;"	d
GIT_ODB_LOOKUP_NO_REFRESH	my_project/libgit2/include/git2/odb.h	/^	GIT_ODB_LOOKUP_NO_REFRESH = (1 << 0)$/;"	e	enum:__anonc68fd3af0103
GIT_ODB_OPTIONS_INIT	my_project/libgit2/include/git2/odb.h	/^#define GIT_ODB_OPTIONS_INIT /;"	d
GIT_ODB_OPTIONS_VERSION	my_project/libgit2/include/git2/odb.h	/^#define GIT_ODB_OPTIONS_VERSION /;"	d
GIT_OID_DEFAULT	my_project/libgit2/include/git2/oid.h	/^#define GIT_OID_DEFAULT /;"	d
GIT_OID_HEXSZ	my_project/libgit2/include/git2/deprecated.h	/^# define GIT_OID_HEXSZ /;"	d
GIT_OID_HEX_ZERO	my_project/libgit2/include/git2/deprecated.h	/^# define GIT_OID_HEX_ZERO /;"	d
GIT_OID_INIT	my_project/libgit2/src/libgit2/oid.h	/^# define GIT_OID_INIT(/;"	d
GIT_OID_MAX_HEXSIZE	my_project/libgit2/include/git2/oid.h	/^# define GIT_OID_MAX_HEXSIZE /;"	d
GIT_OID_MAX_SIZE	my_project/libgit2/include/git2/oid.h	/^# define GIT_OID_MAX_SIZE /;"	d
GIT_OID_MINPREFIXLEN	my_project/libgit2/include/git2/oid.h	/^#define GIT_OID_MINPREFIXLEN /;"	d
GIT_OID_NONE	my_project/libgit2/src/libgit2/oid.h	/^# define GIT_OID_NONE /;"	d
GIT_OID_RAWSZ	my_project/libgit2/include/git2/deprecated.h	/^# define GIT_OID_RAWSZ /;"	d
GIT_OID_SHA1	my_project/libgit2/include/git2/oid.h	/^	GIT_OID_SHA1 = 1,  \/**< SHA1 *\/$/;"	e	enum:__anonc6929a160103
GIT_OID_SHA1_HEXSIZE	my_project/libgit2/include/git2/oid.h	/^#define GIT_OID_SHA1_HEXSIZE /;"	d
GIT_OID_SHA1_HEXZERO	my_project/libgit2/include/git2/oid.h	/^#define GIT_OID_SHA1_HEXZERO /;"	d
GIT_OID_SHA1_SIZE	my_project/libgit2/include/git2/oid.h	/^#define GIT_OID_SHA1_SIZE /;"	d
GIT_OID_SHA1_ZERO	my_project/libgit2/include/git2/oid.h	/^# define GIT_OID_SHA1_ZERO /;"	d
GIT_OID_SHA256	my_project/libgit2/include/git2/oid.h	/^	GIT_OID_SHA256 = 2 \/**< SHA256 *\/$/;"	e	enum:__anonc6929a160103
GIT_OID_SHA256_HEXSIZE	my_project/libgit2/include/git2/oid.h	/^# define GIT_OID_SHA256_HEXSIZE /;"	d
GIT_OID_SHA256_HEXZERO	my_project/libgit2/include/git2/oid.h	/^# define GIT_OID_SHA256_HEXZERO /;"	d
GIT_OID_SHA256_SIZE	my_project/libgit2/include/git2/oid.h	/^# define GIT_OID_SHA256_SIZE /;"	d
GIT_OID_SHA256_ZERO	my_project/libgit2/include/git2/oid.h	/^# define GIT_OID_SHA256_ZERO /;"	d
GIT_OK	my_project/libgit2/include/git2/errors.h	/^	GIT_OK              =  0,		\/**< No error *\/$/;"	e	enum:__anon095219370103
GIT_OPENSSL	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^		set(GIT_OPENSSL 1)$/;"	v
GIT_OPENSSL_DYNAMIC	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^		set(GIT_OPENSSL_DYNAMIC 1)$/;"	v
GIT_OPENSSL_LEGACY	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^#  define GIT_OPENSSL_LEGACY$/;"	d
GIT_OPT_DISABLE_PACK_KEEP_FILE_CHECKS	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_DISABLE_PACK_KEEP_FILE_CHECKS,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_ENABLE_CACHING	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_CACHING,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_ENABLE_FSYNC_GITDIR	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_FSYNC_GITDIR,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_ENABLE_HTTP_EXPECT_CONTINUE	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_HTTP_EXPECT_CONTINUE,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_ENABLE_OFS_DELTA	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_OFS_DELTA,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_ENABLE_STRICT_HASH_VERIFICATION	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_STRICT_HASH_VERIFICATION,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_ENABLE_STRICT_OBJECT_CREATION	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_STRICT_OBJECT_CREATION,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_ENABLE_STRICT_SYMBOLIC_REF_CREATION	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_STRICT_SYMBOLIC_REF_CREATION,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_ENABLE_UNSAVED_INDEX_SAFETY	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_ENABLE_UNSAVED_INDEX_SAFETY,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_CACHED_MEMORY	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_CACHED_MEMORY,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_EXTENSIONS	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_EXTENSIONS,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_HOMEDIR	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_HOMEDIR,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_MWINDOW_FILE_LIMIT	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_MWINDOW_FILE_LIMIT,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_MWINDOW_MAPPED_LIMIT	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_MWINDOW_MAPPED_LIMIT,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_MWINDOW_SIZE	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_MWINDOW_SIZE,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_OWNER_VALIDATION	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_OWNER_VALIDATION,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_PACK_MAX_OBJECTS	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_PACK_MAX_OBJECTS,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_SEARCH_PATH	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_SEARCH_PATH,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_SERVER_CONNECT_TIMEOUT	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_SERVER_CONNECT_TIMEOUT,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_SERVER_TIMEOUT	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_SERVER_TIMEOUT,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_TEMPLATE_PATH	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_TEMPLATE_PATH,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_USER_AGENT	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_USER_AGENT,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_USER_AGENT_PRODUCT	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_USER_AGENT_PRODUCT$/;"	e	enum:__anon3e1002a30203
GIT_OPT_GET_WINDOWS_SHAREMODE	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_GET_WINDOWS_SHAREMODE,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_ALLOCATOR	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_ALLOCATOR,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_CACHE_MAX_SIZE	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_CACHE_MAX_SIZE,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_CACHE_OBJECT_LIMIT	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_CACHE_OBJECT_LIMIT,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_EXTENSIONS	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_EXTENSIONS,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_HOMEDIR	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_HOMEDIR,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_MWINDOW_FILE_LIMIT	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_MWINDOW_FILE_LIMIT,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_MWINDOW_MAPPED_LIMIT	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_MWINDOW_MAPPED_LIMIT,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_MWINDOW_SIZE	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_MWINDOW_SIZE,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_ODB_LOOSE_PRIORITY	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_ODB_LOOSE_PRIORITY,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_ODB_PACKED_PRIORITY	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_ODB_PACKED_PRIORITY,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_OWNER_VALIDATION	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_OWNER_VALIDATION,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_PACK_MAX_OBJECTS	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_PACK_MAX_OBJECTS,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_SEARCH_PATH	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_SEARCH_PATH,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_SERVER_CONNECT_TIMEOUT	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_SERVER_CONNECT_TIMEOUT,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_SERVER_TIMEOUT	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_SERVER_TIMEOUT,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_SSL_CERT_LOCATIONS	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_SSL_CERT_LOCATIONS,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_SSL_CIPHERS	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_SSL_CIPHERS,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_TEMPLATE_PATH	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_TEMPLATE_PATH,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_USER_AGENT	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_USER_AGENT,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_USER_AGENT_PRODUCT	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_USER_AGENT_PRODUCT,$/;"	e	enum:__anon3e1002a30203
GIT_OPT_SET_WINDOWS_SHAREMODE	my_project/libgit2/include/git2/common.h	/^	GIT_OPT_SET_WINDOWS_SHAREMODE,$/;"	e	enum:__anon3e1002a30203
GIT_ORIG_HEAD_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_ORIG_HEAD_FILE /;"	d
GIT_PACKBUILDER_ADDING_OBJECTS	my_project/libgit2/include/git2/pack.h	/^	GIT_PACKBUILDER_ADDING_OBJECTS = 0,$/;"	e	enum:__anon9aaab1790103
GIT_PACKBUILDER_DELTAFICATION	my_project/libgit2/include/git2/pack.h	/^	GIT_PACKBUILDER_DELTAFICATION = 1$/;"	e	enum:__anon9aaab1790103
GIT_PACKBUILDER__MUTEX_OP	my_project/libgit2/src/libgit2/pack-objects.c	/^# define GIT_PACKBUILDER__MUTEX_OP(/;"	d	file:
GIT_PACKEDREFS_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_PACKEDREFS_FILE /;"	d
GIT_PACKEDREFS_FILE_MODE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_PACKEDREFS_FILE_MODE /;"	d
GIT_PACKEDREFS_HEADER	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_PACKEDREFS_HEADER /;"	d
GIT_PACKREF_HAS_PEEL	my_project/libgit2/src/libgit2/refs.c	/^	GIT_PACKREF_HAS_PEEL = 1,$/;"	e	enum:__anon5cf2b4200103	file:
GIT_PACKREF_WAS_LOOSE	my_project/libgit2/src/libgit2/refs.c	/^	GIT_PACKREF_WAS_LOOSE = 2$/;"	e	enum:__anon5cf2b4200103	file:
GIT_PACK_BIG_FILE_THRESHOLD	my_project/libgit2/src/libgit2/pack-objects.h	/^#define GIT_PACK_BIG_FILE_THRESHOLD /;"	d
GIT_PACK_CACHE_MEMORY_LIMIT	my_project/libgit2/src/libgit2/pack.h	/^#define GIT_PACK_CACHE_MEMORY_LIMIT /;"	d
GIT_PACK_CACHE_SIZE_LIMIT	my_project/libgit2/src/libgit2/pack.h	/^#define GIT_PACK_CACHE_SIZE_LIMIT /;"	d
GIT_PACK_DELTA_CACHE_LIMIT	my_project/libgit2/src/libgit2/pack-objects.h	/^#define GIT_PACK_DELTA_CACHE_LIMIT /;"	d
GIT_PACK_DELTA_CACHE_SIZE	my_project/libgit2/src/libgit2/pack-objects.h	/^#define GIT_PACK_DELTA_CACHE_SIZE /;"	d
GIT_PACK_DEPTH	my_project/libgit2/src/libgit2/pack-objects.h	/^#define GIT_PACK_DEPTH /;"	d
GIT_PACK_FILE_MODE	my_project/libgit2/src/libgit2/pack.h	/^#define GIT_PACK_FILE_MODE /;"	d
GIT_PACK_WINDOW	my_project/libgit2/src/libgit2/pack-objects.h	/^#define GIT_PACK_WINDOW /;"	d
GIT_PARSE_CTX_INIT	my_project/libgit2/src/libgit2/parse.h	/^#define GIT_PARSE_CTX_INIT /;"	d
GIT_PARSE_PEEK_FLAGS	my_project/libgit2/src/libgit2/parse.h	/^enum GIT_PARSE_PEEK_FLAGS {$/;"	g
GIT_PARSE_PEEK_SKIP_WHITESPACE	my_project/libgit2/src/libgit2/parse.h	/^	GIT_PARSE_PEEK_SKIP_WHITESPACE = (1 << 0)$/;"	e	enum:GIT_PARSE_PEEK_FLAGS
GIT_PASSTHROUGH	my_project/libgit2/include/git2/errors.h	/^	GIT_PASSTHROUGH     = -30,	\/**< A user-configured callback refused to act *\/$/;"	e	enum:__anon095219370103
GIT_PATCH_GENERATED_ALLOCATED	my_project/libgit2/src/libgit2/patch_generate.h	/^	GIT_PATCH_GENERATED_ALLOCATED = (1 << 0),$/;"	e	enum:__anonbb9a560f0103
GIT_PATCH_GENERATED_DIFFABLE	my_project/libgit2/src/libgit2/patch_generate.h	/^	GIT_PATCH_GENERATED_DIFFABLE = (1 << 3),$/;"	e	enum:__anonbb9a560f0103
GIT_PATCH_GENERATED_DIFFED	my_project/libgit2/src/libgit2/patch_generate.h	/^	GIT_PATCH_GENERATED_DIFFED = (1 << 4),$/;"	e	enum:__anonbb9a560f0103
GIT_PATCH_GENERATED_FLATTENED	my_project/libgit2/src/libgit2/patch_generate.h	/^	GIT_PATCH_GENERATED_FLATTENED = (1 << 5)$/;"	e	enum:__anonbb9a560f0103
GIT_PATCH_GENERATED_INITIALIZED	my_project/libgit2/src/libgit2/patch_generate.h	/^	GIT_PATCH_GENERATED_INITIALIZED = (1 << 1),$/;"	e	enum:__anonbb9a560f0103
GIT_PATCH_GENERATED_LOADED	my_project/libgit2/src/libgit2/patch_generate.h	/^	GIT_PATCH_GENERATED_LOADED = (1 << 2),$/;"	e	enum:__anonbb9a560f0103
GIT_PATCH_OPTIONS_INIT	my_project/libgit2/src/libgit2/patch.h	/^#define GIT_PATCH_OPTIONS_INIT /;"	d
GIT_PATHSPEC_DEFAULT	my_project/libgit2/include/git2/pathspec.h	/^	GIT_PATHSPEC_DEFAULT        = 0,$/;"	e	enum:__anond656f7d20103
GIT_PATHSPEC_FAILURES_ONLY	my_project/libgit2/include/git2/pathspec.h	/^	GIT_PATHSPEC_FAILURES_ONLY  = (1u << 5)$/;"	e	enum:__anond656f7d20103
GIT_PATHSPEC_FIND_FAILURES	my_project/libgit2/include/git2/pathspec.h	/^	GIT_PATHSPEC_FIND_FAILURES  = (1u << 4),$/;"	e	enum:__anond656f7d20103
GIT_PATHSPEC_IGNORE_CASE	my_project/libgit2/include/git2/pathspec.h	/^	GIT_PATHSPEC_IGNORE_CASE    = (1u << 0),$/;"	e	enum:__anond656f7d20103
GIT_PATHSPEC_MAGIC	my_project/libgit2/src/util/wildmatch.c	/^#define GIT_PATHSPEC_MAGIC /;"	d	file:
GIT_PATHSPEC_NOMATCH	my_project/libgit2/src/libgit2/pathspec.h	/^#define GIT_PATHSPEC_NOMATCH /;"	d
GIT_PATHSPEC_NO_GLOB	my_project/libgit2/include/git2/pathspec.h	/^	GIT_PATHSPEC_NO_GLOB        = (1u << 2),$/;"	e	enum:__anond656f7d20103
GIT_PATHSPEC_NO_MATCH_ERROR	my_project/libgit2/include/git2/pathspec.h	/^	GIT_PATHSPEC_NO_MATCH_ERROR = (1u << 3),$/;"	e	enum:__anond656f7d20103
GIT_PATHSPEC_USE_CASE	my_project/libgit2/include/git2/pathspec.h	/^	GIT_PATHSPEC_USE_CASE       = (1u << 1),$/;"	e	enum:__anond656f7d20103
GIT_PATH_FS_GENERIC	my_project/libgit2/include/git2/sys/path.h	/^	GIT_PATH_FS_GENERIC,$/;"	e	enum:__anonb6214cf50203
GIT_PATH_FS_HFS	my_project/libgit2/include/git2/sys/path.h	/^	GIT_PATH_FS_HFS$/;"	e	enum:__anonb6214cf50203
GIT_PATH_FS_NTFS	my_project/libgit2/include/git2/sys/path.h	/^	GIT_PATH_FS_NTFS,$/;"	e	enum:__anonb6214cf50203
GIT_PATH_GITFILE_GITATTRIBUTES	my_project/libgit2/include/git2/sys/path.h	/^	GIT_PATH_GITFILE_GITATTRIBUTES$/;"	e	enum:__anonb6214cf50103
GIT_PATH_GITFILE_GITIGNORE	my_project/libgit2/include/git2/sys/path.h	/^	GIT_PATH_GITFILE_GITIGNORE,$/;"	e	enum:__anonb6214cf50103
GIT_PATH_GITFILE_GITMODULES	my_project/libgit2/include/git2/sys/path.h	/^	GIT_PATH_GITFILE_GITMODULES,$/;"	e	enum:__anonb6214cf50103
GIT_PATH_ICONV_INIT	my_project/libgit2/src/util/fs_path.h	/^#define GIT_PATH_ICONV_INIT /;"	d
GIT_PATH_LIST_SEPARATOR	my_project/libgit2/include/git2/common.h	/^#define GIT_PATH_LIST_SEPARATOR /;"	d
GIT_PATH_MAX	my_project/libgit2/include/git2/common.h	/^#define GIT_PATH_MAX /;"	d
GIT_PATH_NATIVE_ENCODING	my_project/libgit2/src/util/fs_path.h	/^#define GIT_PATH_NATIVE_ENCODING /;"	d
GIT_PATH_REJECT_DOT_GIT	my_project/libgit2/src/libgit2/path.h	/^#define GIT_PATH_REJECT_DOT_GIT /;"	d
GIT_PATH_REJECT_DOT_GIT_HFS	my_project/libgit2/src/libgit2/path.h	/^#define GIT_PATH_REJECT_DOT_GIT_HFS /;"	d
GIT_PATH_REJECT_DOT_GIT_LITERAL	my_project/libgit2/src/libgit2/path.h	/^#define GIT_PATH_REJECT_DOT_GIT_LITERAL /;"	d
GIT_PATH_REJECT_DOT_GIT_NTFS	my_project/libgit2/src/libgit2/path.h	/^#define GIT_PATH_REJECT_DOT_GIT_NTFS /;"	d
GIT_PATH_REJECT_INDEX_DEFAULTS	my_project/libgit2/src/libgit2/path.h	/^#define GIT_PATH_REJECT_INDEX_DEFAULTS /;"	d
GIT_PATH_REJECT_WORKDIR_DEFAULTS	my_project/libgit2/src/libgit2/path.h	/^#define GIT_PATH_REJECT_WORKDIR_DEFAULTS /;"	d
GIT_PATH_REPO_ENCODING	my_project/libgit2/src/util/fs_path.h	/^#define GIT_PATH_REPO_ENCODING /;"	d
GIT_PERMS_CANONICAL	my_project/libgit2/src/util/futils.h	/^#define GIT_PERMS_CANONICAL(/;"	d
GIT_PERMS_FOR_WRITE	my_project/libgit2/src/util/futils.h	/^#define GIT_PERMS_FOR_WRITE(/;"	d
GIT_PERMS_IS_EXEC	my_project/libgit2/src/util/futils.h	/^#define GIT_PERMS_IS_EXEC(/;"	d
GIT_PKT_ACK	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_ACK,$/;"	e	enum:__anonb9ceeb0b0103
GIT_PKT_CMD	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_CMD,$/;"	e	enum:__anonb9ceeb0b0103
GIT_PKT_COMMENT	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_COMMENT,$/;"	e	enum:__anonb9ceeb0b0103
GIT_PKT_DATA	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_DATA,$/;"	e	enum:__anonb9ceeb0b0103
GIT_PKT_ERR	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_ERR,$/;"	e	enum:__anonb9ceeb0b0103
GIT_PKT_FLUSH	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_FLUSH,$/;"	e	enum:__anonb9ceeb0b0103
GIT_PKT_HAVE	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_HAVE,$/;"	e	enum:__anonb9ceeb0b0103
GIT_PKT_NAK	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_NAK,$/;"	e	enum:__anonb9ceeb0b0103
GIT_PKT_NG	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_NG,$/;"	e	enum:__anonb9ceeb0b0103
GIT_PKT_OK	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_OK,$/;"	e	enum:__anonb9ceeb0b0103
GIT_PKT_PROGRESS	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_PROGRESS,$/;"	e	enum:__anonb9ceeb0b0103
GIT_PKT_REF	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_REF,$/;"	e	enum:__anonb9ceeb0b0103
GIT_PKT_SHALLOW	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_SHALLOW,$/;"	e	enum:__anonb9ceeb0b0103
GIT_PKT_UNPACK	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_UNPACK,$/;"	e	enum:__anonb9ceeb0b0103
GIT_PKT_UNSHALLOW	my_project/libgit2/src/libgit2/transports/smart.h	/^	GIT_PKT_UNSHALLOW$/;"	e	enum:__anonb9ceeb0b0103
GIT_POOL_INIT	my_project/libgit2/src/util/pool.h	/^#define GIT_POOL_INIT /;"	d
GIT_PQUEUE_FIXED_SIZE	my_project/libgit2/src/util/pqueue.h	/^	GIT_PQUEUE_FIXED_SIZE = (GIT_VECTOR_FLAG_MAX << 1)$/;"	e	enum:__anon4ea96f9b0103
GIT_PRECOMPOSE_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_PRECOMPOSE_DEFAULT = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon453495b50203
GIT_PROCESS_OPTIONS_INIT	my_project/libgit2/src/util/process.h	/^#define GIT_PROCESS_OPTIONS_INIT /;"	d
GIT_PROCESS_RESULT_INIT	my_project/libgit2/src/util/process.h	/^#define GIT_PROCESS_RESULT_INIT /;"	d
GIT_PROCESS_STATUS_ERROR	my_project/libgit2/src/util/process.h	/^	GIT_PROCESS_STATUS_ERROR$/;"	e	enum:__anon3c78bdc50203
GIT_PROCESS_STATUS_NONE	my_project/libgit2/src/util/process.h	/^	GIT_PROCESS_STATUS_NONE,$/;"	e	enum:__anon3c78bdc50203
GIT_PROCESS_STATUS_NORMAL	my_project/libgit2/src/util/process.h	/^	GIT_PROCESS_STATUS_NORMAL,$/;"	e	enum:__anon3c78bdc50203
GIT_PROTECTHFS_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_PROTECTHFS_DEFAULT = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon453495b50203
GIT_PROTECTNTFS_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_PROTECTNTFS_DEFAULT = GIT_CONFIGMAP_TRUE,$/;"	e	enum:__anon453495b50203
GIT_PROT_EXEC	my_project/libgit2/src/util/map.h	/^#define GIT_PROT_EXEC /;"	d
GIT_PROT_NONE	my_project/libgit2/src/util/map.h	/^#define GIT_PROT_NONE /;"	d
GIT_PROT_READ	my_project/libgit2/src/util/map.h	/^#define GIT_PROT_READ /;"	d
GIT_PROT_WRITE	my_project/libgit2/src/util/map.h	/^#define GIT_PROT_WRITE /;"	d
GIT_PROXY_AUTO	my_project/libgit2/include/git2/proxy.h	/^	GIT_PROXY_AUTO,$/;"	e	enum:__anon188a123c0103
GIT_PROXY_NONE	my_project/libgit2/include/git2/proxy.h	/^	GIT_PROXY_NONE,$/;"	e	enum:__anon188a123c0103
GIT_PROXY_OPTIONS_INIT	my_project/libgit2/include/git2/proxy.h	/^#define GIT_PROXY_OPTIONS_INIT /;"	d
GIT_PROXY_OPTIONS_VERSION	my_project/libgit2/include/git2/proxy.h	/^#define GIT_PROXY_OPTIONS_VERSION /;"	d
GIT_PROXY_SPECIFIED	my_project/libgit2/include/git2/proxy.h	/^	GIT_PROXY_SPECIFIED$/;"	e	enum:__anon188a123c0103
GIT_PUNCT	my_project/libgit2/src/util/wildmatch.c	/^#define GIT_PUNCT /;"	d	file:
GIT_PUSH_OPTIONS_INIT	my_project/libgit2/include/git2/remote.h	/^#define GIT_PUSH_OPTIONS_INIT /;"	d
GIT_PUSH_OPTIONS_VERSION	my_project/libgit2/include/git2/remote.h	/^#define GIT_PUSH_OPTIONS_VERSION /;"	d
GIT_READER_MISMATCH	my_project/libgit2/src/libgit2/reader.h	/^#define GIT_READER_MISMATCH	/;"	d
GIT_READ_BUFFER_SIZE	my_project/libgit2/src/libgit2/transports/httpclient.c	/^#define GIT_READ_BUFFER_SIZE /;"	d	file:
GIT_REBASE_APPLY	my_project/libgit2/src/libgit2/rebase.c	/^	GIT_REBASE_APPLY = 1,$/;"	e	enum:__anon59fbc5820103	file:
GIT_REBASE_APPLY_APPLYING_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REBASE_APPLY_APPLYING_FILE /;"	d
GIT_REBASE_APPLY_DIR	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REBASE_APPLY_DIR /;"	d
GIT_REBASE_APPLY_REBASING_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REBASE_APPLY_REBASING_FILE /;"	d
GIT_REBASE_INTERACTIVE	my_project/libgit2/src/libgit2/rebase.c	/^	GIT_REBASE_INTERACTIVE = 3$/;"	e	enum:__anon59fbc5820103	file:
GIT_REBASE_MERGE	my_project/libgit2/src/libgit2/rebase.c	/^	GIT_REBASE_MERGE = 2,$/;"	e	enum:__anon59fbc5820103	file:
GIT_REBASE_MERGE_DIR	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REBASE_MERGE_DIR /;"	d
GIT_REBASE_MERGE_INTERACTIVE_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REBASE_MERGE_INTERACTIVE_FILE /;"	d
GIT_REBASE_NONE	my_project/libgit2/src/libgit2/rebase.c	/^	GIT_REBASE_NONE = 0,$/;"	e	enum:__anon59fbc5820103	file:
GIT_REBASE_NO_OPERATION	my_project/libgit2/include/git2/rebase.h	/^#define GIT_REBASE_NO_OPERATION /;"	d
GIT_REBASE_OPERATION_EDIT	my_project/libgit2/include/git2/rebase.h	/^	GIT_REBASE_OPERATION_EDIT,$/;"	e	enum:__anonf9a5428c0203
GIT_REBASE_OPERATION_EXEC	my_project/libgit2/include/git2/rebase.h	/^	GIT_REBASE_OPERATION_EXEC$/;"	e	enum:__anonf9a5428c0203
GIT_REBASE_OPERATION_FIXUP	my_project/libgit2/include/git2/rebase.h	/^	GIT_REBASE_OPERATION_FIXUP,$/;"	e	enum:__anonf9a5428c0203
GIT_REBASE_OPERATION_PICK	my_project/libgit2/include/git2/rebase.h	/^	GIT_REBASE_OPERATION_PICK = 0,$/;"	e	enum:__anonf9a5428c0203
GIT_REBASE_OPERATION_REWORD	my_project/libgit2/include/git2/rebase.h	/^	GIT_REBASE_OPERATION_REWORD,$/;"	e	enum:__anonf9a5428c0203
GIT_REBASE_OPERATION_SQUASH	my_project/libgit2/include/git2/rebase.h	/^	GIT_REBASE_OPERATION_SQUASH,$/;"	e	enum:__anonf9a5428c0203
GIT_REBASE_OPTIONS_INIT	my_project/libgit2/include/git2/rebase.h	/^#define GIT_REBASE_OPTIONS_INIT /;"	d
GIT_REBASE_OPTIONS_VERSION	my_project/libgit2/include/git2/rebase.h	/^#define GIT_REBASE_OPTIONS_VERSION /;"	d
GIT_REBASE_STATE_INIT	my_project/libgit2/src/libgit2/rebase.c	/^#define GIT_REBASE_STATE_INIT /;"	d	file:
GIT_REFCOUNT_DEC	my_project/libgit2/src/util/util.h	/^#define GIT_REFCOUNT_DEC(/;"	d
GIT_REFCOUNT_INC	my_project/libgit2/src/util/util.h	/^#define GIT_REFCOUNT_INC(/;"	d
GIT_REFCOUNT_OWN	my_project/libgit2/src/util/util.h	/^#define GIT_REFCOUNT_OWN(/;"	d
GIT_REFCOUNT_OWNER	my_project/libgit2/src/util/util.h	/^#define GIT_REFCOUNT_OWNER(/;"	d
GIT_REFCOUNT_VAL	my_project/libgit2/src/util/util.h	/^#define GIT_REFCOUNT_VAL(/;"	d
GIT_REFDB_BACKEND_INIT	my_project/libgit2/include/git2/sys/refdb_backend.h	/^#define GIT_REFDB_BACKEND_INIT /;"	d
GIT_REFDB_BACKEND_VERSION	my_project/libgit2/include/git2/sys/refdb_backend.h	/^#define GIT_REFDB_BACKEND_VERSION /;"	d
GIT_REFERENCE_ALL	my_project/libgit2/include/git2/types.h	/^	GIT_REFERENCE_ALL      = GIT_REFERENCE_DIRECT | GIT_REFERENCE_SYMBOLIC$/;"	e	enum:__anon5cceb56f0203
GIT_REFERENCE_DIRECT	my_project/libgit2/include/git2/types.h	/^	GIT_REFERENCE_DIRECT   = 1, \/**< A reference that points at an object id *\/$/;"	e	enum:__anon5cceb56f0203
GIT_REFERENCE_FORMAT_ALLOW_ONELEVEL	my_project/libgit2/include/git2/refs.h	/^	GIT_REFERENCE_FORMAT_ALLOW_ONELEVEL = (1u << 0),$/;"	e	enum:__anon9f9f2bea0103
GIT_REFERENCE_FORMAT_NORMAL	my_project/libgit2/include/git2/refs.h	/^	GIT_REFERENCE_FORMAT_NORMAL = 0u,$/;"	e	enum:__anon9f9f2bea0103
GIT_REFERENCE_FORMAT_REFSPEC_PATTERN	my_project/libgit2/include/git2/refs.h	/^	GIT_REFERENCE_FORMAT_REFSPEC_PATTERN = (1u << 1),$/;"	e	enum:__anon9f9f2bea0103
GIT_REFERENCE_FORMAT_REFSPEC_SHORTHAND	my_project/libgit2/include/git2/refs.h	/^	GIT_REFERENCE_FORMAT_REFSPEC_SHORTHAND = (1u << 2)$/;"	e	enum:__anon9f9f2bea0103
GIT_REFERENCE_FORMAT__PRECOMPOSE_UNICODE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REFERENCE_FORMAT__PRECOMPOSE_UNICODE	/;"	d
GIT_REFERENCE_FORMAT__VALIDATION_DISABLE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REFERENCE_FORMAT__VALIDATION_DISABLE	/;"	d
GIT_REFERENCE_INVALID	my_project/libgit2/include/git2/types.h	/^	GIT_REFERENCE_INVALID  = 0, \/**< Invalid reference *\/$/;"	e	enum:__anon5cceb56f0203
GIT_REFERENCE_SYMBOLIC	my_project/libgit2/include/git2/types.h	/^	GIT_REFERENCE_SYMBOLIC = 2, \/**< A reference that points at another reference *\/$/;"	e	enum:__anon5cceb56f0203
GIT_REFERENCE_TYPEMASK	my_project/libgit2/src/libgit2/refs.c	/^#define GIT_REFERENCE_TYPEMASK /;"	d	file:
GIT_REFLOG_DIR	my_project/libgit2/src/libgit2/reflog.h	/^#define GIT_REFLOG_DIR /;"	d
GIT_REFLOG_DIR_MODE	my_project/libgit2/src/libgit2/reflog.h	/^#define GIT_REFLOG_DIR_MODE /;"	d
GIT_REFLOG_FILE_MODE	my_project/libgit2/src/libgit2/reflog.h	/^#define GIT_REFLOG_FILE_MODE /;"	d
GIT_REFNAME_MAX	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REFNAME_MAX /;"	d
GIT_REFSPEC_TAGS	my_project/libgit2/src/libgit2/refspec.h	/^#define GIT_REFSPEC_TAGS /;"	d
GIT_REFS_DIR	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REFS_DIR /;"	d
GIT_REFS_DIR_MODE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REFS_DIR_MODE /;"	d
GIT_REFS_FILE_MODE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REFS_FILE_MODE /;"	d
GIT_REFS_HEADS_DIR	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REFS_HEADS_DIR /;"	d
GIT_REFS_NOTES_DIR	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REFS_NOTES_DIR /;"	d
GIT_REFS_REMOTES_DIR	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REFS_REMOTES_DIR /;"	d
GIT_REFS_STASH_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REFS_STASH_FILE /;"	d
GIT_REFS_TAGS_DIR	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REFS_TAGS_DIR /;"	d
GIT_REFS_TAGS_DIR_LEN	my_project/libgit2/src/libgit2/tag.c	/^#define GIT_REFS_TAGS_DIR_LEN /;"	d	file:
GIT_REF_FORMAT_ALLOW_ONELEVEL	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_REF_FORMAT_ALLOW_ONELEVEL /;"	d
GIT_REF_FORMAT_NORMAL	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_REF_FORMAT_NORMAL /;"	d
GIT_REF_FORMAT_REFSPEC_PATTERN	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_REF_FORMAT_REFSPEC_PATTERN /;"	d
GIT_REF_FORMAT_REFSPEC_SHORTHAND	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_REF_FORMAT_REFSPEC_SHORTHAND /;"	d
GIT_REF_INVALID	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_REF_INVALID /;"	d
GIT_REF_LISTALL	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_REF_LISTALL /;"	d
GIT_REF_OID	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_REF_OID /;"	d
GIT_REF_SYMBOLIC	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_REF_SYMBOLIC /;"	d
GIT_REGEXP_ICASE	my_project/libgit2/src/util/regexp.h	/^	GIT_REGEXP_ICASE = (1 << 0)$/;"	e	enum:__anon6acbdb710103
GIT_REGEX_BUILTIN	my_project/libgit2/cmake/SelectRegex.cmake	/^	set(GIT_REGEX_BUILTIN 1)$/;"	v
GIT_REGEX_INIT	my_project/libgit2/src/util/regexp.h	/^# define GIT_REGEX_INIT /;"	d
GIT_REGEX_PCRE	my_project/libgit2/cmake/SelectRegex.cmake	/^	set(GIT_REGEX_PCRE 1)$/;"	v
GIT_REGEX_PCRE2	my_project/libgit2/cmake/SelectRegex.cmake	/^	set(GIT_REGEX_PCRE2 1)$/;"	v
GIT_REGEX_REGCOMP	my_project/libgit2/cmake/SelectRegex.cmake	/^	set(GIT_REGEX_REGCOMP 1)$/;"	v
GIT_REGEX_REGCOMP_L	my_project/libgit2/cmake/SelectRegex.cmake	/^	set(GIT_REGEX_REGCOMP_L 1)$/;"	v
GIT_REGEX_SPECIAL	my_project/libgit2/src/util/wildmatch.c	/^#define GIT_REGEX_SPECIAL /;"	d	file:
GIT_REMOTE_CALLBACKS_INIT	my_project/libgit2/include/git2/remote.h	/^#define GIT_REMOTE_CALLBACKS_INIT /;"	d
GIT_REMOTE_CALLBACKS_VERSION	my_project/libgit2/include/git2/remote.h	/^#define GIT_REMOTE_CALLBACKS_VERSION /;"	d
GIT_REMOTE_CAPABILITY_PUSH_OPTIONS	my_project/libgit2/include/git2/sys/remote.h	/^	GIT_REMOTE_CAPABILITY_PUSH_OPTIONS = (1 << 2),$/;"	e	enum:__anonc065e6340103
GIT_REMOTE_CAPABILITY_REACHABLE_OID	my_project/libgit2/include/git2/sys/remote.h	/^	GIT_REMOTE_CAPABILITY_REACHABLE_OID = (1 << 1),$/;"	e	enum:__anonc065e6340103
GIT_REMOTE_CAPABILITY_TIP_OID	my_project/libgit2/include/git2/sys/remote.h	/^	GIT_REMOTE_CAPABILITY_TIP_OID = (1 << 0),$/;"	e	enum:__anonc065e6340103
GIT_REMOTE_COMPLETION_DOWNLOAD	my_project/libgit2/include/git2/remote.h	/^	GIT_REMOTE_COMPLETION_DOWNLOAD,$/;"	e	enum:git_remote_completion_t
GIT_REMOTE_COMPLETION_ERROR	my_project/libgit2/include/git2/remote.h	/^	GIT_REMOTE_COMPLETION_ERROR$/;"	e	enum:git_remote_completion_t
GIT_REMOTE_COMPLETION_INDEXING	my_project/libgit2/include/git2/remote.h	/^	GIT_REMOTE_COMPLETION_INDEXING,$/;"	e	enum:git_remote_completion_t
GIT_REMOTE_CONNECT_OPTIONS_INIT	my_project/libgit2/include/git2/remote.h	/^#define GIT_REMOTE_CONNECT_OPTIONS_INIT /;"	d
GIT_REMOTE_CONNECT_OPTIONS_VERSION	my_project/libgit2/include/git2/remote.h	/^#define GIT_REMOTE_CONNECT_OPTIONS_VERSION /;"	d
GIT_REMOTE_CREATE_OPTIONS_INIT	my_project/libgit2/include/git2/remote.h	/^#define GIT_REMOTE_CREATE_OPTIONS_INIT /;"	d
GIT_REMOTE_CREATE_OPTIONS_VERSION	my_project/libgit2/include/git2/remote.h	/^#define GIT_REMOTE_CREATE_OPTIONS_VERSION /;"	d
GIT_REMOTE_CREATE_SKIP_DEFAULT_FETCHSPEC	my_project/libgit2/include/git2/remote.h	/^	GIT_REMOTE_CREATE_SKIP_DEFAULT_FETCHSPEC = (1 << 1)$/;"	e	enum:__anon144be4e60203
GIT_REMOTE_CREATE_SKIP_INSTEADOF	my_project/libgit2/include/git2/remote.h	/^	GIT_REMOTE_CREATE_SKIP_INSTEADOF = (1 << 0),$/;"	e	enum:__anon144be4e60203
GIT_REMOTE_DOWNLOAD_TAGS_ALL	my_project/libgit2/include/git2/remote.h	/^	GIT_REMOTE_DOWNLOAD_TAGS_ALL$/;"	e	enum:__anon144be4e60603
GIT_REMOTE_DOWNLOAD_TAGS_AUTO	my_project/libgit2/include/git2/remote.h	/^	GIT_REMOTE_DOWNLOAD_TAGS_AUTO,$/;"	e	enum:__anon144be4e60603
GIT_REMOTE_DOWNLOAD_TAGS_NONE	my_project/libgit2/include/git2/remote.h	/^	GIT_REMOTE_DOWNLOAD_TAGS_NONE,$/;"	e	enum:__anon144be4e60603
GIT_REMOTE_DOWNLOAD_TAGS_UNSPECIFIED	my_project/libgit2/include/git2/remote.h	/^	GIT_REMOTE_DOWNLOAD_TAGS_UNSPECIFIED = 0,$/;"	e	enum:__anon144be4e60603
GIT_REMOTE_ORIGIN	my_project/libgit2/src/libgit2/remote.h	/^#define GIT_REMOTE_ORIGIN /;"	d
GIT_REMOTE_REDIRECT_ALL	my_project/libgit2/include/git2/remote.h	/^	GIT_REMOTE_REDIRECT_ALL = (1 << 2)$/;"	e	enum:__anon144be4e60103
GIT_REMOTE_REDIRECT_INITIAL	my_project/libgit2/include/git2/remote.h	/^	GIT_REMOTE_REDIRECT_INITIAL = (1 << 1),$/;"	e	enum:__anon144be4e60103
GIT_REMOTE_REDIRECT_NONE	my_project/libgit2/include/git2/remote.h	/^	GIT_REMOTE_REDIRECT_NONE = (1 << 0),$/;"	e	enum:__anon144be4e60103
GIT_REMOTE_UPDATE_FETCHHEAD	my_project/libgit2/include/git2/remote.h	/^	GIT_REMOTE_UPDATE_FETCHHEAD = (1 << 0),$/;"	e	enum:__anon144be4e60303
GIT_REMOTE_UPDATE_REPORT_UNCHANGED	my_project/libgit2/include/git2/remote.h	/^	GIT_REMOTE_UPDATE_REPORT_UNCHANGED = (1 << 1)$/;"	e	enum:__anon144be4e60303
GIT_RENAMED_REF_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_RENAMED_REF_FILE /;"	d
GIT_REPARSE_DATA_BUFFER	my_project/libgit2/src/util/win32/reparse.h	/^} GIT_REPARSE_DATA_BUFFER;$/;"	t	typeref:struct:_GIT_REPARSE_DATA_BUFFER
GIT_REPOSITORY_INIT_BARE	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_BARE              = (1u << 0),$/;"	e	enum:__anon67af0d3a0203
GIT_REPOSITORY_INIT_EXTERNAL_TEMPLATE	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_EXTERNAL_TEMPLATE = (1u << 5),$/;"	e	enum:__anon67af0d3a0203
GIT_REPOSITORY_INIT_MKDIR	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_MKDIR             = (1u << 3),$/;"	e	enum:__anon67af0d3a0203
GIT_REPOSITORY_INIT_MKPATH	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_MKPATH            = (1u << 4),$/;"	e	enum:__anon67af0d3a0203
GIT_REPOSITORY_INIT_NO_DOTGIT_DIR	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_NO_DOTGIT_DIR     = (1u << 2),$/;"	e	enum:__anon67af0d3a0203
GIT_REPOSITORY_INIT_NO_REINIT	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_NO_REINIT         = (1u << 1),$/;"	e	enum:__anon67af0d3a0203
GIT_REPOSITORY_INIT_OPTIONS_INIT	my_project/libgit2/include/git2/repository.h	/^#define GIT_REPOSITORY_INIT_OPTIONS_INIT /;"	d
GIT_REPOSITORY_INIT_OPTIONS_VERSION	my_project/libgit2/include/git2/repository.h	/^#define GIT_REPOSITORY_INIT_OPTIONS_VERSION /;"	d
GIT_REPOSITORY_INIT_RELATIVE_GITLINK	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_RELATIVE_GITLINK  = (1u << 6)$/;"	e	enum:__anon67af0d3a0203
GIT_REPOSITORY_INIT_SHARED_ALL	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_SHARED_ALL   = 0002777$/;"	e	enum:__anon67af0d3a0303
GIT_REPOSITORY_INIT_SHARED_GROUP	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_SHARED_GROUP = 0002775,$/;"	e	enum:__anon67af0d3a0303
GIT_REPOSITORY_INIT_SHARED_UMASK	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_INIT_SHARED_UMASK = 0,$/;"	e	enum:__anon67af0d3a0303
GIT_REPOSITORY_INIT__HAS_DOTGIT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_REPOSITORY_INIT__HAS_DOTGIT = (1u << 16),$/;"	e	enum:__anon453495b50303
GIT_REPOSITORY_INIT__IS_REINIT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_REPOSITORY_INIT__IS_REINIT  = (1u << 18)$/;"	e	enum:__anon453495b50303
GIT_REPOSITORY_INIT__NATURAL_WD	my_project/libgit2/src/libgit2/repository.h	/^	GIT_REPOSITORY_INIT__NATURAL_WD = (1u << 17),$/;"	e	enum:__anon453495b50303
GIT_REPOSITORY_ITEM_COMMONDIR	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_COMMONDIR,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM_CONFIG	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_CONFIG,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM_GITDIR	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_GITDIR,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM_HOOKS	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_HOOKS,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM_INDEX	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_INDEX,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM_INFO	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_INFO,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM_LOGS	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_LOGS,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM_MODULES	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_MODULES,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM_OBJECTS	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_OBJECTS,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM_PACKED_REFS	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_PACKED_REFS,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM_REFS	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_REFS,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM_REMOTES	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_REMOTES,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM_WORKDIR	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_WORKDIR,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM_WORKTREES	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_WORKTREES,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM_WORKTREE_CONFIG	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM_WORKTREE_CONFIG,$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_ITEM__LAST	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_ITEM__LAST$/;"	e	enum:__anon67af0d3a0503
GIT_REPOSITORY_OPEN_BARE	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_OPEN_BARE      = (1 << 2),$/;"	e	enum:__anon67af0d3a0103
GIT_REPOSITORY_OPEN_CROSS_FS	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_OPEN_CROSS_FS  = (1 << 1),$/;"	e	enum:__anon67af0d3a0103
GIT_REPOSITORY_OPEN_FROM_ENV	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_OPEN_FROM_ENV  = (1 << 4)$/;"	e	enum:__anon67af0d3a0103
GIT_REPOSITORY_OPEN_NO_DOTGIT	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_OPEN_NO_DOTGIT = (1 << 3),$/;"	e	enum:__anon67af0d3a0103
GIT_REPOSITORY_OPEN_NO_SEARCH	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_OPEN_NO_SEARCH = (1 << 0),$/;"	e	enum:__anon67af0d3a0103
GIT_REPOSITORY_STATE_APPLY_MAILBOX	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_APPLY_MAILBOX,$/;"	e	enum:__anon67af0d3a0603
GIT_REPOSITORY_STATE_APPLY_MAILBOX_OR_REBASE	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_APPLY_MAILBOX_OR_REBASE$/;"	e	enum:__anon67af0d3a0603
GIT_REPOSITORY_STATE_BISECT	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_BISECT,$/;"	e	enum:__anon67af0d3a0603
GIT_REPOSITORY_STATE_CHERRYPICK	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_CHERRYPICK,$/;"	e	enum:__anon67af0d3a0603
GIT_REPOSITORY_STATE_CHERRYPICK_SEQUENCE	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_CHERRYPICK_SEQUENCE,$/;"	e	enum:__anon67af0d3a0603
GIT_REPOSITORY_STATE_MERGE	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_MERGE,$/;"	e	enum:__anon67af0d3a0603
GIT_REPOSITORY_STATE_NONE	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_NONE,$/;"	e	enum:__anon67af0d3a0603
GIT_REPOSITORY_STATE_REBASE	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_REBASE,$/;"	e	enum:__anon67af0d3a0603
GIT_REPOSITORY_STATE_REBASE_INTERACTIVE	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_REBASE_INTERACTIVE,$/;"	e	enum:__anon67af0d3a0603
GIT_REPOSITORY_STATE_REBASE_MERGE	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_REBASE_MERGE,$/;"	e	enum:__anon67af0d3a0603
GIT_REPOSITORY_STATE_REVERT	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_REVERT,$/;"	e	enum:__anon67af0d3a0603
GIT_REPOSITORY_STATE_REVERT_SEQUENCE	my_project/libgit2/include/git2/repository.h	/^	GIT_REPOSITORY_STATE_REVERT_SEQUENCE,$/;"	e	enum:__anon67af0d3a0603
GIT_REPO_VERSION_DEFAULT	my_project/libgit2/src/libgit2/repository.c	/^#define GIT_REPO_VERSION_DEFAULT /;"	d	file:
GIT_REPO_VERSION_MAX	my_project/libgit2/src/libgit2/repository.c	/^#define GIT_REPO_VERSION_MAX /;"	d	file:
GIT_RESET_HARD	my_project/libgit2/include/git2/reset.h	/^	GIT_RESET_HARD  = 3  \/**< MIXED plus changes in working tree discarded *\/$/;"	e	enum:__anon94695d1d0103
GIT_RESET_MIXED	my_project/libgit2/include/git2/reset.h	/^	GIT_RESET_MIXED = 2, \/**< SOFT plus reset index to the commit *\/$/;"	e	enum:__anon94695d1d0103
GIT_RESET_SOFT	my_project/libgit2/include/git2/reset.h	/^	GIT_RESET_SOFT  = 1, \/**< Move the head to the given commit *\/$/;"	e	enum:__anon94695d1d0103
GIT_RESTRICT	my_project/libgit2/src/util/win32/thread.h	/^#	define GIT_RESTRICT /;"	d
GIT_RETRY	my_project/libgit2/include/git2/errors.h	/^	GIT_RETRY           = -32,	\/**< Internal only *\/$/;"	e	enum:__anon095219370103
GIT_REVERT_FILE_MODE	my_project/libgit2/src/libgit2/revert.c	/^#define GIT_REVERT_FILE_MODE	/;"	d	file:
GIT_REVERT_HEAD_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_REVERT_HEAD_FILE /;"	d
GIT_REVERT_OPTIONS_INIT	my_project/libgit2/include/git2/revert.h	/^#define GIT_REVERT_OPTIONS_INIT /;"	d
GIT_REVERT_OPTIONS_VERSION	my_project/libgit2/include/git2/revert.h	/^#define GIT_REVERT_OPTIONS_VERSION /;"	d
GIT_REVPARSE_MERGE_BASE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_REVPARSE_MERGE_BASE /;"	d
GIT_REVPARSE_RANGE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_REVPARSE_RANGE /;"	d
GIT_REVPARSE_SINGLE	my_project/libgit2/include/git2/deprecated.h	/^#define GIT_REVPARSE_SINGLE /;"	d
GIT_REVSPEC_MERGE_BASE	my_project/libgit2/include/git2/revparse.h	/^	GIT_REVSPEC_MERGE_BASE     = 1 << 2$/;"	e	enum:__anonc6e279620103
GIT_REVSPEC_RANGE	my_project/libgit2/include/git2/revparse.h	/^	GIT_REVSPEC_RANGE          = 1 << 1,$/;"	e	enum:__anonc6e279620103
GIT_REVSPEC_SINGLE	my_project/libgit2/include/git2/revparse.h	/^	GIT_REVSPEC_SINGLE         = 1 << 0,$/;"	e	enum:__anonc6e279620103
GIT_REVWALK__PUSH_OPTIONS_INIT	my_project/libgit2/src/libgit2/revwalk.h	/^#define GIT_REVWALK__PUSH_OPTIONS_INIT /;"	d
GIT_RMDIR_EMPTY_HIERARCHY	my_project/libgit2/src/util/futils.h	/^	GIT_RMDIR_EMPTY_HIERARCHY = 0,$/;"	e	enum:__anon45ee975d0203
GIT_RMDIR_EMPTY_PARENTS	my_project/libgit2/src/util/futils.h	/^	GIT_RMDIR_EMPTY_PARENTS   = (1 << 2),$/;"	e	enum:__anon45ee975d0203
GIT_RMDIR_REMOVE_BLOCKERS	my_project/libgit2/src/util/futils.h	/^	GIT_RMDIR_REMOVE_BLOCKERS = (1 << 3),$/;"	e	enum:__anon45ee975d0203
GIT_RMDIR_REMOVE_FILES	my_project/libgit2/src/util/futils.h	/^	GIT_RMDIR_REMOVE_FILES    = (1 << 0),$/;"	e	enum:__anon45ee975d0203
GIT_RMDIR_SKIP_NONEMPTY	my_project/libgit2/src/util/futils.h	/^	GIT_RMDIR_SKIP_NONEMPTY   = (1 << 1),$/;"	e	enum:__anon45ee975d0203
GIT_RMDIR_SKIP_ROOT	my_project/libgit2/src/util/futils.h	/^	GIT_RMDIR_SKIP_ROOT       = (1 << 4)$/;"	e	enum:__anon45ee975d0203
GIT_RWLOCK_STATIC_INIT	my_project/libgit2/src/util/thread.h	/^#define GIT_RWLOCK_STATIC_INIT	/;"	d
GIT_RWLOCK_STATIC_INIT	my_project/libgit2/src/util/unix/pthread.h	/^#define GIT_RWLOCK_STATIC_INIT	/;"	d
GIT_SAFE_CRLF_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_SAFE_CRLF_DEFAULT = GIT_CONFIGMAP_FALSE,$/;"	e	enum:__anon453495b50203
GIT_SAFE_CRLF_FAIL	my_project/libgit2/src/libgit2/repository.h	/^	GIT_SAFE_CRLF_FAIL = 1,$/;"	e	enum:__anon453495b50203
GIT_SAFE_CRLF_FALSE	my_project/libgit2/src/libgit2/repository.h	/^	GIT_SAFE_CRLF_FALSE = 0,$/;"	e	enum:__anon453495b50203
GIT_SAFE_CRLF_WARN	my_project/libgit2/src/libgit2/repository.h	/^	GIT_SAFE_CRLF_WARN = 2,$/;"	e	enum:__anon453495b50203
GIT_SCHANNEL	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^		set(GIT_SCHANNEL 1)$/;"	v
GIT_SECURE_TRANSPORT	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^		set(GIT_SECURE_TRANSPORT 1)$/;"	v
GIT_SEQUENCER_DIR	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_SEQUENCER_DIR /;"	d
GIT_SEQUENCER_HEAD_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_SEQUENCER_HEAD_FILE /;"	d
GIT_SEQUENCER_OPTIONS_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_SEQUENCER_OPTIONS_FILE /;"	d
GIT_SEQUENCER_TODO_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_SEQUENCER_TODO_FILE /;"	d
GIT_SERVICE_RECEIVEPACK	my_project/libgit2/include/git2/sys/transport.h	/^	GIT_SERVICE_RECEIVEPACK = 4$/;"	e	enum:__anon4efa7c750203
GIT_SERVICE_RECEIVEPACK_LS	my_project/libgit2/include/git2/sys/transport.h	/^	GIT_SERVICE_RECEIVEPACK_LS = 3,$/;"	e	enum:__anon4efa7c750203
GIT_SERVICE_UPLOADPACK	my_project/libgit2/include/git2/sys/transport.h	/^	GIT_SERVICE_UPLOADPACK = 2,$/;"	e	enum:__anon4efa7c750203
GIT_SERVICE_UPLOADPACK_LS	my_project/libgit2/include/git2/sys/transport.h	/^	GIT_SERVICE_UPLOADPACK_LS = 1,$/;"	e	enum:__anon4efa7c750203
GIT_SHA1_COLLISIONDETECT	my_project/libgit2/cmake/SelectHashes.cmake	/^	set(GIT_SHA1_COLLISIONDETECT 1)$/;"	v
GIT_SHA1_COMMON_CRYPTO	my_project/libgit2/cmake/SelectHashes.cmake	/^	set(GIT_SHA1_COMMON_CRYPTO 1)$/;"	v
GIT_SHA1_MBEDTLS	my_project/libgit2/cmake/SelectHashes.cmake	/^	set(GIT_SHA1_MBEDTLS 1)$/;"	v
GIT_SHA1_OPENSSL	my_project/libgit2/cmake/SelectHashes.cmake	/^	set(GIT_SHA1_OPENSSL 1)$/;"	v
GIT_SHA1_OPENSSL_DYNAMIC	my_project/libgit2/cmake/SelectHashes.cmake	/^	set(GIT_SHA1_OPENSSL_DYNAMIC 1)$/;"	v
GIT_SHA1_WIN32	my_project/libgit2/cmake/SelectHashes.cmake	/^	set(GIT_SHA1_WIN32 1)$/;"	v
GIT_SHA256_BUILTIN	my_project/libgit2/cmake/SelectHashes.cmake	/^	set(GIT_SHA256_BUILTIN 1)$/;"	v
GIT_SHA256_COMMON_CRYPTO	my_project/libgit2/cmake/SelectHashes.cmake	/^	set(GIT_SHA256_COMMON_CRYPTO 1)$/;"	v
GIT_SHA256_MBEDTLS	my_project/libgit2/cmake/SelectHashes.cmake	/^	set(GIT_SHA256_MBEDTLS 1)$/;"	v
GIT_SHA256_OPENSSL	my_project/libgit2/cmake/SelectHashes.cmake	/^	set(GIT_SHA256_OPENSSL 1)$/;"	v
GIT_SHA256_OPENSSL_DYNAMIC	my_project/libgit2/cmake/SelectHashes.cmake	/^	set(GIT_SHA256_OPENSSL_DYNAMIC 1)$/;"	v
GIT_SHA256_WIN32	my_project/libgit2/cmake/SelectHashes.cmake	/^	set(GIT_SHA256_WIN32 1)$/;"	v
GIT_SIDE_BAND_DATA	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_SIDE_BAND_DATA /;"	d
GIT_SIDE_BAND_ERROR	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_SIDE_BAND_ERROR /;"	d
GIT_SIDE_BAND_PROGRESS	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_SIDE_BAND_PROGRESS /;"	d
GIT_SMART_BUFFER_SIZE	my_project/libgit2/src/libgit2/transports/smart.h	/^#define GIT_SMART_BUFFER_SIZE /;"	d
GIT_SOCKET	my_project/libgit2/src/util/unix/posix.h	/^typedef int GIT_SOCKET;$/;"	t	typeref:typename:int
GIT_SOCKET	my_project/libgit2/src/util/win32/posix.h	/^typedef SOCKET GIT_SOCKET;$/;"	t	typeref:typename:SOCKET
GIT_SORT_NONE	my_project/libgit2/include/git2/revwalk.h	/^	GIT_SORT_NONE = 0,$/;"	e	enum:__anon63eaeaf60103
GIT_SORT_REVERSE	my_project/libgit2/include/git2/revwalk.h	/^	GIT_SORT_REVERSE = 1 << 2$/;"	e	enum:__anon63eaeaf60103
GIT_SORT_TIME	my_project/libgit2/include/git2/revwalk.h	/^	GIT_SORT_TIME = 1 << 1,$/;"	e	enum:__anon63eaeaf60103
GIT_SORT_TOPOLOGICAL	my_project/libgit2/include/git2/revwalk.h	/^	GIT_SORT_TOPOLOGICAL = 1 << 0,$/;"	e	enum:__anon63eaeaf60103
GIT_SPACE	my_project/libgit2/src/util/wildmatch.c	/^#define GIT_SPACE /;"	d	file:
GIT_SRWLOCK	my_project/libgit2/src/util/win32/thread.h	/^typedef struct { void *Ptr; } GIT_SRWLOCK;$/;"	t	typeref:struct:__anond08cd1a00208
GIT_SSH	my_project/libgit2/cmake/SelectSSH.cmake	/^	set(GIT_SSH 1)$/;"	v
GIT_SSH_EXEC	my_project/libgit2/cmake/SelectSSH.cmake	/^	set(GIT_SSH_EXEC 1)$/;"	v
GIT_SSH_LIBSSH2	my_project/libgit2/cmake/SelectSSH.cmake	/^	set(GIT_SSH_LIBSSH2 1)$/;"	v
GIT_SSH_LIBSSH2_MEMORY_CREDENTIALS	my_project/libgit2/cmake/SelectSSH.cmake	/^		set(GIT_SSH_LIBSSH2_MEMORY_CREDENTIALS 1)$/;"	v
GIT_SSL_DEFAULT_CIPHERS	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^#define GIT_SSL_DEFAULT_CIPHERS /;"	d	file:
GIT_SSL_DEFAULT_CIPHERS	my_project/libgit2/src/libgit2/streams/openssl.c	/^#define GIT_SSL_DEFAULT_CIPHERS /;"	d	file:
GIT_SSL_DEFAULT_CIPHERS_COUNT	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^#define GIT_SSL_DEFAULT_CIPHERS_COUNT /;"	d	file:
GIT_STASH_APPLY_DEFAULT	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_DEFAULT = 0,$/;"	e	enum:__anon0322bc7d0203
GIT_STASH_APPLY_OPTIONS_INIT	my_project/libgit2/include/git2/stash.h	/^#define GIT_STASH_APPLY_OPTIONS_INIT /;"	d
GIT_STASH_APPLY_OPTIONS_VERSION	my_project/libgit2/include/git2/stash.h	/^#define GIT_STASH_APPLY_OPTIONS_VERSION /;"	d
GIT_STASH_APPLY_PROGRESS_ANALYZE_INDEX	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_ANALYZE_INDEX,$/;"	e	enum:__anon0322bc7d0303
GIT_STASH_APPLY_PROGRESS_ANALYZE_MODIFIED	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_ANALYZE_MODIFIED,$/;"	e	enum:__anon0322bc7d0303
GIT_STASH_APPLY_PROGRESS_ANALYZE_UNTRACKED	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_ANALYZE_UNTRACKED,$/;"	e	enum:__anon0322bc7d0303
GIT_STASH_APPLY_PROGRESS_CHECKOUT_MODIFIED	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_CHECKOUT_MODIFIED,$/;"	e	enum:__anon0322bc7d0303
GIT_STASH_APPLY_PROGRESS_CHECKOUT_UNTRACKED	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_CHECKOUT_UNTRACKED,$/;"	e	enum:__anon0322bc7d0303
GIT_STASH_APPLY_PROGRESS_DONE	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_DONE$/;"	e	enum:__anon0322bc7d0303
GIT_STASH_APPLY_PROGRESS_LOADING_STASH	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_LOADING_STASH,$/;"	e	enum:__anon0322bc7d0303
GIT_STASH_APPLY_PROGRESS_NONE	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_PROGRESS_NONE = 0,$/;"	e	enum:__anon0322bc7d0303
GIT_STASH_APPLY_REINSTATE_INDEX	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_APPLY_REINSTATE_INDEX = (1 << 0)$/;"	e	enum:__anon0322bc7d0203
GIT_STASH_DEFAULT	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_DEFAULT = 0,$/;"	e	enum:__anon0322bc7d0103
GIT_STASH_FILE	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_STASH_FILE /;"	d
GIT_STASH_INCLUDE_IGNORED	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_INCLUDE_IGNORED = (1 << 2),$/;"	e	enum:__anon0322bc7d0103
GIT_STASH_INCLUDE_UNTRACKED	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_INCLUDE_UNTRACKED = (1 << 1),$/;"	e	enum:__anon0322bc7d0103
GIT_STASH_KEEP_ALL	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_KEEP_ALL = (1 << 3)$/;"	e	enum:__anon0322bc7d0103
GIT_STASH_KEEP_INDEX	my_project/libgit2/include/git2/stash.h	/^	GIT_STASH_KEEP_INDEX = (1 << 0),$/;"	e	enum:__anon0322bc7d0103
GIT_STASH_SAVE_OPTIONS_INIT	my_project/libgit2/include/git2/stash.h	/^#define GIT_STASH_SAVE_OPTIONS_INIT /;"	d
GIT_STASH_SAVE_OPTIONS_VERSION	my_project/libgit2/include/git2/stash.h	/^#define GIT_STASH_SAVE_OPTIONS_VERSION /;"	d
GIT_STATUS_CONFLICTED	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_CONFLICTED       = (1u << 15)$/;"	e	enum:__anon6794a3fe0103
GIT_STATUS_CURRENT	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_CURRENT = 0,$/;"	e	enum:__anon6794a3fe0103
GIT_STATUS_IGNORED	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_IGNORED          = (1u << 14),$/;"	e	enum:__anon6794a3fe0103
GIT_STATUS_INDEX_DELETED	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_INDEX_DELETED    = (1u << 2),$/;"	e	enum:__anon6794a3fe0103
GIT_STATUS_INDEX_MODIFIED	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_INDEX_MODIFIED   = (1u << 1),$/;"	e	enum:__anon6794a3fe0103
GIT_STATUS_INDEX_NEW	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_INDEX_NEW        = (1u << 0),$/;"	e	enum:__anon6794a3fe0103
GIT_STATUS_INDEX_RENAMED	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_INDEX_RENAMED    = (1u << 3),$/;"	e	enum:__anon6794a3fe0103
GIT_STATUS_INDEX_TYPECHANGE	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_INDEX_TYPECHANGE = (1u << 4),$/;"	e	enum:__anon6794a3fe0103
GIT_STATUS_OPTIONS_INIT	my_project/libgit2/include/git2/status.h	/^#define GIT_STATUS_OPTIONS_INIT /;"	d
GIT_STATUS_OPTIONS_VERSION	my_project/libgit2/include/git2/status.h	/^#define GIT_STATUS_OPTIONS_VERSION /;"	d
GIT_STATUS_OPT_DEFAULTS	my_project/libgit2/include/git2/status.h	/^#define GIT_STATUS_OPT_DEFAULTS /;"	d
GIT_STATUS_OPT_DISABLE_PATHSPEC_MATCH	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_DISABLE_PATHSPEC_MATCH           = (1u << 5),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_EXCLUDE_SUBMODULES	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_EXCLUDE_SUBMODULES               = (1u << 3),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_INCLUDE_IGNORED	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_INCLUDE_IGNORED                  = (1u << 1),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_INCLUDE_UNMODIFIED	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_INCLUDE_UNMODIFIED               = (1u << 2),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_INCLUDE_UNREADABLE	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_INCLUDE_UNREADABLE               = (1u << 14),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_INCLUDE_UNREADABLE_AS_UNTRACKED	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_INCLUDE_UNREADABLE_AS_UNTRACKED  = (1u << 15)$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_INCLUDE_UNTRACKED	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_INCLUDE_UNTRACKED                = (1u << 0),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_NO_REFRESH	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_NO_REFRESH                       = (1u << 12),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_RECURSE_IGNORED_DIRS	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_RECURSE_IGNORED_DIRS             = (1u << 6),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_RECURSE_UNTRACKED_DIRS	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_RECURSE_UNTRACKED_DIRS           = (1u << 4),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_RENAMES_FROM_REWRITES	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_RENAMES_FROM_REWRITES            = (1u << 11),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_RENAMES_HEAD_TO_INDEX	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_RENAMES_HEAD_TO_INDEX            = (1u << 7),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_RENAMES_INDEX_TO_WORKDIR	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_RENAMES_INDEX_TO_WORKDIR         = (1u << 8),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_SORT_CASE_INSENSITIVELY	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_SORT_CASE_INSENSITIVELY          = (1u << 10),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_SORT_CASE_SENSITIVELY	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_SORT_CASE_SENSITIVELY            = (1u << 9),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_OPT_UPDATE_INDEX	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_OPT_UPDATE_INDEX                     = (1u << 13),$/;"	e	enum:__anon6794a3fe0303
GIT_STATUS_SHOW_INDEX_AND_WORKDIR	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_SHOW_INDEX_AND_WORKDIR = 0,$/;"	e	enum:__anon6794a3fe0203
GIT_STATUS_SHOW_INDEX_ONLY	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_SHOW_INDEX_ONLY = 1,$/;"	e	enum:__anon6794a3fe0203
GIT_STATUS_SHOW_WORKDIR_ONLY	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_SHOW_WORKDIR_ONLY = 2$/;"	e	enum:__anon6794a3fe0203
GIT_STATUS_WT_DELETED	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_WT_DELETED       = (1u << 9),$/;"	e	enum:__anon6794a3fe0103
GIT_STATUS_WT_MODIFIED	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_WT_MODIFIED      = (1u << 8),$/;"	e	enum:__anon6794a3fe0103
GIT_STATUS_WT_NEW	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_WT_NEW           = (1u << 7),$/;"	e	enum:__anon6794a3fe0103
GIT_STATUS_WT_RENAMED	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_WT_RENAMED       = (1u << 11),$/;"	e	enum:__anon6794a3fe0103
GIT_STATUS_WT_TYPECHANGE	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_WT_TYPECHANGE    = (1u << 10),$/;"	e	enum:__anon6794a3fe0103
GIT_STATUS_WT_UNREADABLE	my_project/libgit2/include/git2/status.h	/^	GIT_STATUS_WT_UNREADABLE    = (1u << 12),$/;"	e	enum:__anon6794a3fe0103
GIT_STREAM_RDONLY	my_project/libgit2/include/git2/odb_backend.h	/^	GIT_STREAM_RDONLY = (1 << 1),$/;"	e	enum:__anon6d9003760403
GIT_STREAM_RW	my_project/libgit2/include/git2/odb_backend.h	/^	GIT_STREAM_RW = (GIT_STREAM_RDONLY | GIT_STREAM_WRONLY)$/;"	e	enum:__anon6d9003760403
GIT_STREAM_STANDARD	my_project/libgit2/include/git2/sys/stream.h	/^	GIT_STREAM_STANDARD = 1,$/;"	e	enum:__anon3a3bd7540203
GIT_STREAM_TLS	my_project/libgit2/include/git2/sys/stream.h	/^	GIT_STREAM_TLS = 2$/;"	e	enum:__anon3a3bd7540203
GIT_STREAM_VERSION	my_project/libgit2/include/git2/sys/stream.h	/^#define GIT_STREAM_VERSION /;"	d
GIT_STREAM_WRONLY	my_project/libgit2/include/git2/odb_backend.h	/^	GIT_STREAM_WRONLY = (1 << 2),$/;"	e	enum:__anon6d9003760403
GIT_STR_BOM_NONE	my_project/libgit2/src/util/str.h	/^	GIT_STR_BOM_NONE = 0,$/;"	e	enum:__anon85703a5f0103
GIT_STR_BOM_UTF16_BE	my_project/libgit2/src/util/str.h	/^	GIT_STR_BOM_UTF16_BE = 3,$/;"	e	enum:__anon85703a5f0103
GIT_STR_BOM_UTF16_LE	my_project/libgit2/src/util/str.h	/^	GIT_STR_BOM_UTF16_LE = 2,$/;"	e	enum:__anon85703a5f0103
GIT_STR_BOM_UTF32_BE	my_project/libgit2/src/util/str.h	/^	GIT_STR_BOM_UTF32_BE = 5$/;"	e	enum:__anon85703a5f0103
GIT_STR_BOM_UTF32_LE	my_project/libgit2/src/util/str.h	/^	GIT_STR_BOM_UTF32_LE = 4,$/;"	e	enum:__anon85703a5f0103
GIT_STR_BOM_UTF8	my_project/libgit2/src/util/str.h	/^	GIT_STR_BOM_UTF8 = 1,$/;"	e	enum:__anon85703a5f0103
GIT_STR_INIT	my_project/libgit2/src/util/str.h	/^#define GIT_STR_INIT /;"	d
GIT_STR_INIT_CONST	my_project/libgit2/src/util/str.h	/^#define GIT_STR_INIT_CONST(/;"	d
GIT_SUBMODULE_IGNORE_ALL	my_project/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_IGNORE_ALL       = 4   \/**< never dirty *\/$/;"	e	enum:__anon5cceb56f0603
GIT_SUBMODULE_IGNORE_DIRTY	my_project/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_IGNORE_DIRTY     = 3,  \/**< only dirty if HEAD moved *\/$/;"	e	enum:__anon5cceb56f0603
GIT_SUBMODULE_IGNORE_NONE	my_project/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_IGNORE_NONE      = 1,  \/**< any change or untracked == dirty *\/$/;"	e	enum:__anon5cceb56f0603
GIT_SUBMODULE_IGNORE_UNSPECIFIED	my_project/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_IGNORE_UNSPECIFIED  = -1, \/**< use the submodule's configuration *\/$/;"	e	enum:__anon5cceb56f0603
GIT_SUBMODULE_IGNORE_UNTRACKED	my_project/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_IGNORE_UNTRACKED = 2,  \/**< dirty if tracked files change *\/$/;"	e	enum:__anon5cceb56f0603
GIT_SUBMODULE_RECURSE_NO	my_project/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_RECURSE_NO = 0,$/;"	e	enum:__anon5cceb56f0703
GIT_SUBMODULE_RECURSE_ONDEMAND	my_project/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_RECURSE_ONDEMAND = 2$/;"	e	enum:__anon5cceb56f0703
GIT_SUBMODULE_RECURSE_YES	my_project/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_RECURSE_YES = 1,$/;"	e	enum:__anon5cceb56f0703
GIT_SUBMODULE_STATUS_INDEX_ADDED	my_project/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_INDEX_ADDED       = (1u << 4),$/;"	e	enum:__anon9fe91e8a0103
GIT_SUBMODULE_STATUS_INDEX_DELETED	my_project/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_INDEX_DELETED     = (1u << 5),$/;"	e	enum:__anon9fe91e8a0103
GIT_SUBMODULE_STATUS_INDEX_MODIFIED	my_project/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_INDEX_MODIFIED    = (1u << 6),$/;"	e	enum:__anon9fe91e8a0103
GIT_SUBMODULE_STATUS_IN_CONFIG	my_project/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_IN_CONFIG         = (1u << 2),$/;"	e	enum:__anon9fe91e8a0103
GIT_SUBMODULE_STATUS_IN_HEAD	my_project/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_IN_HEAD           = (1u << 0),$/;"	e	enum:__anon9fe91e8a0103
GIT_SUBMODULE_STATUS_IN_INDEX	my_project/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_IN_INDEX          = (1u << 1),$/;"	e	enum:__anon9fe91e8a0103
GIT_SUBMODULE_STATUS_IN_WD	my_project/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_IN_WD             = (1u << 3),$/;"	e	enum:__anon9fe91e8a0103
GIT_SUBMODULE_STATUS_IS_INDEX_UNMODIFIED	my_project/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_STATUS_IS_INDEX_UNMODIFIED(/;"	d
GIT_SUBMODULE_STATUS_IS_UNMODIFIED	my_project/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_STATUS_IS_UNMODIFIED(/;"	d
GIT_SUBMODULE_STATUS_IS_WD_DIRTY	my_project/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_STATUS_IS_WD_DIRTY(/;"	d
GIT_SUBMODULE_STATUS_IS_WD_UNMODIFIED	my_project/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_STATUS_IS_WD_UNMODIFIED(/;"	d
GIT_SUBMODULE_STATUS_WD_ADDED	my_project/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_WD_ADDED          = (1u << 8),$/;"	e	enum:__anon9fe91e8a0103
GIT_SUBMODULE_STATUS_WD_DELETED	my_project/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_WD_DELETED        = (1u << 9),$/;"	e	enum:__anon9fe91e8a0103
GIT_SUBMODULE_STATUS_WD_INDEX_MODIFIED	my_project/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_WD_INDEX_MODIFIED = (1u << 11),$/;"	e	enum:__anon9fe91e8a0103
GIT_SUBMODULE_STATUS_WD_MODIFIED	my_project/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_WD_MODIFIED       = (1u << 10),$/;"	e	enum:__anon9fe91e8a0103
GIT_SUBMODULE_STATUS_WD_UNINITIALIZED	my_project/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_WD_UNINITIALIZED  = (1u << 7),$/;"	e	enum:__anon9fe91e8a0103
GIT_SUBMODULE_STATUS_WD_UNTRACKED	my_project/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_WD_UNTRACKED      = (1u << 13)$/;"	e	enum:__anon9fe91e8a0103
GIT_SUBMODULE_STATUS_WD_WD_MODIFIED	my_project/libgit2/include/git2/submodule.h	/^	GIT_SUBMODULE_STATUS_WD_WD_MODIFIED    = (1u << 12),$/;"	e	enum:__anon9fe91e8a0103
GIT_SUBMODULE_STATUS__CLEAR_INTERNAL	my_project/libgit2/src/libgit2/submodule.h	/^#define GIT_SUBMODULE_STATUS__CLEAR_INTERNAL(/;"	d
GIT_SUBMODULE_STATUS__HEAD_NOT_SUBMODULE	my_project/libgit2/src/libgit2/submodule.h	/^	GIT_SUBMODULE_STATUS__HEAD_NOT_SUBMODULE  = (1u << 24),$/;"	e	enum:__anon705203a50103
GIT_SUBMODULE_STATUS__HEAD_OID_VALID	my_project/libgit2/src/libgit2/submodule.h	/^	GIT_SUBMODULE_STATUS__HEAD_OID_VALID      = (1u << 21),$/;"	e	enum:__anon705203a50103
GIT_SUBMODULE_STATUS__INDEX_FLAGS	my_project/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_STATUS__INDEX_FLAGS	/;"	d
GIT_SUBMODULE_STATUS__INDEX_MULTIPLE_ENTRIES	my_project/libgit2/src/libgit2/submodule.h	/^	GIT_SUBMODULE_STATUS__INDEX_MULTIPLE_ENTRIES = (1u << 27)$/;"	e	enum:__anon705203a50103
GIT_SUBMODULE_STATUS__INDEX_NOT_SUBMODULE	my_project/libgit2/src/libgit2/submodule.h	/^	GIT_SUBMODULE_STATUS__INDEX_NOT_SUBMODULE = (1u << 25),$/;"	e	enum:__anon705203a50103
GIT_SUBMODULE_STATUS__INDEX_OID_VALID	my_project/libgit2/src/libgit2/submodule.h	/^	GIT_SUBMODULE_STATUS__INDEX_OID_VALID     = (1u << 22),$/;"	e	enum:__anon705203a50103
GIT_SUBMODULE_STATUS__IN_FLAGS	my_project/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_STATUS__IN_FLAGS	/;"	d
GIT_SUBMODULE_STATUS__WD_FLAGS	my_project/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_STATUS__WD_FLAGS	/;"	d
GIT_SUBMODULE_STATUS__WD_NOT_SUBMODULE	my_project/libgit2/src/libgit2/submodule.h	/^	GIT_SUBMODULE_STATUS__WD_NOT_SUBMODULE    = (1u << 26),$/;"	e	enum:__anon705203a50103
GIT_SUBMODULE_STATUS__WD_OID_VALID	my_project/libgit2/src/libgit2/submodule.h	/^	GIT_SUBMODULE_STATUS__WD_OID_VALID        = (1u << 23),$/;"	e	enum:__anon705203a50103
GIT_SUBMODULE_STATUS__WD_SCANNED	my_project/libgit2/src/libgit2/submodule.h	/^	GIT_SUBMODULE_STATUS__WD_SCANNED          = (1u << 20),$/;"	e	enum:__anon705203a50103
GIT_SUBMODULE_UPDATE_CHECKOUT	my_project/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_UPDATE_CHECKOUT = 1,$/;"	e	enum:__anon5cceb56f0503
GIT_SUBMODULE_UPDATE_DEFAULT	my_project/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_UPDATE_DEFAULT  = 0$/;"	e	enum:__anon5cceb56f0503
GIT_SUBMODULE_UPDATE_MERGE	my_project/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_UPDATE_MERGE    = 3,$/;"	e	enum:__anon5cceb56f0503
GIT_SUBMODULE_UPDATE_NONE	my_project/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_UPDATE_NONE     = 4,$/;"	e	enum:__anon5cceb56f0503
GIT_SUBMODULE_UPDATE_OPTIONS_INIT	my_project/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_UPDATE_OPTIONS_INIT /;"	d
GIT_SUBMODULE_UPDATE_OPTIONS_VERSION	my_project/libgit2/include/git2/submodule.h	/^#define GIT_SUBMODULE_UPDATE_OPTIONS_VERSION /;"	d
GIT_SUBMODULE_UPDATE_REBASE	my_project/libgit2/include/git2/types.h	/^	GIT_SUBMODULE_UPDATE_REBASE   = 2,$/;"	e	enum:__anon5cceb56f0503
GIT_SYMLINKS_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_SYMLINKS_DEFAULT = GIT_CONFIGMAP_TRUE,$/;"	e	enum:__anon453495b50203
GIT_SYMREF	my_project/libgit2/src/libgit2/refs.h	/^#define GIT_SYMREF /;"	d
GIT_SYSDIR_GLOBAL	my_project/libgit2/src/libgit2/sysdir.h	/^	GIT_SYSDIR_GLOBAL      = 1,$/;"	e	enum:__anon71a311330103
GIT_SYSDIR_HOME	my_project/libgit2/src/libgit2/sysdir.h	/^	GIT_SYSDIR_HOME        = 5,$/;"	e	enum:__anon71a311330103
GIT_SYSDIR_PROGRAMDATA	my_project/libgit2/src/libgit2/sysdir.h	/^	GIT_SYSDIR_PROGRAMDATA = 3,$/;"	e	enum:__anon71a311330103
GIT_SYSDIR_SYSTEM	my_project/libgit2/src/libgit2/sysdir.h	/^	GIT_SYSDIR_SYSTEM      = 0,$/;"	e	enum:__anon71a311330103
GIT_SYSDIR_TEMPLATE	my_project/libgit2/src/libgit2/sysdir.h	/^	GIT_SYSDIR_TEMPLATE    = 4,$/;"	e	enum:__anon71a311330103
GIT_SYSDIR_XDG	my_project/libgit2/src/libgit2/sysdir.h	/^	GIT_SYSDIR_XDG         = 2,$/;"	e	enum:__anon71a311330103
GIT_SYSDIR__MAX	my_project/libgit2/src/libgit2/sysdir.h	/^	GIT_SYSDIR__MAX        = 6$/;"	e	enum:__anon71a311330103
GIT_SYSTEM_CALL	my_project/libgit2/src/util/git2_util.h	/^#define GIT_SYSTEM_CALL$/;"	d
GIT_SYSTEM_CALL	my_project/libgit2/src/util/thread.c	/^	void (GIT_SYSTEM_CALL *destroy_fn)(void *);$/;"	m	struct:__anon43da2a990108	typeref:typename:void (* destroy_fn)(void *)	file:
GIT_SYSTEM_CALL	my_project/libgit2/src/util/win32/msvc-compat.h	/^#define GIT_SYSTEM_CALL /;"	d
GIT_THREADS	my_project/libgit2/src/CMakeLists.txt	/^	set(GIT_THREADS 1)$/;"	v
GIT_TIMEOUT	my_project/libgit2/include/git2/errors.h	/^	GIT_TIMEOUT         = -37,	\/**< The operation timed out *\/$/;"	e	enum:__anon095219370103
GIT_TRACE_DEBUG	my_project/libgit2/include/git2/trace.h	/^	GIT_TRACE_DEBUG = 5,$/;"	e	enum:__anon4b69d5290103
GIT_TRACE_ERROR	my_project/libgit2/include/git2/trace.h	/^	GIT_TRACE_ERROR = 2,$/;"	e	enum:__anon4b69d5290103
GIT_TRACE_FATAL	my_project/libgit2/include/git2/trace.h	/^	GIT_TRACE_FATAL = 1,$/;"	e	enum:__anon4b69d5290103
GIT_TRACE_INFO	my_project/libgit2/include/git2/trace.h	/^	GIT_TRACE_INFO = 4,$/;"	e	enum:__anon4b69d5290103
GIT_TRACE_NONE	my_project/libgit2/include/git2/trace.h	/^	GIT_TRACE_NONE = 0,$/;"	e	enum:__anon4b69d5290103
GIT_TRACE_TRACE	my_project/libgit2/include/git2/trace.h	/^	GIT_TRACE_TRACE = 6$/;"	e	enum:__anon4b69d5290103
GIT_TRACE_WARN	my_project/libgit2/include/git2/trace.h	/^	GIT_TRACE_WARN = 3,$/;"	e	enum:__anon4b69d5290103
GIT_TRANSPORT_COUNT	my_project/libgit2/src/libgit2/transport.c	/^#define GIT_TRANSPORT_COUNT /;"	d	file:
GIT_TRANSPORT_INIT	my_project/libgit2/include/git2/sys/transport.h	/^#define GIT_TRANSPORT_INIT /;"	d
GIT_TRANSPORT_VERSION	my_project/libgit2/include/git2/sys/transport.h	/^#define GIT_TRANSPORT_VERSION /;"	d
GIT_TREEWALK_POST	my_project/libgit2/include/git2/tree.h	/^	GIT_TREEWALK_POST = 1 \/* Post-order *\/$/;"	e	enum:__anona533f3ca0103
GIT_TREEWALK_PRE	my_project/libgit2/include/git2/tree.h	/^	GIT_TREEWALK_PRE = 0, \/* Pre-order *\/$/;"	e	enum:__anona533f3ca0103
GIT_TREE_UPDATE_REMOVE	my_project/libgit2/include/git2/tree.h	/^	GIT_TREE_UPDATE_REMOVE$/;"	e	enum:__anona533f3ca0203
GIT_TREE_UPDATE_UPSERT	my_project/libgit2/include/git2/tree.h	/^	GIT_TREE_UPDATE_UPSERT,$/;"	e	enum:__anona533f3ca0203
GIT_TRUSTCTIME_DEFAULT	my_project/libgit2/src/libgit2/repository.h	/^	GIT_TRUSTCTIME_DEFAULT = GIT_CONFIGMAP_TRUE,$/;"	e	enum:__anon453495b50203
GIT_UNUSED	my_project/libgit2/src/util/cc-compat.h	/^# define GIT_UNUSED(/;"	d
GIT_UNUSED_ARG	my_project/libgit2/src/util/cc-compat.h	/^# define GIT_UNUSED_ARG /;"	d
GIT_UNUSED_ARG	my_project/libgit2/src/util/cc-compat.h	/^# define GIT_UNUSED_ARG$/;"	d
GIT_USE_FUTIMENS	my_project/libgit2/src/CMakeLists.txt	/^	set(GIT_USE_FUTIMENS 1)$/;"	v
GIT_USE_ICONV	my_project/libgit2/src/CMakeLists.txt	/^	set(GIT_USE_ICONV 1)$/;"	v
GIT_USE_NSEC	my_project/libgit2/src/CMakeLists.txt	/^	set(GIT_USE_NSEC 1)$/;"	v
GIT_USE_STAT_MTIM	my_project/libgit2/src/CMakeLists.txt	/^	set(GIT_USE_STAT_MTIM 1)$/;"	v
GIT_USE_STAT_MTIMESPEC	my_project/libgit2/src/CMakeLists.txt	/^	set(GIT_USE_STAT_MTIMESPEC 1)$/;"	v
GIT_USE_STAT_MTIME_NSEC	my_project/libgit2/src/CMakeLists.txt	/^	set(GIT_USE_STAT_MTIME_NSEC 1)$/;"	v
GIT_VECTOR_FLAG_MAX	my_project/libgit2/src/util/vector.h	/^	GIT_VECTOR_FLAG_MAX = (1u << 1)$/;"	e	enum:__anon138915190103
GIT_VECTOR_GET	my_project/libgit2/src/util/vector.h	/^#define GIT_VECTOR_GET(/;"	d
GIT_VECTOR_INIT	my_project/libgit2/src/util/vector.h	/^#define GIT_VECTOR_INIT /;"	d
GIT_VECTOR_SORTED	my_project/libgit2/src/util/vector.h	/^	GIT_VECTOR_SORTED = (1u << 0),$/;"	e	enum:__anon138915190103
GIT_WARN_UNUSED_RESULT	my_project/libgit2/src/util/git2_util.h	/^# define GIT_WARN_UNUSED_RESULT /;"	d
GIT_WARN_UNUSED_RESULT	my_project/libgit2/src/util/git2_util.h	/^# define GIT_WARN_UNUSED_RESULT$/;"	d
GIT_WIN32	my_project/libgit2/include/git2/common.h	/^#define GIT_WIN32 /;"	d
GIT_WIN32_LEAKCHECK	my_project/libgit2/cmake/DefaultCFlags.cmake	/^		set(GIT_WIN32_LEAKCHECK 1)$/;"	v
GIT_WIN32_LEAKCHECK_STACKTRACE_LEAKS_SINCE_MARK	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^	GIT_WIN32_LEAKCHECK_STACKTRACE_LEAKS_SINCE_MARK = (1 << 1),$/;"	e	enum:git_win32_leakcheck_stacktrace_options
GIT_WIN32_LEAKCHECK_STACKTRACE_LEAKS_TOTAL	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^	GIT_WIN32_LEAKCHECK_STACKTRACE_LEAKS_TOTAL      = (1 << 2),$/;"	e	enum:git_win32_leakcheck_stacktrace_options
GIT_WIN32_LEAKCHECK_STACKTRACE_QUIET	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^	GIT_WIN32_LEAKCHECK_STACKTRACE_QUIET            = (1 << 3),$/;"	e	enum:git_win32_leakcheck_stacktrace_options
GIT_WIN32_LEAKCHECK_STACKTRACE_SET_MARK	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^	GIT_WIN32_LEAKCHECK_STACKTRACE_SET_MARK         = (1 << 0),$/;"	e	enum:git_win32_leakcheck_stacktrace_options
GIT_WIN32_LEAKCHECK_STACK_MAX_FRAMES	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^#define GIT_WIN32_LEAKCHECK_STACK_MAX_FRAMES /;"	d
GIT_WINHTTP	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^		set(GIT_WINHTTP 1)$/;"	v
GIT_WINHTTP_AUTH_BASIC	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	GIT_WINHTTP_AUTH_BASIC = 1,$/;"	e	enum:__anon5ba854ad0103	file:
GIT_WINHTTP_AUTH_DIGEST	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	GIT_WINHTTP_AUTH_DIGEST = 8$/;"	e	enum:__anon5ba854ad0103	file:
GIT_WINHTTP_AUTH_NEGOTIATE	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	GIT_WINHTTP_AUTH_NEGOTIATE = 4,$/;"	e	enum:__anon5ba854ad0103	file:
GIT_WINHTTP_AUTH_NTLM	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	GIT_WINHTTP_AUTH_NTLM = 2,$/;"	e	enum:__anon5ba854ad0103	file:
GIT_WIN_PATH_MAX	my_project/libgit2/src/util/win32/w32_common.h	/^#define GIT_WIN_PATH_MAX /;"	d
GIT_WIN_PATH_SHORTNAME	my_project/libgit2/src/util/win32/w32_common.h	/^#define GIT_WIN_PATH_SHORTNAME /;"	d
GIT_WIN_PATH_UTF16	my_project/libgit2/src/util/win32/w32_common.h	/^#define GIT_WIN_PATH_UTF16	/;"	d
GIT_WIN_PATH_UTF8	my_project/libgit2/src/util/win32/w32_common.h	/^#define GIT_WIN_PATH_UTF8	/;"	d
GIT_WORKTREE_ADD_OPTIONS_INIT	my_project/libgit2/include/git2/worktree.h	/^#define GIT_WORKTREE_ADD_OPTIONS_INIT /;"	d
GIT_WORKTREE_ADD_OPTIONS_VERSION	my_project/libgit2/include/git2/worktree.h	/^#define GIT_WORKTREE_ADD_OPTIONS_VERSION /;"	d
GIT_WORKTREE_PRUNE_LOCKED	my_project/libgit2/include/git2/worktree.h	/^	GIT_WORKTREE_PRUNE_LOCKED = 1u << 1,$/;"	e	enum:__anon62538c6d0103
GIT_WORKTREE_PRUNE_OPTIONS_INIT	my_project/libgit2/include/git2/worktree.h	/^#define GIT_WORKTREE_PRUNE_OPTIONS_INIT /;"	d
GIT_WORKTREE_PRUNE_OPTIONS_VERSION	my_project/libgit2/include/git2/worktree.h	/^#define GIT_WORKTREE_PRUNE_OPTIONS_VERSION /;"	d
GIT_WORKTREE_PRUNE_VALID	my_project/libgit2/include/git2/worktree.h	/^	GIT_WORKTREE_PRUNE_VALID = 1u << 0,$/;"	e	enum:__anon62538c6d0103
GIT_WORKTREE_PRUNE_WORKING_TREE	my_project/libgit2/include/git2/worktree.h	/^	GIT_WORKTREE_PRUNE_WORKING_TREE = 1u << 2$/;"	e	enum:__anon62538c6d0103
GIT_XDIFF_MAX_SIZE	my_project/libgit2/src/libgit2/diff_xdiff.h	/^#define GIT_XDIFF_MAX_SIZE /;"	d
GIT_ZSTREAM_DEFLATE	my_project/libgit2/src/util/zstream.h	/^	GIT_ZSTREAM_DEFLATE$/;"	e	enum:__anon596d958c0103
GIT_ZSTREAM_INFLATE	my_project/libgit2/src/util/zstream.h	/^	GIT_ZSTREAM_INFLATE,$/;"	e	enum:__anon596d958c0103
GIT_ZSTREAM_INIT	my_project/libgit2/src/util/zstream.h	/^#define GIT_ZSTREAM_INIT /;"	d
GIT__WIN32_NO_WRAP_DIR	my_project/libgit2/src/util/win32/dir.c	/^#define GIT__WIN32_NO_WRAP_DIR$/;"	d	file:
GOOGLESOURCE_REPO_URL	my_project/libgit2/tests/libgit2/online/clone.c	/^#define GOOGLESOURCE_REPO_URL /;"	d	file:
GOTO	my_project/libgit2/src/libgit2/trailer.c	/^#define GOTO(/;"	d	file:
GSSAPI_FLAVOR_HEIMDAL	my_project/libgit2/cmake/FindGSSAPI.cmake	/^				set(GSSAPI_FLAVOR_HEIMDAL TRUE)$/;"	v
GSSAPI_FLAVOR_HEIMDAL	my_project/libgit2/cmake/FindGSSAPI.cmake	/^			set(GSSAPI_FLAVOR_HEIMDAL TRUE)$/;"	v
GSSAPI_FLAVOR_MIT	my_project/libgit2/cmake/FindGSSAPI.cmake	/^			set(GSSAPI_FLAVOR_MIT TRUE)$/;"	v
GSSAPI_FOUND	my_project/libgit2/cmake/FindGSSAPI.cmake	/^	set(GSSAPI_FOUND TRUE)$/;"	v
GSSAPI_LIBRARIES	my_project/libgit2/cmake/FindGSSAPI.cmake	/^		set(GSSAPI_LIBRARIES ${GSSAPI_LIBRARIES} ${ASN1_LIBRARY})$/;"	v
GSSAPI_LIBRARIES	my_project/libgit2/cmake/FindGSSAPI.cmake	/^		set(GSSAPI_LIBRARIES ${GSSAPI_LIBRARIES} ${COM_ERR_LIBRARY})$/;"	v
GSSAPI_LIBRARIES	my_project/libgit2/cmake/FindGSSAPI.cmake	/^		set(GSSAPI_LIBRARIES ${GSSAPI_LIBRARIES} ${GSSAPI_LIBRARY})$/;"	v
GSSAPI_LIBRARIES	my_project/libgit2/cmake/FindGSSAPI.cmake	/^		set(GSSAPI_LIBRARIES ${GSSAPI_LIBRARIES} ${HCRYPTO_LIBRARY})$/;"	v
GSSAPI_LIBRARIES	my_project/libgit2/cmake/FindGSSAPI.cmake	/^		set(GSSAPI_LIBRARIES ${GSSAPI_LIBRARIES} ${HEIMNTLM_LIBRARY})$/;"	v
GSSAPI_LIBRARIES	my_project/libgit2/cmake/FindGSSAPI.cmake	/^		set(GSSAPI_LIBRARIES ${GSSAPI_LIBRARIES} ${HX509_LIBRARY})$/;"	v
GSSAPI_LIBRARIES	my_project/libgit2/cmake/FindGSSAPI.cmake	/^		set(GSSAPI_LIBRARIES ${GSSAPI_LIBRARIES} ${K5CRYPTO_LIBRARY})$/;"	v
GSSAPI_LIBRARIES	my_project/libgit2/cmake/FindGSSAPI.cmake	/^		set(GSSAPI_LIBRARIES ${GSSAPI_LIBRARIES} ${KRB5_LIBRARY})$/;"	v
GSSAPI_LIBRARIES	my_project/libgit2/cmake/FindGSSAPI.cmake	/^		set(GSSAPI_LIBRARIES ${GSSAPI_LIBRARIES} ${WIND_LIBRARY})$/;"	v
GSSFRAMEWORK_FOUND	my_project/libgit2/cmake/FindGSSFramework.cmake	/^	set(GSSFRAMEWORK_FOUND TRUE)$/;"	v
GSSFRAMEWORK_LDFLAGS	my_project/libgit2/cmake/FindGSSFramework.cmake	/^	set(GSSFRAMEWORK_LDFLAGS "-framework GSS")$/;"	v
GT_OFF	my_project/libgit2/deps/zlib/gzguts.h	/^#  define GT_OFF(/;"	d
GUNZIP	my_project/libgit2/deps/zlib/inflate.h	/^#  define GUNZIP$/;"	d
GZBUFSIZE	my_project/libgit2/deps/zlib/gzguts.h	/^#define GZBUFSIZE /;"	d
GZIP	my_project/libgit2/deps/zlib/deflate.h	/^#  define GZIP$/;"	d
GZIP	my_project/libgit2/deps/zlib/gzguts.h	/^#define GZIP /;"	d
GZIP_STATE	my_project/libgit2/deps/zlib/deflate.h	/^#  define GZIP_STATE /;"	d
GZ_APPEND	my_project/libgit2/deps/zlib/gzguts.h	/^#define GZ_APPEND /;"	d
GZ_NONE	my_project/libgit2/deps/zlib/gzguts.h	/^#define GZ_NONE /;"	d
GZ_READ	my_project/libgit2/deps/zlib/gzguts.h	/^#define GZ_READ /;"	d
GZ_WRITE	my_project/libgit2/deps/zlib/gzguts.h	/^#define GZ_WRITE /;"	d
General Case	my_project/libgit2/docs/threading.md	/^General Case$/;"	s	chapter:Threading and cryptographic libraries
General guidelines for error reporting	my_project/libgit2/docs/error-handling.md	/^General guidelines for error reporting$/;"	s	chapter:Error reporting in libgit2
Generic	my_project/libgit2/src/util/win32/reparse.h	/^		} Generic;$/;"	m	union:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a	typeref:struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0408
Get coverage	my_project/libgit2/docs/fuzzing.md	/^## Get coverage$/;"	s	chapter:Fuzzing
GetSecurityId	my_project/libgit2/deps/winhttp/urlmon.h	/^	LPVOID GetSecurityId;$/;"	m	struct:IInternetSecurityManagerVtbl	typeref:typename:LPVOID
GetSecuritySite	my_project/libgit2/deps/winhttp/urlmon.h	/^	LPVOID GetSecuritySite;$/;"	m	struct:IInternetSecurityManagerVtbl	typeref:typename:LPVOID
GetZoneMappings	my_project/libgit2/deps/winhttp/urlmon.h	/^	LPVOID GetZoneMappings;$/;"	m	struct:IInternetSecurityManagerVtbl	typeref:typename:LPVOID
Getting Help	my_project/libgit2/README.md	/^Getting Help$/;"	c
Git compatibility fixes	my_project/libgit2/docs/changelog.md	/^### Git compatibility fixes$/;"	S	section:Other changes
H	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define H(/;"	d	file:
HANDLE_EINTR	my_project/libgit2/src/util/posix.h	/^#define HANDLE_EINTR(/;"	d
HASHCLASH_SHA1COMPRESS_ROUND1_STEP	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND1_STEP(/;"	d	file:
HASHCLASH_SHA1COMPRESS_ROUND1_STEP_BW	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND1_STEP_BW(/;"	d	file:
HASHCLASH_SHA1COMPRESS_ROUND2_STEP	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND2_STEP(/;"	d	file:
HASHCLASH_SHA1COMPRESS_ROUND2_STEP_BW	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND2_STEP_BW(/;"	d	file:
HASHCLASH_SHA1COMPRESS_ROUND3_STEP	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND3_STEP(/;"	d	file:
HASHCLASH_SHA1COMPRESS_ROUND3_STEP_BW	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND3_STEP_BW(/;"	d	file:
HASHCLASH_SHA1COMPRESS_ROUND4_STEP	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND4_STEP(/;"	d	file:
HASHCLASH_SHA1COMPRESS_ROUND4_STEP_BW	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define HASHCLASH_SHA1COMPRESS_ROUND4_STEP_BW(/;"	d	file:
HASHSIG_HASH_MIX	my_project/libgit2/src/libgit2/hashsig.c	/^#define HASHSIG_HASH_MIX(/;"	d	file:
HASHSIG_HASH_SHIFT	my_project/libgit2/src/libgit2/hashsig.c	/^#define HASHSIG_HASH_SHIFT /;"	d	file:
HASHSIG_HASH_START	my_project/libgit2/src/libgit2/hashsig.c	/^#define HASHSIG_HASH_START	/;"	d	file:
HASHSIG_HEAP_MIN_SIZE	my_project/libgit2/src/libgit2/hashsig.c	/^#define HASHSIG_HEAP_MIN_SIZE /;"	d	file:
HASHSIG_HEAP_SIZE	my_project/libgit2/src/libgit2/hashsig.c	/^#define HASHSIG_HEAP_SIZE /;"	d	file:
HASHSIG_MAX_RUN	my_project/libgit2/src/libgit2/hashsig.c	/^#define HASHSIG_MAX_RUN /;"	d	file:
HASHSIG_SCALE	my_project/libgit2/src/libgit2/hashsig.c	/^#define HASHSIG_SCALE /;"	d	file:
HASH_LIMIT	my_project/libgit2/src/libgit2/delta.c	/^#define HASH_LIMIT /;"	d	file:
HASUTF8EXTRALEN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define HASUTF8EXTRALEN(/;"	d
HAS_EARLY_RESPONSE	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	HAS_EARLY_RESPONSE,$/;"	e	enum:__anon3d590bbe0303	file:
HAS_EXTRALEN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define HAS_EXTRALEN(/;"	d
HAVE_MEMCPY	my_project/libgit2/deps/zlib/zutil.h	/^#  define HAVE_MEMCPY$/;"	d
HAVE_STRUCT_STAT_NSEC	my_project/libgit2/cmake/FindStatNsec.cmake	/^	set(HAVE_STRUCT_STAT_NSEC ON )$/;"	v
HAVE_VSNPRINTF	my_project/libgit2/deps/zlib/gzguts.h	/^#    define HAVE_VSNPRINTF$/;"	d
HCRC	my_project/libgit2/deps/zlib/inflate.h	/^    HCRC,       \/* i: waiting for header crc (gzip) *\/$/;"	e	enum:__anona0359fa00103
HCRC_STATE	my_project/libgit2/deps/zlib/deflate.h	/^#define HCRC_STATE /;"	d
HCRC_UPDATE	my_project/libgit2/deps/zlib/deflate.c	/^#define HCRC_UPDATE(/;"	d	file:
HEAD	my_project/libgit2/deps/zlib/inflate.h	/^    HEAD = 16180,   \/* i: waiting for magic header *\/$/;"	e	enum:__anona0359fa00103
HEAD_FILE	my_project/libgit2/src/libgit2/rebase.c	/^#define HEAD_FILE /;"	d	file:
HEAD_NAME_FILE	my_project/libgit2/src/libgit2/rebase.c	/^#define HEAD_NAME_FILE /;"	d	file:
HEAP_LCHILD_OF	my_project/libgit2/src/libgit2/hashsig.c	/^#define HEAP_LCHILD_OF(/;"	d	file:
HEAP_PARENT_OF	my_project/libgit2/src/libgit2/hashsig.c	/^#define HEAP_PARENT_OF(/;"	d	file:
HEAP_RCHILD_OF	my_project/libgit2/src/libgit2/hashsig.c	/^#define HEAP_RCHILD_OF(/;"	d	file:
HEAP_SIZE	my_project/libgit2/deps/zlib/deflate.h	/^#define HEAP_SIZE /;"	d
HEX_DECODE	my_project/libgit2/src/util/str.c	/^#define HEX_DECODE(/;"	d	file:
HH	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define HH(/;"	d	file:
HINTERNET	my_project/libgit2/deps/winhttp/winhttp.h	/^typedef LPVOID HINTERNET;$/;"	t	typeref:typename:LPVOID
HMAC_CTX	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^# define HMAC_CTX /;"	d
HMAC_CTX	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^} HMAC_CTX;$/;"	t	typeref:struct:hmac_ctx_st
HMAC_CTX_cleanup	my_project/libgit2/deps/ntlmclient/crypt_openssl.c	/^static inline void HMAC_CTX_cleanup(HMAC_CTX *ctx)$/;"	f	typeref:typename:void	file:
HMAC_CTX_free	my_project/libgit2/deps/ntlmclient/crypt_openssl.c	/^static inline void HMAC_CTX_free(HMAC_CTX *ctx)$/;"	f	typeref:typename:void	file:
HMAC_CTX_new	my_project/libgit2/deps/ntlmclient/crypt_openssl.c	/^static inline HMAC_CTX *HMAC_CTX_new(void)$/;"	f	typeref:typename:HMAC_CTX *	file:
HMAC_CTX_reset	my_project/libgit2/deps/ntlmclient/crypt_openssl.c	/^static inline int HMAC_CTX_reset(HMAC_CTX *ctx)$/;"	f	typeref:typename:int	file:
HMAC_MAX_MD_CBLOCK	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^#define HMAC_MAX_MD_CBLOCK /;"	d
HOST	my_project/libgit2/src/util/net.c	/^		HOSTPORT, HOST, IPV6, HOST_END, USERPASS, USER$/;"	e	enum:url_parse_authority::__anon850d8ea80203	file:
HOST	my_project/libgit2/src/util/net.c	/^		HOST_START, HOST, HOST_END,$/;"	e	enum:git_net_url_parse_scp::__anon850d8ea80503	file:
HOSTPORT	my_project/libgit2/src/util/net.c	/^		HOSTPORT, HOST, IPV6, HOST_END, USERPASS, USER$/;"	e	enum:url_parse_authority::__anon850d8ea80203	file:
HOST_END	my_project/libgit2/src/util/net.c	/^		HOSTPORT, HOST, IPV6, HOST_END, USERPASS, USER$/;"	e	enum:url_parse_authority::__anon850d8ea80203	file:
HOST_END	my_project/libgit2/src/util/net.c	/^		HOST_START, HOST, HOST_END,$/;"	e	enum:git_net_url_parse_scp::__anon850d8ea80503	file:
HOST_START	my_project/libgit2/src/util/net.c	/^		HOST_START, HOST, HOST_END,$/;"	e	enum:git_net_url_parse_scp::__anon850d8ea80503	file:
HPE_CB_CHUNK_COMPLETE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CB_CHUNK_COMPLETE = 20,$/;"	e	enum:llhttp_errno
HPE_CB_CHUNK_EXTENSION_NAME_COMPLETE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CB_CHUNK_EXTENSION_NAME_COMPLETE = 34,$/;"	e	enum:llhttp_errno
HPE_CB_CHUNK_EXTENSION_VALUE_COMPLETE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CB_CHUNK_EXTENSION_VALUE_COMPLETE = 35,$/;"	e	enum:llhttp_errno
HPE_CB_CHUNK_HEADER	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CB_CHUNK_HEADER = 19,$/;"	e	enum:llhttp_errno
HPE_CB_HEADERS_COMPLETE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CB_HEADERS_COMPLETE = 17,$/;"	e	enum:llhttp_errno
HPE_CB_HEADER_FIELD_COMPLETE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CB_HEADER_FIELD_COMPLETE = 28,$/;"	e	enum:llhttp_errno
HPE_CB_HEADER_VALUE_COMPLETE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CB_HEADER_VALUE_COMPLETE = 29,$/;"	e	enum:llhttp_errno
HPE_CB_MESSAGE_BEGIN	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CB_MESSAGE_BEGIN = 16,$/;"	e	enum:llhttp_errno
HPE_CB_MESSAGE_COMPLETE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CB_MESSAGE_COMPLETE = 18,$/;"	e	enum:llhttp_errno
HPE_CB_METHOD_COMPLETE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CB_METHOD_COMPLETE = 32,$/;"	e	enum:llhttp_errno
HPE_CB_RESET	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CB_RESET = 31$/;"	e	enum:llhttp_errno
HPE_CB_STATUS_COMPLETE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CB_STATUS_COMPLETE = 27,$/;"	e	enum:llhttp_errno
HPE_CB_URL_COMPLETE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CB_URL_COMPLETE = 26,$/;"	e	enum:llhttp_errno
HPE_CB_VERSION_COMPLETE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CB_VERSION_COMPLETE = 33,$/;"	e	enum:llhttp_errno
HPE_CLOSED_CONNECTION	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CLOSED_CONNECTION = 5,$/;"	e	enum:llhttp_errno
HPE_CR_EXPECTED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_CR_EXPECTED = 25,$/;"	e	enum:llhttp_errno
HPE_INTERNAL	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_INTERNAL = 1,$/;"	e	enum:llhttp_errno
HPE_INVALID_CHUNK_SIZE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_INVALID_CHUNK_SIZE = 12,$/;"	e	enum:llhttp_errno
HPE_INVALID_CONSTANT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_INVALID_CONSTANT = 8,$/;"	e	enum:llhttp_errno
HPE_INVALID_CONTENT_LENGTH	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_INVALID_CONTENT_LENGTH = 11,$/;"	e	enum:llhttp_errno
HPE_INVALID_EOF_STATE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_INVALID_EOF_STATE = 14,$/;"	e	enum:llhttp_errno
HPE_INVALID_HEADER_TOKEN	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_INVALID_HEADER_TOKEN = 10,$/;"	e	enum:llhttp_errno
HPE_INVALID_METHOD	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_INVALID_METHOD = 6,$/;"	e	enum:llhttp_errno
HPE_INVALID_STATUS	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_INVALID_STATUS = 13,$/;"	e	enum:llhttp_errno
HPE_INVALID_TRANSFER_ENCODING	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_INVALID_TRANSFER_ENCODING = 15,$/;"	e	enum:llhttp_errno
HPE_INVALID_URL	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_INVALID_URL = 7,$/;"	e	enum:llhttp_errno
HPE_INVALID_VERSION	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_INVALID_VERSION = 9,$/;"	e	enum:llhttp_errno
HPE_LF_EXPECTED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_LF_EXPECTED = 3,$/;"	e	enum:llhttp_errno
HPE_OK	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_OK = 0,$/;"	e	enum:llhttp_errno
HPE_PAUSED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_PAUSED = 21,$/;"	e	enum:llhttp_errno
HPE_PAUSED_H2_UPGRADE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_PAUSED_H2_UPGRADE = 23,$/;"	e	enum:llhttp_errno
HPE_PAUSED_UPGRADE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_PAUSED_UPGRADE = 22,$/;"	e	enum:llhttp_errno
HPE_STRICT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_STRICT = 2,$/;"	e	enum:llhttp_errno
HPE_UNEXPECTED_CONTENT_LENGTH	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_UNEXPECTED_CONTENT_LENGTH = 4,$/;"	e	enum:llhttp_errno
HPE_UNEXPECTED_SPACE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_UNEXPECTED_SPACE = 30,$/;"	e	enum:llhttp_errno
HPE_USER	my_project/libgit2/deps/llhttp/llhttp.h	/^  HPE_USER = 24,$/;"	e	enum:llhttp_errno
HR	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^#define HR /;"	d	file:
HSPACE_BYTE_CASES	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define HSPACE_BYTE_CASES /;"	d
HSPACE_CASES	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define HSPACE_CASES /;"	d
HSPACE_LIST	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define HSPACE_LIST /;"	d
HSPACE_MULTIBYTE_CASES	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define HSPACE_MULTIBYTE_CASES /;"	d
HTTP_ACL	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_ACL = 19,$/;"	e	enum:llhttp_method
HTTP_ALL_METHOD_MAP	my_project/libgit2/deps/llhttp/llhttp.h	/^#define HTTP_ALL_METHOD_MAP(/;"	d
HTTP_ANNOUNCE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_ANNOUNCE = 36,$/;"	e	enum:llhttp_method
HTTP_BIND	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_BIND = 16,$/;"	e	enum:llhttp_method
HTTP_BOTH	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_BOTH = 0,$/;"	e	enum:llhttp_type
HTTP_CHECKOUT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_CHECKOUT = 22,$/;"	e	enum:llhttp_method
HTTP_CONNECT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_CONNECT = 5,$/;"	e	enum:llhttp_method
HTTP_COPY	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_COPY = 8,$/;"	e	enum:llhttp_method
HTTP_DELETE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_DELETE = 0,$/;"	e	enum:llhttp_method
HTTP_DESCRIBE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_DESCRIBE = 35,$/;"	e	enum:llhttp_method
HTTP_ERRNO_GEN	my_project/libgit2/deps/llhttp/api.c	/^#define HTTP_ERRNO_GEN(/;"	d	file:
HTTP_ERRNO_MAP	my_project/libgit2/deps/llhttp/llhttp.h	/^#define HTTP_ERRNO_MAP(/;"	d
HTTP_FINISH_SAFE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_FINISH_SAFE = 0,$/;"	e	enum:llhttp_finish
HTTP_FINISH_SAFE_WITH_CB	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_FINISH_SAFE_WITH_CB = 1,$/;"	e	enum:llhttp_finish
HTTP_FINISH_UNSAFE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_FINISH_UNSAFE = 2$/;"	e	enum:llhttp_finish
HTTP_FLUSH	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_FLUSH = 45,$/;"	e	enum:llhttp_method
HTTP_GET	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_GET = 1,$/;"	e	enum:llhttp_method
HTTP_GET_PARAMETER	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_GET_PARAMETER = 41,$/;"	e	enum:llhttp_method
HTTP_HEAD	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_HEAD = 2,$/;"	e	enum:llhttp_method
HTTP_LINK	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_LINK = 31,$/;"	e	enum:llhttp_method
HTTP_LOCK	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_LOCK = 9,$/;"	e	enum:llhttp_method
HTTP_MERGE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_MERGE = 23,$/;"	e	enum:llhttp_method
HTTP_METHOD_GEN	my_project/libgit2/deps/llhttp/api.c	/^#define HTTP_METHOD_GEN(/;"	d	file:
HTTP_METHOD_MAP	my_project/libgit2/deps/llhttp/llhttp.h	/^#define HTTP_METHOD_MAP(/;"	d
HTTP_MKACTIVITY	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_MKACTIVITY = 21,$/;"	e	enum:llhttp_method
HTTP_MKCALENDAR	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_MKCALENDAR = 30,$/;"	e	enum:llhttp_method
HTTP_MKCOL	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_MKCOL = 10,$/;"	e	enum:llhttp_method
HTTP_MOVE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_MOVE = 11,$/;"	e	enum:llhttp_method
HTTP_MSEARCH	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_MSEARCH = 24,$/;"	e	enum:llhttp_method
HTTP_NOTIFY	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_NOTIFY = 25,$/;"	e	enum:llhttp_method
HTTP_OPTIONS	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_OPTIONS = 6,$/;"	e	enum:llhttp_method
HTTP_PARSER_INCLUDE_DIRS	my_project/libgit2/cmake/FindHTTPParser.cmake	/^	set(HTTP_PARSER_INCLUDE_DIRS ${HTTP_PARSER_INCLUDE_DIR})$/;"	v
HTTP_PARSER_LIBRARIES	my_project/libgit2/cmake/FindHTTPParser.cmake	/^	set(HTTP_PARSER_LIBRARIES ${HTTP_PARSER_LIBRARY})$/;"	v
HTTP_PARSER_VERSION_STRING	my_project/libgit2/cmake/FindHTTPParser.cmake	/^		set(HTTP_PARSER_VERSION_STRING "${HTTP_PARSER_VERSION_MAJOR}.${HTTP_PARSER_VERSION_MINOR}")$/;"	v
HTTP_PATCH	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_PATCH = 28,$/;"	e	enum:llhttp_method
HTTP_PAUSE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_PAUSE = 39,$/;"	e	enum:llhttp_method
HTTP_PLAY	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_PLAY = 38,$/;"	e	enum:llhttp_method
HTTP_POST	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_POST = 3,$/;"	e	enum:llhttp_method
HTTP_PRI	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_PRI = 34,$/;"	e	enum:llhttp_method
HTTP_PROPFIND	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_PROPFIND = 12,$/;"	e	enum:llhttp_method
HTTP_PROPPATCH	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_PROPPATCH = 13,$/;"	e	enum:llhttp_method
HTTP_PURGE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_PURGE = 29,$/;"	e	enum:llhttp_method
HTTP_PUT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_PUT = 4,$/;"	e	enum:llhttp_method
HTTP_QUERY	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_QUERY = 46$/;"	e	enum:llhttp_method
HTTP_REBIND	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_REBIND = 17,$/;"	e	enum:llhttp_method
HTTP_RECORD	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_RECORD = 44,$/;"	e	enum:llhttp_method
HTTP_REDIRECT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_REDIRECT = 43,$/;"	e	enum:llhttp_method
HTTP_REPORT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_REPORT = 20,$/;"	e	enum:llhttp_method
HTTP_REQUEST	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_REQUEST = 1,$/;"	e	enum:llhttp_type
HTTP_RESPONSE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_RESPONSE = 2$/;"	e	enum:llhttp_type
HTTP_SEARCH	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_SEARCH = 14,$/;"	e	enum:llhttp_method
HTTP_SETUP	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_SETUP = 37,$/;"	e	enum:llhttp_method
HTTP_SET_PARAMETER	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_SET_PARAMETER = 42,$/;"	e	enum:llhttp_method
HTTP_SOURCE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_SOURCE = 33,$/;"	e	enum:llhttp_method
HTTP_STATE_DONE	my_project/libgit2/src/libgit2/transports/http.c	/^	HTTP_STATE_DONE$/;"	e	enum:__anon515ae8bf0103	file:
HTTP_STATE_NONE	my_project/libgit2/src/libgit2/transports/http.c	/^	HTTP_STATE_NONE = 0,$/;"	e	enum:__anon515ae8bf0103	file:
HTTP_STATE_RECEIVING_RESPONSE	my_project/libgit2/src/libgit2/transports/http.c	/^	HTTP_STATE_RECEIVING_RESPONSE,$/;"	e	enum:__anon515ae8bf0103	file:
HTTP_STATE_SENDING_REQUEST	my_project/libgit2/src/libgit2/transports/http.c	/^	HTTP_STATE_SENDING_REQUEST,$/;"	e	enum:__anon515ae8bf0103	file:
HTTP_STATUS_ACCEPTED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_ACCEPTED = 202,$/;"	e	enum:llhttp_status
HTTP_STATUS_ACCEPTED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_ACCEPTED /;"	d
HTTP_STATUS_ALREADY_REPORTED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_ALREADY_REPORTED = 208,$/;"	e	enum:llhttp_status
HTTP_STATUS_AMBIGUOUS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_AMBIGUOUS /;"	d
HTTP_STATUS_BAD_GATEWAY	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_BAD_GATEWAY = 502,$/;"	e	enum:llhttp_status
HTTP_STATUS_BAD_GATEWAY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_BAD_GATEWAY /;"	d
HTTP_STATUS_BAD_METHOD	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_BAD_METHOD /;"	d
HTTP_STATUS_BAD_REQUEST	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_BAD_REQUEST = 400,$/;"	e	enum:llhttp_status
HTTP_STATUS_BAD_REQUEST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_BAD_REQUEST /;"	d
HTTP_STATUS_BANDWIDTH_LIMIT_EXCEEDED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_BANDWIDTH_LIMIT_EXCEEDED = 509,$/;"	e	enum:llhttp_status
HTTP_STATUS_BLOCKED_BY_PARENTAL_CONTROL	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_BLOCKED_BY_PARENTAL_CONTROL = 450,$/;"	e	enum:llhttp_status
HTTP_STATUS_CLIENT_CLOSED_LOAD_BALANCED_REQUEST	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_CLIENT_CLOSED_LOAD_BALANCED_REQUEST = 460,$/;"	e	enum:llhttp_status
HTTP_STATUS_CLIENT_CLOSED_REQUEST	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_CLIENT_CLOSED_REQUEST = 499,$/;"	e	enum:llhttp_status
HTTP_STATUS_CONFLICT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_CONFLICT = 409,$/;"	e	enum:llhttp_status
HTTP_STATUS_CONFLICT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_CONFLICT /;"	d
HTTP_STATUS_CONNECTION_TIMEOUT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_CONNECTION_TIMEOUT = 522,$/;"	e	enum:llhttp_status
HTTP_STATUS_CONTINUE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_CONTINUE = 100,$/;"	e	enum:llhttp_status
HTTP_STATUS_CONTINUE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_CONTINUE /;"	d
HTTP_STATUS_CREATED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_CREATED = 201,$/;"	e	enum:llhttp_status
HTTP_STATUS_CREATED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_CREATED /;"	d
HTTP_STATUS_DENIED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_DENIED /;"	d
HTTP_STATUS_DISCONNECTED_OPERATION	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_DISCONNECTED_OPERATION = 112,$/;"	e	enum:llhttp_status
HTTP_STATUS_EARLY_HINTS	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_EARLY_HINTS = 103,$/;"	e	enum:llhttp_status
HTTP_STATUS_ENHANCE_YOUR_CALM	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_ENHANCE_YOUR_CALM = 420,$/;"	e	enum:llhttp_status
HTTP_STATUS_EXPECTATION_FAILED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_EXPECTATION_FAILED = 417,$/;"	e	enum:llhttp_status
HTTP_STATUS_FAILED_DEPENDENCY	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_FAILED_DEPENDENCY = 424,$/;"	e	enum:llhttp_status
HTTP_STATUS_FIRST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_FIRST /;"	d
HTTP_STATUS_FORBIDDEN	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_FORBIDDEN = 403,$/;"	e	enum:llhttp_status
HTTP_STATUS_FORBIDDEN	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_FORBIDDEN /;"	d
HTTP_STATUS_FOUND	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_FOUND = 302,$/;"	e	enum:llhttp_status
HTTP_STATUS_GATEWAY_TIMEOUT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_GATEWAY_TIMEOUT = 504,$/;"	e	enum:llhttp_status
HTTP_STATUS_GATEWAY_TIMEOUT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_GATEWAY_TIMEOUT /;"	d
HTTP_STATUS_GEN	my_project/libgit2/deps/llhttp/api.c	/^#define HTTP_STATUS_GEN(/;"	d	file:
HTTP_STATUS_GONE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_GONE = 410,$/;"	e	enum:llhttp_status
HTTP_STATUS_GONE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_GONE /;"	d
HTTP_STATUS_HEURISTIC_EXPIRATION	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_HEURISTIC_EXPIRATION = 113,$/;"	e	enum:llhttp_status
HTTP_STATUS_HTTP_REQUEST_SENT_TO_HTTPS_PORT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_HTTP_REQUEST_SENT_TO_HTTPS_PORT = 497,$/;"	e	enum:llhttp_status
HTTP_STATUS_HTTP_VERSION_NOT_SUPPORTED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_HTTP_VERSION_NOT_SUPPORTED = 505,$/;"	e	enum:llhttp_status
HTTP_STATUS_IDENTITY_PROVIDER_AUTHENTICATION_ERROR	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_IDENTITY_PROVIDER_AUTHENTICATION_ERROR = 561,$/;"	e	enum:llhttp_status
HTTP_STATUS_IM_A_TEAPOT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_IM_A_TEAPOT = 418,$/;"	e	enum:llhttp_status
HTTP_STATUS_IM_USED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_IM_USED = 226,$/;"	e	enum:llhttp_status
HTTP_STATUS_INSUFFICIENT_STORAGE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_INSUFFICIENT_STORAGE = 507,$/;"	e	enum:llhttp_status
HTTP_STATUS_INTERNAL_SERVER_ERROR	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_INTERNAL_SERVER_ERROR = 500,$/;"	e	enum:llhttp_status
HTTP_STATUS_INVALID_SSL_CERTIFICATE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_INVALID_SSL_CERTIFICATE = 526,$/;"	e	enum:llhttp_status
HTTP_STATUS_INVALID_TOKEN	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_INVALID_TOKEN = 498,$/;"	e	enum:llhttp_status
HTTP_STATUS_INVALID_X_FORWARDED_FOR	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_INVALID_X_FORWARDED_FOR = 463,$/;"	e	enum:llhttp_status
HTTP_STATUS_LAST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_LAST /;"	d
HTTP_STATUS_LENGTH_REQUIRED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_LENGTH_REQUIRED = 411,$/;"	e	enum:llhttp_status
HTTP_STATUS_LENGTH_REQUIRED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_LENGTH_REQUIRED /;"	d
HTTP_STATUS_LOCKED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_LOCKED = 423,$/;"	e	enum:llhttp_status
HTTP_STATUS_LOGIN_TIMEOUT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_LOGIN_TIMEOUT = 440,$/;"	e	enum:llhttp_status
HTTP_STATUS_LOOP_DETECTED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_LOOP_DETECTED = 508,$/;"	e	enum:llhttp_status
HTTP_STATUS_MAP	my_project/libgit2/deps/llhttp/llhttp.h	/^#define HTTP_STATUS_MAP(/;"	d
HTTP_STATUS_METHOD_NOT_ALLOWED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_METHOD_NOT_ALLOWED = 405,$/;"	e	enum:llhttp_status
HTTP_STATUS_MISCELLANEOUS_PERSISTENT_WARNING	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_MISCELLANEOUS_PERSISTENT_WARNING = 299,$/;"	e	enum:llhttp_status
HTTP_STATUS_MISCELLANEOUS_WARNING	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_MISCELLANEOUS_WARNING = 199,$/;"	e	enum:llhttp_status
HTTP_STATUS_MISDIRECTED_REQUEST	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_MISDIRECTED_REQUEST = 421,$/;"	e	enum:llhttp_status
HTTP_STATUS_MOVED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_MOVED /;"	d
HTTP_STATUS_MOVED_PERMANENTLY	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_MOVED_PERMANENTLY = 301,$/;"	e	enum:llhttp_status
HTTP_STATUS_MULTIPLE_CHOICES	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_MULTIPLE_CHOICES = 300,$/;"	e	enum:llhttp_status
HTTP_STATUS_MULTI_STATUS	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_MULTI_STATUS = 207,$/;"	e	enum:llhttp_status
HTTP_STATUS_NETWORK_AUTHENTICATION_REQUIRED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_NETWORK_AUTHENTICATION_REQUIRED = 511,$/;"	e	enum:llhttp_status
HTTP_STATUS_NETWORK_CONNECT_TIMEOUT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_NETWORK_CONNECT_TIMEOUT = 599$/;"	e	enum:llhttp_status
HTTP_STATUS_NETWORK_READ_TIMEOUT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_NETWORK_READ_TIMEOUT = 598,$/;"	e	enum:llhttp_status
HTTP_STATUS_NONE_ACCEPTABLE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_NONE_ACCEPTABLE /;"	d
HTTP_STATUS_NON_AUTHORITATIVE_INFORMATION	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_NON_AUTHORITATIVE_INFORMATION = 203,$/;"	e	enum:llhttp_status
HTTP_STATUS_NOT_ACCEPTABLE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_NOT_ACCEPTABLE = 406,$/;"	e	enum:llhttp_status
HTTP_STATUS_NOT_EXTENDED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_NOT_EXTENDED = 510,$/;"	e	enum:llhttp_status
HTTP_STATUS_NOT_FOUND	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_NOT_FOUND = 404,$/;"	e	enum:llhttp_status
HTTP_STATUS_NOT_FOUND	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_NOT_FOUND /;"	d
HTTP_STATUS_NOT_IMPLEMENTED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_NOT_IMPLEMENTED = 501,$/;"	e	enum:llhttp_status
HTTP_STATUS_NOT_MODIFIED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_NOT_MODIFIED = 304,$/;"	e	enum:llhttp_status
HTTP_STATUS_NOT_MODIFIED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_NOT_MODIFIED /;"	d
HTTP_STATUS_NOT_SUPPORTED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_NOT_SUPPORTED /;"	d
HTTP_STATUS_NO_CONTENT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_NO_CONTENT = 204,$/;"	e	enum:llhttp_status
HTTP_STATUS_NO_CONTENT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_NO_CONTENT /;"	d
HTTP_STATUS_NO_RESPONSE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_NO_RESPONSE = 444,$/;"	e	enum:llhttp_status
HTTP_STATUS_OK	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_OK = 200,$/;"	e	enum:llhttp_status
HTTP_STATUS_OK	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_OK /;"	d
HTTP_STATUS_ORIGIN_IS_UNREACHABLE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_ORIGIN_IS_UNREACHABLE = 523,$/;"	e	enum:llhttp_status
HTTP_STATUS_PAGE_EXPIRED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_PAGE_EXPIRED = 419,$/;"	e	enum:llhttp_status
HTTP_STATUS_PARTIAL	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_PARTIAL /;"	d
HTTP_STATUS_PARTIAL_CONTENT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_PARTIAL_CONTENT = 206,$/;"	e	enum:llhttp_status
HTTP_STATUS_PARTIAL_CONTENT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_PARTIAL_CONTENT /;"	d
HTTP_STATUS_PAYLOAD_TOO_LARGE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_PAYLOAD_TOO_LARGE = 413,$/;"	e	enum:llhttp_status
HTTP_STATUS_PAYMENT_REQ	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_PAYMENT_REQ /;"	d
HTTP_STATUS_PAYMENT_REQUIRED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_PAYMENT_REQUIRED = 402,$/;"	e	enum:llhttp_status
HTTP_STATUS_PERMANENT_REDIRECT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_PERMANENT_REDIRECT = 308,$/;"	e	enum:llhttp_status
HTTP_STATUS_PERMANENT_REDIRECT	my_project/libgit2/src/libgit2/transports/winhttp.c	/^# define HTTP_STATUS_PERMANENT_REDIRECT /;"	d	file:
HTTP_STATUS_PRECONDITION_FAILED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_PRECONDITION_FAILED = 412,$/;"	e	enum:llhttp_status
HTTP_STATUS_PRECONDITION_REQUIRED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_PRECONDITION_REQUIRED = 428,$/;"	e	enum:llhttp_status
HTTP_STATUS_PRECOND_FAILED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_PRECOND_FAILED /;"	d
HTTP_STATUS_PROCESSING	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_PROCESSING = 102,$/;"	e	enum:llhttp_status
HTTP_STATUS_PROXY_AUTHENTICATION_REQUIRED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_PROXY_AUTHENTICATION_REQUIRED = 407,$/;"	e	enum:llhttp_status
HTTP_STATUS_PROXY_AUTH_REQ	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_PROXY_AUTH_REQ /;"	d
HTTP_STATUS_RAILGUN_ERROR	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_RAILGUN_ERROR = 527,$/;"	e	enum:llhttp_status
HTTP_STATUS_RANGE_NOT_SATISFIABLE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_RANGE_NOT_SATISFIABLE = 416,$/;"	e	enum:llhttp_status
HTTP_STATUS_REDIRECT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_REDIRECT /;"	d
HTTP_STATUS_REDIRECT_KEEP_VERB	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_REDIRECT_KEEP_VERB /;"	d
HTTP_STATUS_REDIRECT_METHOD	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_REDIRECT_METHOD /;"	d
HTTP_STATUS_REQUEST_HEADER_FIELDS_TOO_LARGE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_REQUEST_HEADER_FIELDS_TOO_LARGE = 431,$/;"	e	enum:llhttp_status
HTTP_STATUS_REQUEST_HEADER_FIELDS_TOO_LARGE_UNOFFICIAL	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_REQUEST_HEADER_FIELDS_TOO_LARGE_UNOFFICIAL = 430,$/;"	e	enum:llhttp_status
HTTP_STATUS_REQUEST_HEADER_TOO_LARGE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_REQUEST_HEADER_TOO_LARGE = 494,$/;"	e	enum:llhttp_status
HTTP_STATUS_REQUEST_TIMEOUT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_REQUEST_TIMEOUT = 408,$/;"	e	enum:llhttp_status
HTTP_STATUS_REQUEST_TIMEOUT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_REQUEST_TIMEOUT /;"	d
HTTP_STATUS_REQUEST_TOO_LARGE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_REQUEST_TOO_LARGE /;"	d
HTTP_STATUS_RESET_CONTENT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_RESET_CONTENT = 205,$/;"	e	enum:llhttp_status
HTTP_STATUS_RESET_CONTENT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_RESET_CONTENT /;"	d
HTTP_STATUS_RESPONSE_IS_STALE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_RESPONSE_IS_STALE = 110,$/;"	e	enum:llhttp_status
HTTP_STATUS_RETRY_WITH	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_RETRY_WITH = 449,$/;"	e	enum:llhttp_status
HTTP_STATUS_RETRY_WITH	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_RETRY_WITH /;"	d
HTTP_STATUS_REVALIDATION_FAILED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_REVALIDATION_FAILED = 111,$/;"	e	enum:llhttp_status
HTTP_STATUS_SEE_OTHER	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_SEE_OTHER = 303,$/;"	e	enum:llhttp_status
HTTP_STATUS_SERVER_ERROR	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_SERVER_ERROR /;"	d
HTTP_STATUS_SERVICE_UNAVAIL	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_SERVICE_UNAVAIL /;"	d
HTTP_STATUS_SERVICE_UNAVAILABLE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_SERVICE_UNAVAILABLE = 503,$/;"	e	enum:llhttp_status
HTTP_STATUS_SITE_IS_FROZEN	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_SITE_IS_FROZEN = 530,$/;"	e	enum:llhttp_status
HTTP_STATUS_SITE_IS_OVERLOADED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_SITE_IS_OVERLOADED = 529,$/;"	e	enum:llhttp_status
HTTP_STATUS_SSL_CERTIFICATE_ERROR	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_SSL_CERTIFICATE_ERROR = 495,$/;"	e	enum:llhttp_status
HTTP_STATUS_SSL_CERTIFICATE_REQUIRED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_SSL_CERTIFICATE_REQUIRED = 496,$/;"	e	enum:llhttp_status
HTTP_STATUS_SSL_HANDSHAKE_FAILED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_SSL_HANDSHAKE_FAILED = 525,$/;"	e	enum:llhttp_status
HTTP_STATUS_SWITCHING_PROTOCOLS	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_SWITCHING_PROTOCOLS = 101,$/;"	e	enum:llhttp_status
HTTP_STATUS_SWITCH_PROTOCOLS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_SWITCH_PROTOCOLS /;"	d
HTTP_STATUS_SWITCH_PROXY	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_SWITCH_PROXY = 306,$/;"	e	enum:llhttp_status
HTTP_STATUS_TEMPORARY_REDIRECT	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_TEMPORARY_REDIRECT = 307,$/;"	e	enum:llhttp_status
HTTP_STATUS_TIMEOUT_OCCURED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_TIMEOUT_OCCURED = 524,$/;"	e	enum:llhttp_status
HTTP_STATUS_TOO_EARLY	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_TOO_EARLY = 425,$/;"	e	enum:llhttp_status
HTTP_STATUS_TOO_MANY_REQUESTS	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_TOO_MANY_REQUESTS = 429,$/;"	e	enum:llhttp_status
HTTP_STATUS_TRANSFORMATION_APPLIED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_TRANSFORMATION_APPLIED = 214,$/;"	e	enum:llhttp_status
HTTP_STATUS_UNAUTHORIZED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_UNAUTHORIZED = 401,$/;"	e	enum:llhttp_status
HTTP_STATUS_UNAVAILABLE_FOR_LEGAL_REASONS	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_UNAVAILABLE_FOR_LEGAL_REASONS = 451,$/;"	e	enum:llhttp_status
HTTP_STATUS_UNPROCESSABLE_ENTITY	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_UNPROCESSABLE_ENTITY = 422,$/;"	e	enum:llhttp_status
HTTP_STATUS_UNSUPPORTED_MEDIA	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_UNSUPPORTED_MEDIA /;"	d
HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_UNSUPPORTED_MEDIA_TYPE = 415,$/;"	e	enum:llhttp_status
HTTP_STATUS_UPGRADE_REQUIRED	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_UPGRADE_REQUIRED = 426,$/;"	e	enum:llhttp_status
HTTP_STATUS_URI_TOO_LONG	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_URI_TOO_LONG = 414,$/;"	e	enum:llhttp_status
HTTP_STATUS_URI_TOO_LONG	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_URI_TOO_LONG /;"	d
HTTP_STATUS_USE_PROXY	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_USE_PROXY = 305,$/;"	e	enum:llhttp_status
HTTP_STATUS_USE_PROXY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_USE_PROXY /;"	d
HTTP_STATUS_VARIANT_ALSO_NEGOTIATES	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_VARIANT_ALSO_NEGOTIATES = 506,$/;"	e	enum:llhttp_status
HTTP_STATUS_VERSION_NOT_SUP	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_VERSION_NOT_SUP /;"	d
HTTP_STATUS_WEBDAV_MULTI_STATUS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define HTTP_STATUS_WEBDAV_MULTI_STATUS /;"	d
HTTP_STATUS_WEB_SERVER_IS_DOWN	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_WEB_SERVER_IS_DOWN = 521,$/;"	e	enum:llhttp_status
HTTP_STATUS_WEB_SERVER_UNKNOWN_ERROR	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_STATUS_WEB_SERVER_UNKNOWN_ERROR = 520,$/;"	e	enum:llhttp_status
HTTP_SUBSCRIBE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_SUBSCRIBE = 26,$/;"	e	enum:llhttp_method
HTTP_TEARDOWN	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_TEARDOWN = 40,$/;"	e	enum:llhttp_method
HTTP_TRACE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_TRACE = 7,$/;"	e	enum:llhttp_method
HTTP_UNBIND	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_UNBIND = 18,$/;"	e	enum:llhttp_method
HTTP_UNLINK	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_UNLINK = 32,$/;"	e	enum:llhttp_method
HTTP_UNLOCK	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_UNLOCK = 15,$/;"	e	enum:llhttp_method
HTTP_UNSUBSCRIBE	my_project/libgit2/deps/llhttp/llhttp.h	/^  HTTP_UNSUBSCRIBE = 27,$/;"	e	enum:llhttp_method
HTTP_VERSION_INFO	my_project/libgit2/deps/winhttp/winhttp.h	/^} HTTP_VERSION_INFO, *LPHTTP_VERSION_INFO;$/;"	t	typeref:struct:__anon0b61ebe80708
How Can I Contribute?	my_project/libgit2/README.md	/^How Can I Contribute?$/;"	c
ICONV_FIND_QUIETLY	my_project/libgit2/cmake/FindIntlIconv.cmake	/^	set(ICONV_FIND_QUIETLY TRUE)$/;"	v
ICONV_FOUND	my_project/libgit2/cmake/FindIntlIconv.cmake	/^	set(ICONV_FOUND TRUE)$/;"	v
ICONV_LIBRARIES	my_project/libgit2/cmake/FindIntlIconv.cmake	/^	set(ICONV_LIBRARIES "")$/;"	v
ICONV_LIBRARIES	my_project/libgit2/cmake/FindIntlIconv.cmake	/^	set(ICONV_LIBRARIES "-L${iconv_path} -l${iconv_name}")$/;"	v
ICU_BROWSER_MODE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ICU_BROWSER_MODE /;"	d
ICU_DECODE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ICU_DECODE /;"	d
ICU_ENCODE_PERCENT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ICU_ENCODE_PERCENT /;"	d
ICU_ENCODE_SPACES_ONLY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ICU_ENCODE_SPACES_ONLY /;"	d
ICU_ESCAPE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ICU_ESCAPE /;"	d
ICU_NO_ENCODE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ICU_NO_ENCODE /;"	d
ICU_NO_META	my_project/libgit2/deps/winhttp/winhttp.h	/^#define ICU_NO_META /;"	d
IDE_SPLIT_SOURCES	my_project/libgit2/cmake/IdeSplitSources.cmake	/^function(IDE_SPLIT_SOURCES target)$/;"	f
ID_BRANCH_A	my_project/libgit2/tests/libgit2/perf/merge.c	/^#define ID_BRANCH_A /;"	d	file:
ID_BRANCH_B	my_project/libgit2/tests/libgit2/perf/merge.c	/^#define ID_BRANCH_B /;"	d	file:
IID_IInternetSecurityManager	my_project/libgit2/src/libgit2/transports/winhttp.c	/^# define IID_IInternetSecurityManager /;"	d	file:
IID_IInternetSecurityManager_mingw	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static const IID IID_IInternetSecurityManager_mingw =$/;"	v	typeref:typename:const IID	file:
IInternetSecurityManager	my_project/libgit2/deps/winhttp/urlmon.h	/^struct IInternetSecurityManager$/;"	s
IInternetSecurityManager	my_project/libgit2/deps/winhttp/urlmon.h	/^typedef struct IInternetSecurityManager IInternetSecurityManager;$/;"	t	typeref:struct:IInternetSecurityManager
IInternetSecurityManagerVtbl	my_project/libgit2/deps/winhttp/urlmon.h	/^typedef struct IInternetSecurityManagerVtbl$/;"	s
IInternetSecurityManagerVtbl	my_project/libgit2/deps/winhttp/urlmon.h	/^} IInternetSecurityManagerVtbl;$/;"	t	typeref:struct:IInternetSecurityManagerVtbl
IMM2_SIZE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define IMM2_SIZE /;"	d
INCLUDE_LLHTTP_API_H_	my_project/libgit2/deps/llhttp/llhttp.h	/^#define INCLUDE_LLHTTP_API_H_$/;"	d
INCLUDE_LLHTTP_H_	my_project/libgit2/deps/llhttp/llhttp.h	/^#define INCLUDE_LLHTTP_H_$/;"	d
INCLUDE_LLHTTP_ITSELF_H_	my_project/libgit2/deps/llhttp/llhttp.h	/^#define INCLUDE_LLHTTP_ITSELF_H_$/;"	d
INCLUDE_NTLMCLIENT_H__	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^#define INCLUDE_NTLMCLIENT_H__$/;"	d
INCLUDE_alloc_h__	my_project/libgit2/src/util/alloc.h	/^#define INCLUDE_alloc_h__$/;"	d
INCLUDE_allocators_debugalloc_h__	my_project/libgit2/src/util/allocators/debugalloc.h	/^#define INCLUDE_allocators_debugalloc_h__$/;"	d
INCLUDE_allocators_failalloc_h__	my_project/libgit2/src/util/allocators/failalloc.h	/^#define INCLUDE_allocators_failalloc_h__$/;"	d
INCLUDE_allocators_stdalloc_h__	my_project/libgit2/src/util/allocators/stdalloc.h	/^#define INCLUDE_allocators_stdalloc_h__$/;"	d
INCLUDE_allocators_win32_leakcheck_h	my_project/libgit2/src/util/allocators/win32_leakcheck.h	/^#define INCLUDE_allocators_win32_leakcheck_h$/;"	d
INCLUDE_annotated_commit_h__	my_project/libgit2/src/libgit2/annotated_commit.h	/^#define INCLUDE_annotated_commit_h__$/;"	d
INCLUDE_apply_h__	my_project/libgit2/src/libgit2/apply.h	/^#define INCLUDE_apply_h__$/;"	d
INCLUDE_array_h__	my_project/libgit2/src/util/array.h	/^#define INCLUDE_array_h__$/;"	d
INCLUDE_assert_safe_h__	my_project/libgit2/src/util/assert_safe.h	/^#define INCLUDE_assert_safe_h__$/;"	d
INCLUDE_attr_file_h__	my_project/libgit2/src/libgit2/attr_file.h	/^#define INCLUDE_attr_file_h__$/;"	d
INCLUDE_attr_h__	my_project/libgit2/src/libgit2/attr.h	/^#define INCLUDE_attr_h__$/;"	d
INCLUDE_attrcache_h__	my_project/libgit2/src/libgit2/attrcache.h	/^#define INCLUDE_attrcache_h__$/;"	d
INCLUDE_bitvec_h__	my_project/libgit2/src/util/bitvec.h	/^#define INCLUDE_bitvec_h__$/;"	d
INCLUDE_blame_git__	my_project/libgit2/src/libgit2/blame_git.h	/^#define INCLUDE_blame_git__$/;"	d
INCLUDE_blame_h__	my_project/libgit2/src/libgit2/blame.h	/^#define INCLUDE_blame_h__$/;"	d
INCLUDE_blob_h__	my_project/libgit2/src/libgit2/blob.h	/^#define INCLUDE_blob_h__$/;"	d
INCLUDE_branch_h__	my_project/libgit2/src/libgit2/branch.h	/^#define INCLUDE_branch_h__$/;"	d
INCLUDE_buf_h__	my_project/libgit2/src/libgit2/buf.h	/^#define INCLUDE_buf_h__$/;"	d
INCLUDE_cache_h__	my_project/libgit2/src/libgit2/cache.h	/^#define INCLUDE_cache_h__$/;"	d
INCLUDE_cc_compat_h__	my_project/libgit2/src/util/cc-compat.h	/^#define INCLUDE_cc_compat_h__$/;"	d
INCLUDE_checkout_h__	my_project/libgit2/src/libgit2/checkout.h	/^#define INCLUDE_checkout_h__$/;"	d
INCLUDE_cl_merge_helpers_h__	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^#define INCLUDE_cl_merge_helpers_h__$/;"	d
INCLUDE_cl_push_util_h__	my_project/libgit2/tests/libgit2/online/push_util.h	/^#define INCLUDE_cl_push_util_h__$/;"	d
INCLUDE_cl_status_helpers_h__	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^#define INCLUDE_cl_status_helpers_h__$/;"	d
INCLUDE_clone_h__	my_project/libgit2/src/libgit2/clone.h	/^#define INCLUDE_clone_h__$/;"	d
INCLUDE_commit_graph_h__	my_project/libgit2/src/libgit2/commit_graph.h	/^#define INCLUDE_commit_graph_h__$/;"	d
INCLUDE_commit_h__	my_project/libgit2/src/libgit2/commit.h	/^#define INCLUDE_commit_h__$/;"	d
INCLUDE_commit_list_h__	my_project/libgit2/src/libgit2/commit_list.h	/^#define INCLUDE_commit_list_h__$/;"	d
INCLUDE_common_h__	my_project/libgit2/src/libgit2/common.h	/^#define INCLUDE_common_h__$/;"	d
INCLUDE_config_file_h__	my_project/libgit2/src/libgit2/config_backend.h	/^#define INCLUDE_config_file_h__$/;"	d
INCLUDE_config_h__	my_project/libgit2/src/libgit2/config.h	/^#define INCLUDE_config_h__$/;"	d
INCLUDE_config_parse_h__	my_project/libgit2/src/libgit2/config_parse.h	/^#define INCLUDE_config_parse_h__$/;"	d
INCLUDE_ctype_compat_h__	my_project/libgit2/src/util/ctype_compat.h	/^#define INCLUDE_ctype_compat_h__$/;"	d
INCLUDE_date_h__	my_project/libgit2/src/util/date.h	/^#define INCLUDE_date_h__$/;"	d
INCLUDE_diff_driver_h__	my_project/libgit2/src/libgit2/diff_driver.h	/^#define INCLUDE_diff_driver_h__$/;"	d
INCLUDE_diff_file_h__	my_project/libgit2/src/libgit2/diff_file.h	/^#define INCLUDE_diff_file_h__$/;"	d
INCLUDE_diff_generate_h__	my_project/libgit2/src/libgit2/diff_generate.h	/^#define INCLUDE_diff_generate_h__$/;"	d
INCLUDE_diff_h__	my_project/libgit2/src/libgit2/diff.h	/^#define INCLUDE_diff_h__$/;"	d
INCLUDE_diff_parse_h__	my_project/libgit2/src/libgit2/diff_parse.h	/^#define INCLUDE_diff_parse_h__$/;"	d
INCLUDE_diff_stats_h__	my_project/libgit2/src/libgit2/diff_stats.h	/^#define INCLUDE_diff_stats_h__$/;"	d
INCLUDE_diff_tform_h__	my_project/libgit2/src/libgit2/diff_tform.h	/^#define INCLUDE_diff_tform_h__$/;"	d
INCLUDE_diff_xdiff_h__	my_project/libgit2/src/libgit2/diff_xdiff.h	/^#define INCLUDE_diff_xdiff_h__$/;"	d
INCLUDE_email_h__	my_project/libgit2/src/libgit2/email.h	/^#define INCLUDE_email_h__$/;"	d
INCLUDE_errors_h__	my_project/libgit2/src/util/errors.h	/^#define INCLUDE_errors_h__$/;"	d
INCLUDE_examples_args_h__	my_project/libgit2/examples/args.h	/^#define INCLUDE_examples_args_h__$/;"	d
INCLUDE_examples_common_h__	my_project/libgit2/examples/common.h	/^#define INCLUDE_examples_common_h__$/;"	d
INCLUDE_experimental_h__	my_project/libgit2/include/git2/experimental.h	/^#define INCLUDE_experimental_h__$/;"	d
INCLUDE_experimental_h__	my_project/libgit2/src/libgit2/experimental.h.in	/^#define INCLUDE_experimental_h__$/;"	d	file:
INCLUDE_features_h__	my_project/libgit2/src/util/git2_features.h.in	/^#define INCLUDE_features_h__$/;"	d	file:
INCLUDE_fetch_h__	my_project/libgit2/src/libgit2/fetch.h	/^#define INCLUDE_fetch_h__$/;"	d
INCLUDE_fetchhead_h__	my_project/libgit2/src/libgit2/fetchhead.h	/^#define INCLUDE_fetchhead_h__$/;"	d
INCLUDE_filebuf_h__	my_project/libgit2/src/util/filebuf.h	/^#define INCLUDE_filebuf_h__$/;"	d
INCLUDE_filter_crlf_h__	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define INCLUDE_filter_crlf_h__$/;"	d
INCLUDE_filter_crlf_h__	my_project/libgit2/tests/util/crlf.h	/^#define INCLUDE_filter_crlf_h__$/;"	d
INCLUDE_filter_h__	my_project/libgit2/src/libgit2/filter.h	/^#define INCLUDE_filter_h__$/;"	d
INCLUDE_fs_path_h__	my_project/libgit2/src/util/fs_path.h	/^#define INCLUDE_fs_path_h__$/;"	d
INCLUDE_futils_h__	my_project/libgit2/src/util/futils.h	/^#define INCLUDE_futils_h__$/;"	d
INCLUDE_fuzzer_utils_h__	my_project/libgit2/fuzzers/fuzzer_utils.h	/^#define INCLUDE_fuzzer_utils_h__$/;"	d
INCLUDE_git2_util_h__	my_project/libgit2/src/util/git2_util.h	/^#define INCLUDE_git2_util_h__$/;"	d
INCLUDE_git_annotated_commit_h__	my_project/libgit2/include/git2/annotated_commit.h	/^#define INCLUDE_git_annotated_commit_h__$/;"	d
INCLUDE_git_apply_h__	my_project/libgit2/include/git2/apply.h	/^#define INCLUDE_git_apply_h__$/;"	d
INCLUDE_git_attr_h__	my_project/libgit2/include/git2/attr.h	/^#define INCLUDE_git_attr_h__$/;"	d
INCLUDE_git_blame_h__	my_project/libgit2/include/git2/blame.h	/^#define INCLUDE_git_blame_h__$/;"	d
INCLUDE_git_blob_h__	my_project/libgit2/include/git2/blob.h	/^#define INCLUDE_git_blob_h__$/;"	d
INCLUDE_git_branch_h__	my_project/libgit2/include/git2/branch.h	/^#define INCLUDE_git_branch_h__$/;"	d
INCLUDE_git_buf_h__	my_project/libgit2/include/git2/buffer.h	/^#define INCLUDE_git_buf_h__$/;"	d
INCLUDE_git_cert_h__	my_project/libgit2/include/git2/cert.h	/^#define INCLUDE_git_cert_h__$/;"	d
INCLUDE_git_checkout_h__	my_project/libgit2/include/git2/checkout.h	/^#define INCLUDE_git_checkout_h__$/;"	d
INCLUDE_git_cherrypick_h__	my_project/libgit2/include/git2/cherrypick.h	/^#define INCLUDE_git_cherrypick_h__$/;"	d
INCLUDE_git_clone_h__	my_project/libgit2/include/git2/clone.h	/^#define INCLUDE_git_clone_h__$/;"	d
INCLUDE_git_commit_h__	my_project/libgit2/include/git2/commit.h	/^#define INCLUDE_git_commit_h__$/;"	d
INCLUDE_git_common_h__	my_project/libgit2/include/git2/common.h	/^#define INCLUDE_git_common_h__$/;"	d
INCLUDE_git_config_h__	my_project/libgit2/include/git2/config.h	/^#define INCLUDE_git_config_h__$/;"	d
INCLUDE_git_cred_helpers_h__	my_project/libgit2/include/git2/cred_helpers.h	/^#define INCLUDE_git_cred_helpers_h__$/;"	d
INCLUDE_git_credential_h__	my_project/libgit2/include/git2/credential.h	/^#define INCLUDE_git_credential_h__$/;"	d
INCLUDE_git_credential_helpers_h__	my_project/libgit2/include/git2/credential_helpers.h	/^#define INCLUDE_git_credential_helpers_h__$/;"	d
INCLUDE_git_delta_h__	my_project/libgit2/src/libgit2/delta.h	/^#define INCLUDE_git_delta_h__$/;"	d
INCLUDE_git_deprecated_h__	my_project/libgit2/include/git2/deprecated.h	/^#define INCLUDE_git_deprecated_h__$/;"	d
INCLUDE_git_describe_h__	my_project/libgit2/include/git2/describe.h	/^#define INCLUDE_git_describe_h__$/;"	d
INCLUDE_git_diff_h__	my_project/libgit2/include/git2/diff.h	/^#define INCLUDE_git_diff_h__$/;"	d
INCLUDE_git_email_h__	my_project/libgit2/include/git2/email.h	/^#define INCLUDE_git_email_h__$/;"	d
INCLUDE_git_errors_h__	my_project/libgit2/include/git2/errors.h	/^#define INCLUDE_git_errors_h__$/;"	d
INCLUDE_git_filter_h__	my_project/libgit2/include/git2/filter.h	/^#define INCLUDE_git_filter_h__$/;"	d
INCLUDE_git_git_h__	my_project/libgit2/include/git2.h	/^#define INCLUDE_git_git_h__$/;"	d
INCLUDE_git_global_h__	my_project/libgit2/include/git2/global.h	/^#define INCLUDE_git_global_h__$/;"	d
INCLUDE_git_graph_h__	my_project/libgit2/include/git2/graph.h	/^#define INCLUDE_git_graph_h__$/;"	d
INCLUDE_git_ignore_h__	my_project/libgit2/include/git2/ignore.h	/^#define INCLUDE_git_ignore_h__$/;"	d
INCLUDE_git_index_h__	my_project/libgit2/include/git2/index.h	/^#define INCLUDE_git_index_h__$/;"	d
INCLUDE_git_mailmap_h__	my_project/libgit2/include/git2/mailmap.h	/^#define INCLUDE_git_mailmap_h__$/;"	d
INCLUDE_git_merge_h__	my_project/libgit2/include/git2/merge.h	/^#define INCLUDE_git_merge_h__$/;"	d
INCLUDE_git_message_h__	my_project/libgit2/include/git2/message.h	/^#define INCLUDE_git_message_h__$/;"	d
INCLUDE_git_net_h__	my_project/libgit2/include/git2/net.h	/^#define INCLUDE_git_net_h__$/;"	d
INCLUDE_git_note_h__	my_project/libgit2/include/git2/notes.h	/^#define INCLUDE_git_note_h__$/;"	d
INCLUDE_git_object_h__	my_project/libgit2/include/git2/object.h	/^#define INCLUDE_git_object_h__$/;"	d
INCLUDE_git_odb_backend_h__	my_project/libgit2/include/git2/odb_backend.h	/^#define INCLUDE_git_odb_backend_h__$/;"	d
INCLUDE_git_odb_h__	my_project/libgit2/include/git2/odb.h	/^#define INCLUDE_git_odb_h__$/;"	d
INCLUDE_git_oid_h__	my_project/libgit2/include/git2/oid.h	/^#define INCLUDE_git_oid_h__$/;"	d
INCLUDE_git_oidarray_h__	my_project/libgit2/include/git2/oidarray.h	/^#define INCLUDE_git_oidarray_h__$/;"	d
INCLUDE_git_openssl_h__	my_project/libgit2/include/git2/sys/openssl.h	/^#define INCLUDE_git_openssl_h__$/;"	d
INCLUDE_git_pack_h__	my_project/libgit2/include/git2/pack.h	/^#define INCLUDE_git_pack_h__$/;"	d
INCLUDE_git_patch_h__	my_project/libgit2/include/git2/patch.h	/^#define INCLUDE_git_patch_h__$/;"	d
INCLUDE_git_pathspec_h__	my_project/libgit2/include/git2/pathspec.h	/^#define INCLUDE_git_pathspec_h__$/;"	d
INCLUDE_git_proxy_h__	my_project/libgit2/include/git2/proxy.h	/^#define INCLUDE_git_proxy_h__$/;"	d
INCLUDE_git_rebase_h__	my_project/libgit2/include/git2/rebase.h	/^#define INCLUDE_git_rebase_h__$/;"	d
INCLUDE_git_refdb_h__	my_project/libgit2/include/git2/refdb.h	/^#define INCLUDE_git_refdb_h__$/;"	d
INCLUDE_git_reflog_h__	my_project/libgit2/include/git2/reflog.h	/^#define INCLUDE_git_reflog_h__$/;"	d
INCLUDE_git_refs_h__	my_project/libgit2/include/git2/refs.h	/^#define INCLUDE_git_refs_h__$/;"	d
INCLUDE_git_refspec_h__	my_project/libgit2/include/git2/refspec.h	/^#define INCLUDE_git_refspec_h__$/;"	d
INCLUDE_git_remote_h__	my_project/libgit2/include/git2/remote.h	/^#define INCLUDE_git_remote_h__$/;"	d
INCLUDE_git_repository_h__	my_project/libgit2/include/git2/repository.h	/^#define INCLUDE_git_repository_h__$/;"	d
INCLUDE_git_reset_h__	my_project/libgit2/include/git2/reset.h	/^#define INCLUDE_git_reset_h__$/;"	d
INCLUDE_git_revert_h__	my_project/libgit2/include/git2/revert.h	/^#define INCLUDE_git_revert_h__$/;"	d
INCLUDE_git_revparse_h__	my_project/libgit2/include/git2/revparse.h	/^#define INCLUDE_git_revparse_h__$/;"	d
INCLUDE_git_revwalk_h__	my_project/libgit2/include/git2/revwalk.h	/^#define INCLUDE_git_revwalk_h__$/;"	d
INCLUDE_git_signature_h__	my_project/libgit2/include/git2/signature.h	/^#define INCLUDE_git_signature_h__$/;"	d
INCLUDE_git_stash_h__	my_project/libgit2/include/git2/stash.h	/^#define INCLUDE_git_stash_h__$/;"	d
INCLUDE_git_status_h__	my_project/libgit2/include/git2/status.h	/^#define INCLUDE_git_status_h__$/;"	d
INCLUDE_git_strarray_h__	my_project/libgit2/include/git2/strarray.h	/^#define INCLUDE_git_strarray_h__$/;"	d
INCLUDE_git_submodule_h__	my_project/libgit2/include/git2/submodule.h	/^#define INCLUDE_git_submodule_h__$/;"	d
INCLUDE_git_tag_h__	my_project/libgit2/include/git2/tag.h	/^#define INCLUDE_git_tag_h__$/;"	d
INCLUDE_git_trace_h__	my_project/libgit2/include/git2/trace.h	/^#define INCLUDE_git_trace_h__$/;"	d
INCLUDE_git_transaction_h__	my_project/libgit2/include/git2/transaction.h	/^#define INCLUDE_git_transaction_h__$/;"	d
INCLUDE_git_transport_h__	my_project/libgit2/include/git2/transport.h	/^#define INCLUDE_git_transport_h__$/;"	d
INCLUDE_git_tree_h__	my_project/libgit2/include/git2/tree.h	/^#define INCLUDE_git_tree_h__$/;"	d
INCLUDE_git_types_h__	my_project/libgit2/include/git2/types.h	/^#define INCLUDE_git_types_h__$/;"	d
INCLUDE_git_version_h__	my_project/libgit2/include/git2/version.h	/^#define INCLUDE_git_version_h__$/;"	d
INCLUDE_git_worktree_h__	my_project/libgit2/include/git2/worktree.h	/^#define INCLUDE_git_worktree_h__$/;"	d
INCLUDE_git_xdiff_h__	my_project/libgit2/deps/xdiff/git-xdiff.h	/^#define INCLUDE_git_xdiff_h__$/;"	d
INCLUDE_graft_h__	my_project/libgit2/src/libgit2/grafts.h	/^#define INCLUDE_graft_h__$/;"	d
INCLUDE_hash_builtin_h__	my_project/libgit2/src/util/hash/builtin.h	/^#define INCLUDE_hash_builtin_h__$/;"	d
INCLUDE_hash_collisiondetect_h__	my_project/libgit2/src/util/hash/collisiondetect.h	/^#define INCLUDE_hash_collisiondetect_h__$/;"	d
INCLUDE_hash_common_crypto_h__	my_project/libgit2/src/util/hash/common_crypto.h	/^#define INCLUDE_hash_common_crypto_h__$/;"	d
INCLUDE_hash_h__	my_project/libgit2/src/util/hash.h	/^#define INCLUDE_hash_h__$/;"	d
INCLUDE_hash_mbedtls_h__	my_project/libgit2/src/util/hash/mbedtls.h	/^#define INCLUDE_hash_mbedtls_h__$/;"	d
INCLUDE_hash_openssl_h__	my_project/libgit2/src/util/hash/openssl.h	/^#define INCLUDE_hash_openssl_h__$/;"	d
INCLUDE_hash_sha_h__	my_project/libgit2/src/util/hash/sha.h	/^#define INCLUDE_hash_sha_h__$/;"	d
INCLUDE_hash_win32_h__	my_project/libgit2/src/util/hash/win32.h	/^#define INCLUDE_hash_win32_h__$/;"	d
INCLUDE_idxmap_h__	my_project/libgit2/src/libgit2/idxmap.h	/^#define INCLUDE_idxmap_h__$/;"	d
INCLUDE_ignore_h__	my_project/libgit2/src/libgit2/ignore.h	/^#define INCLUDE_ignore_h__$/;"	d
INCLUDE_index_h__	my_project/libgit2/src/libgit2/index.h	/^#define INCLUDE_index_h__$/;"	d
INCLUDE_indexer_h__	my_project/libgit2/src/libgit2/indexer.h	/^#define INCLUDE_indexer_h__$/;"	d
INCLUDE_integer_h__	my_project/libgit2/src/util/integer.h	/^#define INCLUDE_integer_h__$/;"	d
INCLUDE_iterator_h__	my_project/libgit2/src/libgit2/iterator.h	/^#define INCLUDE_iterator_h__$/;"	d
INCLUDE_mailmap_h__	my_project/libgit2/src/libgit2/mailmap.h	/^#define INCLUDE_mailmap_h__$/;"	d
INCLUDE_map_h__	my_project/libgit2/src/util/map.h	/^#define INCLUDE_map_h__$/;"	d
INCLUDE_merge_driver_h__	my_project/libgit2/src/libgit2/merge_driver.h	/^#define INCLUDE_merge_driver_h__$/;"	d
INCLUDE_merge_h__	my_project/libgit2/src/libgit2/merge.h	/^#define INCLUDE_merge_h__$/;"	d
INCLUDE_midx_h__	my_project/libgit2/src/libgit2/midx.h	/^#define INCLUDE_midx_h__$/;"	d
INCLUDE_mwindow__	my_project/libgit2/src/libgit2/mwindow.h	/^#define INCLUDE_mwindow__$/;"	d
INCLUDE_net_h__	my_project/libgit2/src/util/net.h	/^#define INCLUDE_net_h__$/;"	d
INCLUDE_note_h__	my_project/libgit2/src/libgit2/notes.h	/^#define INCLUDE_note_h__$/;"	d
INCLUDE_object_h__	my_project/libgit2/src/libgit2/object.h	/^#define INCLUDE_object_h__$/;"	d
INCLUDE_odb_h__	my_project/libgit2/src/libgit2/odb.h	/^#define INCLUDE_odb_h__$/;"	d
INCLUDE_offmap_h__	my_project/libgit2/src/libgit2/offmap.h	/^#define INCLUDE_offmap_h__$/;"	d
INCLUDE_oid_h__	my_project/libgit2/src/libgit2/oid.h	/^#define INCLUDE_oid_h__$/;"	d
INCLUDE_oidarray_h__	my_project/libgit2/src/libgit2/oidarray.h	/^#define INCLUDE_oidarray_h__$/;"	d
INCLUDE_oidmap_h__	my_project/libgit2/src/libgit2/oidmap.h	/^#define INCLUDE_oidmap_h__$/;"	d
INCLUDE_pack_h__	my_project/libgit2/src/libgit2/pack.h	/^#define INCLUDE_pack_h__$/;"	d
INCLUDE_pack_objects_h__	my_project/libgit2/src/libgit2/pack-objects.h	/^#define INCLUDE_pack_objects_h__$/;"	d
INCLUDE_parse_h__	my_project/libgit2/src/libgit2/parse.h	/^#define INCLUDE_parse_h__$/;"	d
INCLUDE_patch_generate_h__	my_project/libgit2/src/libgit2/patch_generate.h	/^#define INCLUDE_patch_generate_h__$/;"	d
INCLUDE_patch_h__	my_project/libgit2/src/libgit2/patch.h	/^#define INCLUDE_patch_h__$/;"	d
INCLUDE_patch_parse_h__	my_project/libgit2/src/libgit2/patch_parse.h	/^#define INCLUDE_patch_parse_h__$/;"	d
INCLUDE_path_h__	my_project/libgit2/src/libgit2/path.h	/^#define INCLUDE_path_h__$/;"	d
INCLUDE_pathspec_h__	my_project/libgit2/src/libgit2/pathspec.h	/^#define INCLUDE_pathspec_h__$/;"	d
INCLUDE_pool_h__	my_project/libgit2/src/util/pool.h	/^#define INCLUDE_pool_h__$/;"	d
INCLUDE_posix_h__	my_project/libgit2/src/util/posix.h	/^#define INCLUDE_posix_h__$/;"	d
INCLUDE_pqueue_h__	my_project/libgit2/src/util/pqueue.h	/^#define INCLUDE_pqueue_h__$/;"	d
INCLUDE_process_h__	my_project/libgit2/src/util/process.h	/^#define INCLUDE_process_h__$/;"	d
INCLUDE_proxy_h__	my_project/libgit2/src/libgit2/proxy.h	/^#define INCLUDE_proxy_h__$/;"	d
INCLUDE_push_h__	my_project/libgit2/src/libgit2/push.h	/^#define INCLUDE_push_h__$/;"	d
INCLUDE_rand_h__	my_project/libgit2/src/util/rand.h	/^#define INCLUDE_rand_h__$/;"	d
INCLUDE_reader_h__	my_project/libgit2/src/libgit2/reader.h	/^#define INCLUDE_reader_h__$/;"	d
INCLUDE_refdb_h__	my_project/libgit2/src/libgit2/refdb.h	/^#define INCLUDE_refdb_h__$/;"	d
INCLUDE_reflog_h__	my_project/libgit2/src/libgit2/reflog.h	/^#define INCLUDE_reflog_h__$/;"	d
INCLUDE_refs_h__	my_project/libgit2/src/libgit2/refs.h	/^#define INCLUDE_refs_h__$/;"	d
INCLUDE_refspec_h__	my_project/libgit2/src/libgit2/refspec.h	/^#define INCLUDE_refspec_h__$/;"	d
INCLUDE_regexp_h__	my_project/libgit2/src/util/regexp.h	/^#define INCLUDE_regexp_h__$/;"	d
INCLUDE_remote_h__	my_project/libgit2/src/libgit2/remote.h	/^#define INCLUDE_remote_h__$/;"	d
INCLUDE_repo_template_h__	my_project/libgit2/src/libgit2/repo_template.h	/^#define INCLUDE_repo_template_h__$/;"	d
INCLUDE_repository_h__	my_project/libgit2/src/libgit2/repository.h	/^#define INCLUDE_repository_h__$/;"	d
INCLUDE_revwalk_h__	my_project/libgit2/src/libgit2/revwalk.h	/^#define INCLUDE_revwalk_h__$/;"	d
INCLUDE_runtime_h__	my_project/libgit2/src/util/runtime.h	/^#define INCLUDE_runtime_h__$/;"	d
INCLUDE_runtime_h__	my_project/libgit2/src/util/strlist.h	/^#define INCLUDE_runtime_h__$/;"	d
INCLUDE_settings_h__	my_project/libgit2/src/libgit2/settings.h	/^#define INCLUDE_settings_h__$/;"	d
INCLUDE_signature_h__	my_project/libgit2/src/libgit2/signature.h	/^#define INCLUDE_signature_h__$/;"	d
INCLUDE_sorted_cache_h__	my_project/libgit2/src/util/sortedcache.h	/^#define INCLUDE_sorted_cache_h__$/;"	d
INCLUDE_stackstr_h__	my_project/libgit2/src/util/staticstr.h	/^#define INCLUDE_stackstr_h__$/;"	d
INCLUDE_standalone_driver_h__	my_project/libgit2/fuzzers/standalone_driver.h	/^#define INCLUDE_standalone_driver_h__$/;"	d
INCLUDE_status_h__	my_project/libgit2/src/libgit2/status.h	/^#define INCLUDE_status_h__$/;"	d
INCLUDE_steams_mbedtls_h__	my_project/libgit2/src/libgit2/streams/mbedtls.h	/^#define INCLUDE_steams_mbedtls_h__$/;"	d
INCLUDE_steams_schannel_h__	my_project/libgit2/src/libgit2/streams/schannel.h	/^#define INCLUDE_steams_schannel_h__$/;"	d
INCLUDE_str_h__	my_project/libgit2/src/util/str.h	/^#define INCLUDE_str_h__$/;"	d
INCLUDE_strarray_h__	my_project/libgit2/src/libgit2/strarray.h	/^#define INCLUDE_strarray_h__$/;"	d
INCLUDE_stream_h__	my_project/libgit2/src/libgit2/stream.h	/^#define INCLUDE_stream_h__$/;"	d
INCLUDE_streams_openssl_dynamic_h__	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^#define INCLUDE_streams_openssl_dynamic_h__$/;"	d
INCLUDE_streams_openssl_h__	my_project/libgit2/src/libgit2/streams/openssl.h	/^#define INCLUDE_streams_openssl_h__$/;"	d
INCLUDE_streams_openssl_legacy_h__	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^#define INCLUDE_streams_openssl_legacy_h__$/;"	d
INCLUDE_streams_registry_h__	my_project/libgit2/src/libgit2/streams/registry.h	/^#define INCLUDE_streams_registry_h__$/;"	d
INCLUDE_streams_socket_h__	my_project/libgit2/src/libgit2/streams/socket.h	/^#define INCLUDE_streams_socket_h__$/;"	d
INCLUDE_streams_stransport_h__	my_project/libgit2/src/libgit2/streams/stransport.h	/^#define INCLUDE_streams_stransport_h__$/;"	d
INCLUDE_streams_tls_h__	my_project/libgit2/src/libgit2/streams/tls.h	/^#define INCLUDE_streams_tls_h__$/;"	d
INCLUDE_strlen_h__	my_project/libgit2/src/util/strnlen.h	/^#define INCLUDE_strlen_h__$/;"	d
INCLUDE_strmap_h__	my_project/libgit2/src/util/strmap.h	/^#define INCLUDE_strmap_h__$/;"	d
INCLUDE_submodule_h__	my_project/libgit2/src/libgit2/submodule.h	/^#define INCLUDE_submodule_h__$/;"	d
INCLUDE_sys_git_alloc_h__	my_project/libgit2/include/git2/sys/alloc.h	/^#define INCLUDE_sys_git_alloc_h__$/;"	d
INCLUDE_sys_git_commit_graph_h__	my_project/libgit2/include/git2/sys/commit_graph.h	/^#define INCLUDE_sys_git_commit_graph_h__$/;"	d
INCLUDE_sys_git_commit_h__	my_project/libgit2/include/git2/sys/commit.h	/^#define INCLUDE_sys_git_commit_h__$/;"	d
INCLUDE_sys_git_config_backend_h__	my_project/libgit2/include/git2/sys/config.h	/^#define INCLUDE_sys_git_config_backend_h__$/;"	d
INCLUDE_sys_git_cred_h__	my_project/libgit2/include/git2/sys/cred.h	/^#define INCLUDE_sys_git_cred_h__$/;"	d
INCLUDE_sys_git_credential_h__	my_project/libgit2/include/git2/sys/credential.h	/^#define INCLUDE_sys_git_credential_h__$/;"	d
INCLUDE_sys_git_diff_h__	my_project/libgit2/include/git2/sys/diff.h	/^#define INCLUDE_sys_git_diff_h__$/;"	d
INCLUDE_sys_git_email_h__	my_project/libgit2/include/git2/sys/email.h	/^#define INCLUDE_sys_git_email_h__$/;"	d
INCLUDE_sys_git_errors_h__	my_project/libgit2/include/git2/sys/errors.h	/^#define INCLUDE_sys_git_errors_h__$/;"	d
INCLUDE_sys_git_filter_h__	my_project/libgit2/include/git2/sys/filter.h	/^#define INCLUDE_sys_git_filter_h__$/;"	d
INCLUDE_sys_git_index_h__	my_project/libgit2/include/git2/sys/index.h	/^#define INCLUDE_sys_git_index_h__$/;"	d
INCLUDE_sys_git_merge_h__	my_project/libgit2/include/git2/sys/merge.h	/^#define INCLUDE_sys_git_merge_h__$/;"	d
INCLUDE_sys_git_midx_h__	my_project/libgit2/include/git2/sys/midx.h	/^#define INCLUDE_sys_git_midx_h__$/;"	d
INCLUDE_sys_git_odb_backend_h__	my_project/libgit2/include/git2/sys/odb_backend.h	/^#define INCLUDE_sys_git_odb_backend_h__$/;"	d
INCLUDE_sys_git_odb_mempack_h__	my_project/libgit2/include/git2/sys/mempack.h	/^#define INCLUDE_sys_git_odb_mempack_h__$/;"	d
INCLUDE_sys_git_path_h__	my_project/libgit2/include/git2/sys/path.h	/^#define INCLUDE_sys_git_path_h__$/;"	d
INCLUDE_sys_git_refdb_backend_h__	my_project/libgit2/include/git2/sys/refdb_backend.h	/^#define INCLUDE_sys_git_refdb_backend_h__$/;"	d
INCLUDE_sys_git_refdb_h__	my_project/libgit2/include/git2/sys/refs.h	/^#define INCLUDE_sys_git_refdb_h__$/;"	d
INCLUDE_sys_git_reflog_h__	my_project/libgit2/include/git2/sys/reflog.h	/^#define INCLUDE_sys_git_reflog_h__$/;"	d
INCLUDE_sys_git_remote_h	my_project/libgit2/include/git2/sys/remote.h	/^#define INCLUDE_sys_git_remote_h$/;"	d
INCLUDE_sys_git_repository_h__	my_project/libgit2/include/git2/sys/repository.h	/^#define INCLUDE_sys_git_repository_h__$/;"	d
INCLUDE_sys_git_stream_h__	my_project/libgit2/include/git2/sys/stream.h	/^#define INCLUDE_sys_git_stream_h__$/;"	d
INCLUDE_sys_git_transport_h	my_project/libgit2/include/git2/sys/transport.h	/^#define INCLUDE_sys_git_transport_h$/;"	d
INCLUDE_sys_hashsig_h__	my_project/libgit2/include/git2/sys/hashsig.h	/^#define INCLUDE_sys_hashsig_h__$/;"	d
INCLUDE_sysdir_h__	my_project/libgit2/src/libgit2/sysdir.h	/^#define INCLUDE_sysdir_h__$/;"	d
INCLUDE_tag_h__	my_project/libgit2/src/libgit2/tag.h	/^#define INCLUDE_tag_h__$/;"	d
INCLUDE_thread_h__	my_project/libgit2/src/util/thread.h	/^#define INCLUDE_thread_h__$/;"	d
INCLUDE_trace_h__	my_project/libgit2/src/libgit2/trace.h	/^#define INCLUDE_trace_h__$/;"	d
INCLUDE_transaction_h__	my_project/libgit2/src/libgit2/transaction.h	/^#define INCLUDE_transaction_h__$/;"	d
INCLUDE_transports_auth_h__	my_project/libgit2/src/libgit2/transports/auth.h	/^#define INCLUDE_transports_auth_h__$/;"	d
INCLUDE_transports_auth_negotiate_h__	my_project/libgit2/src/libgit2/transports/auth_negotiate.h	/^#define INCLUDE_transports_auth_negotiate_h__$/;"	d
INCLUDE_transports_auth_ntlm_h__	my_project/libgit2/src/libgit2/transports/auth_ntlm.h	/^#define INCLUDE_transports_auth_ntlm_h__$/;"	d
INCLUDE_transports_http_h__	my_project/libgit2/src/libgit2/transports/http.h	/^#define INCLUDE_transports_http_h__$/;"	d
INCLUDE_transports_httpclient_h__	my_project/libgit2/src/libgit2/transports/httpclient.h	/^#define INCLUDE_transports_httpclient_h__$/;"	d
INCLUDE_transports_httpparser_h__	my_project/libgit2/src/libgit2/transports/httpparser.h	/^#define INCLUDE_transports_httpparser_h__$/;"	d
INCLUDE_transports_libssh2_h__	my_project/libgit2/src/libgit2/transports/ssh_libssh2.h	/^#define INCLUDE_transports_libssh2_h__$/;"	d
INCLUDE_transports_smart_h__	my_project/libgit2/src/libgit2/transports/smart.h	/^#define INCLUDE_transports_smart_h__$/;"	d
INCLUDE_transports_ssh_exec_h__	my_project/libgit2/src/libgit2/transports/ssh_exec.h	/^#define INCLUDE_transports_ssh_exec_h__$/;"	d
INCLUDE_tree_cache_h__	my_project/libgit2/src/libgit2/tree-cache.h	/^#define INCLUDE_tree_cache_h__$/;"	d
INCLUDE_tree_h__	my_project/libgit2/src/libgit2/tree.h	/^#define INCLUDE_tree_h__$/;"	d
INCLUDE_unix_posix_h__	my_project/libgit2/src/util/unix/posix.h	/^#define INCLUDE_unix_posix_h__$/;"	d
INCLUDE_unix_pthread_h__	my_project/libgit2/src/util/unix/pthread.h	/^#define INCLUDE_unix_pthread_h__$/;"	d
INCLUDE_userdiff_h__	my_project/libgit2/src/libgit2/userdiff.h	/^#define INCLUDE_userdiff_h__$/;"	d
INCLUDE_utf8_h__	my_project/libgit2/src/util/utf8.h	/^#define INCLUDE_utf8_h__$/;"	d
INCLUDE_util_h__	my_project/libgit2/src/util/util.h	/^#define INCLUDE_util_h__$/;"	d
INCLUDE_varint_h__	my_project/libgit2/src/util/varint.h	/^#define INCLUDE_varint_h__$/;"	d
INCLUDE_vector_h__	my_project/libgit2/src/util/vector.h	/^#define INCLUDE_vector_h__$/;"	d
INCLUDE_wildmatch_h__	my_project/libgit2/src/util/wildmatch.h	/^#define INCLUDE_wildmatch_h__$/;"	d
INCLUDE_win32_dir_h__	my_project/libgit2/src/util/win32/dir.h	/^#define INCLUDE_win32_dir_h__$/;"	d
INCLUDE_win32_error_h__	my_project/libgit2/src/util/win32/error.h	/^#define INCLUDE_win32_error_h__$/;"	d
INCLUDE_win32_leakcheck_h__	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^#define INCLUDE_win32_leakcheck_h__$/;"	d
INCLUDE_win32_mingw_compat_h__	my_project/libgit2/src/util/win32/mingw-compat.h	/^#define INCLUDE_win32_mingw_compat_h__$/;"	d
INCLUDE_win32_msvc_compat_h__	my_project/libgit2/src/util/win32/msvc-compat.h	/^#define INCLUDE_win32_msvc_compat_h__$/;"	d
INCLUDE_win32_path_w32_h__	my_project/libgit2/src/util/win32/path_w32.h	/^#define INCLUDE_win32_path_w32_h__$/;"	d
INCLUDE_win32_posix_h__	my_project/libgit2/src/util/win32/posix.h	/^#define INCLUDE_win32_posix_h__$/;"	d
INCLUDE_win32_reparse_h__	my_project/libgit2/src/util/win32/reparse.h	/^#define INCLUDE_win32_reparse_h__$/;"	d
INCLUDE_win32_thread_h__	my_project/libgit2/src/util/win32/thread.h	/^#define INCLUDE_win32_thread_h__$/;"	d
INCLUDE_win32_utf_conv_h__	my_project/libgit2/src/util/win32/utf-conv.h	/^#define INCLUDE_win32_utf_conv_h__$/;"	d
INCLUDE_win32_version_h__	my_project/libgit2/src/util/win32/version.h	/^#define INCLUDE_win32_version_h__$/;"	d
INCLUDE_win32_w32_buffer_h__	my_project/libgit2/src/util/win32/w32_buffer.h	/^#define INCLUDE_win32_w32_buffer_h__$/;"	d
INCLUDE_win32_w32_common_h__	my_project/libgit2/src/util/win32/w32_common.h	/^#define INCLUDE_win32_w32_common_h__$/;"	d
INCLUDE_win32_w32_util_h__	my_project/libgit2/src/util/win32/w32_util.h	/^#define INCLUDE_win32_w32_util_h__$/;"	d
INCLUDE_win32_win32_compat_h__	my_project/libgit2/src/util/win32/win32-compat.h	/^#define INCLUDE_win32_win32_compat_h__$/;"	d
INCLUDE_worktree_h__	my_project/libgit2/src/libgit2/worktree.h	/^#define INCLUDE_worktree_h__$/;"	d
INCLUDE_zstream_h__	my_project/libgit2/src/util/zstream.h	/^#define INCLUDE_zstream_h__$/;"	d
INDENT_HEURISTIC_MAX_SLIDING	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define INDENT_HEURISTIC_MAX_SLIDING /;"	d	file:
INDENT_WEIGHT	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define INDENT_WEIGHT /;"	d	file:
INDEX_ACTION_ADDALL	my_project/libgit2/src/libgit2/index.c	/^	INDEX_ACTION_ADDALL = 3$/;"	e	enum:__anon5b50d9080103	file:
INDEX_ACTION_NONE	my_project/libgit2/src/libgit2/index.c	/^	INDEX_ACTION_NONE = 0,$/;"	e	enum:__anon5b50d9080103	file:
INDEX_ACTION_REMOVE	my_project/libgit2/src/libgit2/index.c	/^	INDEX_ACTION_REMOVE = 2,$/;"	e	enum:__anon5b50d9080103	file:
INDEX_ACTION_UPDATE	my_project/libgit2/src/libgit2/index.c	/^	INDEX_ACTION_UPDATE = 1,$/;"	e	enum:__anon5b50d9080103	file:
INDEX_ADD	my_project/libgit2/examples/add.c	/^	INDEX_ADD$/;"	e	enum:index_mode	file:
INDEX_EXT_CONFLICT_NAME_SIG	my_project/libgit2/src/libgit2/index.c	/^static const char INDEX_EXT_CONFLICT_NAME_SIG[] = {'N', 'A', 'M', 'E'};$/;"	v	typeref:typename:const char[]	file:
INDEX_EXT_TREECACHE_SIG	my_project/libgit2/src/libgit2/index.c	/^static const char INDEX_EXT_TREECACHE_SIG[] = {'T', 'R', 'E', 'E'};$/;"	v	typeref:typename:const char[]	file:
INDEX_EXT_UNMERGED_SIG	my_project/libgit2/src/libgit2/index.c	/^static const char INDEX_EXT_UNMERGED_SIG[] = {'R', 'E', 'U', 'C'};$/;"	v	typeref:typename:const char[]	file:
INDEX_HEADER_SIG	my_project/libgit2/src/libgit2/index.c	/^static const unsigned int INDEX_HEADER_SIG = 0x44495243;$/;"	v	typeref:typename:const unsigned int	file:
INDEX_HEADER_SIZE	my_project/libgit2/src/libgit2/index.c	/^static const size_t INDEX_HEADER_SIZE = 12;$/;"	v	typeref:typename:const size_t	file:
INDEX_NONE	my_project/libgit2/examples/add.c	/^	INDEX_NONE,$/;"	e	enum:index_mode	file:
INDEX_OWNER	my_project/libgit2/src/libgit2/index.c	/^#define INDEX_OWNER(/;"	d	file:
INDEX_VERSION_NUMBER_COMP	my_project/libgit2/src/libgit2/index.c	/^static const unsigned int INDEX_VERSION_NUMBER_COMP = 4;$/;"	v	typeref:typename:const unsigned int	file:
INDEX_VERSION_NUMBER_DEFAULT	my_project/libgit2/src/libgit2/index.c	/^static const unsigned int INDEX_VERSION_NUMBER_DEFAULT = 2;$/;"	v	typeref:typename:const unsigned int	file:
INDEX_VERSION_NUMBER_EXT	my_project/libgit2/src/libgit2/index.c	/^static const unsigned int INDEX_VERSION_NUMBER_EXT = 3;$/;"	v	typeref:typename:const unsigned int	file:
INDEX_VERSION_NUMBER_LB	my_project/libgit2/src/libgit2/index.c	/^static const unsigned int INDEX_VERSION_NUMBER_LB = 2;$/;"	v	typeref:typename:const unsigned int	file:
INDEX_VERSION_NUMBER_UB	my_project/libgit2/src/libgit2/index.c	/^static const unsigned int INDEX_VERSION_NUMBER_UB = 4;$/;"	v	typeref:typename:const unsigned int	file:
INFLATE_EXTRA	my_project/libgit2/tests/util/zstream.c	/^#define INFLATE_EXTRA /;"	d	file:
INITBITS	my_project/libgit2/deps/zlib/infback.c	/^#define INITBITS(/;"	d	file:
INITBITS	my_project/libgit2/deps/zlib/inflate.c	/^#define INITBITS(/;"	d	file:
INITIAL_COMMIT	my_project/libgit2/tests/libgit2/diff/rename.c	/^#define INITIAL_COMMIT /;"	d	file:
INIT_STATE	my_project/libgit2/deps/zlib/deflate.h	/^#define INIT_STATE /;"	d
INSERT_STRING	my_project/libgit2/deps/zlib/deflate.c	/^#define INSERT_STRING(/;"	d	file:
INT16_C	my_project/libgit2/include/git2/stdint.h	/^#define INT16_C(/;"	d
INT16_MAX	my_project/libgit2/include/git2/stdint.h	/^#define INT16_MAX /;"	d
INT16_MIN	my_project/libgit2/include/git2/stdint.h	/^#define INT16_MIN /;"	d
INT32_C	my_project/libgit2/include/git2/stdint.h	/^#define INT32_C(/;"	d
INT32_MAX	my_project/libgit2/include/git2/stdint.h	/^#define INT32_MAX /;"	d
INT32_MIN	my_project/libgit2/include/git2/stdint.h	/^#define INT32_MIN /;"	d
INT64_C	my_project/libgit2/include/git2/stdint.h	/^#define INT64_C(/;"	d
INT64_MAX	my_project/libgit2/include/git2/stdint.h	/^#define INT64_MAX /;"	d
INT64_MIN	my_project/libgit2/include/git2/stdint.h	/^#define INT64_MIN /;"	d
INT64_OR_DOUBLE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define INT64_OR_DOUBLE /;"	d
INT8_C	my_project/libgit2/include/git2/stdint.h	/^#define INT8_C(/;"	d
INT8_MAX	my_project/libgit2/include/git2/stdint.h	/^#define INT8_MAX /;"	d
INT8_MIN	my_project/libgit2/include/git2/stdint.h	/^#define INT8_MIN /;"	d
INTERACTIVE_FILE	my_project/libgit2/src/libgit2/rebase.c	/^#define INTERACTIVE_FILE /;"	d	file:
INTERNET_DEFAULT_HTTPS_PORT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define INTERNET_DEFAULT_HTTPS_PORT /;"	d
INTERNET_DEFAULT_HTTP_PORT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define INTERNET_DEFAULT_HTTP_PORT /;"	d
INTERNET_DEFAULT_PORT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define INTERNET_DEFAULT_PORT /;"	d
INTERNET_PORT	my_project/libgit2/deps/winhttp/winhttp.h	/^typedef WORD INTERNET_PORT;$/;"	t	typeref:typename:WORD
INTERNET_SCHEME	my_project/libgit2/deps/winhttp/winhttp.h	/^typedef int INTERNET_SCHEME, *LPINTERNET_SCHEME;$/;"	t	typeref:typename:int
INTERNET_SCHEME_HTTP	my_project/libgit2/deps/winhttp/winhttp.h	/^#define INTERNET_SCHEME_HTTP /;"	d
INTERNET_SCHEME_HTTPS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define INTERNET_SCHEME_HTTPS /;"	d
INTMAX_C	my_project/libgit2/include/git2/stdint.h	/^#define INTMAX_C /;"	d
INTMAX_MAX	my_project/libgit2/include/git2/stdint.h	/^#define INTMAX_MAX /;"	d
INTMAX_MIN	my_project/libgit2/include/git2/stdint.h	/^#define INTMAX_MIN /;"	d
INTPTR_MAX	my_project/libgit2/include/git2/stdint.h	/^#  define INTPTR_MAX /;"	d
INTPTR_MIN	my_project/libgit2/include/git2/stdint.h	/^#  define INTPTR_MIN /;"	d
INTS_PER_STATEBLOCK	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define INTS_PER_STATEBLOCK /;"	d	file:
INT_FAST16_MAX	my_project/libgit2/include/git2/stdint.h	/^#define INT_FAST16_MAX /;"	d
INT_FAST16_MIN	my_project/libgit2/include/git2/stdint.h	/^#define INT_FAST16_MIN /;"	d
INT_FAST32_MAX	my_project/libgit2/include/git2/stdint.h	/^#define INT_FAST32_MAX /;"	d
INT_FAST32_MIN	my_project/libgit2/include/git2/stdint.h	/^#define INT_FAST32_MIN /;"	d
INT_FAST64_MAX	my_project/libgit2/include/git2/stdint.h	/^#define INT_FAST64_MAX /;"	d
INT_FAST64_MIN	my_project/libgit2/include/git2/stdint.h	/^#define INT_FAST64_MIN /;"	d
INT_FAST8_MAX	my_project/libgit2/include/git2/stdint.h	/^#define INT_FAST8_MAX /;"	d
INT_FAST8_MIN	my_project/libgit2/include/git2/stdint.h	/^#define INT_FAST8_MIN /;"	d
INT_LEAST16_MAX	my_project/libgit2/include/git2/stdint.h	/^#define INT_LEAST16_MAX /;"	d
INT_LEAST16_MIN	my_project/libgit2/include/git2/stdint.h	/^#define INT_LEAST16_MIN /;"	d
INT_LEAST32_MAX	my_project/libgit2/include/git2/stdint.h	/^#define INT_LEAST32_MAX /;"	d
INT_LEAST32_MIN	my_project/libgit2/include/git2/stdint.h	/^#define INT_LEAST32_MIN /;"	d
INT_LEAST64_MAX	my_project/libgit2/include/git2/stdint.h	/^#define INT_LEAST64_MAX /;"	d
INT_LEAST64_MIN	my_project/libgit2/include/git2/stdint.h	/^#define INT_LEAST64_MIN /;"	d
INT_LEAST8_MAX	my_project/libgit2/include/git2/stdint.h	/^#define INT_LEAST8_MAX /;"	d
INT_LEAST8_MIN	my_project/libgit2/include/git2/stdint.h	/^#define INT_LEAST8_MIN /;"	d
INVALID_COMMIT_SHA1	my_project/libgit2/tests/libgit2/object/validate.c	/^#define INVALID_COMMIT_SHA1 /;"	d	file:
INVALID_COMMIT_SHA256	my_project/libgit2/tests/libgit2/object/validate.c	/^#define INVALID_COMMIT_SHA256 /;"	d	file:
INVALID_SOCKET	my_project/libgit2/src/util/unix/posix.h	/^#define INVALID_SOCKET /;"	d
INVALID_TREE_SHA1	my_project/libgit2/tests/libgit2/object/validate.c	/^#define INVALID_TREE_SHA1 /;"	d	file:
INVALID_TREE_SHA256	my_project/libgit2/tests/libgit2/object/validate.c	/^#define INVALID_TREE_SHA256 /;"	d	file:
INVALID_UTF_CHAR	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define INVALID_UTF_CHAR /;"	d	file:
IN_UCHARS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define IN_UCHARS(/;"	d
IO_REPARSE_TAG_SYMLINK	my_project/libgit2/src/util/win32/posix_w32.c	/^#define IO_REPARSE_TAG_SYMLINK /;"	d	file:
IPATTERN	my_project/libgit2/src/libgit2/userdiff.h	/^#define IPATTERN(/;"	d
IPV6	my_project/libgit2/src/util/net.c	/^		HOSTPORT, HOST, IPV6, HOST_END, USERPASS, USER$/;"	e	enum:url_parse_authority::__anon850d8ea80203	file:
IPV6	my_project/libgit2/src/util/net.c	/^		IPV6, IPV6_END,$/;"	e	enum:git_net_url_parse_scp::__anon850d8ea80503	file:
IPV6_END	my_project/libgit2/src/util/net.c	/^		IPV6, IPV6_END,$/;"	e	enum:git_net_url_parse_scp::__anon850d8ea80503	file:
IPos	my_project/libgit2/deps/zlib/deflate.h	/^typedef unsigned IPos;$/;"	t	typeref:typename:unsigned
ISALNUM	my_project/libgit2/src/util/wildmatch.c	/^#define ISALNUM(/;"	d	file:
ISALPHA	my_project/libgit2/src/util/wildmatch.c	/^#define ISALPHA(/;"	d	file:
ISASCII	my_project/libgit2/src/util/wildmatch.c	/^# define ISASCII(/;"	d	file:
ISBLANK	my_project/libgit2/src/util/wildmatch.c	/^# define ISBLANK(/;"	d	file:
ISCNTRL	my_project/libgit2/src/util/wildmatch.c	/^#define ISCNTRL(/;"	d	file:
ISDIGIT	my_project/libgit2/src/util/wildmatch.c	/^#define ISDIGIT(/;"	d	file:
ISGRAPH	my_project/libgit2/src/util/wildmatch.c	/^# define ISGRAPH(/;"	d	file:
ISLOWER	my_project/libgit2/src/util/wildmatch.c	/^#define ISLOWER(/;"	d	file:
ISPRINT	my_project/libgit2/src/util/wildmatch.c	/^#define ISPRINT(/;"	d	file:
ISPUNCT	my_project/libgit2/src/util/wildmatch.c	/^#define ISPUNCT(/;"	d	file:
ISSPACE	my_project/libgit2/src/util/wildmatch.c	/^#define ISSPACE(/;"	d	file:
ISUPPER	my_project/libgit2/src/util/wildmatch.c	/^#define ISUPPER(/;"	d	file:
ISXDIGIT	my_project/libgit2/src/util/wildmatch.c	/^#define ISXDIGIT(/;"	d	file:
IS_BIT_SET	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^#define IS_BIT_SET(/;"	d	file:
IS_DIGIT	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define IS_DIGIT(/;"	d	file:
IS_NEWLINE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define IS_NEWLINE(/;"	d
IS_STATIC_ERROR	my_project/libgit2/src/util/errors.c	/^#define IS_STATIC_ERROR(/;"	d	file:
ITERATOR_PATHLIST_FULL	my_project/libgit2/src/libgit2/iterator.c	/^	ITERATOR_PATHLIST_FULL = 4$/;"	e	enum:__anon2f88b95a0103	file:
ITERATOR_PATHLIST_IS_DIR	my_project/libgit2/src/libgit2/iterator.c	/^	ITERATOR_PATHLIST_IS_DIR = 2,$/;"	e	enum:__anon2f88b95a0103	file:
ITERATOR_PATHLIST_IS_FILE	my_project/libgit2/src/libgit2/iterator.c	/^	ITERATOR_PATHLIST_IS_FILE = 1,$/;"	e	enum:__anon2f88b95a0103	file:
ITERATOR_PATHLIST_IS_PARENT	my_project/libgit2/src/libgit2/iterator.c	/^	ITERATOR_PATHLIST_IS_PARENT = 3,$/;"	e	enum:__anon2f88b95a0103	file:
ITERATOR_PATHLIST_NONE	my_project/libgit2/src/libgit2/iterator.c	/^	ITERATOR_PATHLIST_NONE = 0,$/;"	e	enum:__anon2f88b95a0103	file:
Indentation	my_project/libgit2/docs/coding-style.md	/^### Indentation$/;"	S	section:libgit2 Coding Style""CMake Coding Style
Indentation and Alignment	my_project/libgit2/docs/coding-style.md	/^### Indentation and Alignment$/;"	S	section:libgit2 Coding Style""C Coding Style
InfoTemplate	my_project/libgit2/tests/clar/generate.py	/^    class InfoTemplate(Template):$/;"	c	class:Module
Initialization	my_project/libgit2/README.md	/^Initialization$/;"	c
Inlined functions	my_project/libgit2/docs/conventions.md	/^## Inlined functions$/;"	s	chapter:Libgit2 Conventions
Installation	my_project/libgit2/README.md	/^Installation$/;"	s	chapter:Building libgit2 - Using CMake
Intermediate_Hash	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    uint32_t Intermediate_Hash[SHA1HashSize\/4]; \/* Message Digest *\/$/;"	m	struct:SHA1Context	typeref:typename:uint32_t[]
Intermediate_Hash	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    uint32_t Intermediate_Hash[SHA256HashSize\/4]; \/* Message Digest *\/$/;"	m	struct:SHA256Context	typeref:typename:uint32_t[]
Intermediate_Hash	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    uint32_t Intermediate_Hash[SHA512HashSize\/4]; \/* Message Digest  *\/$/;"	m	struct:SHA512Context	typeref:typename:uint32_t[]
Internal Objects	my_project/libgit2/docs/diff-internals.md	/^Internal Objects$/;"	s
Internals	my_project/libgit2/docs/conventions.md	/^## Internals$/;"	s	chapter:Libgit2 Conventions
JIT_COMPILE	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { JIT_COMPILE, JIT_PARTIAL_SOFT_COMPILE, JIT_PARTIAL_HARD_COMPILE,$/;"	e	enum:__anon9562267c0403
JIT_NUMBER_OF_COMPILE_MODES	my_project/libgit2/deps/pcre/pcre_internal.h	/^       JIT_NUMBER_OF_COMPILE_MODES };$/;"	e	enum:__anon9562267c0403
JIT_PARTIAL_HARD_COMPILE	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { JIT_COMPILE, JIT_PARTIAL_SOFT_COMPILE, JIT_PARTIAL_HARD_COMPILE,$/;"	e	enum:__anon9562267c0403
JIT_PARTIAL_SOFT_COMPILE	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { JIT_COMPILE, JIT_PARTIAL_SOFT_COMPILE, JIT_PARTIAL_HARD_COMPILE,$/;"	e	enum:__anon9562267c0403
JUMP	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define JUMP(/;"	d	file:
JUMPHERE	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define JUMPHERE(/;"	d	file:
JUMPTO	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define JUMPTO(/;"	d	file:
KHASH_DECLARE	my_project/libgit2/src/util/khash.h	/^#define KHASH_DECLARE(/;"	d
KHASH_INIT	my_project/libgit2/src/util/khash.h	/^#define KHASH_INIT(/;"	d
KHASH_INIT2	my_project/libgit2/src/util/khash.h	/^#define KHASH_INIT2(/;"	d
KHASH_MAP_INIT_INT	my_project/libgit2/src/util/khash.h	/^#define KHASH_MAP_INIT_INT(/;"	d
KHASH_MAP_INIT_INT64	my_project/libgit2/src/util/khash.h	/^#define KHASH_MAP_INIT_INT64(/;"	d
KHASH_MAP_INIT_STR	my_project/libgit2/src/util/khash.h	/^#define KHASH_MAP_INIT_STR(/;"	d
KHASH_SET_INIT_INT	my_project/libgit2/src/util/khash.h	/^#define KHASH_SET_INIT_INT(/;"	d
KHASH_SET_INIT_INT64	my_project/libgit2/src/util/khash.h	/^#define KHASH_SET_INIT_INT64(/;"	d
KHASH_SET_INIT_STR	my_project/libgit2/src/util/khash.h	/^#define KHASH_SET_INIT_STR(/;"	d
KNOWN_COMMIT_IN_ATTR_REPO	my_project/libgit2/tests/libgit2/reset/reset_helpers.h	/^#define KNOWN_COMMIT_IN_ATTR_REPO /;"	d
KNOWN_COMMIT_IN_BARE_REPO	my_project/libgit2/tests/libgit2/reset/reset_helpers.h	/^#define KNOWN_COMMIT_IN_BARE_REPO /;"	d
KNOWN_HOSTS_FILE	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^#define KNOWN_HOSTS_FILE /;"	d	file:
Key	my_project/libgit2/docs/checkout-internals.md	/^Key$/;"	s	chapter:Picking Actions
LABEL	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define LABEL(/;"	d	file:
LARGEFILE_SIZE	my_project/libgit2/tests/libgit2/odb/largefiles.c	/^#define LARGEFILE_SIZE /;"	d	file:
LAST_AUTOTAB_LEFT_OP	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define LAST_AUTOTAB_LEFT_OP /;"	d
LAST_AUTOTAB_RIGHT_OP	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define LAST_AUTOTAB_RIGHT_OP /;"	d
LBL	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define LBL(/;"	d	file:
LEN	my_project/libgit2/deps/zlib/inflate.h	/^            LEN,        \/* i: waiting for length\/lit\/eob code *\/$/;"	e	enum:__anona0359fa00103
LENEXT	my_project/libgit2/deps/zlib/inflate.h	/^            LENEXT,     \/* i: waiting for length extra bits *\/$/;"	e	enum:__anona0359fa00103
LENGTH	my_project/libgit2/deps/zlib/inflate.h	/^    LENGTH,     \/* i: waiting for 32-bit length (gzip) *\/$/;"	e	enum:__anona0359fa00103
LENGTH_CODES	my_project/libgit2/deps/zlib/deflate.h	/^#define LENGTH_CODES /;"	d
LENIENT_CHUNKED_LENGTH	my_project/libgit2/deps/llhttp/llhttp.h	/^  LENIENT_CHUNKED_LENGTH = 0x2,$/;"	e	enum:llhttp_lenient_flags
LENIENT_DATA_AFTER_CLOSE	my_project/libgit2/deps/llhttp/llhttp.h	/^  LENIENT_DATA_AFTER_CLOSE = 0x20,$/;"	e	enum:llhttp_lenient_flags
LENIENT_HEADERS	my_project/libgit2/deps/llhttp/llhttp.h	/^  LENIENT_HEADERS = 0x1,$/;"	e	enum:llhttp_lenient_flags
LENIENT_KEEP_ALIVE	my_project/libgit2/deps/llhttp/llhttp.h	/^  LENIENT_KEEP_ALIVE = 0x4,$/;"	e	enum:llhttp_lenient_flags
LENIENT_OPTIONAL_CRLF_AFTER_CHUNK	my_project/libgit2/deps/llhttp/llhttp.h	/^  LENIENT_OPTIONAL_CRLF_AFTER_CHUNK = 0x80,$/;"	e	enum:llhttp_lenient_flags
LENIENT_OPTIONAL_CR_BEFORE_LF	my_project/libgit2/deps/llhttp/llhttp.h	/^  LENIENT_OPTIONAL_CR_BEFORE_LF = 0x100,$/;"	e	enum:llhttp_lenient_flags
LENIENT_OPTIONAL_LF_AFTER_CR	my_project/libgit2/deps/llhttp/llhttp.h	/^  LENIENT_OPTIONAL_LF_AFTER_CR = 0x40,$/;"	e	enum:llhttp_lenient_flags
LENIENT_SPACES_AFTER_CHUNK_SIZE	my_project/libgit2/deps/llhttp/llhttp.h	/^  LENIENT_SPACES_AFTER_CHUNK_SIZE = 0x200$/;"	e	enum:llhttp_lenient_flags
LENIENT_TRANSFER_ENCODING	my_project/libgit2/deps/llhttp/llhttp.h	/^  LENIENT_TRANSFER_ENCODING = 0x8,$/;"	e	enum:llhttp_lenient_flags
LENIENT_VERSION	my_project/libgit2/deps/llhttp/llhttp.h	/^  LENIENT_VERSION = 0x10,$/;"	e	enum:llhttp_lenient_flags
LENLENS	my_project/libgit2/deps/zlib/inflate.h	/^        LENLENS,    \/* i: waiting for code length code lengths *\/$/;"	e	enum:__anona0359fa00103
LENS	my_project/libgit2/deps/zlib/inftrees.h	/^    LENS,$/;"	e	enum:__anon3554db3d0203
LEN_	my_project/libgit2/deps/zlib/inflate.h	/^            LEN_,       \/* i: same as LEN below, but only first time in *\/$/;"	e	enum:__anona0359fa00103
LIBGIT2_DEPENDENCY_INCLUDES	my_project/libgit2/src/CMakeLists.txt	/^set(LIBGIT2_DEPENDENCY_INCLUDES ${LIBGIT2_DEPENDENCY_INCLUDES} PARENT_SCOPE)$/;"	v
LIBGIT2_DEPENDENCY_INCLUDES	my_project/libgit2/src/libgit2/CMakeLists.txt	/^set(LIBGIT2_DEPENDENCY_INCLUDES ${LIBGIT2_DEPENDENCY_INCLUDES} PARENT_SCOPE)$/;"	v
LIBGIT2_DEPENDENCY_OBJECTS	my_project/libgit2/CMakeLists.txt	/^	set(LIBGIT2_DEPENDENCY_OBJECTS ${LIBGIT2_DEPENDENCY_OBJECTS} PARENT_SCOPE)$/;"	v
LIBGIT2_DEPENDENCY_OBJECTS	my_project/libgit2/src/CMakeLists.txt	/^set(LIBGIT2_DEPENDENCY_OBJECTS ${LIBGIT2_DEPENDENCY_OBJECTS} PARENT_SCOPE)$/;"	v
LIBGIT2_DEPENDENCY_OBJECTS	my_project/libgit2/src/libgit2/CMakeLists.txt	/^set(LIBGIT2_DEPENDENCY_OBJECTS ${LIBGIT2_DEPENDENCY_OBJECTS} PARENT_SCOPE)$/;"	v
LIBGIT2_FILENAME	my_project/libgit2/CMakeLists.txt	/^   set(LIBGIT2_FILENAME        "git2" CACHE STRING "Name of the produced binary")$/;"	v
LIBGIT2_FILENAME	my_project/libgit2/cmake/ExperimentalFeatures.cmake	/^	set(LIBGIT2_FILENAME "${LIBGIT2_FILENAME}-experimental")$/;"	v
LIBGIT2_INCLUDES	my_project/libgit2/src/CMakeLists.txt	/^set(LIBGIT2_INCLUDES ${LIBGIT2_INCLUDES} PARENT_SCOPE)$/;"	v
LIBGIT2_INCLUDES	my_project/libgit2/src/libgit2/CMakeLists.txt	/^set(LIBGIT2_INCLUDES ${LIBGIT2_INCLUDES} PARENT_SCOPE)$/;"	v
LIBGIT2_INCLUDES	my_project/libgit2/src/libgit2/CMakeLists.txt	/^set(LIBGIT2_INCLUDES$/;"	v
LIBGIT2_OBJECTS	my_project/libgit2/src/CMakeLists.txt	/^set(LIBGIT2_OBJECTS ${LIBGIT2_OBJECTS} PARENT_SCOPE)$/;"	v
LIBGIT2_OBJECTS	my_project/libgit2/src/libgit2/CMakeLists.txt	/^set(LIBGIT2_OBJECTS ${LIBGIT2_OBJECTS} PARENT_SCOPE)$/;"	v
LIBGIT2_SOVERSION	my_project/libgit2/include/git2/version.h	/^#define LIBGIT2_SOVERSION /;"	d
LIBGIT2_SYSTEM_INCLUDES	my_project/libgit2/src/CMakeLists.txt	/^set(LIBGIT2_SYSTEM_INCLUDES ${LIBGIT2_SYSTEM_INCLUDES} PARENT_SCOPE)$/;"	v
LIBGIT2_SYSTEM_INCLUDES	my_project/libgit2/src/libgit2/CMakeLists.txt	/^set(LIBGIT2_SYSTEM_INCLUDES ${LIBGIT2_SYSTEM_INCLUDES} PARENT_SCOPE)$/;"	v
LIBGIT2_SYSTEM_LIBS	my_project/libgit2/CMakeLists.txt	/^	set(LIBGIT2_SYSTEM_LIBS ${LIBGIT2_SYSTEM_LIBS} PARENT_SCOPE)$/;"	v
LIBGIT2_SYSTEM_LIBS	my_project/libgit2/src/CMakeLists.txt	/^set(LIBGIT2_SYSTEM_LIBS ${LIBGIT2_SYSTEM_LIBS} PARENT_SCOPE)$/;"	v
LIBGIT2_SYSTEM_LIBS	my_project/libgit2/src/libgit2/CMakeLists.txt	/^set(LIBGIT2_SYSTEM_LIBS ${LIBGIT2_SYSTEM_LIBS} PARENT_SCOPE)$/;"	v
LIBGIT2_VERSION	my_project/libgit2/include/git2/version.h	/^#define LIBGIT2_VERSION /;"	d
LIBGIT2_VER_MAJOR	my_project/libgit2/include/git2/version.h	/^#define LIBGIT2_VER_MAJOR /;"	d
LIBGIT2_VER_MINOR	my_project/libgit2/include/git2/version.h	/^#define LIBGIT2_VER_MINOR /;"	d
LIBGIT2_VER_PATCH	my_project/libgit2/include/git2/version.h	/^#define LIBGIT2_VER_PATCH /;"	d
LIBGIT2_VER_PRERELEASE	my_project/libgit2/include/git2/version.h	/^#define LIBGIT2_VER_PRERELEASE /;"	d
LIBGIT2_VER_REVISION	my_project/libgit2/include/git2/version.h	/^#define LIBGIT2_VER_REVISION /;"	d
LIBSSH2_INCLUDE_DIRS	my_project/libgit2/cmake/SelectSSH.cmake	/^		set(LIBSSH2_INCLUDE_DIRS ${LIBSSH2_INCLUDE_DIR})$/;"	v
LIBSSH2_LDFLAGS	my_project/libgit2/cmake/SelectSSH.cmake	/^		set(LIBSSH2_LDFLAGS "-lssh2")$/;"	v
LIBSSH2_LIBRARIES	my_project/libgit2/cmake/SelectSSH.cmake	/^		set(LIBSSH2_LIBRARIES ${LIBSSH2_LIBRARY})$/;"	v
LIBSSH2_SESSION	my_project/libgit2/include/git2/credential.h	/^typedef struct _LIBSSH2_SESSION LIBSSH2_SESSION;$/;"	t	typeref:struct:_LIBSSH2_SESSION
LIBSSH2_USERAUTH_KBDINT_PROMPT	my_project/libgit2/include/git2/credential.h	/^typedef struct _LIBSSH2_USERAUTH_KBDINT_PROMPT LIBSSH2_USERAUTH_KBDINT_PROMPT;$/;"	t	typeref:struct:_LIBSSH2_USERAUTH_KBDINT_PROMPT
LIBSSH2_USERAUTH_KBDINT_RESPONSE	my_project/libgit2/include/git2/credential.h	/^typedef struct _LIBSSH2_USERAUTH_KBDINT_RESPONSE LIBSSH2_USERAUTH_KBDINT_RESPONSE;$/;"	t	typeref:struct:_LIBSSH2_USERAUTH_KBDINT_RESPONSE
LIBWINHTTP_PATH	my_project/libgit2/deps/winhttp/CMakeLists.txt	/^set(LIBWINHTTP_PATH "${PROJECT_BINARY_DIR}\/deps\/winhttp")$/;"	v
LIBWINHTTP_PATH	my_project/libgit2/deps/winhttp/CMakeLists.txt	/^set(LIBWINHTTP_PATH ${LIBWINHTTP_PATH} PARENT_SCOPE)$/;"	v
LIMIT_MATCH	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define LIMIT_MATCH /;"	d	file:
LINE_END	my_project/libgit2/deps/xdiff/xhistogram.c	/^#define LINE_END(/;"	d	file:
LINE_END_PTR	my_project/libgit2/deps/xdiff/xhistogram.c	/^#define LINE_END_PTR(/;"	d	file:
LINE_MAP	my_project/libgit2/deps/xdiff/xhistogram.c	/^#define LINE_MAP(/;"	d	file:
LINK_ANCESTOR_OID	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define LINK_ANCESTOR_OID /;"	d	file:
LINK_ANCESTOR_TARGET	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define LINK_ANCESTOR_TARGET /;"	d	file:
LINK_OURS_OID	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define LINK_OURS_OID /;"	d	file:
LINK_OURS_TARGET	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define LINK_OURS_TARGET /;"	d	file:
LINK_SIZE	my_project/libgit2/deps/pcre/config.h.in	/^#define LINK_SIZE	/;"	d	file:
LINK_SIZE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define LINK_SIZE /;"	d
LINK_THEIRS_OID	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define LINK_THEIRS_OID /;"	d	file:
LINK_THEIRS_TARGET	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define LINK_THEIRS_TARGET /;"	d	file:
LIT	my_project/libgit2/deps/zlib/inflate.h	/^            LIT,        \/* o: waiting for output space to write literal *\/$/;"	e	enum:__anona0359fa00103
LITERALS	my_project/libgit2/deps/zlib/deflate.h	/^#define LITERALS /;"	d
LIVE_EMPTYREPO_URL	my_project/libgit2/tests/libgit2/online/clone.c	/^#define LIVE_EMPTYREPO_URL /;"	d	file:
LIVE_REPO_AS_DIR	my_project/libgit2/tests/libgit2/online/clone.c	/^#define LIVE_REPO_AS_DIR /;"	d	file:
LIVE_REPO_URL	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^#define LIVE_REPO_URL /;"	d	file:
LIVE_REPO_URL	my_project/libgit2/tests/libgit2/online/clone.c	/^#define LIVE_REPO_URL /;"	d	file:
LIVE_REPO_URL	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^#define LIVE_REPO_URL /;"	d	file:
LLHTTP_EXPORT	my_project/libgit2/deps/llhttp/llhttp.h	/^#define LLHTTP_EXPORT$/;"	d
LLHTTP_INCLUDE_DIRS	my_project/libgit2/cmake/FindLLHTTP.cmake	/^	set(LLHTTP_INCLUDE_DIRS ${LLHTTP_INCLUDE_DIR})$/;"	v
LLHTTP_LIBRARIES	my_project/libgit2/cmake/FindLLHTTP.cmake	/^	set(LLHTTP_LIBRARIES ${LLHTTP_LIBRARY})$/;"	v
LLHTTP_VERSION_MAJOR	my_project/libgit2/deps/llhttp/llhttp.h	/^#define LLHTTP_VERSION_MAJOR /;"	d
LLHTTP_VERSION_MINOR	my_project/libgit2/deps/llhttp/llhttp.h	/^#define LLHTTP_VERSION_MINOR /;"	d
LLHTTP_VERSION_PATCH	my_project/libgit2/deps/llhttp/llhttp.h	/^#define LLHTTP_VERSION_PATCH /;"	d
LLHTTP_VERSION_STRING	my_project/libgit2/cmake/FindLLHTTP.cmake	/^		set(LLHTTP_VERSION_STRING "${LLHTTP_VERSION_MAJOR}.${LLHTTP_VERSION_MINOR}")$/;"	v
LLLLHTTP_C_HEADERS_	my_project/libgit2/deps/llhttp/llhttp.h	/^#define LLLLHTTP_C_HEADERS_$/;"	d
LLVMFuzzerInitialize	my_project/libgit2/fuzzers/commit_graph_fuzzer.c	/^int LLVMFuzzerInitialize(int *argc, char ***argv)$/;"	f	typeref:typename:int
LLVMFuzzerInitialize	my_project/libgit2/fuzzers/config_file_fuzzer.c	/^int LLVMFuzzerInitialize(int *argc, char ***argv)$/;"	f	typeref:typename:int
LLVMFuzzerInitialize	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^int LLVMFuzzerInitialize(int *argc, char ***argv)$/;"	f	typeref:typename:int
LLVMFuzzerInitialize	my_project/libgit2/fuzzers/midx_fuzzer.c	/^int LLVMFuzzerInitialize(int *argc, char ***argv)$/;"	f	typeref:typename:int
LLVMFuzzerInitialize	my_project/libgit2/fuzzers/objects_fuzzer.c	/^int LLVMFuzzerInitialize(int *argc, char ***argv)$/;"	f	typeref:typename:int
LLVMFuzzerInitialize	my_project/libgit2/fuzzers/packfile_fuzzer.c	/^int LLVMFuzzerInitialize(int *argc, char ***argv)$/;"	f	typeref:typename:int
LLVMFuzzerInitialize	my_project/libgit2/fuzzers/patch_parse_fuzzer.c	/^int LLVMFuzzerInitialize(int *argc, char ***argv)$/;"	f	typeref:typename:int
LLVMFuzzerInitialize	my_project/libgit2/fuzzers/revparse_fuzzer.c	/^int LLVMFuzzerInitialize(int *argc, char ***argv)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	my_project/libgit2/fuzzers/commit_graph_fuzzer.c	/^int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	my_project/libgit2/fuzzers/config_file_fuzzer.c	/^int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^int LLVMFuzzerTestOneInput(const unsigned char *data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	my_project/libgit2/fuzzers/midx_fuzzer.c	/^int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	my_project/libgit2/fuzzers/objects_fuzzer.c	/^int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	my_project/libgit2/fuzzers/packfile_fuzzer.c	/^int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	my_project/libgit2/fuzzers/patch_parse_fuzzer.c	/^int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	my_project/libgit2/fuzzers/revparse_fuzzer.c	/^int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)$/;"	f	typeref:typename:int
LOAD	my_project/libgit2/deps/zlib/infback.c	/^#define LOAD(/;"	d	file:
LOAD	my_project/libgit2/deps/zlib/inflate.c	/^#define LOAD(/;"	d	file:
LOC	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^					set(LOC "${OPENSSL_DIR}${SUFFIX}")$/;"	v
LOCALS0	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define LOCALS0 /;"	d	file:
LOCALS1	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define LOCALS1 /;"	d	file:
LONG_FILENAME	my_project/libgit2/tests/libgit2/win32/longpath.c	/^#define LONG_FILENAME /;"	d	file:
LOOK	my_project/libgit2/deps/zlib/gzguts.h	/^#define LOOK /;"	d
LOOSE_BLOB_FN	my_project/libgit2/tests/libgit2/odb/freshen.c	/^#define LOOSE_BLOB_FN /;"	d	file:
LOOSE_BLOB_ID	my_project/libgit2/tests/libgit2/odb/freshen.c	/^#define LOOSE_BLOB_ID /;"	d	file:
LOOSE_STR	my_project/libgit2/tests/libgit2/odb/freshen.c	/^#define LOOSE_STR /;"	d	file:
LOOSE_TREE_FN	my_project/libgit2/tests/libgit2/odb/freshen.c	/^#define LOOSE_TREE_FN /;"	d	file:
LOOSE_TREE_ID	my_project/libgit2/tests/libgit2/odb/freshen.c	/^#define LOOSE_TREE_ID /;"	d	file:
LPHINTERNET	my_project/libgit2/deps/winhttp/winhttp.h	/^typedef HINTERNET *LPHINTERNET;$/;"	t	typeref:typename:HINTERNET *
LPHTTP_VERSION_INFO	my_project/libgit2/deps/winhttp/winhttp.h	/^} HTTP_VERSION_INFO, *LPHTTP_VERSION_INFO;$/;"	t	typeref:struct:__anon0b61ebe80708 *
LPINTERNET_PORT	my_project/libgit2/deps/winhttp/winhttp.h	/^typedef INTERNET_PORT *LPINTERNET_PORT;$/;"	t	typeref:typename:INTERNET_PORT *
LPINTERNET_SCHEME	my_project/libgit2/deps/winhttp/winhttp.h	/^typedef int INTERNET_SCHEME, *LPINTERNET_SCHEME;$/;"	t	typeref:typename:int *
LPURL_COMPONENTS	my_project/libgit2/deps/winhttp/winhttp.h	/^} URL_COMPONENTS, *LPURL_COMPONENTS;$/;"	t	typeref:struct:__anon0b61ebe80108 *
LPURL_COMPONENTSW	my_project/libgit2/deps/winhttp/winhttp.h	/^typedef LPURL_COMPONENTS LPURL_COMPONENTSW;$/;"	t	typeref:typename:LPURL_COMPONENTS
LPWINHTTP_ASYNC_RESULT	my_project/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_ASYNC_RESULT, *LPWINHTTP_ASYNC_RESULT;$/;"	t	typeref:struct:__anon0b61ebe80208 *
LPWINHTTP_PROXY_INFO	my_project/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_PROXY_INFO, *LPWINHTTP_PROXY_INFO;$/;"	t	typeref:struct:__anon0b61ebe80408 *
LPWINHTTP_PROXY_INFOW	my_project/libgit2/deps/winhttp/winhttp.h	/^typedef LPWINHTTP_PROXY_INFO LPWINHTTP_PROXY_INFOW;$/;"	t	typeref:typename:LPWINHTTP_PROXY_INFO
L_CODES	my_project/libgit2/deps/zlib/deflate.h	/^#define L_CODES /;"	d
Language Bindings	my_project/libgit2/README.md	/^Language Bindings$/;"	c
Larger Projects	my_project/libgit2/docs/projects.md	/^## Larger Projects$/;"	s	chapter:Projects For LibGit2
Len	my_project/libgit2/deps/zlib/deflate.h	/^#define Len /;"	d
Length	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    uint32_t Length[4];                 \/* Message length in bits *\/$/;"	m	struct:SHA512Context	typeref:typename:uint32_t[4]
Length_High	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    uint32_t Length_High;               \/* Message length in bits *\/$/;"	m	struct:SHA1Context	typeref:typename:uint32_t
Length_High	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    uint32_t Length_High;               \/* Message length in bits *\/$/;"	m	struct:SHA256Context	typeref:typename:uint32_t
Length_Low	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    uint32_t Length_Low;                \/* Message length in bits *\/$/;"	m	struct:SHA1Context	typeref:typename:uint32_t
Length_Low	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    uint32_t Length_Low;                \/* Message length in bits *\/$/;"	m	struct:SHA256Context	typeref:typename:uint32_t
Libgit2 Conventions	my_project/libgit2/docs/conventions.md	/^# Libgit2 Conventions$/;"	c
Libgit2 Versions	my_project/libgit2/docs/contributing.md	/^## Libgit2 Versions$/;"	s	chapter:Welcome to libgit2!
License	my_project/libgit2/README.md	/^License$/;"	c
Licensing	my_project/libgit2/docs/contributing.md	/^## Licensing$/;"	s	chapter:Welcome to libgit2!
Linux	my_project/libgit2/tests/README.md	/^### Linux$/;"	S	section:libgit2 tests""Memory leak checking
LocalAddress	my_project/libgit2/deps/winhttp/winhttp.h	/^    SOCKADDR_STORAGE LocalAddress;$/;"	m	struct:__anon0b61ebe80808	typeref:typename:SOCKADDR_STORAGE
LocalPcreFree	my_project/libgit2/deps/pcre/pcre_globals.c	/^static void LocalPcreFree(void* aPtr)$/;"	f	typeref:typename:void	file:
LocalPcreMalloc	my_project/libgit2/deps/pcre/pcre_globals.c	/^static void* LocalPcreMalloc(size_t aSize)$/;"	f	typeref:typename:void *	file:
M	my_project/libgit2/examples/blame.c	/^	int M;$/;"	m	struct:blame_opts	typeref:typename:int	file:
MACHINE_STACK_SIZE	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define MACHINE_STACK_SIZE /;"	d	file:
MAGIC_NUMBER	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define MAGIC_NUMBER /;"	d
MANY_UTF8_CRLF_RAW	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define MANY_UTF8_CRLF_RAW	/;"	d
MANY_UTF8_CRLF_RAW	my_project/libgit2/tests/util/crlf.h	/^#define MANY_UTF8_CRLF_RAW	/;"	d
MANY_UTF8_LF_RAW	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define MANY_UTF8_LF_RAW	/;"	d
MANY_UTF8_LF_RAW	my_project/libgit2/tests/util/crlf.h	/^#define MANY_UTF8_LF_RAW	/;"	d
MAP_ALWAYS	my_project/libgit2/tests/libgit2/config/read.c	/^	MAP_ALWAYS = 2$/;"	e	enum:__anonc5ba063c0103	file:
MAP_FAILED	my_project/libgit2/src/util/map.h	/^#define MAP_FAILED /;"	d
MAP_FALSE	my_project/libgit2/tests/libgit2/config/read.c	/^	MAP_FALSE = 1,$/;"	e	enum:__anonc5ba063c0103	file:
MAP_TRUE	my_project/libgit2/tests/libgit2/config/read.c	/^	MAP_TRUE = 0,$/;"	e	enum:__anonc5ba063c0103	file:
MASTER_BRANCH	my_project/libgit2/tests/libgit2/worktree/merge.c	/^#define MASTER_BRANCH /;"	d	file:
MATCH	my_project/libgit2/deps/zlib/inflate.h	/^            MATCH,      \/* o: waiting for output space to copy string *\/$/;"	e	enum:__anona0359fa00103
MATCH_ACCEPT	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_ACCEPT /;"	d	file:
MATCH_BACKTRACK_MAX	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_BACKTRACK_MAX /;"	d	file:
MATCH_BACKTRACK_MIN	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_BACKTRACK_MIN /;"	d	file:
MATCH_CBEGROUP	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_CBEGROUP /;"	d	file:
MATCH_COMMIT	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_COMMIT /;"	d	file:
MATCH_CONDASSERT	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_CONDASSERT /;"	d	file:
MATCH_KETRPOS	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_KETRPOS /;"	d	file:
MATCH_LIMIT	my_project/libgit2/deps/pcre/config.h.in	/^#define MATCH_LIMIT	/;"	d	file:
MATCH_LIMIT_RECURSION	my_project/libgit2/deps/pcre/config.h.in	/^#define MATCH_LIMIT_RECURSION	/;"	d	file:
MATCH_MATCH	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_MATCH /;"	d	file:
MATCH_NOMATCH	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_NOMATCH /;"	d	file:
MATCH_ONCE	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_ONCE /;"	d	file:
MATCH_PRUNE	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_PRUNE /;"	d	file:
MATCH_SKIP	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_SKIP /;"	d	file:
MATCH_SKIP_ARG	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_SKIP_ARG /;"	d	file:
MATCH_THEN	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define MATCH_THEN /;"	d	file:
MAX	my_project/libgit2/src/util/tsort.c	/^#	define MAX(/;"	d	file:
MAX	my_project/libgit2/tests/clar/clar.c	/^#define MAX(/;"	d	file:
MAXBITS	my_project/libgit2/deps/zlib/inftrees.c	/^#define MAXBITS /;"	d	file:
MAXSEG_64K	my_project/libgit2/deps/zlib/zconf.h	/^#  define MAXSEG_64K$/;"	d
MAX_255	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define MAX_255(/;"	d
MAX_BITS	my_project/libgit2/deps/zlib/deflate.h	/^#define MAX_BITS /;"	d
MAX_BLANKS	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define MAX_BLANKS /;"	d	file:
MAX_BL_BITS	my_project/libgit2/deps/zlib/trees.c	/^#define MAX_BL_BITS /;"	d	file:
MAX_CANDIDATES_TAGS	my_project/libgit2/src/libgit2/describe.c	/^#define MAX_CANDIDATES_TAGS /;"	d	file:
MAX_CNT	my_project/libgit2/deps/xdiff/xhistogram.c	/^#define MAX_CNT	/;"	d	file:
MAX_CONTENT_TYPE_LEN	my_project/libgit2/src/libgit2/transports/winhttp.c	/^#define MAX_CONTENT_TYPE_LEN	/;"	d	file:
MAX_DIFF_CHARS	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define MAX_DIFF_CHARS /;"	d	file:
MAX_DIST	my_project/libgit2/deps/zlib/deflate.h	/^#define MAX_DIST(/;"	d
MAX_FILEMODE_BYTES	my_project/libgit2/src/libgit2/tree.c	/^#define MAX_FILEMODE_BYTES /;"	d	file:
MAX_HEADER_LEN	my_project/libgit2/src/libgit2/odb_loose.c	/^#define MAX_HEADER_LEN /;"	d	file:
MAX_INCLUDE_DEPTH	my_project/libgit2/src/libgit2/config_file.c	/^#define MAX_INCLUDE_DEPTH /;"	d	file:
MAX_INDENT	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define MAX_INDENT /;"	d	file:
MAX_MARK	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define MAX_MARK /;"	d
MAX_MATCH	my_project/libgit2/deps/zlib/zutil.h	/^#define MAX_MATCH /;"	d
MAX_MEM_LEVEL	my_project/libgit2/deps/zlib/zconf.h	/^#    define MAX_MEM_LEVEL /;"	d
MAX_NAME_COUNT	my_project/libgit2/deps/pcre/config.h.in	/^#define MAX_NAME_COUNT	/;"	d	file:
MAX_NAME_SIZE	my_project/libgit2/deps/pcre/config.h.in	/^#define MAX_NAME_SIZE	/;"	d	file:
MAX_NESTING_LEVEL	my_project/libgit2/src/libgit2/refdb.c	/^#define MAX_NESTING_LEVEL	/;"	d	file:
MAX_NESTING_LEVEL	my_project/libgit2/src/libgit2/refdb_fs.c	/^#define MAX_NESTING_LEVEL	/;"	d	file:
MAX_N_CHARS	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define MAX_N_CHARS /;"	d	file:
MAX_OIDS	my_project/libgit2/tests/libgit2/object/raw/short.c	/^#define MAX_OIDS /;"	d	file:
MAX_OP_SIZE	my_project/libgit2/src/libgit2/delta.c	/^#define MAX_OP_SIZE	/;"	d	file:
MAX_PATHSPEC	my_project/libgit2/examples/status.c	/^#define MAX_PATHSPEC /;"	d	file:
MAX_PATTERN_SIZE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define MAX_PATTERN_SIZE /;"	d
MAX_PTR	my_project/libgit2/deps/xdiff/xhistogram.c	/^#define MAX_PTR	/;"	d	file:
MAX_PTR	my_project/libgit2/deps/zlib/zutil.c	/^#define MAX_PTR /;"	d	file:
MAX_RANGE_SIZE	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define MAX_RANGE_SIZE /;"	d	file:
MAX_STORED	my_project/libgit2/deps/zlib/deflate.c	/^#define MAX_STORED /;"	d	file:
MAX_SYMLINK_DEPTH	my_project/libgit2/src/util/filebuf.c	/^#define MAX_SYMLINK_DEPTH /;"	d	file:
MAX_USED_TAGS	my_project/libgit2/tests/libgit2/object/tag/list.c	/^#define MAX_USED_TAGS /;"	d	file:
MAX_VALUE_FOR_SINGLE_CHAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define MAX_VALUE_FOR_SINGLE_CHAR /;"	d
MAX_WBITS	my_project/libgit2/deps/zlib/zconf.h	/^#  define MAX_WBITS /;"	d
MBEDTLS_FIND_QUIETLY	my_project/libgit2/cmake/FindmbedTLS.cmake	/^	set(MBEDTLS_FIND_QUIETLY TRUE)$/;"	v
MBEDTLS_FOUND	my_project/libgit2/cmake/FindmbedTLS.cmake	/^	 set(MBEDTLS_FOUND TRUE)$/;"	v
MBEDTLS_LIBRARIES	my_project/libgit2/cmake/FindmbedTLS.cmake	/^	set(MBEDTLS_LIBRARIES "-L${MBEDTLS_LIBRARY_DIR} -l${MBEDTLS_LIBRARY_FILE} -l${MBEDX509_LIBRARY_/;"	v
MD4Final	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^static void MD4Final (unsigned char digest[16], MD4_CTX *context)$/;"	f	typeref:typename:void	file:
MD4Init	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^static void MD4Init (MD4_CTX *context)$/;"	f	typeref:typename:void	file:
MD4Transform	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^static void MD4Transform (UINT4 state[4], const unsigned char block[64])$/;"	f	typeref:typename:void	file:
MD4Update	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^static void MD4Update (MD4_CTX *context, const unsigned char *input, unsigned int inputLen)$/;"	f	typeref:typename:void	file:
MD4_CTX	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^} MD4_CTX;$/;"	t	typeref:struct:__anonc766ba4d0108	file:
MD4_memcpy	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define MD4_memcpy /;"	d	file:
MD4_memset	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define MD4_memset /;"	d	file:
MEM	my_project/libgit2/deps/zlib/inflate.h	/^    MEM,        \/* got an inflate() memory error -- remain here until reset *\/$/;"	e	enum:__anona0359fa00103
MERGE_BRANCH_OID	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^#define MERGE_BRANCH_OID /;"	d	file:
MERGE_COMMIT_MSG	my_project/libgit2/examples/merge.c	/^#define MERGE_COMMIT_MSG /;"	d	file:
MESSAGE	my_project/libgit2/tests/libgit2/stash/save.c	/^#define MESSAGE /;"	d	file:
MESSAGES_COUNT	my_project/libgit2/tests/libgit2/notes/notes.c	/^#define MESSAGES_COUNT /;"	d	file:
MIDX_OBJECT_ID_VERSION	my_project/libgit2/src/libgit2/midx.c	/^#define MIDX_OBJECT_ID_VERSION /;"	d	file:
MIDX_OBJECT_LARGE_OFFSETS_ID	my_project/libgit2/src/libgit2/midx.c	/^#define MIDX_OBJECT_LARGE_OFFSETS_ID /;"	d	file:
MIDX_OBJECT_OFFSETS_ID	my_project/libgit2/src/libgit2/midx.c	/^#define MIDX_OBJECT_OFFSETS_ID /;"	d	file:
MIDX_OID_FANOUT_ID	my_project/libgit2/src/libgit2/midx.c	/^#define MIDX_OID_FANOUT_ID /;"	d	file:
MIDX_OID_LOOKUP_ID	my_project/libgit2/src/libgit2/midx.c	/^#define MIDX_OID_LOOKUP_ID /;"	d	file:
MIDX_PACKFILE_NAMES_ID	my_project/libgit2/src/libgit2/midx.c	/^#define MIDX_PACKFILE_NAMES_ID /;"	d	file:
MIDX_SIGNATURE	my_project/libgit2/src/libgit2/midx.c	/^#define MIDX_SIGNATURE /;"	d	file:
MIDX_VERSION	my_project/libgit2/src/libgit2/midx.c	/^#define MIDX_VERSION /;"	d	file:
MIMode	my_project/libgit2/.vscode/launch.json	/^            "MIMode": "gdb",$/;"	s	object:configurations.0
MIN	my_project/libgit2/deps/ntlmclient/compat.h	/^# define MIN(/;"	d
MIN	my_project/libgit2/deps/zlib/deflate.c	/^#define MIN(/;"	d	file:
MIN	my_project/libgit2/src/util/tsort.c	/^#	define MIN(/;"	d	file:
MIN_ALLOCSIZE	my_project/libgit2/src/util/vector.c	/^#define MIN_ALLOCSIZE	/;"	d	file:
MIN_LOOKAHEAD	my_project/libgit2/deps/zlib/deflate.h	/^#define MIN_LOOKAHEAD /;"	d
MIN_MATCH	my_project/libgit2/deps/zlib/zutil.h	/^#define MIN_MATCH /;"	d
MIN_PROGRESS_UPDATE_INTERVAL	my_project/libgit2/src/libgit2/pack-objects.c	/^#define MIN_PROGRESS_UPDATE_INTERVAL /;"	d	file:
MIN_PROGRESS_UPDATE_INTERVAL	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^#define MIN_PROGRESS_UPDATE_INTERVAL /;"	d	file:
MKDIR_NORMAL	my_project/libgit2/src/libgit2/checkout.c	/^#define MKDIR_NORMAL /;"	d	file:
MKDIR_REMOVE_EXISTING	my_project/libgit2/src/libgit2/checkout.c	/^#define MKDIR_REMOVE_EXISTING /;"	d	file:
MM_BLOB_CONFIG	my_project/libgit2/src/libgit2/mailmap.c	/^#define MM_BLOB_CONFIG /;"	d	file:
MM_BLOB_DEFAULT	my_project/libgit2/src/libgit2/mailmap.c	/^#define MM_BLOB_DEFAULT /;"	d	file:
MM_FILE	my_project/libgit2/src/libgit2/mailmap.c	/^#define MM_FILE /;"	d	file:
MM_FILE_CONFIG	my_project/libgit2/src/libgit2/mailmap.c	/^#define MM_FILE_CONFIG /;"	d	file:
MOD	my_project/libgit2/deps/zlib/adler32.c	/^#  define MOD(/;"	d	file:
MOD28	my_project/libgit2/deps/zlib/adler32.c	/^#  define MOD28(/;"	d	file:
MOD63	my_project/libgit2/deps/zlib/adler32.c	/^#  define MOD63(/;"	d	file:
MODE_BITS_MASK	my_project/libgit2/src/libgit2/diff_generate.c	/^#define MODE_BITS_MASK /;"	d	file:
MORE_CRLF_TEXT_AS_CRLF	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define MORE_CRLF_TEXT_AS_CRLF	/;"	d
MORE_CRLF_TEXT_AS_CRLF	my_project/libgit2/tests/util/crlf.h	/^#define MORE_CRLF_TEXT_AS_CRLF	/;"	d
MORE_CRLF_TEXT_AS_LF	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define MORE_CRLF_TEXT_AS_LF	/;"	d
MORE_CRLF_TEXT_AS_LF	my_project/libgit2/tests/util/crlf.h	/^#define MORE_CRLF_TEXT_AS_LF	/;"	d
MORE_CRLF_TEXT_RAW	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define MORE_CRLF_TEXT_RAW	/;"	d
MORE_CRLF_TEXT_RAW	my_project/libgit2/tests/util/crlf.h	/^#define MORE_CRLF_TEXT_RAW	/;"	d
MORE_LF_TEXT_AS_CRLF	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define MORE_LF_TEXT_AS_CRLF	/;"	d
MORE_LF_TEXT_AS_CRLF	my_project/libgit2/tests/util/crlf.h	/^#define MORE_LF_TEXT_AS_CRLF	/;"	d
MORE_LF_TEXT_AS_LF	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define MORE_LF_TEXT_AS_LF	/;"	d
MORE_LF_TEXT_AS_LF	my_project/libgit2/tests/util/crlf.h	/^#define MORE_LF_TEXT_AS_LF	/;"	d
MORE_LF_TEXT_RAW	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define MORE_LF_TEXT_RAW	/;"	d
MORE_LF_TEXT_RAW	my_project/libgit2/tests/util/crlf.h	/^#define MORE_LF_TEXT_RAW	/;"	d
MOV_UCHAR	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define MOV_UCHAR /;"	d	file:
MSB	my_project/libgit2/src/util/util.h	/^#define MSB(/;"	d
MSDOS	my_project/libgit2/deps/zlib/zconf.h	/^#  define MSDOS$/;"	d
MSGNUM_FILE	my_project/libgit2/src/libgit2/rebase.c	/^#define MSGNUM_FILE /;"	d	file:
MURMUR_BLOCK	my_project/libgit2/src/util/util.c	/^#define MURMUR_BLOCK(/;"	d	file:
MY_MAX_FILENAME	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^#define MY_MAX_FILENAME /;"	d	file:
MY_ROW_LIMIT	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^#define MY_ROW_LIMIT /;"	d	file:
MY_ZCALLOC	my_project/libgit2/deps/zlib/zutil.c	/^#  define MY_ZCALLOC$/;"	d	file:
MacOS X	my_project/libgit2/README.md	/^MacOS X$/;"	s	chapter:Building libgit2 - Using CMake
Maintenance release	my_project/libgit2/docs/release.md	/^## Maintenance release$/;"	s	chapter:Releasing the library
Major changes	my_project/libgit2/docs/changelog.md	/^## Major changes$/;"	s
Match Surrounding Code	my_project/libgit2/docs/conventions.md	/^## Match Surrounding Code$/;"	s	chapter:Libgit2 Conventions
Memory Ownership	my_project/libgit2/docs/conventions.md	/^## Memory Ownership$/;"	s	chapter:Libgit2 Conventions
Memory allocation and ownership	my_project/libgit2/docs/buffers.md	/^Memory allocation and ownership$/;"	s
Memory leak checking	my_project/libgit2/tests/README.md	/^## Memory leak checking$/;"	s	chapter:libgit2 tests
MemoryBarrier	my_project/libgit2/src/util/win32/mingw-compat.h	/^#define MemoryBarrier /;"	d
Message_Block	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    uint8_t Message_Block[SHA1_Message_Block_Size];$/;"	m	struct:SHA1Context	typeref:typename:uint8_t[]
Message_Block	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    uint8_t Message_Block[SHA256_Message_Block_Size];$/;"	m	struct:SHA256Context	typeref:typename:uint8_t[]
Message_Block	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    uint8_t Message_Block[SHA512_Message_Block_Size];$/;"	m	struct:SHA512Context	typeref:typename:uint8_t[]
Message_Block_Index	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    int_least16_t Message_Block_Index;  \/* Message_Block array index *\/$/;"	m	struct:SHA1Context	typeref:typename:int_least16_t
Message_Block_Index	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    int_least16_t Message_Block_Index;  \/* Message_Block array index *\/$/;"	m	struct:SHA256Context	typeref:typename:int_least16_t
Message_Block_Index	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    int_least16_t Message_Block_Index;  \/* Message_Block array index *\/$/;"	m	struct:SHA512Context	typeref:typename:int_least16_t
MinGW	my_project/libgit2/README.md	/^MinGW$/;"	s	chapter:Building libgit2 - Using CMake
Module	my_project/libgit2/tests/clar/generate.py	/^class Module(object):$/;"	c
MountPoint	my_project/libgit2/src/util/win32/reparse.h	/^		} MountPoint;$/;"	m	union:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a	typeref:struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0308
N	my_project/libgit2/deps/zlib/crc32.c	/^#  define N /;"	d	file:
NAME	my_project/libgit2/deps/zlib/inflate.h	/^    NAME,       \/* i: waiting for end of file name (gzip) *\/$/;"	e	enum:__anona0359fa00103
NAMED_GROUP_LIST_SIZE	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define NAMED_GROUP_LIST_SIZE /;"	d	file:
NAME_STATE	my_project/libgit2/deps/zlib/deflate.h	/^#define NAME_STATE /;"	d
NEEDBITS	my_project/libgit2/deps/zlib/infback.c	/^#define NEEDBITS(/;"	d	file:
NEEDBITS	my_project/libgit2/deps/zlib/inflate.c	/^#define NEEDBITS(/;"	d	file:
NEGATE_CLASS	my_project/libgit2/src/util/wildmatch.c	/^#define NEGATE_CLASS	/;"	d	file:
NEGATE_CLASS2	my_project/libgit2/src/util/wildmatch.c	/^#define NEGATE_CLASS2	/;"	d	file:
NETWORK_XFER_THRESHOLD	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^#define NETWORK_XFER_THRESHOLD /;"	d	file:
NEWLINE	my_project/libgit2/deps/pcre/CMakeLists.txt	/^        set(NEWLINE "-1")$/;"	v
NEWLINE	my_project/libgit2/deps/pcre/CMakeLists.txt	/^        set(NEWLINE "-2")$/;"	v
NEWLINE	my_project/libgit2/deps/pcre/CMakeLists.txt	/^        set(NEWLINE "10")$/;"	v
NEWLINE	my_project/libgit2/deps/pcre/CMakeLists.txt	/^        set(NEWLINE "13")$/;"	v
NEWLINE	my_project/libgit2/deps/pcre/CMakeLists.txt	/^        set(NEWLINE "3338")$/;"	v
NEWLINE	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(NEWLINE "")$/;"	v
NEWLINE	my_project/libgit2/deps/pcre/config.h.in	/^#define NEWLINE	/;"	d	file:
NEWLINE	my_project/libgit2/tests/libgit2/filter/custom.c	/^# define NEWLINE /;"	d	file:
NEW_BRANCH_NAME	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^#define NEW_BRANCH_NAME /;"	d	file:
NEW_BRANCH_NAME	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^#define NEW_BRANCH_NAME /;"	d	file:
NEW_BRANCH_NAME	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^#define NEW_BRANCH_NAME /;"	d	file:
NEXT	my_project/libgit2/src/libgit2/trailer.c	/^#define NEXT(/;"	d	file:
NEXT_PTR	my_project/libgit2/deps/xdiff/xhistogram.c	/^#define NEXT_PTR(/;"	d	file:
NID_commonName	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define NID_commonName /;"	d
NID_subject_alt_name	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define NID_subject_alt_name /;"	d
NIL	my_project/libgit2/deps/zlib/deflate.c	/^#define NIL /;"	d	file:
NLBLOCK	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define NLBLOCK /;"	d	file:
NLBLOCK	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define NLBLOCK /;"	d	file:
NLBLOCK	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define NLBLOCK /;"	d	file:
NLTYPE_ANY	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define NLTYPE_ANY /;"	d
NLTYPE_ANYCRLF	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define NLTYPE_ANYCRLF /;"	d
NLTYPE_FIXED	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define NLTYPE_FIXED /;"	d
NMAX	my_project/libgit2/deps/zlib/adler32.c	/^#define NMAX /;"	d	file:
NOFASTFORWARD_BRANCH	my_project/libgit2/tests/libgit2/merge/analysis.c	/^#define NOFASTFORWARD_BRANCH /;"	d	file:
NOFASTFORWARD_ID	my_project/libgit2/tests/libgit2/merge/analysis.c	/^#define NOFASTFORWARD_ID /;"	d	file:
NONE	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	NONE = 0,$/;"	e	enum:__anon3d590bbe0303	file:
NONE	my_project/libgit2/src/util/net.c	/^		NONE,$/;"	e	enum:git_net_url_parse_scp::__anon850d8ea80503	file:
NONEXISTING_HASH	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^#define NONEXISTING_HASH /;"	d	file:
NONEXISTING_HASH	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^#define NONEXISTING_HASH /;"	d	file:
NON_EXISTING_FILEPATH	my_project/libgit2/tests/util/path/core.c	/^#define NON_EXISTING_FILEPATH /;"	d	file:
NON_EXISTING_HEAD	my_project/libgit2/tests/libgit2/repo/repo_helpers.h	/^#define NON_EXISTING_HEAD /;"	d
NON_FORCE_FETCHSPEC	my_project/libgit2/tests/libgit2/remote/fetch.c	/^static char *NON_FORCE_FETCHSPEC = "refs\/heads\/main:refs\/remotes\/repo1\/main";$/;"	v	typeref:typename:char *	file:
NON_STANDARD_LIB_PREFIX	my_project/libgit2/deps/pcre/CMakeLists.txt	/^	option(NON_STANDARD_LIB_PREFIX$/;"	D
NON_STANDARD_LIB_SUFFIX	my_project/libgit2/deps/pcre/CMakeLists.txt	/^	option(NON_STANDARD_LIB_SUFFIX$/;"	D
NON_UNIQUE	my_project/libgit2/deps/xdiff/xpatience.c	/^#define NON_UNIQUE /;"	d	file:
NOTACHAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define NOTACHAR /;"	d
NOTES_DEFAULT_REF	my_project/libgit2/src/libgit2/rebase.c	/^#define NOTES_DEFAULT_REF /;"	d	file:
NOTIFY_PROGRESS	my_project/libgit2/src/libgit2/stash.c	/^#define NOTIFY_PROGRESS(/;"	d	file:
NOT_FIRSTCHAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define NOT_FIRSTCHAR(/;"	d
NO_GZCOMPRESS	my_project/libgit2/deps/zlib/gzguts.h	/^#  define NO_GZCOMPRESS$/;"	d
NO_MEMCPY	my_project/libgit2/deps/zlib/zutil.h	/^#  define NO_MEMCPY$/;"	d
NO_RECURSE	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(NO_RECURSE 1)$/;"	v
NO_STRNLEN	my_project/libgit2/src/util/strnlen.h	/^#   define NO_STRNLEN$/;"	d
NO_vsnprintf	my_project/libgit2/deps/zlib/gzguts.h	/^#    define NO_vsnprintf$/;"	d
NREFS	my_project/libgit2/tests/libgit2/threads/refdb.c	/^#define NREFS /;"	d	file:
NR_CMD	sdb.c	/^#define NR_CMD /;"	d	file:
NTLM_ASSERT	my_project/libgit2/deps/ntlmclient/ntlm.c	/^#define NTLM_ASSERT(/;"	d	file:
NTLM_ASSERT_ARG	my_project/libgit2/deps/ntlmclient/ntlm.c	/^#define NTLM_ASSERT_ARG(/;"	d	file:
NTLM_CLIENT_DEFAULTS	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^	NTLM_CLIENT_DEFAULTS               = 0,$/;"	e	enum:__anon6e8afca00203
NTLM_CLIENT_DISABLE_NTLM2	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^	NTLM_CLIENT_DISABLE_NTLM2          = (1 << 3),$/;"	e	enum:__anon6e8afca00203
NTLM_CLIENT_DISABLE_REQUEST_TARGET	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^	NTLM_CLIENT_DISABLE_REQUEST_TARGET = (1 << 4)$/;"	e	enum:__anon6e8afca00203
NTLM_CLIENT_DISABLE_UNICODE	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^	NTLM_CLIENT_DISABLE_UNICODE        = (1 << 0),$/;"	e	enum:__anon6e8afca00203
NTLM_CLIENT_ENABLE_LM	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^	NTLM_CLIENT_ENABLE_LM              = (1 << 1),$/;"	e	enum:__anon6e8afca00203
NTLM_CLIENT_ENABLE_NTLM	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^	NTLM_CLIENT_ENABLE_NTLM            = (1 << 2),$/;"	e	enum:__anon6e8afca00203
NTLM_CLIENT_ERROR	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^	NTLM_CLIENT_ERROR = -1,$/;"	e	enum:__anon6e8afca00103
NTLM_CLIENT_ERROR_INVALID_INPUT	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^	NTLM_CLIENT_ERROR_INVALID_INPUT = -2$/;"	e	enum:__anon6e8afca00103
NTLM_CLIENT_VERSION	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^#define NTLM_CLIENT_VERSION /;"	d
NTLM_CLIENT_VERSION_MAJOR	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^#define NTLM_CLIENT_VERSION_MAJOR /;"	d
NTLM_CLIENT_VERSION_MINOR	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^#define NTLM_CLIENT_VERSION_MINOR /;"	d
NTLM_CLIENT_VERSION_TEENY	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^#define NTLM_CLIENT_VERSION_TEENY /;"	d
NTLM_ENABLE_HOSTVERSION	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_ENABLE_HOSTVERSION = (1 << 31)$/;"	e	enum:__anondc54b7e10503
NTLM_EXTERN	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^# define NTLM_EXTERN(/;"	d
NTLM_LM_PLAINTEXT	my_project/libgit2/deps/ntlmclient/ntlm.h	/^#define NTLM_LM_PLAINTEXT /;"	d
NTLM_LM_RESPONSE_LEN	my_project/libgit2/deps/ntlmclient/ntlm.h	/^#define NTLM_LM_RESPONSE_LEN /;"	d
NTLM_NEGOTIATE_ALWAYS_SIGN	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_ALWAYS_SIGN = 0x00008000,$/;"	e	enum:__anondc54b7e10703
NTLM_NEGOTIATE_DOMAIN_SUPPLIED	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_DOMAIN_SUPPLIED = 0x00001000,$/;"	e	enum:__anondc54b7e10703
NTLM_NEGOTIATE_LOCAL_CALL	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_LOCAL_CALL = 0x00004000,$/;"	e	enum:__anondc54b7e10703
NTLM_NEGOTIATE_NTLM	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_NTLM = 0x00000200,$/;"	e	enum:__anondc54b7e10703
NTLM_NEGOTIATE_NTLM2_SIGN_AND_SEAL	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_NTLM2_SIGN_AND_SEAL = 0x00080000,$/;"	e	enum:__anondc54b7e10703
NTLM_NEGOTIATE_OEM	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_OEM = 0x00000002,$/;"	e	enum:__anondc54b7e10703
NTLM_NEGOTIATE_REQUEST_TARGET	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_REQUEST_TARGET = 0x00000004,$/;"	e	enum:__anondc54b7e10703
NTLM_NEGOTIATE_TARGET_INFO	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_TARGET_INFO = 0x00800000,$/;"	e	enum:__anondc54b7e10703
NTLM_NEGOTIATE_TYPE_DOMAIN	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_TYPE_DOMAIN = 0x00010000,$/;"	e	enum:__anondc54b7e10703
NTLM_NEGOTIATE_UNICODE	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_UNICODE = 0x00000001,$/;"	e	enum:__anondc54b7e10703
NTLM_NEGOTIATE_VERSION	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_VERSION = 0x01000000$/;"	e	enum:__anondc54b7e10703
NTLM_NEGOTIATE_WORKSTATION_SUPPLIED	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_NEGOTIATE_WORKSTATION_SUPPLIED = 0x00002000,$/;"	e	enum:__anondc54b7e10703
NTLM_NTLM2_HASH_LEN	my_project/libgit2/deps/ntlmclient/ntlm.h	/^#define NTLM_NTLM2_HASH_LEN /;"	d
NTLM_NTLM_HASH_LEN	my_project/libgit2/deps/ntlmclient/ntlm.h	/^#define NTLM_NTLM_HASH_LEN /;"	d
NTLM_NTLM_RESPONSE_LEN	my_project/libgit2/deps/ntlmclient/ntlm.h	/^#define NTLM_NTLM_RESPONSE_LEN /;"	d
NTLM_SIGNATURE	my_project/libgit2/deps/ntlmclient/ntlm.h	/^#define NTLM_SIGNATURE /;"	d
NTLM_STATE_CHALLENGE	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_STATE_CHALLENGE = 1,$/;"	e	enum:__anondc54b7e10103
NTLM_STATE_COMPLETE	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_STATE_COMPLETE = 4$/;"	e	enum:__anondc54b7e10103
NTLM_STATE_ERROR	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_STATE_ERROR = 3,$/;"	e	enum:__anondc54b7e10103
NTLM_STATE_NEGOTIATE	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_STATE_NEGOTIATE = 0,$/;"	e	enum:__anondc54b7e10103
NTLM_STATE_RESPONSE	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_STATE_RESPONSE = 2,$/;"	e	enum:__anondc54b7e10103
NTLM_TARGET_INFO_DOMAIN	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_TARGET_INFO_DOMAIN = 2,$/;"	e	enum:__anondc54b7e10603
NTLM_TARGET_INFO_DOMAIN_DNS	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_TARGET_INFO_DOMAIN_DNS = 4$/;"	e	enum:__anondc54b7e10603
NTLM_TARGET_INFO_END	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_TARGET_INFO_END = 0,$/;"	e	enum:__anondc54b7e10603
NTLM_TARGET_INFO_SERVER	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_TARGET_INFO_SERVER = 1,$/;"	e	enum:__anondc54b7e10603
NTLM_TARGET_INFO_SERVER_DNS	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	NTLM_TARGET_INFO_SERVER_DNS = 3,$/;"	e	enum:__anondc54b7e10603
NTLM_UNICODE_MAX_LEN	my_project/libgit2/deps/ntlmclient/unicode.h	/^#define NTLM_UNICODE_MAX_LEN	/;"	d
NTLM_UNUSED	my_project/libgit2/deps/ntlmclient/ntlm.h	/^#define NTLM_UNUSED(/;"	d
NUM_VARS	my_project/libgit2/tests/libgit2/core/env.c	/^#define NUM_VARS /;"	d	file:
Naming	my_project/libgit2/docs/coding-style.md	/^### Naming$/;"	S	section:libgit2 Coding Style""C Coding Style
Naming	my_project/libgit2/tests/benchmarks/README.md	/^### Naming$/;"	S	section:libgit2 benchmarks""Writing benchmark tests
Naming Things	my_project/libgit2/docs/conventions.md	/^## Naming Things$/;"	s	chapter:Libgit2 Conventions
New Contributors	my_project/libgit2/docs/changelog.md	/^## New Contributors$/;"	s
New Features	my_project/libgit2/docs/changelog.md	/^## New Features$/;"	s
New features	my_project/libgit2/docs/changelog.md	/^## New features$/;"	s
New features	my_project/libgit2/docs/changelog.md	/^### New features$/;"	S	section:Other changes
New features	my_project/libgit2/docs/changelog.md	/^### New features$/;"	S	section:What's Changed
Nh	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int Nl, Nh;$/;"	m	struct:__anone07cb6fd0108	typeref:typename:unsigned int
Nh	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int Nl, Nh;$/;"	m	struct:__anone07cb6fd0208	typeref:typename:unsigned int
Nl	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int Nl, Nh;$/;"	m	struct:__anone07cb6fd0108	typeref:typename:unsigned int
Nl	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int Nl, Nh;$/;"	m	struct:__anone07cb6fd0208	typeref:typename:unsigned int
OCTO1_BRANCH	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define OCTO1_BRANCH	/;"	d	file:
OCTO1_OID	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define OCTO1_OID	/;"	d	file:
OCTO2_BRANCH	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define OCTO2_BRANCH	/;"	d	file:
OCTO2_OID	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define OCTO2_OID	/;"	d	file:
OCTO3_BRANCH	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define OCTO3_BRANCH	/;"	d	file:
OCTO3_OID	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define OCTO3_OID	/;"	d	file:
OCTO4_BRANCH	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define OCTO4_BRANCH	/;"	d	file:
OCTO4_OID	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define OCTO4_OID	/;"	d	file:
OCTO5_BRANCH	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define OCTO5_BRANCH	/;"	d	file:
OCTO5_OID	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define OCTO5_OID	/;"	d	file:
OF	my_project/libgit2/deps/zlib/zconf.h	/^#    define OF(/;"	d
OFLOW_MAX	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define OFLOW_MAX /;"	d	file:
OID0	my_project/libgit2/tests/libgit2/grafts/parse.c	/^#define OID0 /;"	d	file:
OID1	my_project/libgit2/tests/libgit2/grafts/parse.c	/^#define OID1 /;"	d	file:
OID1_HEX	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^#define OID1_HEX /;"	d	file:
OID1_STR	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^#define OID1_STR /;"	d	file:
OID2	my_project/libgit2/tests/libgit2/grafts/parse.c	/^#define OID2 /;"	d	file:
OID2_HEX	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^#define OID2_HEX /;"	d	file:
OID2_STR	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^#define OID2_STR /;"	d	file:
OID3	my_project/libgit2/tests/libgit2/grafts/parse.c	/^#define OID3 /;"	d	file:
OID4	my_project/libgit2/tests/libgit2/grafts/parse.c	/^#define OID4 /;"	d	file:
OID5	my_project/libgit2/tests/libgit2/grafts/parse.c	/^#define OID5 /;"	d	file:
OID6	my_project/libgit2/tests/libgit2/grafts/parse.c	/^#define OID6 /;"	d	file:
OID7	my_project/libgit2/tests/libgit2/grafts/parse.c	/^#define OID7 /;"	d	file:
OID8	my_project/libgit2/tests/libgit2/grafts/parse.c	/^#define OID8 /;"	d	file:
OID_NONHEX	my_project/libgit2/tests/libgit2/grafts/parse.c	/^#define OID_NONHEX /;"	d	file:
OID_TRUNCATED	my_project/libgit2/tests/libgit2/grafts/parse.c	/^#define OID_TRUNCATED /;"	d	file:
ONCE_INIT	my_project/libgit2/deps/zlib/crc32.c	/^#define ONCE_INIT /;"	d	file:
ONE_ANCESTOR_OID	my_project/libgit2/tests/libgit2/index/reuc.c	/^#define ONE_ANCESTOR_OID /;"	d	file:
ONE_LEVEL_AND_REFSPEC	my_project/libgit2/tests/libgit2/refs/normalize.c	/^#define ONE_LEVEL_AND_REFSPEC /;"	d	file:
ONE_OUR_OID	my_project/libgit2/tests/libgit2/index/reuc.c	/^#define ONE_OUR_OID /;"	d	file:
ONE_THEIR_OID	my_project/libgit2/tests/libgit2/index/reuc.c	/^#define ONE_THEIR_OID /;"	d	file:
ONTO_FILE	my_project/libgit2/src/libgit2/rebase.c	/^#define ONTO_FILE /;"	d	file:
ONTO_NAME_FILE	my_project/libgit2/src/libgit2/rebase.c	/^#define ONTO_NAME_FILE /;"	d	file:
OP1	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define OP1(/;"	d	file:
OP2	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define OP2(/;"	d	file:
OPENSSL_CA_LOCATIONS	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^				set(OPENSSL_CA_LOCATIONS$/;"	v
OPENSSL_CMD	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^				set(OPENSSL_CMD "\/usr\/local\/opt\/openssl\/bin\/openssl")$/;"	v
OPENSSL_CMD	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^				set(OPENSSL_CMD "openssl")$/;"	v
OPENSSL_free	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define OPENSSL_free(/;"	d
OPENSSL_init_ssl	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*OPENSSL_init_ssl)(uint64_t opts, const void *settings);$/;"	v	typeref:typename:int (*)(uint64_t opts,const void * settings)
OPENSSL_init_ssl	my_project/libgit2/src/libgit2/streams/openssl_legacy.h	/^# define OPENSSL_init_ssl /;"	d
OPENSSL_init_ssl__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^int OPENSSL_init_ssl__legacy(uint64_t opts, const void *settings)$/;"	f	typeref:typename:int
OPENSSL_malloc	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define OPENSSL_malloc(/;"	d
OPENSSL_sk_free	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*OPENSSL_sk_free)(void *sk);$/;"	v	typeref:typename:void (*)(void * sk)
OPENSSL_sk_num	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*OPENSSL_sk_num)(const void *sk);$/;"	v	typeref:typename:int (*)(const void * sk)
OPENSSL_sk_value	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void *(*OPENSSL_sk_value)(const void *sk, int i);$/;"	v	typeref:typename:void * (*)(const void * sk,int i)
OP_ACCEPT	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_ACCEPT,         \/* 158 *\/$/;"	e	enum:__anon9562267c0203
OP_ALLANY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_ALLANY,         \/* 13 Match any character *\/$/;"	e	enum:__anon9562267c0203
OP_ALT	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_ALT,            \/* 119 Start of alternation *\/$/;"	e	enum:__anon9562267c0203
OP_ANY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_ANY,            \/* 12 Match any character except newline (\\N) *\/$/;"	e	enum:__anon9562267c0203
OP_ANYBYTE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_ANYBYTE,        \/* 14 Match any byte (\\C); different to OP_ANY for UTF-8 *\/$/;"	e	enum:__anon9562267c0203
OP_ANYNL	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_ANYNL,          \/* 17 \\R (any newline sequence) *\/$/;"	e	enum:__anon9562267c0203
OP_ANYNL_EXTRA	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define OP_ANYNL_EXTRA /;"	d	file:
OP_ASSERT	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_ASSERT,         \/* 125 Positive lookahead *\/$/;"	e	enum:__anon9562267c0203
OP_ASSERTBACK	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_ASSERTBACK,     \/* 127 Positive lookbehind *\/$/;"	e	enum:__anon9562267c0203
OP_ASSERTBACK_NOT	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_ASSERTBACK_NOT, \/* 128 Negative lookbehind *\/$/;"	e	enum:__anon9562267c0203
OP_ASSERT_ACCEPT	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_ASSERT_ACCEPT,  \/* 159 Used inside assertions *\/$/;"	e	enum:__anon9562267c0203
OP_ASSERT_NOT	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_ASSERT_NOT,     \/* 126 Negative lookahead *\/$/;"	e	enum:__anon9562267c0203
OP_BRA	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_BRA,            \/* 131 Start of non-capturing bracket *\/$/;"	e	enum:__anon9562267c0203
OP_BRAMINZERO	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_BRAMINZERO,     \/* 147 order. *\/$/;"	e	enum:__anon9562267c0203
OP_BRAPOS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_BRAPOS,         \/* 132 Ditto, with unlimited, possessive repeat *\/$/;"	e	enum:__anon9562267c0203
OP_BRAPOSZERO	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_BRAPOSZERO,     \/* 148 *\/$/;"	e	enum:__anon9562267c0203
OP_BRAZERO	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_BRAZERO,        \/* 146 These two must remain together and in this *\/$/;"	e	enum:__anon9562267c0203
OP_CALLOUT	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CALLOUT,        \/* 118 Call out to external function if provided *\/$/;"	e	enum:__anon9562267c0203
OP_CBRA	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CBRA,           \/* 133 Start of capturing bracket *\/$/;"	e	enum:__anon9562267c0203
OP_CBRAPOS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CBRAPOS,        \/* 134 Ditto, with unlimited, possessive repeat *\/$/;"	e	enum:__anon9562267c0203
OP_CHAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CHAR,           \/* 29 Match one character, casefully *\/$/;"	e	enum:__anon9562267c0203
OP_CHARI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CHARI,          \/* 30 Match one character, caselessly *\/$/;"	e	enum:__anon9562267c0203
OP_CIRC	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CIRC,           \/* 27 Start of line - not multiline *\/$/;"	e	enum:__anon9562267c0203
OP_CIRCM	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CIRCM,          \/* 28 Start of line - multiline *\/$/;"	e	enum:__anon9562267c0203
OP_CLASS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CLASS,          \/* 110 Match a character class, chars < 256 only *\/$/;"	e	enum:__anon9562267c0203
OP_CLOSE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CLOSE,          \/* 160 Used before OP_ACCEPT to close open captures *\/$/;"	e	enum:__anon9562267c0203
OP_COMMIT	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_COMMIT,         \/* 156 *\/$/;"	e	enum:__anon9562267c0203
OP_COND	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_COND,           \/* 135 Conditional group *\/$/;"	e	enum:__anon9562267c0203
OP_CREF	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CREF,           \/* 141 Used to hold a capture number as condition *\/$/;"	e	enum:__anon9562267c0203
OP_CRMINPLUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRMINPLUS,      \/* 101 be in exactly the same order as those above. *\/$/;"	e	enum:__anon9562267c0203
OP_CRMINQUERY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRMINQUERY,     \/* 103 *\/$/;"	e	enum:__anon9562267c0203
OP_CRMINRANGE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRMINRANGE,     \/* 105 *\/$/;"	e	enum:__anon9562267c0203
OP_CRMINSTAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRMINSTAR,      \/* 99 all these opcodes must come in pairs, with *\/$/;"	e	enum:__anon9562267c0203
OP_CRPLUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRPLUS,         \/* 100 the minimizing one second. These codes must *\/$/;"	e	enum:__anon9562267c0203
OP_CRPOSPLUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRPOSPLUS,      \/* 107 *\/$/;"	e	enum:__anon9562267c0203
OP_CRPOSQUERY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRPOSQUERY,     \/* 108 *\/$/;"	e	enum:__anon9562267c0203
OP_CRPOSRANGE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRPOSRANGE,     \/* 109 *\/$/;"	e	enum:__anon9562267c0203
OP_CRPOSSTAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRPOSSTAR,      \/* 106 Possessified versions *\/$/;"	e	enum:__anon9562267c0203
OP_CRQUERY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRQUERY,        \/* 102 *\/$/;"	e	enum:__anon9562267c0203
OP_CRRANGE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRRANGE,        \/* 104 These are different to the three sets above. *\/$/;"	e	enum:__anon9562267c0203
OP_CRSTAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_CRSTAR,         \/* 98 The maximizing and minimizing versions of *\/$/;"	e	enum:__anon9562267c0203
OP_DEF	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_DEF,            \/* 145 The DEFINE condition *\/$/;"	e	enum:__anon9562267c0203
OP_DIGIT	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_DIGIT,              \/*  7 \\d *\/$/;"	e	enum:__anon9562267c0203
OP_DNCREF	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_DNCREF,         \/* 142 Used to point to duplicate names as a condition *\/$/;"	e	enum:__anon9562267c0203
OP_DNREF	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_DNREF,          \/* 115 Match a duplicate name backref, casefully *\/$/;"	e	enum:__anon9562267c0203
OP_DNREFI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_DNREFI,         \/* 116 Match a duplicate name backref, caselessly *\/$/;"	e	enum:__anon9562267c0203
OP_DNRREF	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_DNRREF,         \/* 144 Used to point to duplicate names as a condition *\/$/;"	e	enum:__anon9562267c0203
OP_DOLL	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_DOLL,           \/* 25 End of line - not multiline *\/$/;"	e	enum:__anon9562267c0203
OP_DOLLM	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_DOLLM,          \/* 26 End of line - multiline *\/$/;"	e	enum:__anon9562267c0203
OP_END	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_END,            \/* 0 End of pattern *\/$/;"	e	enum:__anon9562267c0203
OP_EOD	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_EOD,            \/* 24 End of data (\\z) *\/$/;"	e	enum:__anon9562267c0203
OP_EODN	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_EODN,           \/* 23 End of data or \\n at end of data (\\Z) *\/$/;"	e	enum:__anon9562267c0203
OP_EXACT	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_EXACT,          \/* 41 Exactly n matches *\/$/;"	e	enum:__anon9562267c0203
OP_EXACTI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_EXACTI,         \/* 54 *\/$/;"	e	enum:__anon9562267c0203
OP_EXTUNI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_EXTUNI,         \/* 22 \\X (extended Unicode sequence *\/$/;"	e	enum:__anon9562267c0203
OP_EXTUNI_EXTRA	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define OP_EXTUNI_EXTRA /;"	d	file:
OP_FAIL	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_FAIL,           \/* 157 *\/$/;"	e	enum:__anon9562267c0203
OP_FLAGS	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define OP_FLAGS(/;"	d	file:
OP_HSPACE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_HSPACE,         \/* 19 \\h (horizontal whitespace) *\/$/;"	e	enum:__anon9562267c0203
OP_HSPACE_EXTRA	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define OP_HSPACE_EXTRA /;"	d	file:
OP_KET	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_KET,            \/* 120 End of group that doesn't have an unbounded repeat *\/$/;"	e	enum:__anon9562267c0203
OP_KETRMAX	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_KETRMAX,        \/* 121 These two must remain together and in this *\/$/;"	e	enum:__anon9562267c0203
OP_KETRMIN	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_KETRMIN,        \/* 122 order. They are for groups the repeat for ever. *\/$/;"	e	enum:__anon9562267c0203
OP_KETRPOS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_KETRPOS,        \/* 123 Possessive unlimited repeat. *\/$/;"	e	enum:__anon9562267c0203
OP_LENGTHS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define OP_LENGTHS /;"	d
OP_MARK	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_MARK,           \/* 149 always has an argument *\/$/;"	e	enum:__anon9562267c0203
OP_MINPLUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINPLUS,        \/* 36 *\/$/;"	e	enum:__anon9562267c0203
OP_MINPLUSI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINPLUSI,       \/* 49 *\/$/;"	e	enum:__anon9562267c0203
OP_MINQUERY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINQUERY,       \/* 38 *\/$/;"	e	enum:__anon9562267c0203
OP_MINQUERYI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINQUERYI,      \/* 51 *\/$/;"	e	enum:__anon9562267c0203
OP_MINSTAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINSTAR,        \/* 34 these six opcodes must come in pairs, with *\/$/;"	e	enum:__anon9562267c0203
OP_MINSTARI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINSTARI,       \/* 47 *\/$/;"	e	enum:__anon9562267c0203
OP_MINUPTO	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINUPTO,        \/* 40 *\/$/;"	e	enum:__anon9562267c0203
OP_MINUPTOI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_MINUPTOI,       \/* 53 *\/$/;"	e	enum:__anon9562267c0203
OP_NAME_LIST	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define OP_NAME_LIST /;"	d
OP_NCLASS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NCLASS,         \/* 111 Same, but the bitmap was created from a negative$/;"	e	enum:__anon9562267c0203
OP_NOT	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOT,            \/* 31 Match one character, not the given one, casefully *\/$/;"	e	enum:__anon9562267c0203
OP_NOTEXACT	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTEXACT,       \/* 67 Exactly n matches *\/$/;"	e	enum:__anon9562267c0203
OP_NOTEXACTI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTEXACTI,      \/* 80 Exactly n matches *\/$/;"	e	enum:__anon9562267c0203
OP_NOTI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTI,           \/* 32 Match one character, not the given one, caselessly *\/$/;"	e	enum:__anon9562267c0203
OP_NOTMINPLUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINPLUS,     \/* 62 exactly the same order as those above. *\/$/;"	e	enum:__anon9562267c0203
OP_NOTMINPLUSI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINPLUSI,    \/* 75 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTMINQUERY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINQUERY,    \/* 64 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTMINQUERYI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINQUERYI,   \/* 77 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTMINSTAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINSTAR,     \/* 60 these six opcodes must come in pairs, with *\/$/;"	e	enum:__anon9562267c0203
OP_NOTMINSTARI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINSTARI,    \/* 73 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTMINUPTO	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINUPTO,     \/* 66 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTMINUPTOI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTMINUPTOI,    \/* 79 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTPLUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPLUS,        \/* 61 the minimizing one second. They must be in *\/$/;"	e	enum:__anon9562267c0203
OP_NOTPLUSI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPLUSI,       \/* 74 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTPOSPLUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSPLUS,     \/* 69 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTPOSPLUSI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSPLUSI,    \/* 82 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTPOSQUERY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSQUERY,    \/* 70 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTPOSQUERYI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSQUERYI,   \/* 83 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTPOSSTAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSSTAR,     \/* 68 Possessified versions, caseful *\/$/;"	e	enum:__anon9562267c0203
OP_NOTPOSSTARI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSSTARI,    \/* 81 Possessified versions, caseless *\/$/;"	e	enum:__anon9562267c0203
OP_NOTPOSUPTO	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSUPTO,     \/* 71 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTPOSUPTOI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPOSUPTOI,    \/* 84 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTPROP	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTPROP,        \/* 15 \\P (not Unicode property) *\/$/;"	e	enum:__anon9562267c0203
OP_NOTQUERY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTQUERY,       \/* 63 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTQUERYI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTQUERYI,      \/* 76 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTSTAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTSTAR,        \/* 59 The maximizing and minimizing versions of *\/$/;"	e	enum:__anon9562267c0203
OP_NOTSTARI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTSTARI,       \/* 72 *\/$/;"	e	enum:__anon9562267c0203
OP_NOTUPTO	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTUPTO,        \/* 65 From 0 to n matches, caseful *\/$/;"	e	enum:__anon9562267c0203
OP_NOTUPTOI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOTUPTOI,       \/* 78 From 0 to n matches, caseless *\/$/;"	e	enum:__anon9562267c0203
OP_NOT_DIGIT	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOT_DIGIT,          \/*  6 \\D *\/$/;"	e	enum:__anon9562267c0203
OP_NOT_HSPACE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOT_HSPACE,     \/* 18 \\H (not horizontal whitespace) *\/$/;"	e	enum:__anon9562267c0203
OP_NOT_VSPACE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOT_VSPACE,     \/* 20 \\V (not vertical whitespace) *\/$/;"	e	enum:__anon9562267c0203
OP_NOT_WHITESPACE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOT_WHITESPACE,     \/*  8 \\S *\/$/;"	e	enum:__anon9562267c0203
OP_NOT_WORDCHAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOT_WORDCHAR,       \/* 10 \\W *\/$/;"	e	enum:__anon9562267c0203
OP_NOT_WORD_BOUNDARY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_NOT_WORD_BOUNDARY,  \/*  4 \\B *\/$/;"	e	enum:__anon9562267c0203
OP_ONCE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_ONCE,           \/* 129 Atomic group, contains captures *\/$/;"	e	enum:__anon9562267c0203
OP_ONCE_NC	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_ONCE_NC,        \/* 130 Atomic group containing no captures *\/$/;"	e	enum:__anon9562267c0203
OP_PLUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_PLUS,           \/* 35 the minimizing one second. *\/$/;"	e	enum:__anon9562267c0203
OP_PLUSI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_PLUSI,          \/* 48 *\/$/;"	e	enum:__anon9562267c0203
OP_POSPLUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSPLUS,        \/* 43 Possessified plus, caseful *\/$/;"	e	enum:__anon9562267c0203
OP_POSPLUSI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSPLUSI,       \/* 56 Possessified plus, caseless *\/$/;"	e	enum:__anon9562267c0203
OP_POSQUERY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSQUERY,       \/* 44 Posesssified query, caseful *\/$/;"	e	enum:__anon9562267c0203
OP_POSQUERYI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSQUERYI,      \/* 57 Posesssified query, caseless *\/$/;"	e	enum:__anon9562267c0203
OP_POSSTAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSSTAR,        \/* 42 Possessified star, caseful *\/$/;"	e	enum:__anon9562267c0203
OP_POSSTARI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSSTARI,       \/* 55 Possessified star, caseless *\/$/;"	e	enum:__anon9562267c0203
OP_POSUPTO	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSUPTO,        \/* 45 Possessified upto, caseful *\/$/;"	e	enum:__anon9562267c0203
OP_POSUPTOI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_POSUPTOI,       \/* 58 Possessified upto, caseless *\/$/;"	e	enum:__anon9562267c0203
OP_PROP	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_PROP,           \/* 16 \\p (Unicode property) *\/$/;"	e	enum:__anon9562267c0203
OP_PROP_EXTRA	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define OP_PROP_EXTRA /;"	d	file:
OP_PRUNE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_PRUNE,          \/* 150 *\/$/;"	e	enum:__anon9562267c0203
OP_PRUNE_ARG	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_PRUNE_ARG,      \/* 151 same, but with argument *\/$/;"	e	enum:__anon9562267c0203
OP_QUERY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_QUERY,          \/* 37 *\/$/;"	e	enum:__anon9562267c0203
OP_QUERYI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_QUERYI,         \/* 50 *\/$/;"	e	enum:__anon9562267c0203
OP_RECURSE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_RECURSE,        \/* 117 Match a numbered subpattern (possibly recursive) *\/$/;"	e	enum:__anon9562267c0203
OP_REF	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_REF,            \/* 113 Match a back reference, casefully *\/$/;"	e	enum:__anon9562267c0203
OP_REFI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_REFI,           \/* 114 Match a back reference, caselessly *\/$/;"	e	enum:__anon9562267c0203
OP_REVERSE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_REVERSE,        \/* 124 Move pointer back - used in lookbehind assertions *\/$/;"	e	enum:__anon9562267c0203
OP_RREF	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_RREF,           \/* 143 Used to hold a recursion number as condition *\/$/;"	e	enum:__anon9562267c0203
OP_SBRA	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_SBRA,           \/* 136 Start of non-capturing bracket, check empty  *\/$/;"	e	enum:__anon9562267c0203
OP_SBRAPOS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_SBRAPOS,        \/* 137 Ditto, with unlimited, possessive repeat *\/$/;"	e	enum:__anon9562267c0203
OP_SCBRA	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_SCBRA,          \/* 138 Start of capturing bracket, check empty *\/$/;"	e	enum:__anon9562267c0203
OP_SCBRAPOS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_SCBRAPOS,       \/* 139 Ditto, with unlimited, possessive repeat *\/$/;"	e	enum:__anon9562267c0203
OP_SCOND	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_SCOND,          \/* 140 Conditional group, check empty *\/$/;"	e	enum:__anon9562267c0203
OP_SET_SOM	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_SET_SOM,        \/* 3 Set start of match (\\K) *\/$/;"	e	enum:__anon9562267c0203
OP_SKIP	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_SKIP,           \/* 152 *\/$/;"	e	enum:__anon9562267c0203
OP_SKIPZERO	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_SKIPZERO,       \/* 161 *\/$/;"	e	enum:__anon9562267c0203
OP_SKIP_ARG	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_SKIP_ARG,       \/* 153 same, but with argument *\/$/;"	e	enum:__anon9562267c0203
OP_SOD	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_SOD,            \/* 1 Start of data: \\A *\/$/;"	e	enum:__anon9562267c0203
OP_SOM	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_SOM,            \/* 2 Start of match (subject + offset): \\G *\/$/;"	e	enum:__anon9562267c0203
OP_STAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_STAR,           \/* 33 The maximizing and minimizing versions of *\/$/;"	e	enum:__anon9562267c0203
OP_STARI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_STARI,          \/* 46 *\/$/;"	e	enum:__anon9562267c0203
OP_TABLE_LENGTH	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_TABLE_LENGTH$/;"	e	enum:__anon9562267c0203
OP_THEN	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_THEN,           \/* 154 *\/$/;"	e	enum:__anon9562267c0203
OP_THEN_ARG	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_THEN_ARG,       \/* 155 same, but with argument *\/$/;"	e	enum:__anon9562267c0203
OP_THEN_TRAP	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define OP_THEN_TRAP /;"	d	file:
OP_TYPEEXACT	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEEXACT,      \/* 93 Exactly n matches *\/$/;"	e	enum:__anon9562267c0203
OP_TYPEMINPLUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEMINPLUS,    \/* 88 be in exactly the same order as those above. *\/$/;"	e	enum:__anon9562267c0203
OP_TYPEMINQUERY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEMINQUERY,   \/* 90 *\/$/;"	e	enum:__anon9562267c0203
OP_TYPEMINSTAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEMINSTAR,    \/* 86 these six opcodes must come in pairs, with *\/$/;"	e	enum:__anon9562267c0203
OP_TYPEMINUPTO	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEMINUPTO,    \/* 92 *\/$/;"	e	enum:__anon9562267c0203
OP_TYPEPLUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEPLUS,       \/* 87 the minimizing one second. These codes must *\/$/;"	e	enum:__anon9562267c0203
OP_TYPEPOSPLUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEPOSPLUS,    \/* 95 *\/$/;"	e	enum:__anon9562267c0203
OP_TYPEPOSQUERY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEPOSQUERY,   \/* 96 *\/$/;"	e	enum:__anon9562267c0203
OP_TYPEPOSSTAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEPOSSTAR,    \/* 94 Possessified versions *\/$/;"	e	enum:__anon9562267c0203
OP_TYPEPOSUPTO	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEPOSUPTO,    \/* 97 *\/$/;"	e	enum:__anon9562267c0203
OP_TYPEQUERY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEQUERY,      \/* 89 *\/$/;"	e	enum:__anon9562267c0203
OP_TYPESTAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPESTAR,       \/* 85 The maximizing and minimizing versions of *\/$/;"	e	enum:__anon9562267c0203
OP_TYPEUPTO	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_TYPEUPTO,       \/* 91 From 0 to n matches *\/$/;"	e	enum:__anon9562267c0203
OP_UPTO	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_UPTO,           \/* 39 From 0 to n matches of one character, caseful*\/$/;"	e	enum:__anon9562267c0203
OP_UPTOI	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_UPTOI,          \/* 52 From 0 to n matches of one character, caseless *\/$/;"	e	enum:__anon9562267c0203
OP_VSPACE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_VSPACE,         \/* 21 \\v (vertical whitespace) *\/$/;"	e	enum:__anon9562267c0203
OP_VSPACE_EXTRA	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define OP_VSPACE_EXTRA /;"	d	file:
OP_WHITESPACE	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_WHITESPACE,         \/*  9 \\s *\/$/;"	e	enum:__anon9562267c0203
OP_WORDCHAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_WORDCHAR,           \/* 11 \\w *\/$/;"	e	enum:__anon9562267c0203
OP_WORD_BOUNDARY	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_WORD_BOUNDARY,      \/*  5 \\b *\/$/;"	e	enum:__anon9562267c0203
OP_XCLASS	my_project/libgit2/deps/pcre/pcre_internal.h	/^  OP_XCLASS,         \/* 112 Extended class for handling > 255 chars within the$/;"	e	enum:__anon9562267c0203
OP_lengths	my_project/libgit2/deps/pcre/pcre_tables.c	/^const pcre_uint8 PRIV(OP_lengths)[] = { OP_LENGTHS };$/;"	v	typeref:typename:const pcre_uint8 PRIV ()[]
ORIG_DETACHED_HEAD	my_project/libgit2/src/libgit2/rebase.c	/^#define ORIG_DETACHED_HEAD /;"	d	file:
ORIG_HEAD	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define ORIG_HEAD	/;"	d	file:
ORIG_HEAD_FILE	my_project/libgit2/src/libgit2/rebase.c	/^#define ORIG_HEAD_FILE /;"	d	file:
OS	my_project/libgit2/deps/zlib/inflate.h	/^    OS,         \/* i: waiting for extra flags and operating system (gzip) *\/$/;"	e	enum:__anona0359fa00103
OS2	my_project/libgit2/deps/zlib/zconf.h	/^#  define OS2$/;"	d
OS_CODE	my_project/libgit2/deps/zlib/zutil.h	/^#    define OS_CODE /;"	d
OS_CODE	my_project/libgit2/deps/zlib/zutil.h	/^#  define OS_CODE /;"	d
OURS_DIRECTORY_FILE	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define OURS_DIRECTORY_FILE	/;"	d	file:
OURS_DIRECTORY_FILE	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define OURS_DIRECTORY_FILE	/;"	d	file:
OUTPUT_DIFF	my_project/libgit2/examples/diff.c	/^	OUTPUT_DIFF = (1 << 0),$/;"	e	enum:__anonaa3048640103	file:
OUTPUT_NUMSTAT	my_project/libgit2/examples/diff.c	/^	OUTPUT_NUMSTAT = (1 << 3),$/;"	e	enum:__anonaa3048640103	file:
OUTPUT_SHORTSTAT	my_project/libgit2/examples/diff.c	/^	OUTPUT_SHORTSTAT = (1 << 2),$/;"	e	enum:__anonaa3048640103	file:
OUTPUT_STAT	my_project/libgit2/examples/diff.c	/^	OUTPUT_STAT = (1 << 1),$/;"	e	enum:__anonaa3048640103	file:
OUTPUT_SUMMARY	my_project/libgit2/examples/diff.c	/^	OUTPUT_SUMMARY = (1 << 4)$/;"	e	enum:__anonaa3048640103	file:
OVECTOR	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define OVECTOR(/;"	d	file:
OVECTOR_PRIV	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define OVECTOR_PRIV(/;"	d	file:
OVECTOR_START	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define OVECTOR_START /;"	d	file:
OVFLBIT	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define OVFLBIT /;"	d	file:
OVFLMASK	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define OVFLMASK /;"	d	file:
OWNING_SUBTRANSPORT	my_project/libgit2/src/libgit2/transports/git.c	/^#define OWNING_SUBTRANSPORT(/;"	d	file:
OWNING_SUBTRANSPORT	my_project/libgit2/src/libgit2/transports/http.c	/^#define OWNING_SUBTRANSPORT(/;"	d	file:
OWNING_SUBTRANSPORT	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^#define OWNING_SUBTRANSPORT(/;"	d	file:
OWNING_SUBTRANSPORT	my_project/libgit2/src/libgit2/transports/winhttp.c	/^#define OWNING_SUBTRANSPORT(/;"	d	file:
O_BINARY	my_project/libgit2/src/util/posix.h	/^#define O_BINARY /;"	d
O_CLOEXEC	my_project/libgit2/src/util/posix.h	/^#define O_CLOEXEC /;"	d
O_FSYNC	my_project/libgit2/src/util/futils.h	/^# define O_FSYNC /;"	d
Objects	my_project/libgit2/docs/buffers.md	/^## Objects$/;"	s
On Windows	my_project/libgit2/docs/threading.md	/^On Windows$/;"	s	chapter:Threading and cryptographic libraries
On macOS	my_project/libgit2/docs/threading.md	/^On macOS$/;"	s	chapter:Threading and cryptographic libraries
Option Structures	my_project/libgit2/docs/conventions.md	/^## Option Structures$/;"	s	chapter:Libgit2 Conventions
Optional dependencies	my_project/libgit2/README.md	/^Optional dependencies$/;"	c
Options	my_project/libgit2/tests/benchmarks/README.md	/^### Options$/;"	S	section:libgit2 benchmarks""Writing benchmark tests
Other changes	my_project/libgit2/docs/changelog.md	/^## Other changes$/;"	s
Other changes	my_project/libgit2/docs/changelog.md	/^### Other changes$/;"	S	section:What's Changed
Our Pledge	my_project/libgit2/docs/code_of_conduct.md	/^## Our Pledge$/;"	s	chapter:Contributor Covenant Code of Conduct
Our Responsibilities	my_project/libgit2/docs/code_of_conduct.md	/^## Our Responsibilities$/;"	s	chapter:Contributor Covenant Code of Conduct
Our Standards	my_project/libgit2/docs/code_of_conduct.md	/^## Our Standards$/;"	s	chapter:Contributor Covenant Code of Conduct
P	my_project/libgit2/src/util/wildmatch.c	/^	P = GIT_PATHSPEC_MAGIC, \/* other non-alnum, except for ] and } *\/$/;"	e	enum:__anon8b99d91e0103	file:
PACKED_FN	my_project/libgit2/tests/libgit2/odb/freshen.c	/^#define PACKED_FN /;"	d	file:
PACKED_ID	my_project/libgit2/tests/libgit2/odb/freshen.c	/^#define PACKED_ID /;"	d	file:
PACKED_STR	my_project/libgit2/tests/libgit2/odb/freshen.c	/^#define PACKED_STR /;"	d	file:
PACKREF_CANNOT_PEEL	my_project/libgit2/src/libgit2/refdb_fs.c	/^	PACKREF_CANNOT_PEEL = 4,$/;"	e	enum:__anon3803f1ab0103	file:
PACKREF_HAS_PEEL	my_project/libgit2/src/libgit2/refdb_fs.c	/^	PACKREF_HAS_PEEL = 1,$/;"	e	enum:__anon3803f1ab0103	file:
PACKREF_SHADOWED	my_project/libgit2/src/libgit2/refdb_fs.c	/^	PACKREF_SHADOWED = 8$/;"	e	enum:__anon3803f1ab0103	file:
PACKREF_WAS_LOOSE	my_project/libgit2/src/libgit2/refdb_fs.c	/^	PACKREF_WAS_LOOSE = 2,$/;"	e	enum:__anon3803f1ab0103	file:
PACK_IDX_SIGNATURE	my_project/libgit2/src/libgit2/pack.h	/^#define PACK_IDX_SIGNATURE /;"	d
PACK_SIGNATURE	my_project/libgit2/src/libgit2/pack.h	/^#define PACK_SIGNATURE /;"	d
PACK_VERSION	my_project/libgit2/src/libgit2/pack.h	/^#define PACK_VERSION /;"	d
PADDING	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^static unsigned char PADDING[64] = {$/;"	v	typeref:typename:unsigned char[64]	file:
PARENS_NEST_LIMIT	my_project/libgit2/deps/pcre/config.h.in	/^#define PARENS_NEST_LIMIT /;"	d	file:
PARENT1	my_project/libgit2/src/libgit2/commit_list.h	/^#define PARENT1 /;"	d
PARENT2	my_project/libgit2/src/libgit2/commit_list.h	/^#define PARENT2 /;"	d
PARENTS_PER_COMMIT	my_project/libgit2/src/libgit2/commit_list.h	/^#define PARENTS_PER_COMMIT	/;"	d
PARSE_FAILURE	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^	PARSE_FAILURE$/;"	e	enum:expected_status	file:
PARSE_HEADER_COMPLETE	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	PARSE_HEADER_COMPLETE$/;"	e	enum:__anon3d590bbe0403	file:
PARSE_HEADER_NAME	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	PARSE_HEADER_NAME,$/;"	e	enum:__anon3d590bbe0403	file:
PARSE_HEADER_NONE	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	PARSE_HEADER_NONE = 0,$/;"	e	enum:__anon3d590bbe0403	file:
PARSE_HEADER_VALUE	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	PARSE_HEADER_VALUE,$/;"	e	enum:__anon3d590bbe0403	file:
PARSE_STATUS_ERROR	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	PARSE_STATUS_ERROR$/;"	e	enum:__anon3d590bbe0503	file:
PARSE_STATUS_NO_OUTPUT	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	PARSE_STATUS_NO_OUTPUT,$/;"	e	enum:__anon3d590bbe0503	file:
PARSE_STATUS_OK	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	PARSE_STATUS_OK,$/;"	e	enum:__anon3d590bbe0503	file:
PARSE_SUCCESS	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^	PARSE_SUCCESS,$/;"	e	enum:expected_status	file:
PATCH_ADD_BINARY_NOT_PRINTED	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ADD_BINARY_NOT_PRINTED /;"	d
PATCH_ADD_ORIGINAL	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ADD_ORIGINAL /;"	d
PATCH_APPEND_NO_NL	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_APPEND_NO_NL /;"	d
PATCH_APPEND_NO_NL_IN_OLD_FILE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_APPEND_NO_NL_IN_OLD_FILE /;"	d
PATCH_BINARY_ADD	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_BINARY_ADD /;"	d
PATCH_BINARY_DELETE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_BINARY_DELETE /;"	d
PATCH_BINARY_DELTA	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_BINARY_DELTA /;"	d
PATCH_BINARY_FILE_PATH_WITHOUT_BODY_PATHS	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_BINARY_FILE_PATH_WITHOUT_BODY_PATHS /;"	d
PATCH_BINARY_FILE_PATH_WITH_SPACES	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_BINARY_FILE_PATH_WITH_SPACES /;"	d
PATCH_BINARY_FILE_WITH_MISSING_PATHS	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_BINARY_FILE_WITH_MISSING_PATHS /;"	d
PATCH_BINARY_FILE_WITH_QUOTED_EMPTY_PATHS	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_BINARY_FILE_WITH_QUOTED_EMPTY_PATHS /;"	d
PATCH_BINARY_FILE_WITH_TRUNCATED_DELTA	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_BINARY_FILE_WITH_TRUNCATED_DELTA /;"	d
PATCH_BINARY_FILE_WITH_WHITESPACE_PATHS	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_BINARY_FILE_WITH_WHITESPACE_PATHS /;"	d
PATCH_BINARY_LITERAL	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_BINARY_LITERAL /;"	d
PATCH_BINARY_NOT_PRINTED	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_BINARY_NOT_PRINTED /;"	d
PATCH_BINARY_NOT_REVERSIBLE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_BINARY_NOT_REVERSIBLE /;"	d
PATCH_CACHE	my_project/libgit2/tests/libgit2/diff/diffiter.c	/^#define PATCH_CACHE /;"	d	file:
PATCH_CORRUPT_GIT_HEADER	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_CORRUPT_GIT_HEADER /;"	d
PATCH_CORRUPT_MISSING_HUNK_HEADER	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_CORRUPT_MISSING_HUNK_HEADER /;"	d
PATCH_CORRUPT_MISSING_NEW_FILE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_CORRUPT_MISSING_NEW_FILE /;"	d
PATCH_CORRUPT_MISSING_OLD_FILE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_CORRUPT_MISSING_OLD_FILE /;"	d
PATCH_CORRUPT_NO_CHANGES	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_CORRUPT_NO_CHANGES /;"	d
PATCH_CRLF	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_CRLF /;"	d
PATCH_DELETED_FILE_2_HUNKS	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_DELETED_FILE_2_HUNKS /;"	d
PATCH_DELETED_FILE_2_HUNKS_SHUFFLED	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_DELETED_FILE_2_HUNKS_SHUFFLED /;"	d
PATCH_DELETE_FILE_WITH_SPACE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_DELETE_FILE_WITH_SPACE /;"	d
PATCH_DELETE_ORIGINAL	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_DELETE_ORIGINAL /;"	d
PATCH_EMPTY_CONTEXT	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_EMPTY_CONTEXT /;"	d
PATCH_EMPTY_FILE_TO_ORIGINAL	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_EMPTY_FILE_TO_ORIGINAL /;"	d
PATCH_IMAGE_INIT	my_project/libgit2/src/libgit2/apply.c	/^#define PATCH_IMAGE_INIT /;"	d	file:
PATCH_INTMAX_NEW_LINES	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_INTMAX_NEW_LINES /;"	d
PATCH_MODECHANGE_MODIFIED	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_MODECHANGE_MODIFIED /;"	d
PATCH_MODECHANGE_UNCHANGED	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_MODECHANGE_UNCHANGED /;"	d
PATCH_MULTIPLE_FILES	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_MULTIPLE_FILES /;"	d
PATCH_MULTIPLE_HUNKS	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_MULTIPLE_HUNKS /;"	d
PATCH_MULTIPLE_OLD_PATHS	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_MULTIPLE_OLD_PATHS /;"	d
PATCH_NAME_WHITESPACE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_NAME_WHITESPACE /;"	d
PATCH_NOISY	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_NOISY /;"	d
PATCH_NOISY_NOCONTEXT	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_NOISY_NOCONTEXT /;"	d
PATCH_NOT_A_PATCH	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_NOT_A_PATCH /;"	d
PATCH_NO_EXTENDED_HEADERS	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_NO_EXTENDED_HEADERS /;"	d
PATCH_ORIGINAL_NEW_FILE_WITH_SPACE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_NEW_FILE_WITH_SPACE /;"	d
PATCH_ORIGINAL_TO_APPEND	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_APPEND /;"	d
PATCH_ORIGINAL_TO_APPEND_NOCONTEXT	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_APPEND_NOCONTEXT /;"	d
PATCH_ORIGINAL_TO_CHANGE_FIRSTLINE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_CHANGE_FIRSTLINE /;"	d
PATCH_ORIGINAL_TO_CHANGE_LASTLINE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_CHANGE_LASTLINE /;"	d
PATCH_ORIGINAL_TO_CHANGE_MIDDLE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_CHANGE_MIDDLE /;"	d
PATCH_ORIGINAL_TO_CHANGE_MIDDLE_AND_LASTLINE_NOCONTEXT	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_CHANGE_MIDDLE_AND_LASTLINE_NOCONTEXT /;"	d
PATCH_ORIGINAL_TO_CHANGE_MIDDLE_GROW	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_CHANGE_MIDDLE_GROW /;"	d
PATCH_ORIGINAL_TO_CHANGE_MIDDLE_NOCONTEXT	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_CHANGE_MIDDLE_NOCONTEXT /;"	d
PATCH_ORIGINAL_TO_CHANGE_MIDDLE_SHRINK	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_CHANGE_MIDDLE_SHRINK /;"	d
PATCH_ORIGINAL_TO_DELETE_AND_CHANGE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_DELETE_AND_CHANGE /;"	d
PATCH_ORIGINAL_TO_DELETE_AND_CHANGE_NOCONTEXT	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_DELETE_AND_CHANGE_NOCONTEXT /;"	d
PATCH_ORIGINAL_TO_DELETE_FIRSTLINE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_DELETE_FIRSTLINE /;"	d
PATCH_ORIGINAL_TO_EMPTY_FILE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_EMPTY_FILE /;"	d
PATCH_ORIGINAL_TO_MIDDLE_GROW_NOCONTEXT	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_MIDDLE_GROW_NOCONTEXT /;"	d
PATCH_ORIGINAL_TO_MIDDLE_SHRINK_NOCONTEXT	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_MIDDLE_SHRINK_NOCONTEXT /;"	d
PATCH_ORIGINAL_TO_PREPEND	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_PREPEND /;"	d
PATCH_ORIGINAL_TO_PREPEND_AND_APPEND	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_PREPEND_AND_APPEND /;"	d
PATCH_ORIGINAL_TO_PREPEND_AND_CHANGE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_PREPEND_AND_CHANGE /;"	d
PATCH_ORIGINAL_TO_PREPEND_AND_CHANGE_NOCONTEXT	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_PREPEND_AND_CHANGE_NOCONTEXT /;"	d
PATCH_ORIGINAL_TO_PREPEND_NOCONTEXT	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_ORIGINAL_TO_PREPEND_NOCONTEXT /;"	d
PATCH_RENAME_EXACT	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_RENAME_EXACT /;"	d
PATCH_RENAME_EXACT_QUOTEDNAME	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_RENAME_EXACT_QUOTEDNAME /;"	d
PATCH_RENAME_EXACT_WITH_MODE	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_RENAME_EXACT_WITH_MODE /;"	d
PATCH_RENAME_SIMILAR	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_RENAME_SIMILAR /;"	d
PATCH_RENAME_SIMILAR_QUOTEDNAME	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_RENAME_SIMILAR_QUOTEDNAME /;"	d
PATCH_SIMPLE_COMMIT	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_SIMPLE_COMMIT /;"	d
PATCH_TRUNCATED_1	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_TRUNCATED_1 /;"	d
PATCH_TRUNCATED_2	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_TRUNCATED_2 /;"	d
PATCH_TRUNCATED_3	my_project/libgit2/tests/libgit2/patch/patch_common.h	/^#define PATCH_TRUNCATED_3 /;"	d
PATH	my_project/libgit2/src/util/net.c	/^		PATH_START, PATH$/;"	e	enum:git_net_url_parse::__anon850d8ea80403	file:
PATH	my_project/libgit2/src/util/net.c	/^	enum { PATH, QUERY, FRAGMENT } state = PATH;$/;"	e	enum:url_parse_path::__anon850d8ea80303	file:
PATHSPEC_DATATYPE_DIFF	my_project/libgit2/src/libgit2/pathspec.h	/^	PATHSPEC_DATATYPE_DIFF = 1$/;"	e	enum:__anona65a258d0103
PATHSPEC_DATATYPE_STRINGS	my_project/libgit2/src/libgit2/pathspec.h	/^	PATHSPEC_DATATYPE_STRINGS = 0,$/;"	e	enum:__anona65a258d0103
PATH_MAGIC	my_project/libgit2/src/libgit2/sysdir.c	/^#define PATH_MAGIC /;"	d	file:
PATH_START	my_project/libgit2/src/util/net.c	/^		PATH_START$/;"	e	enum:git_net_url_parse_scp::__anon850d8ea80503	file:
PATH_START	my_project/libgit2/src/util/net.c	/^		PATH_START, PATH$/;"	e	enum:git_net_url_parse::__anon850d8ea80403	file:
PATH__ABSOLUTE_LEN	my_project/libgit2/src/util/win32/path_w32.c	/^#define PATH__ABSOLUTE_LEN /;"	d	file:
PATH__NT_NAMESPACE	my_project/libgit2/src/util/win32/path_w32.c	/^#define PATH__NT_NAMESPACE /;"	d	file:
PATH__NT_NAMESPACE_LEN	my_project/libgit2/src/util/win32/path_w32.c	/^#define PATH__NT_NAMESPACE_LEN /;"	d	file:
PATTERNS	my_project/libgit2/src/libgit2/userdiff.h	/^#define PATTERNS(/;"	d
PCRE2_CODE_UNIT_WIDTH	my_project/libgit2/src/util/regexp.h	/^# define PCRE2_CODE_UNIT_WIDTH /;"	d
PCRE2_INCLUDE_DIRS	my_project/libgit2/cmake/FindPCRE2.cmake	/^	set(PCRE2_INCLUDE_DIRS ${PCRE2_INCLUDE_DIR})$/;"	v
PCRE2_INCLUDE_DIRS	my_project/libgit2/cmake/FindPCRE2.cmake	/^	set(PCRE2_INCLUDE_DIRS)$/;"	v
PCRE2_LIBRARIES	my_project/libgit2/cmake/FindPCRE2.cmake	/^	set(PCRE2_LIBRARIES ${PCRE2_LIBRARY})$/;"	v
PCRE2_LIBRARIES	my_project/libgit2/cmake/FindPCRE2.cmake	/^	set(PCRE2_LIBRARIES)$/;"	v
PCREGREP_BUFSIZE	my_project/libgit2/deps/pcre/config.h.in	/^#define PCREGREP_BUFSIZE /;"	d	file:
PCREPOSIX_EXP_DECL	my_project/libgit2/deps/pcre/pcreposix.h	/^#define PCREPOSIX_EXP_DECL /;"	d
PCREPOSIX_EXP_DEFN	my_project/libgit2/deps/pcre/pcreposix.h	/^#define PCREPOSIX_EXP_DEFN /;"	d
PCREPOSIX_HEADERS	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(PCREPOSIX_HEADERS pcreposix.h)$/;"	v
PCREPOSIX_SOURCES	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(PCREPOSIX_SOURCES pcreposix.c)$/;"	v
PCRE_ANCHORED	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ANCHORED /;"	d
PCRE_AUTO_CALLOUT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_AUTO_CALLOUT /;"	d
PCRE_BSR_ANYCRLF	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_BSR_ANYCRLF /;"	d
PCRE_BSR_UNICODE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_BSR_UNICODE /;"	d
PCRE_CALL_CONVENTION	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_CALL_CONVENTION$/;"	d
PCRE_CASELESS	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CASELESS /;"	d
PCRE_CONFIG_BSR	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_BSR /;"	d
PCRE_CONFIG_JIT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_JIT /;"	d
PCRE_CONFIG_JITTARGET	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_JITTARGET /;"	d
PCRE_CONFIG_LINK_SIZE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_LINK_SIZE /;"	d
PCRE_CONFIG_MATCH_LIMIT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_MATCH_LIMIT /;"	d
PCRE_CONFIG_MATCH_LIMIT_RECURSION	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_MATCH_LIMIT_RECURSION /;"	d
PCRE_CONFIG_NEWLINE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_NEWLINE /;"	d
PCRE_CONFIG_PARENS_LIMIT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_PARENS_LIMIT /;"	d
PCRE_CONFIG_POSIX_MALLOC_THRESHOLD	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_POSIX_MALLOC_THRESHOLD /;"	d
PCRE_CONFIG_STACKRECURSE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_STACKRECURSE /;"	d
PCRE_CONFIG_UNICODE_PROPERTIES	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_UNICODE_PROPERTIES /;"	d
PCRE_CONFIG_UTF16	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_UTF16 /;"	d
PCRE_CONFIG_UTF32	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_UTF32 /;"	d
PCRE_CONFIG_UTF8	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_CONFIG_UTF8 /;"	d
PCRE_DATE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_DATE /;"	d
PCRE_DFA_RESTART	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_DFA_RESTART /;"	d
PCRE_DFA_SHORTEST	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_DFA_SHORTEST /;"	d
PCRE_DOLLAR_ENDONLY	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_DOLLAR_ENDONLY /;"	d
PCRE_DOTALL	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_DOTALL /;"	d
PCRE_DUPNAMES	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_DUPNAMES /;"	d
PCRE_ERROR_BADCOUNT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADCOUNT /;"	d
PCRE_ERROR_BADENDIANNESS	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADENDIANNESS /;"	d
PCRE_ERROR_BADLENGTH	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADLENGTH /;"	d
PCRE_ERROR_BADMAGIC	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADMAGIC /;"	d
PCRE_ERROR_BADMODE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADMODE /;"	d
PCRE_ERROR_BADNEWLINE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADNEWLINE /;"	d
PCRE_ERROR_BADOFFSET	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADOFFSET /;"	d
PCRE_ERROR_BADOPTION	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADOPTION /;"	d
PCRE_ERROR_BADPARTIAL	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADPARTIAL /;"	d
PCRE_ERROR_BADUTF16	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADUTF16 /;"	d
PCRE_ERROR_BADUTF16_OFFSET	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADUTF16_OFFSET /;"	d
PCRE_ERROR_BADUTF32	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADUTF32 /;"	d
PCRE_ERROR_BADUTF8	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADUTF8 /;"	d
PCRE_ERROR_BADUTF8_OFFSET	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_BADUTF8_OFFSET /;"	d
PCRE_ERROR_CALLOUT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_CALLOUT /;"	d
PCRE_ERROR_DFA_BADRESTART	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_DFA_BADRESTART /;"	d
PCRE_ERROR_DFA_RECURSE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_DFA_RECURSE /;"	d
PCRE_ERROR_DFA_UCOND	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_DFA_UCOND /;"	d
PCRE_ERROR_DFA_UITEM	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_DFA_UITEM /;"	d
PCRE_ERROR_DFA_UMLIMIT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_DFA_UMLIMIT /;"	d
PCRE_ERROR_DFA_WSSIZE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_DFA_WSSIZE /;"	d
PCRE_ERROR_INTERNAL	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_INTERNAL /;"	d
PCRE_ERROR_JIT_BADOPTION	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_JIT_BADOPTION /;"	d
PCRE_ERROR_JIT_STACKLIMIT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_JIT_STACKLIMIT /;"	d
PCRE_ERROR_MATCHLIMIT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_MATCHLIMIT /;"	d
PCRE_ERROR_NOMATCH	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_NOMATCH /;"	d
PCRE_ERROR_NOMEMORY	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_NOMEMORY /;"	d
PCRE_ERROR_NOSUBSTRING	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_NOSUBSTRING /;"	d
PCRE_ERROR_NULL	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_NULL /;"	d
PCRE_ERROR_NULLWSLIMIT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_NULLWSLIMIT /;"	d
PCRE_ERROR_PARTIAL	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_PARTIAL /;"	d
PCRE_ERROR_RECURSELOOP	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_RECURSELOOP /;"	d
PCRE_ERROR_RECURSIONLIMIT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_RECURSIONLIMIT /;"	d
PCRE_ERROR_SHORTUTF16	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_SHORTUTF16 /;"	d
PCRE_ERROR_SHORTUTF8	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_SHORTUTF8 /;"	d
PCRE_ERROR_UNKNOWN_NODE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_UNKNOWN_NODE /;"	d
PCRE_ERROR_UNKNOWN_OPCODE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_UNKNOWN_OPCODE /;"	d
PCRE_ERROR_UNSET	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_ERROR_UNSET /;"	d
PCRE_EXP_DATA_DEFN	my_project/libgit2/deps/pcre/pcre_internal.h	/^# define PCRE_EXP_DATA_DEFN$/;"	d
PCRE_EXP_DECL	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXP_DECL /;"	d
PCRE_EXP_DECL	my_project/libgit2/deps/pcre/pcre_internal.h	/^# define PCRE_EXP_DECL /;"	d
PCRE_EXP_DEFN	my_project/libgit2/deps/pcre/pcre_internal.h	/^# define PCRE_EXP_DEFN$/;"	d
PCRE_EXTENDED	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTENDED /;"	d
PCRE_EXTRA	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA /;"	d
PCRE_EXTRA_CALLOUT_DATA	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA_CALLOUT_DATA /;"	d
PCRE_EXTRA_EXECUTABLE_JIT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA_EXECUTABLE_JIT /;"	d
PCRE_EXTRA_MARK	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA_MARK /;"	d
PCRE_EXTRA_MATCH_LIMIT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA_MATCH_LIMIT /;"	d
PCRE_EXTRA_MATCH_LIMIT_RECURSION	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA_MATCH_LIMIT_RECURSION /;"	d
PCRE_EXTRA_STUDY_DATA	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA_STUDY_DATA /;"	d
PCRE_EXTRA_TABLES	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_EXTRA_TABLES /;"	d
PCRE_FCH_CASELESS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_FCH_CASELESS /;"	d
PCRE_FIRSTLINE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_FIRSTLINE /;"	d
PCRE_FIRSTSET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_FIRSTSET /;"	d
PCRE_HASCRORLF	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_HASCRORLF /;"	d
PCRE_HASTHEN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_HASTHEN /;"	d
PCRE_HEADERS	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(PCRE_HEADERS ${PROJECT_BINARY_DIR}\/src\/pcre\/config.h)$/;"	v
PCRE_INCLUDED	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define PCRE_INCLUDED$/;"	d	file:
PCRE_INCLUDE_DIRS	my_project/libgit2/cmake/FindPCRE.cmake	/^	set(PCRE_INCLUDE_DIRS ${PCRE_INCLUDE_DIR})$/;"	v
PCRE_INCLUDE_DIRS	my_project/libgit2/cmake/FindPCRE.cmake	/^	set(PCRE_INCLUDE_DIRS)$/;"	v
PCRE_INFO_BACKREFMAX	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_BACKREFMAX /;"	d
PCRE_INFO_CAPTURECOUNT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_CAPTURECOUNT /;"	d
PCRE_INFO_DEFAULT_TABLES	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_DEFAULT_TABLES /;"	d
PCRE_INFO_FIRSTBYTE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_FIRSTBYTE /;"	d
PCRE_INFO_FIRSTCHAR	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_FIRSTCHAR /;"	d
PCRE_INFO_FIRSTCHARACTER	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_FIRSTCHARACTER /;"	d
PCRE_INFO_FIRSTCHARACTERFLAGS	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_FIRSTCHARACTERFLAGS /;"	d
PCRE_INFO_FIRSTTABLE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_FIRSTTABLE /;"	d
PCRE_INFO_HASCRORLF	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_HASCRORLF /;"	d
PCRE_INFO_JCHANGED	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_JCHANGED /;"	d
PCRE_INFO_JIT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_JIT /;"	d
PCRE_INFO_JITSIZE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_JITSIZE /;"	d
PCRE_INFO_LASTLITERAL	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_LASTLITERAL /;"	d
PCRE_INFO_MATCHLIMIT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_MATCHLIMIT /;"	d
PCRE_INFO_MATCH_EMPTY	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_MATCH_EMPTY /;"	d
PCRE_INFO_MAXLOOKBEHIND	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_MAXLOOKBEHIND /;"	d
PCRE_INFO_MINLENGTH	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_MINLENGTH /;"	d
PCRE_INFO_NAMECOUNT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_NAMECOUNT /;"	d
PCRE_INFO_NAMEENTRYSIZE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_NAMEENTRYSIZE /;"	d
PCRE_INFO_NAMETABLE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_NAMETABLE /;"	d
PCRE_INFO_OKPARTIAL	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_OKPARTIAL /;"	d
PCRE_INFO_OPTIONS	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_OPTIONS /;"	d
PCRE_INFO_RECURSIONLIMIT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_RECURSIONLIMIT /;"	d
PCRE_INFO_REQUIREDCHAR	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_REQUIREDCHAR /;"	d
PCRE_INFO_REQUIREDCHARFLAGS	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_REQUIREDCHARFLAGS /;"	d
PCRE_INFO_SIZE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_SIZE /;"	d
PCRE_INFO_STUDYSIZE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_INFO_STUDYSIZE /;"	d
PCRE_INT16_MAX	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_INT16_MAX /;"	d
PCRE_INT32_MAX	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_INT32_MAX /;"	d
PCRE_INTERNAL_H	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_INTERNAL_H$/;"	d
PCRE_JAVASCRIPT_COMPAT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_JAVASCRIPT_COMPAT /;"	d
PCRE_JCHANGED	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_JCHANGED /;"	d
PCRE_LIBRARIES	my_project/libgit2/cmake/FindPCRE.cmake	/^	set(PCRE_LIBRARIES ${PCRE_LIBRARY})$/;"	v
PCRE_LIBRARIES	my_project/libgit2/cmake/FindPCRE.cmake	/^	set(PCRE_LIBRARIES)$/;"	v
PCRE_LINK_SIZE	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(PCRE_LINK_SIZE "2")$/;"	v
PCRE_MAJOR	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_MAJOR /;"	d
PCRE_MATCH_EMPTY	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_MATCH_EMPTY /;"	d
PCRE_MATCH_LIMIT	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(PCRE_MATCH_LIMIT "10000000")$/;"	v
PCRE_MATCH_LIMIT_RECURSION	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(PCRE_MATCH_LIMIT_RECURSION "MATCH_LIMIT")$/;"	v
PCRE_MINOR	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_MINOR /;"	d
PCRE_MLSET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_MLSET /;"	d
PCRE_MODE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_MODE /;"	d
PCRE_MODE16	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_MODE16 /;"	d
PCRE_MODE32	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_MODE32 /;"	d
PCRE_MODE8	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_MODE8 /;"	d
PCRE_MODE_MASK	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_MODE_MASK /;"	d
PCRE_MULTILINE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_MULTILINE /;"	d
PCRE_NEVER_UTF	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NEVER_UTF /;"	d
PCRE_NEWLINE	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(PCRE_NEWLINE "LF")$/;"	v
PCRE_NEWLINE_ANY	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NEWLINE_ANY /;"	d
PCRE_NEWLINE_ANYCRLF	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NEWLINE_ANYCRLF /;"	d
PCRE_NEWLINE_BITS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_NEWLINE_BITS /;"	d
PCRE_NEWLINE_CR	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NEWLINE_CR /;"	d
PCRE_NEWLINE_CRLF	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NEWLINE_CRLF /;"	d
PCRE_NEWLINE_LF	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NEWLINE_LF /;"	d
PCRE_NOPARTIAL	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_NOPARTIAL /;"	d
PCRE_NOTBOL	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NOTBOL /;"	d
PCRE_NOTEMPTY	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NOTEMPTY /;"	d
PCRE_NOTEMPTY_ATSTART	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NOTEMPTY_ATSTART /;"	d
PCRE_NOTEOL	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NOTEOL /;"	d
PCRE_NO_AUTO_CAPTURE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NO_AUTO_CAPTURE /;"	d
PCRE_NO_AUTO_POSSESS	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NO_AUTO_POSSESS /;"	d
PCRE_NO_START_OPTIMISE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NO_START_OPTIMISE /;"	d
PCRE_NO_START_OPTIMIZE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NO_START_OPTIMIZE /;"	d
PCRE_NO_UTF16_CHECK	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NO_UTF16_CHECK /;"	d
PCRE_NO_UTF32_CHECK	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NO_UTF32_CHECK /;"	d
PCRE_NO_UTF8_CHECK	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_NO_UTF8_CHECK /;"	d
PCRE_PARENS_NEST_LIMIT	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(PCRE_PARENS_NEST_LIMIT "250")$/;"	v
PCRE_PARTIAL	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_PARTIAL /;"	d
PCRE_PARTIAL_HARD	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_PARTIAL_HARD /;"	d
PCRE_PARTIAL_SOFT	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_PARTIAL_SOFT /;"	d
PCRE_POSIX_MALLOC_THRESHOLD	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(PCRE_POSIX_MALLOC_THRESHOLD "10")$/;"	v
PCRE_PRERELEASE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_PRERELEASE$/;"	d
PCRE_PUCHAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_PUCHAR /;"	d
PCRE_RCH_CASELESS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_RCH_CASELESS /;"	d
PCRE_REG_ASSERT	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_ASSERT = 1,  \/* internal error ? *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_BADBR	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_BADBR,       \/* invalid repeat counts in {} *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_BADPAT	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_BADPAT,      \/* pattern error *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_BADRPT	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_BADRPT,      \/* ? * + invalid *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_DOTALL	my_project/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_DOTALL /;"	d
PCRE_REG_EBRACE	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_EBRACE,      \/* unbalanced {} *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_EBRACK	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_EBRACK,      \/* unbalanced [] *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_ECOLLATE	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_ECOLLATE,    \/* collation error - not relevant *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_ECTYPE	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_ECTYPE,      \/* bad class *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_EESCAPE	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_EESCAPE,     \/* bad escape sequence *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_EMPTY	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_EMPTY,       \/* empty expression *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_EPAREN	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_EPAREN,      \/* unbalanced () *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_ERANGE	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_ERANGE,      \/* bad range inside [] *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_ESIZE	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_ESIZE,       \/* expression too big *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_ESPACE	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_ESPACE,      \/* failed to get memory *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_ESUBREG	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_ESUBREG,     \/* bad back reference *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_EXTENDED	my_project/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_EXTENDED /;"	d
PCRE_REG_ICASE	my_project/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_ICASE /;"	d
PCRE_REG_INVARG	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_INVARG,      \/* bad argument *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_NEWLINE	my_project/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_NEWLINE /;"	d
PCRE_REG_NOMATCH	my_project/libgit2/deps/pcre/pcreposix.h	/^  PCRE_REG_NOMATCH      \/* match failed *\/$/;"	e	enum:__anon411fc6730103
PCRE_REG_NOSUB	my_project/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_NOSUB /;"	d
PCRE_REG_NOTBOL	my_project/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_NOTBOL /;"	d
PCRE_REG_NOTEMPTY	my_project/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_NOTEMPTY /;"	d
PCRE_REG_NOTEOL	my_project/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_NOTEOL /;"	d
PCRE_REG_STARTEND	my_project/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_STARTEND /;"	d
PCRE_REG_UCP	my_project/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_UCP /;"	d
PCRE_REG_UNGREEDY	my_project/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_UNGREEDY /;"	d
PCRE_REG_UTF8	my_project/libgit2/deps/pcre/pcreposix.h	/^#define PCRE_REG_UTF8 /;"	d
PCRE_REQCHSET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_REQCHSET /;"	d
PCRE_RLSET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_RLSET /;"	d
PCRE_SOURCES	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(PCRE_SOURCES$/;"	v
PCRE_SPTR	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_SPTR /;"	d
PCRE_SPTR16	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_SPTR16 /;"	d
PCRE_SPTR32	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_SPTR32 /;"	d
PCRE_STARTLINE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_STARTLINE /;"	d
PCRE_STUDY_EXTRA_NEEDED	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_STUDY_EXTRA_NEEDED /;"	d
PCRE_STUDY_JIT_COMPILE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_STUDY_JIT_COMPILE /;"	d
PCRE_STUDY_JIT_PARTIAL_HARD_COMPILE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_STUDY_JIT_PARTIAL_HARD_COMPILE /;"	d
PCRE_STUDY_JIT_PARTIAL_SOFT_COMPILE	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_STUDY_JIT_PARTIAL_SOFT_COMPILE /;"	d
PCRE_STUDY_MAPPED	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_STUDY_MAPPED /;"	d
PCRE_STUDY_MINLEN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_STUDY_MINLEN /;"	d
PCRE_UCHAR16	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UCHAR16 /;"	d
PCRE_UCHAR32	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UCHAR32 /;"	d
PCRE_UCP	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UCP /;"	d
PCRE_UINT16_MAX	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_UINT16_MAX /;"	d
PCRE_UINT32_MAX	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PCRE_UINT32_MAX /;"	d
PCRE_UNGREEDY	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UNGREEDY /;"	d
PCRE_UTF16	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF16 /;"	d
PCRE_UTF16_ERR0	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF16_ERR0 /;"	d
PCRE_UTF16_ERR1	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF16_ERR1 /;"	d
PCRE_UTF16_ERR2	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF16_ERR2 /;"	d
PCRE_UTF16_ERR3	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF16_ERR3 /;"	d
PCRE_UTF16_ERR4	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF16_ERR4 /;"	d
PCRE_UTF32	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF32 /;"	d
PCRE_UTF32_ERR0	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF32_ERR0 /;"	d
PCRE_UTF32_ERR1	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF32_ERR1 /;"	d
PCRE_UTF32_ERR2	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF32_ERR2 /;"	d
PCRE_UTF32_ERR3	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF32_ERR3 /;"	d
PCRE_UTF8	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8 /;"	d
PCRE_UTF8_ERR0	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR0 /;"	d
PCRE_UTF8_ERR1	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR1 /;"	d
PCRE_UTF8_ERR10	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR10 /;"	d
PCRE_UTF8_ERR11	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR11 /;"	d
PCRE_UTF8_ERR12	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR12 /;"	d
PCRE_UTF8_ERR13	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR13 /;"	d
PCRE_UTF8_ERR14	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR14 /;"	d
PCRE_UTF8_ERR15	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR15 /;"	d
PCRE_UTF8_ERR16	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR16 /;"	d
PCRE_UTF8_ERR17	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR17 /;"	d
PCRE_UTF8_ERR18	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR18 /;"	d
PCRE_UTF8_ERR19	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR19 /;"	d
PCRE_UTF8_ERR2	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR2 /;"	d
PCRE_UTF8_ERR20	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR20 /;"	d
PCRE_UTF8_ERR21	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR21 /;"	d
PCRE_UTF8_ERR22	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR22 /;"	d
PCRE_UTF8_ERR3	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR3 /;"	d
PCRE_UTF8_ERR4	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR4 /;"	d
PCRE_UTF8_ERR5	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR5 /;"	d
PCRE_UTF8_ERR6	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR6 /;"	d
PCRE_UTF8_ERR7	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR7 /;"	d
PCRE_UTF8_ERR8	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR8 /;"	d
PCRE_UTF8_ERR9	my_project/libgit2/deps/pcre/pcre.h	/^#define PCRE_UTF8_ERR9 /;"	d
PC_GRAPH	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define PC_GRAPH /;"	d	file:
PC_PRINT	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define PC_PRINT /;"	d	file:
PC_PUNCT	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define PC_PUNCT /;"	d	file:
PEELING_FULL	my_project/libgit2/src/libgit2/refdb_fs.c	/^	PEELING_FULL$/;"	e	enum:__anon3803f1ab0203	file:
PEELING_NONE	my_project/libgit2/src/libgit2/refdb_fs.c	/^	PEELING_NONE = 0,$/;"	e	enum:__anon3803f1ab0203	file:
PEELING_STANDARD	my_project/libgit2/src/libgit2/refdb_fs.c	/^	PEELING_STANDARD,$/;"	e	enum:__anon3803f1ab0203	file:
PERF_TIMER_INIT	my_project/libgit2/tests/libgit2/perf/helper__perf__timer.h	/^#define PERF_TIMER_INIT /;"	d
PKGCONFIG_CFLAGS	my_project/libgit2/cmake/PkgBuildConfig.cmake	/^		set(PKGCONFIG_CFLAGS "")$/;"	v	function:pkg_build_config
PKGCONFIG_FILE	my_project/libgit2/cmake/PkgBuildConfig.cmake	/^	set(PKGCONFIG_FILE "${PROJECT_BINARY_DIR}\/${PKGCONFIG_FILENAME}.pc")$/;"	v	function:pkg_build_config
PKGCONFIG_FILENAME	my_project/libgit2/cmake/PkgBuildConfig.cmake	/^		set(PKGCONFIG_FILENAME ${PKGCONFIG_NAME})$/;"	v	function:pkg_build_config
PKGCONFIG_LIBS	my_project/libgit2/cmake/PkgBuildConfig.cmake	/^		set(PKGCONFIG_LIBS "-l${PKGCONFIG_LIBS_SELF}")$/;"	v	function:pkg_build_config
PKGCONFIG_LIBS_SELF	my_project/libgit2/cmake/PkgBuildConfig.cmake	/^		set(PKGCONFIG_LIBS_SELF "${PKGCONFIG_FILE}")$/;"	v	function:pkg_build_config
PKT_DONE_STR	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^#define PKT_DONE_STR /;"	d	file:
PKT_FLUSH_STR	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^#define PKT_FLUSH_STR /;"	d	file:
PKT_HAVE_PREFIX	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^#define PKT_HAVE_PREFIX /;"	d	file:
PKT_LEN_SIZE	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^#define PKT_LEN_SIZE /;"	d	file:
PKT_MAX_SIZE	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^#define PKT_MAX_SIZE /;"	d	file:
PKT_MAX_WANTLEN	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^#define PKT_MAX_WANTLEN /;"	d	file:
PKT_WANT_PREFIX	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^#define PKT_WANT_PREFIX /;"	d	file:
POINTER	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^typedef unsigned char *POINTER;$/;"	t	typeref:typename:unsigned char *	file:
POLLERR	my_project/libgit2/src/util/posix.h	/^# define POLLERR /;"	d
POLLHUP	my_project/libgit2/src/util/posix.h	/^# define POLLHUP /;"	d
POLLIN	my_project/libgit2/src/util/posix.h	/^# define POLLIN /;"	d
POLLOUT	my_project/libgit2/src/util/posix.h	/^# define POLLOUT /;"	d
POLLPRI	my_project/libgit2/src/util/posix.h	/^# define POLLPRI /;"	d
POLY	my_project/libgit2/deps/zlib/crc32.c	/^#define POLY /;"	d	file:
PORT	my_project/libgit2/src/util/net.c	/^		PORT_START, PORT, PORT_END,$/;"	e	enum:git_net_url_parse_scp::__anon850d8ea80503	file:
PORT_END	my_project/libgit2/src/util/net.c	/^		PORT_START, PORT, PORT_END,$/;"	e	enum:git_net_url_parse_scp::__anon850d8ea80503	file:
PORT_START	my_project/libgit2/src/util/net.c	/^		PORT_START, PORT, PORT_END,$/;"	e	enum:git_net_url_parse_scp::__anon850d8ea80503	file:
POSIX_MALLOC_THRESHOLD	my_project/libgit2/deps/pcre/config.h.in	/^#define POSIX_MALLOC_THRESHOLD	/;"	d	file:
POSIX_SUBSIZE	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define POSIX_SUBSIZE /;"	d	file:
POSSESSIVE0	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define POSSESSIVE0 /;"	d	file:
POSSESSIVE1	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define POSSESSIVE1 /;"	d	file:
POST_BLANK_WEIGHT	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define POST_BLANK_WEIGHT /;"	d	file:
PQUEUE_LCHILD_OF	my_project/libgit2/src/util/pqueue.c	/^#define PQUEUE_LCHILD_OF(/;"	d	file:
PQUEUE_PARENT_OF	my_project/libgit2/src/util/pqueue.c	/^#define PQUEUE_PARENT_OF(/;"	d	file:
PQUEUE_RCHILD_OF	my_project/libgit2/src/util/pqueue.c	/^#define PQUEUE_RCHILD_OF(/;"	d	file:
PREFIX	my_project/libgit2/src/libgit2/remote.c	/^#define PREFIX /;"	d	file:
PREPARE_PACK	my_project/libgit2/src/libgit2/pack-objects.c	/^#define PREPARE_PACK /;"	d	file:
PRESET_DICT	my_project/libgit2/deps/zlib/zutil.h	/^#define PRESET_DICT /;"	d
PREVIOUS_BRANCH	my_project/libgit2/tests/libgit2/merge/analysis.c	/^#define PREVIOUS_BRANCH /;"	d	file:
PRINT	my_project/libgit2/tests/clar/clar/print.h	/^#define PRINT(/;"	d
PRINTABLE	my_project/libgit2/deps/pcre/pcre_printint.c	/^#define PRINTABLE(/;"	d	file:
PRIV	my_project/libgit2/deps/pcre/pcre_compile.c	/^PRIV(find_bracket)(const pcre_uchar *code, BOOL utf, int number)$/;"	f	typeref:typename:const pcre_uchar *
PRIV	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PRIV(/;"	d
PRIV	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^PRIV(jit_compile)(const REAL_PCRE *re, PUBL(extra) *extra, int mode)$/;"	f	typeref:typename:void
PRIV	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^PRIV(jit_exec)(const PUBL(extra) *extra_data, const pcre_uchar *subject,$/;"	f	typeref:typename:int
PRIV	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^PRIV(jit_free)(void *executable_funcs)$/;"	f	typeref:typename:void
PRIV	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^PRIV(jit_get_size)(void *executable_funcs)$/;"	f	typeref:typename:int
PRIV	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^PRIV(jit_get_target)(void)$/;"	f	typeref:typename:const char *
PRIV	my_project/libgit2/deps/pcre/pcre_newline.c	/^PRIV(is_newline)(PCRE_PUCHAR ptr, int type, PCRE_PUCHAR endptr, int *lenptr,$/;"	f	typeref:typename:BOOL
PRIV	my_project/libgit2/deps/pcre/pcre_newline.c	/^PRIV(was_newline)(PCRE_PUCHAR ptr, int type, PCRE_PUCHAR startptr, int *lenptr,$/;"	f	typeref:typename:BOOL
PRIV	my_project/libgit2/deps/pcre/pcre_ord2utf8.c	/^PRIV(ord2utf)(pcre_uint32 cvalue, pcre_uchar *buffer)$/;"	f	typeref:typename:unsigned int
PRIV	my_project/libgit2/deps/pcre/pcre_printint.c	/^#define PRIV(/;"	d	file:
PRIV	my_project/libgit2/deps/pcre/pcre_string_utils.c	/^PRIV(strcmp_uc_c8)(const pcre_uchar *str1, const char *str2)$/;"	f	typeref:typename:int
PRIV	my_project/libgit2/deps/pcre/pcre_string_utils.c	/^PRIV(strcmp_uc_c8_utf)(const pcre_uchar *str1, const char *str2)$/;"	f	typeref:typename:int
PRIV	my_project/libgit2/deps/pcre/pcre_string_utils.c	/^PRIV(strcmp_uc_uc)(const pcre_uchar *str1, const pcre_uchar *str2)$/;"	f	typeref:typename:int
PRIV	my_project/libgit2/deps/pcre/pcre_string_utils.c	/^PRIV(strcmp_uc_uc_utf)(const pcre_uchar *str1, const pcre_uchar *str2)$/;"	f	typeref:typename:int
PRIV	my_project/libgit2/deps/pcre/pcre_string_utils.c	/^PRIV(strlen_uc)(const pcre_uchar *str)$/;"	f	typeref:typename:unsigned int
PRIV	my_project/libgit2/deps/pcre/pcre_string_utils.c	/^PRIV(strncmp_uc_c8)(const pcre_uchar *str1, const char *str2, unsigned int num)$/;"	f	typeref:typename:int
PRIV	my_project/libgit2/deps/pcre/pcre_string_utils.c	/^PRIV(strncmp_uc_uc)(const pcre_uchar *str1, const pcre_uchar *str2, unsigned int num)$/;"	f	typeref:typename:int
PRIV	my_project/libgit2/deps/pcre/pcre_valid_utf8.c	/^PRIV(valid_utf)(PCRE_PUCHAR string, int length, int *erroroffset)$/;"	f	typeref:typename:int
PRIV	my_project/libgit2/deps/pcre/pcre_xclass.c	/^PRIV(xclass)(pcre_uint32 c, const pcre_uchar *data, BOOL utf)$/;"	f	typeref:typename:BOOL
PRIVATE_COMPAT_H__	my_project/libgit2/deps/ntlmclient/compat.h	/^#define PRIVATE_COMPAT_H__$/;"	d
PRIVATE_CRYPT_COMMONCRYPTO_H__	my_project/libgit2/deps/ntlmclient/crypt_commoncrypto.h	/^#define PRIVATE_CRYPT_COMMONCRYPTO_H__$/;"	d
PRIVATE_CRYPT_COMMON_H__	my_project/libgit2/deps/ntlmclient/crypt.h	/^#define PRIVATE_CRYPT_COMMON_H__$/;"	d
PRIVATE_CRYPT_MBEDTLS_H__	my_project/libgit2/deps/ntlmclient/crypt_mbedtls.h	/^#define PRIVATE_CRYPT_MBEDTLS_H__$/;"	d
PRIVATE_CRYPT_OPENSSL_H__	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^#define PRIVATE_CRYPT_OPENSSL_H__$/;"	d
PRIVATE_DATA	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define PRIVATE_DATA(/;"	d	file:
PRIVATE_NTLM_H__	my_project/libgit2/deps/ntlmclient/ntlm.h	/^#define PRIVATE_NTLM_H__$/;"	d
PRIVATE_UNICODE_BUILTIN_H__	my_project/libgit2/deps/ntlmclient/unicode_builtin.h	/^#define PRIVATE_UNICODE_BUILTIN_H__$/;"	d
PRIVATE_UNICODE_H__	my_project/libgit2/deps/ntlmclient/unicode.h	/^#define PRIVATE_UNICODE_H__$/;"	d
PRIVATE_UNICODE_ICONV_H__	my_project/libgit2/deps/ntlmclient/unicode_iconv.h	/^#define PRIVATE_UNICODE_ICONV_H__$/;"	d
PRIVATE_UTIL_H__	my_project/libgit2/deps/ntlmclient/util.h	/^#define PRIVATE_UTIL_H__$/;"	d
PRIXZ	my_project/libgit2/src/util/cc-compat.h	/^#		define PRIXZ /;"	d
PRIXZ	my_project/libgit2/src/util/cc-compat.h	/^#	define PRIXZ /;"	d
PRId64	my_project/libgit2/src/util/cc-compat.h	/^#		define PRId64 /;"	d
PRIdZ	my_project/libgit2/examples/checkout.c	/^#	define PRIdZ /;"	d	file:
PRIdZ	my_project/libgit2/src/util/cc-compat.h	/^#		define PRIdZ /;"	d
PRIdZ	my_project/libgit2/src/util/cc-compat.h	/^#	define PRIdZ /;"	d
PRIuZ	my_project/libgit2/examples/checkout.c	/^#	define PRIuZ /;"	d	file:
PRIuZ	my_project/libgit2/examples/common.h	/^#	define PRIuZ /;"	d
PRIuZ	my_project/libgit2/src/util/cc-compat.h	/^#		define PRIuZ /;"	d
PRIuZ	my_project/libgit2/src/util/cc-compat.h	/^#	define PRIuZ /;"	d
PRIuZ	my_project/libgit2/tests/clar/clar.c	/^#		define PRIuZ /;"	d	file:
PRIxZ	my_project/libgit2/examples/checkout.c	/^#	define PRIxZ /;"	d	file:
PRIxZ	my_project/libgit2/src/util/cc-compat.h	/^#		define PRIxZ /;"	d
PRIxZ	my_project/libgit2/src/util/cc-compat.h	/^#	define PRIxZ /;"	d
PRIxZ	my_project/libgit2/tests/clar/clar.c	/^#		define PRIxZ /;"	d	file:
PROGRAM_NAME	my_project/libgit2/src/cli/common.h	/^#define PROGRAM_NAME /;"	d
PROGRESS_UPDATE_TIME	my_project/libgit2/src/cli/progress.c	/^#define PROGRESS_UPDATE_TIME /;"	d	file:
PROXY	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	PROXY = 1,$/;"	e	enum:__anon3d590bbe0203	file:
PSEND	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define PSEND /;"	d	file:
PSEND	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define PSEND /;"	d	file:
PSEND	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define PSEND /;"	d	file:
PSSTART	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define PSSTART /;"	d	file:
PSSTART	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define PSSTART /;"	d	file:
PSSTART	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define PSSTART /;"	d	file:
PTRDIFF_MAX	my_project/libgit2/include/git2/stdint.h	/^#  define PTRDIFF_MAX /;"	d
PTRDIFF_MIN	my_project/libgit2/include/git2/stdint.h	/^#  define PTRDIFF_MIN /;"	d
PT_ALNUM	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_ALNUM /;"	d
PT_ANY	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_ANY /;"	d
PT_CLIST	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_CLIST /;"	d
PT_GC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_GC /;"	d
PT_LAMP	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_LAMP /;"	d
PT_PC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_PC /;"	d
PT_PXGRAPH	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_PXGRAPH /;"	d
PT_PXPRINT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_PXPRINT /;"	d
PT_PXPUNCT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_PXPUNCT /;"	d
PT_PXSPACE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_PXSPACE /;"	d
PT_SC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_SC /;"	d
PT_SPACE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_SPACE /;"	d
PT_TABSIZE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_TABSIZE /;"	d
PT_UCNC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_UCNC /;"	d
PT_WORD	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PT_WORD /;"	d
PUBL	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PUBL(/;"	d
PUBLIC_COMPILE_OPTIONS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PUBLIC_COMPILE_OPTIONS /;"	d
PUBLIC_DFA_EXEC_OPTIONS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PUBLIC_DFA_EXEC_OPTIONS /;"	d
PUBLIC_EXEC_OPTIONS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PUBLIC_EXEC_OPTIONS /;"	d
PUBLIC_JIT_EXEC_OPTIONS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PUBLIC_JIT_EXEC_OPTIONS /;"	d
PUBLIC_STUDY_OPTIONS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PUBLIC_STUDY_OPTIONS /;"	d
PULL	my_project/libgit2/deps/zlib/infback.c	/^#define PULL(/;"	d	file:
PULLBYTE	my_project/libgit2/deps/zlib/infback.c	/^#define PULLBYTE(/;"	d	file:
PULLBYTE	my_project/libgit2/deps/zlib/inflate.c	/^#define PULLBYTE(/;"	d	file:
PUSH_BACKTRACK	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define PUSH_BACKTRACK(/;"	d	file:
PUSH_BACKTRACK_NOVALUE	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define PUSH_BACKTRACK_NOVALUE(/;"	d	file:
PUSH_NEXT	my_project/libgit2/src/util/tsort.c	/^#define PUSH_NEXT(/;"	d	file:
PUT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PUT(/;"	d
PUT2	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PUT2(/;"	d
PUT2INC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PUT2INC(/;"	d
PUTINC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define PUTINC(/;"	d
Parameters	my_project/libgit2/docs/conventions.md	/^## Parameters$/;"	s	chapter:Libgit2 Conventions
PathBuffer	my_project/libgit2/src/util/win32/reparse.h	/^			WCHAR  PathBuffer[1];$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0208	typeref:typename:WCHAR[1]
PathBuffer	my_project/libgit2/src/util/win32/reparse.h	/^			WCHAR  PathBuffer[1];$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0308	typeref:typename:WCHAR[1]
Performance improvements	my_project/libgit2/docs/changelog.md	/^### Performance improvements$/;"	S	section:Other changes
Picking Actions	my_project/libgit2/docs/checkout-internals.md	/^Picking Actions$/;"	c
Platform compatibility fixes	my_project/libgit2/docs/changelog.md	/^### Platform compatibility fixes$/;"	S	section:Other changes
Porting Code From Other Open-Source Projects	my_project/libgit2/docs/contributing.md	/^## Porting Code From Other Open-Source Projects$/;"	s	chapter:Welcome to libgit2!
Pos	my_project/libgit2/deps/zlib/deflate.h	/^typedef ush Pos;$/;"	t	typeref:typename:ush
Posf	my_project/libgit2/deps/zlib/deflate.h	/^typedef Pos FAR Posf;$/;"	t	typeref:typename:Pos FAR
Prerequisites for building fuzz targets:	my_project/libgit2/docs/fuzzing.md	/^## Prerequisites for building fuzz targets:$/;"	s	chapter:Fuzzing
PrintNameLength	my_project/libgit2/src/util/win32/reparse.h	/^			USHORT PrintNameLength;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0208	typeref:typename:USHORT
PrintNameLength	my_project/libgit2/src/util/win32/reparse.h	/^			USHORT PrintNameLength;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0308	typeref:typename:USHORT
PrintNameOffset	my_project/libgit2/src/util/win32/reparse.h	/^			USHORT PrintNameOffset;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0208	typeref:typename:USHORT
PrintNameOffset	my_project/libgit2/src/util/win32/reparse.h	/^			USHORT PrintNameOffset;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0308	typeref:typename:USHORT
ProcessUrlAction	my_project/libgit2/deps/winhttp/urlmon.h	/^	LPVOID ProcessUrlAction;$/;"	m	struct:IInternetSecurityManagerVtbl	typeref:typename:LPVOID
Projects For LibGit2	my_project/libgit2/docs/projects.md	/^Projects For LibGit2$/;"	c
Ptr	my_project/libgit2/src/util/win32/thread.h	/^typedef struct { void *Ptr; } GIT_SRWLOCK;$/;"	m	struct:__anond08cd1a00208	typeref:typename:void *
Public Header Template	my_project/libgit2/docs/conventions.md	/^## Public Header Template$/;"	s	chapter:Libgit2 Conventions
Pull Requests	my_project/libgit2/docs/contributing.md	/^## Pull Requests$/;"	s	chapter:Welcome to libgit2!
Python_ADDITIONAL_VERSIONS	my_project/libgit2/tests/libgit2/CMakeLists.txt	/^set(Python_ADDITIONAL_VERSIONS 3 2.7)$/;"	v
Python_ADDITIONAL_VERSIONS	my_project/libgit2/tests/util/CMakeLists.txt	/^set(Python_ADDITIONAL_VERSIONS 3 2.7)$/;"	v
QUERY	my_project/libgit2/src/util/net.c	/^	enum { PATH, QUERY, FRAGMENT } state = PATH;$/;"	e	enum:url_parse_path::__anon850d8ea80303	file:
QUIET_FILE	my_project/libgit2/src/libgit2/rebase.c	/^#define QUIET_FILE /;"	d	file:
QueryCustomPolicy	my_project/libgit2/deps/winhttp/urlmon.h	/^	LPVOID QueryCustomPolicy;$/;"	m	struct:IInternetSecurityManagerVtbl	typeref:typename:LPVOID
Quick Start	my_project/libgit2/README.md	/^Quick Start$/;"	c
R	my_project/libgit2/src/util/wildmatch.c	/^	R = GIT_REGEX_SPECIAL,	\/* $, (, ), +, ., ^, {, | *\/$/;"	e	enum:__anon8b99d91e0103	file:
RABIN_SHIFT	my_project/libgit2/src/libgit2/delta.c	/^#define RABIN_SHIFT /;"	d	file:
RABIN_WINDOW	my_project/libgit2/src/libgit2/delta.c	/^#define RABIN_WINDOW /;"	d	file:
RANK	my_project/libgit2/deps/zlib/deflate.c	/^#define RANK(/;"	d	file:
READING_BODY	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	READING_BODY,$/;"	e	enum:__anon3d590bbe0303	file:
READING_RESPONSE	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	READING_RESPONSE,$/;"	e	enum:__anon3d590bbe0303	file:
READLINE_FOUND	my_project/libgit2/deps/pcre/cmake/FindReadline.cmake	/^  set(READLINE_FOUND TRUE)$/;"	v
READ_BLOCKSIZE	my_project/libgit2/src/libgit2/streams/schannel.c	/^#define READ_BLOCKSIZE /;"	d	file:
READ_CHAR_MAX	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define READ_CHAR_MAX /;"	d	file:
REAL_GET_UCD	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define REAL_GET_UCD(/;"	d
REAL_PCRE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define REAL_PCRE /;"	d
REAL_PCRE_FLAGS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define REAL_PCRE_FLAGS(/;"	d
REAL_PCRE_MAGIC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define REAL_PCRE_MAGIC(/;"	d
REAL_PCRE_OPTIONS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define REAL_PCRE_OPTIONS(/;"	d
REAL_PCRE_SIZE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define REAL_PCRE_SIZE(/;"	d
REBASE_APPLY_DIR	my_project/libgit2/src/libgit2/rebase.c	/^#define REBASE_APPLY_DIR /;"	d	file:
REBASE_DIR_MODE	my_project/libgit2/src/libgit2/rebase.c	/^#define REBASE_DIR_MODE /;"	d	file:
REBASE_FILE_MODE	my_project/libgit2/src/libgit2/rebase.c	/^#define REBASE_FILE_MODE /;"	d	file:
REBASE_MERGE_DIR	my_project/libgit2/src/libgit2/rebase.c	/^#define REBASE_MERGE_DIR /;"	d	file:
REC	my_project/libgit2/deps/xdiff/xhistogram.c	/^#define REC(/;"	d	file:
RECORD_CALLBACKS_INIT	my_project/libgit2/tests/libgit2/online/push_util.h	/^#define RECORD_CALLBACKS_INIT(/;"	d
REC_STACK_SAVE_MAX	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define REC_STACK_SAVE_MAX /;"	d	file:
REFLOG	my_project/libgit2/tests/libgit2/worktree/reflog.c	/^#define REFLOG /;"	d	file:
REFLOG_MESSAGE	my_project/libgit2/tests/libgit2/worktree/reflog.c	/^#define REFLOG_MESSAGE /;"	d	file:
REFNAME_DECOMPOSED	my_project/libgit2/tests/libgit2/refs/unicode.c	/^#define REFNAME_DECOMPOSED /;"	d	file:
REFSPEC	my_project/libgit2/tests/libgit2/online/remotes.c	/^#define REFSPEC /;"	d	file:
REGEX_BACKEND	my_project/libgit2/CMakeLists.txt	/^   set(REGEX_BACKEND           "" CACHE STRING "Regular expression implementation. One of regcom/;"	v
REGEX_BACKEND	my_project/libgit2/cmake/SelectRegex.cmake	/^		set(REGEX_BACKEND "builtin")$/;"	v
REGEX_BACKEND	my_project/libgit2/cmake/SelectRegex.cmake	/^		set(REGEX_BACKEND "pcre")$/;"	v
REGEX_BACKEND	my_project/libgit2/cmake/SelectRegex.cmake	/^		set(REGEX_BACKEND "regcomp_l")$/;"	v
REGISTER	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define REGISTER /;"	d	file:
REGISTER	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define REGISTER$/;"	d	file:
REG_GITFORWINDOWS_KEY	my_project/libgit2/src/libgit2/sysdir.c	/^# define REG_GITFORWINDOWS_KEY /;"	d	file:
REG_GITFORWINDOWS_KEY_WOW64	my_project/libgit2/src/libgit2/sysdir.c	/^# define REG_GITFORWINDOWS_KEY_WOW64 /;"	d	file:
REG_NEGATE	my_project/libgit2/src/libgit2/diff_driver.c	/^	REG_NEGATE = (1 << 15) \/* get out of the way of existing flags *\/$/;"	e	enum:__anon9fad28f40303	file:
RELATIVE_DEDENT_PENALTY	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define RELATIVE_DEDENT_PENALTY /;"	d	file:
RELATIVE_DEDENT_WITH_BLANK_PENALTY	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define RELATIVE_DEDENT_WITH_BLANK_PENALTY /;"	d	file:
RELATIVE_INDENT_PENALTY	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define RELATIVE_INDENT_PENALTY /;"	d	file:
RELATIVE_INDENT_WITH_BLANK_PENALTY	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define RELATIVE_INDENT_WITH_BLANK_PENALTY /;"	d	file:
RELATIVE_OUTDENT_PENALTY	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define RELATIVE_OUTDENT_PENALTY /;"	d	file:
RELATIVE_OUTDENT_WITH_BLANK_PENALTY	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define RELATIVE_OUTDENT_WITH_BLANK_PENALTY /;"	d	file:
REMOTE_INSTEADOF_PUSHURL_BOTH	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^#define REMOTE_INSTEADOF_PUSHURL_BOTH /;"	d	file:
REMOTE_INSTEADOF_PUSHURL_FETCH	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^#define REMOTE_INSTEADOF_PUSHURL_FETCH /;"	d	file:
REMOTE_INSTEADOF_PUSHURL_PUSH	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^#define REMOTE_INSTEADOF_PUSHURL_PUSH /;"	d	file:
REMOTE_INSTEADOF_URL_BOTH	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^#define REMOTE_INSTEADOF_URL_BOTH /;"	d	file:
REMOTE_INSTEADOF_URL_FETCH	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^#define REMOTE_INSTEADOF_URL_FETCH /;"	d	file:
REMOTE_INSTEADOF_URL_PUSH	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^#define REMOTE_INSTEADOF_URL_PUSH /;"	d	file:
REMOTE_ORIGIN	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^#define REMOTE_ORIGIN /;"	d	file:
REMOVED_IN_BRANCH_REUC_ENTRY	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define REMOVED_IN_BRANCH_REUC_ENTRY /;"	d	file:
REMOVED_IN_BRANCH_REUC_ENTRY	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define REMOVED_IN_BRANCH_REUC_ENTRY /;"	d	file:
REMOVED_IN_MASTER_REUC_ENTRY	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define REMOVED_IN_MASTER_REUC_ENTRY /;"	d	file:
REMOVED_IN_MASTER_REUC_ENTRY	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define REMOVED_IN_MASTER_REUC_ENTRY /;"	d	file:
RENAME_MODIFICATION_COMMIT	my_project/libgit2/tests/libgit2/diff/rename.c	/^#define RENAME_MODIFICATION_COMMIT /;"	d	file:
REP1024	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define REP1024(/;"	d
REP15	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define REP15(/;"	d
REP16	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define REP16(/;"	d
REP256	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define REP256(/;"	d
REP4	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define REP4(/;"	d
REPARSE_DATA_HEADER_SIZE	my_project/libgit2/src/util/win32/reparse.h	/^#define REPARSE_DATA_HEADER_SIZE	/;"	d
REPARSE_DATA_MOUNTPOINT_HEADER_SIZE	my_project/libgit2/src/util/win32/reparse.h	/^#define REPARSE_DATA_MOUNTPOINT_HEADER_SIZE	/;"	d
REPARSE_DATA_UNION_SIZE	my_project/libgit2/src/util/win32/reparse.h	/^#define REPARSE_DATA_UNION_SIZE	/;"	d
REPEAT	my_project/libgit2/tests/libgit2/object/cache.c	/^#define REPEAT /;"	d	file:
REPEAT	my_project/libgit2/tests/libgit2/threads/refdb.c	/^#define REPEAT /;"	d	file:
REPO1_REFNAME	my_project/libgit2/tests/libgit2/remote/fetch.c	/^static const char *REPO1_REFNAME = "refs\/heads\/main";$/;"	v	typeref:typename:const char *	file:
REPO2_REFNAME	my_project/libgit2/tests/libgit2/remote/fetch.c	/^static const char *REPO2_REFNAME = "refs\/remotes\/repo1\/main";$/;"	v	typeref:typename:const char *	file:
REPOSITORY_ALTERNATE_FOLDER	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define REPOSITORY_ALTERNATE_FOLDER /;"	d	file:
REPOSITORY_ALTERNATE_FOLDER_SUB	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define REPOSITORY_ALTERNATE_FOLDER_SUB /;"	d	file:
REPOSITORY_ALTERNATE_FOLDER_SUB_SUB	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define REPOSITORY_ALTERNATE_FOLDER_SUB_SUB /;"	d	file:
REPOSITORY_ALTERNATE_FOLDER_SUB_SUB_SUB	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define REPOSITORY_ALTERNATE_FOLDER_SUB_SUB_SUB /;"	d	file:
REPO_NAME	my_project/libgit2/tests/libgit2/stash/foreach.c	/^#define REPO_NAME /;"	d	file:
REPO_PATH	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^#define REPO_PATH /;"	d	file:
REPO_PATHS_INIT	my_project/libgit2/src/libgit2/repository.c	/^#define REPO_PATHS_INIT /;"	d	file:
REPZ_11_138	my_project/libgit2/deps/zlib/trees.c	/^#define REPZ_11_138 /;"	d	file:
REPZ_3_10	my_project/libgit2/deps/zlib/trees.c	/^#define REPZ_3_10 /;"	d	file:
REP_3_6	my_project/libgit2/deps/zlib/trees.c	/^#define REP_3_6 /;"	d	file:
REQ_BYTE_MAX	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define REQ_BYTE_MAX /;"	d
REQ_CASELESS	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define REQ_CASELESS /;"	d	file:
REQ_NONE	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define REQ_NONE /;"	d	file:
REQ_UNSET	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define REQ_UNSET /;"	d	file:
REQ_VARY	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define REQ_VARY /;"	d	file:
RESTORE	my_project/libgit2/deps/zlib/infback.c	/^#define RESTORE(/;"	d	file:
RESTORE	my_project/libgit2/deps/zlib/inflate.c	/^#define RESTORE(/;"	d	file:
RESULT	my_project/libgit2/src/libgit2/commit_list.h	/^#define RESULT /;"	d
RETURN_ADDR	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define RETURN_ADDR /;"	d	file:
REVERSED_DATA_LEN	my_project/libgit2/tests/libgit2/filter/custom.c	/^#define REVERSED_DATA_LEN /;"	d	file:
REVERSED_MAGIC_NUMBER	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define REVERSED_MAGIC_NUMBER /;"	d
REVERSE_FILTER_PRIORITY	my_project/libgit2/tests/libgit2/filter/custom.c	/^#define REVERSE_FILTER_PRIORITY /;"	d	file:
REWRITE_COPY_COMMIT	my_project/libgit2/tests/libgit2/diff/rename.c	/^#define REWRITE_COPY_COMMIT /;"	d	file:
REWRITE_DELETE_COMMIT	my_project/libgit2/tests/libgit2/diff/rename.c	/^#define REWRITE_DELETE_COMMIT /;"	d	file:
REWRITTEN_FILE	my_project/libgit2/src/libgit2/rebase.c	/^#define REWRITTEN_FILE /;"	d	file:
RM1	my_project/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anon0d8616ff0103	file:
RM10	my_project/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anon0d8616ff0103	file:
RM11	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anon0d8616ff0103	file:
RM12	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anon0d8616ff0103	file:
RM13	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anon0d8616ff0103	file:
RM14	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anon0d8616ff0103	file:
RM15	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anon0d8616ff0103	file:
RM16	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anon0d8616ff0103	file:
RM17	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anon0d8616ff0103	file:
RM18	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anon0d8616ff0103	file:
RM19	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anon0d8616ff0103	file:
RM2	my_project/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anon0d8616ff0103	file:
RM20	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM11,  RM12, RM13, RM14, RM15, RM16, RM17, RM18, RM19, RM20,$/;"	e	enum:__anon0d8616ff0103	file:
RM21	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anon0d8616ff0103	file:
RM22	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anon0d8616ff0103	file:
RM23	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anon0d8616ff0103	file:
RM24	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anon0d8616ff0103	file:
RM25	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anon0d8616ff0103	file:
RM26	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anon0d8616ff0103	file:
RM27	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anon0d8616ff0103	file:
RM28	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anon0d8616ff0103	file:
RM29	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anon0d8616ff0103	file:
RM3	my_project/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anon0d8616ff0103	file:
RM30	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM21,  RM22, RM23, RM24, RM25, RM26, RM27, RM28, RM29, RM30,$/;"	e	enum:__anon0d8616ff0103	file:
RM31	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anon0d8616ff0103	file:
RM32	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anon0d8616ff0103	file:
RM33	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anon0d8616ff0103	file:
RM34	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anon0d8616ff0103	file:
RM35	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anon0d8616ff0103	file:
RM36	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anon0d8616ff0103	file:
RM37	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anon0d8616ff0103	file:
RM38	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anon0d8616ff0103	file:
RM39	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anon0d8616ff0103	file:
RM4	my_project/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anon0d8616ff0103	file:
RM40	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM31,  RM32, RM33, RM34, RM35, RM36, RM37, RM38, RM39, RM40,$/;"	e	enum:__anon0d8616ff0103	file:
RM41	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anon0d8616ff0103	file:
RM42	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anon0d8616ff0103	file:
RM43	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anon0d8616ff0103	file:
RM44	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anon0d8616ff0103	file:
RM45	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anon0d8616ff0103	file:
RM46	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anon0d8616ff0103	file:
RM47	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anon0d8616ff0103	file:
RM48	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anon0d8616ff0103	file:
RM49	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anon0d8616ff0103	file:
RM5	my_project/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anon0d8616ff0103	file:
RM50	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM41,  RM42, RM43, RM44, RM45, RM46, RM47, RM48, RM49, RM50,$/;"	e	enum:__anon0d8616ff0103	file:
RM51	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anon0d8616ff0103	file:
RM52	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anon0d8616ff0103	file:
RM53	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anon0d8616ff0103	file:
RM54	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anon0d8616ff0103	file:
RM55	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anon0d8616ff0103	file:
RM56	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anon0d8616ff0103	file:
RM57	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anon0d8616ff0103	file:
RM58	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anon0d8616ff0103	file:
RM59	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anon0d8616ff0103	file:
RM6	my_project/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anon0d8616ff0103	file:
RM60	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM51,  RM52, RM53, RM54, RM55, RM56, RM57, RM58, RM59, RM60,$/;"	e	enum:__anon0d8616ff0103	file:
RM61	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM61,  RM62, RM63, RM64, RM65, RM66, RM67 };$/;"	e	enum:__anon0d8616ff0103	file:
RM62	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM61,  RM62, RM63, RM64, RM65, RM66, RM67 };$/;"	e	enum:__anon0d8616ff0103	file:
RM63	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM61,  RM62, RM63, RM64, RM65, RM66, RM67 };$/;"	e	enum:__anon0d8616ff0103	file:
RM64	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM61,  RM62, RM63, RM64, RM65, RM66, RM67 };$/;"	e	enum:__anon0d8616ff0103	file:
RM65	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM61,  RM62, RM63, RM64, RM65, RM66, RM67 };$/;"	e	enum:__anon0d8616ff0103	file:
RM66	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM61,  RM62, RM63, RM64, RM65, RM66, RM67 };$/;"	e	enum:__anon0d8616ff0103	file:
RM67	my_project/libgit2/deps/pcre/pcre_exec.c	/^       RM61,  RM62, RM63, RM64, RM65, RM66, RM67 };$/;"	e	enum:__anon0d8616ff0103	file:
RM7	my_project/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anon0d8616ff0103	file:
RM8	my_project/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anon0d8616ff0103	file:
RM9	my_project/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	e	enum:__anon0d8616ff0103	file:
RMATCH	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define RMATCH(/;"	d	file:
RM_RETRY_COUNT	my_project/libgit2/tests/clar/clar/fs.h	/^#define RM_RETRY_COUNT	/;"	d
RM_RETRY_DELAY	my_project/libgit2/tests/clar/clar/fs.h	/^#define RM_RETRY_DELAY	/;"	d
ROOM	my_project/libgit2/deps/zlib/infback.c	/^#define ROOM(/;"	d	file:
ROOT_PREFIX	my_project/libgit2/tests/libgit2/config/conditionals.c	/^# define ROOT_PREFIX /;"	d	file:
ROOT_PREFIX	my_project/libgit2/tests/libgit2/config/conditionals.c	/^# define ROOT_PREFIX$/;"	d	file:
ROTATE_LEFT	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define ROTATE_LEFT(/;"	d	file:
RREF_ANY	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define RREF_ANY /;"	d
RRETURN	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define RRETURN(/;"	d	file:
RTSP_METHOD_MAP	my_project/libgit2/deps/llhttp/llhttp.h	/^#define RTSP_METHOD_MAP(/;"	d
R_OK	my_project/libgit2/src/util/posix.h	/^#define R_OK /;"	d
References	my_project/libgit2/docs/fuzzing.md	/^## References$/;"	s	chapter:Fuzzing
Releasing the library	my_project/libgit2/docs/release.md	/^# Releasing the library$/;"	c
RemoteAddress	my_project/libgit2/deps/winhttp/winhttp.h	/^    SOCKADDR_STORAGE RemoteAddress;$/;"	m	struct:__anon0b61ebe80808	typeref:typename:SOCKADDR_STORAGE
ReparseBuffer	my_project/libgit2/src/util/win32/reparse.h	/^	} ReparseBuffer;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER	typeref:union:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a
ReparseDataLength	my_project/libgit2/src/util/win32/reparse.h	/^	USHORT ReparseDataLength;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER	typeref:typename:USHORT
ReparseTag	my_project/libgit2/src/util/win32/reparse.h	/^	ULONG  ReparseTag;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER	typeref:typename:ULONG
Reporting Bugs	my_project/libgit2/docs/contributing.md	/^## Reporting Bugs$/;"	s	chapter:Welcome to libgit2!
Reporting a Vulnerability	my_project/libgit2/SECURITY.md	/^## Reporting a Vulnerability$/;"	s	chapter:Security Policy
Repository and Workdir Path Reporting	my_project/libgit2/docs/differences-from-git.md	/^Repository and Workdir Path Reporting$/;"	s	chapter:Differences from Git
Reserved	my_project/libgit2/src/util/win32/reparse.h	/^	USHORT Reserved;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER	typeref:typename:USHORT
Return codes	my_project/libgit2/docs/conventions.md	/^## Return codes$/;"	s	chapter:Libgit2 Conventions
Run the fuzz targets	my_project/libgit2/docs/fuzzing.md	/^## Run the fuzz targets$/;"	s	chapter:Fuzzing
Running Tests	my_project/libgit2/README.md	/^Running Tests$/;"	s	chapter:Building libgit2 - Using CMake
Running benchmark tests	my_project/libgit2/tests/benchmarks/README.md	/^## Running benchmark tests$/;"	s	chapter:libgit2 benchmarks
Running individual benchmark tests	my_project/libgit2/tests/benchmarks/README.md	/^### Running individual benchmark tests$/;"	S	section:libgit2 benchmarks""Running benchmark tests
Running tests to compare two different implementations	my_project/libgit2/tests/benchmarks/README.md	/^### Running tests to compare two different implementations$/;"	S	section:libgit2 benchmarks""Running benchmark tests
S	my_project/libgit2/src/util/wildmatch.c	/^	S = GIT_SPACE,$/;"	e	enum:__anon8b99d91e0103	file:
S11	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define S11 /;"	d	file:
S12	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define S12 /;"	d	file:
S13	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define S13 /;"	d	file:
S14	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define S14 /;"	d	file:
S21	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define S21 /;"	d	file:
S22	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define S22 /;"	d	file:
S23	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define S23 /;"	d	file:
S24	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define S24 /;"	d	file:
S31	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define S31 /;"	d	file:
S32	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define S32 /;"	d	file:
S33	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define S33 /;"	d	file:
S34	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^#define S34 /;"	d	file:
SAVED_CMAKE_C_FLAGS	my_project/libgit2/cmake/CheckPrototypeDefinitionSafe.cmake	/^	set(SAVED_CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")$/;"	v	function:check_prototype_definition_safe
SCHECK_PARTIAL	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define SCHECK_PARTIAL(/;"	d	file:
SCHEME	my_project/libgit2/src/util/net.c	/^		SCHEME_START, SCHEME,$/;"	e	enum:git_net_url_parse::__anon850d8ea80403	file:
SCHEME_START	my_project/libgit2/src/util/net.c	/^		SCHEME_START, SCHEME,$/;"	e	enum:git_net_url_parse::__anon850d8ea80403	file:
SECBUFFER_ALERT	my_project/libgit2/src/libgit2/streams/schannel.c	/^# define SECBUFFER_ALERT /;"	d	file:
SECTION_BAR	my_project/libgit2/tests/libgit2/config/write.c	/^#define SECTION_BAR /;"	d	file:
SECTION_FOO	my_project/libgit2/tests/libgit2/config/write.c	/^#define SECTION_FOO /;"	d	file:
SECTION_FOO_WITH_COMMENT	my_project/libgit2/tests/libgit2/config/write.c	/^#define SECTION_FOO_WITH_COMMENT /;"	d	file:
SECURITY_FLAG_IGNORE_CERT_CN_INVALID	my_project/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_IGNORE_CERT_CN_INVALID /;"	d
SECURITY_FLAG_IGNORE_CERT_DATE_INVALID	my_project/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_IGNORE_CERT_DATE_INVALID /;"	d
SECURITY_FLAG_IGNORE_CERT_WRONG_USAGE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_IGNORE_CERT_WRONG_USAGE /;"	d
SECURITY_FLAG_IGNORE_UNKNOWN_CA	my_project/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_IGNORE_UNKNOWN_CA /;"	d
SECURITY_FLAG_SECURE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_SECURE /;"	d
SECURITY_FLAG_STRENGTH_MEDIUM	my_project/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_STRENGTH_MEDIUM /;"	d
SECURITY_FLAG_STRENGTH_STRONG	my_project/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_STRENGTH_STRONG /;"	d
SECURITY_FLAG_STRENGTH_WEAK	my_project/libgit2/deps/winhttp/winhttp.h	/^#define SECURITY_FLAG_STRENGTH_WEAK /;"	d
SECURITY_FOUND	my_project/libgit2/cmake/FindSecurity.cmake	/^	set(SECURITY_FOUND TRUE)$/;"	v
SECURITY_LDFLAGS	my_project/libgit2/cmake/FindSecurity.cmake	/^	set(SECURITY_LDFLAGS "-framework Security")$/;"	v
SECURITY_WIN32	my_project/libgit2/src/libgit2/streams/schannel.c	/^#define SECURITY_WIN32$/;"	d	file:
SECURITY_WIN32	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^#define SECURITY_WIN32$/;"	d	file:
SEEK_CUR	my_project/libgit2/deps/zlib/zconf.h	/^#  define SEEK_CUR /;"	d
SEEK_END	my_project/libgit2/deps/zlib/zconf.h	/^#  define SEEK_END /;"	d
SEEK_SET	my_project/libgit2/deps/zlib/zconf.h	/^#  define SEEK_SET /;"	d
SEEN	my_project/libgit2/src/libgit2/describe.c	/^#define SEEN /;"	d	file:
SENDING_BODY	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	SENDING_BODY,$/;"	e	enum:__anon3d590bbe0303	file:
SENDING_REQUEST	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	SENDING_REQUEST,$/;"	e	enum:__anon3d590bbe0303	file:
SENT_REQUEST	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	SENT_REQUEST,$/;"	e	enum:__anon3d590bbe0303	file:
SEPARATOR	my_project/libgit2/deps/zlib/trees.c	/^#  define SEPARATOR(/;"	d	file:
SERVER	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	SERVER$/;"	e	enum:__anon3d590bbe0203	file:
SERVER_TYPE_PROXY	my_project/libgit2/src/libgit2/transports/http.c	/^#define SERVER_TYPE_PROXY /;"	d	file:
SERVER_TYPE_REMOTE	my_project/libgit2/src/libgit2/transports/http.c	/^#define SERVER_TYPE_REMOTE /;"	d	file:
SETBIT	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define SETBIT(/;"	d	file:
SET_BIT	my_project/libgit2/deps/pcre/pcre_study.c	/^#define SET_BIT(/;"	d	file:
SET_CHAR_OFFSET	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SET_CHAR_OFFSET(/;"	d	file:
SET_LABEL	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SET_LABEL(/;"	d	file:
SET_REPO_CONFIG	my_project/libgit2/src/libgit2/repository.c	/^#define SET_REPO_CONFIG(/;"	d	file:
SET_TYPE_OFFSET	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SET_TYPE_OFFSET(/;"	d	file:
SHA1	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA1, SHA224, SHA256, SHA384, SHA512$/;"	e	enum:SHAversion
SHA1COMPRESS_FULL_ROUND1_STEP_EXPAND	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define SHA1COMPRESS_FULL_ROUND1_STEP_EXPAND(/;"	d	file:
SHA1COMPRESS_FULL_ROUND1_STEP_LOAD	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define SHA1COMPRESS_FULL_ROUND1_STEP_LOAD(/;"	d	file:
SHA1COMPRESS_FULL_ROUND2_STEP	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define SHA1COMPRESS_FULL_ROUND2_STEP(/;"	d	file:
SHA1COMPRESS_FULL_ROUND3_STEP	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define SHA1COMPRESS_FULL_ROUND3_STEP(/;"	d	file:
SHA1COMPRESS_FULL_ROUND4_STEP	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define SHA1COMPRESS_FULL_ROUND4_STEP(/;"	d	file:
SHA1Context	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^typedef struct SHA1Context {$/;"	s
SHA1Context	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^} SHA1Context;$/;"	t	typeref:struct:SHA1Context
SHA1DCFinal	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^int SHA1DCFinal(unsigned char output[20], SHA1_CTX *ctx)$/;"	f	typeref:typename:int
SHA1DCInit	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^void SHA1DCInit(SHA1_CTX *ctx)$/;"	f	typeref:typename:void
SHA1DCSetCallback	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^void SHA1DCSetCallback(SHA1_CTX *ctx, collision_block_callback callback)$/;"	f	typeref:typename:void
SHA1DCSetDetectReducedRoundCollision	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^void SHA1DCSetDetectReducedRoundCollision(SHA1_CTX *ctx, int reduced_round_coll)$/;"	f	typeref:typename:void
SHA1DCSetSafeHash	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^void SHA1DCSetSafeHash(SHA1_CTX *ctx, int safehash)$/;"	f	typeref:typename:void
SHA1DCSetUseDetectColl	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^void SHA1DCSetUseDetectColl(SHA1_CTX *ctx, int detect_coll)$/;"	f	typeref:typename:void
SHA1DCSetUseUBC	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^void SHA1DCSetUseUBC(SHA1_CTX *ctx, int ubc_check)$/;"	f	typeref:typename:void
SHA1DCUpdate	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^void SHA1DCUpdate(SHA1_CTX *ctx, const char *buf, size_t len)$/;"	f	typeref:typename:void
SHA1DC_ALLOW_UNALIGNED_ACCESS	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define SHA1DC_ALLOW_UNALIGNED_ACCESS$/;"	d	file:
SHA1DC_BIGENDIAN	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define SHA1DC_BIGENDIAN$/;"	d	file:
SHA1DC_INIT_SAFE_HASH_DEFAULT	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define SHA1DC_INIT_SAFE_HASH_DEFAULT /;"	d	file:
SHA1DC_ON_INTEL_LIKE_PROCESSOR	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define SHA1DC_ON_INTEL_LIKE_PROCESSOR$/;"	d	file:
SHA1DC_SHA1_H	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^#define SHA1DC_SHA1_H$/;"	d
SHA1DC_UBC_CHECK_H	my_project/libgit2/src/util/hash/sha1dc/ubc_check.h	/^#define SHA1DC_UBC_CHECK_H$/;"	d
SHA1HashSize	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA1HashSize = 20, SHA224HashSize = 28, SHA256HashSize = 32,$/;"	e	enum:__anon4de7e74e0203
SHA1HashSizeBits	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA1HashSizeBits = 160, SHA224HashSizeBits = 224,$/;"	e	enum:__anon4de7e74e0203
SHA1_CTX	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^} SHA1_CTX;$/;"	t	typeref:struct:__anon09d552690108
SHA1_Final	my_project/libgit2/src/util/hash/openssl.c	/^static int (*SHA1_Final)(unsigned char *md, SHA_CTX *c);$/;"	v	typeref:typename:int (*)(unsigned char * md,SHA_CTX * c)	file:
SHA1_Init	my_project/libgit2/src/util/hash/openssl.c	/^static int (*SHA1_Init)(SHA_CTX *c);$/;"	v	typeref:typename:int (*)(SHA_CTX * c)	file:
SHA1_Message_Block_Size	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA1_Message_Block_Size = 64, SHA224_Message_Block_Size = 64,$/;"	e	enum:__anon4de7e74e0203
SHA1_RECOMPRESS	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define SHA1_RECOMPRESS(/;"	d	file:
SHA1_STORE_STATE	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define SHA1_STORE_STATE(/;"	d	file:
SHA1_Update	my_project/libgit2/src/util/hash/openssl.c	/^static int (*SHA1_Update)(SHA_CTX *c, const void *data, size_t len);$/;"	v	typeref:typename:int (*)(SHA_CTX * c,const void * data,size_t len)	file:
SHA224	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA1, SHA224, SHA256, SHA384, SHA512$/;"	e	enum:SHAversion
SHA224Context	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^typedef struct SHA256Context SHA224Context;$/;"	t	typeref:struct:SHA256Context
SHA224FinalBits	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^int SHA224FinalBits(SHA224Context *context,$/;"	f	typeref:typename:int
SHA224HashSize	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA1HashSize = 20, SHA224HashSize = 28, SHA256HashSize = 32,$/;"	e	enum:__anon4de7e74e0203
SHA224HashSizeBits	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA1HashSizeBits = 160, SHA224HashSizeBits = 224,$/;"	e	enum:__anon4de7e74e0203
SHA224Input	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^int SHA224Input(SHA224Context *context, const uint8_t *message_array,$/;"	f	typeref:typename:int
SHA224Reset	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^int SHA224Reset(SHA224Context *context)$/;"	f	typeref:typename:int
SHA224Result	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^int SHA224Result(SHA224Context *context,$/;"	f	typeref:typename:int
SHA224_256AddLength	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^#define SHA224_256AddLength(/;"	d	file:
SHA224_256Finalize	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^static void SHA224_256Finalize(SHA256Context *context,$/;"	f	typeref:typename:void	file:
SHA224_256PadMessage	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^static void SHA224_256PadMessage(SHA256Context *context,$/;"	f	typeref:typename:void	file:
SHA224_256ProcessMessageBlock	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^static void SHA224_256ProcessMessageBlock(SHA256Context *context)$/;"	f	typeref:typename:void	file:
SHA224_256Reset	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^static int SHA224_256Reset(SHA256Context *context, uint32_t *H0)$/;"	f	typeref:typename:int	file:
SHA224_256ResultN	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^static int SHA224_256ResultN(SHA256Context *context,$/;"	f	typeref:typename:int	file:
SHA224_H0	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^static uint32_t SHA224_H0[SHA256HashSize\/4] = {$/;"	v	typeref:typename:uint32_t[]	file:
SHA224_Message_Block_Size	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA1_Message_Block_Size = 64, SHA224_Message_Block_Size = 64,$/;"	e	enum:__anon4de7e74e0203
SHA256	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA1, SHA224, SHA256, SHA384, SHA512$/;"	e	enum:SHAversion
SHA256Context	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^typedef struct SHA256Context {$/;"	s
SHA256Context	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^} SHA256Context;$/;"	t	typeref:struct:SHA256Context
SHA256FinalBits	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^int SHA256FinalBits(SHA256Context *context,$/;"	f	typeref:typename:int
SHA256HashSize	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA1HashSize = 20, SHA224HashSize = 28, SHA256HashSize = 32,$/;"	e	enum:__anon4de7e74e0203
SHA256HashSizeBits	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA256HashSizeBits = 256, SHA384HashSizeBits = 384,$/;"	e	enum:__anon4de7e74e0203
SHA256Input	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^int SHA256Input(SHA256Context *context, const uint8_t *message_array,$/;"	f	typeref:typename:int
SHA256Reset	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^int SHA256Reset(SHA256Context *context)$/;"	f	typeref:typename:int
SHA256Result	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^int SHA256Result(SHA256Context *context,$/;"	f	typeref:typename:int
SHA256_CTX	my_project/libgit2/src/util/hash/openssl.h	/^} SHA256_CTX;$/;"	t	typeref:struct:__anone07cb6fd0208
SHA256_Final	my_project/libgit2/src/util/hash/openssl.c	/^static int (*SHA256_Final)(unsigned char *md, SHA256_CTX *c);$/;"	v	typeref:typename:int (*)(unsigned char * md,SHA256_CTX * c)	file:
SHA256_H0	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^static uint32_t SHA256_H0[SHA256HashSize\/4] = {$/;"	v	typeref:typename:uint32_t[]	file:
SHA256_Init	my_project/libgit2/src/util/hash/openssl.c	/^static int (*SHA256_Init)(SHA256_CTX *c);$/;"	v	typeref:typename:int (*)(SHA256_CTX * c)	file:
SHA256_Message_Block_Size	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA256_Message_Block_Size = 64, SHA384_Message_Block_Size = 128,$/;"	e	enum:__anon4de7e74e0203
SHA256_ROTL	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^#define SHA256_ROTL(/;"	d	file:
SHA256_ROTR	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^#define SHA256_ROTR(/;"	d	file:
SHA256_SHR	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^#define SHA256_SHR(/;"	d	file:
SHA256_SIGMA0	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^#define SHA256_SIGMA0(/;"	d	file:
SHA256_SIGMA1	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^#define SHA256_SIGMA1(/;"	d	file:
SHA256_Update	my_project/libgit2/src/util/hash/openssl.c	/^static int (*SHA256_Update)(SHA256_CTX *c, const void *data, size_t len);$/;"	v	typeref:typename:int (*)(SHA256_CTX * c,const void * data,size_t len)	file:
SHA256_sigma0	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^#define SHA256_sigma0(/;"	d	file:
SHA256_sigma1	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^#define SHA256_sigma1(/;"	d	file:
SHA384	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA1, SHA224, SHA256, SHA384, SHA512$/;"	e	enum:SHAversion
SHA384Context	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^typedef struct SHA512Context SHA384Context;$/;"	t	typeref:struct:SHA512Context
SHA384HashSize	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA384HashSize = 48, SHA512HashSize = 64,$/;"	e	enum:__anon4de7e74e0203
SHA384HashSizeBits	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA256HashSizeBits = 256, SHA384HashSizeBits = 384,$/;"	e	enum:__anon4de7e74e0203
SHA384_Message_Block_Size	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA256_Message_Block_Size = 64, SHA384_Message_Block_Size = 128,$/;"	e	enum:__anon4de7e74e0203
SHA512	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA1, SHA224, SHA256, SHA384, SHA512$/;"	e	enum:SHAversion
SHA512Context	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^typedef struct SHA512Context {$/;"	s
SHA512Context	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^} SHA512Context;$/;"	t	typeref:struct:SHA512Context
SHA512HashSize	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA384HashSize = 48, SHA512HashSize = 64,$/;"	e	enum:__anon4de7e74e0203
SHA512HashSizeBits	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA512HashSizeBits = 512, USHAMaxHashSizeBits = SHA512HashSizeBits$/;"	e	enum:__anon4de7e74e0203
SHA512_Message_Block_Size	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA512_Message_Block_Size = 128,$/;"	e	enum:__anon4de7e74e0203
SHA_CTX	my_project/libgit2/src/util/hash/openssl.h	/^} SHA_CTX;$/;"	t	typeref:struct:__anone07cb6fd0108
SHA_Ch	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^#define SHA_Ch(/;"	d	file:
SHA_Maj	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^#define SHA_Maj(/;"	d	file:
SHA_Parity	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^#define SHA_Parity(/;"	d	file:
SHAversion	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^typedef enum SHAversion {$/;"	g
SHAversion	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^} SHAversion;$/;"	t	typeref:enum:SHAversion
SHEREDOM_UTF8_H_INCLUDED	my_project/libgit2/deps/ntlmclient/utf8.h	/^#define SHEREDOM_UTF8_H_INCLUDED$/;"	d
SHIFT_REG_IS_R3	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SHIFT_REG_IS_R3$/;"	d	file:
SHOW_NONE	my_project/libgit2/examples/cat-file.c	/^	SHOW_NONE = 3,$/;"	e	enum:__anon036441b00103	file:
SHOW_PRETTY	my_project/libgit2/examples/cat-file.c	/^	SHOW_PRETTY = 4$/;"	e	enum:__anon036441b00103	file:
SHOW_SIZE	my_project/libgit2/examples/cat-file.c	/^	SHOW_SIZE = 2,$/;"	e	enum:__anon036441b00103	file:
SHOW_TYPE	my_project/libgit2/examples/cat-file.c	/^	SHOW_TYPE = 1,$/;"	e	enum:__anon036441b00103	file:
SIGPIPE	my_project/libgit2/tests/util/process/start.c	/^# define SIGPIPE /;"	d	file:
SIGTERM	my_project/libgit2/tests/util/process/start.c	/^# define SIGTERM /;"	d	file:
SIG_ATOMIC_MAX	my_project/libgit2/include/git2/stdint.h	/^#define SIG_ATOMIC_MAX /;"	d
SIG_ATOMIC_MIN	my_project/libgit2/include/git2/stdint.h	/^#define SIG_ATOMIC_MIN /;"	d
SIMILARITY_TEST_DATA_1	my_project/libgit2/tests/libgit2/core/hashsig.c	/^#define SIMILARITY_TEST_DATA_1 /;"	d	file:
SIZE_MAX	my_project/libgit2/include/git2/stdint.h	/^#     define SIZE_MAX /;"	d
SLJIT_CONFIG_AUTO	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SLJIT_CONFIG_AUTO /;"	d	file:
SLJIT_CONFIG_STATIC	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SLJIT_CONFIG_STATIC /;"	d	file:
SLJIT_DEBUG	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SLJIT_DEBUG /;"	d	file:
SLJIT_FREE	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SLJIT_FREE(/;"	d	file:
SLJIT_MALLOC	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SLJIT_MALLOC(/;"	d	file:
SLJIT_VERBOSE	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SLJIT_VERBOSE /;"	d	file:
SLOP	my_project/libgit2/src/libgit2/revwalk.c	/^#define SLOP /;"	d	file:
SM1	my_project/libgit2/tests/libgit2/submodule/modify.c	/^#define SM1 /;"	d	file:
SM2	my_project/libgit2/tests/libgit2/submodule/modify.c	/^#define SM2 /;"	d	file:
SM3	my_project/libgit2/tests/libgit2/submodule/modify.c	/^#define SM3 /;"	d	file:
SMALLEST	my_project/libgit2/deps/zlib/trees.c	/^#define SMALLEST /;"	d	file:
SMALL_MEDIUM	my_project/libgit2/deps/zlib/zconf.h	/^#    define SMALL_MEDIUM$/;"	d
SMALL_STACK_SIZE	my_project/libgit2/src/libgit2/pack.c	/^#define SMALL_STACK_SIZE /;"	d	file:
SM_LIBGIT2	my_project/libgit2/tests/libgit2/submodule/modify.c	/^#define SM_LIBGIT2 /;"	d	file:
SM_LIBGIT2_BRANCH	my_project/libgit2/tests/libgit2/submodule/modify.c	/^#define SM_LIBGIT2_BRANCH /;"	d	file:
SM_LIBGIT2_URL	my_project/libgit2/tests/libgit2/submodule/modify.c	/^#define SM_LIBGIT2_URL /;"	d	file:
SOCK_CLOEXEC	my_project/libgit2/src/util/posix.h	/^#define SOCK_CLOEXEC /;"	d
SONAME	my_project/libgit2/CMakeLists.txt	/^option(SONAME                  "Set the (SO)VERSION of the target"                      ON)$/;"	D
SP	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^#define SP /;"	d	file:
SPAN_CALLBACK_MAYBE	my_project/libgit2/deps/llhttp/api.c	/^#define SPAN_CALLBACK_MAYBE(/;"	d	file:
SP_PROT_TLS1_2_CLIENT	my_project/libgit2/src/libgit2/streams/schannel.c	/^# define SP_PROT_TLS1_2_CLIENT /;"	d	file:
SP_PROT_TLS1_3_CLIENT	my_project/libgit2/src/libgit2/streams/schannel.c	/^# define SP_PROT_TLS1_3_CLIENT /;"	d	file:
SRC_NTLMCLIENT_CRYPTO	my_project/libgit2/deps/ntlmclient/CMakeLists.txt	/^	set(SRC_NTLMCLIENT_CRYPTO "crypt_commoncrypto.c" "crypt_commoncrypto.h")$/;"	v
SRC_NTLMCLIENT_CRYPTO	my_project/libgit2/deps/ntlmclient/CMakeLists.txt	/^	set(SRC_NTLMCLIENT_CRYPTO "crypt_mbedtls.c" "crypt_mbedtls.h" "crypt_builtin_md4.c")$/;"	v
SRC_NTLMCLIENT_CRYPTO	my_project/libgit2/deps/ntlmclient/CMakeLists.txt	/^	set(SRC_NTLMCLIENT_CRYPTO "crypt_openssl.c" "crypt_openssl.h")$/;"	v
SRC_RC	my_project/libgit2/src/libgit2/CMakeLists.txt	/^	set(SRC_RC "git2.rc")$/;"	v
SRC_REPO	my_project/libgit2/tests/libgit2/perf/merge.c	/^#define SRC_REPO /;"	d	file:
SSB_CONTINUE	my_project/libgit2/deps/pcre/pcre_study.c	/^enum { SSB_FAIL, SSB_DONE, SSB_CONTINUE, SSB_UNKNOWN };$/;"	e	enum:__anonebc6f3f30103	file:
SSB_DONE	my_project/libgit2/deps/pcre/pcre_study.c	/^enum { SSB_FAIL, SSB_DONE, SSB_CONTINUE, SSB_UNKNOWN };$/;"	e	enum:__anonebc6f3f30103	file:
SSB_FAIL	my_project/libgit2/deps/pcre/pcre_study.c	/^enum { SSB_FAIL, SSB_DONE, SSB_CONTINUE, SSB_UNKNOWN };$/;"	e	enum:__anonebc6f3f30103	file:
SSB_UNKNOWN	my_project/libgit2/deps/pcre/pcre_study.c	/^enum { SSB_FAIL, SSB_DONE, SSB_CONTINUE, SSB_UNKNOWN };$/;"	e	enum:__anonebc6f3f30103	file:
SSE2_COMPARE_TYPE_INDEX	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define SSE2_COMPARE_TYPE_INDEX /;"	d	file:
SSH_AUTH_KEYBOARD_INTERACTIVE	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^#define SSH_AUTH_KEYBOARD_INTERACTIVE /;"	d	file:
SSH_AUTH_PASSWORD	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^#define SSH_AUTH_PASSWORD /;"	d	file:
SSH_AUTH_PUBLICKEY	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^#define SSH_AUTH_PUBLICKEY /;"	d	file:
SSH_DEFAULT_PORT	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^#define SSH_DEFAULT_PORT /;"	d	file:
SSH_DIR	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^#define SSH_DIR /;"	d	file:
SSH_REPO_URL	my_project/libgit2/tests/libgit2/online/clone.c	/^#define SSH_REPO_URL /;"	d	file:
SSIZE_MAX	my_project/libgit2/src/util/win32/msvc-compat.h	/^# define SSIZE_MAX /;"	d
SSL	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef void SSL;$/;"	t	typeref:typename:void
SSL_CTRL_MODE	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_CTRL_MODE /;"	d
SSL_CTRL_OPTIONS	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_CTRL_OPTIONS /;"	d
SSL_CTRL_SET_TLSEXT_HOSTNAME	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_CTRL_SET_TLSEXT_HOSTNAME /;"	d
SSL_CTX	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef void SSL_CTX;$/;"	t	typeref:typename:void
SSL_CTX_ctrl	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^long (*SSL_CTX_ctrl)(SSL_CTX *ctx, int cmd, long larg, void *parg);$/;"	v	typeref:typename:long (*)(SSL_CTX * ctx,int cmd,long larg,void * parg)
SSL_CTX_free	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*SSL_CTX_free)(SSL_CTX *ctx);$/;"	v	typeref:typename:void (*)(SSL_CTX * ctx)
SSL_CTX_load_verify_locations	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*SSL_CTX_load_verify_locations)(SSL_CTX *ctx, const char *CAfile, const char *CApath);$/;"	v	typeref:typename:int (*)(SSL_CTX * ctx,const char * CAfile,const char * CApath)
SSL_CTX_new	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^SSL_CTX *(*SSL_CTX_new)(const SSL_METHOD *method);$/;"	v	typeref:typename:SSL_CTX * (*)(const SSL_METHOD * method)
SSL_CTX_set_cipher_list	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*SSL_CTX_set_cipher_list)(SSL_CTX *ctx, const char *str);$/;"	v	typeref:typename:int (*)(SSL_CTX * ctx,const char * str)
SSL_CTX_set_default_verify_paths	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*SSL_CTX_set_default_verify_paths)(SSL_CTX *ctx);$/;"	v	typeref:typename:int (*)(SSL_CTX * ctx)
SSL_CTX_set_mode	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_CTX_set_mode(/;"	d
SSL_CTX_set_options	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^long (*SSL_CTX_set_options)(SSL_CTX *ctx, long options);$/;"	v	typeref:typename:long (*)(SSL_CTX * ctx,long options)
SSL_CTX_set_options__legacy	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^long SSL_CTX_set_options__legacy(SSL_CTX *ctx, long op)$/;"	f	typeref:typename:long
SSL_CTX_set_verify	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*SSL_CTX_set_verify)(SSL_CTX *ctx, int mode, int (*verify_callback)(int, X509_STORE_CTX *)/;"	v	typeref:typename:void (*)(SSL_CTX * ctx,int mode,int (* verify_callback)(int,X509_STORE_CTX *))
SSL_ERROR_NONE	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_ERROR_NONE /;"	d
SSL_ERROR_SSL	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_ERROR_SSL /;"	d
SSL_ERROR_SYSCALL	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_ERROR_SYSCALL /;"	d
SSL_ERROR_WANT_ACCEPT	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_ERROR_WANT_ACCEPT /;"	d
SSL_ERROR_WANT_CONNECT	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_ERROR_WANT_CONNECT /;"	d
SSL_ERROR_WANT_READ	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_ERROR_WANT_READ /;"	d
SSL_ERROR_WANT_WRITE	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_ERROR_WANT_WRITE /;"	d
SSL_ERROR_WANT_X509_LOOKUP	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_ERROR_WANT_X509_LOOKUP /;"	d
SSL_ERROR_ZERO_RETURN	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_ERROR_ZERO_RETURN /;"	d
SSL_METHOD	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef void SSL_METHOD;$/;"	t	typeref:typename:void
SSL_MODE_AUTO_RETRY	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_MODE_AUTO_RETRY /;"	d
SSL_OP_NO_COMPRESSION	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_OP_NO_COMPRESSION /;"	d
SSL_OP_NO_SSLv2	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_OP_NO_SSLv2 /;"	d
SSL_OP_NO_SSLv3	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_OP_NO_SSLv3 /;"	d
SSL_VERIFY_NONE	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_VERIFY_NONE /;"	d
SSL_connect	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*SSL_connect)(SSL *ssl);$/;"	v	typeref:typename:int (*)(SSL * ssl)
SSL_ctrl	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^long (*SSL_ctrl)(SSL *ssl, int cmd, long arg, void *parg);$/;"	v	typeref:typename:long (*)(SSL * ssl,int cmd,long arg,void * parg)
SSL_free	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*SSL_free)(SSL *ssl);$/;"	v	typeref:typename:void (*)(SSL * ssl)
SSL_get_error	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*SSL_get_error)(SSL *ssl, int ret);$/;"	v	typeref:typename:int (*)(SSL * ssl,int ret)
SSL_get_peer_certificate	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^X509 *(*SSL_get_peer_certificate)(const SSL *ssl);$/;"	v	typeref:typename:X509 * (*)(const SSL * ssl)
SSL_get_verify_result	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^long (*SSL_get_verify_result)(const SSL *ssl);$/;"	v	typeref:typename:long (*)(const SSL * ssl)
SSL_library_init	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*SSL_library_init)(void);$/;"	v	typeref:typename:int (*)(void)
SSL_load_error_strings	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*SSL_load_error_strings)(void);$/;"	v	typeref:typename:void (*)(void)
SSL_new	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^SSL *(*SSL_new)(SSL_CTX *ctx);$/;"	v	typeref:typename:SSL * (*)(SSL_CTX * ctx)
SSL_read	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*SSL_read)(SSL *ssl, const void *buf, int num);$/;"	v	typeref:typename:int (*)(SSL * ssl,const void * buf,int num)
SSL_set_bio	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*SSL_set_bio)(SSL *ssl, BIO *rbio, BIO *wbio);$/;"	v	typeref:typename:void (*)(SSL * ssl,BIO * rbio,BIO * wbio)
SSL_set_tlsext_host_name	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define SSL_set_tlsext_host_name(/;"	d
SSL_shutdown	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*SSL_shutdown)(SSL *ssl);$/;"	v	typeref:typename:int (*)(SSL * ssl)
SSL_write	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*SSL_write)(SSL *ssl, const void *buf, int num);$/;"	v	typeref:typename:int (*)(SSL * ssl,const void * buf,int num)
SSLv23_method	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^const SSL_METHOD *(*SSLv23_method)(void);$/;"	v	typeref:typename:const SSL_METHOD * (*)(void)
STACK	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define STACK(/;"	d	file:
STACKTRACE_UID_LEN	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^#define STACKTRACE_UID_LEN /;"	d	file:
STACK_GROWTH_RATE	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define STACK_GROWTH_RATE /;"	d	file:
STACK_LIMIT	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define STACK_LIMIT /;"	d	file:
STACK_TOP	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define STACK_TOP /;"	d	file:
STALE	my_project/libgit2/src/libgit2/commit_list.h	/^#define STALE /;"	d
STANDARD_REPOSITORY	my_project/libgit2/tests/libgit2/repo/init.c	/^	STANDARD_REPOSITORY = 0,$/;"	e	enum:repo_mode	file:
START_OF_FILE_PENALTY	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define START_OF_FILE_PENALTY /;"	d	file:
STATE_CERTIFICATE	my_project/libgit2/src/libgit2/streams/schannel.c	/^	STATE_CERTIFICATE = 3$/;"	e	enum:__anonafd1b44a0103	file:
STATE_CONTEXT	my_project/libgit2/src/libgit2/streams/schannel.c	/^	STATE_CONTEXT = 2,$/;"	e	enum:__anonafd1b44a0103	file:
STATE_COPY	my_project/libgit2/src/libgit2/patch_parse.c	/^	STATE_COPY,$/;"	e	enum:__anonddb10c3a0203	file:
STATE_CRED	my_project/libgit2/src/libgit2/streams/schannel.c	/^	STATE_CRED = 1,$/;"	e	enum:__anonafd1b44a0103	file:
STATE_DIFF	my_project/libgit2/src/libgit2/patch_parse.c	/^	STATE_DIFF,$/;"	e	enum:__anonddb10c3a0203	file:
STATE_END	my_project/libgit2/src/libgit2/patch_parse.c	/^	STATE_END$/;"	e	enum:__anonddb10c3a0203	file:
STATE_FILEMODE	my_project/libgit2/src/libgit2/patch_parse.c	/^	STATE_FILEMODE,$/;"	e	enum:__anonddb10c3a0203	file:
STATE_INDEX	my_project/libgit2/src/libgit2/patch_parse.c	/^	STATE_INDEX,$/;"	e	enum:__anonddb10c3a0203	file:
STATE_MODE	my_project/libgit2/src/libgit2/patch_parse.c	/^	STATE_MODE,$/;"	e	enum:__anonddb10c3a0203	file:
STATE_NONE	my_project/libgit2/src/libgit2/streams/schannel.c	/^	STATE_NONE = 0,$/;"	e	enum:__anonafd1b44a0103	file:
STATE_PATH	my_project/libgit2/src/libgit2/patch_parse.c	/^	STATE_PATH,$/;"	e	enum:__anonddb10c3a0203	file:
STATE_RENAME	my_project/libgit2/src/libgit2/patch_parse.c	/^	STATE_RENAME,$/;"	e	enum:__anonddb10c3a0203	file:
STATE_SIMILARITY	my_project/libgit2/src/libgit2/patch_parse.c	/^	STATE_SIMILARITY,$/;"	e	enum:__anonddb10c3a0203	file:
STATE_START	my_project/libgit2/src/libgit2/patch_parse.c	/^	STATE_START,$/;"	e	enum:__anonddb10c3a0203	file:
STATIC_CRT	my_project/libgit2/CMakeLists.txt	/^	option(STATIC_CRT          "Link the static CRT libraries"                      ON)$/;"	D
STATIC_TREES	my_project/libgit2/deps/zlib/zutil.h	/^#define STATIC_TREES /;"	d
STATS_FULL_MIN_SCALE	my_project/libgit2/src/libgit2/diff_stats.c	/^#define STATS_FULL_MIN_SCALE /;"	d	file:
STATUS_INDEX_FLAGS	my_project/libgit2/tests/libgit2/index/addall.c	/^#define STATUS_INDEX_FLAGS /;"	d	file:
STATUS_WT_FLAGS	my_project/libgit2/tests/libgit2/index/addall.c	/^#define STATUS_WT_FLAGS /;"	d	file:
STAT_T	my_project/libgit2/tests/clar/clar.c	/^	typedef struct _stat STAT_T;$/;"	t	typeref:struct:_stat	file:
STAT_T	my_project/libgit2/tests/clar/clar.c	/^	typedef struct stat STAT_T;$/;"	t	typeref:struct:stat	file:
STDC	my_project/libgit2/deps/zlib/zconf.h	/^#    define STDC$/;"	d
STDC	my_project/libgit2/deps/zlib/zconf.h	/^#  define STDC$/;"	d
STDC99	my_project/libgit2/deps/zlib/zconf.h	/^#      define STDC99$/;"	d
STORED	my_project/libgit2/deps/zlib/inflate.h	/^        STORED,     \/* i: waiting for stored size (length and complement) *\/$/;"	e	enum:__anona0359fa00103
STORED_BLOCK	my_project/libgit2/deps/zlib/zutil.h	/^#define STORED_BLOCK /;"	d
STR1000	my_project/libgit2/tests/libgit2/diff/workdir.c	/^#define STR1000 /;"	d	file:
STR200	my_project/libgit2/tests/libgit2/diff/workdir.c	/^#define STR200 /;"	d	file:
STR3999Z	my_project/libgit2/tests/libgit2/diff/workdir.c	/^#define STR3999Z /;"	d	file:
STR40	my_project/libgit2/tests/libgit2/diff/workdir.c	/^#define STR40 /;"	d	file:
STR4000	my_project/libgit2/tests/libgit2/diff/workdir.c	/^#define STR4000 /;"	d	file:
STR7	my_project/libgit2/tests/libgit2/diff/workdir.c	/^#define STR7 /;"	d	file:
STR8	my_project/libgit2/tests/libgit2/diff/workdir.c	/^#define STR8 /;"	d	file:
STR999Z	my_project/libgit2/tests/libgit2/diff/workdir.c	/^#define STR999Z /;"	d	file:
STRCMP_CASESELECT	my_project/libgit2/src/util/util.h	/^#define STRCMP_CASESELECT(/;"	d
STRCMP_UC_C8	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRCMP_UC_C8(/;"	d
STRCMP_UC_C8_TEST	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRCMP_UC_C8_TEST(/;"	d
STRCMP_UC_UC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRCMP_UC_UC(/;"	d
STRCMP_UC_UC_TEST	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRCMP_UC_UC_TEST(/;"	d
STRING	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define STRING(/;"	d	file:
STRING	my_project/libgit2/deps/pcre/pcre_version.c	/^#define STRING(/;"	d	file:
STRINGIFY	my_project/libgit2/tests/libgit2/core/structinit.c	/^#define STRINGIFY(/;"	d	file:
STRING_ACCEPT0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_ACCEPT0 /;"	d
STRING_ANYCRLF_RIGHTPAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_ANYCRLF_RIGHTPAR /;"	d
STRING_ANY_RIGHTPAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_ANY_RIGHTPAR /;"	d
STRING_Any0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Any0 /;"	d	file:
STRING_Arabic0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Arabic0 /;"	d	file:
STRING_Armenian0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Armenian0 /;"	d	file:
STRING_Avestan0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Avestan0 /;"	d	file:
STRING_BSR_ANYCRLF_RIGHTPAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_BSR_ANYCRLF_RIGHTPAR /;"	d
STRING_BSR_UNICODE_RIGHTPAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_BSR_UNICODE_RIGHTPAR /;"	d
STRING_Balinese0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Balinese0 /;"	d	file:
STRING_Bamum0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Bamum0 /;"	d	file:
STRING_Bassa_Vah0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Bassa_Vah0 /;"	d	file:
STRING_Batak0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Batak0 /;"	d	file:
STRING_Bengali0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Bengali0 /;"	d	file:
STRING_Bopomofo0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Bopomofo0 /;"	d	file:
STRING_Brahmi0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Brahmi0 /;"	d	file:
STRING_Braille0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Braille0 /;"	d	file:
STRING_Buginese0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Buginese0 /;"	d	file:
STRING_Buhid0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Buhid0 /;"	d	file:
STRING_C0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_C0 /;"	d	file:
STRING_COMMIT0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_COMMIT0 /;"	d
STRING_CRLF_RIGHTPAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_CRLF_RIGHTPAR /;"	d
STRING_CR_RIGHTPAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_CR_RIGHTPAR /;"	d
STRING_Canadian_Aboriginal0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Canadian_Aboriginal0 /;"	d	file:
STRING_Carian0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Carian0 /;"	d	file:
STRING_Caucasian_Albanian0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Caucasian_Albanian0 /;"	d	file:
STRING_Cc0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cc0 /;"	d	file:
STRING_Cf0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cf0 /;"	d	file:
STRING_Chakma0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Chakma0 /;"	d	file:
STRING_Cham0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cham0 /;"	d	file:
STRING_Cherokee0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cherokee0 /;"	d	file:
STRING_Cn0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cn0 /;"	d	file:
STRING_Co0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Co0 /;"	d	file:
STRING_Common0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Common0 /;"	d	file:
STRING_Coptic0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Coptic0 /;"	d	file:
STRING_Cs0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cs0 /;"	d	file:
STRING_Cuneiform0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cuneiform0 /;"	d	file:
STRING_Cypriot0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cypriot0 /;"	d	file:
STRING_Cyrillic0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Cyrillic0 /;"	d	file:
STRING_DEFINE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_DEFINE /;"	d
STRING_Deseret0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Deseret0 /;"	d	file:
STRING_Devanagari0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Devanagari0 /;"	d	file:
STRING_Duployan0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Duployan0 /;"	d	file:
STRING_Egyptian_Hieroglyphs0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Egyptian_Hieroglyphs0 /;"	d	file:
STRING_Elbasan0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Elbasan0 /;"	d	file:
STRING_Ethiopic0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Ethiopic0 /;"	d	file:
STRING_F0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_F0 /;"	d
STRING_FAIL0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_FAIL0 /;"	d
STRING_Georgian0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Georgian0 /;"	d	file:
STRING_Glagolitic0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Glagolitic0 /;"	d	file:
STRING_Gothic0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Gothic0 /;"	d	file:
STRING_Grantha0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Grantha0 /;"	d	file:
STRING_Greek0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Greek0 /;"	d	file:
STRING_Gujarati0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Gujarati0 /;"	d	file:
STRING_Gurmukhi0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Gurmukhi0 /;"	d	file:
STRING_Han0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Han0 /;"	d	file:
STRING_Hangul0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Hangul0 /;"	d	file:
STRING_Hanunoo0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Hanunoo0 /;"	d	file:
STRING_Hebrew0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Hebrew0 /;"	d	file:
STRING_Hiragana0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Hiragana0 /;"	d	file:
STRING_Imperial_Aramaic0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Imperial_Aramaic0 /;"	d	file:
STRING_Inherited0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Inherited0 /;"	d	file:
STRING_Inscriptional_Pahlavi0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Inscriptional_Pahlavi0 /;"	d	file:
STRING_Inscriptional_Parthian0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Inscriptional_Parthian0 /;"	d	file:
STRING_Javanese0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Javanese0 /;"	d	file:
STRING_Kaithi0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Kaithi0 /;"	d	file:
STRING_Kannada0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Kannada0 /;"	d	file:
STRING_Katakana0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Katakana0 /;"	d	file:
STRING_Kayah_Li0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Kayah_Li0 /;"	d	file:
STRING_Kharoshthi0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Kharoshthi0 /;"	d	file:
STRING_Khmer0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Khmer0 /;"	d	file:
STRING_Khojki0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Khojki0 /;"	d	file:
STRING_Khudawadi0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Khudawadi0 /;"	d	file:
STRING_L0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_L0 /;"	d	file:
STRING_LF_RIGHTPAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_LF_RIGHTPAR /;"	d
STRING_LIMIT_MATCH_EQ	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_LIMIT_MATCH_EQ /;"	d
STRING_LIMIT_RECURSION_EQ	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_LIMIT_RECURSION_EQ /;"	d
STRING_L_AMPERSAND0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_L_AMPERSAND0 /;"	d	file:
STRING_Lao0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lao0 /;"	d	file:
STRING_Latin0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Latin0 /;"	d	file:
STRING_Lepcha0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lepcha0 /;"	d	file:
STRING_Limbu0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Limbu0 /;"	d	file:
STRING_Linear_A0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Linear_A0 /;"	d	file:
STRING_Linear_B0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Linear_B0 /;"	d	file:
STRING_Lisu0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lisu0 /;"	d	file:
STRING_Ll0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Ll0 /;"	d	file:
STRING_Lm0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lm0 /;"	d	file:
STRING_Lo0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lo0 /;"	d	file:
STRING_Lt0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lt0 /;"	d	file:
STRING_Lu0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lu0 /;"	d	file:
STRING_Lycian0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lycian0 /;"	d	file:
STRING_Lydian0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Lydian0 /;"	d	file:
STRING_M0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_M0 /;"	d	file:
STRING_MARK0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_MARK0 /;"	d
STRING_Mahajani0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Mahajani0 /;"	d	file:
STRING_Malayalam0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Malayalam0 /;"	d	file:
STRING_Mandaic0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Mandaic0 /;"	d	file:
STRING_Manichaean0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Manichaean0 /;"	d	file:
STRING_Mc0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Mc0 /;"	d	file:
STRING_Me0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Me0 /;"	d	file:
STRING_Meetei_Mayek0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Meetei_Mayek0 /;"	d	file:
STRING_Mende_Kikakui0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Mende_Kikakui0 /;"	d	file:
STRING_Meroitic_Cursive0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Meroitic_Cursive0 /;"	d	file:
STRING_Meroitic_Hieroglyphs0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Meroitic_Hieroglyphs0 /;"	d	file:
STRING_Miao0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Miao0 /;"	d	file:
STRING_Mn0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Mn0 /;"	d	file:
STRING_Modi0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Modi0 /;"	d	file:
STRING_Mongolian0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Mongolian0 /;"	d	file:
STRING_Mro0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Mro0 /;"	d	file:
STRING_Myanmar0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Myanmar0 /;"	d	file:
STRING_N0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_N0 /;"	d	file:
STRING_NO_AUTO_POSSESS_RIGHTPAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_NO_AUTO_POSSESS_RIGHTPAR /;"	d
STRING_NO_START_OPT_RIGHTPAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_NO_START_OPT_RIGHTPAR /;"	d
STRING_Nabataean0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Nabataean0 /;"	d	file:
STRING_Nd0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Nd0 /;"	d	file:
STRING_New_Tai_Lue0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_New_Tai_Lue0 /;"	d	file:
STRING_Nko0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Nko0 /;"	d	file:
STRING_Nl0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Nl0 /;"	d	file:
STRING_No0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_No0 /;"	d	file:
STRING_Ogham0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Ogham0 /;"	d	file:
STRING_Ol_Chiki0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Ol_Chiki0 /;"	d	file:
STRING_Old_Italic0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Old_Italic0 /;"	d	file:
STRING_Old_North_Arabian0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Old_North_Arabian0 /;"	d	file:
STRING_Old_Permic0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Old_Permic0 /;"	d	file:
STRING_Old_Persian0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Old_Persian0 /;"	d	file:
STRING_Old_South_Arabian0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Old_South_Arabian0 /;"	d	file:
STRING_Old_Turkic0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Old_Turkic0 /;"	d	file:
STRING_Oriya0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Oriya0 /;"	d	file:
STRING_Osmanya0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Osmanya0 /;"	d	file:
STRING_P0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_P0 /;"	d	file:
STRING_PRUNE0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_PRUNE0 /;"	d
STRING_Pahawh_Hmong0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Pahawh_Hmong0 /;"	d	file:
STRING_Palmyrene0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Palmyrene0 /;"	d	file:
STRING_Pau_Cin_Hau0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Pau_Cin_Hau0 /;"	d	file:
STRING_Pc0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Pc0 /;"	d	file:
STRING_Pd0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Pd0 /;"	d	file:
STRING_Pe0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Pe0 /;"	d	file:
STRING_Pf0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Pf0 /;"	d	file:
STRING_Phags_Pa0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Phags_Pa0 /;"	d	file:
STRING_Phoenician0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Phoenician0 /;"	d	file:
STRING_Pi0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Pi0 /;"	d	file:
STRING_Po0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Po0 /;"	d	file:
STRING_Ps0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Ps0 /;"	d	file:
STRING_Psalter_Pahlavi0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Psalter_Pahlavi0 /;"	d	file:
STRING_Rejang0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Rejang0 /;"	d	file:
STRING_Runic0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Runic0 /;"	d	file:
STRING_S0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_S0 /;"	d	file:
STRING_SKIP0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_SKIP0 /;"	d
STRING_Samaritan0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Samaritan0 /;"	d	file:
STRING_Saurashtra0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Saurashtra0 /;"	d	file:
STRING_Sc0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Sc0 /;"	d	file:
STRING_Sharada0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Sharada0 /;"	d	file:
STRING_Shavian0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Shavian0 /;"	d	file:
STRING_Siddham0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Siddham0 /;"	d	file:
STRING_Sinhala0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Sinhala0 /;"	d	file:
STRING_Sk0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Sk0 /;"	d	file:
STRING_Sm0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Sm0 /;"	d	file:
STRING_So0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_So0 /;"	d	file:
STRING_Sora_Sompeng0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Sora_Sompeng0 /;"	d	file:
STRING_Sundanese0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Sundanese0 /;"	d	file:
STRING_Syloti_Nagri0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Syloti_Nagri0 /;"	d	file:
STRING_Syriac0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Syriac0 /;"	d	file:
STRING_THEN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_THEN /;"	d
STRING_Tagalog0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tagalog0 /;"	d	file:
STRING_Tagbanwa0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tagbanwa0 /;"	d	file:
STRING_Tai_Le0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tai_Le0 /;"	d	file:
STRING_Tai_Tham0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tai_Tham0 /;"	d	file:
STRING_Tai_Viet0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tai_Viet0 /;"	d	file:
STRING_Takri0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Takri0 /;"	d	file:
STRING_Tamil0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tamil0 /;"	d	file:
STRING_Telugu0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Telugu0 /;"	d	file:
STRING_Thaana0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Thaana0 /;"	d	file:
STRING_Thai0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Thai0 /;"	d	file:
STRING_Tibetan0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tibetan0 /;"	d	file:
STRING_Tifinagh0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tifinagh0 /;"	d	file:
STRING_Tirhuta0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Tirhuta0 /;"	d	file:
STRING_UCP_RIGHTPAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_UCP_RIGHTPAR /;"	d
STRING_UTF16_RIGHTPAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_UTF16_RIGHTPAR /;"	d
STRING_UTF32_RIGHTPAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_UTF32_RIGHTPAR /;"	d
STRING_UTF8_RIGHTPAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_UTF8_RIGHTPAR /;"	d
STRING_UTF_RIGHTPAR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_UTF_RIGHTPAR /;"	d
STRING_Ugaritic0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Ugaritic0 /;"	d	file:
STRING_Vai0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Vai0 /;"	d	file:
STRING_WEIRD_ENDWORD	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_WEIRD_ENDWORD /;"	d
STRING_WEIRD_STARTWORD	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_WEIRD_STARTWORD /;"	d
STRING_Warang_Citi0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Warang_Citi0 /;"	d	file:
STRING_Xan0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Xan0 /;"	d	file:
STRING_Xps0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Xps0 /;"	d	file:
STRING_Xsp0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Xsp0 /;"	d	file:
STRING_Xuc0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Xuc0 /;"	d	file:
STRING_Xwd0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Xwd0 /;"	d	file:
STRING_Yi0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Yi0 /;"	d	file:
STRING_Z0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Z0 /;"	d	file:
STRING_Zl0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Zl0 /;"	d	file:
STRING_Zp0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Zp0 /;"	d	file:
STRING_Zs0	my_project/libgit2/deps/pcre/pcre_tables.c	/^#define STRING_Zs0 /;"	d	file:
STRING_alnum0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_alnum0 /;"	d
STRING_alpha0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_alpha0 /;"	d
STRING_ascii0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_ascii0 /;"	d
STRING_blank0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_blank0 /;"	d
STRING_cntrl0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_cntrl0 /;"	d
STRING_digit0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_digit0 /;"	d
STRING_graph0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_graph0 /;"	d
STRING_lower0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_lower0 /;"	d
STRING_print0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_print0 /;"	d
STRING_punct0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_punct0 /;"	d
STRING_space0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_space0 /;"	d
STRING_upper0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_upper0 /;"	d
STRING_word0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_word0 /;"	d
STRING_xdigit	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRING_xdigit /;"	d
STRLEN_UC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRLEN_UC(/;"	d
STRNCMP_UC_C8	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRNCMP_UC_C8(/;"	d
STRNCMP_UC_UC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STRNCMP_UC_UC(/;"	d
STRUCT_TO_BUF	my_project/libgit2/src/libgit2/filter.c	/^# define STRUCT_TO_BUF(/;"	d	file:
STR_0	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_0 /;"	d
STR_1	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_1 /;"	d
STR_2	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_2 /;"	d
STR_3	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_3 /;"	d
STR_4	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_4 /;"	d
STR_5	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_5 /;"	d
STR_6	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_6 /;"	d
STR_7	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_7 /;"	d
STR_8	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_8 /;"	d
STR_9	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_9 /;"	d
STR_A	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_A /;"	d
STR_AMPERSAND	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_AMPERSAND /;"	d
STR_APOSTROPHE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_APOSTROPHE /;"	d
STR_ASTERISK	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_ASTERISK /;"	d
STR_B	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_B /;"	d
STR_BACKSLASH	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_BACKSLASH /;"	d
STR_BEL	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_BEL /;"	d
STR_BS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_BS /;"	d
STR_C	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_C /;"	d
STR_CIRCUMFLEX_ACCENT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_CIRCUMFLEX_ACCENT /;"	d
STR_COLON	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_COLON /;"	d
STR_COMMA	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_COMMA /;"	d
STR_COMMERCIAL_AT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_COMMERCIAL_AT /;"	d
STR_CR	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_CR /;"	d
STR_D	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_D /;"	d
STR_DEL	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_DEL /;"	d
STR_DOLLAR_SIGN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_DOLLAR_SIGN /;"	d
STR_DOT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_DOT /;"	d
STR_E	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_E /;"	d
STR_END	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define STR_END /;"	d	file:
STR_EQUALS_SIGN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_EQUALS_SIGN /;"	d
STR_ESC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_ESC /;"	d
STR_EXCLAMATION_MARK	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_EXCLAMATION_MARK /;"	d
STR_F	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_F /;"	d
STR_FF	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_FF /;"	d
STR_G	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_G /;"	d
STR_GRAVE_ACCENT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_GRAVE_ACCENT /;"	d
STR_GREATER_THAN_SIGN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_GREATER_THAN_SIGN /;"	d
STR_H	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_H /;"	d
STR_HT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_HT /;"	d
STR_I	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_I /;"	d
STR_J	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_J /;"	d
STR_K	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_K /;"	d
STR_L	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_L /;"	d
STR_LEFT_CURLY_BRACKET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_LEFT_CURLY_BRACKET /;"	d
STR_LEFT_PARENTHESIS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_LEFT_PARENTHESIS /;"	d
STR_LEFT_SQUARE_BRACKET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_LEFT_SQUARE_BRACKET /;"	d
STR_LESS_THAN_SIGN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_LESS_THAN_SIGN /;"	d
STR_LF	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_LF /;"	d
STR_M	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_M /;"	d
STR_MINUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_MINUS /;"	d
STR_N	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_N /;"	d
STR_NEL	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_NEL /;"	d
STR_NL	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_NL /;"	d
STR_NUMBER_SIGN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_NUMBER_SIGN /;"	d
STR_O	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_O /;"	d
STR_P	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_P /;"	d
STR_PERCENT_SIGN	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_PERCENT_SIGN /;"	d
STR_PLUS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_PLUS /;"	d
STR_PTR	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define STR_PTR /;"	d	file:
STR_Q	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_Q /;"	d
STR_QUESTION_MARK	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_QUESTION_MARK /;"	d
STR_QUOTATION_MARK	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_QUOTATION_MARK /;"	d
STR_R	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_R /;"	d
STR_RIGHT_CURLY_BRACKET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_RIGHT_CURLY_BRACKET /;"	d
STR_RIGHT_PARENTHESIS	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_RIGHT_PARENTHESIS /;"	d
STR_RIGHT_SQUARE_BRACKET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_RIGHT_SQUARE_BRACKET /;"	d
STR_S	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_S /;"	d
STR_SEMICOLON	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_SEMICOLON /;"	d
STR_SLASH	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_SLASH /;"	d
STR_SPACE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_SPACE /;"	d
STR_T	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_T /;"	d
STR_TILDE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_TILDE /;"	d
STR_U	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_U /;"	d
STR_UNDERSCORE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_UNDERSCORE /;"	d
STR_V	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_V /;"	d
STR_VERTICAL_LINE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_VERTICAL_LINE /;"	d
STR_VT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_VT /;"	d
STR_W	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_W /;"	d
STR_X	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_X /;"	d
STR_Y	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_Y /;"	d
STR_Z	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_Z /;"	d
STR_a	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_a /;"	d
STR_b	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_b /;"	d
STR_c	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_c /;"	d
STR_d	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_d /;"	d
STR_e	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_e /;"	d
STR_f	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_f /;"	d
STR_g	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_g /;"	d
STR_h	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_h /;"	d
STR_i	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_i /;"	d
STR_j	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_j /;"	d
STR_k	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_k /;"	d
STR_l	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_l /;"	d
STR_m	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_m /;"	d
STR_n	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_n /;"	d
STR_o	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_o /;"	d
STR_p	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_p /;"	d
STR_q	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_q /;"	d
STR_r	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_r /;"	d
STR_s	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_s /;"	d
STR_t	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_t /;"	d
STR_u	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_u /;"	d
STR_v	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_v /;"	d
STR_w	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_w /;"	d
STR_x	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_x /;"	d
STR_y	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_y /;"	d
STR_z	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define STR_z /;"	d
SUBCMD_APPLY	my_project/libgit2/examples/stash.c	/^	SUBCMD_APPLY,$/;"	e	enum:subcmd	file:
SUBCMD_LIST	my_project/libgit2/examples/stash.c	/^	SUBCMD_LIST,$/;"	e	enum:subcmd	file:
SUBCMD_POP	my_project/libgit2/examples/stash.c	/^	SUBCMD_POP,$/;"	e	enum:subcmd	file:
SUBCMD_PUSH	my_project/libgit2/examples/stash.c	/^	SUBCMD_PUSH$/;"	e	enum:subcmd	file:
SUBMODULE_DELETE_BRANCH	my_project/libgit2/tests/libgit2/merge/workdir/submodules.c	/^#define SUBMODULE_DELETE_BRANCH	/;"	d	file:
SUBMODULE_MAIN_BRANCH	my_project/libgit2/tests/libgit2/merge/workdir/submodules.c	/^#define SUBMODULE_MAIN_BRANCH	/;"	d	file:
SUBMODULE_OTHER2_BRANCH	my_project/libgit2/tests/libgit2/merge/workdir/submodules.c	/^#define SUBMODULE_OTHER2_BRANCH	/;"	d	file:
SUBMODULE_OTHER_BRANCH	my_project/libgit2/tests/libgit2/merge/workdir/submodules.c	/^#define SUBMODULE_OTHER_BRANCH	/;"	d	file:
SUB_REPOSITORY_FOLDER	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define SUB_REPOSITORY_FOLDER /;"	d	file:
SUB_REPOSITORY_FOLDER_NAME	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define SUB_REPOSITORY_FOLDER_NAME /;"	d	file:
SUB_REPOSITORY_FOLDER_SUB	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define SUB_REPOSITORY_FOLDER_SUB /;"	d	file:
SUB_REPOSITORY_FOLDER_SUB_SUB	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define SUB_REPOSITORY_FOLDER_SUB_SUB /;"	d	file:
SUB_REPOSITORY_FOLDER_SUB_SUB_SUB	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define SUB_REPOSITORY_FOLDER_SUB_SUB_SUB /;"	d	file:
SUB_REPOSITORY_GITDIR	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define SUB_REPOSITORY_GITDIR /;"	d	file:
SUFFIX_FETCH	my_project/libgit2/src/libgit2/remote.c	/^#define SUFFIX_FETCH /;"	d	file:
SUFFIX_PUSH	my_project/libgit2/src/libgit2/remote.c	/^#define SUFFIX_PUSH /;"	d	file:
SUPPORT_PCRE8	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(SUPPORT_PCRE8 1)$/;"	v
SUPPORT_UTF	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define SUPPORT_UTF /;"	d
SUPPORT_UTF8	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define SUPPORT_UTF8 /;"	d
SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE	my_project/libgit2/src/util/win32/posix_w32.c	/^# define SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE /;"	d	file:
SYMBOLIC_LINK_FLAG_DIRECTORY	my_project/libgit2/src/util/win32/posix_w32.c	/^# define SYMBOLIC_LINK_FLAG_DIRECTORY /;"	d	file:
SYNC	my_project/libgit2/deps/zlib/inflate.h	/^    SYNC        \/* looking for synchronization bytes to restart inflate() *\/$/;"	e	enum:__anona0359fa00103
SYS16BIT	my_project/libgit2/deps/zlib/zconf.h	/^#      define SYS16BIT$/;"	d
S_IFGITLINK	my_project/libgit2/src/util/posix.h	/^#define S_IFGITLINK /;"	d
S_IFLNK	my_project/libgit2/src/util/posix.h	/^#define S_IFLNK /;"	d
S_IGNORE	my_project/libgit2/src/libgit2/trailer.c	/^	S_IGNORE = 7$/;"	e	enum:trailer_state	file:
S_IREAD	my_project/libgit2/tests/libgit2/odb/loose.c	/^# define S_IREAD /;"	d	file:
S_ISDIR	my_project/libgit2/src/util/posix.h	/^#define S_ISDIR(/;"	d
S_ISDIR	my_project/libgit2/tests/clar/clar.c	/^#			define S_ISDIR(/;"	d	file:
S_ISFIFO	my_project/libgit2/src/util/posix.h	/^#define S_ISFIFO(/;"	d
S_ISGID	my_project/libgit2/src/util/posix.h	/^#define S_ISGID /;"	d
S_ISGITLINK	my_project/libgit2/src/util/posix.h	/^#define S_ISGITLINK(/;"	d
S_ISLNK	my_project/libgit2/src/util/posix.h	/^#define S_ISLNK(/;"	d
S_ISREG	my_project/libgit2/src/util/posix.h	/^#define S_ISREG(/;"	d
S_IWRITE	my_project/libgit2/tests/libgit2/odb/loose.c	/^# define S_IWRITE /;"	d	file:
S_IWUSR	my_project/libgit2/src/util/posix.h	/^#define S_IWUSR /;"	d
S_IXUSR	my_project/libgit2/src/util/posix.h	/^#define S_IXUSR /;"	d
S_KEY	my_project/libgit2/src/libgit2/trailer.c	/^	S_KEY = 1,$/;"	e	enum:trailer_state	file:
S_KEY_WS	my_project/libgit2/src/libgit2/trailer.c	/^	S_KEY_WS = 2,$/;"	e	enum:trailer_state	file:
S_SEP_WS	my_project/libgit2/src/libgit2/trailer.c	/^	S_SEP_WS = 3,$/;"	e	enum:trailer_state	file:
S_START	my_project/libgit2/src/libgit2/trailer.c	/^	S_START = 0,$/;"	e	enum:trailer_state	file:
S_VALUE	my_project/libgit2/src/libgit2/trailer.c	/^	S_VALUE = 4,$/;"	e	enum:trailer_state	file:
S_VALUE_END	my_project/libgit2/src/libgit2/trailer.c	/^	S_VALUE_END = 6,$/;"	e	enum:trailer_state	file:
S_VALUE_NL	my_project/libgit2/src/libgit2/trailer.c	/^	S_VALUE_NL = 5,$/;"	e	enum:trailer_state	file:
SanitizeBool	my_project/libgit2/cmake/SanitizeBool.cmake	/^function(SanitizeBool VAR)$/;"	f
Scope	my_project/libgit2/docs/code_of_conduct.md	/^## Scope$/;"	s	chapter:Contributor Covenant Code of Conduct
Security Fixes	my_project/libgit2/docs/changelog.md	/^# Security Fixes$/;"	c
Security Policy	my_project/libgit2/SECURITY.md	/^# Security Policy$/;"	c
Security fixes	my_project/libgit2/docs/changelog.md	/^### Security fixes$/;"	S	section:What's Changed
Security releases	my_project/libgit2/docs/release.md	/^## Security releases$/;"	s	chapter:Releasing the library
SetSecuritySite	my_project/libgit2/deps/winhttp/urlmon.h	/^	LPVOID SetSecuritySite;$/;"	m	struct:IInternetSecurityManagerVtbl	typeref:typename:LPVOID
SetZoneMapping	my_project/libgit2/deps/winhttp/urlmon.h	/^	LPVOID SetZoneMapping;$/;"	m	struct:IInternetSecurityManagerVtbl	typeref:typename:LPVOID
Sharing objects	my_project/libgit2/docs/threading.md	/^Sharing objects$/;"	s	chapter:Threading in libgit2
SimpleGit	my_project/simplegit-progit/lib/simplegit.rb	/^class SimpleGit$/;"	c
Spaces	my_project/libgit2/docs/coding-style.md	/^### Spaces$/;"	S	section:libgit2 Coding Style""C Coding Style
Spaces	my_project/libgit2/docs/coding-style.md	/^### Spaces$/;"	S	section:libgit2 Coding Style""CMake Coding Style
Specifying the command-line interface to test	my_project/libgit2/tests/benchmarks/README.md	/^### Specifying the command-line interface to test$/;"	S	section:libgit2 benchmarks""Running benchmark tests
Standalone mode	my_project/libgit2/docs/fuzzing.md	/^## Standalone mode$/;"	s	chapter:Fuzzing
Starter Projects	my_project/libgit2/docs/contributing.md	/^## Starter Projects$/;"	s	chapter:Welcome to libgit2!
Starter Projects	my_project/libgit2/docs/projects.md	/^## Starter Projects$/;"	s	chapter:Projects For LibGit2
Strings or continuous memory buffers (`git_buf`)	my_project/libgit2/docs/buffers.md	/^## Strings or continuous memory buffers (`git_buf`)$/;"	s
Structs	my_project/libgit2/docs/conventions.md	/^## Structs$/;"	s	chapter:Libgit2 Conventions
Structures	my_project/libgit2/docs/buffers.md	/^## Structures$/;"	s
Style Guide	my_project/libgit2/docs/contributing.md	/^## Style Guide$/;"	s	chapter:Welcome to libgit2!
SubstituteNameLength	my_project/libgit2/src/util/win32/reparse.h	/^			USHORT SubstituteNameLength;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0208	typeref:typename:USHORT
SubstituteNameLength	my_project/libgit2/src/util/win32/reparse.h	/^			USHORT SubstituteNameLength;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0308	typeref:typename:USHORT
SubstituteNameOffset	my_project/libgit2/src/util/win32/reparse.h	/^			USHORT SubstituteNameOffset;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0208	typeref:typename:USHORT
SubstituteNameOffset	my_project/libgit2/src/util/win32/reparse.h	/^			USHORT SubstituteNameOffset;$/;"	m	struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0308	typeref:typename:USHORT
Supported Versions	my_project/libgit2/SECURITY.md	/^## Supported Versions$/;"	s	chapter:Security Policy
SymbolicLink	my_project/libgit2/src/util/win32/reparse.h	/^		} SymbolicLink;$/;"	m	union:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a	typeref:struct:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a::__anon925c461a0208
T	my_project/libgit2/src/libgit2/delta.c	/^static const unsigned int T[256] = {$/;"	v	typeref:typename:const unsigned int[256]	file:
TABLE	my_project/libgit2/deps/zlib/inflate.h	/^        TABLE,      \/* i: waiting for dynamic block table lengths *\/$/;"	e	enum:__anona0359fa00103
TABLE_GET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define TABLE_GET(/;"	d
TABLE_HASH	my_project/libgit2/deps/xdiff/xhistogram.c	/^#define TABLE_HASH(/;"	d	file:
TCONST	my_project/libgit2/deps/zlib/trees.c	/^#  define TCONST /;"	d	file:
TCONST	my_project/libgit2/deps/zlib/trees.c	/^#  define TCONST$/;"	d	file:
TEMP_REPO_FOLDER	my_project/libgit2/tests/libgit2/repo/discover.c	/^#define TEMP_REPO_FOLDER /;"	d	file:
TESTSTR	my_project/libgit2/tests/util/gitstr.c	/^#define TESTSTR /;"	d	file:
TESTSTR_4096	my_project/libgit2/tests/util/gitstr.c	/^#define TESTSTR_4096 /;"	d	file:
TESTSTR_8192	my_project/libgit2/tests/util/gitstr.c	/^#define TESTSTR_8192 /;"	d	file:
TEST_CONFIG	my_project/libgit2/tests/libgit2/config/new.c	/^#define TEST_CONFIG /;"	d	file:
TEST_CONFIG	my_project/libgit2/tests/libgit2/config/stress.c	/^#define TEST_CONFIG /;"	d	file:
TEST_DIR	my_project/libgit2/tests/libgit2/index/addall.c	/^#define TEST_DIR /;"	d	file:
TEST_INCLUDES	my_project/libgit2/tests/libgit2/CMakeLists.txt	/^set(TEST_INCLUDES "${CLAR_PATH}" "${TEST_PATH}" "${CMAKE_CURRENT_BINARY_DIR}")$/;"	v
TEST_INCLUDES	my_project/libgit2/tests/util/CMakeLists.txt	/^set(TEST_INCLUDES "${CLAR_PATH}" "${TEST_PATH}" "${CMAKE_CURRENT_BINARY_DIR}")$/;"	v
TEST_INDEX2_PATH	my_project/libgit2/tests/libgit2/index/tests.c	/^#define TEST_INDEX2_PATH /;"	d	file:
TEST_INDEXBAD_PATH	my_project/libgit2/tests/libgit2/index/tests.c	/^#define TEST_INDEXBAD_PATH /;"	d	file:
TEST_INDEXBIG_PATH	my_project/libgit2/tests/libgit2/index/tests.c	/^#define TEST_INDEXBIG_PATH /;"	d	file:
TEST_INDEX_PATH	my_project/libgit2/tests/libgit2/index/conflicts.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	my_project/libgit2/tests/libgit2/index/names.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	my_project/libgit2/tests/libgit2/index/reuc.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	my_project/libgit2/tests/libgit2/index/stage.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	my_project/libgit2/tests/libgit2/index/tests.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	my_project/libgit2/tests/libgit2/index/tests256.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	my_project/libgit2/tests/libgit2/merge/files.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	my_project/libgit2/tests/libgit2/merge/workdir/submodules.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_INDEX_PATH	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^#define TEST_INDEX_PATH /;"	d	file:
TEST_MAILMAP	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^const char TEST_MAILMAP[] =$/;"	v	typeref:typename:const char[]
TEST_PATH	my_project/libgit2/tests/libgit2/CMakeLists.txt	/^set(TEST_PATH "${CMAKE_CURRENT_SOURCE_DIR}")$/;"	v
TEST_PATH	my_project/libgit2/tests/util/CMakeLists.txt	/^set(TEST_PATH "${CMAKE_CURRENT_SOURCE_DIR}")$/;"	v
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/apply/apply_helpers.h	/^#define TEST_REPO_PATH /;"	d
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/apply/both.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/apply/callbacks.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/apply/check.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/apply/index.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/apply/tree.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/apply/workdir.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/cherrypick/bare.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/graph/reachable_from_any.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/index/conflicts.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/index/names.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/index/nsec.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/index/reuc.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/index/stage.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/analysis.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/driver.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/files.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/trees/commits.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/trees/modeconflict.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/trees/renames.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/trees/whitespace.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/workdir/recursive.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/workdir/renames.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define TEST_REPO_PATH	/;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/workdir/submodules.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/odb/emptyobjects.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/revert/bare.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/revert/rename.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_REPO_PATH	my_project/libgit2/tests/libgit2/revert/workdir.c	/^#define TEST_REPO_PATH /;"	d	file:
TEST_URL	my_project/libgit2/tests/libgit2/remote/create.c	/^#define TEST_URL /;"	d	file:
TEST_URL	my_project/libgit2/tests/libgit2/remote/list.c	/^#define TEST_URL /;"	d	file:
THEIRS_AUTOMERGE_BRANCH	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define THEIRS_AUTOMERGE_BRANCH /;"	d	file:
THEIRS_DIRECTORY_FILE	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define THEIRS_DIRECTORY_FILE	/;"	d	file:
THEIRS_DIRECTORY_FILE	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define THEIRS_DIRECTORY_FILE	/;"	d	file:
THEIRS_SIMPLE_BRANCH	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define THEIRS_SIMPLE_BRANCH	/;"	d	file:
THEIRS_SIMPLE_BRANCH	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define THEIRS_SIMPLE_BRANCH	/;"	d	file:
THEIRS_SIMPLE_OID	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^#define THEIRS_SIMPLE_OID	/;"	d	file:
THEIRS_SIMPLE_OID	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define THEIRS_SIMPLE_OID	/;"	d	file:
THEIRS_UNRELATED_BRANCH	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define THEIRS_UNRELATED_BRANCH	/;"	d	file:
THEIRS_UNRELATED_BRANCH	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define THEIRS_UNRELATED_BRANCH	/;"	d	file:
THEIRS_UNRELATED_OID	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define THEIRS_UNRELATED_OID	/;"	d	file:
THEIRS_UNRELATED_OID	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define THEIRS_UNRELATED_OID	/;"	d	file:
THEIRS_UNRELATED_PARENT	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define THEIRS_UNRELATED_PARENT	/;"	d	file:
THEIRS_UNRELATED_PARENT	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define THEIRS_UNRELATED_PARENT	/;"	d	file:
THREADCOUNT	my_project/libgit2/tests/libgit2/object/cache.c	/^#define THREADCOUNT /;"	d	file:
THREADS	my_project/libgit2/tests/libgit2/threads/diff.c	/^#define THREADS /;"	d	file:
THREADS	my_project/libgit2/tests/libgit2/threads/refdb.c	/^#define THREADS /;"	d	file:
THREAD_COUNT	my_project/libgit2/tests/libgit2/threads/tlsdata.c	/^#define THREAD_COUNT /;"	d	file:
THROUGHPUT_UPDATE_TIME	my_project/libgit2/src/cli/progress.c	/^#define THROUGHPUT_UPDATE_TIME /;"	d	file:
TIME	my_project/libgit2/deps/zlib/inflate.h	/^    TIME,       \/* i: waiting for modification time (gzip) *\/$/;"	e	enum:__anona0359fa00103
TIMEOUT_INFINITE	my_project/libgit2/src/libgit2/transports/winhttp.c	/^#define TIMEOUT_INFINITE /;"	d	file:
TLSDATA_MAX	my_project/libgit2/src/util/thread.c	/^#define TLSDATA_MAX /;"	d	file:
TLSEXT_NAMETYPE_host_name	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define TLSEXT_NAMETYPE_host_name /;"	d
TLS_method	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^const SSL_METHOD *(*TLS_method)(void);$/;"	v	typeref:typename:const SSL_METHOD * (*)(void)
TMP1	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define TMP1 /;"	d	file:
TMP2	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define TMP2 /;"	d	file:
TMP3	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define TMP3 /;"	d	file:
TOO_FAR	my_project/libgit2/deps/zlib/deflate.c	/^#  define TOO_FAR /;"	d	file:
TOTAL_BLANK_WEIGHT	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define TOTAL_BLANK_WEIGHT /;"	d	file:
TRAILER_SEPARATORS	my_project/libgit2/src/libgit2/trailer.c	/^#define TRAILER_SEPARATORS /;"	d	file:
TRANSACTION_CONFIG	my_project/libgit2/src/libgit2/transaction.c	/^	TRANSACTION_CONFIG$/;"	e	enum:__anonbebdb9760103	file:
TRANSACTION_NONE	my_project/libgit2/src/libgit2/transaction.c	/^	TRANSACTION_NONE,$/;"	e	enum:__anonbebdb9760103	file:
TRANSACTION_REFS	my_project/libgit2/src/libgit2/transaction.c	/^	TRANSACTION_REFS,$/;"	e	enum:__anonbebdb9760103	file:
TREE_ENTRY_CHECK_NAMELEN	my_project/libgit2/src/libgit2/tree.c	/^#define TREE_ENTRY_CHECK_NAMELEN(/;"	d	file:
TREE_IDX_ANCESTOR	my_project/libgit2/src/libgit2/merge.c	/^	TREE_IDX_ANCESTOR = 0,$/;"	e	enum:__anon7b397d600103	file:
TREE_IDX_OURS	my_project/libgit2/src/libgit2/merge.c	/^	TREE_IDX_OURS = 1,$/;"	e	enum:__anon7b397d600103	file:
TREE_IDX_THEIRS	my_project/libgit2/src/libgit2/merge.c	/^	TREE_IDX_THEIRS = 2$/;"	e	enum:__anon7b397d600103	file:
TREE_OID_ANCESTOR	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^#define TREE_OID_ANCESTOR	/;"	d	file:
TREE_OID_BRANCH	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^#define TREE_OID_BRANCH	/;"	d	file:
TREE_OID_DF_ANCESTOR	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^#define TREE_OID_DF_ANCESTOR	/;"	d	file:
TREE_OID_DF_SIDE1	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^#define TREE_OID_DF_SIDE1	/;"	d	file:
TREE_OID_DF_SIDE2	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^#define TREE_OID_DF_SIDE2	/;"	d	file:
TREE_OID_MASTER	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^#define TREE_OID_MASTER	/;"	d	file:
TREE_OID_RENAMES1	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^#define TREE_OID_RENAMES1	/;"	d	file:
TREE_OID_RENAMES2	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^#define TREE_OID_RENAMES2	/;"	d	file:
TREE_OID_RENAME_CONFLICT_ANCESTOR	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^#define TREE_OID_RENAME_CONFLICT_ANCESTOR	/;"	d	file:
TREE_OID_RENAME_CONFLICT_OURS	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^#define TREE_OID_RENAME_CONFLICT_OURS	/;"	d	file:
TREE_OID_RENAME_CONFLICT_THEIRS	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^#define TREE_OID_RENAME_CONFLICT_THEIRS	/;"	d	file:
TRUE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define TRUE /;"	d
TRY_FREE	my_project/libgit2/deps/zlib/zutil.h	/^#define TRY_FREE(/;"	d
TWO_ANCESTOR_OID	my_project/libgit2/tests/libgit2/index/reuc.c	/^#define TWO_ANCESTOR_OID /;"	d	file:
TWO_OUR_OID	my_project/libgit2/tests/libgit2/index/reuc.c	/^#define TWO_OUR_OID /;"	d	file:
TWO_THEIR_OID	my_project/libgit2/tests/libgit2/index/reuc.c	/^#define TWO_THEIR_OID /;"	d	file:
TYPE	my_project/libgit2/deps/zlib/inflate.h	/^        TYPE,       \/* i: waiting for type bits, including last-flag bit *\/$/;"	e	enum:__anona0359fa00103
TYPEDO	my_project/libgit2/deps/zlib/inflate.h	/^        TYPEDO,     \/* i: same, but skip check to exit inflate on new block *\/$/;"	e	enum:__anona0359fa00103
Table of Contents	my_project/libgit2/README.md	/^Table of Contents$/;"	c
Targets	my_project/libgit2/docs/coding-style.md	/^### Targets$/;"	S	section:libgit2 Coding Style""CMake Coding Style
Template	my_project/libgit2/tests/clar/generate.py	/^    class Template(object):$/;"	c	class:Module
TestSuite	my_project/libgit2/tests/clar/generate.py	/^class TestSuite(object):$/;"	c
Tests	my_project/libgit2/docs/conventions.md	/^## Tests$/;"	s	chapter:Libgit2 Conventions
The internal error API	my_project/libgit2/docs/error-handling.md	/^The internal error API$/;"	s	chapter:Error reporting in libgit2
The public error API	my_project/libgit2/docs/error-handling.md	/^The public error API$/;"	s	chapter:Error reporting in libgit2
Threading	my_project/libgit2/README.md	/^Threading$/;"	c
Threading and cryptographic libraries	my_project/libgit2/docs/threading.md	/^Threading and cryptographic libraries$/;"	c
Threading in libgit2	my_project/libgit2/docs/threading.md	/^Threading in libgit2$/;"	c
Trace	my_project/libgit2/deps/zlib/zutil.h	/^#  define Trace(/;"	d
Tracec	my_project/libgit2/deps/zlib/zutil.h	/^#  define Tracec(/;"	d
Tracecv	my_project/libgit2/deps/zlib/zutil.h	/^#  define Tracecv(/;"	d
Tracev	my_project/libgit2/deps/zlib/zutil.h	/^#  define Tracev(/;"	d
Tracevv	my_project/libgit2/deps/zlib/zutil.h	/^#  define Tracevv(/;"	d
Troubleshooting libgit2 Problems	my_project/libgit2/docs/troubleshooting.md	/^Troubleshooting libgit2 Problems$/;"	c
Typedefs	my_project/libgit2/docs/conventions.md	/^## Typedefs$/;"	s	chapter:Libgit2 Conventions
Types	my_project/libgit2/tests/resources/typechanges/README.md	/^Types$/;"	s
U	my_project/libgit2/src/libgit2/delta.c	/^static const unsigned int U[256] = {$/;"	v	typeref:typename:const unsigned int[256]	file:
U	my_project/libgit2/src/util/wildmatch.c	/^	U = GIT_PUNCT,$/;"	e	enum:__anon8b99d91e0103	file:
UCD_BLOCK_MASK	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define UCD_BLOCK_MASK /;"	d	file:
UCD_BLOCK_SHIFT	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^#define UCD_BLOCK_SHIFT /;"	d	file:
UCD_BLOCK_SIZE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define UCD_BLOCK_SIZE /;"	d
UCD_CASESET	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define UCD_CASESET(/;"	d
UCD_CATEGORY	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define UCD_CATEGORY(/;"	d
UCD_CHARTYPE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define UCD_CHARTYPE(/;"	d
UCD_GRAPHBREAK	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define UCD_GRAPHBREAK(/;"	d
UCD_OTHERCASE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define UCD_OTHERCASE(/;"	d
UCD_SCRIPT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define UCD_SCRIPT(/;"	d
UCHAR21	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define UCHAR21(/;"	d
UCHAR21INC	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define UCHAR21INC(/;"	d
UCHAR21INCTEST	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define UCHAR21INCTEST(/;"	d
UCHAR21TEST	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define UCHAR21TEST(/;"	d
UCHAR_SHIFT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define UCHAR_SHIFT /;"	d
UINT16_C	my_project/libgit2/include/git2/stdint.h	/^#define UINT16_C(/;"	d
UINT16_MAX	my_project/libgit2/include/git2/stdint.h	/^#define UINT16_MAX /;"	d
UINT2	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^typedef uint16_t UINT2;$/;"	t	typeref:typename:uint16_t	file:
UINT31_MAX	my_project/libgit2/src/libgit2/indexer.c	/^#define UINT31_MAX /;"	d	file:
UINT32_C	my_project/libgit2/include/git2/stdint.h	/^#define UINT32_C(/;"	d
UINT32_MAX	my_project/libgit2/include/git2/stdint.h	/^#define UINT32_MAX /;"	d
UINT4	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^typedef uint32_t UINT4;$/;"	t	typeref:typename:uint32_t	file:
UINT64_C	my_project/libgit2/include/git2/stdint.h	/^#define UINT64_C(/;"	d
UINT64_MAX	my_project/libgit2/include/git2/stdint.h	/^#define UINT64_MAX /;"	d
UINT8_C	my_project/libgit2/include/git2/stdint.h	/^#define UINT8_C(/;"	d
UINT8_MAX	my_project/libgit2/include/git2/stdint.h	/^#define UINT8_MAX /;"	d
UINTMAX_C	my_project/libgit2/include/git2/stdint.h	/^#define UINTMAX_C /;"	d
UINTMAX_MAX	my_project/libgit2/include/git2/stdint.h	/^#define UINTMAX_MAX /;"	d
UINTPTR_MAX	my_project/libgit2/include/git2/stdint.h	/^#  define UINTPTR_MAX /;"	d
UINT_FAST16_MAX	my_project/libgit2/include/git2/stdint.h	/^#define UINT_FAST16_MAX /;"	d
UINT_FAST32_MAX	my_project/libgit2/include/git2/stdint.h	/^#define UINT_FAST32_MAX /;"	d
UINT_FAST64_MAX	my_project/libgit2/include/git2/stdint.h	/^#define UINT_FAST64_MAX /;"	d
UINT_FAST8_MAX	my_project/libgit2/include/git2/stdint.h	/^#define UINT_FAST8_MAX /;"	d
UINT_LEAST16_MAX	my_project/libgit2/include/git2/stdint.h	/^#define UINT_LEAST16_MAX /;"	d
UINT_LEAST32_MAX	my_project/libgit2/include/git2/stdint.h	/^#define UINT_LEAST32_MAX /;"	d
UINT_LEAST64_MAX	my_project/libgit2/include/git2/stdint.h	/^#define UINT_LEAST64_MAX /;"	d
UINT_LEAST8_MAX	my_project/libgit2/include/git2/stdint.h	/^#define UINT_LEAST8_MAX /;"	d
UNALIGNED_OK	my_project/libgit2/deps/zlib/zconf.h	/^#  define UNALIGNED_OK$/;"	d
UNCHANGED_INDEX_ENTRY	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^#define UNCHANGED_INDEX_ENTRY /;"	d	file:
UNCHANGED_INDEX_ENTRY	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define UNCHANGED_INDEX_ENTRY /;"	d	file:
UNIQUE_BLOB_FN	my_project/libgit2/tests/libgit2/odb/freshen.c	/^#define UNIQUE_BLOB_FN /;"	d	file:
UNIQUE_BLOB_ID	my_project/libgit2/tests/libgit2/odb/freshen.c	/^#define UNIQUE_BLOB_ID /;"	d	file:
UNIQUE_STR	my_project/libgit2/tests/libgit2/odb/freshen.c	/^#define UNIQUE_STR /;"	d	file:
UNI_MAX_BMP	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_MAX_BMP /;"	d	file:
UNI_MAX_LEGAL_UTF32	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_MAX_LEGAL_UTF32 /;"	d	file:
UNI_MAX_UTF16	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_MAX_UTF16 /;"	d	file:
UNI_MAX_UTF32	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_MAX_UTF32 /;"	d	file:
UNI_MAX_UTF8_BYTES_PER_CODE_POINT	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_MAX_UTF8_BYTES_PER_CODE_POINT /;"	d	file:
UNI_REPLACEMENT_CHAR	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_REPLACEMENT_CHAR /;"	d	file:
UNI_SUR_HIGH_END	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_SUR_HIGH_END /;"	d	file:
UNI_SUR_HIGH_START	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_SUR_HIGH_START /;"	d	file:
UNI_SUR_LOW_END	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_SUR_LOW_END /;"	d	file:
UNI_SUR_LOW_START	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define UNI_SUR_LOW_START /;"	d	file:
UNRELATED_NEW1	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define UNRELATED_NEW1 /;"	d	file:
UNRELATED_NEW2	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^#define UNRELATED_NEW2 /;"	d	file:
UNUSED	my_project/libgit2/examples/common.h	/^#define UNUSED(/;"	d
UNUSED	my_project/libgit2/fuzzers/config_file_fuzzer.c	/^#define UNUSED(/;"	d	file:
UNUSED	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^#define UNUSED(/;"	d	file:
UNUSED	my_project/libgit2/fuzzers/objects_fuzzer.c	/^#define UNUSED(/;"	d	file:
UNUSED	my_project/libgit2/fuzzers/patch_parse_fuzzer.c	/^#define UNUSED(/;"	d	file:
UNUSED	my_project/libgit2/fuzzers/revparse_fuzzer.c	/^#define UNUSED(/;"	d	file:
UPDATE_CHECK	my_project/libgit2/deps/zlib/inflate.c	/^#  define UPDATE_CHECK(/;"	d	file:
UPDATE_HASH	my_project/libgit2/deps/zlib/deflate.c	/^#define UPDATE_HASH(/;"	d	file:
UPTODATE_BRANCH	my_project/libgit2/tests/libgit2/merge/analysis.c	/^#define UPTODATE_BRANCH /;"	d	file:
URL	my_project/libgit2/tests/libgit2/online/remotes.c	/^#define URL /;"	d	file:
URLZONE_INTRANET	my_project/libgit2/deps/winhttp/urlmon.h	/^#define URLZONE_INTRANET /;"	d
URLZONE_LOCAL_MACHINE	my_project/libgit2/deps/winhttp/urlmon.h	/^#define URLZONE_LOCAL_MACHINE /;"	d
URLZONE_TRUSTED	my_project/libgit2/deps/winhttp/urlmon.h	/^#define URLZONE_TRUSTED /;"	d
URL_COMPONENTS	my_project/libgit2/deps/winhttp/winhttp.h	/^} URL_COMPONENTS, *LPURL_COMPONENTS;$/;"	t	typeref:struct:__anon0b61ebe80108
URL_COMPONENTSW	my_project/libgit2/deps/winhttp/winhttp.h	/^typedef URL_COMPONENTS URL_COMPONENTSW;$/;"	t	typeref:typename:URL_COMPONENTS
USER	my_project/libgit2/src/util/net.c	/^		HOSTPORT, HOST, IPV6, HOST_END, USERPASS, USER$/;"	e	enum:url_parse_authority::__anon850d8ea80203	file:
USER	my_project/libgit2/src/util/net.c	/^		USER,$/;"	e	enum:git_net_url_parse_scp::__anon850d8ea80503	file:
USERPASS	my_project/libgit2/src/util/net.c	/^		HOSTPORT, HOST, IPV6, HOST_END, USERPASS, USER$/;"	e	enum:url_parse_authority::__anon850d8ea80203	file:
USE_BUNDLED_ZLIB	my_project/libgit2/CMakeLists.txt	/^option(USE_BUNDLED_ZLIB        "Use the bundled version of zlib. Can be set to one of Bundled(ON/;"	D
USE_BUNDLED_ZLIB	my_project/libgit2/cmake/SelectZlib.cmake	/^	set(USE_BUNDLED_ZLIB "Bundled")$/;"	v
USE_DEFAULT	my_project/libgit2/src/libgit2/diff_tform.c	/^#define USE_DEFAULT(/;"	d	file:
USE_GSSAPI	my_project/libgit2/CMakeLists.txt	/^option(USE_GSSAPI              "Link with libgssapi for SPNEGO auth"      OFF)$/;"	D
USE_GSSAPI	my_project/libgit2/cmake/SelectGSSAPI.cmake	/^			set(USE_GSSAPI "GSS.framework")$/;"	v
USE_GSSAPI	my_project/libgit2/cmake/SelectGSSAPI.cmake	/^			set(USE_GSSAPI "gssapi")$/;"	v
USE_HTTPS	my_project/libgit2/CMakeLists.txt	/^option(USE_HTTPS               "Enable HTTPS support. Can be set to a specific backend" ON)$/;"	D
USE_HTTPS	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^				set(USE_HTTPS "OpenSSL")$/;"	v
USE_HTTPS	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^				set(USE_HTTPS "SecureTransport")$/;"	v
USE_HTTPS	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^			set(USE_HTTPS "OpenSSL")$/;"	v
USE_HTTPS	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^			set(USE_HTTPS "WinHTTP")$/;"	v
USE_HTTPS	my_project/libgit2/cmake/SelectHTTPSBackend.cmake	/^			set(USE_HTTPS "mbedTLS")$/;"	v
USE_HTTP_PARSER	my_project/libgit2/CMakeLists.txt	/^   set(USE_HTTP_PARSER         "" CACHE STRING "Specifies the HTTP Parser implementation; either/;"	v
USE_ICONV	my_project/libgit2/CMakeLists.txt	/^	option(USE_ICONV           "Link with and use iconv library"                    ON)$/;"	D
USE_LEAK_CHECKER	my_project/libgit2/CMakeLists.txt	/^option(USE_LEAK_CHECKER        "Run tests with leak checker"                           OFF)$/;"	D
USE_NSEC	my_project/libgit2/CMakeLists.txt	/^option(USE_NSEC                "Support nanosecond precision file mtimes and ctimes"    ON)$/;"	D
USE_NTLMCLIENT	my_project/libgit2/CMakeLists.txt	/^		option(USE_NTLMCLIENT  "Enable NTLM support on Unix."                   ON)$/;"	D
USE_NTLMCLIENT	my_project/libgit2/CMakeLists.txt	/^		option(USE_NTLMCLIENT  "Enable NTLM support on Unix."                  OFF)$/;"	D
USE_SENDFILE	my_project/libgit2/tests/clar/clar/fs.h	/^#define USE_SENDFILE /;"	d
USE_SHA1	my_project/libgit2/CMakeLists.txt	/^option(USE_SHA1                "Enable SHA1. Can be set to CollisionDetection(ON)\/HTTPS" ON)$/;"	D
USE_SHA1	my_project/libgit2/cmake/SelectHashes.cmake	/^		set(USE_SHA1 "CollisionDetection")$/;"	v
USE_SHA1	my_project/libgit2/cmake/SelectHashes.cmake	/^		set(USE_SHA1 "CommonCrypto")$/;"	v
USE_SHA1	my_project/libgit2/cmake/SelectHashes.cmake	/^		set(USE_SHA1 "Win32")$/;"	v
USE_SHA1	my_project/libgit2/cmake/SelectHashes.cmake	/^		set(USE_SHA1 ${USE_HTTPS})$/;"	v
USE_SHA1	my_project/libgit2/cmake/SelectHashes.cmake	/^	SET(USE_SHA1 "CollisionDetection")$/;"	v
USE_SHA256	my_project/libgit2/CMakeLists.txt	/^option(USE_SHA256              "Enable SHA256. Can be set to HTTPS\/Builtin" ON)$/;"	D
USE_SHA256	my_project/libgit2/cmake/SelectHashes.cmake	/^		set(USE_SHA256 "CommonCrypto")$/;"	v
USE_SHA256	my_project/libgit2/cmake/SelectHashes.cmake	/^		set(USE_SHA256 "Win32")$/;"	v
USE_SHA256	my_project/libgit2/cmake/SelectHashes.cmake	/^		set(USE_SHA256 ${USE_HTTPS})$/;"	v
USE_SHA256	my_project/libgit2/cmake/SelectHashes.cmake	/^	SET(USE_SHA256 "Builtin")$/;"	v
USE_SHA256	my_project/libgit2/cmake/SelectHashes.cmake	/^	SET(USE_SHA256 "HTTPS")$/;"	v
USE_SSH	my_project/libgit2/CMakeLists.txt	/^option(USE_SSH                 "Enable SSH support. Can be set to a specific backend" OFF)$/;"	D
USE_STANDALONE_FUZZERS	my_project/libgit2/CMakeLists.txt	/^option(USE_STANDALONE_FUZZERS  "Enable standalone fuzzers (compatible with gcc)"       OFF)$/;"	D
USE_THREADS	my_project/libgit2/CMakeLists.txt	/^option(USE_THREADS             "Use threads for parallel processing when possible"      ON)$/;"	D
USHAMaxHashSize	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    USHAMaxHashSize = SHA512HashSize,$/;"	e	enum:__anon4de7e74e0203
USHAMaxHashSizeBits	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    SHA512HashSizeBits = 512, USHAMaxHashSizeBits = SHA512HashSizeBits$/;"	e	enum:__anon4de7e74e0203
USHA_Max_Message_Block_Size	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    USHA_Max_Message_Block_Size = SHA512_Message_Block_Size,$/;"	e	enum:__anon4de7e74e0203
UTF16	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^typedef unsigned short  UTF16;   \/* at least 16 bits *\/$/;"	t	typeref:typename:unsigned short	file:
UTF32	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^typedef unsigned int    UTF32;   \/* at least 32 bits *\/$/;"	t	typeref:typename:unsigned int	file:
UTF8	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^typedef unsigned char   UTF8;    \/* typically 8 bits *\/$/;"	t	typeref:typename:unsigned char	file:
UTF8_BOM	my_project/libgit2/tests/libgit2/filter/crlf.h	/^#define UTF8_BOM /;"	d
UTF8_BOM	my_project/libgit2/tests/util/crlf.h	/^#define UTF8_BOM /;"	d
UTF8_HUNK_HEADER	my_project/libgit2/tests/libgit2/diff/patch.c	/^#define UTF8_HUNK_HEADER /;"	d	file:
UTF8_TRUNCATED_A_HUNK_HEADER	my_project/libgit2/tests/libgit2/diff/patch.c	/^#define UTF8_TRUNCATED_A_HUNK_HEADER /;"	d	file:
UTF8_TRUNCATED_L_HUNK_HEADER	my_project/libgit2/tests/libgit2/diff/patch.c	/^#define UTF8_TRUNCATED_L_HUNK_HEADER /;"	d	file:
UTF_LENGTH	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define UTF_LENGTH /;"	d	file:
UTIL_INCLUDES	my_project/libgit2/src/util/CMakeLists.txt	/^set(UTIL_INCLUDES$/;"	v
UUID_LENGTH_CCH	my_project/libgit2/src/libgit2/transports/winhttp.c	/^#define UUID_LENGTH_CCH	/;"	d	file:
UniqueGenerator	my_project/libgit2/tests/resources/userdiff/after/file.php	/^class UniqueGenerator$/;"	c	namespace:Faker
UniqueGenerator	my_project/libgit2/tests/resources/userdiff/before/file.php	/^class UniqueGenerator$/;"	c	namespace:Faker
UniqueGenerator	my_project/libgit2/tests/resources/userdiff/files/file.php	/^class UniqueGenerator$/;"	c	namespace:Faker
Unit Tests	my_project/libgit2/docs/contributing.md	/^## Unit Tests$/;"	s	chapter:Welcome to libgit2!
Updating documentation	my_project/libgit2/docs/release.md	/^## Updating documentation$/;"	s	chapter:Releasing the library
Using libgit2	my_project/libgit2/README.md	/^Using libgit2$/;"	c
VALID_COMMIT_SHA1	my_project/libgit2/tests/libgit2/object/validate.c	/^#define VALID_COMMIT_SHA1 /;"	d	file:
VALID_COMMIT_SHA256	my_project/libgit2/tests/libgit2/object/validate.c	/^#define VALID_COMMIT_SHA256 /;"	d	file:
VALID_TREE_SHA1	my_project/libgit2/tests/libgit2/object/validate.c	/^#define VALID_TREE_SHA1 /;"	d	file:
VALID_TREE_SHA256	my_project/libgit2/tests/libgit2/object/validate.c	/^#define VALID_TREE_SHA256 /;"	d	file:
VERY_SECURE_ENCRYPTION	my_project/libgit2/tests/libgit2/filter/custom_helpers.c	/^#define VERY_SECURE_ENCRYPTION(/;"	d	file:
VOLUME_NAME_DOS	my_project/libgit2/src/util/win32/mingw-compat.h	/^#define VOLUME_NAME_DOS /;"	d
VSPACE_BYTE_CASES	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define VSPACE_BYTE_CASES /;"	d
VSPACE_CASES	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define VSPACE_CASES /;"	d
VSPACE_LIST	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define VSPACE_LIST /;"	d
VSPACE_MULTIBYTE_CASES	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define VSPACE_MULTIBYTE_CASES /;"	d
VS_VERSION_INFO	my_project/libgit2/src/libgit2/git2.rc	/^VS_VERSION_INFO		VERSIONINFO$/;"	v
V_ASN1_UTF8STRING	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define V_ASN1_UTF8STRING /;"	d
Variables	my_project/libgit2/docs/coding-style.md	/^### Variables$/;"	S	section:libgit2 Coding Style""C Coding Style
Version	my_project/libgit2/script/release.py	/^class Version(object):$/;"	c
W	my_project/libgit2/deps/zlib/crc32.c	/^#      define W /;"	d	file:
W	my_project/libgit2/deps/zlib/crc32.c	/^#    define W /;"	d	file:
WAS_NEWLINE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define WAS_NEWLINE(/;"	d
WCHAR_MAX	my_project/libgit2/include/git2/stdint.h	/^#  define WCHAR_MAX /;"	d
WCHAR_MIN	my_project/libgit2/include/git2/stdint.h	/^#  define WCHAR_MIN /;"	d
WC_ERR_INVALID_CHARS	my_project/libgit2/src/util/win32/utf-conv.h	/^# define WC_ERR_INVALID_CHARS	/;"	d
WIDECHAR	my_project/libgit2/deps/zlib/gzguts.h	/^#  define WIDECHAR$/;"	d
WIDEN	my_project/libgit2/src/libgit2/transports/winhttp.c	/^#define WIDEN(/;"	d	file:
WIDEN2	my_project/libgit2/src/libgit2/transports/winhttp.c	/^#define WIDEN2(/;"	d	file:
WIN32	my_project/libgit2/deps/zlib/zconf.h	/^#    define WIN32$/;"	d
WIN32_IS_WSEP	my_project/libgit2/src/util/win32/posix_w32.c	/^#define WIN32_IS_WSEP(/;"	d	file:
WIN32_LEAKCHECK	my_project/libgit2/CMakeLists.txt	/^	option(WIN32_LEAKCHECK     "Enable leak reporting via crtdbg"                  OFF)$/;"	D
WIN32_LEAN_AND_MEAN	my_project/libgit2/deps/zlib/zconf.h	/^#      define WIN32_LEAN_AND_MEAN$/;"	d
WIN32_LEAN_AND_MEAN	my_project/libgit2/src/util/util.c	/^#  define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_MODE_MASK	my_project/libgit2/src/util/win32/posix_w32.c	/^#define WIN32_MODE_MASK /;"	d	file:
WINDOWS	my_project/libgit2/deps/zlib/zconf.h	/^#  define WINDOWS$/;"	d
WINHTTPAPI	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTPAPI$/;"	d
WINHTTP_ACCESS_TYPE_DEFAULT_PROXY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ACCESS_TYPE_DEFAULT_PROXY /;"	d
WINHTTP_ACCESS_TYPE_NAMED_PROXY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ACCESS_TYPE_NAMED_PROXY /;"	d
WINHTTP_ACCESS_TYPE_NO_PROXY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ACCESS_TYPE_NO_PROXY /;"	d
WINHTTP_ADDREQ_FLAGS_MASK	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_FLAGS_MASK /;"	d
WINHTTP_ADDREQ_FLAG_ADD	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_FLAG_ADD /;"	d
WINHTTP_ADDREQ_FLAG_ADD_IF_NEW	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_FLAG_ADD_IF_NEW /;"	d
WINHTTP_ADDREQ_FLAG_COALESCE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_FLAG_COALESCE /;"	d
WINHTTP_ADDREQ_FLAG_COALESCE_WITH_COMMA	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_FLAG_COALESCE_WITH_COMMA /;"	d
WINHTTP_ADDREQ_FLAG_COALESCE_WITH_SEMICOLON	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_FLAG_COALESCE_WITH_SEMICOLON /;"	d
WINHTTP_ADDREQ_FLAG_REPLACE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_FLAG_REPLACE /;"	d
WINHTTP_ADDREQ_INDEX_MASK	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ADDREQ_INDEX_MASK /;"	d
WINHTTP_ASYNC_RESULT	my_project/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_ASYNC_RESULT, *LPWINHTTP_ASYNC_RESULT;$/;"	t	typeref:struct:__anon0b61ebe80208
WINHTTP_AUTH_SCHEME_BASIC	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTH_SCHEME_BASIC /;"	d
WINHTTP_AUTH_SCHEME_DIGEST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTH_SCHEME_DIGEST /;"	d
WINHTTP_AUTH_SCHEME_NEGOTIATE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTH_SCHEME_NEGOTIATE /;"	d
WINHTTP_AUTH_SCHEME_NTLM	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTH_SCHEME_NTLM /;"	d
WINHTTP_AUTH_SCHEME_PASSPORT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTH_SCHEME_PASSPORT /;"	d
WINHTTP_AUTH_TARGET_PROXY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTH_TARGET_PROXY /;"	d
WINHTTP_AUTH_TARGET_SERVER	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTH_TARGET_SERVER /;"	d
WINHTTP_AUTOLOGON_SECURITY_LEVEL_DEFAULT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOLOGON_SECURITY_LEVEL_DEFAULT /;"	d
WINHTTP_AUTOLOGON_SECURITY_LEVEL_HIGH	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOLOGON_SECURITY_LEVEL_HIGH /;"	d
WINHTTP_AUTOLOGON_SECURITY_LEVEL_LOW	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOLOGON_SECURITY_LEVEL_LOW /;"	d
WINHTTP_AUTOLOGON_SECURITY_LEVEL_MEDIUM	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOLOGON_SECURITY_LEVEL_MEDIUM /;"	d
WINHTTP_AUTOPROXY_AUTO_DETECT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOPROXY_AUTO_DETECT /;"	d
WINHTTP_AUTOPROXY_CONFIG_URL	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOPROXY_CONFIG_URL /;"	d
WINHTTP_AUTOPROXY_OPTIONS	my_project/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_AUTOPROXY_OPTIONS;$/;"	t	typeref:struct:__anon0b61ebe80608
WINHTTP_AUTOPROXY_RUN_INPROCESS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOPROXY_RUN_INPROCESS /;"	d
WINHTTP_AUTOPROXY_RUN_OUTPROCESS_ONLY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTOPROXY_RUN_OUTPROCESS_ONLY /;"	d
WINHTTP_AUTO_DETECT_TYPE_DHCP	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTO_DETECT_TYPE_DHCP /;"	d
WINHTTP_AUTO_DETECT_TYPE_DNS_A	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_AUTO_DETECT_TYPE_DNS_A /;"	d
WINHTTP_CALLBACK_FLAG_ALL_COMPLETIONS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_ALL_COMPLETIONS /;"	d
WINHTTP_CALLBACK_FLAG_ALL_NOTIFICATIONS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_ALL_NOTIFICATIONS /;"	d
WINHTTP_CALLBACK_FLAG_CLOSE_CONNECTION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_CLOSE_CONNECTION /;"	d
WINHTTP_CALLBACK_FLAG_CONNECT_TO_SERVER	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_CONNECT_TO_SERVER /;"	d
WINHTTP_CALLBACK_FLAG_DATA_AVAILABLE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_DATA_AVAILABLE /;"	d
WINHTTP_CALLBACK_FLAG_DETECTING_PROXY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_DETECTING_PROXY /;"	d
WINHTTP_CALLBACK_FLAG_HANDLES	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_HANDLES /;"	d
WINHTTP_CALLBACK_FLAG_HEADERS_AVAILABLE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_HEADERS_AVAILABLE /;"	d
WINHTTP_CALLBACK_FLAG_INTERMEDIATE_RESPONSE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_INTERMEDIATE_RESPONSE /;"	d
WINHTTP_CALLBACK_FLAG_READ_COMPLETE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_READ_COMPLETE /;"	d
WINHTTP_CALLBACK_FLAG_RECEIVE_RESPONSE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_RECEIVE_RESPONSE /;"	d
WINHTTP_CALLBACK_FLAG_REDIRECT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_REDIRECT /;"	d
WINHTTP_CALLBACK_FLAG_REQUEST_ERROR	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_REQUEST_ERROR /;"	d
WINHTTP_CALLBACK_FLAG_RESOLVE_NAME	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_RESOLVE_NAME /;"	d
WINHTTP_CALLBACK_FLAG_SECURE_FAILURE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_SECURE_FAILURE /;"	d
WINHTTP_CALLBACK_FLAG_SENDREQUEST_COMPLETE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_SENDREQUEST_COMPLETE /;"	d
WINHTTP_CALLBACK_FLAG_SEND_REQUEST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_SEND_REQUEST /;"	d
WINHTTP_CALLBACK_FLAG_WRITE_COMPLETE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_FLAG_WRITE_COMPLETE /;"	d
WINHTTP_CALLBACK_STATUS_CLOSING_CONNECTION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_CLOSING_CONNECTION /;"	d
WINHTTP_CALLBACK_STATUS_CONNECTED_TO_SERVER	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_CONNECTED_TO_SERVER /;"	d
WINHTTP_CALLBACK_STATUS_CONNECTING_TO_SERVER	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_CONNECTING_TO_SERVER /;"	d
WINHTTP_CALLBACK_STATUS_CONNECTION_CLOSED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_CONNECTION_CLOSED /;"	d
WINHTTP_CALLBACK_STATUS_DATA_AVAILABLE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_DATA_AVAILABLE /;"	d
WINHTTP_CALLBACK_STATUS_DETECTING_PROXY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_DETECTING_PROXY /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_CERT_CN_INVALID	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_CERT_CN_INVALID /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_CERT_DATE_INVALID	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_CERT_DATE_INVALID /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_CERT_REVOKED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_CERT_REVOKED /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_CERT_REV_FAILED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_CERT_REV_FAILED /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_CERT_WRONG_USAGE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_CERT_WRONG_USAGE /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_INVALID_CA	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_INVALID_CA /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_INVALID_CERT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_INVALID_CERT /;"	d
WINHTTP_CALLBACK_STATUS_FLAG_SECURITY_CHANNEL_ERROR	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_FLAG_SECURITY_CHANNEL_ERROR /;"	d
WINHTTP_CALLBACK_STATUS_HANDLE_CLOSING	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_HANDLE_CLOSING /;"	d
WINHTTP_CALLBACK_STATUS_HANDLE_CREATED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_HANDLE_CREATED /;"	d
WINHTTP_CALLBACK_STATUS_HEADERS_AVAILABLE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_HEADERS_AVAILABLE /;"	d
WINHTTP_CALLBACK_STATUS_INTERMEDIATE_RESPONSE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_INTERMEDIATE_RESPONSE /;"	d
WINHTTP_CALLBACK_STATUS_NAME_RESOLVED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_NAME_RESOLVED /;"	d
WINHTTP_CALLBACK_STATUS_READ_COMPLETE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_READ_COMPLETE /;"	d
WINHTTP_CALLBACK_STATUS_RECEIVING_RESPONSE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_RECEIVING_RESPONSE /;"	d
WINHTTP_CALLBACK_STATUS_REDIRECT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_REDIRECT /;"	d
WINHTTP_CALLBACK_STATUS_REQUEST_ERROR	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_REQUEST_ERROR /;"	d
WINHTTP_CALLBACK_STATUS_REQUEST_SENT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_REQUEST_SENT /;"	d
WINHTTP_CALLBACK_STATUS_RESOLVING_NAME	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_RESOLVING_NAME /;"	d
WINHTTP_CALLBACK_STATUS_RESPONSE_RECEIVED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_RESPONSE_RECEIVED /;"	d
WINHTTP_CALLBACK_STATUS_SECURE_FAILURE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_SECURE_FAILURE /;"	d
WINHTTP_CALLBACK_STATUS_SENDING_REQUEST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_SENDING_REQUEST /;"	d
WINHTTP_CALLBACK_STATUS_SENDREQUEST_COMPLETE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_SENDREQUEST_COMPLETE /;"	d
WINHTTP_CALLBACK_STATUS_WRITE_COMPLETE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CALLBACK_STATUS_WRITE_COMPLETE /;"	d
WINHTTP_CERTIFICATE_INFO	my_project/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_CERTIFICATE_INFO;$/;"	t	typeref:struct:__anon0b61ebe80308
WINHTTP_CONNECTION_INFO	my_project/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_CONNECTION_INFO;$/;"	t	typeref:struct:__anon0b61ebe80808
WINHTTP_CONNS_PER_SERVER_UNLIMITED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_CONNS_PER_SERVER_UNLIMITED /;"	d
WINHTTP_CURRENT_USER_IE_PROXY_CONFIG	my_project/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_CURRENT_USER_IE_PROXY_CONFIG;$/;"	t	typeref:struct:__anon0b61ebe80508
WINHTTP_DEF	my_project/libgit2/deps/winhttp/CMakeLists.txt	/^	set(WINHTTP_DEF "winhttp.def")$/;"	v
WINHTTP_DEF	my_project/libgit2/deps/winhttp/CMakeLists.txt	/^	set(WINHTTP_DEF "winhttp64.def")$/;"	v
WINHTTP_DEFAULT_ACCEPT_TYPES	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DEFAULT_ACCEPT_TYPES /;"	d
WINHTTP_DISABLE_AUTHENTICATION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DISABLE_AUTHENTICATION /;"	d
WINHTTP_DISABLE_COOKIES	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DISABLE_COOKIES /;"	d
WINHTTP_DISABLE_KEEP_ALIVE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DISABLE_KEEP_ALIVE /;"	d
WINHTTP_DISABLE_PASSPORT_AUTH	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DISABLE_PASSPORT_AUTH /;"	d
WINHTTP_DISABLE_PASSPORT_KEYRING	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DISABLE_PASSPORT_KEYRING /;"	d
WINHTTP_DISABLE_REDIRECTS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DISABLE_REDIRECTS /;"	d
WINHTTP_DISABLE_SPN_SERVER_PORT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_DISABLE_SPN_SERVER_PORT /;"	d
WINHTTP_ENABLE_PASSPORT_AUTH	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ENABLE_PASSPORT_AUTH /;"	d
WINHTTP_ENABLE_PASSPORT_KEYRING	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ENABLE_PASSPORT_KEYRING /;"	d
WINHTTP_ENABLE_SPN_SERVER_PORT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ENABLE_SPN_SERVER_PORT /;"	d
WINHTTP_ENABLE_SSL_REVERT_IMPERSONATION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ENABLE_SSL_REVERT_IMPERSONATION /;"	d
WINHTTP_ENABLE_SSL_REVOCATION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ENABLE_SSL_REVOCATION /;"	d
WINHTTP_ERROR_BASE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ERROR_BASE /;"	d
WINHTTP_ERROR_LAST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_ERROR_LAST /;"	d
WINHTTP_FIRST_OPTION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FIRST_OPTION /;"	d
WINHTTP_FLAG_ASYNC	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_ASYNC /;"	d
WINHTTP_FLAG_BYPASS_PROXY_CACHE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_BYPASS_PROXY_CACHE /;"	d
WINHTTP_FLAG_ESCAPE_DISABLE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_ESCAPE_DISABLE /;"	d
WINHTTP_FLAG_ESCAPE_DISABLE_QUERY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_ESCAPE_DISABLE_QUERY /;"	d
WINHTTP_FLAG_ESCAPE_PERCENT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_ESCAPE_PERCENT /;"	d
WINHTTP_FLAG_NULL_CODEPAGE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_NULL_CODEPAGE /;"	d
WINHTTP_FLAG_REFRESH	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_REFRESH /;"	d
WINHTTP_FLAG_SECURE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_SECURE /;"	d
WINHTTP_FLAG_SECURE_PROTOCOL_ALL	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_SECURE_PROTOCOL_ALL /;"	d
WINHTTP_FLAG_SECURE_PROTOCOL_SSL2	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_SECURE_PROTOCOL_SSL2 /;"	d
WINHTTP_FLAG_SECURE_PROTOCOL_SSL3	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_SECURE_PROTOCOL_SSL3 /;"	d
WINHTTP_FLAG_SECURE_PROTOCOL_TLS1	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_SECURE_PROTOCOL_TLS1 /;"	d
WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_1	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_1 /;"	d
WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_1	my_project/libgit2/src/libgit2/transports/winhttp.c	/^# define WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_1 /;"	d	file:
WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_2	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_2 /;"	d
WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_2	my_project/libgit2/src/libgit2/transports/winhttp.c	/^# define WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_2 /;"	d	file:
WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_3	my_project/libgit2/src/libgit2/transports/winhttp.c	/^# define WINHTTP_FLAG_SECURE_PROTOCOL_TLS1_3 /;"	d	file:
WINHTTP_HANDLE_TYPE_CONNECT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_HANDLE_TYPE_CONNECT /;"	d
WINHTTP_HANDLE_TYPE_REQUEST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_HANDLE_TYPE_REQUEST /;"	d
WINHTTP_HANDLE_TYPE_SESSION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_HANDLE_TYPE_SESSION /;"	d
WINHTTP_HEADER_NAME_BY_INDEX	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_HEADER_NAME_BY_INDEX /;"	d
WINHTTP_IGNORE_REQUEST_TOTAL_LENGTH	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_IGNORE_REQUEST_TOTAL_LENGTH /;"	d
WINHTTP_IGNORE_REQUEST_TOTAL_LENGTH	my_project/libgit2/src/libgit2/transports/winhttp.c	/^#define WINHTTP_IGNORE_REQUEST_TOTAL_LENGTH /;"	d	file:
WINHTTP_INVALID_STATUS_CALLBACK	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_INVALID_STATUS_CALLBACK /;"	d
WINHTTP_LAST_OPTION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_LAST_OPTION /;"	d
WINHTTP_NO_ADDITIONAL_HEADERS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_NO_ADDITIONAL_HEADERS /;"	d
WINHTTP_NO_CLIENT_CERT_CONTEXT	my_project/libgit2/src/libgit2/transports/winhttp.c	/^# define WINHTTP_NO_CLIENT_CERT_CONTEXT /;"	d	file:
WINHTTP_NO_HEADER_INDEX	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_NO_HEADER_INDEX /;"	d
WINHTTP_NO_OUTPUT_BUFFER	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_NO_OUTPUT_BUFFER /;"	d
WINHTTP_NO_PROXY_BYPASS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_NO_PROXY_BYPASS /;"	d
WINHTTP_NO_PROXY_NAME	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_NO_PROXY_NAME /;"	d
WINHTTP_NO_REFERER	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_NO_REFERER /;"	d
WINHTTP_NO_REQUEST_DATA	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_NO_REQUEST_DATA /;"	d
WINHTTP_OPTION_AUTOLOGON_POLICY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_AUTOLOGON_POLICY /;"	d
WINHTTP_OPTION_CALLBACK	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CALLBACK /;"	d
WINHTTP_OPTION_CLIENT_CERT_CONTEXT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CLIENT_CERT_CONTEXT /;"	d
WINHTTP_OPTION_CLIENT_CERT_ISSUER_LIST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CLIENT_CERT_ISSUER_LIST /;"	d
WINHTTP_OPTION_CODEPAGE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CODEPAGE /;"	d
WINHTTP_OPTION_CONFIGURE_PASSPORT_AUTH	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CONFIGURE_PASSPORT_AUTH /;"	d
WINHTTP_OPTION_CONNECTION_INFO	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CONNECTION_INFO /;"	d
WINHTTP_OPTION_CONNECT_RETRIES	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CONNECT_RETRIES /;"	d
WINHTTP_OPTION_CONNECT_TIMEOUT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CONNECT_TIMEOUT /;"	d
WINHTTP_OPTION_CONTEXT_VALUE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_CONTEXT_VALUE /;"	d
WINHTTP_OPTION_DISABLE_FEATURE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_DISABLE_FEATURE /;"	d
WINHTTP_OPTION_ENABLETRACING	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_ENABLETRACING /;"	d
WINHTTP_OPTION_ENABLE_FEATURE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_ENABLE_FEATURE /;"	d
WINHTTP_OPTION_EXTENDED_ERROR	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_EXTENDED_ERROR /;"	d
WINHTTP_OPTION_GLOBAL_PROXY_CREDS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_GLOBAL_PROXY_CREDS /;"	d
WINHTTP_OPTION_GLOBAL_SERVER_CREDS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_GLOBAL_SERVER_CREDS /;"	d
WINHTTP_OPTION_HANDLE_TYPE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_HANDLE_TYPE /;"	d
WINHTTP_OPTION_HTTP_VERSION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_HTTP_VERSION /;"	d
WINHTTP_OPTION_MAX_CONNS_PER_1_0_SERVER	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_MAX_CONNS_PER_1_0_SERVER /;"	d
WINHTTP_OPTION_MAX_CONNS_PER_SERVER	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_MAX_CONNS_PER_SERVER /;"	d
WINHTTP_OPTION_MAX_HTTP_AUTOMATIC_REDIRECTS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_MAX_HTTP_AUTOMATIC_REDIRECTS /;"	d
WINHTTP_OPTION_MAX_HTTP_STATUS_CONTINUE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_MAX_HTTP_STATUS_CONTINUE /;"	d
WINHTTP_OPTION_MAX_RESPONSE_DRAIN_SIZE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_MAX_RESPONSE_DRAIN_SIZE /;"	d
WINHTTP_OPTION_MAX_RESPONSE_HEADER_SIZE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_MAX_RESPONSE_HEADER_SIZE /;"	d
WINHTTP_OPTION_PARENT_HANDLE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PARENT_HANDLE /;"	d
WINHTTP_OPTION_PASSPORT_COBRANDING_TEXT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PASSPORT_COBRANDING_TEXT /;"	d
WINHTTP_OPTION_PASSPORT_COBRANDING_URL	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PASSPORT_COBRANDING_URL /;"	d
WINHTTP_OPTION_PASSPORT_RETURN_URL	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PASSPORT_RETURN_URL /;"	d
WINHTTP_OPTION_PASSPORT_SIGN_OUT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PASSPORT_SIGN_OUT /;"	d
WINHTTP_OPTION_PASSWORD	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PASSWORD /;"	d
WINHTTP_OPTION_PEERDIST_EXTENSION_STATE	my_project/libgit2/src/libgit2/transports/winhttp.c	/^#define WINHTTP_OPTION_PEERDIST_EXTENSION_STATE	/;"	d	file:
WINHTTP_OPTION_PROXY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PROXY /;"	d
WINHTTP_OPTION_PROXY_PASSWORD	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PROXY_PASSWORD /;"	d
WINHTTP_OPTION_PROXY_USERNAME	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_PROXY_USERNAME /;"	d
WINHTTP_OPTION_READ_BUFFER_SIZE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_READ_BUFFER_SIZE /;"	d
WINHTTP_OPTION_RECEIVE_RESPONSE_TIMEOUT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_RECEIVE_RESPONSE_TIMEOUT /;"	d
WINHTTP_OPTION_RECEIVE_TIMEOUT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_RECEIVE_TIMEOUT /;"	d
WINHTTP_OPTION_REDIRECT_POLICY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REDIRECT_POLICY /;"	d
WINHTTP_OPTION_REDIRECT_POLICY_ALWAYS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REDIRECT_POLICY_ALWAYS /;"	d
WINHTTP_OPTION_REDIRECT_POLICY_DEFAULT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REDIRECT_POLICY_DEFAULT /;"	d
WINHTTP_OPTION_REDIRECT_POLICY_DISALLOW_HTTPS_TO_HTTP	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REDIRECT_POLICY_DISALLOW_HTTPS_TO_HTTP /;"	d
WINHTTP_OPTION_REDIRECT_POLICY_LAST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REDIRECT_POLICY_LAST /;"	d
WINHTTP_OPTION_REDIRECT_POLICY_NEVER	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REDIRECT_POLICY_NEVER /;"	d
WINHTTP_OPTION_REJECT_USERPWD_IN_URL	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REJECT_USERPWD_IN_URL /;"	d
WINHTTP_OPTION_REQUEST_PRIORITY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_REQUEST_PRIORITY /;"	d
WINHTTP_OPTION_RESOLVE_TIMEOUT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_RESOLVE_TIMEOUT /;"	d
WINHTTP_OPTION_SECURE_PROTOCOLS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SECURE_PROTOCOLS /;"	d
WINHTTP_OPTION_SECURITY_CERTIFICATE_STRUCT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SECURITY_CERTIFICATE_STRUCT /;"	d
WINHTTP_OPTION_SECURITY_FLAGS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SECURITY_FLAGS /;"	d
WINHTTP_OPTION_SECURITY_KEY_BITNESS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SECURITY_KEY_BITNESS /;"	d
WINHTTP_OPTION_SEND_TIMEOUT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SEND_TIMEOUT /;"	d
WINHTTP_OPTION_SERVER_CERT_CONTEXT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SERVER_CERT_CONTEXT /;"	d
WINHTTP_OPTION_SPN	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SPN /;"	d
WINHTTP_OPTION_SPN_MASK	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_SPN_MASK /;"	d
WINHTTP_OPTION_UNLOAD_NOTIFY_EVENT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_UNLOAD_NOTIFY_EVENT /;"	d
WINHTTP_OPTION_URL	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_URL /;"	d
WINHTTP_OPTION_USERNAME	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_USERNAME /;"	d
WINHTTP_OPTION_USER_AGENT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_USER_AGENT /;"	d
WINHTTP_OPTION_USE_GLOBAL_SERVER_CREDENTIALS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_USE_GLOBAL_SERVER_CREDENTIALS /;"	d
WINHTTP_OPTION_WORKER_THREAD_COUNT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_WORKER_THREAD_COUNT /;"	d
WINHTTP_OPTION_WRITE_BUFFER_SIZE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_OPTION_WRITE_BUFFER_SIZE /;"	d
WINHTTP_PROXY_INFO	my_project/libgit2/deps/winhttp/winhttp.h	/^} WINHTTP_PROXY_INFO, *LPWINHTTP_PROXY_INFO;$/;"	t	typeref:struct:__anon0b61ebe80408
WINHTTP_PROXY_INFOW	my_project/libgit2/deps/winhttp/winhttp.h	/^typedef WINHTTP_PROXY_INFO WINHTTP_PROXY_INFOW;$/;"	t	typeref:typename:WINHTTP_PROXY_INFO
WINHTTP_QUERY_ACCEPT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ACCEPT /;"	d
WINHTTP_QUERY_ACCEPT_CHARSET	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ACCEPT_CHARSET /;"	d
WINHTTP_QUERY_ACCEPT_ENCODING	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ACCEPT_ENCODING /;"	d
WINHTTP_QUERY_ACCEPT_LANGUAGE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ACCEPT_LANGUAGE /;"	d
WINHTTP_QUERY_ACCEPT_RANGES	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ACCEPT_RANGES /;"	d
WINHTTP_QUERY_AGE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_AGE /;"	d
WINHTTP_QUERY_ALLOW	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ALLOW /;"	d
WINHTTP_QUERY_AUTHENTICATION_INFO	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_AUTHENTICATION_INFO /;"	d
WINHTTP_QUERY_AUTHORIZATION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_AUTHORIZATION /;"	d
WINHTTP_QUERY_CACHE_CONTROL	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CACHE_CONTROL /;"	d
WINHTTP_QUERY_CONNECTION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONNECTION /;"	d
WINHTTP_QUERY_CONTENT_BASE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_BASE /;"	d
WINHTTP_QUERY_CONTENT_DESCRIPTION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_DESCRIPTION /;"	d
WINHTTP_QUERY_CONTENT_DISPOSITION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_DISPOSITION /;"	d
WINHTTP_QUERY_CONTENT_ENCODING	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_ENCODING /;"	d
WINHTTP_QUERY_CONTENT_ID	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_ID /;"	d
WINHTTP_QUERY_CONTENT_LANGUAGE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_LANGUAGE /;"	d
WINHTTP_QUERY_CONTENT_LENGTH	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_LENGTH /;"	d
WINHTTP_QUERY_CONTENT_LOCATION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_LOCATION /;"	d
WINHTTP_QUERY_CONTENT_MD5	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_MD5 /;"	d
WINHTTP_QUERY_CONTENT_RANGE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_RANGE /;"	d
WINHTTP_QUERY_CONTENT_TRANSFER_ENCODING	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_TRANSFER_ENCODING /;"	d
WINHTTP_QUERY_CONTENT_TYPE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CONTENT_TYPE /;"	d
WINHTTP_QUERY_COOKIE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_COOKIE /;"	d
WINHTTP_QUERY_COST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_COST /;"	d
WINHTTP_QUERY_CUSTOM	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_CUSTOM /;"	d
WINHTTP_QUERY_DATE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_DATE /;"	d
WINHTTP_QUERY_DERIVED_FROM	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_DERIVED_FROM /;"	d
WINHTTP_QUERY_ETAG	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ETAG /;"	d
WINHTTP_QUERY_EXPECT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_EXPECT /;"	d
WINHTTP_QUERY_EXPIRES	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_EXPIRES /;"	d
WINHTTP_QUERY_FLAG_NUMBER	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_FLAG_NUMBER /;"	d
WINHTTP_QUERY_FLAG_REQUEST_HEADERS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_FLAG_REQUEST_HEADERS /;"	d
WINHTTP_QUERY_FLAG_SYSTEMTIME	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_FLAG_SYSTEMTIME /;"	d
WINHTTP_QUERY_FORWARDED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_FORWARDED /;"	d
WINHTTP_QUERY_FROM	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_FROM /;"	d
WINHTTP_QUERY_HOST	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_HOST /;"	d
WINHTTP_QUERY_IF_MATCH	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_IF_MATCH /;"	d
WINHTTP_QUERY_IF_MODIFIED_SINCE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_IF_MODIFIED_SINCE /;"	d
WINHTTP_QUERY_IF_NONE_MATCH	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_IF_NONE_MATCH /;"	d
WINHTTP_QUERY_IF_RANGE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_IF_RANGE /;"	d
WINHTTP_QUERY_IF_UNMODIFIED_SINCE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_IF_UNMODIFIED_SINCE /;"	d
WINHTTP_QUERY_LAST_MODIFIED	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_LAST_MODIFIED /;"	d
WINHTTP_QUERY_LINK	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_LINK /;"	d
WINHTTP_QUERY_LOCATION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_LOCATION /;"	d
WINHTTP_QUERY_MAX	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_MAX /;"	d
WINHTTP_QUERY_MAX_FORWARDS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_MAX_FORWARDS /;"	d
WINHTTP_QUERY_MESSAGE_ID	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_MESSAGE_ID /;"	d
WINHTTP_QUERY_MIME_VERSION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_MIME_VERSION /;"	d
WINHTTP_QUERY_ORIG_URI	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_ORIG_URI /;"	d
WINHTTP_QUERY_PASSPORT_CONFIG	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PASSPORT_CONFIG /;"	d
WINHTTP_QUERY_PASSPORT_URLS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PASSPORT_URLS /;"	d
WINHTTP_QUERY_PRAGMA	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PRAGMA /;"	d
WINHTTP_QUERY_PROXY_AUTHENTICATE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PROXY_AUTHENTICATE /;"	d
WINHTTP_QUERY_PROXY_AUTHORIZATION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PROXY_AUTHORIZATION /;"	d
WINHTTP_QUERY_PROXY_CONNECTION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PROXY_CONNECTION /;"	d
WINHTTP_QUERY_PROXY_SUPPORT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PROXY_SUPPORT /;"	d
WINHTTP_QUERY_PUBLIC	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_PUBLIC /;"	d
WINHTTP_QUERY_RANGE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_RANGE /;"	d
WINHTTP_QUERY_RAW_HEADERS	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_RAW_HEADERS /;"	d
WINHTTP_QUERY_RAW_HEADERS_CRLF	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_RAW_HEADERS_CRLF /;"	d
WINHTTP_QUERY_REFERER	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_REFERER /;"	d
WINHTTP_QUERY_REFRESH	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_REFRESH /;"	d
WINHTTP_QUERY_REQUEST_METHOD	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_REQUEST_METHOD /;"	d
WINHTTP_QUERY_RETRY_AFTER	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_RETRY_AFTER /;"	d
WINHTTP_QUERY_SERVER	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_SERVER /;"	d
WINHTTP_QUERY_SET_COOKIE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_SET_COOKIE /;"	d
WINHTTP_QUERY_STATUS_CODE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_STATUS_CODE /;"	d
WINHTTP_QUERY_STATUS_TEXT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_STATUS_TEXT /;"	d
WINHTTP_QUERY_TITLE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_TITLE /;"	d
WINHTTP_QUERY_TRANSFER_ENCODING	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_TRANSFER_ENCODING /;"	d
WINHTTP_QUERY_UNLESS_MODIFIED_SINCE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_UNLESS_MODIFIED_SINCE /;"	d
WINHTTP_QUERY_UPGRADE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_UPGRADE /;"	d
WINHTTP_QUERY_URI	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_URI /;"	d
WINHTTP_QUERY_USER_AGENT	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_USER_AGENT /;"	d
WINHTTP_QUERY_VARY	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_VARY /;"	d
WINHTTP_QUERY_VERSION	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_VERSION /;"	d
WINHTTP_QUERY_VIA	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_VIA /;"	d
WINHTTP_QUERY_WARNING	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_WARNING /;"	d
WINHTTP_QUERY_WWW_AUTHENTICATE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_QUERY_WWW_AUTHENTICATE /;"	d
WINHTTP_STATUS_CALLBACK	my_project/libgit2/deps/winhttp/winhttp.h	/^typedef VOID (CALLBACK *WINHTTP_STATUS_CALLBACK)(HINTERNET,DWORD_PTR,DWORD,LPVOID,DWORD);$/;"	t	typeref:typename:VOID (CALLBACK *)(HINTERNET,DWORD_PTR,DWORD,LPVOID,DWORD)
WINHTTP_TIME_FORMAT_BUFSIZE	my_project/libgit2/deps/winhttp/winhttp.h	/^#define WINHTTP_TIME_FORMAT_BUFSIZE /;"	d
WINT_MAX	my_project/libgit2/include/git2/stdint.h	/^#define WINT_MAX /;"	d
WINT_MIN	my_project/libgit2/include/git2/stdint.h	/^#define WINT_MIN /;"	d
WIN_INIT	my_project/libgit2/deps/zlib/deflate.h	/^#define WIN_INIT /;"	d
WM_ABORT_ALL	my_project/libgit2/src/util/wildmatch.h	/^#define WM_ABORT_ALL /;"	d
WM_ABORT_TO_STARSTAR	my_project/libgit2/src/util/wildmatch.h	/^#define WM_ABORT_TO_STARSTAR /;"	d
WM_CASEFOLD	my_project/libgit2/src/util/wildmatch.h	/^#define WM_CASEFOLD /;"	d
WM_MATCH	my_project/libgit2/src/util/wildmatch.h	/^#define WM_MATCH /;"	d
WM_NOMATCH	my_project/libgit2/src/util/wildmatch.h	/^#define WM_NOMATCH /;"	d
WM_PATHNAME	my_project/libgit2/src/util/wildmatch.h	/^#define WM_PATHNAME /;"	d
WORD_DEFAULT	my_project/libgit2/src/libgit2/userdiff.h	/^#define WORD_DEFAULT /;"	d
WORKDIR	my_project/libgit2/tests/libgit2/object/blob/write.c	/^#define WORKDIR /;"	d	file:
WORKTREE_CHILD	my_project/libgit2/tests/libgit2/worktree/submodule.c	/^#define WORKTREE_CHILD /;"	d	file:
WORKTREE_FIXTURE_INIT	my_project/libgit2/tests/libgit2/worktree/worktree_helpers.h	/^#define WORKTREE_FIXTURE_INIT(/;"	d
WORKTREE_PARENT	my_project/libgit2/tests/libgit2/worktree/submodule.c	/^#define WORKTREE_PARENT /;"	d	file:
WORKTREE_REPO	my_project/libgit2/tests/libgit2/worktree/bare.c	/^#define WORKTREE_REPO /;"	d	file:
WORKTREE_REPO	my_project/libgit2/tests/libgit2/worktree/config.c	/^#define WORKTREE_REPO /;"	d	file:
WORKTREE_REPO	my_project/libgit2/tests/libgit2/worktree/merge.c	/^#define WORKTREE_REPO /;"	d	file:
WORKTREE_REPO	my_project/libgit2/tests/libgit2/worktree/open.c	/^#define WORKTREE_REPO /;"	d	file:
WORKTREE_REPO	my_project/libgit2/tests/libgit2/worktree/reflog.c	/^#define WORKTREE_REPO /;"	d	file:
WORKTREE_REPO	my_project/libgit2/tests/libgit2/worktree/refs.c	/^#define WORKTREE_REPO /;"	d	file:
WORKTREE_REPO	my_project/libgit2/tests/libgit2/worktree/repository.c	/^#define WORKTREE_REPO /;"	d	file:
WORKTREE_REPO	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^#define WORKTREE_REPO /;"	d	file:
WORK_SIZE_SAFETY_MARGIN	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define WORK_SIZE_SAFETY_MARGIN /;"	d	file:
WRITE_BUFFER_SIZE	my_project/libgit2/src/util/filebuf.c	/^static const size_t WRITE_BUFFER_SIZE = (4096 * 2);$/;"	v	typeref:typename:const size_t	file:
WRITE_ONE_BREAK	my_project/libgit2/src/libgit2/pack-objects.c	/^	WRITE_ONE_BREAK = 0, \/* writing this will bust the limit; not written *\/$/;"	e	enum:write_one_status	file:
WRITE_ONE_RECURSIVE	my_project/libgit2/src/libgit2/pack-objects.c	/^	WRITE_ONE_RECURSIVE = 2 \/* already scheduled to be written *\/$/;"	e	enum:write_one_status	file:
WRITE_ONE_SKIP	my_project/libgit2/src/libgit2/pack-objects.c	/^	WRITE_ONE_SKIP = -1, \/* already written *\/$/;"	e	enum:write_one_status	file:
WRITE_ONE_WRITTEN	my_project/libgit2/src/libgit2/pack-objects.c	/^	WRITE_ONE_WRITTEN = 1, \/* normal *\/$/;"	e	enum:write_one_status	file:
W_OK	my_project/libgit2/src/util/posix.h	/^#define W_OK /;"	d
W_OK	my_project/libgit2/tests/clar/clar.c	/^#			define W_OK /;"	d	file:
Welcome to libgit2!	my_project/libgit2/docs/contributing.md	/^# Welcome to libgit2!$/;"	c
What It Can Do	my_project/libgit2/README.md	/^What It Can Do$/;"	c
What's Changed	my_project/libgit2/docs/changelog.md	/^## What's Changed$/;"	s
Windows	my_project/libgit2/tests/README.md	/^### Windows$/;"	S	section:libgit2 tests""Memory leak checking
Windows Junction Points	my_project/libgit2/docs/differences-from-git.md	/^Windows Junction Points$/;"	s	chapter:Differences from Git
Writing benchmark tests	my_project/libgit2/tests/benchmarks/README.md	/^## Writing benchmark tests$/;"	s	chapter:libgit2 benchmarks
Writing error messages	my_project/libgit2/docs/error-handling.md	/^Writing error messages$/;"	s	chapter:Error reporting in libgit2
Writing tests for libgit2	my_project/libgit2/tests/README.md	/^## Writing tests for libgit2$/;"	s	chapter:libgit2 tests
X	my_project/libgit2/src/util/wildmatch.c	/^	X = GIT_CNTRL,$/;"	e	enum:__anon8b99d91e0103	file:
X509	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef void X509;$/;"	t	typeref:typename:void
X509_NAME	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef void X509_NAME;$/;"	t	typeref:typename:void
X509_NAME_ENTRY	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef void X509_NAME_ENTRY;$/;"	t	typeref:typename:void
X509_NAME_ENTRY_get_data	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^ASN1_STRING *(*X509_NAME_ENTRY_get_data)(const X509_NAME_ENTRY *ne);$/;"	v	typeref:typename:ASN1_STRING * (*)(const X509_NAME_ENTRY * ne)
X509_NAME_get_entry	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^X509_NAME_ENTRY *(*X509_NAME_get_entry)(X509_NAME *name, int loc);$/;"	v	typeref:typename:X509_NAME_ENTRY * (*)(X509_NAME * name,int loc)
X509_NAME_get_index_by_NID	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*X509_NAME_get_index_by_NID)(X509_NAME *name, int nid, int lastpos);$/;"	v	typeref:typename:int (*)(X509_NAME * name,int nid,int lastpos)
X509_STORE_CTX	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef void X509_STORE_CTX;$/;"	t	typeref:typename:void
X509_V_OK	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^# define X509_V_OK /;"	d
X509_free	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*X509_free)(X509 *a);$/;"	v	typeref:typename:void (*)(X509 * a)
X509_get_ext_d2i	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void *(*X509_get_ext_d2i)(const X509 *x, int nid, int *crit, int *idx);$/;"	v	typeref:typename:void * (*)(const X509 * x,int nid,int * crit,int * idx)
X509_get_subject_name	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^X509_NAME *(*X509_get_subject_name)(const X509 *x);$/;"	v	typeref:typename:X509_NAME * (*)(const X509 * x)
XCL_END	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_END /;"	d
XCL_HASPROP	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_HASPROP /;"	d
XCL_MAP	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_MAP /;"	d
XCL_NOT	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_NOT /;"	d
XCL_NOTPROP	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_NOTPROP /;"	d
XCL_PROP	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_PROP /;"	d
XCL_RANGE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_RANGE /;"	d
XCL_SINGLE	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define XCL_SINGLE /;"	d
XDF_DIFF_ALG	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDF_DIFF_ALG(/;"	d
XDF_DIFF_ALGORITHM_MASK	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDF_DIFF_ALGORITHM_MASK /;"	d
XDF_HISTOGRAM_DIFF	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDF_HISTOGRAM_DIFF /;"	d
XDF_IGNORE_BLANK_LINES	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDF_IGNORE_BLANK_LINES /;"	d
XDF_IGNORE_CR_AT_EOL	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDF_IGNORE_CR_AT_EOL /;"	d
XDF_IGNORE_WHITESPACE	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDF_IGNORE_WHITESPACE /;"	d
XDF_IGNORE_WHITESPACE_AT_EOL	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDF_IGNORE_WHITESPACE_AT_EOL /;"	d
XDF_IGNORE_WHITESPACE_CHANGE	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDF_IGNORE_WHITESPACE_CHANGE /;"	d
XDF_INDENT_HEURISTIC	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDF_INDENT_HEURISTIC /;"	d
XDF_NEED_MINIMAL	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDF_NEED_MINIMAL /;"	d
XDF_PATIENCE_DIFF	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDF_PATIENCE_DIFF /;"	d
XDF_WHITESPACE_FLAGS	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDF_WHITESPACE_FLAGS /;"	d
XDIFFI_H	my_project/libgit2/deps/xdiff/xdiffi.h	/^#define XDIFFI_H$/;"	d
XDIFF_H	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDIFF_H$/;"	d
XDL_ABS	my_project/libgit2/deps/xdiff/xmacros.h	/^#define XDL_ABS(/;"	d
XDL_ADDBITS	my_project/libgit2/deps/xdiff/xmacros.h	/^#define XDL_ADDBITS(/;"	d
XDL_ALLOC_ARRAY	my_project/libgit2/deps/xdiff/xmacros.h	/^#define XDL_ALLOC_ARRAY(/;"	d
XDL_ALLOC_GROW	my_project/libgit2/deps/xdiff/xmacros.h	/^#define XDL_ALLOC_GROW(/;"	d
XDL_BUG	my_project/libgit2/deps/xdiff/git-xdiff.h	/^#define XDL_BUG(/;"	d
XDL_CALLOC_ARRAY	my_project/libgit2/deps/xdiff/xmacros.h	/^#define XDL_CALLOC_ARRAY(/;"	d
XDL_EMIT_FUNCCONTEXT	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDL_EMIT_FUNCCONTEXT /;"	d
XDL_EMIT_FUNCNAMES	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDL_EMIT_FUNCNAMES /;"	d
XDL_EMIT_NO_HUNK_HDR	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDL_EMIT_NO_HUNK_HDR /;"	d
XDL_GUESS_NLINES1	my_project/libgit2/deps/xdiff/xprepare.c	/^#define XDL_GUESS_NLINES1 /;"	d	file:
XDL_GUESS_NLINES2	my_project/libgit2/deps/xdiff/xprepare.c	/^#define XDL_GUESS_NLINES2 /;"	d	file:
XDL_HASHLONG	my_project/libgit2/deps/xdiff/xmacros.h	/^#define XDL_HASHLONG(/;"	d
XDL_HEUR_MIN_COST	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define XDL_HEUR_MIN_COST /;"	d	file:
XDL_ISDIGIT	my_project/libgit2/deps/xdiff/xmacros.h	/^#define XDL_ISDIGIT(/;"	d
XDL_ISSPACE	my_project/libgit2/deps/xdiff/xmacros.h	/^#define XDL_ISSPACE(/;"	d
XDL_KPDIS_RUN	my_project/libgit2/deps/xdiff/xprepare.c	/^#define XDL_KPDIS_RUN /;"	d	file:
XDL_K_HEUR	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define XDL_K_HEUR /;"	d	file:
XDL_LE32_GET	my_project/libgit2/deps/xdiff/xmacros.h	/^#define XDL_LE32_GET(/;"	d
XDL_LE32_PUT	my_project/libgit2/deps/xdiff/xmacros.h	/^#define XDL_LE32_PUT(/;"	d
XDL_LINE_MAX	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define XDL_LINE_MAX /;"	d	file:
XDL_MASKBITS	my_project/libgit2/deps/xdiff/xmacros.h	/^#define XDL_MASKBITS(/;"	d
XDL_MAX	my_project/libgit2/deps/xdiff/xmacros.h	/^#define XDL_MAX(/;"	d
XDL_MAX_COST_MIN	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define XDL_MAX_COST_MIN /;"	d	file:
XDL_MAX_EQLIMIT	my_project/libgit2/deps/xdiff/xprepare.c	/^#define XDL_MAX_EQLIMIT /;"	d	file:
XDL_MERGE_DIFF3	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDL_MERGE_DIFF3 /;"	d
XDL_MERGE_EAGER	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDL_MERGE_EAGER /;"	d
XDL_MERGE_FAVOR_OURS	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDL_MERGE_FAVOR_OURS /;"	d
XDL_MERGE_FAVOR_THEIRS	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDL_MERGE_FAVOR_THEIRS /;"	d
XDL_MERGE_FAVOR_UNION	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDL_MERGE_FAVOR_UNION /;"	d
XDL_MERGE_MINIMAL	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDL_MERGE_MINIMAL /;"	d
XDL_MERGE_ZEALOUS	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDL_MERGE_ZEALOUS /;"	d
XDL_MERGE_ZEALOUS_ALNUM	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDL_MERGE_ZEALOUS_ALNUM /;"	d
XDL_MERGE_ZEALOUS_DIFF3	my_project/libgit2/deps/xdiff/xdiff.h	/^#define XDL_MERGE_ZEALOUS_DIFF3 /;"	d
XDL_MIN	my_project/libgit2/deps/xdiff/xmacros.h	/^#define XDL_MIN(/;"	d
XDL_SIMSCAN_WINDOW	my_project/libgit2/deps/xdiff/xprepare.c	/^#define XDL_SIMSCAN_WINDOW /;"	d	file:
XDL_SNAKE_CNT	my_project/libgit2/deps/xdiff/xdiffi.c	/^#define XDL_SNAKE_CNT /;"	d	file:
XDL_UNUSED	my_project/libgit2/deps/xdiff/git-xdiff.h	/^#define XDL_UNUSED /;"	d
XEMIT_H	my_project/libgit2/deps/xdiff/xemit.h	/^#define XEMIT_H$/;"	d
XINCLUDE_H	my_project/libgit2/deps/xdiff/xinclude.h	/^#define XINCLUDE_H$/;"	d
XMACROS_H	my_project/libgit2/deps/xdiff/xmacros.h	/^#define XMACROS_H$/;"	d
XPREPARE_H	my_project/libgit2/deps/xdiff/xprepare.h	/^#define XPREPARE_H$/;"	d
XSTRING	my_project/libgit2/deps/pcre/pcre_compile.c	/^#define XSTRING(/;"	d	file:
XSTRING	my_project/libgit2/deps/pcre/pcre_version.c	/^#define XSTRING(/;"	d	file:
XTYPES_H	my_project/libgit2/deps/xdiff/xtypes.h	/^#define XTYPES_H$/;"	d
XUTILS_H	my_project/libgit2/deps/xdiff/xutils.h	/^#define XUTILS_H$/;"	d
Xcallpat	my_project/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xcallpat;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xcharptr	my_project/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xcharptr;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xcodelink	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xcodelink;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xcondition	my_project/libgit2/deps/pcre/pcre_exec.c	/^  BOOL Xcondition;$/;"	m	struct:heapframe	typeref:typename:BOOL	file:
Xctype	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xctype;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xcur_is_word	my_project/libgit2/deps/pcre/pcre_exec.c	/^  BOOL Xcur_is_word;$/;"	m	struct:heapframe	typeref:typename:BOOL	file:
Xdata	my_project/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xdata;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xecode	my_project/libgit2/deps/pcre/pcre_exec.c	/^  const pcre_uchar *Xecode;$/;"	m	struct:heapframe	typeref:typename:const pcre_uchar *	file:
Xeptr	my_project/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xeptr;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xeptrb	my_project/libgit2/deps/pcre/pcre_exec.c	/^  eptrblock *Xeptrb;$/;"	m	struct:heapframe	typeref:typename:eptrblock *	file:
Xfc	my_project/libgit2/deps/pcre/pcre_exec.c	/^  unsigned int Xfc;$/;"	m	struct:heapframe	typeref:typename:unsigned int	file:
Xfi	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xfi;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xlength	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xlength;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xmax	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xmax;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xmin	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xmin;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xmstart	my_project/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xmstart;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xnew_recursive	my_project/libgit2/deps/pcre/pcre_exec.c	/^  recursion_info Xnew_recursive;$/;"	m	struct:heapframe	typeref:typename:recursion_info	file:
Xnewptrb	my_project/libgit2/deps/pcre/pcre_exec.c	/^  eptrblock Xnewptrb;$/;"	m	struct:heapframe	typeref:typename:eptrblock	file:
Xnext	my_project/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xnext;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xnextframe	my_project/libgit2/deps/pcre/pcre_exec.c	/^  struct heapframe *Xnextframe;$/;"	m	struct:heapframe	typeref:struct:heapframe *	file:
Xnumber	my_project/libgit2/deps/pcre/pcre_exec.c	/^  unsigned int Xnumber;$/;"	m	struct:heapframe	typeref:typename:unsigned int	file:
Xocchars	my_project/libgit2/deps/pcre/pcre_exec.c	/^  pcre_uchar Xocchars[6];$/;"	m	struct:heapframe	typeref:typename:pcre_uchar[6]	file:
Xoclength	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xoclength;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xoffset	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xoffset;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xoffset_top	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xoffset_top;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xop	my_project/libgit2/deps/pcre/pcre_exec.c	/^  unsigned int Xop;$/;"	m	struct:heapframe	typeref:typename:unsigned int	file:
Xpp	my_project/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xpp;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xprev	my_project/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xprev;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xprev_is_word	my_project/libgit2/deps/pcre/pcre_exec.c	/^  BOOL Xprev_is_word;$/;"	m	struct:heapframe	typeref:typename:BOOL	file:
Xprevframe	my_project/libgit2/deps/pcre/pcre_exec.c	/^  struct heapframe *Xprevframe;$/;"	m	struct:heapframe	typeref:struct:heapframe *	file:
Xprop_fail_result	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xprop_fail_result;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xprop_type	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xprop_type;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xprop_value	my_project/libgit2/deps/pcre/pcre_exec.c	/^  unsigned int Xprop_value;$/;"	m	struct:heapframe	typeref:typename:unsigned int	file:
Xrdepth	my_project/libgit2/deps/pcre/pcre_exec.c	/^  unsigned int Xrdepth;$/;"	m	struct:heapframe	typeref:typename:unsigned int	file:
Xsave_capture_last	my_project/libgit2/deps/pcre/pcre_exec.c	/^  pcre_int32 Xsave_capture_last;$/;"	m	struct:heapframe	typeref:typename:pcre_int32	file:
Xsave_offset1	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xsave_offset1, Xsave_offset2, Xsave_offset3;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xsave_offset2	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xsave_offset1, Xsave_offset2, Xsave_offset3;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xsave_offset3	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xsave_offset1, Xsave_offset2, Xsave_offset3;$/;"	m	struct:heapframe	typeref:typename:int	file:
Xsaved_eptr	my_project/libgit2/deps/pcre/pcre_exec.c	/^  PCRE_PUCHAR Xsaved_eptr;$/;"	m	struct:heapframe	typeref:typename:PCRE_PUCHAR	file:
Xstacksave	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xstacksave[REC_STACK_SAVE_MAX];$/;"	m	struct:heapframe	typeref:typename:int[]	file:
Xwhere	my_project/libgit2/deps/pcre/pcre_exec.c	/^  int Xwhere;$/;"	m	struct:heapframe	typeref:typename:int	file:
Z	my_project/libgit2/src/util/wildmatch.c	/^	Z = GIT_CNTRL | GIT_SPACE$/;"	e	enum:__anon8b99d91e0103	file:
ZALLOC	my_project/libgit2/deps/zlib/zutil.h	/^#define ZALLOC(/;"	d
ZCONF_H	my_project/libgit2/deps/zlib/zconf.h	/^#define ZCONF_H$/;"	d
ZEXPORT	my_project/libgit2/deps/zlib/zconf.h	/^#      define ZEXPORT /;"	d
ZEXPORT	my_project/libgit2/deps/zlib/zconf.h	/^#    define ZEXPORT /;"	d
ZEXPORT	my_project/libgit2/deps/zlib/zconf.h	/^#  define ZEXPORT$/;"	d
ZEXPORTVA	my_project/libgit2/deps/zlib/zconf.h	/^#      define ZEXPORTVA /;"	d
ZEXPORTVA	my_project/libgit2/deps/zlib/zconf.h	/^#  define ZEXPORTVA$/;"	d
ZEXTERN	my_project/libgit2/deps/zlib/zconf.h	/^#        define ZEXTERN /;"	d
ZEXTERN	my_project/libgit2/deps/zlib/zconf.h	/^#  define ZEXTERN /;"	d
ZFREE	my_project/libgit2/deps/zlib/zutil.h	/^#define ZFREE(/;"	d
ZLIB_H	my_project/libgit2/deps/zlib/zlib.h	/^#define ZLIB_H$/;"	d
ZLIB_INTERNAL	my_project/libgit2/deps/zlib/gzguts.h	/^#  define ZLIB_INTERNAL /;"	d
ZLIB_INTERNAL	my_project/libgit2/deps/zlib/gzguts.h	/^#  define ZLIB_INTERNAL$/;"	d
ZLIB_INTERNAL	my_project/libgit2/deps/zlib/zutil.h	/^#  define ZLIB_INTERNAL /;"	d
ZLIB_INTERNAL	my_project/libgit2/deps/zlib/zutil.h	/^#  define ZLIB_INTERNAL$/;"	d
ZLIB_VERNUM	my_project/libgit2/deps/zlib/zlib.h	/^#define ZLIB_VERNUM /;"	d
ZLIB_VERSION	my_project/libgit2/deps/zlib/zlib.h	/^#define ZLIB_VERSION /;"	d
ZLIB_VER_MAJOR	my_project/libgit2/deps/zlib/zlib.h	/^#define ZLIB_VER_MAJOR /;"	d
ZLIB_VER_MINOR	my_project/libgit2/deps/zlib/zlib.h	/^#define ZLIB_VER_MINOR /;"	d
ZLIB_VER_REVISION	my_project/libgit2/deps/zlib/zlib.h	/^#define ZLIB_VER_REVISION /;"	d
ZLIB_VER_SUBREVISION	my_project/libgit2/deps/zlib/zlib.h	/^#define ZLIB_VER_SUBREVISION /;"	d
ZSTREAM_BUFFER_MIN_EXTRA	my_project/libgit2/src/util/zstream.c	/^#define ZSTREAM_BUFFER_MIN_EXTRA /;"	d	file:
ZSTREAM_BUFFER_SIZE	my_project/libgit2/src/util/zstream.c	/^#define ZSTREAM_BUFFER_SIZE /;"	d	file:
ZSWAP32	my_project/libgit2/deps/zlib/zutil.h	/^#define ZSWAP32(/;"	d
ZUTIL_H	my_project/libgit2/deps/zlib/zutil.h	/^#define ZUTIL_H$/;"	d
Z_ARG	my_project/libgit2/deps/zlib/zconf.h	/^#    define Z_ARG(/;"	d
Z_ASCII	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_ASCII /;"	d
Z_BATCH	my_project/libgit2/deps/zlib/crc32.c	/^#define Z_BATCH /;"	d	file:
Z_BATCH_MIN	my_project/libgit2/deps/zlib/crc32.c	/^#define Z_BATCH_MIN /;"	d	file:
Z_BATCH_ZEROS	my_project/libgit2/deps/zlib/crc32.c	/^#define Z_BATCH_ZEROS /;"	d	file:
Z_BEST_COMPRESSION	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_BEST_COMPRESSION /;"	d
Z_BEST_SPEED	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_BEST_SPEED /;"	d
Z_BINARY	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_BINARY /;"	d
Z_BLOCK	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_BLOCK /;"	d
Z_BUF_ERROR	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_BUF_ERROR /;"	d
Z_DATA_ERROR	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_DATA_ERROR /;"	d
Z_DEFAULT_COMPRESSION	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_DEFAULT_COMPRESSION /;"	d
Z_DEFAULT_STRATEGY	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_DEFAULT_STRATEGY /;"	d
Z_DEFLATED	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_DEFLATED /;"	d
Z_ERRNO	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_ERRNO /;"	d
Z_FILTERED	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_FILTERED /;"	d
Z_FINISH	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_FINISH /;"	d
Z_FIXED	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_FIXED /;"	d
Z_FULL_FLUSH	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_FULL_FLUSH /;"	d
Z_HAVE_STDARG_H	my_project/libgit2/deps/zlib/zconf.h	/^#  define Z_HAVE_STDARG_H$/;"	d
Z_HAVE_UNISTD_H	my_project/libgit2/deps/zlib/zconf.h	/^#    define Z_HAVE_UNISTD_H$/;"	d
Z_HAVE_UNISTD_H	my_project/libgit2/deps/zlib/zconf.h	/^#  define Z_HAVE_UNISTD_H$/;"	d
Z_HUFFMAN_ONLY	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_HUFFMAN_ONLY /;"	d
Z_LARGE64	my_project/libgit2/deps/zlib/zconf.h	/^#  define Z_LARGE64$/;"	d
Z_LFS64	my_project/libgit2/deps/zlib/zconf.h	/^#  define Z_LFS64$/;"	d
Z_MEM_ERROR	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_MEM_ERROR /;"	d
Z_NEED_DICT	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_NEED_DICT /;"	d
Z_NO_COMPRESSION	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_NO_COMPRESSION /;"	d
Z_NO_FLUSH	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_NO_FLUSH /;"	d
Z_NULL	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_NULL /;"	d
Z_OK	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_OK /;"	d
Z_PARTIAL_FLUSH	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_PARTIAL_FLUSH /;"	d
Z_PREFIX_SET	my_project/libgit2/deps/zlib/zconf.h	/^#  define Z_PREFIX_SET$/;"	d
Z_RLE	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_RLE /;"	d
Z_STREAM_END	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_STREAM_END /;"	d
Z_STREAM_ERROR	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_STREAM_ERROR /;"	d
Z_SYNC_FLUSH	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_SYNC_FLUSH /;"	d
Z_TEXT	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_TEXT /;"	d
Z_TREES	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_TREES /;"	d
Z_U4	my_project/libgit2/deps/zlib/zconf.h	/^#    define Z_U4 /;"	d
Z_U8	my_project/libgit2/deps/zlib/zutil.h	/^#    define Z_U8 /;"	d
Z_UNKNOWN	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_UNKNOWN /;"	d
Z_VERSION_ERROR	my_project/libgit2/deps/zlib/zlib.h	/^#define Z_VERSION_ERROR /;"	d
Z_WANT64	my_project/libgit2/deps/zlib/zconf.h	/^#  define Z_WANT64$/;"	d
_FAIL_MESSAGE	my_project/libgit2/deps/pcre/cmake/FindPackageHandleStandardArgs.cmake	/^      SET(_FAIL_MESSAGE "Could not find OPTIONAL package ${_NAME}")$/;"	v
_FAIL_MESSAGE	my_project/libgit2/deps/pcre/cmake/FindPackageHandleStandardArgs.cmake	/^      SET(_FAIL_MESSAGE "Could not find REQUIRED package ${_NAME}")$/;"	v
_FAIL_MESSAGE	my_project/libgit2/deps/pcre/cmake/FindPackageHandleStandardArgs.cmake	/^    SET(_FAIL_MESSAGE "${_FAIL_MSG}")$/;"	v
_GIT_REPARSE_DATA_BUFFER	my_project/libgit2/src/util/win32/reparse.h	/^typedef struct _GIT_REPARSE_DATA_BUFFER {$/;"	s
_INCLUDE_git_indexer_h__	my_project/libgit2/include/git2/indexer.h	/^#define _INCLUDE_git_indexer_h__$/;"	d
_LARGEFILE_SOURCE	my_project/libgit2/deps/zlib/gzguts.h	/^#    define _LARGEFILE_SOURCE /;"	d
_MAIN_CC	my_project/libgit2/tests/clar/clar.c	/^#	define _MAIN_CC /;"	d	file:
_MAIN_CC	my_project/libgit2/tests/clar/clar.c	/^#	define _MAIN_CC$/;"	d	file:
_MBEDTLS_ROOT_HINTS	my_project/libgit2/cmake/FindmbedTLS.cmake	/^set(_MBEDTLS_ROOT_HINTS$/;"	v
_MBEDTLS_ROOT_HINTS_AND_PATHS	my_project/libgit2/cmake/FindmbedTLS.cmake	/^set(_MBEDTLS_ROOT_HINTS_AND_PATHS$/;"	v
_MSC_STDINT_H_	my_project/libgit2/include/git2/stdint.h	/^#define _MSC_STDINT_H_$/;"	d
_PCREPOSIX_H	my_project/libgit2/deps/pcre/pcreposix.h	/^#define _PCREPOSIX_H$/;"	d
_PCRE_H	my_project/libgit2/deps/pcre/pcre.h	/^#define _PCRE_H$/;"	d
_POSIX_SOURCE	my_project/libgit2/deps/zlib/gzguts.h	/^#  define _POSIX_SOURCE$/;"	d
_SC_NPROCESSORS_ONLN	my_project/libgit2/src/util/util.c	/^#		define _SC_NPROCESSORS_ONLN /;"	d	file:
_SHA_H_	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^#define _SHA_H_$/;"	d
_SHA_enum_	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^#define _SHA_enum_$/;"	d
_S_IFLNK	my_project/libgit2/src/util/posix.h	/^#define _S_IFLNK /;"	d
_UCP_H	my_project/libgit2/deps/pcre/ucp.h	/^#define _UCP_H$/;"	d
_W64	my_project/libgit2/include/git2/stdint.h	/^#     define _W64 /;"	d
_W64	my_project/libgit2/include/git2/stdint.h	/^#     define _W64$/;"	d
__AC_KHASH_H	my_project/libgit2/src/util/khash.h	/^#define __AC_KHASH_H$/;"	d
__CLAR_LIBGIT2_ALLOC__	my_project/libgit2/tests/clar/clar_libgit2_alloc.h	/^#define __CLAR_LIBGIT2_ALLOC__$/;"	d
__CLAR_LIBGIT2_TIMER__	my_project/libgit2/tests/clar/clar_libgit2_timer.h	/^#define __CLAR_LIBGIT2_TIMER__$/;"	d
__CLAR_LIBGIT2_TRACE__	my_project/libgit2/tests/clar/clar_libgit2_trace.h	/^#define __CLAR_LIBGIT2_TRACE__$/;"	d
__CLAR_LIBGIT2__	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define __CLAR_LIBGIT2__$/;"	d
__CLAR_TEST_ATTR_EXPECT__	my_project/libgit2/tests/libgit2/attr/attr_expect.h	/^#define __CLAR_TEST_ATTR_EXPECT__$/;"	d
__CLAR_TEST_H__	my_project/libgit2/tests/clar/clar.h	/^#define __CLAR_TEST_H__$/;"	d
__CUSTOM_URLMON_H	my_project/libgit2/deps/winhttp/urlmon.h	/^#define __CUSTOM_URLMON_H$/;"	d
__KHASH_IMPL	my_project/libgit2/src/util/khash.h	/^#define __KHASH_IMPL(/;"	d
__KHASH_PROTOTYPES	my_project/libgit2/src/util/khash.h	/^#define __KHASH_PROTOTYPES(/;"	d
__KHASH_TYPE	my_project/libgit2/src/libgit2/idxmap.c	/^__KHASH_TYPE(idx, const git_index_entry *, git_index_entry *)$/;"	f	file:
__KHASH_TYPE	my_project/libgit2/src/libgit2/offmap.c	/^__KHASH_TYPE(off, off64_t, void *)$/;"	f
__KHASH_TYPE	my_project/libgit2/src/libgit2/oidmap.c	/^__KHASH_TYPE(oid, const git_oid *, void *)$/;"	f
__KHASH_TYPE	my_project/libgit2/src/util/khash.h	/^#define __KHASH_TYPE(/;"	d
__KHASH_TYPE	my_project/libgit2/src/util/strmap.c	/^__KHASH_TYPE(str, const char *, void *)$/;"	f
__WINE_WINHTTP_H	my_project/libgit2/deps/winhttp/winhttp.h	/^#define __WINE_WINHTTP_H$/;"	d
__ac_HASH_UPPER	my_project/libgit2/src/util/khash.h	/^static const double __ac_HASH_UPPER = 0.77;$/;"	v	typeref:typename:const double
__ac_Wang_hash	my_project/libgit2/src/util/khash.h	/^static kh_inline khint_t __ac_Wang_hash(khint_t key)$/;"	f	typeref:typename:kh_inline khint_t
__ac_X31_hash_string	my_project/libgit2/src/util/khash.h	/^static kh_inline khint_t __ac_X31_hash_string(const char *s)$/;"	f	typeref:typename:kh_inline khint_t
__ac_fsize	my_project/libgit2/src/util/khash.h	/^#define __ac_fsize(/;"	d
__ac_isdel	my_project/libgit2/src/util/khash.h	/^#define __ac_isdel(/;"	d
__ac_iseither	my_project/libgit2/src/util/khash.h	/^#define __ac_iseither(/;"	d
__ac_isempty	my_project/libgit2/src/util/khash.h	/^#define __ac_isempty(/;"	d
__ac_set_isboth_false	my_project/libgit2/src/util/khash.h	/^#define __ac_set_isboth_false(/;"	d
__ac_set_isdel_false	my_project/libgit2/src/util/khash.h	/^#define __ac_set_isdel_false(/;"	d
__ac_set_isdel_true	my_project/libgit2/src/util/khash.h	/^#define __ac_set_isdel_true(/;"	d
__ac_set_isempty_false	my_project/libgit2/src/util/khash.h	/^#define __ac_set_isempty_false(/;"	d
__anon0322bc7d0103	my_project/libgit2/include/git2/stash.h	/^typedef enum {$/;"	g
__anon0322bc7d0203	my_project/libgit2/include/git2/stash.h	/^typedef enum {$/;"	g
__anon0322bc7d0303	my_project/libgit2/include/git2/stash.h	/^typedef enum {$/;"	g
__anon036441b00103	my_project/libgit2/examples/cat-file.c	/^typedef enum {$/;"	g	file:
__anon03e70bb10103	my_project/libgit2/src/libgit2/transports/httpparser.h	/^typedef enum {$/;"	g
__anon03e70bb10203	my_project/libgit2/src/libgit2/transports/httpparser.h	/^typedef enum {$/;"	g
__anon03e70bb10308	my_project/libgit2/src/libgit2/transports/httpparser.h	/^typedef struct {$/;"	s
__anon03e70bb10403	my_project/libgit2/src/libgit2/transports/httpparser.h	/^typedef enum {$/;"	g
__anon03e70bb10503	my_project/libgit2/src/libgit2/transports/httpparser.h	/^typedef enum {$/;"	g
__anon05a78b950108	my_project/libgit2/src/libgit2/config_snapshot.c	/^typedef struct {$/;"	s	file:
__anon0731209b0108	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^typedef struct {$/;"	s	file:
__anon07cf78db0103	my_project/libgit2/include/git2/describe.h	/^typedef enum {$/;"	g
__anon07cf78db0208	my_project/libgit2/include/git2/describe.h	/^typedef struct {$/;"	s
__anon088cf8e70108	my_project/libgit2/src/util/win32/dir.h	/^typedef struct {$/;"	s
__anon095219370103	my_project/libgit2/include/git2/errors.h	/^typedef enum {$/;"	g
__anon095219370208	my_project/libgit2/include/git2/errors.h	/^typedef struct {$/;"	s
__anon095219370303	my_project/libgit2/include/git2/errors.h	/^typedef enum {$/;"	g
__anon09d552690108	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^typedef struct {$/;"	s
__anon0a0089cf0108	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^typedef struct {$/;"	s	file:
__anon0b5f5e9e0108	my_project/libgit2/tests/libgit2/submodule/status.c	/^typedef struct {$/;"	s	file:
__anon0b61ebe80108	my_project/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anon0b61ebe80208	my_project/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anon0b61ebe80308	my_project/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anon0b61ebe80408	my_project/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anon0b61ebe80508	my_project/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anon0b61ebe80608	my_project/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anon0b61ebe80708	my_project/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anon0b61ebe80808	my_project/libgit2/deps/winhttp/winhttp.h	/^{$/;"	s
__anon0b76eead0103	my_project/libgit2/deps/zlib/deflate.c	/^typedef enum {$/;"	g	file:
__anon0b76eeb2010a	my_project/libgit2/deps/zlib/deflate.h	/^    union {$/;"	u	struct:ct_data_s
__anon0b76eeb2020a	my_project/libgit2/deps/zlib/deflate.h	/^    union {$/;"	u	struct:ct_data_s
__anon0d2887b50108	my_project/libgit2/src/libgit2/diff_print.c	/^typedef struct {$/;"	s	file:
__anon0d8616ff0103	my_project/libgit2/deps/pcre/pcre_exec.c	/^enum { RM1=1, RM2,  RM3,  RM4,  RM5,  RM6,  RM7,  RM8,  RM9,  RM10,$/;"	g	file:
__anon0df92d8f0103	my_project/libgit2/src/libgit2/attr_file.h	/^typedef enum {$/;"	g
__anon0df92d8f0208	my_project/libgit2/src/libgit2/attr_file.h	/^typedef struct {$/;"	s
__anon0df92d8f0308	my_project/libgit2/src/libgit2/attr_file.h	/^typedef struct {$/;"	s
__anon0df92d8f0408	my_project/libgit2/src/libgit2/attr_file.h	/^typedef struct {$/;"	s
__anon0df92d8f0508	my_project/libgit2/src/libgit2/attr_file.h	/^typedef struct {$/;"	s
__anon0df92d8f0608	my_project/libgit2/src/libgit2/attr_file.h	/^typedef struct {$/;"	s
__anon0df92d8f0708	my_project/libgit2/src/libgit2/attr_file.h	/^typedef struct {$/;"	s
__anon0df92d8f080a	my_project/libgit2/src/libgit2/attr_file.h	/^	union {$/;"	u	struct:__anon0df92d8f0708
__anon0df92d8f0908	my_project/libgit2/src/libgit2/attr_file.h	/^typedef struct {$/;"	s
__anon0df92d8f0a08	my_project/libgit2/src/libgit2/attr_file.h	/^typedef struct {$/;"	s
__anon0df92d8f0b03	my_project/libgit2/src/libgit2/attr_file.h	/^typedef enum { GIT_DIR_FLAG_TRUE = 1, GIT_DIR_FLAG_FALSE = 0, GIT_DIR_FLAG_UNKNOWN = -1 } git_di/;"	g
__anon0ed367940108	my_project/libgit2/include/git2/buffer.h	/^typedef struct {$/;"	s
__anon0f244edf0103	my_project/libgit2/src/util/date.c	/^typedef enum {$/;"	g	file:
__anon0f244edf0208	my_project/libgit2/src/util/date.c	/^static const struct {$/;"	s	file:
__anon10587f2f0108	sdb.c	/^static struct {$/;"	s	file:
__anon10be08330108	my_project/libgit2/include/git2/sys/alloc.h	/^typedef struct {$/;"	s
__anon1374edca0108	my_project/libgit2/include/git2/merge.h	/^typedef struct {$/;"	s
__anon1374edca0203	my_project/libgit2/include/git2/merge.h	/^typedef enum {$/;"	g
__anon1374edca0303	my_project/libgit2/include/git2/merge.h	/^typedef enum {$/;"	g
__anon1374edca0403	my_project/libgit2/include/git2/merge.h	/^typedef enum {$/;"	g
__anon1374edca0508	my_project/libgit2/include/git2/merge.h	/^typedef struct {$/;"	s
__anon1374edca0608	my_project/libgit2/include/git2/merge.h	/^typedef struct {$/;"	s
__anon1374edca0708	my_project/libgit2/include/git2/merge.h	/^typedef struct {$/;"	s
__anon1374edca0803	my_project/libgit2/include/git2/merge.h	/^typedef enum {$/;"	g
__anon1374edca0903	my_project/libgit2/include/git2/merge.h	/^typedef enum {$/;"	g
__anon137acc0f0103	my_project/libgit2/examples/status.c	/^enum {$/;"	g	file:
__anon138915190103	my_project/libgit2/src/util/vector.h	/^enum {$/;"	g
__anon144be4e60103	my_project/libgit2/include/git2/remote.h	/^typedef enum {$/;"	g
__anon144be4e60203	my_project/libgit2/include/git2/remote.h	/^typedef enum {$/;"	g
__anon144be4e60303	my_project/libgit2/include/git2/remote.h	/^typedef enum {$/;"	g
__anon144be4e60408	my_project/libgit2/include/git2/remote.h	/^typedef struct {$/;"	s
__anon144be4e60503	my_project/libgit2/include/git2/remote.h	/^typedef enum {$/;"	g
__anon144be4e60603	my_project/libgit2/include/git2/remote.h	/^typedef enum {$/;"	g
__anon144be4e60703	my_project/libgit2/include/git2/remote.h	/^typedef enum {$/;"	g
__anon144be4e60808	my_project/libgit2/include/git2/remote.h	/^typedef struct {$/;"	s
__anon144be4e60908	my_project/libgit2/include/git2/remote.h	/^typedef struct {$/;"	s
__anon144be4e60a08	my_project/libgit2/include/git2/remote.h	/^typedef struct {$/;"	s
__anon150e507c0108	my_project/libgit2/tests/libgit2/notes/notes.c	/^static struct {$/;"	s	file:
__anon15d96e120108	my_project/libgit2/tests/clar/clar.c	/^static struct {$/;"	s	file:
__anon187871ca0108	my_project/libgit2/src/util/hash.h	/^typedef struct {$/;"	s
__anon187871ca0203	my_project/libgit2/src/util/hash.h	/^typedef enum {$/;"	g
__anon187871ca030a	my_project/libgit2/src/util/hash.h	/^	union {$/;"	u	struct:git_hash_ctx
__anon188a123c0103	my_project/libgit2/include/git2/proxy.h	/^typedef enum {$/;"	g
__anon188a123c0208	my_project/libgit2/include/git2/proxy.h	/^typedef struct {$/;"	s
__anon19e2cf7c0108	my_project/libgit2/src/libgit2/grafts.h	/^typedef struct {$/;"	s
__anon1e6212950108	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.h	/^typedef struct {$/;"	s
__anon1e6212950208	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.h	/^typedef struct {$/;"	s
__anon21d037cb0103	my_project/libgit2/include/git2/clone.h	/^typedef enum {$/;"	g
__anon21e0f34b0108	my_project/libgit2/src/util/sortedcache.h	/^typedef struct {$/;"	s
__anon241c174e0108	my_project/libgit2/include/git2/cherrypick.h	/^typedef struct {$/;"	s
__anon258239f00108	my_project/libgit2/src/libgit2/diff_tform.c	/^typedef struct {$/;"	s	file:
__anon258239f00208	my_project/libgit2/src/libgit2/diff_tform.c	/^typedef struct {$/;"	s	file:
__anon2599d8ed0108	my_project/libgit2/tests/libgit2/core/oidmap.c	/^static struct {$/;"	s	file:
__anon2762a15e0103	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^typedef enum {$/;"	g	file:
__anon2762a15e0203	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^typedef enum {$/;"	g	file:
__anon2762a15e0303	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^typedef enum {$/;"	g	file:
__anon289484920108	my_project/libgit2/include/git2/revert.h	/^typedef struct {$/;"	s
__anon2bf18d4b0108	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^{$/;"	s	file:
__anon2bf18d4b0208	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^typedef struct {$/;"	s	file:
__anon2c1ced600108	my_project/libgit2/src/util/pool.h	/^typedef struct {$/;"	s
__anon2c1ced600208	my_project/libgit2/src/util/pool.h	/^typedef struct {$/;"	s
__anon2d3685bf0108	my_project/libgit2/include/git2/message.h	/^typedef struct {$/;"	s
__anon2d3685bf0208	my_project/libgit2/include/git2/message.h	/^typedef struct {$/;"	s
__anon2f88b95a0103	my_project/libgit2/src/libgit2/iterator.c	/^typedef enum {$/;"	g	file:
__anon2f88b95a0208	my_project/libgit2/src/libgit2/iterator.c	/^typedef struct {$/;"	s	file:
__anon2f88b95a0308	my_project/libgit2/src/libgit2/iterator.c	/^typedef struct {$/;"	s	file:
__anon2f88b95a0408	my_project/libgit2/src/libgit2/iterator.c	/^typedef struct {$/;"	s	file:
__anon2f88b95a0508	my_project/libgit2/src/libgit2/iterator.c	/^typedef struct {$/;"	s	file:
__anon2f88b95a0608	my_project/libgit2/src/libgit2/iterator.c	/^typedef struct {$/;"	s	file:
__anon2f88b95a0708	my_project/libgit2/src/libgit2/iterator.c	/^typedef struct {$/;"	s	file:
__anon2f88b95a0808	my_project/libgit2/src/libgit2/iterator.c	/^typedef struct {$/;"	s	file:
__anon2f88b95a0908	my_project/libgit2/src/libgit2/iterator.c	/^typedef struct {$/;"	s	file:
__anon2f88b95f0103	my_project/libgit2/src/libgit2/iterator.h	/^typedef enum {$/;"	g
__anon2f88b95f0203	my_project/libgit2/src/libgit2/iterator.h	/^typedef enum {$/;"	g
__anon2f88b95f0303	my_project/libgit2/src/libgit2/iterator.h	/^typedef enum {$/;"	g
__anon2f88b95f0408	my_project/libgit2/src/libgit2/iterator.h	/^typedef struct {$/;"	s
__anon2f88b95f0508	my_project/libgit2/src/libgit2/iterator.h	/^typedef struct {$/;"	s
__anon2fc93926010a	my_project/libgit2/src/util/rand.c	/^typedef union {$/;"	u	file:
__anon307989470108	my_project/libgit2/src/util/hash/win32.c	/^typedef struct {$/;"	s	file:
__anon30798947020a	my_project/libgit2/src/util/hash/win32.c	/^	union {$/;"	u	struct:__anon307989470108	file:
__anon3079894c0103	my_project/libgit2/src/util/hash/win32.h	/^typedef enum {$/;"	g
__anon3079894c0208	my_project/libgit2/src/util/hash/win32.h	/^typedef struct {$/;"	s
__anon3079894c030a	my_project/libgit2/src/util/hash/win32.h	/^	union {$/;"	u	struct:__anon3079894c0208
__anon3125c0850108	my_project/libgit2/src/libgit2/odb.c	/^{$/;"	s	file:
__anon3125c0850208	my_project/libgit2/src/libgit2/odb.c	/^typedef struct {$/;"	s	file:
__anon3125c08a0108	my_project/libgit2/src/libgit2/odb.h	/^typedef struct {$/;"	s
__anon3125c08a0203	my_project/libgit2/src/libgit2/odb.h	/^typedef enum {$/;"	g
__anon312886ec010a	my_project/libgit2/src/libgit2/oid.c	/^typedef union {$/;"	u	file:
__anon317eab2c0108	my_project/libgit2/src/libgit2/tag.c	/^typedef struct {$/;"	s	file:
__anon317eab2c0208	my_project/libgit2/src/libgit2/tag.c	/^typedef struct {$/;"	s	file:
__anon325f306b0103	my_project/libgit2/include/git2/deprecated.h	/^typedef enum {$/;"	g
__anon325f306b0208	my_project/libgit2/include/git2/deprecated.h	/^typedef struct {$/;"	s
__anon331c2ce00103	my_project/libgit2/include/git2/filter.h	/^typedef enum {$/;"	g
__anon331c2ce00203	my_project/libgit2/include/git2/filter.h	/^typedef enum {$/;"	g
__anon331c2ce00308	my_project/libgit2/include/git2/filter.h	/^typedef struct {$/;"	s
__anon341047050108	my_project/libgit2/src/libgit2/config_file.c	/^typedef struct {$/;"	s	file:
__anon341047050208	my_project/libgit2/src/libgit2/config_file.c	/^typedef struct {$/;"	s	file:
__anon341047050308	my_project/libgit2/src/libgit2/config_file.c	/^static const struct {$/;"	s	file:
__anon345171c40103	my_project/libgit2/src/cli/cmd_config.c	/^typedef enum {$/;"	g	file:
__anon349ebb670108	my_project/libgit2/tests/libgit2/worktree/worktree_helpers.h	/^typedef struct {$/;"	s
__anon34b4ac340108	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^typedef struct {$/;"	s	file:
__anon3554db3d0108	my_project/libgit2/deps/zlib/inftrees.h	/^typedef struct {$/;"	s
__anon3554db3d0203	my_project/libgit2/deps/zlib/inftrees.h	/^typedef enum {$/;"	g
__anon35c6e5c60103	my_project/libgit2/src/libgit2/checkout.c	/^enum {$/;"	g	file:
__anon35c6e5c60208	my_project/libgit2/src/libgit2/checkout.c	/^typedef struct {$/;"	s	file:
__anon35c6e5c60308	my_project/libgit2/src/libgit2/checkout.c	/^typedef struct {$/;"	s	file:
__anon35c990e40108	my_project/libgit2/src/libgit2/attrcache.h	/^typedef struct {$/;"	s
__anon361876470108	my_project/libgit2/src/util/staticstr.h	/^typedef struct {$/;"	s
__anon362d01ac0108	my_project/libgit2/src/libgit2/streams/socket.h	/^typedef struct {$/;"	s
__anon36621a0b0108	my_project/libgit2/src/libgit2/attr.c	/^typedef struct {$/;"	s	file:
__anon36621a0b0208	my_project/libgit2/src/libgit2/attr.c	/^typedef struct {$/;"	s	file:
__anon3803f1ab0103	my_project/libgit2/src/libgit2/refdb_fs.c	/^enum {$/;"	g	file:
__anon3803f1ab0203	my_project/libgit2/src/libgit2/refdb_fs.c	/^enum {$/;"	g	file:
__anon3803f1ab0308	my_project/libgit2/src/libgit2/refdb_fs.c	/^typedef struct {$/;"	s	file:
__anon381de8bf0108	my_project/libgit2/src/util/util.c	/^typedef struct {$/;"	s	file:
__anon381de8c40108	my_project/libgit2/src/util/util.h	/^typedef struct {$/;"	s
__anon38237caf0108	my_project/libgit2/src/libgit2/blob.c	/^typedef struct {$/;"	s	file:
__anon38237cb4010a	my_project/libgit2/src/libgit2/blob.h	/^	union {$/;"	u	struct:git_blob
__anon38237cb40208	my_project/libgit2/src/libgit2/blob.h	/^		struct {$/;"	s	union:git_blob::__anon38237cb4010a
__anon3860199b0103	my_project/libgit2/src/libgit2/annotated_commit.h	/^typedef enum {$/;"	g
__anon393b45750108	my_project/libgit2/tests/libgit2/object/cache.c	/^static struct {$/;"	s	file:
__anon39d5c3ee0108	my_project/libgit2/tests/libgit2/commit/parse.c	/^typedef struct {$/;"	s	file:
__anon39d5c3ee0208	my_project/libgit2/tests/libgit2/commit/parse.c	/^typedef struct {$/;"	s	file:
__anon39d5c3ee0308	my_project/libgit2/tests/libgit2/commit/parse.c	/^typedef struct {$/;"	s	file:
__anon3a3bd7540108	my_project/libgit2/include/git2/sys/stream.h	/^typedef struct {$/;"	s
__anon3a3bd7540203	my_project/libgit2/include/git2/sys/stream.h	/^typedef enum {$/;"	g
__anon3ae3a4370103	my_project/libgit2/src/libgit2/crlf.c	/^typedef enum {$/;"	g	file:
__anon3c78bdc50108	my_project/libgit2/src/util/process.h	/^typedef struct {$/;"	s
__anon3c78bdc50203	my_project/libgit2/src/util/process.h	/^typedef enum {$/;"	g
__anon3c78bdc50308	my_project/libgit2/src/util/process.h	/^typedef struct {$/;"	s
__anon3c92a60e0103	my_project/libgit2/src/libgit2/diff.h	/^typedef enum {$/;"	g
__anon3d590bbe0108	my_project/libgit2/src/libgit2/transports/httpclient.c	/^typedef struct {$/;"	s	file:
__anon3d590bbe0203	my_project/libgit2/src/libgit2/transports/httpclient.c	/^typedef enum {$/;"	g	file:
__anon3d590bbe0303	my_project/libgit2/src/libgit2/transports/httpclient.c	/^typedef enum {$/;"	g	file:
__anon3d590bbe0403	my_project/libgit2/src/libgit2/transports/httpclient.c	/^typedef enum {$/;"	g	file:
__anon3d590bbe0503	my_project/libgit2/src/libgit2/transports/httpclient.c	/^typedef enum {$/;"	g	file:
__anon3d590bbe0608	my_project/libgit2/src/libgit2/transports/httpclient.c	/^typedef struct {$/;"	s	file:
__anon3d590bc30103	my_project/libgit2/src/libgit2/transports/httpclient.h	/^typedef enum {$/;"	g
__anon3d590bc30208	my_project/libgit2/src/libgit2/transports/httpclient.h	/^typedef struct {$/;"	s
__anon3d590bc30308	my_project/libgit2/src/libgit2/transports/httpclient.h	/^typedef struct {$/;"	s
__anon3d590bc30408	my_project/libgit2/src/libgit2/transports/httpclient.h	/^typedef struct {$/;"	s
__anon3e0cd1e30108	my_project/libgit2/include/git2/commit.h	/^typedef struct {$/;"	s
__anon3e1002a30103	my_project/libgit2/include/git2/common.h	/^typedef enum {$/;"	g
__anon3e1002a30203	my_project/libgit2/include/git2/common.h	/^typedef enum {$/;"	g
__anon3fe317b00103	my_project/libgit2/include/git2/config.h	/^typedef enum {$/;"	g
__anon3fe317b00203	my_project/libgit2/include/git2/config.h	/^typedef enum {$/;"	g
__anon3fe317b00308	my_project/libgit2/include/git2/config.h	/^typedef struct {$/;"	s
__anon4118c2d60103	my_project/libgit2/src/libgit2/transports/auth.h	/^typedef enum {$/;"	g
__anon4118c2d60208	my_project/libgit2/src/libgit2/transports/auth.h	/^typedef struct {$/;"	s
__anon411fc6730103	my_project/libgit2/deps/pcre/pcreposix.h	/^enum {$/;"	g
__anon411fc6730208	my_project/libgit2/deps/pcre/pcreposix.h	/^typedef struct {$/;"	s
__anon411fc6730308	my_project/libgit2/deps/pcre/pcreposix.h	/^typedef struct {$/;"	s
__anon413eee660103	my_project/libgit2/deps/ntlmclient/unicode_iconv.c	/^typedef enum {$/;"	g	file:
__anon421351410108	my_project/libgit2/src/libgit2/config_list.c	/^typedef struct {$/;"	s	file:
__anon421351460108	my_project/libgit2/src/libgit2/config_list.h	/^typedef struct {$/;"	s
__anon43da2a990108	my_project/libgit2/src/util/thread.c	/^typedef struct {$/;"	s	file:
__anon43da2a9e0108	my_project/libgit2/src/util/thread.h	/^typedef struct {$/;"	s
__anon43da2a9e0208	my_project/libgit2/src/util/thread.h	/^typedef struct {$/;"	s
__anon453495b00108	my_project/libgit2/src/libgit2/repository.c	/^static const struct {$/;"	s	file:
__anon453495b00208	my_project/libgit2/src/libgit2/repository.c	/^typedef struct {$/;"	s	file:
__anon453495b50103	my_project/libgit2/src/libgit2/repository.h	/^typedef enum {$/;"	g
__anon453495b50203	my_project/libgit2/src/libgit2/repository.h	/^typedef enum {$/;"	g
__anon453495b50303	my_project/libgit2/src/libgit2/repository.h	/^enum {$/;"	g
__anon45ee97580108	my_project/libgit2/src/util/futils.c	/^typedef struct {$/;"	s	file:
__anon45ee97580208	my_project/libgit2/src/util/futils.c	/^typedef struct {$/;"	s	file:
__anon45ee975d0103	my_project/libgit2/src/util/futils.h	/^typedef enum {$/;"	g
__anon45ee975d0203	my_project/libgit2/src/util/futils.h	/^typedef enum {$/;"	g
__anon45ee975d0303	my_project/libgit2/src/util/futils.h	/^typedef enum {$/;"	g
__anon45ee975d0408	my_project/libgit2/src/util/futils.h	/^typedef struct {$/;"	s
__anon490e2c6b0108	my_project/libgit2/tests/libgit2/object/tree/write.c	/^	struct {$/;"	s	function:test_object_tree_write__sorted_subtrees	file:
__anon490e2c6b0208	my_project/libgit2/tests/libgit2/object/tree/write.c	/^static struct {$/;"	s	file:
__anon4b69d5290103	my_project/libgit2/include/git2/trace.h	/^typedef enum {$/;"	g
__anon4bd17169010a	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  union {$/;"	u	struct:bracket_backtrack	file:
__anon4bd17169020a	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  union {$/;"	u	struct:char_iterator_backtrack	file:
__anon4bd171690308	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    struct {$/;"	s	union:char_iterator_backtrack::__anon4bd17169020a	file:
__anon4bd17169040a	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  union {$/;"	u	struct:compare_context	file:
__anon4bd17169050a	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  union {$/;"	u	struct:compare_context	file:
__anon4bd171690603	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^enum {$/;"	g	function:copy_private_data	file:
__anon4bd17169070a	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^union {$/;"	u	function:jit_machine_stack_exec	file:
__anon4bd17169080a	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^union {$/;"	u	function:PRIV	file:
__anon4bd17169090a	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^union {$/;"	u	function:pcre_jit_exec	file:
__anon4cb943af0103	my_project/libgit2/include/git2/sys/hashsig.h	/^typedef enum {$/;"	g
__anon4de7e74e0103	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^enum {$/;"	g
__anon4de7e74e0203	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^enum {$/;"	g
__anon4ea96f9b0103	my_project/libgit2/src/util/pqueue.h	/^enum {$/;"	g
__anon4efa7c750108	my_project/libgit2/include/git2/sys/transport.h	/^typedef struct {$/;"	s
__anon4efa7c750203	my_project/libgit2/include/git2/sys/transport.h	/^typedef enum {$/;"	g
__anon515ae8bf0103	my_project/libgit2/src/libgit2/transports/http.c	/^typedef enum {$/;"	g	file:
__anon515ae8bf0208	my_project/libgit2/src/libgit2/transports/http.c	/^typedef struct {$/;"	s	file:
__anon515ae8bf0308	my_project/libgit2/src/libgit2/transports/http.c	/^typedef struct {$/;"	s	file:
__anon515ae8bf0408	my_project/libgit2/src/libgit2/transports/http.c	/^typedef struct {$/;"	s	file:
__anon515ae8bf0508	my_project/libgit2/src/libgit2/transports/http.c	/^typedef struct {$/;"	s	file:
__anon544d96590108	my_project/libgit2/src/libgit2/diff_xdiff.c	/^typedef struct {$/;"	s	file:
__anon544d965e0108	my_project/libgit2/src/libgit2/diff_xdiff.h	/^typedef struct {$/;"	s
__anon57d570630108	my_project/libgit2/src/libgit2/reader.c	/^typedef struct {$/;"	s	file:
__anon57d570630208	my_project/libgit2/src/libgit2/reader.c	/^typedef struct {$/;"	s	file:
__anon57d570630308	my_project/libgit2/src/libgit2/reader.c	/^typedef struct {$/;"	s	file:
__anon57fe39b40108	my_project/libgit2/src/libgit2/pack.h	/^typedef struct {$/;"	s
__anon58077f5d0108	my_project/libgit2/src/libgit2/path.c	/^typedef struct {$/;"	s	file:
__anon58077f5d0208	my_project/libgit2/src/libgit2/path.c	/^static const struct {$/;"	s	file:
__anon58da25b00108	my_project/libgit2/src/libgit2/parse.h	/^typedef struct {$/;"	s
__anon58f59d650108	my_project/libgit2/src/libgit2/patch.h	/^typedef struct {$/;"	s
__anon596d958c0103	my_project/libgit2/src/util/zstream.h	/^typedef enum {$/;"	g
__anon596d958c0208	my_project/libgit2/src/util/zstream.h	/^typedef struct {$/;"	s
__anon59fbc5820103	my_project/libgit2/src/libgit2/rebase.c	/^typedef enum {$/;"	g	file:
__anon5b50d9080103	my_project/libgit2/src/libgit2/index.c	/^enum {$/;"	g	file:
__anon5b50d90d0108	my_project/libgit2/src/libgit2/index.h	/^typedef struct {$/;"	s
__anon5b89200d0108	my_project/libgit2/tests/libgit2/checkout/checkout_helpers.h	/^typedef struct {$/;"	s
__anon5b8f20a60108	my_project/libgit2/src/libgit2/repo_template.h	/^typedef struct {$/;"	s
__anon5ba854ad0103	my_project/libgit2/src/libgit2/transports/winhttp.c	/^typedef enum {$/;"	g	file:
__anon5ba854ad0208	my_project/libgit2/src/libgit2/transports/winhttp.c	/^typedef struct {$/;"	s	file:
__anon5ba854ad0308	my_project/libgit2/src/libgit2/transports/winhttp.c	/^typedef struct {$/;"	s	file:
__anon5ba854ad0408	my_project/libgit2/src/libgit2/transports/winhttp.c	/^typedef struct {$/;"	s	file:
__anon5cceb56f0103	my_project/libgit2/include/git2/types.h	/^typedef enum {$/;"	g
__anon5cceb56f0203	my_project/libgit2/include/git2/types.h	/^typedef enum {$/;"	g
__anon5cceb56f0303	my_project/libgit2/include/git2/types.h	/^typedef enum {$/;"	g
__anon5cceb56f0403	my_project/libgit2/include/git2/types.h	/^typedef enum {$/;"	g
__anon5cceb56f0503	my_project/libgit2/include/git2/types.h	/^typedef enum {$/;"	g
__anon5cceb56f0603	my_project/libgit2/include/git2/types.h	/^typedef enum {$/;"	g
__anon5cceb56f0703	my_project/libgit2/include/git2/types.h	/^typedef enum {$/;"	g
__anon5ce333660108	my_project/libgit2/src/libgit2/odb_loose.c	/^typedef struct { \/* object header data *\/$/;"	s	file:
__anon5ce333660208	my_project/libgit2/src/libgit2/odb_loose.c	/^typedef struct {$/;"	s	file:
__anon5ce333660308	my_project/libgit2/src/libgit2/odb_loose.c	/^typedef struct {$/;"	s	file:
__anon5ce333660408	my_project/libgit2/src/libgit2/odb_loose.c	/^typedef struct {$/;"	s	file:
__anon5cf2b4200103	my_project/libgit2/src/libgit2/refs.c	/^enum {$/;"	g	file:
__anon5cf2b4200208	my_project/libgit2/src/libgit2/refs.c	/^typedef struct {$/;"	s	file:
__anon5cf2b425010a	my_project/libgit2/src/libgit2/refs.h	/^	union {$/;"	u	struct:git_reference
__anon5e7ea0850108	my_project/libgit2/tests/libgit2/odb/sorting.c	/^typedef struct {$/;"	s	file:
__anon62538c6d0103	my_project/libgit2/include/git2/worktree.h	/^typedef enum {$/;"	g
__anon62877c000108	my_project/libgit2/src/libgit2/tree.c	/^typedef struct {$/;"	s	file:
__anon63eaeaf60103	my_project/libgit2/include/git2/revwalk.h	/^typedef enum {$/;"	g
__anon65c3b8100103	my_project/libgit2/include/git2/checkout.h	/^typedef enum {$/;"	g
__anon65c3b8100203	my_project/libgit2/include/git2/checkout.h	/^typedef enum {$/;"	g
__anon65c3b8100308	my_project/libgit2/include/git2/checkout.h	/^typedef struct {$/;"	s
__anon6744c2020103	my_project/libgit2/include/git2/sys/commit_graph.h	/^typedef enum {$/;"	g
__anon6744c2020208	my_project/libgit2/include/git2/sys/commit_graph.h	/^typedef struct {$/;"	s
__anon6794a3fe0103	my_project/libgit2/include/git2/status.h	/^typedef enum {$/;"	g
__anon6794a3fe0203	my_project/libgit2/include/git2/status.h	/^typedef enum {$/;"	g
__anon6794a3fe0303	my_project/libgit2/include/git2/status.h	/^typedef enum {$/;"	g
__anon6794a3fe0408	my_project/libgit2/include/git2/status.h	/^typedef struct {$/;"	s
__anon6794a3fe0508	my_project/libgit2/include/git2/status.h	/^typedef struct {$/;"	s
__anon67af0d3a0103	my_project/libgit2/include/git2/repository.h	/^typedef enum {$/;"	g
__anon67af0d3a0203	my_project/libgit2/include/git2/repository.h	/^typedef enum {$/;"	g
__anon67af0d3a0303	my_project/libgit2/include/git2/repository.h	/^typedef enum {$/;"	g
__anon67af0d3a0408	my_project/libgit2/include/git2/repository.h	/^typedef struct {$/;"	s
__anon67af0d3a0503	my_project/libgit2/include/git2/repository.h	/^typedef enum {$/;"	g
__anon67af0d3a0603	my_project/libgit2/include/git2/repository.h	/^typedef enum {$/;"	g
__anon6acbdb710103	my_project/libgit2/src/util/regexp.h	/^typedef enum {$/;"	g
__anon6acbdb710208	my_project/libgit2/src/util/regexp.h	/^typedef struct {$/;"	s
__anon6b5cad8b0108	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef struct {$/;"	s
__anon6b5cad8b0208	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef struct {$/;"	s
__anon6b5cad8b030a	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    union {$/;"	u	struct:__anon6b5cad8b0208
__anon6b9c93610108	my_project/libgit2/src/util/unix/pthread.h	/^typedef struct {$/;"	s
__anon6d9003760108	my_project/libgit2/include/git2/odb_backend.h	/^typedef struct {$/;"	s
__anon6d9003760203	my_project/libgit2/include/git2/odb_backend.h	/^typedef enum {$/;"	g
__anon6d9003760308	my_project/libgit2/include/git2/odb_backend.h	/^typedef struct {$/;"	s
__anon6d9003760403	my_project/libgit2/include/git2/odb_backend.h	/^typedef enum {$/;"	g
__anon6e8afca00103	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^typedef enum {$/;"	g
__anon6e8afca00203	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^typedef enum {$/;"	g
__anon6f0f98290103	my_project/libgit2/src/libgit2/cache.h	/^enum {$/;"	g
__anon6f0f98290208	my_project/libgit2/src/libgit2/cache.h	/^typedef struct {$/;"	s
__anon6f0f98290308	my_project/libgit2/src/libgit2/cache.h	/^typedef struct {$/;"	s
__anon6ff743e90108	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^typedef struct {$/;"	s
__anon6ff743e90208	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^typedef struct {$/;"	s
__anon705203a00103	my_project/libgit2/src/libgit2/submodule.c	/^enum {$/;"	g	file:
__anon705203a00203	my_project/libgit2/src/libgit2/submodule.c	/^enum {$/;"	g	file:
__anon705203a00308	my_project/libgit2/src/libgit2/submodule.c	/^typedef struct {$/;"	s	file:
__anon705203a00408	my_project/libgit2/src/libgit2/submodule.c	/^typedef struct {$/;"	s	file:
__anon705203a50103	my_project/libgit2/src/libgit2/submodule.h	/^enum {$/;"	g
__anon71a311330103	my_project/libgit2/src/libgit2/sysdir.h	/^typedef enum {$/;"	g
__anon7435b5230108	my_project/libgit2/tests/util/strmap.c	/^	struct {$/;"	s	function:test_strmap__iteration	file:
__anon766d71c40108	my_project/libgit2/src/libgit2/config_mem.c	/^typedef struct {$/;"	s	file:
__anon766d71c40208	my_project/libgit2/src/libgit2/config_mem.c	/^typedef struct {$/;"	s	file:
__anon790e91d50103	my_project/libgit2/include/git2/attr.h	/^typedef enum {$/;"	g
__anon790e91d50208	my_project/libgit2/include/git2/attr.h	/^typedef struct {$/;"	s
__anon79a1dca80108	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^typedef struct {$/;"	s	file:
__anon7acff4790103	my_project/libgit2/include/git2/blob.h	/^typedef enum {$/;"	g
__anon7acff4790208	my_project/libgit2/include/git2/blob.h	/^typedef struct {$/;"	s
__anon7b397d600103	my_project/libgit2/src/libgit2/merge.c	/^typedef enum {$/;"	g	file:
__anon7b397d600208	my_project/libgit2/src/libgit2/merge.c	/^typedef struct {$/;"	s	file:
__anon7b397d650103	my_project/libgit2/src/libgit2/merge.h	/^typedef enum {$/;"	g
__anon7b397d650208	my_project/libgit2/src/libgit2/merge.h	/^typedef struct {$/;"	s
__anon7b397d650308	my_project/libgit2/src/libgit2/merge.h	/^typedef struct {$/;"	s
__anon7ca863480103	my_project/libgit2/include/git2/cert.h	/^typedef enum {$/;"	g
__anon7ca863480203	my_project/libgit2/include/git2/cert.h	/^typedef enum {$/;"	g
__anon7ca863480308	my_project/libgit2/include/git2/cert.h	/^typedef struct {$/;"	s
__anon7ca863480408	my_project/libgit2/include/git2/cert.h	/^typedef struct {$/;"	s
__anon7d20e9de0108	my_project/libgit2/src/libgit2/branch.c	/^typedef struct {$/;"	s	file:
__anon7f3f1dd30103	my_project/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon7f3f1dd30203	my_project/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon7f3f1dd30303	my_project/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon7f3f1dd30408	my_project/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon7f3f1dd30508	my_project/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon7f3f1dd30608	my_project/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon7f3f1dd30703	my_project/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon7f3f1dd30808	my_project/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon7f3f1dd30908	my_project/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon7f3f1dd30a08	my_project/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon7f3f1dd30b03	my_project/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon7f3f1dd30c08	my_project/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon7f3f1dd30d03	my_project/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon7f3f1dd30e08	my_project/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon7f3f1dd30f08	my_project/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon7f3f1dd31003	my_project/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon7f3f1dd31108	my_project/libgit2/include/git2/diff.h	/^typedef struct {$/;"	s
__anon7f3f1dd31203	my_project/libgit2/include/git2/diff.h	/^typedef enum {$/;"	g
__anon7fc745b70108	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^typedef struct {$/;"	s	file:
__anon84f933a40108	my_project/libgit2/src/util/map.h	/^typedef struct { \/* memory mapped buffer	*\/$/;"	s
__anon850d8ea80108	my_project/libgit2/src/util/net.c	/^typedef struct {$/;"	s	file:
__anon850d8ea80203	my_project/libgit2/src/util/net.c	/^	enum {$/;"	g	function:url_parse_authority	file:
__anon850d8ea80303	my_project/libgit2/src/util/net.c	/^	enum { PATH, QUERY, FRAGMENT } state = PATH;$/;"	g	function:url_parse_path	file:
__anon850d8ea80403	my_project/libgit2/src/util/net.c	/^	enum {$/;"	g	function:git_net_url_parse	file:
__anon850d8ea80503	my_project/libgit2/src/util/net.c	/^	enum {$/;"	g	function:git_net_url_parse_scp	file:
__anon85703a5f0103	my_project/libgit2/src/util/str.h	/^typedef enum {$/;"	g
__anon85703a5f0208	my_project/libgit2/src/util/str.h	/^typedef struct {$/;"	s
__anon8885faf70108	my_project/libgit2/src/libgit2/hashsig.c	/^typedef struct {$/;"	s	file:
__anon8885faf70208	my_project/libgit2/src/libgit2/hashsig.c	/^typedef struct {$/;"	s	file:
__anon898973fe0108	my_project/libgit2/src/libgit2/streams/stransport.c	/^typedef struct {$/;"	s	file:
__anon8b99d91e0103	my_project/libgit2/src/util/wildmatch.c	/^enum {$/;"	g	file:
__anon8dceed7e0103	my_project/libgit2/deps/pcre/ucp.h	/^enum {$/;"	g
__anon8dceed7e0203	my_project/libgit2/deps/pcre/ucp.h	/^enum {$/;"	g
__anon8dceed7e0303	my_project/libgit2/deps/pcre/ucp.h	/^enum {$/;"	g
__anon8dceed7e0403	my_project/libgit2/deps/pcre/ucp.h	/^enum {$/;"	g
__anon9141b5a00103	my_project/libgit2/include/git2/apply.h	/^typedef enum {$/;"	g
__anon9141b5a00208	my_project/libgit2/include/git2/apply.h	/^typedef struct {$/;"	s
__anon9141b5a00303	my_project/libgit2/include/git2/apply.h	/^typedef enum {$/;"	g
__anon925c461a010a	my_project/libgit2/src/util/win32/reparse.h	/^	union {$/;"	u	struct:_GIT_REPARSE_DATA_BUFFER
__anon925c461a0208	my_project/libgit2/src/util/win32/reparse.h	/^		struct {$/;"	s	union:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a
__anon925c461a0308	my_project/libgit2/src/util/win32/reparse.h	/^		struct {$/;"	s	union:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a
__anon925c461a0408	my_project/libgit2/src/util/win32/reparse.h	/^		struct {$/;"	s	union:_GIT_REPARSE_DATA_BUFFER::__anon925c461a010a
__anon9372afd60108	my_project/libgit2/src/libgit2/filter.c	/^typedef struct {$/;"	s	file:
__anon9372afd60208	my_project/libgit2/src/libgit2/filter.c	/^typedef struct {$/;"	s	file:
__anon9372afdb0108	my_project/libgit2/src/libgit2/filter.h	/^typedef struct {$/;"	s
__anon93daa45f0108	my_project/libgit2/tests/util/vector.c	/^typedef struct {$/;"	s	file:
__anon94695d1d0103	my_project/libgit2/include/git2/reset.h	/^typedef enum {$/;"	g
__anon9562267c0103	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ESC_A = 1, ESC_G, ESC_K, ESC_B, ESC_b, ESC_D, ESC_d, ESC_S, ESC_s,$/;"	g
__anon9562267c0203	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum {$/;"	g
__anon9562267c0303	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { ERR0,  ERR1,  ERR2,  ERR3,  ERR4,  ERR5,  ERR6,  ERR7,  ERR8,  ERR9,$/;"	g
__anon9562267c0403	my_project/libgit2/deps/pcre/pcre_internal.h	/^enum { JIT_COMPILE, JIT_PARTIAL_SOFT_COMPILE, JIT_PARTIAL_HARD_COMPILE,$/;"	g
__anon9562267c0508	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct {$/;"	s
__anon9562267c0608	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct {$/;"	s
__anon97a0de250103	my_project/libgit2/src/cli/cmd_cat_file.c	/^typedef enum {$/;"	g	file:
__anon9aaab1790103	my_project/libgit2/include/git2/pack.h	/^typedef enum {$/;"	g
__anon9aac73a10108	my_project/libgit2/include/git2/sys/diff.h	/^typedef struct {$/;"	s
__anon9e6354d90108	my_project/libgit2/src/libgit2/commit.c	/^typedef struct {$/;"	s	file:
__anon9e6354d90208	my_project/libgit2/src/libgit2/commit.c	/^typedef struct {$/;"	s	file:
__anon9e6354d90308	my_project/libgit2/src/libgit2/commit.c	/^typedef struct {$/;"	s	file:
__anon9e6354de0108	my_project/libgit2/src/libgit2/commit.h	/^typedef struct {$/;"	s
__anon9e6354de0203	my_project/libgit2/src/libgit2/commit.h	/^typedef enum {$/;"	g
__anon9f9f2bea0103	my_project/libgit2/include/git2/refs.h	/^typedef enum {$/;"	g
__anon9fad28f40103	my_project/libgit2/src/libgit2/diff_driver.c	/^typedef enum {$/;"	g	file:
__anon9fad28f40208	my_project/libgit2/src/libgit2/diff_driver.c	/^typedef struct {$/;"	s	file:
__anon9fad28f40303	my_project/libgit2/src/libgit2/diff_driver.c	/^enum {$/;"	g	file:
__anon9fad28f90108	my_project/libgit2/src/libgit2/diff_driver.h	/^typedef struct {$/;"	s
__anon9fe91e8a0103	my_project/libgit2/include/git2/submodule.h	/^typedef enum {$/;"	g
__anon9ffa9aaa0108	my_project/libgit2/src/libgit2/transports/auth_ntlmclient.c	/^typedef struct {$/;"	s	file:
__anona0359fa00103	my_project/libgit2/deps/zlib/inflate.h	/^typedef enum {$/;"	g
__anona0399aa60108	my_project/libgit2/src/libgit2/config.c	/^typedef struct {$/;"	s	file:
__anona0399aa60208	my_project/libgit2/src/libgit2/config.c	/^typedef struct {$/;"	s	file:
__anona0399aa60308	my_project/libgit2/src/libgit2/config.c	/^typedef struct {$/;"	s	file:
__anona0399aa60403	my_project/libgit2/src/libgit2/config.c	/^enum {$/;"	g	file:
__anona0399aa60508	my_project/libgit2/src/libgit2/config.c	/^typedef struct {$/;"	s	file:
__anona3bc4f8a0108	my_project/libgit2/src/libgit2/transports/local.c	/^typedef struct {$/;"	s	file:
__anona3d43da10108	my_project/libgit2/examples/checkout.c	/^typedef struct {$/;"	s	file:
__anona533f3ca0103	my_project/libgit2/include/git2/tree.h	/^typedef enum {$/;"	g
__anona533f3ca0203	my_project/libgit2/include/git2/tree.h	/^typedef enum {$/;"	g
__anona533f3ca0308	my_project/libgit2/include/git2/tree.h	/^typedef struct {$/;"	s
__anona5ab66050108	my_project/libgit2/src/libgit2/config_parse.h	/^typedef struct {$/;"	s
__anona65a258d0103	my_project/libgit2/src/libgit2/pathspec.h	/^enum {$/;"	g
__anonaa3048640103	my_project/libgit2/examples/diff.c	/^enum {$/;"	g	file:
__anonaa3048640203	my_project/libgit2/examples/diff.c	/^enum {$/;"	g	file:
__anonae472b4d0108	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^struct {$/;"	s	file:
__anonafd1b44a0103	my_project/libgit2/src/libgit2/streams/schannel.c	/^typedef enum {$/;"	g	file:
__anonafd1b44a0208	my_project/libgit2/src/libgit2/streams/schannel.c	/^typedef struct {$/;"	s	file:
__anonb3a8d3310108	my_project/libgit2/tests/util/path/core.c	/^typedef struct {$/;"	s	file:
__anonb5f2ec150103	my_project/libgit2/src/cli/progress.h	/^typedef enum {$/;"	g
__anonb5f2ec150208	my_project/libgit2/src/cli/progress.h	/^typedef struct {$/;"	s
__anonb6214cf50103	my_project/libgit2/include/git2/sys/path.h	/^typedef enum {$/;"	g
__anonb6214cf50203	my_project/libgit2/include/git2/sys/path.h	/^typedef enum {$/;"	g
__anonb62820150103	my_project/libgit2/include/git2/credential.h	/^typedef enum {$/;"	g
__anonb80f06c20108	my_project/libgit2/src/libgit2/streams/openssl.c	/^typedef struct {$/;"	s	file:
__anonb9ceeb0b0103	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef enum {$/;"	g
__anonb9ceeb0b0208	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef struct {$/;"	s
__anonb9ceeb0b0308	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef struct {$/;"	s
__anonb9ceeb0b0408	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef struct {$/;"	s
__anonb9ceeb0b0508	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef struct {$/;"	s
__anonb9ceeb0b0608	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef struct {$/;"	s
__anonb9ceeb0b0708	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef struct {$/;"	s
__anonb9ceeb0b0808	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef struct {$/;"	s
__anonb9ceeb0b0908	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef struct {$/;"	s
__anonb9ceeb0b0a08	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef struct {$/;"	s
__anonb9ceeb0b0b08	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef struct {$/;"	s
__anonb9ceeb0b0c08	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef struct {$/;"	s
__anonb9ceeb0b0d08	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef struct {$/;"	s
__anonbb9a560a0108	my_project/libgit2/src/libgit2/patch_generate.c	/^typedef struct {$/;"	s	file:
__anonbb9a560f0103	my_project/libgit2/src/libgit2/patch_generate.h	/^enum {$/;"	g
__anonbbbb786b0108	my_project/libgit2/src/libgit2/merge_driver.c	/^typedef struct {$/;"	s	file:
__anonbd19e2c20103	my_project/libgit2/include/git2/email.h	/^typedef enum {$/;"	g
__anonbd19e2c20208	my_project/libgit2/include/git2/email.h	/^typedef struct {$/;"	s
__anonbd488f3e0108	my_project/libgit2/tests/clar/clar_libgit2.c	/^typedef struct {$/;"	s	file:
__anonbd488f430108	my_project/libgit2/tests/clar/clar_libgit2.h	/^typedef struct {$/;"	s
__anonbd76c9710108	my_project/libgit2/tests/util/sortedcache.c	/^typedef struct {$/;"	s	file:
__anonbebdb9760103	my_project/libgit2/src/libgit2/transaction.c	/^typedef enum {$/;"	g	file:
__anonbebdb9760208	my_project/libgit2/src/libgit2/transaction.c	/^typedef struct {$/;"	s	file:
__anonbebdb976030a	my_project/libgit2/src/libgit2/transaction.c	/^	union {$/;"	u	struct:__anonbebdb9760208	file:
__anonbfe592f00108	my_project/libgit2/examples/lg2.c	/^struct {$/;"	s	file:
__anonc065e6340103	my_project/libgit2/include/git2/sys/remote.h	/^typedef enum {$/;"	g
__anonc073ee270108	my_project/libgit2/examples/tag.c	/^typedef struct {$/;"	s	file:
__anonc130b1670108	my_project/libgit2/src/libgit2/object.c	/^typedef struct {$/;"	s	file:
__anonc260a6b90108	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^	struct {$/;"	s	function:git_win32_leakcheck_stack_format	file:
__anonc260a6b90208	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^typedef struct {$/;"	s	file:
__anonc260a6b90308	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^typedef struct {$/;"	s	file:
__anonc260a6be0108	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^typedef struct {$/;"	s
__anonc29a75590108	my_project/libgit2/src/libgit2/ignore.h	/^typedef struct {$/;"	s
__anonc29a75590203	my_project/libgit2/src/libgit2/ignore.h	/^enum {$/;"	g
__anonc5ba063c0103	my_project/libgit2/tests/libgit2/config/read.c	/^enum {$/;"	g	file:
__anonc67e94210103	my_project/libgit2/include/git2/net.h	/^typedef enum {$/;"	g
__anonc68fd3af0103	my_project/libgit2/include/git2/odb.h	/^typedef enum {$/;"	g
__anonc68fd3af0208	my_project/libgit2/include/git2/odb.h	/^typedef struct {$/;"	s
__anonc6929a160103	my_project/libgit2/include/git2/oid.h	/^typedef enum {$/;"	g
__anonc6e279620103	my_project/libgit2/include/git2/revparse.h	/^typedef enum {$/;"	g
__anonc6e279620208	my_project/libgit2/include/git2/revparse.h	/^typedef struct {$/;"	s
__anonc766ba4d0108	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^typedef struct {$/;"	s	file:
__anoncc3749c90108	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^typedef struct {$/;"	s	file:
__anoncf11cd510108	my_project/libgit2/src/libgit2/revwalk.h	/^typedef struct {$/;"	s
__anoncf5572f40108	my_project/libgit2/src/cli/cmd.h	/^typedef struct {$/;"	s
__anoncf67763b010a	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^    union {$/;"	u	struct:DES_ks
__anond03082330103	my_project/libgit2/src/cli/opt.h	/^typedef enum {$/;"	g
__anond03082330203	my_project/libgit2/src/cli/opt.h	/^typedef enum {$/;"	g
__anond03082330303	my_project/libgit2/src/cli/opt.h	/^typedef enum {$/;"	g
__anond03082330403	my_project/libgit2/src/cli/opt.h	/^typedef enum {$/;"	g
__anond08108c40108	my_project/libgit2/tests/libgit2/index/addall.c	/^typedef struct {$/;"	s	file:
__anond08cd1a00108	my_project/libgit2/src/util/win32/thread.h	/^typedef struct {$/;"	s
__anond08cd1a00208	my_project/libgit2/src/util/win32/thread.h	/^typedef struct { void *Ptr; } GIT_SRWLOCK;$/;"	s
__anond08cd1a00308	my_project/libgit2/src/util/win32/thread.h	/^typedef struct {$/;"	s
__anond08cd1a0040a	my_project/libgit2/src/util/win32/thread.h	/^	union {$/;"	u	struct:__anond08cd1a00308
__anond3d8179b0103	my_project/libgit2/include/git2/blame.h	/^typedef enum {$/;"	g
__anond656f7d20103	my_project/libgit2/include/git2/pathspec.h	/^typedef enum {$/;"	g
__anondc54b7e10103	my_project/libgit2/deps/ntlmclient/ntlm.h	/^typedef enum {$/;"	g
__anondc54b7e10208	my_project/libgit2/deps/ntlmclient/ntlm.h	/^typedef struct {$/;"	s
__anondc54b7e10308	my_project/libgit2/deps/ntlmclient/ntlm.h	/^typedef struct {$/;"	s
__anondc54b7e10408	my_project/libgit2/deps/ntlmclient/ntlm.h	/^typedef struct {$/;"	s
__anondc54b7e10503	my_project/libgit2/deps/ntlmclient/ntlm.h	/^typedef enum {$/;"	g
__anondc54b7e10603	my_project/libgit2/deps/ntlmclient/ntlm.h	/^typedef enum {$/;"	g
__anondc54b7e10703	my_project/libgit2/deps/ntlmclient/ntlm.h	/^typedef enum {$/;"	g
__anonddb10c3a0108	my_project/libgit2/src/libgit2/patch_parse.c	/^typedef struct {$/;"	s	file:
__anonddb10c3a0203	my_project/libgit2/src/libgit2/patch_parse.c	/^typedef enum {$/;"	g	file:
__anonddb10c3a0308	my_project/libgit2/src/libgit2/patch_parse.c	/^typedef struct {$/;"	s	file:
__anonddb10c3f0108	my_project/libgit2/src/libgit2/patch_parse.h	/^typedef struct {$/;"	s
__anone07cb6fd0108	my_project/libgit2/src/util/hash/openssl.h	/^typedef struct {$/;"	s
__anone07cb6fd0208	my_project/libgit2/src/util/hash/openssl.h	/^typedef struct {$/;"	s
__anone6262fa80108	my_project/libgit2/src/libgit2/diff_parse.h	/^typedef struct {$/;"	s
__anone6eef5b20108	my_project/libgit2/tests/libgit2/ignore/status.c	/^	struct {$/;"	s	function:test_ignore_status__0	file:
__anone78711f60108	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^	static struct {$/;"	s	function:test_iterator_workdir__builtin_ignores	file:
__anone9d3a2f30108	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^typedef struct {$/;"	s
__anone9d3a2f30208	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^typedef struct {$/;"	s
__anonea1c2cc10108	my_project/libgit2/deps/zlib/gzguts.h	/^typedef struct {$/;"	s
__anonea45684b0103	my_project/libgit2/src/util/fs_path.h	/^enum {$/;"	g
__anonea45684b0203	my_project/libgit2/src/util/fs_path.h	/^enum {$/;"	g
__anonea45684b0308	my_project/libgit2/src/util/fs_path.h	/^typedef struct {$/;"	s
__anonea45684b0403	my_project/libgit2/src/util/fs_path.h	/^typedef enum {$/;"	g
__anoneb1923e30108	my_project/libgit2/src/libgit2/transports/git.c	/^typedef struct {$/;"	s	file:
__anoneb1923e30208	my_project/libgit2/src/libgit2/transports/git.c	/^typedef struct {$/;"	s	file:
__anonebc6f3f30103	my_project/libgit2/deps/pcre/pcre_study.c	/^enum { SSB_FAIL, SSB_DONE, SSB_CONTINUE, SSB_UNKNOWN };$/;"	g	file:
__anonebfd18fe0108	my_project/libgit2/include/git2/sys/config.h	/^typedef struct {$/;"	s
__anonec09f7510108	my_project/libgit2/tests/libgit2/online/push_util.h	/^typedef struct {$/;"	s
__anonec09f7510208	my_project/libgit2/tests/libgit2/online/push_util.h	/^typedef struct {$/;"	s
__anonec09f7510308	my_project/libgit2/tests/libgit2/online/push_util.h	/^typedef struct {$/;"	s
__anonec09f7510408	my_project/libgit2/tests/libgit2/online/push_util.h	/^typedef struct {$/;"	s
__anonec53c3310108	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^typedef struct {$/;"	s	file:
__anonec53c3310208	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^typedef struct {$/;"	s	file:
__anoneca72adf010a	my_project/libgit2/deps/ntlmclient/util.c	/^	static union {$/;"	u	function:ntlm_htonll	file:
__anonf1be5fcd0108	my_project/libgit2/src/libgit2/userdiff.h	/^typedef struct {$/;"	s
__anonf38c49720108	my_project/libgit2/include/git2/index.h	/^typedef struct {$/;"	s
__anonf38c49720203	my_project/libgit2/include/git2/index.h	/^typedef enum {$/;"	g
__anonf38c49720303	my_project/libgit2/include/git2/index.h	/^typedef enum {$/;"	g
__anonf38c49720403	my_project/libgit2/include/git2/index.h	/^typedef enum {$/;"	g
__anonf38c49720503	my_project/libgit2/include/git2/index.h	/^typedef enum {$/;"	g
__anonf38c49720603	my_project/libgit2/include/git2/index.h	/^typedef enum {$/;"	g
__anonf54f66e30108	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^typedef struct {$/;"	s	file:
__anonf54f66e30208	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^typedef struct {$/;"	s	file:
__anonf83411370108	my_project/libgit2/src/libgit2/diff_stats.c	/^typedef struct {$/;"	s	file:
__anonf90645360108	my_project/libgit2/src/libgit2/apply.c	/^typedef struct {$/;"	s	file:
__anonf90645360208	my_project/libgit2/src/libgit2/apply.c	/^typedef struct {$/;"	s	file:
__anonf957b8130108	my_project/libgit2/src/util/hash/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	s
__anonf9a5428c0108	my_project/libgit2/include/git2/rebase.h	/^typedef struct {$/;"	s
__anonf9a5428c0203	my_project/libgit2/include/git2/rebase.h	/^typedef enum {$/;"	g
__anonf9a5428c0308	my_project/libgit2/include/git2/rebase.h	/^typedef struct {$/;"	s
__anonfa138ea30108	my_project/libgit2/src/util/bitvec.h	/^typedef struct {$/;"	s
__anonfa138ea3020a	my_project/libgit2/src/util/bitvec.h	/^	union {$/;"	u	struct:__anonfa138ea30108
__anonfaf9122d0108	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^typedef struct {$/;"	s	file:
__anonfdaa9e490108	my_project/libgit2/src/cli/common.h	/^typedef struct {$/;"	s
__anonff5a2cd30108	my_project/libgit2/src/libgit2/diff_generate.c	/^typedef struct {$/;"	s	file:
__anonff5a2cd30208	my_project/libgit2/src/libgit2/diff_generate.c	/^typedef struct {$/;"	s	file:
__anonff5a2cd80103	my_project/libgit2/src/libgit2/diff_generate.h	/^enum {$/;"	g
__anonff5a2cd80203	my_project/libgit2/src/libgit2/diff_generate.h	/^enum {$/;"	g
__anonffb6e84d0108	my_project/libgit2/src/libgit2/diff_file.h	/^typedef struct {$/;"	s
__anonffb6e84d0208	my_project/libgit2/src/libgit2/diff_file.h	/^typedef struct {$/;"	s
__assert_pcre_uchar32_size	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef int __assert_pcre_uchar32_size[sizeof(PCRE_UCHAR32) == 4 ? 1 : -1];$/;"	t	typeref:typename:int[sizeof (PCRE_UCHAR32)==4?1:-1]
__assert_real_pcre_size_divisible_8	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef int __assert_real_pcre_size_divisible_8[(sizeof(REAL_PCRE) % 8) == 0 ? 1 : -1];$/;"	t	typeref:typename:int[(sizeof (REAL_PCRE)%8)==0?1:-1]
__call	my_project/libgit2/tests/resources/userdiff/after/file.php	/^    public function __call($name, $arguments)$/;"	f	class:Faker\\UniqueGenerator
__call	my_project/libgit2/tests/resources/userdiff/before/file.php	/^    public function __call($name, $arguments)$/;"	f	class:Faker\\UniqueGenerator
__call	my_project/libgit2/tests/resources/userdiff/files/file.php	/^    public function __call($name, $arguments)$/;"	f	class:Faker\\UniqueGenerator
__construct	my_project/libgit2/tests/resources/userdiff/after/file.php	/^    public function __construct(Generator $generator, $maxRetries)$/;"	f	class:Faker\\UniqueGenerator
__construct	my_project/libgit2/tests/resources/userdiff/before/file.php	/^    public function __construct(Generator $generator, $maxRetries)$/;"	f	class:Faker\\UniqueGenerator
__construct	my_project/libgit2/tests/resources/userdiff/files/file.php	/^    public function __construct(Generator $generator, $maxRetries)$/;"	f	class:Faker\\UniqueGenerator
__eq__	my_project/libgit2/script/release.py	/^    def __eq__(self, other):$/;"	m	class:Version
__get	my_project/libgit2/tests/resources/userdiff/after/file.php	/^    public function __get($attribute)$/;"	f	class:Faker\\UniqueGenerator
__get	my_project/libgit2/tests/resources/userdiff/before/file.php	/^    public function __get($attribute)$/;"	f	class:Faker\\UniqueGenerator
__get	my_project/libgit2/tests/resources/userdiff/files/file.php	/^    public function __get($attribute)$/;"	f	class:Faker\\UniqueGenerator
__has_builtin	my_project/libgit2/src/util/git2_util.h	/^# define __has_builtin(/;"	d
__init__	my_project/libgit2/script/release.py	/^    def __init__(self, version):$/;"	m	class:Version
__init__	my_project/libgit2/tests/clar/generate.py	/^        def __init__(self, module):$/;"	m	class:Module.Template
__init__	my_project/libgit2/tests/clar/generate.py	/^    def __init__(self, name):$/;"	m	class:Module
__init__	my_project/libgit2/tests/clar/generate.py	/^    def __init__(self, path, output):$/;"	m	class:TestSuite
__str__	my_project/libgit2/script/release.py	/^    def __str__(self):$/;"	m	class:Version
_a	my_project/libgit2/tests/libgit2/threads/diff.c	/^static git_tree *_a, *_b;$/;"	v	typeref:typename:git_tree *	file:
_alloc_size	my_project/libgit2/src/util/vector.h	/^	size_t _alloc_size;$/;"	m	struct:git_vector	typeref:typename:size_t
_assert_sorted	my_project/libgit2/tests/util/qsort.c	/^static void _assert_sorted(void *els, size_t n, size_t elsize, git__sort_r_cmp cmp)$/;"	f	typeref:typename:void	file:
_b	my_project/libgit2/tests/libgit2/threads/diff.c	/^static git_tree *_a, *_b;$/;"	v	typeref:typename:git_tree *	file:
_buf	my_project/libgit2/tests/util/str/splice.c	/^static git_str _buf;$/;"	v	typeref:typename:git_str	file:
_cfg	my_project/libgit2/tests/libgit2/notes/notesref.c	/^static git_config *_cfg;$/;"	v	typeref:typename:git_config *	file:
_check_counts	my_project/libgit2/tests/libgit2/threads/diff.c	/^static int _check_counts;$/;"	v	typeref:typename:int	file:
_check_dir_contents	my_project/libgit2/src/util/fs_path.c	/^static bool _check_dir_contents($/;"	f	typeref:typename:bool	file:
_cl_repo	my_project/libgit2/tests/clar/clar_libgit2.c	/^static git_repository *_cl_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
_cl_restore_globalconfig	my_project/libgit2/tests/clar/clar_libgit2.c	/^static git_buf _cl_restore_globalconfig = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
_cl_restore_homedir	my_project/libgit2/tests/clar/clar_libgit2.c	/^static git_buf _cl_restore_homedir = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
_cl_sandbox	my_project/libgit2/tests/clar/clar_libgit2.c	/^static const char *_cl_sandbox = NULL;$/;"	v	typeref:typename:const char *	file:
_cl_trace_cb__event_handler	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^static void _cl_trace_cb__event_handler($/;"	f	typeref:typename:void	file:
_clar	my_project/libgit2/tests/clar/clar.c	/^} _clar;$/;"	v	typeref:struct:__anon15d96e120108
_clar_path	my_project/libgit2/tests/clar/clar/sandbox.h	/^static char _clar_path[CLAR_PATH_MAX];$/;"	v	typeref:typename:char[]
_cmp	my_project/libgit2/src/util/vector.h	/^	git_vector_cmp _cmp;$/;"	m	struct:git_vector	typeref:typename:git_vector_cmp
_commits	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static git_vector _commits;$/;"	v	typeref:typename:git_vector	file:
_commits_is_initialized	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static int _commits_is_initialized;$/;"	v	typeref:typename:int	file:
_config	my_project/libgit2/src/libgit2/repository.h	/^	git_config *_config;$/;"	m	struct:git_repository	typeref:typename:git_config *
_config	my_project/libgit2/tests/libgit2/remote/create.c	/^static git_config *_config;$/;"	v	typeref:typename:git_config *	file:
_configmap_autocrlf	my_project/libgit2/src/libgit2/config_cache.c	/^static git_configmap _configmap_autocrlf[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_configmap_eol	my_project/libgit2/src/libgit2/config_cache.c	/^static git_configmap _configmap_eol[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_configmap_int	my_project/libgit2/src/libgit2/config_cache.c	/^static git_configmap _configmap_int[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_configmap_logallrefupdates	my_project/libgit2/src/libgit2/config_cache.c	/^static git_configmap _configmap_logallrefupdates[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_configmap_safecrlf	my_project/libgit2/src/libgit2/config_cache.c	/^static git_configmap _configmap_safecrlf[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_configmaps	my_project/libgit2/src/libgit2/config_cache.c	/^static struct map_data _configmaps[] = {$/;"	v	typeref:struct:map_data[]	file:
_counts	my_project/libgit2/tests/libgit2/threads/diff.c	/^static git_atomic32 _counts[4];$/;"	v	typeref:typename:git_atomic32[4]	file:
_cp_r_callback	my_project/libgit2/src/util/futils.c	/^static int _cp_r_callback(void *ref, git_str *from)$/;"	f	typeref:typename:int	file:
_cp_r_mkdir	my_project/libgit2/src/util/futils.c	/^static int _cp_r_mkdir(cp_r_info *info, git_str *from)$/;"	f	typeref:typename:int	file:
_current	my_project/libgit2/deps/llhttp/llhttp.h	/^  void* _current;$/;"	m	struct:llhttp__internal_s	typeref:typename:void *
_dirent_loose_load	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int _dirent_loose_load(void *payload, git_str *full_path)$/;"	f	typeref:typename:int	file:
_dist_code	my_project/libgit2/deps/zlib/trees.c	/^uch _dist_code[DIST_CODE_LEN];$/;"	v	typeref:typename:uch[]
_dist_code	my_project/libgit2/deps/zlib/trees.h	/^const uch ZLIB_INTERNAL _dist_code[DIST_CODE_LEN] = {$/;"	v	typeref:typename:const uch ZLIB_INTERNAL[]
_dist_code	my_project/libgit2/deps/zlib/zconf.h	/^#  define _dist_code /;"	d
_dummy	my_project/libgit2/tests/libgit2/network/remote/push.c	/^static git_repository *_repo, *_dummy;$/;"	v	typeref:typename:git_repository *	file:
_entries	my_project/libgit2/tests/libgit2/object/tree/write.c	/^} _entries[] = {$/;"	v	typeref:struct:__anon490e2c6b0208[]
_existing_oid	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^static git_oid _existing_oid;$/;"	v	typeref:typename:git_oid	file:
_existing_oid	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^static git_oid _existing_oid;$/;"	v	typeref:typename:git_oid	file:
_existing_oid	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^static git_oid _existing_oid;$/;"	v	typeref:typename:git_oid	file:
_extend	my_project/libgit2/tests/util/ftruncate.c	/^static void _extend(off64_t i64len)$/;"	f	typeref:typename:void	file:
_fake	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^static fake_backend *_fake;$/;"	v	typeref:typename:fake_backend *	file:
_fake	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^static fake_backend *_fake;$/;"	v	typeref:typename:fake_backend *	file:
_fake_empty	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^static fake_backend *_fake_empty;$/;"	v	typeref:typename:fake_backend *	file:
_fake_filled	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^static fake_backend *_fake_filled;$/;"	v	typeref:typename:fake_backend *	file:
_fixture	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static const char *_fixture = NULL;$/;"	v	typeref:typename:const char *	file:
_git_action	my_project/libgit2/src/libgit2/transports/git.c	/^static int _git_action($/;"	f	typeref:typename:int	file:
_git_close	my_project/libgit2/src/libgit2/transports/git.c	/^static int _git_close(git_smart_subtransport *subtransport)$/;"	f	typeref:typename:int	file:
_git_free	my_project/libgit2/src/libgit2/transports/git.c	/^static void _git_free(git_smart_subtransport *subtransport)$/;"	f	typeref:typename:void	file:
_git_receivepack	my_project/libgit2/src/libgit2/transports/git.c	/^static int _git_receivepack($/;"	f	typeref:typename:int	file:
_git_receivepack_ls	my_project/libgit2/src/libgit2/transports/git.c	/^static int _git_receivepack_ls($/;"	f	typeref:typename:int	file:
_git_ssh_authenticate_session	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int _git_ssh_authenticate_session($/;"	f	typeref:typename:int	file:
_git_ssh_session_create	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int _git_ssh_session_create($/;"	f	typeref:typename:int	file:
_git_ssh_setup_conn	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int _git_ssh_setup_conn($/;"	f	typeref:typename:int	file:
_git_trace_cb__debug	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^#define _git_trace_cb__debug /;"	d	file:
_git_trace_cb__debug	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^static void _git_trace_cb__debug(git_trace_level_t level, const char *msg)$/;"	f	typeref:typename:void	file:
_git_trace_cb__printf	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^static void _git_trace_cb__printf(git_trace_level_t level, const char *msg)$/;"	f	typeref:typename:void	file:
_git_uploadpack	my_project/libgit2/src/libgit2/transports/git.c	/^static int _git_uploadpack($/;"	f	typeref:typename:int	file:
_git_uploadpack_ls	my_project/libgit2/src/libgit2/transports/git.c	/^static int _git_uploadpack_ls($/;"	f	typeref:typename:int	file:
_github_ssh_passphrase	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_github_ssh_passphrase = NULL;$/;"	v	typeref:typename:char *	file:
_github_ssh_privkey	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_github_ssh_privkey = NULL;$/;"	v	typeref:typename:char *	file:
_github_ssh_pubkey	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_github_ssh_pubkey = NULL;$/;"	v	typeref:typename:char *	file:
_github_ssh_remotehostkey	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_github_ssh_remotehostkey = NULL;$/;"	v	typeref:typename:char *	file:
_global_path	my_project/libgit2/tests/libgit2/repo/template.c	/^static git_str _global_path = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
_halloc	my_project/libgit2/deps/zlib/zutil.c	/^#  define _halloc /;"	d	file:
_head_id	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^static git_oid _head_id;$/;"	v	typeref:typename:git_oid	file:
_hfree	my_project/libgit2/deps/zlib/zutil.c	/^#  define _hfree /;"	d	file:
_index	my_project/libgit2/deps/llhttp/llhttp.h	/^  int32_t _index;$/;"	m	struct:llhttp__internal_s	typeref:typename:int32_t
_index	my_project/libgit2/src/libgit2/repository.h	/^	git_index *_index;$/;"	m	struct:git_repository	typeref:typename:git_index *
_index	my_project/libgit2/tests/libgit2/index/read_index.c	/^static git_index *_index;$/;"	v	typeref:typename:git_index *	file:
_index	my_project/libgit2/tests/libgit2/rebase/iterator.c	/^static git_index *_index;$/;"	v	typeref:typename:git_index *	file:
_index	my_project/libgit2/tests/libgit2/rebase/setup.c	/^static git_index *_index;$/;"	v	typeref:typename:git_index *	file:
_index	my_project/libgit2/tests/libgit2/reset/default.c	/^static git_index *_index;$/;"	v	typeref:typename:git_index *	file:
_indexer	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static git_indexer *_indexer;$/;"	v	typeref:typename:git_indexer *	file:
_length_code	my_project/libgit2/deps/zlib/trees.c	/^uch _length_code[MAX_MATCH-MIN_MATCH+1];$/;"	v	typeref:typename:uch[]
_length_code	my_project/libgit2/deps/zlib/trees.h	/^const uch ZLIB_INTERNAL _length_code[MAX_MATCH-MIN_MATCH+1]= {$/;"	v	typeref:typename:const uch ZLIB_INTERNAL[]
_length_code	my_project/libgit2/deps/zlib/zconf.h	/^#  define _length_code /;"	d
_load_trace_params	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^static void _load_trace_params(void)$/;"	f	typeref:typename:void	file:
_name	my_project/libgit2/tests/libgit2/config/multivar.c	/^static const char *_name = "remote.ab.url";$/;"	v	typeref:typename:const char *	file:
_nonexisting_oid	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^static git_oid _nonexisting_oid;$/;"	v	typeref:typename:git_oid	file:
_nonexisting_oid	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^static git_oid _nonexisting_oid;$/;"	v	typeref:typename:git_oid	file:
_note	my_project/libgit2/tests/libgit2/notes/notesref.c	/^static git_note *_note;$/;"	v	typeref:typename:git_note *	file:
_obj	my_project/libgit2/tests/libgit2/odb/backend/mempack.c	/^static git_odb_object *_obj;$/;"	v	typeref:typename:git_odb_object *	file:
_obj	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^static git_odb_object *_obj;$/;"	v	typeref:typename:git_odb_object *	file:
_obj	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^static git_odb_object *_obj;$/;"	v	typeref:typename:git_odb_object *	file:
_objects	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^static const fake_object _objects[] = {$/;"	v	typeref:typename:const fake_object[]	file:
_objects	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^static const fake_object _objects[] = {$/;"	v	typeref:typename:const fake_object[]	file:
_objects_empty	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^static const fake_object _objects_empty[] = {$/;"	v	typeref:typename:const fake_object[]	file:
_objects_filled	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^static const fake_object _objects_filled[] = {$/;"	v	typeref:typename:const fake_object[]	file:
_odb	my_project/libgit2/src/libgit2/repository.h	/^	git_odb *_odb;$/;"	m	struct:git_repository	typeref:typename:git_odb *
_odb	my_project/libgit2/tests/libgit2/odb/backend/loose.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	my_project/libgit2/tests/libgit2/odb/backend/mempack.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	my_project/libgit2/tests/libgit2/odb/foreach.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	my_project/libgit2/tests/libgit2/odb/mixed.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	my_project/libgit2/tests/libgit2/odb/packed.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	my_project/libgit2/tests/libgit2/odb/packed256.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	my_project/libgit2/tests/libgit2/odb/packedone.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	my_project/libgit2/tests/libgit2/odb/packedone256.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_odb	my_project/libgit2/tests/libgit2/odb/sorting.c	/^static git_odb *_odb;$/;"	v	typeref:typename:git_odb *	file:
_oid	my_project/libgit2/tests/libgit2/odb/backend/mempack.c	/^static git_oid _oid;$/;"	v	typeref:typename:git_oid	file:
_oid	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^static git_oid _oid;$/;"	v	typeref:typename:git_oid	file:
_oid_b1	my_project/libgit2/tests/libgit2/online/push.c	/^static git_oid _oid_b1;$/;"	v	typeref:typename:git_oid	file:
_oid_b2	my_project/libgit2/tests/libgit2/online/push.c	/^static git_oid _oid_b2;$/;"	v	typeref:typename:git_oid	file:
_oid_b3	my_project/libgit2/tests/libgit2/online/push.c	/^static git_oid _oid_b3;$/;"	v	typeref:typename:git_oid	file:
_oid_b4	my_project/libgit2/tests/libgit2/online/push.c	/^static git_oid _oid_b4;$/;"	v	typeref:typename:git_oid	file:
_oid_b5	my_project/libgit2/tests/libgit2/online/push.c	/^static git_oid _oid_b5;$/;"	v	typeref:typename:git_oid	file:
_oid_b6	my_project/libgit2/tests/libgit2/online/push.c	/^static git_oid _oid_b6;$/;"	v	typeref:typename:git_oid	file:
_orig_http_proxy	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_orig_http_proxy = NULL;$/;"	v	typeref:typename:char *	file:
_orig_https_proxy	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_orig_https_proxy = NULL;$/;"	v	typeref:typename:char *	file:
_orig_no_proxy	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_orig_no_proxy = NULL;$/;"	v	typeref:typename:char *	file:
_orig_ssh_cmd	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_orig_ssh_cmd = NULL;$/;"	v	typeref:typename:char *	file:
_orig_ssh_cmd	my_project/libgit2/tests/libgit2/online/push.c	/^static char *_orig_ssh_cmd = NULL;$/;"	v	typeref:typename:char *	file:
_packbuilder	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static git_packbuilder *_packbuilder;$/;"	v	typeref:typename:git_packbuilder *	file:
_path	my_project/libgit2/tests/libgit2/repo/state.c	/^static git_str _path;$/;"	v	typeref:typename:git_str	file:
_pathspecs	my_project/libgit2/tests/libgit2/reset/default.c	/^static git_strarray _pathspecs;$/;"	v	typeref:typename:git_strarray	file:
_record_cbs	my_project/libgit2/tests/libgit2/online/push.c	/^static git_remote_callbacks _record_cbs = RECORD_CALLBACKS_INIT(&_record_cbs_data);$/;"	v	typeref:typename:git_remote_callbacks	file:
_record_cbs_data	my_project/libgit2/tests/libgit2/online/push.c	/^static record_callbacks_data _record_cbs_data = {{ 0 }};$/;"	v	typeref:typename:record_callbacks_data	file:
_refdb	my_project/libgit2/src/libgit2/repository.h	/^	git_refdb *_refdb;$/;"	m	struct:git_repository	typeref:typename:git_refdb *
_refspec	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^static const git_refspec *_refspec;$/;"	v	typeref:typename:const git_refspec *	file:
_remote	my_project/libgit2/tests/libgit2/network/remote/push.c	/^static git_remote *_remote;$/;"	v	typeref:typename:git_remote *	file:
_remote	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^static git_remote *_remote;$/;"	v	typeref:typename:git_remote *	file:
_remote	my_project/libgit2/tests/libgit2/online/push.c	/^static git_remote *_remote;$/;"	v	typeref:typename:git_remote *	file:
_remote_branch	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_branch = NULL;$/;"	v	typeref:typename:char *	file:
_remote_default	my_project/libgit2/tests/libgit2/online/push.c	/^static char *_remote_default = NULL;$/;"	v	typeref:typename:char *	file:
_remote_expectcontinue	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_expectcontinue = NULL;$/;"	v	typeref:typename:char *	file:
_remote_expectcontinue	my_project/libgit2/tests/libgit2/online/push.c	/^static char *_remote_expectcontinue = NULL;$/;"	v	typeref:typename:char *	file:
_remote_name	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^static const char *_remote_name = "test";$/;"	v	typeref:typename:const char *	file:
_remote_pass	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_pass = NULL;$/;"	v	typeref:typename:char *	file:
_remote_pass	my_project/libgit2/tests/libgit2/online/push.c	/^static char *_remote_pass = NULL;$/;"	v	typeref:typename:char *	file:
_remote_proxy_host	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_proxy_host = NULL;$/;"	v	typeref:typename:char *	file:
_remote_proxy_host	my_project/libgit2/tests/libgit2/online/fetch.c	/^static char *_remote_proxy_host = NULL;$/;"	v	typeref:typename:char *	file:
_remote_proxy_pass	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_proxy_pass = NULL;$/;"	v	typeref:typename:char *	file:
_remote_proxy_pass	my_project/libgit2/tests/libgit2/online/fetch.c	/^static char *_remote_proxy_pass = NULL;$/;"	v	typeref:typename:char *	file:
_remote_proxy_scheme	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_proxy_scheme = NULL;$/;"	v	typeref:typename:char *	file:
_remote_proxy_scheme	my_project/libgit2/tests/libgit2/online/fetch.c	/^static char *_remote_proxy_scheme = NULL;$/;"	v	typeref:typename:char *	file:
_remote_proxy_selfsigned	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_proxy_selfsigned = NULL;$/;"	v	typeref:typename:char *	file:
_remote_proxy_user	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_proxy_user = NULL;$/;"	v	typeref:typename:char *	file:
_remote_proxy_user	my_project/libgit2/tests/libgit2/online/fetch.c	/^static char *_remote_proxy_user = NULL;$/;"	v	typeref:typename:char *	file:
_remote_push_options	my_project/libgit2/tests/libgit2/online/push.c	/^static char *_remote_push_options = NULL;$/;"	v	typeref:typename:char *	file:
_remote_redirect_initial	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_redirect_initial = NULL;$/;"	v	typeref:typename:char *	file:
_remote_redirect_initial	my_project/libgit2/tests/libgit2/online/fetch.c	/^static char *_remote_redirect_initial = NULL;$/;"	v	typeref:typename:char *	file:
_remote_redirect_subsequent	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_redirect_subsequent = NULL;$/;"	v	typeref:typename:char *	file:
_remote_redirect_subsequent	my_project/libgit2/tests/libgit2/online/fetch.c	/^static char *_remote_redirect_subsequent = NULL;$/;"	v	typeref:typename:char *	file:
_remote_speed_slow	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_speed_slow = NULL;$/;"	v	typeref:typename:char *	file:
_remote_speed_timesout	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_speed_timesout = NULL;$/;"	v	typeref:typename:char *	file:
_remote_ssh_fingerprint	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_ssh_fingerprint = NULL;$/;"	v	typeref:typename:char *	file:
_remote_ssh_key	my_project/libgit2/tests/libgit2/online/push.c	/^static char *_remote_ssh_key = NULL;$/;"	v	typeref:typename:char *	file:
_remote_ssh_passphrase	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_ssh_passphrase = NULL;$/;"	v	typeref:typename:char *	file:
_remote_ssh_passphrase	my_project/libgit2/tests/libgit2/online/push.c	/^static char *_remote_ssh_passphrase = NULL;$/;"	v	typeref:typename:char *	file:
_remote_ssh_privkey	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_ssh_privkey = NULL;$/;"	v	typeref:typename:char *	file:
_remote_ssh_pubkey	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_ssh_pubkey = NULL;$/;"	v	typeref:typename:char *	file:
_remote_ssh_pubkey	my_project/libgit2/tests/libgit2/online/push.c	/^static char *_remote_ssh_pubkey = NULL;$/;"	v	typeref:typename:char *	file:
_remote_sslnoverify	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_sslnoverify = NULL;$/;"	v	typeref:typename:char *	file:
_remote_url	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_url = NULL;$/;"	v	typeref:typename:char *	file:
_remote_url	my_project/libgit2/tests/libgit2/online/push.c	/^static char *_remote_url = NULL;$/;"	v	typeref:typename:char *	file:
_remote_user	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_remote_user = NULL;$/;"	v	typeref:typename:char *	file:
_remote_user	my_project/libgit2/tests/libgit2/online/push.c	/^static char *_remote_user = NULL;$/;"	v	typeref:typename:char *	file:
_rename_helper	my_project/libgit2/tests/libgit2/status/renames.c	/^static void _rename_helper($/;"	f	typeref:typename:void	file:
_render_callback	my_project/libgit2/tests/clar/generate.py	/^        def _render_callback(self, cb):$/;"	m	class:Module.Template
_replacer	my_project/libgit2/tests/clar/generate.py	/^        def _replacer(match):$/;"	f	member:Module._skip_comments	file:
_repo	my_project/libgit2/tests/libgit2/commit/commit.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/commit/parent.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/config/conditionals.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/diff/stats.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/graph/ahead_behind.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/graph/descendant_of.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/index/read_index.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/network/remote/delete.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/network/remote/push.c	/^static git_repository *_repo, *_dummy;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/notes/notes.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/notes/notesref.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/object/shortid.c	/^git_repository *_repo;$/;"	v	typeref:typename:git_repository *
_repo	my_project/libgit2/tests/libgit2/object/tree/duplicateentries.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/odb/backend/loose.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/odb/backend/mempack.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/odb/backend/nobackend.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/odb/foreach.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/online/fetch.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/online/push.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/remote/create.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/remote/list.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/repo/hashfile.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/repo/message.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/repo/state.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/repo/template.c	/^static git_repository *_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/reset/default.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static git_repository *_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/revwalk/signatureparsing.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/threads/diff.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo	my_project/libgit2/tests/libgit2/threads/iterator.c	/^static git_repository *_repo;$/;"	v	typeref:typename:git_repository *	file:
_repo2	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^static git_repository *_repo2;$/;"	v	typeref:typename:git_repository *	file:
_retries	my_project/libgit2/tests/libgit2/threads/diff.c	/^static int _retries;$/;"	v	typeref:typename:int	file:
_revwalker	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static git_revwalk *_revwalker;$/;"	v	typeref:typename:git_revwalk *	file:
_sig	my_project/libgit2/tests/libgit2/notes/notes.c	/^static git_signature *_sig;$/;"	v	typeref:typename:git_signature *	file:
_sig	my_project/libgit2/tests/libgit2/notes/notesref.c	/^static git_signature *_sig;$/;"	v	typeref:typename:git_signature *	file:
_skip_comments	my_project/libgit2/tests/clar/generate.py	/^    def _skip_comments(self, text):$/;"	m	class:Module
_sm_ignore_map	my_project/libgit2/src/libgit2/submodule.c	/^static git_configmap _sm_ignore_map[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_sm_recurse_map	my_project/libgit2/src/libgit2/submodule.c	/^static git_configmap _sm_recurse_map[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_sm_update_map	my_project/libgit2/src/libgit2/submodule.c	/^static git_configmap _sm_update_map[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_span_cb0	my_project/libgit2/deps/llhttp/llhttp.h	/^  void* _span_cb0;$/;"	m	struct:llhttp__internal_s	typeref:typename:void *
_span_pos0	my_project/libgit2/deps/llhttp/llhttp.h	/^  void* _span_pos0;$/;"	m	struct:llhttp__internal_s	typeref:typename:void *
_ssh_action	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int _ssh_action($/;"	f	typeref:typename:int	file:
_ssh_close	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int _ssh_close(git_smart_subtransport *subtransport)$/;"	f	typeref:typename:int	file:
_ssh_cmd	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *_ssh_cmd = NULL;$/;"	v	typeref:typename:char *	file:
_ssh_cmd	my_project/libgit2/tests/libgit2/online/push.c	/^static char *_ssh_cmd = NULL;$/;"	v	typeref:typename:char *	file:
_ssh_free	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static void _ssh_free(git_smart_subtransport *subtransport)$/;"	f	typeref:typename:void	file:
_stats	my_project/libgit2/tests/libgit2/diff/stats.c	/^static git_diff_stats *_stats;$/;"	v	typeref:typename:git_diff_stats *	file:
_stats	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static git_indexer_progress _stats;$/;"	v	typeref:typename:git_indexer_progress	file:
_struct_count	my_project/libgit2/tests/util/vector.c	/^static int _struct_count = 0;$/;"	v	typeref:typename:int	file:
_tag_blob	my_project/libgit2/tests/libgit2/online/push.c	/^static git_oid _tag_blob;$/;"	v	typeref:typename:git_oid	file:
_tag_commit	my_project/libgit2/tests/libgit2/online/push.c	/^static git_oid _tag_commit;$/;"	v	typeref:typename:git_oid	file:
_tag_lightweight	my_project/libgit2/tests/libgit2/online/push.c	/^static git_oid _tag_lightweight;$/;"	v	typeref:typename:git_oid	file:
_tag_tag	my_project/libgit2/tests/libgit2/online/push.c	/^static git_oid _tag_tag;$/;"	v	typeref:typename:git_oid	file:
_tag_tree	my_project/libgit2/tests/libgit2/online/push.c	/^static git_oid _tag_tree;$/;"	v	typeref:typename:git_oid	file:
_target	my_project/libgit2/tests/libgit2/reset/default.c	/^static git_object *_target;$/;"	v	typeref:typename:git_object *	file:
_test_map1	my_project/libgit2/tests/libgit2/config/read.c	/^static git_configmap _test_map1[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_test_map2	my_project/libgit2/tests/libgit2/config/read.c	/^static git_configmap _test_map2[] = {$/;"	v	typeref:typename:git_configmap[]	file:
_tr_align	my_project/libgit2/deps/zlib/trees.c	/^void ZLIB_INTERNAL _tr_align(deflate_state *s) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
_tr_align	my_project/libgit2/deps/zlib/zconf.h	/^#  define _tr_align /;"	d
_tr_flush_bits	my_project/libgit2/deps/zlib/trees.c	/^void ZLIB_INTERNAL _tr_flush_bits(deflate_state *s) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
_tr_flush_bits	my_project/libgit2/deps/zlib/zconf.h	/^#  define _tr_flush_bits /;"	d
_tr_flush_block	my_project/libgit2/deps/zlib/trees.c	/^void ZLIB_INTERNAL _tr_flush_block(deflate_state *s, charf *buf,$/;"	f	typeref:typename:void ZLIB_INTERNAL
_tr_flush_block	my_project/libgit2/deps/zlib/zconf.h	/^#  define _tr_flush_block /;"	d
_tr_init	my_project/libgit2/deps/zlib/trees.c	/^void ZLIB_INTERNAL _tr_init(deflate_state *s) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
_tr_init	my_project/libgit2/deps/zlib/zconf.h	/^#  define _tr_init /;"	d
_tr_stored_block	my_project/libgit2/deps/zlib/trees.c	/^void ZLIB_INTERNAL _tr_stored_block(deflate_state *s, charf *buf,$/;"	f	typeref:typename:void ZLIB_INTERNAL
_tr_stored_block	my_project/libgit2/deps/zlib/zconf.h	/^#  define _tr_stored_block /;"	d
_tr_tally	my_project/libgit2/deps/zlib/trees.c	/^int ZLIB_INTERNAL _tr_tally(deflate_state *s, unsigned dist, unsigned lc) {$/;"	f	typeref:typename:int ZLIB_INTERNAL
_tr_tally	my_project/libgit2/deps/zlib/zconf.h	/^#  define _tr_tally /;"	d
_tr_tally_dist	my_project/libgit2/deps/zlib/deflate.h	/^# define _tr_tally_dist(/;"	d
_tr_tally_lit	my_project/libgit2/deps/zlib/deflate.h	/^# define _tr_tally_lit(/;"	d
_trace_debug_close	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^#define _trace_debug_close /;"	d	file:
_trace_printf_close	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^static void _trace_printf_close(void)$/;"	f	typeref:typename:void	file:
_trailer_block	my_project/libgit2/include/git2/message.h	/^  char *_trailer_block;$/;"	m	struct:__anon2d3685bf0208	typeref:typename:char *
_transport	my_project/libgit2/tests/libgit2/transport/register.c	/^static git_transport _transport = GIT_TRANSPORT_INIT;$/;"	v	typeref:typename:git_transport	file:
_walk	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static git_revwalk *_walk = NULL;$/;"	v	typeref:typename:git_revwalk *	file:
_walk	my_project/libgit2/tests/libgit2/revwalk/signatureparsing.c	/^static git_revwalk *_walk;$/;"	v	typeref:typename:git_revwalk *	file:
a	my_project/libgit2/tests/libgit2/diff/tree.c	/^static git_tree *a, *b;$/;"	v	typeref:typename:git_tree *	file:
a	my_project/libgit2/tests/libgit2/trace/windows/stacktrace.c	/^static void a(void)$/;"	f	typeref:typename:void	file:
a/fuzzers/patch_fuzzer.c	my_project/libgit2/fuzzers/corpora/patch_parse/edit-file.diff	/^--- a\/fuzzers\/patch_fuzzer.c$/;"	m
abbreviated_size	my_project/libgit2/include/git2/describe.h	/^	unsigned int abbreviated_size;$/;"	m	struct:__anon07cf78db0208	typeref:typename:unsigned int
abort_addition	my_project/libgit2/tests/libgit2/apply/partial.c	/^static int abort_addition($/;"	f	typeref:typename:int	file:
abort_change	my_project/libgit2/tests/libgit2/apply/partial.c	/^static int abort_change($/;"	f	typeref:typename:int	file:
abort_deletion	my_project/libgit2/tests/libgit2/apply/partial.c	/^static int abort_deletion($/;"	f	typeref:typename:int	file:
abort_diff	my_project/libgit2/tests/libgit2/diff/notify.c	/^static int abort_diff($/;"	f	typeref:typename:int	file:
abort_test	my_project/libgit2/tests/clar/clar.c	/^static void abort_test(void)$/;"	f	typeref:typename:void	file:
aborting_progress_cb	my_project/libgit2/tests/libgit2/stash/apply.c	/^static int aborting_progress_cb($/;"	f	typeref:typename:int	file:
accept	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *accept;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
accept	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	const char *accept;                \/**< Contents of the Accept header *\/$/;"	m	struct:__anon3d590bc30208	typeref:typename:const char *
accept_label	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *accept_label;$/;"	m	struct:compiler_common	typeref:struct:sljit_label *	file:
access	my_project/libgit2/src/util/win32/posix_w32.c	/^	DWORD access;$/;"	m	struct:open_opts	typeref:typename:DWORD	file:
access	my_project/libgit2/tests/clar/clar.c	/^#		define access(/;"	d	file:
accumulator	my_project/libgit2/tests/util/process/env.c	/^static git_str accumulator = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
ack_pkt	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int ack_pkt($/;"	f	typeref:typename:int	file:
acquire_credentials	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int acquire_credentials($/;"	f	typeref:typename:int	file:
acquire_fallback_cred	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int acquire_fallback_cred($/;"	f	typeref:typename:int	file:
acquire_url_cred	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int acquire_url_cred($/;"	f	typeref:typename:int	file:
action	my_project/libgit2/examples/cat-file.c	/^	catfile_mode action;$/;"	m	struct:catfile_options	typeref:typename:catfile_mode	file:
action	my_project/libgit2/include/git2/tree.h	/^	git_tree_update_t action;$/;"	m	struct:__anona533f3ca0308	typeref:typename:git_tree_update_t
action	my_project/libgit2/src/cli/cmd_config.c	/^static action_t action = ACTION_NONE;$/;"	v	typeref:typename:action_t	file:
action	my_project/libgit2/src/cli/progress.h	/^	cli_progress_t action;$/;"	m	struct:__anonb5f2ec150208	typeref:typename:cli_progress_t
action	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^	git_smart_service_t action;$/;"	m	struct:__anonec53c3310208	typeref:typename:git_smart_service_t	file:
action_create_lightweight_tag	my_project/libgit2/examples/tag.c	/^static void action_create_lightweight_tag(tag_state *state)$/;"	f	typeref:typename:void	file:
action_create_tag	my_project/libgit2/examples/tag.c	/^static void action_create_tag(tag_state *state)$/;"	f	typeref:typename:void	file:
action_delete_tag	my_project/libgit2/examples/tag.c	/^static void action_delete_tag(tag_state *state)$/;"	f	typeref:typename:void	file:
action_finish	my_project/libgit2/src/cli/progress.h	/^	uint64_t action_finish;$/;"	m	struct:__anonb5f2ec150208	typeref:typename:uint64_t
action_list_tags	my_project/libgit2/examples/tag.c	/^static void action_list_tags(tag_state *state)$/;"	f	typeref:typename:void	file:
action_start	my_project/libgit2/src/cli/progress.h	/^	uint64_t action_start;$/;"	m	struct:__anonb5f2ec150208	typeref:typename:uint64_t
action_t	my_project/libgit2/src/cli/cmd_config.c	/^} action_t;$/;"	t	typeref:enum:__anon345171c40103	file:
active_refspecs	my_project/libgit2/src/libgit2/remote.h	/^	git_vector active_refspecs;$/;"	m	struct:git_remote	typeref:typename:git_vector
active_suite	my_project/libgit2/tests/clar/clar.c	/^	const char *active_suite;$/;"	m	struct:__anon15d96e120108	typeref:typename:const char *	file:
active_test	my_project/libgit2/tests/clar/clar.c	/^	const char *active_test;$/;"	m	struct:__anon15d96e120108	typeref:typename:const char *	file:
addTemp	my_project/libgit2/src/util/hash/rfc6234/sha224-256.c	/^static uint32_t addTemp;$/;"	v	typeref:typename:uint32_t	file:
add_and_check_file	my_project/libgit2/tests/libgit2/index/crlf.c	/^static int add_and_check_file(void *payload, git_str *actual_path)$/;"	f	typeref:typename:int	file:
add_and_check_mode	my_project/libgit2/tests/libgit2/index/filemodes.c	/^#define add_and_check_mode(/;"	d	file:
add_and_check_mode_	my_project/libgit2/tests/libgit2/index/filemodes.c	/^static void add_and_check_mode_($/;"	f	typeref:typename:void	file:
add_backend_internal	my_project/libgit2/src/libgit2/odb.c	/^static int add_backend_internal($/;"	f	typeref:typename:int	file:
add_blame_entry	my_project/libgit2/src/libgit2/blame_git.c	/^static void add_blame_entry(git_blame *blame, git_blame__entry *e)$/;"	f	typeref:typename:void	file:
add_blob_and_filter	my_project/libgit2/tests/libgit2/filter/ident.c	/^static void add_blob_and_filter($/;"	f	typeref:typename:void	file:
add_config	my_project/libgit2/src/cli/cmd_config.c	/^static int add_config(git_config *config)$/;"	f	typeref:typename:int	file:
add_conflict	my_project/libgit2/tests/libgit2/checkout/index.c	/^static void add_conflict(git_index *index, const char *path)$/;"	f	typeref:typename:void	file:
add_conflict	my_project/libgit2/tests/libgit2/iterator/index.c	/^static void add_conflict($/;"	f	typeref:typename:void	file:
add_conflicts	my_project/libgit2/tests/libgit2/index/read_index.c	/^static void add_conflicts(git_index *index, const char *filename)$/;"	f	typeref:typename:void	file:
add_descendants_to_write_order	my_project/libgit2/src/libgit2/pack-objects.c	/^static void add_descendants_to_write_order(git_pobject **wo, size_t *endp,$/;"	f	typeref:typename:void	file:
add_entry_and_check_mode	my_project/libgit2/tests/libgit2/index/filemodes.c	/^#define add_entry_and_check_mode(/;"	d	file:
add_entry_and_check_mode_	my_project/libgit2/tests/libgit2/index/filemodes.c	/^static void add_entry_and_check_mode_($/;"	f	typeref:typename:void	file:
add_expected_oid	my_project/libgit2/src/libgit2/indexer.c	/^static int add_expected_oid(git_indexer *idx, const git_oid *oid)$/;"	f	typeref:typename:int	file:
add_fake_conflicts	my_project/libgit2/tests/libgit2/object/tree/duplicateentries.c	/^static void add_fake_conflicts(git_index *index)$/;"	f	typeref:typename:void	file:
add_family_to_write_order	my_project/libgit2/src/libgit2/pack-objects.c	/^static void add_family_to_write_order(git_pobject **wo, size_t *endp,$/;"	f	typeref:typename:void	file:
add_hostkey_pref_if_avail	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static void add_hostkey_pref_if_avail($/;"	f	typeref:typename:void	file:
add_jump	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void add_jump(struct sljit_compiler *compiler, jump_list **list, struct slji/;"	f	typeref:typename:SLJIT_INLINE void	file:
add_label_addr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void add_label_addr(compiler_common *common, sljit_uw *update_addr)$/;"	f	typeref:typename:void	file:
add_list_to_class	my_project/libgit2/deps/pcre/pcre_compile.c	/^add_list_to_class(pcre_uint8 *classbits, pcre_uchar **uchardptr, int options,$/;"	f	typeref:typename:int	file:
add_name	my_project/libgit2/deps/pcre/pcre_compile.c	/^add_name(compile_data *cd, const pcre_uchar *name, int length,$/;"	f	typeref:typename:void	file:
add_not_list_to_class	my_project/libgit2/deps/pcre/pcre_compile.c	/^add_not_list_to_class(pcre_uint8 *classbits, pcre_uchar **uchardptr,$/;"	f	typeref:typename:int	file:
add_one_to_index	my_project/libgit2/tests/libgit2/ignore/status.c	/^static void add_one_to_index(const char *file)$/;"	f	typeref:typename:void	file:
add_parents_to_list	my_project/libgit2/src/libgit2/revwalk.c	/^static int add_parents_to_list(git_revwalk *walk, git_commit_list_node *commit, git_commit_list /;"	f	typeref:typename:int	file:
add_prefix_char	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void add_prefix_char(pcre_uchar chr, pcre_uchar *chars)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
add_push_report_pkt	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int add_push_report_pkt(git_push *push, git_pkt *pkt)$/;"	f	typeref:typename:int	file:
add_push_report_sideband_pkt	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int add_push_report_sideband_pkt(git_push *push, git_pkt_data *data_pkt, git_str *data_pk/;"	f	typeref:typename:int	file:
add_ref	my_project/libgit2/src/libgit2/transports/local.c	/^static int add_ref(transport_local *t, const char *name)$/;"	f	typeref:typename:int	file:
add_ref_from_push_spec	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int add_ref_from_push_spec(git_vector *refs, push_spec *push_spec)$/;"	f	typeref:typename:int	file:
add_refspec	my_project/libgit2/src/libgit2/remote.c	/^static int add_refspec(git_remote *remote, const char *string, bool is_fetch)$/;"	f	typeref:typename:int	file:
add_refspec_to	my_project/libgit2/src/libgit2/remote.c	/^static int add_refspec_to(git_vector *vector, const char *string, bool is_fetch)$/;"	f	typeref:typename:int	file:
add_repo_as_submodule	my_project/libgit2/src/libgit2/index.c	/^static int add_repo_as_submodule(git_index_entry **out, git_index *index, const char *path)$/;"	f	typeref:typename:int	file:
add_revision	my_project/libgit2/examples/log.c	/^static int add_revision(struct log_state *s, const char *revstr)$/;"	f	typeref:typename:int	file:
add_stub	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void add_stub(compiler_common *common, struct sljit_jump *start)$/;"	f	typeref:typename:void	file:
add_submodule_to_index	my_project/libgit2/tests/libgit2/submodule/status.c	/^static void add_submodule_to_index(const char *name)$/;"	f	typeref:typename:void	file:
add_submodule_with_commit	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^static void add_submodule_with_commit(const char *name)$/;"	f	typeref:typename:void	file:
add_to_cache	my_project/libgit2/src/util/filebuf.c	/^GIT_INLINE(void) add_to_cache(git_filebuf *file, const void *buf, size_t len)$/;"	f	typeref:typename:void
add_to_class	my_project/libgit2/deps/pcre/pcre_compile.c	/^add_to_class(pcre_uint8 *classbits, pcre_uchar **uchardptr, int options,$/;"	f	typeref:typename:int	file:
add_to_known_names	my_project/libgit2/src/libgit2/describe.c	/^static int add_to_known_names($/;"	f	typeref:typename:int	file:
add_to_workdir	my_project/libgit2/tests/libgit2/attr/repo.c	/^static void add_to_workdir(const char *filename, const char *content)$/;"	f	typeref:typename:void	file:
add_to_write_order	my_project/libgit2/src/libgit2/pack-objects.c	/^GIT_INLINE(void) add_to_write_order(git_pobject **wo, size_t *endp,$/;"	f	typeref:typename:void
add_update	my_project/libgit2/examples/add.c	/^	int add_update;$/;"	m	struct:index_options	typeref:typename:int	file:
add_update	my_project/libgit2/src/libgit2/push.c	/^static int add_update(git_push *push, push_spec *spec)$/;"	f	typeref:typename:int	file:
addall_cancel_at	my_project/libgit2/tests/libgit2/index/addall.c	/^static int addall_cancel_at($/;"	f	typeref:typename:int	file:
addall_create_test_repo	my_project/libgit2/tests/libgit2/index/addall.c	/^static void addall_create_test_repo(bool check_every_step)$/;"	f	typeref:typename:void	file:
addall_match_prefix	my_project/libgit2/tests/libgit2/index/addall.c	/^static int addall_match_prefix($/;"	f	typeref:typename:int	file:
addall_match_suffix	my_project/libgit2/tests/libgit2/index/addall.c	/^static int addall_match_suffix($/;"	f	typeref:typename:int	file:
added	my_project/libgit2/src/libgit2/commit_list.h	/^			 added:1,$/;"	m	struct:git_commit_list_node	typeref:typename:unsigned int:1
addrinfo	my_project/libgit2/src/util/posix.h	/^struct addrinfo {$/;"	s
adjust_recurse	my_project/libgit2/deps/pcre/pcre_compile.c	/^adjust_recurse(pcre_uchar *group, int adjust, BOOL utf, compile_data *cd,$/;"	f	typeref:typename:void	file:
adler	my_project/libgit2/deps/zlib/zlib.h	/^    uLong   adler;      \/* Adler-32 or CRC-32 value of the uncompressed data *\/$/;"	m	struct:z_stream_s	typeref:typename:uLong
adler32	my_project/libgit2/deps/zlib/adler32.c	/^uLong ZEXPORT adler32(uLong adler, const Bytef *buf, uInt len) {$/;"	f	typeref:typename:uLong ZEXPORT
adler32	my_project/libgit2/deps/zlib/zconf.h	/^#  define adler32 /;"	d
adler32_combine	my_project/libgit2/deps/zlib/adler32.c	/^uLong ZEXPORT adler32_combine(uLong adler1, uLong adler2, z_off_t len2) {$/;"	f	typeref:typename:uLong ZEXPORT
adler32_combine	my_project/libgit2/deps/zlib/zconf.h	/^#  define adler32_combine /;"	d
adler32_combine	my_project/libgit2/deps/zlib/zlib.h	/^#    define adler32_combine /;"	d
adler32_combine64	my_project/libgit2/deps/zlib/adler32.c	/^uLong ZEXPORT adler32_combine64(uLong adler1, uLong adler2, z_off64_t len2) {$/;"	f	typeref:typename:uLong ZEXPORT
adler32_combine64	my_project/libgit2/deps/zlib/zconf.h	/^#  define adler32_combine64 /;"	d
adler32_combine_	my_project/libgit2/deps/zlib/adler32.c	/^local uLong adler32_combine_(uLong adler1, uLong adler2, z_off64_t len2) {$/;"	f	typeref:typename:local uLong
adler32_z	my_project/libgit2/deps/zlib/adler32.c	/^uLong ZEXPORT adler32_z(uLong adler, const Bytef *buf, z_size_t len) {$/;"	f	typeref:typename:uLong ZEXPORT
adler32_z	my_project/libgit2/deps/zlib/zconf.h	/^#  define adler32_z /;"	d
advance	my_project/libgit2/src/libgit2/iterator.h	/^	int (*advance)(const git_index_entry **, git_iterator *);$/;"	m	struct:__anon2f88b95f0508	typeref:typename:int (*)(const git_index_entry **,git_iterator *)
advance_delta_offset	my_project/libgit2/src/libgit2/indexer.c	/^static int advance_delta_offset(git_indexer *idx, git_object_t type)$/;"	f	typeref:typename:int	file:
advance_into	my_project/libgit2/src/libgit2/iterator.h	/^	int (*advance_into)(const git_index_entry **, git_iterator *);$/;"	m	struct:__anon2f88b95f0508	typeref:typename:int (*)(const git_index_entry **,git_iterator *)
advance_over	my_project/libgit2/src/libgit2/iterator.h	/^	int (*advance_over)($/;"	m	struct:__anon2f88b95f0508	typeref:typename:int (*)(const git_index_entry **,git_iterator_status_t *,git_iterator *)
advance_until	my_project/libgit2/src/libgit2/mailmap.c	/^static int advance_until($/;"	f	typeref:typename:int	file:
affected	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^static char *affected[][5] = {$/;"	v	typeref:typename:char * [][5]	file:
after	my_project/libgit2/examples/log.c	/^	git_time_t after;$/;"	m	struct:log_options	typeref:typename:git_time_t	file:
agent	my_project/libgit2/src/libgit2/transports/smart.h	/^	char *agent;$/;"	m	struct:transport_smart_caps	typeref:typename:char *
ahead	my_project/libgit2/tests/libgit2/graph/ahead_behind.c	/^static size_t ahead;$/;"	v	typeref:typename:size_t	file:
ahead_behind	my_project/libgit2/src/libgit2/graph.c	/^static int ahead_behind(git_commit_list_node *one, git_commit_list_node *two,$/;"	f	typeref:typename:int	file:
ai_addr	my_project/libgit2/src/util/posix.h	/^	struct sockaddr *ai_addr;$/;"	m	struct:addrinfo	typeref:struct:sockaddr *
ai_addr_in	my_project/libgit2/src/util/posix.h	/^	struct sockaddr_in ai_addr_in;$/;"	m	struct:addrinfo	typeref:struct:sockaddr_in
ai_addrlen	my_project/libgit2/src/util/posix.h	/^	size_t ai_addrlen;$/;"	m	struct:addrinfo	typeref:typename:size_t
ai_family	my_project/libgit2/src/util/posix.h	/^	int ai_family;$/;"	m	struct:addrinfo	typeref:typename:int
ai_hostent	my_project/libgit2/src/util/posix.h	/^	struct hostent *ai_hostent;$/;"	m	struct:addrinfo	typeref:struct:hostent *
ai_next	my_project/libgit2/src/util/posix.h	/^	struct addrinfo *ai_next;$/;"	m	struct:addrinfo	typeref:struct:addrinfo *
ai_port	my_project/libgit2/src/util/posix.h	/^	long ai_port;$/;"	m	struct:addrinfo	typeref:typename:long
ai_protocol	my_project/libgit2/src/util/posix.h	/^	int ai_protocol;$/;"	m	struct:addrinfo	typeref:typename:int
ai_servent	my_project/libgit2/src/util/posix.h	/^	struct servent *ai_servent;$/;"	m	struct:addrinfo	typeref:struct:servent *
ai_socktype	my_project/libgit2/src/util/posix.h	/^	int ai_socktype;$/;"	m	struct:addrinfo	typeref:typename:int
algorithm	my_project/libgit2/src/util/hash.h	/^	git_hash_algorithm_t algorithm;$/;"	m	struct:git_hash_ctx	typeref:typename:git_hash_algorithm_t
algorithm	my_project/libgit2/src/util/hash/win32.h	/^	ALG_ID algorithm;$/;"	m	struct:__anon3079894c0208	typeref:typename:ALG_ID
alias	my_project/libgit2/src/cli/opt.h	/^	const char alias;$/;"	m	struct:cli_opt_spec	typeref:typename:const char
alien	my_project/libgit2/tests/libgit2/diff/blob.c	/^static git_blob *d, *alien;$/;"	v	typeref:typename:git_blob *	file:
all_iter	my_project/libgit2/src/libgit2/config.c	/^} all_iter;$/;"	t	typeref:struct:__anona0399aa60308	file:
all_iter_free	my_project/libgit2/src/libgit2/config.c	/^static void all_iter_free(git_config_iterator *_iter)$/;"	f	typeref:typename:void	file:
all_iter_glob_free	my_project/libgit2/src/libgit2/config.c	/^static void all_iter_glob_free(git_config_iterator *_iter)$/;"	f	typeref:typename:void	file:
all_iter_glob_next	my_project/libgit2/src/libgit2/config.c	/^static int all_iter_glob_next(git_config_entry **entry, git_config_iterator *_iter)$/;"	f	typeref:typename:int	file:
all_iter_next	my_project/libgit2/src/libgit2/config.c	/^static int all_iter_next(git_config_entry **out, git_config_iterator *_iter)$/;"	f	typeref:typename:int	file:
alloc	my_project/libgit2/deps/xdiff/xpatience.c	/^	int nr, alloc;$/;"	m	struct:hashmap	typeref:typename:int	file:
alloc	my_project/libgit2/deps/xdiff/xprepare.c	/^	long alloc;$/;"	m	struct:s_xdlclassifier	typeref:typename:long	file:
alloc	my_project/libgit2/src/util/tsort.c	/^	size_t alloc;$/;"	m	struct:tsort_store	typeref:typename:size_t	file:
alloc_entry	my_project/libgit2/src/libgit2/tree.c	/^static git_tree_entry *alloc_entry(const char *filename, size_t filename_len, const git_oid *id)$/;"	f	typeref:typename:git_tree_entry *	file:
alloc_func	my_project/libgit2/deps/zlib/zconf.h	/^#  define alloc_func /;"	d
alloc_func	my_project/libgit2/deps/zlib/zlib.h	/^typedef voidpf (*alloc_func)(voidpf opaque, uInt items, uInt size);$/;"	t	typeref:typename:voidpf (*)(voidpf opaque,uInt items,uInt size)
alloc_parents	my_project/libgit2/src/libgit2/commit_list.c	/^static git_commit_list_node **alloc_parents($/;"	f	typeref:typename:git_commit_list_node **	file:
alloc_ref	my_project/libgit2/src/libgit2/refs.c	/^static git_reference *alloc_ref(const char *name)$/;"	f	typeref:typename:git_reference *	file:
alloc_size	my_project/libgit2/src/util/pool.c	/^static size_t alloc_size(git_pool *pool, size_t count)$/;"	f	typeref:typename:size_t	file:
alloc_struct	my_project/libgit2/tests/util/vector.c	/^static my_struct *alloc_struct(int value)$/;"	f	typeref:typename:my_struct *	file:
alloca	my_project/libgit2/src/cli/opt.c	/^# define alloca /;"	d	file:
allocate_read_only_data	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static sljit_uw * allocate_read_only_data(compiler_common *common, sljit_uw size)$/;"	f	typeref:typename:sljit_uw *	file:
allocate_stack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void allocate_stack(compiler_common *common, int size)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
allocations	my_project/libgit2/src/util/pool.h	/^	git_vector allocations;$/;"	m	struct:__anon2c1ced600208	typeref:typename:git_vector
allow_empty_commit	my_project/libgit2/include/git2/commit.h	/^	unsigned int allow_empty_commit : 1;$/;"	m	struct:__anon3e0cd1e30108	typeref:typename:unsigned int:1
allow_fetch	my_project/libgit2/include/git2/submodule.h	/^	int allow_fetch;$/;"	m	struct:git_submodule_update_options	typeref:typename:int
allow_redirect	my_project/libgit2/src/libgit2/transports/http.c	/^static bool allow_redirect(http_stream *stream)$/;"	f	typeref:typename:bool	file:
allow_zero	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define allow_zero /;"	d	file:
alternative_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *alternative_matchingpath;$/;"	m	struct:bracket_backtrack	typeref:struct:sljit_label *	file:
always_use_long_format	my_project/libgit2/include/git2/describe.h	/^	int always_use_long_format;$/;"	m	struct:__anon07cf78db0208	typeref:typename:int
ambiguous	my_project/libgit2/src/libgit2/status.c	/^	int ambiguous;$/;"	m	struct:status_file_info	typeref:typename:int	file:
analysis_from_branch	my_project/libgit2/tests/libgit2/merge/analysis.c	/^static void analysis_from_branch($/;"	f	typeref:typename:void	file:
ancestor	my_project/libgit2/deps/xdiff/xdiff.h	/^	const char *ancestor;	\/* label for orig *\/$/;"	m	struct:s_xmparam	typeref:typename:const char *
ancestor	my_project/libgit2/include/git2/sys/index.h	/^	char *ancestor;$/;"	m	struct:git_index_name_entry	typeref:typename:char *
ancestor	my_project/libgit2/src/libgit2/checkout.c	/^	const git_index_entry *ancestor;$/;"	m	struct:__anon35c6e5c60308	typeref:typename:const git_index_entry *	file:
ancestor	my_project/libgit2/src/libgit2/merge_driver.h	/^	const git_index_entry *ancestor;$/;"	m	struct:git_merge_driver_source	typeref:typename:const git_index_entry *
ancestor	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^	char ancestor[64];$/;"	m	struct:checkout_name_entry	typeref:typename:char[64]	file:
ancestor	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	struct merge_index_with_status ancestor;$/;"	m	struct:merge_index_conflict_data	typeref:struct:merge_index_with_status
ancestor_entry	my_project/libgit2/src/libgit2/merge.h	/^	git_index_entry ancestor_entry;$/;"	m	struct:__anon7b397d650308	typeref:typename:git_index_entry
ancestor_label	my_project/libgit2/include/git2/checkout.h	/^	const char *ancestor_label; \/**< the name of the common ancestor side of conflicts *\/$/;"	m	struct:git_checkout_options	typeref:typename:const char *
ancestor_label	my_project/libgit2/include/git2/merge.h	/^	const char *ancestor_label;$/;"	m	struct:__anon1374edca0508	typeref:typename:const char *
ancestor_mode	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	unsigned int ancestor_mode;$/;"	m	struct:merge_reuc_entry	typeref:typename:unsigned int
ancestor_oid_str	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	char ancestor_oid_str[GIT_OID_SHA1_HEXSIZE+1];$/;"	m	struct:merge_reuc_entry	typeref:typename:char[]
ancestor_path	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	char ancestor_path[128];$/;"	m	struct:merge_name_entry	typeref:typename:char[128]
anchor	my_project/libgit2/deps/xdiff/xpatience.c	/^		unsigned anchor : 1;$/;"	m	struct:hashmap::entry	typeref:typename:unsigned:1	file:
anchors	my_project/libgit2/deps/xdiff/xdiff.h	/^	char **anchors;$/;"	m	struct:s_xpparam	typeref:typename:char **
anchors_nr	my_project/libgit2/deps/xdiff/xdiff.h	/^	size_t anchors_nr;$/;"	m	struct:s_xpparam	typeref:typename:size_t
ancur	my_project/libgit2/deps/xdiff/xtypes.h	/^	chanode_t *ancur;$/;"	m	struct:s_chastore	typeref:typename:chanode_t *
annotated	my_project/libgit2/examples/merge.c	/^	git_annotated_commit **annotated;$/;"	m	struct:merge_options	typeref:typename:git_annotated_commit **	file:
annotated_commit_cb_data	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^struct annotated_commit_cb_data {$/;"	s	file:
annotated_commit_foreach_cb	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^static int annotated_commit_foreach_cb(const git_oid *oid, void *payload)$/;"	f	typeref:typename:int	file:
annotated_commit_init	my_project/libgit2/src/libgit2/annotated_commit.c	/^static int annotated_commit_init($/;"	f	typeref:typename:int	file:
annotated_commit_init_from_id	my_project/libgit2/src/libgit2/annotated_commit.c	/^static int annotated_commit_init_from_id($/;"	f	typeref:typename:int	file:
annotated_count	my_project/libgit2/examples/merge.c	/^	size_t annotated_count;$/;"	m	struct:merge_options	typeref:typename:size_t	file:
annotated_object_sha	my_project/libgit2/tests/libgit2/notes/notes.c	/^	const char *annotated_object_sha;$/;"	m	struct:__anon150e507c0108	typeref:typename:const char *	file:
any_left_hand_identifier	my_project/libgit2/src/libgit2/revparse.c	/^static bool any_left_hand_identifier(git_object *object, git_reference *reference, size_t identi/;"	f	typeref:typename:bool	file:
anynewline	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *anynewline;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
append_abbreviated_oid	my_project/libgit2/src/libgit2/stash.c	/^static int append_abbreviated_oid(git_str *out, const git_oid *b_commit)$/;"	f	typeref:typename:int	file:
append_body	my_project/libgit2/src/libgit2/email.c	/^static int append_body(git_str *out, const char *body)$/;"	f	typeref:typename:int	file:
append_ceiling_dir	my_project/libgit2/tests/libgit2/repo/discover.c	/^static void append_ceiling_dir(git_str *ceiling_dirs, const char *path)$/;"	f	typeref:typename:void	file:
append_commit_description	my_project/libgit2/src/libgit2/stash.c	/^static int append_commit_description(git_str *out, git_commit *commit)$/;"	f	typeref:typename:int	file:
append_date	my_project/libgit2/src/libgit2/email.c	/^static int append_date($/;"	f	typeref:typename:int	file:
append_diffstat	my_project/libgit2/src/libgit2/email.c	/^static int append_diffstat(git_str *out, git_diff *diff)$/;"	f	typeref:typename:int	file:
append_entry	my_project/libgit2/src/libgit2/tree.c	/^static int append_entry($/;"	f	typeref:typename:int	file:
append_header	my_project/libgit2/src/libgit2/email.c	/^static int append_header($/;"	f	typeref:typename:int	file:
append_patches	my_project/libgit2/src/libgit2/email.c	/^static int append_patches(git_str *out, git_diff *diff)$/;"	f	typeref:typename:int	file:
append_prefix	my_project/libgit2/src/libgit2/email.c	/^static int append_prefix($/;"	f	typeref:typename:int	file:
append_subdir	my_project/libgit2/src/libgit2/sysdir.c	/^static int append_subdir(git_str *out, git_str *path, const char *subdir)$/;"	f	typeref:typename:int	file:
append_subject	my_project/libgit2/src/libgit2/email.c	/^static int append_subject($/;"	f	typeref:typename:int	file:
append_symref	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int append_symref(const char **out, git_vector *symrefs, const char *ptr)$/;"	f	typeref:typename:int	file:
append_to_pack	my_project/libgit2/src/libgit2/indexer.c	/^static int append_to_pack(git_indexer *idx, const void *data, size_t size)$/;"	f	typeref:typename:int	file:
append_user_agent	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int append_user_agent(git_str *buf)$/;"	f	typeref:typename:int	file:
apply	my_project/libgit2/include/git2/sys/filter.h	/^	git_filter_apply_fn    apply;$/;"	m	struct:git_filter	typeref:typename:git_filter_apply_fn
apply	my_project/libgit2/include/git2/sys/merge.h	/^	git_merge_driver_apply_fn    apply;$/;"	m	struct:git_merge_driver	typeref:typename:git_merge_driver_apply_fn
apply_binary	my_project/libgit2/src/libgit2/apply.c	/^static int apply_binary($/;"	f	typeref:typename:int	file:
apply_binary_delta	my_project/libgit2/src/libgit2/apply.c	/^static int apply_binary_delta($/;"	f	typeref:typename:int	file:
apply_buf	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^static int apply_buf($/;"	f	typeref:typename:int	file:
apply_buf	my_project/libgit2/tests/libgit2/apply/partial.c	/^static int apply_buf($/;"	f	typeref:typename:int	file:
apply_credentials	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int apply_credentials($/;"	f	typeref:typename:int	file:
apply_credentials	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int apply_credentials($/;"	f	typeref:typename:int	file:
apply_default_credentials	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int apply_default_credentials(HINTERNET request, DWORD target, int mechanisms)$/;"	f	typeref:typename:int	file:
apply_deltas	my_project/libgit2/src/libgit2/apply.c	/^static int apply_deltas($/;"	f	typeref:typename:int	file:
apply_each_file	my_project/libgit2/src/libgit2/index.c	/^static int apply_each_file(const git_diff_delta *delta, float progress, void *payload)$/;"	f	typeref:typename:int	file:
apply_err	my_project/libgit2/src/libgit2/apply.c	/^static int apply_err(const char *fmt, ...)$/;"	f	typeref:typename:int	file:
apply_gitbuf	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^static int apply_gitbuf($/;"	f	typeref:typename:int	file:
apply_hunk	my_project/libgit2/src/libgit2/apply.c	/^static int apply_hunk($/;"	f	typeref:typename:int	file:
apply_hunks	my_project/libgit2/src/libgit2/apply.c	/^static int apply_hunks($/;"	f	typeref:typename:int	file:
apply_hunks_ctx	my_project/libgit2/src/libgit2/apply.c	/^} apply_hunks_ctx;$/;"	t	typeref:struct:__anonf90645360208	file:
apply_insteadof	my_project/libgit2/src/libgit2/remote.c	/^static int apply_insteadof(char **out, git_config *config, const char *url, int direction, bool /;"	f	typeref:typename:int	file:
apply_one	my_project/libgit2/src/libgit2/apply.c	/^static int apply_one($/;"	f	typeref:typename:int	file:
apply_patchfile	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^static int apply_patchfile($/;"	f	typeref:typename:int	file:
apply_proxy_credentials	my_project/libgit2/src/libgit2/transports/httpclient.c	/^GIT_INLINE(int) apply_proxy_credentials($/;"	f	typeref:typename:int
apply_server_credentials	my_project/libgit2/src/libgit2/transports/httpclient.c	/^GIT_INLINE(int) apply_server_credentials($/;"	f	typeref:typename:int
apply_splits_and_deletes	my_project/libgit2/src/libgit2/diff_tform.c	/^static int apply_splits_and_deletes($/;"	f	typeref:typename:int	file:
apply_url_credentials	my_project/libgit2/src/libgit2/transports/http.c	/^static int apply_url_credentials($/;"	f	typeref:typename:int	file:
apply_userpass_credentials	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int apply_userpass_credentials(HINTERNET request, DWORD target, int mechanisms, git_crede/;"	f	typeref:typename:int	file:
appname	my_project/libgit2/src/util/win32/process.c	/^	wchar_t *appname;$/;"	m	struct:git_process	typeref:typename:wchar_t *	file:
approxidate_alpha	my_project/libgit2/src/util/date.c	/^static const char *approxidate_alpha(const char *date, struct tm *tm, struct tm *now, int *num, /;"	f	typeref:typename:const char *	file:
approxidate_digit	my_project/libgit2/src/util/date.c	/^static const char *approxidate_digit(const char *date, struct tm *tm, int *num)$/;"	f	typeref:typename:const char *	file:
approxidate_str	my_project/libgit2/src/util/date.c	/^static git_time_t approxidate_str(const char *date,$/;"	f	typeref:typename:git_time_t	file:
are_symlinks_supported	my_project/libgit2/src/libgit2/repository.c	/^static bool are_symlinks_supported(const char *wd_path, bool use_env)$/;"	f	typeref:typename:bool	file:
arg	my_project/libgit2/src/cli/opt.h	/^	char *arg;$/;"	m	struct:cli_opt	typeref:typename:char *
arg_idx	my_project/libgit2/src/cli/opt.h	/^	size_t arg_idx;$/;"	m	struct:cli_opt_parser	typeref:typename:size_t
argc	my_project/libgit2/examples/args.h	/^	int    argc;$/;"	m	struct:args_info	typeref:typename:int
argc	my_project/libgit2/examples/remote.c	/^	int argc;$/;"	m	struct:remote_opts	typeref:typename:int	file:
argc	my_project/libgit2/examples/stash.c	/^	int argc;$/;"	m	struct:opts	typeref:typename:int	file:
args	my_project/libgit2/.vscode/launch.json	/^            "args": [],$/;"	a	object:configurations.0
args	my_project/libgit2/src/cli/common.h	/^	char **args;$/;"	m	struct:__anonfdaa9e490108	typeref:typename:char **
args	my_project/libgit2/src/cli/main.c	/^static char **args = NULL;$/;"	v	typeref:typename:char **	file:
args	my_project/libgit2/src/cli/opt.h	/^	char **args;$/;"	m	struct:cli_opt_parser	typeref:typename:char **
args	my_project/libgit2/src/libgit2/commit.c	/^	va_list args;$/;"	m	struct:__anon9e6354d90108	typeref:typename:va_list	file:
args	my_project/libgit2/src/util/unix/process.c	/^	char **args;$/;"	m	struct:git_process	typeref:typename:char **	file:
args	my_project/libgit2/tests/clar/generate.py	/^    options, args = parser.parse_args()$/;"	v
args_info	my_project/libgit2/examples/args.h	/^struct args_info {$/;"	s
args_info	my_project/libgit2/examples/tag.c	/^typedef struct args_info args_info;$/;"	t	typeref:struct:args_info	file:
args_len	my_project/libgit2/src/cli/common.h	/^	int args_len;$/;"	m	struct:__anonfdaa9e490108	typeref:typename:int
args_len	my_project/libgit2/src/cli/opt.h	/^	size_t args_len;$/;"	m	struct:cli_opt	typeref:typename:size_t
args_len	my_project/libgit2/src/cli/opt.h	/^	size_t args_len;$/;"	m	struct:cli_opt_parser	typeref:typename:size_t
argv	my_project/libgit2/examples/args.h	/^	char **argv;$/;"	m	struct:args_info	typeref:typename:char **
argv	my_project/libgit2/examples/remote.c	/^	char **argv;$/;"	m	struct:remote_opts	typeref:typename:char **	file:
argv	my_project/libgit2/examples/stash.c	/^	char **argv;$/;"	m	struct:opts	typeref:typename:char **	file:
as_path	my_project/libgit2/src/libgit2/diff_file.h	/^	const char *as_path;$/;"	m	struct:__anonffb6e84d0208	typeref:typename:const char *
asbyte	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u8 asbyte;$/;"	m	union:compare_context::__anon4bd17169040a	typeref:typename:sljit_u8	file:
asbyte	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u8 asbyte;$/;"	m	union:compare_context::__anon4bd17169050a	typeref:typename:sljit_u8	file:
asint	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_s32 asint;$/;"	m	union:compare_context::__anon4bd17169040a	typeref:typename:sljit_s32	file:
asint	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_s32 asint;$/;"	m	union:compare_context::__anon4bd17169050a	typeref:typename:sljit_s32	file:
asize	my_project/libgit2/script/user_model.c	/^	size_t asize, size;$/;"	m	struct:git_buf	typeref:typename:size_t	file:
asize	my_project/libgit2/src/libgit2/hashsig.c	/^	int size, asize;$/;"	m	struct:__anon8885faf70108	typeref:typename:int	file:
asize	my_project/libgit2/src/util/str.h	/^	size_t asize;$/;"	m	struct:git_str	typeref:typename:size_t
ask	my_project/libgit2/examples/common.c	/^static int ask(char **out, const char *prompt, char optional)$/;"	f	typeref:typename:int	file:
assert	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    assert_backtrack *assert;$/;"	m	union:bracket_backtrack::__anon4bd17169010a	typeref:typename:assert_backtrack *	file:
assert__submodule_exists	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.c	/^void assert__submodule_exists($/;"	f	typeref:typename:void
assert_absent	my_project/libgit2/tests/util/memmem.c	/^static void assert_absent(const char *haystack, const char *needle)$/;"	f	typeref:typename:void	file:
assert_ack_parses	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^static void assert_ack_parses(const char *line, const char *expected_oid, enum git_ack_status ex/;"	f	typeref:typename:void	file:
assert_add_bypath_fails	my_project/libgit2/tests/libgit2/index/tests.c	/^static void assert_add_bypath_fails(git_repository *repo, const char *fn)$/;"	f	typeref:typename:void	file:
assert_add_bypath_fails	my_project/libgit2/tests/libgit2/index/tests256.c	/^static void assert_add_bypath_fails(git_repository *repo, const char *fn)$/;"	f	typeref:typename:void	file:
assert_add_fails	my_project/libgit2/tests/libgit2/index/tests.c	/^static void assert_add_fails(git_repository *repo, const char *fn)$/;"	f	typeref:typename:void	file:
assert_add_fails	my_project/libgit2/tests/libgit2/index/tests256.c	/^static void assert_add_fails(git_repository *repo, const char *fn)$/;"	f	typeref:typename:void	file:
assert_all_refnames_match	my_project/libgit2/tests/libgit2/refs/iterator.c	/^static void assert_all_refnames_match(const char **expected, git_vector *names)$/;"	f	typeref:typename:void	file:
assert_allowed	my_project/libgit2/tests/libgit2/object/tree/write.c	/^#define assert_allowed(/;"	d	file:
assert_appends	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^static void assert_appends(const git_signature *committer, const git_oid *oid)$/;"	f	typeref:typename:void	file:
assert_at_end	my_project/libgit2/tests/libgit2/iterator/iterator_helpers.c	/^static void assert_at_end(git_iterator *i, bool verbose)$/;"	f	typeref:typename:void	file:
assert_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct assert_backtrack {$/;"	s	file:
assert_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} assert_backtrack;$/;"	t	typeref:struct:assert_backtrack	file:
assert_binary_blobs_comparison	my_project/libgit2/tests/libgit2/diff/blob.c	/^static void assert_binary_blobs_comparison(diff_expects *expected)$/;"	f	typeref:typename:void	file:
assert_blob_creation	my_project/libgit2/tests/libgit2/object/blob/write.c	/^static void assert_blob_creation(const char *path_to_file, const char *blob_from_path, blob_crea/;"	f	typeref:typename:void	file:
assert_blob_oid	my_project/libgit2/tests/libgit2/stash/save.c	/^static void assert_blob_oid(const char* revision, const char* expected_oid)$/;"	f	typeref:typename:void	file:
assert_branch_has_been_found	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^static void assert_branch_has_been_found(struct expectations *findings, const char* expected_bra/;"	f	typeref:typename:void	file:
assert_branch_matches_name	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^static void assert_branch_matches_name($/;"	f	typeref:typename:void	file:
assert_called_notifications	my_project/libgit2/tests/libgit2/diff/notify.c	/^static int assert_called_notifications($/;"	f	typeref:typename:int	file:
assert_changed_single_one_line_file	my_project/libgit2/tests/libgit2/diff/blob.c	/^static void assert_changed_single_one_line_file($/;"	f	typeref:typename:void	file:
assert_checked_out	my_project/libgit2/tests/libgit2/refs/branches/checkedout.c	/^static void assert_checked_out(git_repository *repo, const char *branch, int checked_out)$/;"	f	typeref:typename:void	file:
assert_cmdline	my_project/libgit2/tests/util/process/win32.c	/^# define assert_cmdline(/;"	d	file:
assert_comment_parses	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^static void assert_comment_parses(const char *line, const char *expected_comment)$/;"	f	typeref:typename:void	file:
assert_commit_body	my_project/libgit2/tests/libgit2/commit/commit.c	/^static void assert_commit_body(const char *expected, const char *given)$/;"	f	typeref:typename:void	file:
assert_commit_fails	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^static void assert_commit_fails($/;"	f	typeref:typename:void	file:
assert_commit_is_head	my_project/libgit2/tests/libgit2/object/commit/commitstagedfile.c	/^#define assert_commit_is_head(/;"	d	file:
assert_commit_is_head_	my_project/libgit2/tests/libgit2/object/commit/commitstagedfile.c	/^static void assert_commit_is_head_(git_commit *c, const char *file, const char *func, int line)$/;"	f	typeref:typename:void	file:
assert_commit_message_contains	my_project/libgit2/tests/libgit2/stash/save.c	/^static void assert_commit_message_contains(const char *revision, const char *fragment)$/;"	f	typeref:typename:void	file:
assert_commit_parses	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^static void assert_commit_parses($/;"	f	typeref:typename:void	file:
assert_commit_summary	my_project/libgit2/tests/libgit2/commit/commit.c	/^static void assert_commit_summary(const char *expected, const char *given)$/;"	f	typeref:typename:void	file:
assert_commit_tree_has_n_entries	my_project/libgit2/tests/libgit2/object/commit/commitstagedfile.c	/^static void assert_commit_tree_has_n_entries(git_commit *c, int count)$/;"	f	typeref:typename:void	file:
assert_common_dirlen	my_project/libgit2/tests/util/path/core.c	/^#define assert_common_dirlen(/;"	d	file:
assert_condition_includes	my_project/libgit2/tests/libgit2/config/conditionals.c	/^static void assert_condition_includes(const char *keyword, const char *path, bool expected)$/;"	f	typeref:typename:void	file:
assert_config_contains	my_project/libgit2/tests/libgit2/config/memory.c	/^static void assert_config_contains(git_config_backend *backend,$/;"	f	typeref:typename:void	file:
assert_config_contains_all	my_project/libgit2/tests/libgit2/config/memory.c	/^static void assert_config_contains_all(git_config_backend *backend,$/;"	f	typeref:typename:void	file:
assert_config_entry_existence	my_project/libgit2/tests/libgit2/config/config_helpers.c	/^void assert_config_entry_existence($/;"	f	typeref:typename:void
assert_config_entry_on_init	my_project/libgit2/tests/libgit2/repo/init.c	/^static void assert_config_entry_on_init($/;"	f	typeref:typename:void	file:
assert_config_entry_on_init_bytype	my_project/libgit2/tests/libgit2/repo/init.c	/^static void assert_config_entry_on_init_bytype($/;"	f	typeref:typename:void	file:
assert_config_entry_value	my_project/libgit2/tests/libgit2/config/config_helpers.c	/^void assert_config_entry_value($/;"	f	typeref:typename:void
assert_config_match	my_project/libgit2/tests/libgit2/remote/httpproxy.c	/^static void assert_config_match(const char *config, const char *expected)$/;"	f	typeref:typename:void	file:
assert_config_value	my_project/libgit2/tests/libgit2/config/stress.c	/^static void assert_config_value(git_config *config, const char *key, const char *value)$/;"	f	typeref:typename:void	file:
assert_conflict	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static void assert_conflict($/;"	f	typeref:typename:void	file:
assert_content_in_index	my_project/libgit2/tests/libgit2/reset/default.c	/^static void assert_content_in_index($/;"	f	typeref:typename:void	file:
assert_correct_reflog	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^static void assert_correct_reflog(const char *name)$/;"	f	typeref:typename:void	file:
assert_data_pkt_parses	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^static void assert_data_pkt_parses(const char *line, const char *expected_data, size_t expected_/;"	f	typeref:typename:void	file:
assert_default_branch	my_project/libgit2/tests/libgit2/network/remote/defaultbranch.c	/^static void assert_default_branch(const char *should)$/;"	f	typeref:typename:void	file:
assert_delta_binary	my_project/libgit2/tests/libgit2/diff/workdir.c	/^static void assert_delta_binary(git_diff *diff, size_t idx, int is_binary)$/;"	f	typeref:typename:void	file:
assert_depth	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int  assert_depth;                \/* Depth of nested assertions *\/$/;"	m	struct:compile_data	typeref:typename:int
assert_describe	my_project/libgit2/tests/libgit2/describe/describe_helpers.c	/^void assert_describe($/;"	f	typeref:typename:void
assert_describe_workdir	my_project/libgit2/tests/libgit2/describe/describe_helpers.c	/^void assert_describe_workdir($/;"	f	typeref:typename:void
assert_dir_exists	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^static void assert_dir_exists(const char *path)$/;"	f	typeref:typename:void	file:
assert_email_match	my_project/libgit2/tests/libgit2/diff/format_email.c	/^static void assert_email_match($/;"	f	typeref:typename:void	file:
assert_email_match	my_project/libgit2/tests/libgit2/email/create.c	/^static void assert_email_match($/;"	f	typeref:typename:void	file:
assert_error_parses	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^static void assert_error_parses(const char *line, const char *expected_error, size_t expected_le/;"	f	typeref:typename:void	file:
assert_examples	my_project/libgit2/tests/libgit2/attr/file.c	/^static void assert_examples(git_attr_file *file)$/;"	f	typeref:typename:void	file:
assert_file_exists	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^static void assert_file_exists(const char *path)$/;"	f	typeref:typename:void	file:
assert_flush_parses	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^static void assert_flush_parses(const char *line)$/;"	f	typeref:typename:void	file:
assert_found	my_project/libgit2/tests/util/memmem.c	/^static void assert_found(const char *haystack, const char *needle, size_t expected_pos)$/;"	f	typeref:typename:void	file:
assert_found_objects	my_project/libgit2/tests/libgit2/odb/mixed.c	/^static void assert_found_objects(git_odb_expand_id *ids)$/;"	f	typeref:typename:void	file:
assert_global_config_match	my_project/libgit2/tests/libgit2/remote/httpproxy.c	/^static void assert_global_config_match(const char *config, const char *expected)$/;"	f	typeref:typename:void	file:
assert_graft_contains	my_project/libgit2/tests/libgit2/grafts/parse.c	/^static void assert_graft_contains(git_grafts *grafts, const char *graft, size_t n, ...)$/;"	f	typeref:typename:void	file:
assert_hard_link	my_project/libgit2/tests/util/copy.c	/^static void assert_hard_link(const char *path)$/;"	f	typeref:typename:void	file:
assert_has_reflog	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^static void assert_has_reflog(bool expected_result, const char *name)$/;"	f	typeref:typename:void	file:
assert_head_is_correctly_detached	my_project/libgit2/tests/libgit2/repo/head.c	/^static void assert_head_is_correctly_detached(void)$/;"	f	typeref:typename:void	file:
assert_hooks_match	my_project/libgit2/tests/libgit2/repo/template.c	/^static void assert_hooks_match($/;"	f	typeref:typename:void	file:
assert_identical_blobs_comparison	my_project/libgit2/tests/libgit2/diff/blob.c	/^static void assert_identical_blobs_comparison(diff_expects *expected)$/;"	f	typeref:typename:void	file:
assert_ignore_case	my_project/libgit2/tests/libgit2/status/worktree.c	/^static void assert_ignore_case($/;"	f	typeref:typename:void	file:
assert_ignore_change	my_project/libgit2/tests/libgit2/submodule/modify.c	/^static void assert_ignore_change(git_submodule_ignore_t ignore)$/;"	f	typeref:typename:void	file:
assert_ignored	my_project/libgit2/tests/libgit2/ignore/status.c	/^#define assert_ignored(/;"	d	file:
assert_ignored_	my_project/libgit2/tests/libgit2/ignore/status.c	/^static void assert_ignored_($/;"	f	typeref:typename:void	file:
assert_invalid_config_key_name	my_project/libgit2/tests/libgit2/config/validkeyname.c	/^static void assert_invalid_config_key_name(const char *name)$/;"	f	typeref:typename:void	file:
assert_invalid_config_section_name	my_project/libgit2/tests/libgit2/config/rename.c	/^static void assert_invalid_config_section_name($/;"	f	typeref:typename:void	file:
assert_invalid_rtransform	my_project/libgit2/tests/libgit2/network/refspecs.c	/^static void assert_invalid_rtransform(const char *refspec, const char *name)$/;"	f	typeref:typename:void	file:
assert_invalid_single_spec	my_project/libgit2/tests/libgit2/refs/revparse.c	/^static void assert_invalid_single_spec(const char *invalid_spec)$/;"	f	typeref:typename:void	file:
assert_invalid_transform	my_project/libgit2/tests/libgit2/network/refspecs.c	/^static void assert_invalid_transform(const char *refspec, const char *name)$/;"	f	typeref:typename:void	file:
assert_is_branch	my_project/libgit2/tests/libgit2/refs/read.c	/^static void assert_is_branch(const char *name, bool expected_branchness)$/;"	f	typeref:typename:void	file:
assert_is_ignored	my_project/libgit2/tests/libgit2/ignore/path.c	/^#define assert_is_ignored(/;"	d	file:
assert_is_ignored	my_project/libgit2/tests/libgit2/ignore/status.c	/^#define assert_is_ignored(/;"	d	file:
assert_is_ignored_	my_project/libgit2/tests/libgit2/ignore/path.c	/^static void assert_is_ignored_($/;"	f	typeref:typename:void	file:
assert_is_note	my_project/libgit2/tests/libgit2/refs/read.c	/^static void assert_is_note(const char *name, bool expected_noteness)$/;"	f	typeref:typename:void	file:
assert_is_tag	my_project/libgit2/tests/libgit2/refs/read.c	/^static void assert_is_tag(const char *name, bool expected_tagness)$/;"	f	typeref:typename:void	file:
assert_l32_fails	my_project/libgit2/tests/util/strtol.c	/^static void assert_l32_fails(const char *string, int base)$/;"	f	typeref:typename:void	file:
assert_l32_parses	my_project/libgit2/tests/util/strtol.c	/^static void assert_l32_parses(const char *string, int32_t expected, int base)$/;"	f	typeref:typename:void	file:
assert_l64_fails	my_project/libgit2/tests/util/strtol.c	/^static void assert_l64_fails(const char *string, int base)$/;"	f	typeref:typename:void	file:
assert_l64_parses	my_project/libgit2/tests/util/strtol.c	/^static void assert_l64_parses(const char *string, int64_t expected, int base)$/;"	f	typeref:typename:void	file:
assert_longpath_status_and_add	my_project/libgit2/tests/libgit2/win32/longpath.c	/^static void assert_longpath_status_and_add(git_repository *repo, const char *wddata, const char /;"	f	typeref:typename:void	file:
assert_master_for_merge	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static int assert_master_for_merge(const char *ref, const char *url, const git_oid *id, unsigned/;"	f	typeref:typename:int	file:
assert_matches	my_project/libgit2/tests/util/wildmatch.c	/^#define assert_matches(/;"	d	file:
assert_matches_	my_project/libgit2/tests/util/wildmatch.c	/^static void assert_matches_(const char *string, const char *pattern,$/;"	f	typeref:typename:void	file:
assert_merge_and_or_remote_key_missing	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^static void assert_merge_and_or_remote_key_missing(git_repository *repository, const git_commit /;"	f	typeref:typename:void	file:
assert_mergebase_many	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^static void assert_mergebase_many(const char *expected_sha, int count, ...)$/;"	f	typeref:typename:void	file:
assert_mergebase_octopus	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^static void assert_mergebase_octopus(const char *expected_sha, int count, ...)$/;"	f	typeref:typename:void	file:
assert_message_prettifying	my_project/libgit2/tests/libgit2/object/message.c	/^static void assert_message_prettifying(char *expected_output, char *input, int strip_comments)$/;"	f	typeref:typename:void	file:
assert_mode_seems_okay	my_project/libgit2/tests/libgit2/repo/template.c	/^static void assert_mode_seems_okay($/;"	f	typeref:typename:void	file:
assert_nak_parses	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^static void assert_nak_parses(const char *line)$/;"	f	typeref:typename:void	file:
assert_name_and_email	my_project/libgit2/tests/libgit2/commit/signature.c	/^static void assert_name_and_email($/;"	f	typeref:typename:void	file:
assert_name_is	my_project/libgit2/tests/libgit2/checkout/icase.c	/^static void assert_name_is(const char *expected)$/;"	f	typeref:typename:void	file:
assert_named_chunked_blob	my_project/libgit2/tests/libgit2/object/blob/fromstream.c	/^static void assert_named_chunked_blob(const char *expected_sha, const char *fake_name)$/;"	f	typeref:typename:void	file:
assert_needs_str_ptr_saving	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE BOOL assert_needs_str_ptr_saving(pcre_uchar *cc)$/;"	f	typeref:typename:SLJIT_INLINE BOOL	file:
assert_ng_parses	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^static void assert_ng_parses(const char *line, const char *expected_ref, const char *expected_ms/;"	f	typeref:typename:void	file:
assert_no_reflog_update	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^static void assert_no_reflog_update(void)$/;"	f	typeref:typename:void	file:
assert_none_for_merge	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static int assert_none_for_merge(const char *ref, const char *url, const git_oid *id, unsigned i/;"	f	typeref:typename:int	file:
assert_note_equal	my_project/libgit2/tests/libgit2/notes/notes.c	/^static void assert_note_equal(git_note *note, char *message, git_oid *note_oid) {$/;"	f	typeref:typename:void	file:
assert_notes_seen	my_project/libgit2/tests/libgit2/notes/notes.c	/^static void assert_notes_seen(struct note_create_payload payload[], size_t n)$/;"	f	typeref:typename:void	file:
assert_notfound_objects	my_project/libgit2/tests/libgit2/odb/mixed.c	/^static void assert_notfound_objects(git_odb_expand_id *ids)$/;"	f	typeref:typename:void	file:
assert_nth_gen_parent	my_project/libgit2/tests/libgit2/commit/parent.c	/^static void assert_nth_gen_parent(unsigned int gen, const char *expected_oid)$/;"	f	typeref:typename:void	file:
assert_object_contains	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^static void assert_object_contains(git_odb_object *obj, const char *expected)$/;"	f	typeref:typename:void	file:
assert_object_oid	my_project/libgit2/tests/libgit2/stash/save.c	/^static void assert_object_oid(const char* revision, const char* expected_oid, git_object_t type)$/;"	f	typeref:typename:void	file:
assert_ok_parses	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^static void assert_ok_parses(const char *line, const char *expected_ref)$/;"	f	typeref:typename:void	file:
assert_on_branch	my_project/libgit2/tests/libgit2/checkout/checkout_helpers.c	/^void assert_on_branch(git_repository *repo, const char *branch)$/;"	f	typeref:typename:void
assert_one_modified	my_project/libgit2/tests/libgit2/diff/blob.c	/^static void assert_one_modified($/;"	f	typeref:typename:void	file:
assert_one_modified_with_lines	my_project/libgit2/tests/libgit2/diff/blob.c	/^static void assert_one_modified_with_lines(diff_expects *expected, int lines)$/;"	f	typeref:typename:void	file:
assert_parse_fails	my_project/libgit2/tests/libgit2/grafts/parse.c	/^static void assert_parse_fails(git_grafts *grafts, const char *string)$/;"	f	typeref:typename:void	file:
assert_parse_succeeds	my_project/libgit2/tests/libgit2/grafts/parse.c	/^static void assert_parse_succeeds(git_grafts *grafts, const char *string, size_t n)$/;"	f	typeref:typename:void	file:
assert_patch_matches_blobs	my_project/libgit2/tests/libgit2/diff/blob.c	/^static void assert_patch_matches_blobs($/;"	f	typeref:typename:void	file:
assert_peel	my_project/libgit2/tests/libgit2/object/peel.c	/^static void assert_peel($/;"	f	typeref:typename:void	file:
assert_peel	my_project/libgit2/tests/libgit2/refs/peel.c	/^static void assert_peel($/;"	f	typeref:typename:void	file:
assert_peel_error	my_project/libgit2/tests/libgit2/object/peel.c	/^static void assert_peel_error(int error, const char *sha, git_object_t requested_type)$/;"	f	typeref:typename:void	file:
assert_peel_error	my_project/libgit2/tests/libgit2/refs/peel.c	/^static void assert_peel_error(int error, const char *ref_name, git_object_t requested_type)$/;"	f	typeref:typename:void	file:
assert_peel_generic	my_project/libgit2/tests/libgit2/refs/peel.c	/^static void assert_peel_generic($/;"	f	typeref:typename:void	file:
assert_pkt_fails	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^static void assert_pkt_fails(const char *line)$/;"	f	typeref:typename:void	file:
assert_proper_normalization	my_project/libgit2/tests/libgit2/attr/repo.c	/^static void assert_proper_normalization(git_index *index, const char *filename, const char *expe/;"	f	typeref:typename:void	file:
assert_proxy_is	my_project/libgit2/tests/libgit2/remote/httpproxy.c	/^static void assert_proxy_is(const char *expected)$/;"	f	typeref:typename:void	file:
assert_recurse_change	my_project/libgit2/tests/libgit2/submodule/modify.c	/^static void assert_recurse_change(git_submodule_recurse_t recurse)$/;"	f	typeref:typename:void	file:
assert_ref_exists	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^static void assert_ref_exists(git_repository *repo, const char *name)$/;"	f	typeref:typename:void	file:
assert_ref_parses	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^#define assert_ref_parses(/;"	d	file:
assert_ref_parses_	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^static void assert_ref_parses_(const char *line, size_t linelen, const char *expected_oid,$/;"	f	typeref:typename:void	file:
assert_refspec	my_project/libgit2/tests/libgit2/network/refspecs.c	/^static void assert_refspec(unsigned int direction, const char *input, bool is_expected_to_be_val/;"	f	typeref:typename:void	file:
assert_repo_state	my_project/libgit2/tests/libgit2/repo/state.c	/^static void assert_repo_state(git_repository_state_t state)$/;"	f	typeref:typename:void	file:
assert_reset_soft	my_project/libgit2/tests/libgit2/reset/soft.c	/^static void assert_reset_soft(bool should_be_detached)$/;"	f	typeref:typename:void	file:
assert_resolve_relative	my_project/libgit2/tests/util/path/core.c	/^static void assert_resolve_relative($/;"	f	typeref:typename:void	file:
assert_retrieval	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^static void assert_retrieval(unsigned int flags, unsigned int expected_count)$/;"	f	typeref:typename:void	file:
assert_retrieval	my_project/libgit2/tests/libgit2/refs/foreachglob.c	/^static void assert_retrieval(const char *glob, int expected_count)$/;"	f	typeref:typename:void	file:
assert_shorthand	my_project/libgit2/tests/libgit2/refs/shorthand.c	/^static void assert_shorthand(git_repository *repo, const char *refname, const char *shorthand)$/;"	f	typeref:typename:void	file:
assert_show	my_project/libgit2/tests/libgit2/status/worktree.c	/^static void assert_show($/;"	f	typeref:typename:void	file:
assert_sideband_progress_parses	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^static void assert_sideband_progress_parses(const char *line, const char *expected_data, size_t /;"	f	typeref:typename:void	file:
assert_signature	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^static void assert_signature(const git_signature *expected, const git_signature *actual)$/;"	f	typeref:typename:void	file:
assert_sm_valid	my_project/libgit2/tests/libgit2/submodule/open.c	/^static void assert_sm_valid(git_repository *parent, git_repository *child, const char *sm_name)$/;"	f	typeref:typename:void	file:
assert_sorted	my_project/libgit2/tests/util/qsort.c	/^#define assert_sorted(/;"	d	file:
assert_status	my_project/libgit2/tests/libgit2/stash/stash_helpers.c	/^void assert_status($/;"	f	typeref:typename:void
assert_status_entrycount	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static void assert_status_entrycount(git_repository *repo, size_t count)$/;"	f	typeref:typename:void	file:
assert_subject_match	my_project/libgit2/tests/libgit2/email/create.c	/^static void assert_subject_match($/;"	f	typeref:typename:void	file:
assert_submodule_exists	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.h	/^#define assert_submodule_exists(/;"	d
assert_submodule_url	my_project/libgit2/tests/libgit2/submodule/add.c	/^static void assert_submodule_url(const char* name, const char *url)$/;"	f	typeref:typename:void	file:
assert_submodule_url_is_synced	my_project/libgit2/tests/libgit2/submodule/modify.c	/^static void assert_submodule_url_is_synced($/;"	f	typeref:typename:void	file:
assert_tag_fails	my_project/libgit2/tests/libgit2/object/tag/parse.c	/^static void assert_tag_fails(const char *data, size_t datalen)$/;"	f	typeref:typename:void	file:
assert_tag_parses	my_project/libgit2/tests/libgit2/object/tag/parse.c	/^static void assert_tag_parses(const char *data, size_t datalen,$/;"	f	typeref:typename:void	file:
assert_trailers	my_project/libgit2/tests/libgit2/message/trailer.c	/^static void assert_trailers(const char *message, git_message_trailer *trailers)$/;"	f	typeref:typename:void	file:
assert_tree_fails	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^static void assert_tree_fails(const char *data, size_t datalen)$/;"	f	typeref:typename:void	file:
assert_tree_from_path	my_project/libgit2/tests/libgit2/object/tree/frompath.c	/^static void assert_tree_from_path($/;"	f	typeref:typename:void	file:
assert_tree_parses	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^static void assert_tree_parses(const char *data, size_t datalen,$/;"	f	typeref:typename:void	file:
assert_unescape	my_project/libgit2/tests/util/gitstr.c	/^static void assert_unescape(char *expected, char *to_unescape) {$/;"	f	typeref:typename:void	file:
assert_unpack_parses	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^static void assert_unpack_parses(const char *line, bool ok)$/;"	f	typeref:typename:void	file:
assert_update_change	my_project/libgit2/tests/libgit2/submodule/modify.c	/^static void assert_update_change(git_submodule_update_t update)$/;"	f	typeref:typename:void	file:
assert_valid_transform	my_project/libgit2/tests/libgit2/network/refspecs.c	/^static void assert_valid_transform(const char *refspec, const char *name, const char *result)$/;"	f	typeref:typename:void	file:
assert_vector	my_project/libgit2/tests/util/vector.c	/^static void assert_vector(git_vector *x, void *expected[], size_t len)$/;"	f	typeref:typename:void	file:
assert_workdir_matches_tree	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^static void assert_workdir_matches_tree($/;"	f	typeref:typename:void	file:
assert_worktree_valid	my_project/libgit2/tests/libgit2/worktree/open.c	/^static void assert_worktree_valid(git_repository *wt, const char *parentdir, const char *wtdir)$/;"	f	typeref:typename:void	file:
assert_write_fails	my_project/libgit2/tests/libgit2/index/tests.c	/^static void assert_write_fails(git_repository *repo, const char *fn_orig)$/;"	f	typeref:typename:void	file:
assert_write_fails	my_project/libgit2/tests/libgit2/index/tests256.c	/^static void assert_write_fails(git_repository *repo, const char *fn_orig)$/;"	f	typeref:typename:void	file:
assert_zlib_equal	my_project/libgit2/tests/util/zstream.c	/^#define assert_zlib_equal(/;"	d	file:
assert_zlib_equal_	my_project/libgit2/tests/util/zstream.c	/^static void assert_zlib_equal_($/;"	f	typeref:typename:void	file:
assign_commit_parents_from_graft	my_project/libgit2/src/libgit2/commit.c	/^static int assign_commit_parents_from_graft(git_commit *commit, git_commit_graft *graft) {$/;"	f	typeref:typename:int	file:
assigns	my_project/libgit2/src/libgit2/attr_file.h	/^	git_vector assigns;		\/* vector of <git_attr_assignment*> *\/$/;"	m	struct:__anon0df92d8f0408	typeref:typename:git_vector
asuchars	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u16 asuchars[2];$/;"	m	union:compare_context::__anon4bd17169040a	typeref:typename:sljit_u16[2]	file:
asuchars	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u16 asuchars[2];$/;"	m	union:compare_context::__anon4bd17169050a	typeref:typename:sljit_u16[2]	file:
asuchars	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u32 asuchars[1];$/;"	m	union:compare_context::__anon4bd17169040a	typeref:typename:sljit_u32[1]	file:
asuchars	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u32 asuchars[1];$/;"	m	union:compare_context::__anon4bd17169050a	typeref:typename:sljit_u32[1]	file:
asuchars	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u8 asuchars[4];$/;"	m	union:compare_context::__anon4bd17169040a	typeref:typename:sljit_u8[4]	file:
asuchars	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u8 asuchars[4];$/;"	m	union:compare_context::__anon4bd17169050a	typeref:typename:sljit_u8[4]	file:
asushort	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u16 asushort;$/;"	m	union:compare_context::__anon4bd17169040a	typeref:typename:sljit_u16	file:
asushort	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    sljit_u16 asushort;$/;"	m	union:compare_context::__anon4bd17169050a	typeref:typename:sljit_u16	file:
attr	my_project/libgit2/src/libgit2/tree.h	/^	uint16_t attr;$/;"	m	struct:git_tree_entry	typeref:typename:uint16_t
attr	my_project/libgit2/tests/libgit2/attr/attr_expect.h	/^	const char *attr;$/;"	m	struct:attr_expected	typeref:typename:const char *
attr	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^	uint16_t attr;$/;"	m	struct:__anon0731209b0108	typeref:typename:uint16_t	file:
attr	my_project/libgit2/tests/libgit2/object/tree/write.c	/^		unsigned int attr;$/;"	m	struct:test_object_tree_write__sorted_subtrees::__anon490e2c6b0108	typeref:typename:unsigned int	file:
attr	my_project/libgit2/tests/libgit2/object/tree/write.c	/^	unsigned int attr;$/;"	m	struct:__anon490e2c6b0208	typeref:typename:unsigned int	file:
attr_action	my_project/libgit2/src/libgit2/crlf.c	/^	int attr_action; \/* the .gitattributes setting *\/$/;"	m	struct:crlf_attrs	typeref:typename:int	file:
attr_cache__free	my_project/libgit2/src/libgit2/attrcache.c	/^static void attr_cache__free(git_attr_cache *cache)$/;"	f	typeref:typename:void	file:
attr_cache__lookup_path	my_project/libgit2/src/libgit2/attrcache.c	/^static int attr_cache__lookup_path($/;"	f	typeref:typename:int	file:
attr_cache_lock	my_project/libgit2/src/libgit2/attrcache.c	/^GIT_INLINE(int) attr_cache_lock(git_attr_cache *cache)$/;"	f	typeref:typename:int
attr_cache_lookup	my_project/libgit2/src/libgit2/attrcache.c	/^static int attr_cache_lookup($/;"	f	typeref:typename:int	file:
attr_cache_lookup_entry	my_project/libgit2/src/libgit2/attrcache.c	/^GIT_INLINE(git_attr_file_entry *) attr_cache_lookup_entry($/;"	f	typeref:typename:git_attr_file_entry *
attr_cache_make_entry	my_project/libgit2/src/libgit2/attrcache.c	/^static int attr_cache_make_entry($/;"	f	typeref:typename:int	file:
attr_cache_remove	my_project/libgit2/src/libgit2/attrcache.c	/^static int attr_cache_remove(git_attr_cache *cache, git_attr_file *file)$/;"	f	typeref:typename:int	file:
attr_cache_unlock	my_project/libgit2/src/libgit2/attrcache.c	/^GIT_INLINE(void) attr_cache_unlock(git_attr_cache *cache)$/;"	f	typeref:typename:void
attr_cache_upsert	my_project/libgit2/src/libgit2/attrcache.c	/^static int attr_cache_upsert(git_attr_cache *cache, git_attr_file *file)$/;"	f	typeref:typename:int	file:
attr_check_expected	my_project/libgit2/tests/libgit2/attr/attr_expect.h	/^GIT_INLINE(void) attr_check_expected($/;"	f	typeref:typename:void
attr_commit_id	my_project/libgit2/include/git2/attr.h	/^	git_oid attr_commit_id;$/;"	m	struct:__anon790e91d50208	typeref:typename:git_oid
attr_commit_id	my_project/libgit2/include/git2/blob.h	/^	git_oid attr_commit_id;$/;"	m	struct:__anon7acff4790208	typeref:typename:git_oid
attr_commit_id	my_project/libgit2/include/git2/filter.h	/^	git_oid attr_commit_id;$/;"	m	struct:__anon331c2ce00308	typeref:typename:git_oid
attr_decide_sources	my_project/libgit2/src/libgit2/attr.c	/^static int attr_decide_sources($/;"	f	typeref:typename:int	file:
attr_expect_t	my_project/libgit2/tests/libgit2/attr/attr_expect.h	/^enum attr_expect_t {$/;"	g
attr_expected	my_project/libgit2/tests/libgit2/attr/attr_expect.h	/^struct attr_expected {$/;"	s
attr_file_free	my_project/libgit2/src/libgit2/attr_file.c	/^static void attr_file_free(git_attr_file *file)$/;"	f	typeref:typename:void	file:
attr_file_oid_from_index	my_project/libgit2/src/libgit2/attr_file.c	/^static int attr_file_oid_from_index($/;"	f	typeref:typename:int	file:
attr_get_many_info	my_project/libgit2/src/libgit2/attr.c	/^} attr_get_many_info;$/;"	t	typeref:struct:__anon36621a0b0108	file:
attr_session	my_project/libgit2/src/libgit2/attr.c	/^	git_attr_session *attr_session;$/;"	m	struct:__anon36621a0b0208	typeref:typename:git_attr_session *	file:
attr_session	my_project/libgit2/src/libgit2/checkout.c	/^	git_attr_session attr_session;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_attr_session	file:
attr_session	my_project/libgit2/src/libgit2/filter.h	/^	git_attr_session *attr_session;$/;"	m	struct:__anon9372afdb0108	typeref:typename:git_attr_session *
attr_session_key	my_project/libgit2/src/libgit2/repository.h	/^	git_atomic32 attr_session_key;$/;"	m	struct:git_repository	typeref:typename:git_atomic32
attr_setup	my_project/libgit2/src/libgit2/attr.c	/^static int attr_setup($/;"	f	typeref:typename:int	file:
attr_walk_up_info	my_project/libgit2/src/libgit2/attr.c	/^} attr_walk_up_info;$/;"	t	typeref:struct:__anon36621a0b0208	file:
attrcache	my_project/libgit2/src/libgit2/repository.h	/^	git_attr_cache *attrcache;$/;"	m	struct:git_repository	typeref:typename:git_attr_cache *
attrdata	my_project/libgit2/src/libgit2/filter.c	/^	char *attrdata;$/;"	m	struct:__anon9372afd60208	typeref:typename:char *	file:
attributes	my_project/libgit2/include/git2/sys/filter.h	/^	const char            *attributes;$/;"	m	struct:git_filter	typeref:typename:const char *
attributes	my_project/libgit2/src/util/win32/posix_w32.c	/^	DWORD attributes;$/;"	m	struct:open_opts	typeref:typename:DWORD	file:
attrs	my_project/libgit2/src/libgit2/filter.c	/^	const char *attrs[GIT_FLEX_ARRAY];$/;"	m	struct:__anon9372afd60208	typeref:typename:const char * []	file:
attrs	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^	const char *attrs;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
attrs	my_project/libgit2/tests/libgit2/index/crlf.c	/^	const char *attrs;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
attrsession	my_project/libgit2/src/libgit2/diff.h	/^	git_attr_session  attrsession;$/;"	m	struct:git_diff	typeref:typename:git_attr_session
auth_challenges	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_vector auth_challenges;$/;"	m	struct:__anon3d590bbe0108	typeref:typename:git_vector	file:
auth_context	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_http_auth_context *auth_context;$/;"	m	struct:__anon3d590bbe0108	typeref:typename:git_http_auth_context *	file:
auth_mechanisms	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	int auth_mechanisms;$/;"	m	struct:__anon5ba854ad0308	typeref:typename:int	file:
auth_schemes	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static git_http_auth_scheme auth_schemes[] = {$/;"	v	typeref:typename:git_http_auth_scheme[]	file:
auth_schemetypes	my_project/libgit2/src/libgit2/transports/http.c	/^	unsigned auth_schemetypes;$/;"	m	struct:__anon515ae8bf0408	typeref:typename:unsigned	file:
author	my_project/libgit2/examples/log.c	/^	const char *author;$/;"	m	struct:log_options	typeref:typename:const char *	file:
author	my_project/libgit2/include/git2/commit.h	/^	const git_signature *author;$/;"	m	struct:__anon3e0cd1e30108	typeref:typename:const git_signature *
author	my_project/libgit2/include/git2/deprecated.h	/^	const git_signature *author;$/;"	m	struct:__anon325f306b0208	typeref:typename:const git_signature *
author	my_project/libgit2/src/libgit2/commit.h	/^	git_signature *author;$/;"	m	struct:git_commit	typeref:typename:git_signature *
author	my_project/libgit2/src/libgit2/notes.h	/^	git_signature *author;$/;"	m	struct:git_note	typeref:typename:git_signature *
auto_callout	my_project/libgit2/deps/pcre/pcre_compile.c	/^auto_callout(pcre_uchar *code, const pcre_uchar *ptr, compile_data *cd)$/;"	f	typeref:typename:pcre_uchar *	file:
auto_crlf	my_project/libgit2/src/libgit2/crlf.c	/^	int auto_crlf;$/;"	m	struct:crlf_attrs	typeref:typename:int	file:
auto_possessify	my_project/libgit2/deps/pcre/pcre_compile.c	/^auto_possessify(pcre_uchar *code, BOOL utf, const compile_data *cd)$/;"	f	typeref:typename:void	file:
autocrlf	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^	const char *autocrlf;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
autocrlf	my_project/libgit2/tests/libgit2/index/crlf.c	/^	const char *autocrlf;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
automergeable	my_project/libgit2/include/git2/merge.h	/^	unsigned int automergeable;$/;"	m	struct:__anon1374edca0608	typeref:typename:unsigned int
automergeable_id	my_project/libgit2/tests/libgit2/merge/driver.c	/^static git_oid automergeable_id;$/;"	v	typeref:typename:git_oid	file:
autoposstab	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 autoposstab[APTROWS][APTCOLS] = {$/;"	v	typeref:typename:const pcre_uint8[][]	file:
aux_cb_alloc__1	my_project/libgit2/tests/libgit2/trace/windows/stacktrace.c	/^static void aux_cb_alloc__1(unsigned int *aux_id)$/;"	f	typeref:typename:void	file:
aux_cb_lookup__1	my_project/libgit2/tests/libgit2/trace/windows/stacktrace.c	/^static void aux_cb_lookup__1(unsigned int aux_id, char *aux_msg, size_t aux_msg_len)$/;"	f	typeref:typename:void	file:
aux_id	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^	unsigned int aux_id;$/;"	m	struct:__anonc260a6be0108	typeref:typename:unsigned int
avail	my_project/libgit2/src/util/pool.c	/^	size_t avail;$/;"	m	struct:git_pool_page	typeref:typename:size_t	file:
avail_in	my_project/libgit2/deps/zlib/zlib.h	/^    uInt     avail_in;  \/* number of bytes available at next_in *\/$/;"	m	struct:z_stream_s	typeref:typename:uInt
avail_out	my_project/libgit2/deps/zlib/zlib.h	/^    uInt     avail_out; \/* remaining free space at next_out *\/$/;"	m	struct:z_stream_s	typeref:typename:uInt
b	my_project/libgit2/tests/libgit2/diff/tree.c	/^static git_tree *a, *b;$/;"	v	typeref:typename:git_tree *	file:
b	my_project/libgit2/tests/libgit2/trace/windows/stacktrace.c	/^static void b(void)$/;"	f	typeref:typename:void	file:
b/fuzzers/patch_fuzzer.c	my_project/libgit2/fuzzers/corpora/patch_parse/patch_fuzzer-patch.diff	/^+++ b\/fuzzers\/patch_fuzzer.c$/;"	n
back	my_project/libgit2/deps/zlib/inflate.h	/^    int back;                   \/* bits back of last unprocessed length\/lit *\/$/;"	m	struct:inflate_state	typeref:typename:int
backend	my_project/libgit2/include/git2/odb_backend.h	/^	git_odb_backend *backend;$/;"	m	struct:git_odb_stream	typeref:typename:git_odb_backend *
backend	my_project/libgit2/include/git2/odb_backend.h	/^	git_odb_backend *backend;$/;"	m	struct:git_odb_writepack	typeref:typename:git_odb_backend *
backend	my_project/libgit2/include/git2/sys/config.h	/^	git_config_backend *backend;$/;"	m	struct:git_config_iterator	typeref:typename:git_config_backend *
backend	my_project/libgit2/src/libgit2/config.c	/^	git_config_backend *backend;$/;"	m	struct:__anona0399aa60108	typeref:typename:git_config_backend *	file:
backend	my_project/libgit2/src/libgit2/odb.c	/^	git_odb_backend *backend;$/;"	m	struct:__anon3125c0850108	typeref:typename:git_odb_backend *	file:
backend	my_project/libgit2/src/libgit2/odb_loose.c	/^	loose_backend *backend;$/;"	m	struct:__anon5ce333660408	typeref:typename:loose_backend *	file:
backend	my_project/libgit2/src/libgit2/odb_loose.c	/^	struct loose_backend *backend;$/;"	m	struct:foreach_state	typeref:struct:loose_backend *	file:
backend	my_project/libgit2/src/libgit2/refdb.h	/^	git_refdb_backend *backend;$/;"	m	struct:git_refdb	typeref:typename:git_refdb_backend *
backend	my_project/libgit2/src/libgit2/refdb_fs.c	/^	refdb_fs_backend *backend;$/;"	m	struct:iter_load_context	typeref:typename:refdb_fs_backend *	file:
backend	my_project/libgit2/tests/libgit2/config/memory.c	/^static git_config_backend *backend;$/;"	v	typeref:typename:git_config_backend *	file:
backend_entry	my_project/libgit2/src/libgit2/config.c	/^} backend_entry;$/;"	t	typeref:struct:__anona0399aa60208	file:
backend_instance	my_project/libgit2/src/libgit2/config.c	/^} backend_instance;$/;"	t	typeref:struct:__anona0399aa60108	file:
backend_instance_free	my_project/libgit2/src/libgit2/config.c	/^static void backend_instance_free(backend_instance *instance)$/;"	f	typeref:typename:void	file:
backend_internal	my_project/libgit2/src/libgit2/odb.c	/^} backend_internal;$/;"	t	typeref:struct:__anon3125c0850108	file:
backend_sort_cmp	my_project/libgit2/src/libgit2/odb.c	/^static int backend_sort_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
backend_type	my_project/libgit2/include/git2/config.h	/^	const char *backend_type;$/;"	m	struct:git_config_entry	typeref:typename:const char *
backend_type	my_project/libgit2/include/git2/sys/config.h	/^	const char *backend_type;$/;"	m	struct:__anonebfd18fe0108	typeref:typename:const char *
backend_type	my_project/libgit2/src/libgit2/config_mem.c	/^	char *backend_type;$/;"	m	struct:__anon766d71c40108	typeref:typename:char *	file:
backend_type	my_project/libgit2/src/libgit2/config_mem.c	/^	const char *backend_type;$/;"	m	struct:__anon766d71c40208	typeref:typename:const char *	file:
backends	my_project/libgit2/src/libgit2/odb.h	/^	git_vector backends;$/;"	m	struct:git_odb	typeref:typename:git_vector
backref_map	my_project/libgit2/deps/pcre/pcre_internal.h	/^  unsigned int backref_map;         \/* Bitmap of low back refs *\/$/;"	m	struct:compile_data	typeref:typename:unsigned int
backtrack_common	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct backtrack_common {$/;"	s	file:
backtrack_common	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} backtrack_common;$/;"	t	typeref:struct:backtrack_common	file:
backtracks	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    jump_list *backtracks;$/;"	m	union:char_iterator_backtrack::__anon4bd17169020a	typeref:typename:jump_list *	file:
bad_math	my_project/libgit2/tests/util/assert.c	/^static int bad_math(void)$/;"	f	typeref:typename:int	file:
bad_object_ids	my_project/libgit2/src/libgit2/pack.h	/^	git_oid *bad_object_ids; \/* array of git_oid *\/$/;"	m	struct:git_pack_file	typeref:typename:git_oid *
bad_returns_string	my_project/libgit2/tests/util/assert.c	/^static const char *bad_returns_string(void)$/;"	f	typeref:typename:const char *	file:
bad_tag_id	my_project/libgit2/tests/libgit2/object/tag/read.c	/^static const char *bad_tag_id = "eda9f45a2a98d4c17a09d681d88569fa4ea91755";$/;"	v	typeref:typename:const char *	file:
badly_tagged_commit	my_project/libgit2/tests/libgit2/object/tag/read.c	/^static const char *badly_tagged_commit = "e90810b8df3e80c413d903f631643c716887138d";$/;"	v	typeref:typename:const char *	file:
bare	my_project/libgit2/examples/init.c	/^	int bare;$/;"	m	struct:init_opts	typeref:typename:int	file:
bare	my_project/libgit2/include/git2/clone.h	/^	int bare;$/;"	m	struct:git_clone_options	typeref:typename:int
bare	my_project/libgit2/src/cli/cmd_clone.c	/^static int show_help, quiet, checkout = 1, bare;$/;"	v	typeref:typename:int	file:
bare_resolved_with_blob_override	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^static const mailmap_entry bare_resolved_with_blob_override[] = {$/;"	v	typeref:typename:const mailmap_entry[]	file:
base	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^	git_smart_subtransport base;$/;"	m	struct:fuzzer_subtransport	typeref:typename:git_smart_subtransport	file:
base	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^	git_smart_subtransport_stream base;$/;"	m	struct:fuzzer_stream	typeref:typename:git_smart_subtransport_stream	file:
base	my_project/libgit2/src/libgit2/attr_file.h	/^	const char *base;$/;"	m	struct:__anon0df92d8f0208	typeref:typename:const char *
base	my_project/libgit2/src/libgit2/checkout.c	/^	git_writestream base;$/;"	m	struct:checkout_stream	typeref:typename:git_writestream	file:
base	my_project/libgit2/src/libgit2/config_list.h	/^	git_config_entry base;$/;"	m	struct:__anon421351460108	typeref:typename:git_config_entry
base	my_project/libgit2/src/libgit2/diff_generate.c	/^	struct git_diff base;$/;"	m	struct:__anonff5a2cd30108	typeref:struct:git_diff	file:
base	my_project/libgit2/src/libgit2/diff_parse.h	/^	struct git_diff base;$/;"	m	struct:__anone6262fa80108	typeref:struct:git_diff
base	my_project/libgit2/src/libgit2/iterator.c	/^	git_iterator base;$/;"	m	struct:__anon2f88b95a0208	typeref:typename:git_iterator	file:
base	my_project/libgit2/src/libgit2/iterator.c	/^	git_iterator base;$/;"	m	struct:__anon2f88b95a0508	typeref:typename:git_iterator	file:
base	my_project/libgit2/src/libgit2/iterator.c	/^	git_iterator base;$/;"	m	struct:__anon2f88b95a0808	typeref:typename:git_iterator	file:
base	my_project/libgit2/src/libgit2/iterator.c	/^	git_iterator base;$/;"	m	struct:__anon2f88b95a0908	typeref:typename:git_iterator	file:
base	my_project/libgit2/src/libgit2/merge_driver.h	/^	git_merge_driver base;$/;"	m	struct:git_merge_driver__builtin	typeref:typename:git_merge_driver
base	my_project/libgit2/src/libgit2/patch_generate.h	/^	struct git_patch base;$/;"	m	struct:git_patch_generated	typeref:struct:git_patch
base	my_project/libgit2/src/libgit2/patch_parse.c	/^	git_patch base;$/;"	m	struct:__anonddb10c3a0108	typeref:typename:git_patch	file:
base	my_project/libgit2/src/util/futils.c	/^	const char *base;$/;"	m	struct:__anon45ee97580108	typeref:typename:const char *	file:
base	my_project/libgit2/tests/libgit2/filter/file.c	/^	git_writestream base;$/;"	m	struct:buf_writestream	typeref:typename:git_writestream	file:
base	my_project/libgit2/tests/libgit2/merge/driver.c	/^	git_merge_driver base;$/;"	m	struct:test_merge_driver	typeref:typename:git_merge_driver	file:
base	my_project/libgit2/tests/libgit2/odb/sorting.c	/^	git_odb_backend base;$/;"	m	struct:__anon5e7ea0850108	typeref:typename:git_odb_backend	file:
base64_decode	my_project/libgit2/src/util/str.c	/^static const int8_t base64_decode[] = {$/;"	v	typeref:typename:const int8_t[]	file:
base64_encode	my_project/libgit2/src/util/str.c	/^static const char base64_encode[] =$/;"	v	typeref:typename:const char[]	file:
base85_decode	my_project/libgit2/src/util/str.c	/^static const int8_t base85_decode[] = {$/;"	v	typeref:typename:const int8_t[]	file:
base85_encode	my_project/libgit2/src/util/str.c	/^static const char base85_encode[] =$/;"	v	typeref:typename:const char[]	file:
base_dist	my_project/libgit2/deps/zlib/trees.c	/^local int base_dist[D_CODES];$/;"	v	typeref:typename:local int[]
base_dist	my_project/libgit2/deps/zlib/trees.h	/^local const int base_dist[D_CODES] = {$/;"	v	typeref:typename:local const int[]
base_graph_files	my_project/libgit2/src/libgit2/commit_graph.c	/^	uint8_t base_graph_files;$/;"	m	struct:git_commit_graph_header	typeref:typename:uint8_t	file:
base_key	my_project/libgit2/src/libgit2/pack.h	/^	off64_t base_key;$/;"	m	struct:pack_chain_elem	typeref:typename:off64_t
base_length	my_project/libgit2/deps/zlib/trees.c	/^local int base_length[LENGTH_CODES];$/;"	v	typeref:typename:local int[]
base_length	my_project/libgit2/deps/zlib/trees.h	/^local const int base_length[LENGTH_CODES] = {$/;"	v	typeref:typename:local const int[]
base_midx_files	my_project/libgit2/src/libgit2/midx.c	/^	uint8_t base_midx_files;$/;"	m	struct:git_midx_header	typeref:typename:uint8_t	file:
base_obj	my_project/libgit2/fuzzers/packfile_fuzzer.c	/^static const unsigned char base_obj[] = { 07, 076 };$/;"	v	typeref:typename:const unsigned char[]	file:
base_obj	my_project/libgit2/tests/libgit2/pack/indexer.c	/^static const unsigned char base_obj[] = { 07, 076 };$/;"	v	typeref:typename:const unsigned char[]	file:
base_obj_len	my_project/libgit2/fuzzers/packfile_fuzzer.c	/^static const unsigned int base_obj_len = 2;$/;"	v	typeref:typename:const unsigned int	file:
base_obj_len	my_project/libgit2/tests/libgit2/pack/indexer.c	/^static const unsigned int base_obj_len = 2;$/;"	v	typeref:typename:const unsigned int	file:
baselen	my_project/libgit2/src/util/futils.c	/^	size_t baselen;$/;"	m	struct:__anon45ee97580108	typeref:typename:size_t	file:
baseline	my_project/libgit2/include/git2/checkout.h	/^	git_tree *baseline;$/;"	m	struct:git_checkout_options	typeref:typename:git_tree *
baseline	my_project/libgit2/include/git2/status.h	/^	git_tree          *baseline;$/;"	m	struct:__anon6794a3fe0408	typeref:typename:git_tree *
baseline_index	my_project/libgit2/include/git2/checkout.h	/^	git_index *baseline_index;$/;"	m	struct:git_checkout_options	typeref:typename:git_index *
baseline_tests	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^static void baseline_tests(void)$/;"	f	typeref:typename:void	file:
basename	my_project/libgit2/src/libgit2/attr_file.h	/^	char    *basename;$/;"	m	struct:__anon0df92d8f0908	typeref:typename:char *
basename_r	my_project/libgit2/tests/clar/clar/fs.h	/^static void basename_r(const char **out, int *out_len, const char *in)$/;"	f	typeref:typename:void
bases	my_project/libgit2/src/libgit2/pack.h	/^	git_pack_cache bases; \/* delta base cache *\/$/;"	m	struct:git_pack_file	typeref:typename:git_pack_cache
basic_context	my_project/libgit2/src/libgit2/transports/auth.c	/^static git_http_auth_context basic_context = {$/;"	v	typeref:typename:git_http_auth_context	file:
basic_diff_status	my_project/libgit2/tests/libgit2/diff/workdir.c	/^static void basic_diff_status(git_diff **out, const git_diff_options *opts)$/;"	f	typeref:typename:void	file:
basic_next_token	my_project/libgit2/src/libgit2/transports/auth.c	/^static int basic_next_token($/;"	f	typeref:typename:int	file:
basic_payload	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^	basic_payload *basic_payload;$/;"	m	struct:__anon2bf18d4b0208	typeref:typename:basic_payload *	file:
basic_payload	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^} basic_payload;$/;"	t	typeref:struct:__anon2bf18d4b0108	file:
bdiffparam_t	my_project/libgit2/deps/xdiff/xdiff.h	/^} bdiffparam_t;$/;"	t	typeref:struct:s_bdiffparam
before	my_project/libgit2/examples/log.c	/^	git_time_t before;$/;"	m	struct:log_options	typeref:typename:git_time_t	file:
begin	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  const pcre_uchar *begin;$/;"	m	struct:jit_arguments	typeref:typename:const pcre_uchar *	file:
begin1	my_project/libgit2/deps/xdiff/xhistogram.c	/^	unsigned int begin1, end1;$/;"	m	struct:region	typeref:typename:unsigned int	file:
begin2	my_project/libgit2/deps/xdiff/xhistogram.c	/^	unsigned int begin2, end2;$/;"	m	struct:region	typeref:typename:unsigned int	file:
begun	my_project/libgit2/deps/zlib/crc32.c	/^    atomic_flag begun;$/;"	m	struct:once_s	typeref:typename:atomic_flag	file:
begun	my_project/libgit2/deps/zlib/crc32.c	/^    volatile int begun;$/;"	m	struct:once_s	typeref:typename:volatile int	file:
behind	my_project/libgit2/tests/libgit2/graph/ahead_behind.c	/^static size_t behind;$/;"	v	typeref:typename:size_t	file:
best_scheme_and_challenge	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static bool best_scheme_and_challenge($/;"	f	typeref:typename:bool	file:
bgets	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int (*bgets) (BIO *, char *, int);$/;"	m	struct:bio_method_st	typeref:typename:int (*)(BIO *,char *,int)
bi_buf	my_project/libgit2/deps/zlib/deflate.h	/^    ush bi_buf;$/;"	m	struct:internal_state	typeref:typename:ush
bi_flush	my_project/libgit2/deps/zlib/trees.c	/^local void bi_flush(deflate_state *s) {$/;"	f	typeref:typename:local void
bi_reverse	my_project/libgit2/deps/zlib/trees.c	/^local unsigned bi_reverse(unsigned code, int len) {$/;"	f	typeref:typename:local unsigned
bi_valid	my_project/libgit2/deps/zlib/deflate.h	/^    int bi_valid;$/;"	m	struct:internal_state	typeref:typename:int
bi_windup	my_project/libgit2/deps/zlib/trees.c	/^local void bi_windup(deflate_state *s) {$/;"	f	typeref:typename:local void
big_entries	my_project/libgit2/tests/util/qsort.c	/^struct big_entries {$/;"	s	file:
big_file_threshold	my_project/libgit2/src/libgit2/pack-objects.h	/^	size_t big_file_threshold;$/;"	m	struct:git_packbuilder	typeref:typename:size_t
binary	my_project/libgit2/src/libgit2/checkout.c	/^	             binary:1,$/;"	m	struct:__anon35c6e5c60308	typeref:typename:unsigned int:1	file:
binary	my_project/libgit2/src/libgit2/patch.h	/^	git_diff_binary binary;$/;"	m	struct:git_patch	typeref:typename:git_diff_binary
binary_cb	my_project/libgit2/src/libgit2/patch_generate.h	/^	git_diff_binary_cb binary_cb;$/;"	m	struct:git_patch_generated_output	typeref:typename:git_diff_binary_cb
binary_cb	my_project/libgit2/tests/libgit2/diff/binary.c	/^static int binary_cb($/;"	f	typeref:typename:int	file:
binary_flags	my_project/libgit2/src/libgit2/diff_driver.c	/^	uint32_t binary_flags;$/;"	m	struct:git_diff_driver	typeref:typename:uint32_t	file:
binary_opts	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^static git_diff_options binary_opts = GIT_DIFF_OPTIONS_INIT;$/;"	v	typeref:typename:git_diff_options	file:
binary_search	my_project/libgit2/deps/xdiff/xpatience.c	/^static int binary_search(struct entry **sequence, int longest,$/;"	f	typeref:typename:int	file:
binsearch	my_project/libgit2/src/util/tsort.c	/^static int binsearch($/;"	f	typeref:typename:int	file:
bio_create	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int bio_create(BIO *b)$/;"	f	typeref:typename:int	file:
bio_ctrl	my_project/libgit2/src/libgit2/streams/openssl.c	/^static long bio_ctrl(BIO *b, int cmd, long num, void *ptr)$/;"	f	typeref:typename:long	file:
bio_destroy	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int bio_destroy(BIO *b)$/;"	f	typeref:typename:int	file:
bio_gets	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int bio_gets(BIO *b, char *buf, int len)$/;"	f	typeref:typename:int	file:
bio_info_cb	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^typedef void bio_info_cb;$/;"	t	typeref:typename:void
bio_method_st	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^struct bio_method_st {$/;"	s
bio_puts	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int bio_puts(BIO *b, const char *str)$/;"	f	typeref:typename:int	file:
bio_read	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static int bio_read(void *b, unsigned char *buf, size_t len)$/;"	f	typeref:typename:int	file:
bio_read	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int bio_read(BIO *b, char *buf, int len)$/;"	f	typeref:typename:int	file:
bio_st	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^struct bio_st {$/;"	s
bio_write	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static int bio_write(void *b, const unsigned char *buf, size_t len)$/;"	f	typeref:typename:int	file:
bio_write	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int bio_write(BIO *b, const char *buf, int len)$/;"	f	typeref:typename:int	file:
bisort	my_project/libgit2/src/util/tsort.c	/^static void bisort($/;"	f	typeref:typename:void	file:
bitflip_filter_apply	my_project/libgit2/tests/libgit2/filter/custom_helpers.c	/^int bitflip_filter_apply($/;"	f	typeref:typename:int
bitflip_filter_free	my_project/libgit2/tests/libgit2/filter/custom_helpers.c	/^static void bitflip_filter_free(git_filter *f)$/;"	f	typeref:typename:void	file:
bitflip_filter_stream	my_project/libgit2/tests/libgit2/filter/custom_helpers.c	/^static int bitflip_filter_stream($/;"	f	typeref:typename:int	file:
bitflipped_and_reversed_data	my_project/libgit2/tests/libgit2/filter/custom.c	/^static unsigned char bitflipped_and_reversed_data[] =$/;"	v	typeref:typename:unsigned char[]	file:
bits	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned bits;              \/* number of bits in "in" *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
bits	my_project/libgit2/deps/zlib/inftrees.h	/^    unsigned char bits;         \/* bits in this part of the code *\/$/;"	m	struct:__anon3554db3d0108	typeref:typename:unsigned char
bits	my_project/libgit2/src/util/bitvec.h	/^		uint64_t bits;$/;"	m	union:__anonfa138ea30108::__anonfa138ea3020a	typeref:typename:uint64_t
bits	my_project/libgit2/src/util/rand.c	/^} bits;$/;"	t	typeref:union:__anon2fc93926010a	file:
bits_sent	my_project/libgit2/deps/zlib/deflate.h	/^    ulg bits_sent;      \/* bit length of compressed data sent mod 2^32 *\/$/;"	m	struct:internal_state	typeref:typename:ulg
bitsizeof	my_project/libgit2/src/util/util.h	/^#define bitsizeof(/;"	d
bl_count	my_project/libgit2/deps/zlib/deflate.h	/^    ush bl_count[MAX_BITS+1];$/;"	m	struct:internal_state	typeref:typename:ush[]
bl_desc	my_project/libgit2/deps/zlib/deflate.h	/^    struct tree_desc_s bl_desc;              \/* desc. for bit length tree *\/$/;"	m	struct:internal_state	typeref:struct:tree_desc_s
bl_order	my_project/libgit2/deps/zlib/trees.c	/^local const uch bl_order[BL_CODES]$/;"	v	typeref:typename:local const uch[]
bl_tree	my_project/libgit2/deps/zlib/deflate.h	/^    struct ct_data_s bl_tree[2*BL_CODES+1];  \/* Huffman tree for bit lengths *\/$/;"	m	struct:internal_state	typeref:struct:ct_data_s[]
blame	my_project/libgit2/src/libgit2/blame_git.c	/^	git_blame *blame;$/;"	m	struct:blame_chunk_cb_data	typeref:typename:git_blame *	file:
blame_chunk	my_project/libgit2/src/libgit2/blame_git.c	/^static int blame_chunk($/;"	f	typeref:typename:int	file:
blame_chunk_cb_data	my_project/libgit2/src/libgit2/blame_git.c	/^typedef struct blame_chunk_cb_data {$/;"	s	file:
blame_chunk_cb_data	my_project/libgit2/src/libgit2/blame_git.c	/^}blame_chunk_cb_data;$/;"	t	typeref:struct:blame_chunk_cb_data	file:
blame_internal	my_project/libgit2/src/libgit2/blame.c	/^static int blame_internal(git_blame *blame)$/;"	f	typeref:typename:int	file:
blame_opts	my_project/libgit2/examples/blame.c	/^struct blame_opts {$/;"	s	file:
blame_overlap	my_project/libgit2/src/libgit2/blame_git.c	/^static int blame_overlap($/;"	f	typeref:typename:int	file:
bld	my_project/libgit2/src/libgit2/tree.c	/^	git_treebuilder *bld;$/;"	m	struct:__anon62877c000108	typeref:typename:git_treebuilder *	file:
blen	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^    size_t        blen;    \/* length of data in object store            *\/$/;"	m	struct:object_data	typeref:typename:size_t
blob	my_project/libgit2/src/libgit2/blame.h	/^	git_blob *blob;$/;"	m	struct:git_blame__origin	typeref:typename:git_blob *
blob	my_project/libgit2/src/libgit2/diff_file.h	/^	const git_blob *blob;$/;"	m	struct:__anonffb6e84d0108	typeref:typename:const git_blob *
blob	my_project/libgit2/src/libgit2/diff_file.h	/^	const git_blob *blob;$/;"	m	struct:__anonffb6e84d0208	typeref:typename:const git_blob *
blob	my_project/libgit2/src/libgit2/diff_tform.c	/^	git_blob *blob;$/;"	m	struct:__anon258239f00108	typeref:typename:git_blob *	file:
blob_content_to_file	my_project/libgit2/src/libgit2/checkout.c	/^static int blob_content_to_file($/;"	f	typeref:typename:int	file:
blob_content_to_link	my_project/libgit2/src/libgit2/checkout.c	/^static int blob_content_to_link($/;"	f	typeref:typename:int	file:
blob_creator_fn	my_project/libgit2/tests/libgit2/object/blob/write.c	/^typedef int (*blob_creator_fn)($/;"	t	typeref:typename:int (*)(git_oid *,git_repository *,const char *)	file:
blob_oid	my_project/libgit2/tests/libgit2/object/tree/attributes.c	/^static const char *blob_oid = "3d0970ec547fc41ef8a5882dde99c6adce65b021";$/;"	v	typeref:typename:const char *	file:
blob_oid	my_project/libgit2/tests/libgit2/object/tree/write.c	/^static const char *blob_oid = "fa49b077972391ad58037050f2a75f74e3671e92";$/;"	v	typeref:typename:const char *	file:
blob_parsing	my_project/libgit2/examples/general.c	/^static void blob_parsing(git_repository *repo)$/;"	f	typeref:typename:void	file:
blob_writestream	my_project/libgit2/src/libgit2/blob.c	/^} blob_writestream;$/;"	t	typeref:struct:__anon38237caf0108	file:
blob_writestream_close	my_project/libgit2/src/libgit2/blob.c	/^static int blob_writestream_close(git_writestream *_stream)$/;"	f	typeref:typename:int	file:
blob_writestream_free	my_project/libgit2/src/libgit2/blob.c	/^static void blob_writestream_free(git_writestream *_stream)$/;"	f	typeref:typename:void	file:
blob_writestream_write	my_project/libgit2/src/libgit2/blob.c	/^static int blob_writestream_write(git_writestream *_stream, const char *buffer, size_t len)$/;"	f	typeref:typename:int	file:
block_done	my_project/libgit2/deps/zlib/deflate.c	/^    block_done,     \/* block flush performed *\/$/;"	e	enum:__anon0b76eead0103	file:
block_start	my_project/libgit2/deps/zlib/deflate.h	/^    long block_start;$/;"	m	struct:internal_state	typeref:typename:long
block_state	my_project/libgit2/deps/zlib/deflate.c	/^} block_state;$/;"	t	typeref:enum:__anon0b76eead0103	file:
body	my_project/libgit2/include/git2/deprecated.h	/^	const char *body;$/;"	m	struct:__anon325f306b0208	typeref:typename:const char *
body	my_project/libgit2/src/libgit2/commit.h	/^	char *body;$/;"	m	struct:git_commit	typeref:typename:char *
bom	my_project/libgit2/src/util/str.h	/^	git_str_bom_t bom; \/* BOM found at head of text *\/$/;"	m	struct:__anon85703a5f0208	typeref:typename:git_str_bom_t
boundary	my_project/libgit2/include/git2/blame.h	/^	char boundary;$/;"	m	struct:git_blame_hunk	typeref:typename:char
bputs	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int (*bputs) (BIO *, const char *);$/;"	m	struct:bio_method_st	typeref:typename:int (*)(BIO *,const char *)
bracket_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct bracket_backtrack {$/;"	s	file:
bracket_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} bracket_backtrack;$/;"	t	typeref:struct:bracket_backtrack	file:
bracketend	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *bracketend(pcre_uchar *cc)$/;"	f	typeref:typename:pcre_uchar *	file:
bracketpos_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct bracketpos_backtrack {$/;"	s	file:
bracketpos_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} bracketpos_backtrack;$/;"	t	typeref:struct:bracketpos_backtrack	file:
bracount	my_project/libgit2/deps/pcre/pcre_internal.h	/^  unsigned int bracount;            \/* Count of capturing parens as we compile *\/$/;"	m	struct:compile_data	typeref:typename:unsigned int
braid	my_project/libgit2/deps/zlib/crc32.c	/^local void braid(z_crc_t ltl[][256], z_word_t big[][256], int n, int w) {$/;"	f	typeref:typename:local void
braminzero_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct braminzero_backtrack {$/;"	s	file:
braminzero_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} braminzero_backtrack;$/;"	t	typeref:struct:braminzero_backtrack	file:
branch	my_project/libgit2/src/cli/cmd_clone.c	/^static char *branch, *remote_path, *local_path, *depth;$/;"	v	typeref:typename:char *	file:
branch	my_project/libgit2/src/libgit2/submodule.h	/^	char *branch;$/;"	m	struct:git_submodule	typeref:typename:char *
branch	my_project/libgit2/tests/libgit2/commit/write.c	/^static git_reference *head, *branch;$/;"	v	typeref:typename:git_reference *	file:
branch	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^static git_reference *branch;$/;"	v	typeref:typename:git_reference *	file:
branch	my_project/libgit2/tests/libgit2/refs/branches/ishead.c	/^static git_reference *branch;$/;"	v	typeref:typename:git_reference *	file:
branch	my_project/libgit2/tests/libgit2/refs/branches/lookup.c	/^static git_reference *branch;$/;"	v	typeref:typename:git_reference *	file:
branch	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^static git_reference *branch, *upstream;$/;"	v	typeref:typename:git_reference *	file:
branch_chain	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct branch_chain {$/;"	s
branch_chain	my_project/libgit2/deps/pcre/pcre_internal.h	/^} branch_chain;$/;"	t	typeref:struct:branch_chain
branch_is_checked_out	my_project/libgit2/src/libgit2/branch.c	/^static int branch_is_checked_out(git_repository *worktree, void *payload)$/;"	f	typeref:typename:int	file:
branch_iter	my_project/libgit2/src/libgit2/branch.c	/^} branch_iter;$/;"	t	typeref:struct:__anon7d20e9de0108	file:
branch_name	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^	const char *branch_name;$/;"	m	struct:expectations	typeref:typename:const char *	file:
branch_name_is_valid	my_project/libgit2/src/libgit2/branch.c	/^static bool branch_name_is_valid(const char *branch_name)$/;"	f	typeref:typename:bool	file:
bread	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int (*bread) (BIO *, char *, int);$/;"	m	struct:bio_method_st	typeref:typename:int (*)(BIO *,char *,int)
break_rewrite_threshold	my_project/libgit2/include/git2/diff.h	/^	uint16_t break_rewrite_threshold;$/;"	m	struct:__anon7f3f1dd30f08	typeref:typename:uint16_t
bsize	my_project/libgit2/deps/xdiff/xdiff.h	/^	long bsize;$/;"	m	struct:s_bdiffparam	typeref:typename:long
bsr_anycrlf	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   bsr_anycrlf;             \/* \\R is just any CRLF, not full Unicode *\/$/;"	m	struct:match_data	typeref:typename:BOOL
bsr_nlmax	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u32 bsr_nlmax;$/;"	m	struct:compiler_common	typeref:typename:sljit_u32	file:
bsr_nlmin	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u32 bsr_nlmin;$/;"	m	struct:compiler_common	typeref:typename:sljit_u32	file:
bsr_nltype	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int bsr_nltype;$/;"	m	struct:compiler_common	typeref:typename:int	file:
buf	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	unsigned char *buf;$/;"	m	struct:__anondc54b7e10208	typeref:typename:unsigned char *
buf	my_project/libgit2/deps/xdiff/xemit.c	/^	char buf[80];$/;"	m	struct:func_line	typeref:typename:char[80]	file:
buf	my_project/libgit2/src/libgit2/config_file.c	/^	git_str *buf;$/;"	m	struct:write_data	typeref:typename:git_str *	file:
buf	my_project/libgit2/src/libgit2/diff_file.h	/^	const void *buf;$/;"	m	struct:__anonffb6e84d0208	typeref:typename:const void *
buf	my_project/libgit2/src/libgit2/diff_print.c	/^	git_str *buf;$/;"	m	struct:__anon0d2887b50108	typeref:typename:git_str *	file:
buf	my_project/libgit2/src/libgit2/pack-objects.c	/^	git_str buf;$/;"	m	struct:tree_walk_context	typeref:typename:git_str	file:
buf	my_project/libgit2/src/libgit2/sysdir.c	/^	git_str buf;$/;"	m	struct:git_sysdir__dir	typeref:typename:git_str	file:
buf	my_project/libgit2/src/util/fs_path.h	/^	git_str buf;$/;"	m	struct:__anonea45684b0308	typeref:typename:git_str
buf	my_project/libgit2/tests/libgit2/config/include.c	/^static git_buf buf;$/;"	v	typeref:typename:git_buf	file:
buf	my_project/libgit2/tests/libgit2/config/read.c	/^static git_buf buf = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
buf	my_project/libgit2/tests/libgit2/config/stress.c	/^static git_buf buf = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
buf	my_project/libgit2/tests/libgit2/filter/file.c	/^	git_str buf;$/;"	m	struct:buf_writestream	typeref:typename:git_str	file:
buf_from_blob	my_project/libgit2/src/libgit2/filter.c	/^static int buf_from_blob(git_str *out, git_blob *blob)$/;"	f	typeref:typename:int	file:
buf_pos	my_project/libgit2/src/util/filebuf.h	/^	size_t buf_size, buf_pos;$/;"	m	struct:git_filebuf	typeref:typename:size_t
buf_size	my_project/libgit2/src/util/filebuf.h	/^	size_t buf_size, buf_pos;$/;"	m	struct:git_filebuf	typeref:typename:size_t
buf_stream	my_project/libgit2/src/libgit2/filter.c	/^struct buf_stream {$/;"	s	file:
buf_stream_close	my_project/libgit2/src/libgit2/filter.c	/^static int buf_stream_close(git_writestream *s)$/;"	f	typeref:typename:int	file:
buf_stream_free	my_project/libgit2/src/libgit2/filter.c	/^static void buf_stream_free(git_writestream *s)$/;"	f	typeref:typename:void	file:
buf_stream_init	my_project/libgit2/src/libgit2/filter.c	/^static void buf_stream_init(struct buf_stream *writer, git_str *target)$/;"	f	typeref:typename:void	file:
buf_stream_write	my_project/libgit2/src/libgit2/filter.c	/^static int buf_stream_write($/;"	f	typeref:typename:int	file:
buf_writestream	my_project/libgit2/tests/libgit2/filter/file.c	/^struct buf_writestream {$/;"	s	file:
buf_writestream_close	my_project/libgit2/tests/libgit2/filter/file.c	/^static int buf_writestream_close(git_writestream *s)$/;"	f	typeref:typename:int	file:
buf_writestream_free	my_project/libgit2/tests/libgit2/filter/file.c	/^static void buf_writestream_free(git_writestream *s)$/;"	f	typeref:typename:void	file:
buf_writestream_write	my_project/libgit2/tests/libgit2/filter/file.c	/^static int buf_writestream_write(git_writestream *s, const char *buf, size_t len)$/;"	f	typeref:typename:int	file:
buferr_t	my_project/libgit2/src/util/filebuf.c	/^enum buferr_t {$/;"	g	file:
buffer	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^  unsigned char buffer[64];                         \/* input buffer *\/$/;"	m	struct:__anonc766ba4d0108	typeref:typename:unsigned char[64]	file:
buffer	my_project/libgit2/src/libgit2/odb.c	/^	char *buffer;$/;"	m	struct:__anon3125c0850208	typeref:typename:char *	file:
buffer	my_project/libgit2/src/libgit2/odb.h	/^	void *buffer;$/;"	m	struct:git_odb_object	typeref:typename:void *
buffer	my_project/libgit2/src/util/filebuf.h	/^	unsigned char *buffer;$/;"	m	struct:git_filebuf	typeref:typename:unsigned char *
buffer	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^	unsigned char buffer[64];$/;"	m	struct:__anon09d552690108	typeref:typename:unsigned char[64]
buffer_hunk_cb	my_project/libgit2/src/libgit2/blame.c	/^static int buffer_hunk_cb($/;"	f	typeref:typename:int	file:
buffer_line_cb	my_project/libgit2/src/libgit2/blame.c	/^static int buffer_line_cb($/;"	f	typeref:typename:int	file:
buffer_want_with_caps	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int buffer_want_with_caps($/;"	f	typeref:typename:int	file:
buffered_comment	my_project/libgit2/src/libgit2/config_file.c	/^	git_str buffered_comment;$/;"	m	struct:write_data	typeref:typename:git_str	file:
buffered_legacy_stream_new	my_project/libgit2/src/libgit2/filter.c	/^static int buffered_legacy_stream_new($/;"	f	typeref:typename:int	file:
buffered_stream	my_project/libgit2/src/libgit2/filter.c	/^struct buffered_stream {$/;"	s	file:
buffered_stream_close	my_project/libgit2/src/libgit2/filter.c	/^static int buffered_stream_close(git_writestream *s)$/;"	f	typeref:typename:int	file:
buffered_stream_free	my_project/libgit2/src/libgit2/filter.c	/^static void buffered_stream_free(git_writestream *s)$/;"	f	typeref:typename:void	file:
buffered_stream_write	my_project/libgit2/src/libgit2/filter.c	/^static int buffered_stream_write($/;"	f	typeref:typename:int	file:
buflen	my_project/libgit2/src/libgit2/diff_file.h	/^	size_t buflen;$/;"	m	struct:__anonffb6e84d0208	typeref:typename:size_t
build	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	uint16_t build;$/;"	m	struct:__anondc54b7e10308	typeref:typename:uint16_t
build_bl_tree	my_project/libgit2/deps/zlib/trees.c	/^local int build_bl_tree(deflate_state *s) {$/;"	f	typeref:typename:local int
build_fake_backend	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.c	/^int build_fake_backend($/;"	f	typeref:typename:int
build_regex	my_project/libgit2/src/libgit2/revparse.c	/^static int build_regex(git_regexp *regex, const char *pattern)$/;"	f	typeref:typename:int	file:
build_sandbox_path	my_project/libgit2/tests/clar/clar/sandbox.h	/^static int build_sandbox_path(void)$/;"	f	typeref:typename:int
build_stash_commit_from_index	my_project/libgit2/src/libgit2/stash.c	/^static int build_stash_commit_from_index($/;"	f	typeref:typename:int	file:
build_stash_commit_from_tree	my_project/libgit2/src/libgit2/stash.c	/^static int build_stash_commit_from_tree($/;"	f	typeref:typename:int	file:
build_test_tree	my_project/libgit2/tests/libgit2/iterator/tree.c	/^static void build_test_tree($/;"	f	typeref:typename:void	file:
build_tree	my_project/libgit2/deps/zlib/trees.c	/^local void build_tree(deflate_state *s, tree_desc *desc) {$/;"	f	typeref:typename:local void
build_tree_from_index	my_project/libgit2/src/libgit2/stash.c	/^static int build_tree_from_index($/;"	f	typeref:typename:int	file:
build_untracked_tree	my_project/libgit2/src/libgit2/stash.c	/^static int build_untracked_tree($/;"	f	typeref:typename:int	file:
build_workdir_tree	my_project/libgit2/src/libgit2/stash.c	/^static int build_workdir_tree($/;"	f	typeref:typename:int	file:
build_workdir_tree	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^static void build_workdir_tree(const char *root, int dirs, int subs)$/;"	f	typeref:typename:void	file:
builtin_defs	my_project/libgit2/src/libgit2/userdiff.h	/^static git_diff_driver_definition builtin_defs[] = {$/;"	v	typeref:typename:git_diff_driver_definition[]
builtin_extensions	my_project/libgit2/src/libgit2/repository.c	/^static const char *builtin_extensions[] = {$/;"	v	typeref:typename:const char * []	file:
bwrite	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int (*bwrite) (BIO *, const char *, int);$/;"	m	struct:bio_method_st	typeref:typename:int (*)(BIO *,const char *,int)
bye_id	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^static char *bye_id = "ce08fe4884650f067bd5703b6a59a8b3b3c99a09";$/;"	v	typeref:typename:char *	file:
bye_text	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^static char *bye_text = "bye world\\n";$/;"	v	typeref:typename:char *	file:
byte_sequence_compare	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *byte_sequence_compare(compiler_common *common, BOOL caseless, pcre_uchar *cc,$/;"	f	typeref:typename:pcre_uchar *	file:
byte_swap	my_project/libgit2/deps/zlib/crc32.c	/^local z_word_t byte_swap(z_word_t word) {$/;"	f	typeref:typename:local z_word_t
bytes	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^    unsigned char *bytes;  \/* (compressed) bytes stored in object store *\/$/;"	m	struct:object_data	typeref:typename:unsigned char *
bytes_available	my_project/libgit2/tests/clar/clar_libgit2_alloc.c	/^static size_t bytes_available;$/;"	v	typeref:typename:size_t	file:
c	my_project/libgit2/deps/ntlmclient/util.c	/^		char c[8];$/;"	m	union:ntlm_htonll::__anoneca72adf010a	typeref:typename:char[8]	file:
c	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  } c;$/;"	m	struct:compare_context	typeref:union:compare_context::__anon4bd17169040a	file:
c	my_project/libgit2/src/util/hash/builtin.h	/^	SHA256Context c;$/;"	m	struct:git_hash_sha256_ctx	typeref:typename:SHA256Context
c	my_project/libgit2/src/util/hash/collisiondetect.h	/^	SHA1_CTX c;$/;"	m	struct:git_hash_sha1_ctx	typeref:typename:SHA1_CTX
c	my_project/libgit2/src/util/hash/common_crypto.h	/^	CC_SHA1_CTX c;$/;"	m	struct:git_hash_sha1_ctx	typeref:typename:CC_SHA1_CTX
c	my_project/libgit2/src/util/hash/common_crypto.h	/^	CC_SHA256_CTX c;$/;"	m	struct:git_hash_sha256_ctx	typeref:typename:CC_SHA256_CTX
c	my_project/libgit2/src/util/hash/mbedtls.h	/^    mbedtls_sha1_context c;$/;"	m	struct:git_hash_sha1_ctx	typeref:typename:mbedtls_sha1_context
c	my_project/libgit2/src/util/hash/mbedtls.h	/^    mbedtls_sha256_context c;$/;"	m	struct:git_hash_sha256_ctx	typeref:typename:mbedtls_sha256_context
c	my_project/libgit2/src/util/hash/openssl.h	/^	SHA256_CTX c;$/;"	m	struct:git_hash_sha256_ctx	typeref:typename:SHA256_CTX
c	my_project/libgit2/src/util/hash/openssl.h	/^	SHA_CTX c;$/;"	m	struct:git_hash_sha1_ctx	typeref:typename:SHA_CTX
c	my_project/libgit2/tests/libgit2/trace/windows/stacktrace.c	/^static void c(void)$/;"	f	typeref:typename:void	file:
c	my_project/libgit2/tests/util/qsort.c	/^	char c[311];$/;"	m	struct:big_entries	typeref:typename:char[311]	file:
cache	my_project/libgit2/examples/diff.c	/^	int cache;$/;"	m	struct:diff_options	typeref:typename:int	file:
cache	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_sortedcache *cache;$/;"	m	struct:__anon3803f1ab0308	typeref:typename:git_sortedcache *	file:
cache_add	my_project/libgit2/src/libgit2/pack.c	/^static int cache_add($/;"	f	typeref:typename:int	file:
cache_data	my_project/libgit2/src/libgit2/attr_file.h	/^	} cache_data;$/;"	m	struct:__anon0df92d8f0708	typeref:union:__anon0df92d8f0708::__anon0df92d8f080a
cache_evict_entries	my_project/libgit2/src/libgit2/cache.c	/^static void cache_evict_entries(git_cache *cache)$/;"	f	typeref:typename:void	file:
cache_free	my_project/libgit2/src/libgit2/pack.c	/^static void cache_free(git_pack_cache *cache)$/;"	f	typeref:typename:void	file:
cache_get	my_project/libgit2/src/libgit2/cache.c	/^static void *cache_get(git_cache *cache, const git_oid *oid, unsigned int flags)$/;"	f	typeref:typename:void *	file:
cache_get	my_project/libgit2/src/libgit2/pack.c	/^static git_pack_cache_entry *cache_get(git_pack_cache *cache, off64_t offset)$/;"	f	typeref:typename:git_pack_cache_entry *	file:
cache_init	my_project/libgit2/src/libgit2/pack.c	/^static int cache_init(git_pack_cache *cache)$/;"	f	typeref:typename:int	file:
cache_invalid_marker	my_project/libgit2/src/libgit2/merge.c	/^static int cache_invalid_marker;$/;"	v	typeref:typename:int	file:
cache_limit	my_project/libgit2/tests/libgit2/object/cache.c	/^static size_t cache_limit;$/;"	v	typeref:typename:size_t	file:
cache_max_small_delta_size	my_project/libgit2/src/libgit2/pack-objects.h	/^	size_t cache_max_small_delta_size;$/;"	m	struct:git_packbuilder	typeref:typename:size_t
cache_mutex	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_mutex cache_mutex;$/;"	m	struct:git_packbuilder	typeref:typename:git_mutex
cache_parsed	my_project/libgit2/tests/libgit2/object/cache.c	/^static void *cache_parsed(void *arg)$/;"	f	typeref:typename:void *	file:
cache_quick	my_project/libgit2/tests/libgit2/object/cache.c	/^static void *cache_quick(void *arg)$/;"	f	typeref:typename:void *	file:
cache_raw	my_project/libgit2/tests/libgit2/object/cache.c	/^static void *cache_raw(void *arg)$/;"	f	typeref:typename:void *	file:
cache_should_store	my_project/libgit2/src/libgit2/cache.c	/^static bool cache_should_store(git_object_t object_type, size_t object_size)$/;"	f	typeref:typename:bool	file:
cache_store	my_project/libgit2/src/libgit2/cache.c	/^static void *cache_store(git_cache *cache, git_cached_obj *entry)$/;"	f	typeref:typename:void *	file:
cached	my_project/libgit2/src/libgit2/object.h	/^	git_cached_obj cached;$/;"	m	struct:git_object	typeref:typename:git_cached_obj
cached	my_project/libgit2/src/libgit2/odb.h	/^	git_cached_obj cached;$/;"	m	struct:git_odb_object	typeref:typename:git_cached_obj
calc_self_similarity	my_project/libgit2/src/libgit2/diff_tform.c	/^static int calc_self_similarity($/;"	f	typeref:typename:int	file:
calculate_work	my_project/libgit2/src/libgit2/push.c	/^static int calculate_work(git_push *push)$/;"	f	typeref:typename:int	file:
call_executable_func	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^   jit_function call_executable_func;$/;"	m	union:PRIV::__anon4bd17169080a	typeref:typename:jit_function	file:
call_executable_func	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^   jit_function call_executable_func;$/;"	m	union:jit_machine_stack_exec::__anon4bd17169070a	typeref:typename:jit_function	file:
call_executable_func	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^   jit_function call_executable_func;$/;"	m	union:pcre_jit_exec::__anon4bd17169090a	typeref:typename:jit_function	file:
callback	my_project/libgit2/include/git2/sys/transport.h	/^	git_smart_subtransport_cb callback;$/;"	m	struct:git_smart_subtransport_definition	typeref:typename:git_smart_subtransport_cb
callback	my_project/libgit2/src/libgit2/diff_xdiff.h	/^	xdemitcb_t   callback;$/;"	m	struct:__anon544d965e0108	typeref:typename:xdemitcb_t
callback	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    long (*callback) (struct bio_st *, int, const char *, int, long, long);$/;"	m	struct:bio_st	typeref:typename:long (*)(struct bio_st *,int,const char *,int,long,long)
callback	my_project/libgit2/src/libgit2/trace.h	/^	git_trace_cb callback;$/;"	m	struct:git_trace_data	typeref:typename:git_trace_cb
callback	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^	git_indexer_progress_cb callback;$/;"	m	struct:network_packetsize_payload	typeref:typename:git_indexer_progress_cb	file:
callback	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^	collision_block_callback callback;$/;"	m	struct:__anon09d552690108	typeref:typename:collision_block_callback
callback_cb	my_project/libgit2/tests/libgit2/stash/foreach.c	/^static int callback_cb($/;"	f	typeref:typename:int	file:
callback_count	my_project/libgit2/tests/clar/generate.py	/^    def callback_count(self):$/;"	m	class:TestSuite
callback_ctrl	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    long (*callback_ctrl) (BIO *, int, bio_info_cb *);$/;"	m	struct:bio_method_st	typeref:typename:long (*)(BIO *,int,bio_info_cb *)
callback_data	my_project/libgit2/tests/libgit2/stash/foreach.c	/^struct callback_data$/;"	s	file:
callbacks	my_project/libgit2/include/git2/remote.h	/^	git_remote_callbacks callbacks;$/;"	m	struct:__anon144be4e60808	typeref:typename:git_remote_callbacks
callbacks	my_project/libgit2/include/git2/remote.h	/^	git_remote_callbacks callbacks;$/;"	m	struct:__anon144be4e60908	typeref:typename:git_remote_callbacks
callbacks	my_project/libgit2/include/git2/remote.h	/^	git_remote_callbacks callbacks;$/;"	m	struct:__anon144be4e60a08	typeref:typename:git_remote_callbacks
callbacks	my_project/libgit2/src/libgit2/push.h	/^	git_remote_callbacks callbacks;$/;"	m	struct:git_push	typeref:typename:git_remote_callbacks
callbacks	my_project/libgit2/src/libgit2/streams/registry.c	/^	git_stream_registration callbacks;$/;"	m	struct:stream_registry	typeref:typename:git_stream_registration	file:
called	my_project/libgit2/tests/libgit2/transport/register.c	/^	int *called;$/;"	m	struct:custom_subtransport	typeref:typename:int *	file:
called_proxy_creds	my_project/libgit2/tests/libgit2/online/clone.c	/^static int called_proxy_creds;$/;"	v	typeref:typename:int	file:
calllimit	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *calllimit;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
callout_data	my_project/libgit2/deps/pcre/pcre.h	/^  void        *callout_data;      \/* Data passed in with the call *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:void *
callout_data	my_project/libgit2/deps/pcre/pcre.h	/^  void        *callout_data;      \/* Data passed in with the call *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:void *
callout_data	my_project/libgit2/deps/pcre/pcre.h	/^  void        *callout_data;      \/* Data passed in with the call *\/$/;"	m	struct:pcre_callout_block	typeref:typename:void *
callout_data	my_project/libgit2/deps/pcre/pcre.h	/^  void *callout_data;             \/* Data passed back in callouts *\/$/;"	m	struct:pcre16_extra	typeref:typename:void *
callout_data	my_project/libgit2/deps/pcre/pcre.h	/^  void *callout_data;             \/* Data passed back in callouts *\/$/;"	m	struct:pcre32_extra	typeref:typename:void *
callout_data	my_project/libgit2/deps/pcre/pcre.h	/^  void *callout_data;             \/* Data passed back in callouts *\/$/;"	m	struct:pcre_extra	typeref:typename:void *
callout_data	my_project/libgit2/deps/pcre/pcre_internal.h	/^  void  *callout_data;            \/* To pass back to callouts *\/$/;"	m	struct:match_data	typeref:typename:void *
callout_data	my_project/libgit2/deps/pcre/pcre_internal.h	/^  void *callout_data;               \/* To pass back to callouts *\/$/;"	m	struct:dfa_match_data	typeref:typename:void *
callout_data	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  void *callout_data;$/;"	m	struct:jit_arguments	typeref:typename:void *	file:
callout_number	my_project/libgit2/deps/pcre/pcre.h	/^  int          callout_number;    \/* Number compiled into pattern *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
callout_number	my_project/libgit2/deps/pcre/pcre.h	/^  int          callout_number;    \/* Number compiled into pattern *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
callout_number	my_project/libgit2/deps/pcre/pcre.h	/^  int          callout_number;    \/* Number compiled into pattern *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
callpat	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define callpat /;"	d	file:
calls	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *calls;$/;"	m	struct:recurse_entry	typeref:typename:jump_list *	file:
can_link	my_project/libgit2/src/libgit2/clone.c	/^static bool can_link(const char *src, const char *dst, int link)$/;"	f	typeref:typename:bool	file:
can_symlink	my_project/libgit2/src/libgit2/checkout.c	/^	int can_symlink;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:int	file:
cancel_after	my_project/libgit2/tests/util/path/core.c	/^	int cancel_after;$/;"	m	struct:__anonb3a8d3310108	typeref:typename:int	file:
cancel_at_half	my_project/libgit2/tests/libgit2/online/clone.c	/^static int cancel_at_half(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
cancel_at_half	my_project/libgit2/tests/libgit2/online/fetch.c	/^static int cancel_at_half(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
cancel_iteration	my_project/libgit2/tests/libgit2/attr/repo.c	/^static int cancel_iteration($/;"	f	typeref:typename:int	file:
cancelled	my_project/libgit2/src/libgit2/transports/local.c	/^	git_atomic32 cancelled;$/;"	m	struct:__anona3bc4f8a0108	typeref:typename:git_atomic32	file:
cancelled	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_atomic32 cancelled;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:git_atomic32
canonicalize_directory_path	my_project/libgit2/src/libgit2/index.c	/^static int canonicalize_directory_path($/;"	f	typeref:typename:int	file:
canonicalize_tmp_path	my_project/libgit2/tests/clar/clar/sandbox.h	/^static int canonicalize_tmp_path(char *buffer)$/;"	f	typeref:typename:int
canonicalize_url	my_project/libgit2/src/libgit2/remote.c	/^static int canonicalize_url(git_str *out, const char *in)$/;"	f	typeref:typename:int	file:
cap_not_sup_err	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int cap_not_sup_err(const char *cap_name)$/;"	f	typeref:typename:int	file:
capabilities	my_project/libgit2/src/libgit2/transports/smart.h	/^	char *capabilities;$/;"	m	struct:__anonb9ceeb0b0308	typeref:typename:char *
caps	my_project/libgit2/src/libgit2/transports/smart.h	/^	transport_smart_caps caps;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:transport_smart_caps
capture_err	my_project/libgit2/src/util/process.h	/^	             capture_err : 1,$/;"	m	struct:__anon3c78bdc50108	typeref:typename:unsigned int:1
capture_err	my_project/libgit2/src/util/unix/process.c	/^	             capture_err : 1;$/;"	m	struct:git_process	typeref:typename:unsigned int:1	file:
capture_err	my_project/libgit2/src/util/win32/process.c	/^	             capture_err : 1;$/;"	m	struct:git_process	typeref:typename:unsigned int:1	file:
capture_in	my_project/libgit2/src/util/process.h	/^	unsigned int capture_in  : 1,$/;"	m	struct:__anon3c78bdc50108	typeref:typename:unsigned int:1
capture_in	my_project/libgit2/src/util/unix/process.c	/^	unsigned int capture_in  : 1,$/;"	m	struct:git_process	typeref:typename:unsigned int:1	file:
capture_in	my_project/libgit2/src/util/win32/process.c	/^	unsigned int capture_in  : 1,$/;"	m	struct:git_process	typeref:typename:unsigned int:1	file:
capture_last	my_project/libgit2/deps/pcre/pcre.h	/^  int          capture_last;      \/* Most recently closed capture *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
capture_last	my_project/libgit2/deps/pcre/pcre.h	/^  int          capture_last;      \/* Most recently closed capture *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
capture_last	my_project/libgit2/deps/pcre/pcre.h	/^  int          capture_last;      \/* Most recently closed capture *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
capture_last	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_int32 capture_last;        \/* Most recent capture number + overflow flag *\/$/;"	m	struct:match_data	typeref:typename:pcre_int32
capture_last_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 capture_last_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
capture_out	my_project/libgit2/src/util/process.h	/^	             capture_out : 1,$/;"	m	struct:__anon3c78bdc50108	typeref:typename:unsigned int:1
capture_out	my_project/libgit2/src/util/unix/process.c	/^	             capture_out : 1,$/;"	m	struct:git_process	typeref:typename:unsigned int:1	file:
capture_out	my_project/libgit2/src/util/win32/process.c	/^	             capture_out : 1,$/;"	m	struct:git_process	typeref:typename:unsigned int:1	file:
capture_top	my_project/libgit2/deps/pcre/pcre.h	/^  int          capture_top;       \/* Max current capture *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
capture_top	my_project/libgit2/deps/pcre/pcre.h	/^  int          capture_top;       \/* Max current capture *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
capture_top	my_project/libgit2/deps/pcre/pcre.h	/^  int          capture_top;       \/* Max current capture *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
case_paths	my_project/libgit2/tests/libgit2/status/worktree.c	/^static const char *case_paths[] = { "B", "H", "c", "g" };$/;"	v	typeref:typename:const char * []	file:
case_statuses	my_project/libgit2/tests/libgit2/status/worktree.c	/^static unsigned int case_statuses[] = {$/;"	v	typeref:typename:unsigned int[]	file:
casefulcmp	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *casefulcmp;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
caselesscmp	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *caselesscmp;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
caseset	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint8 caseset;    \/* offset to multichar other cases or zero *\/$/;"	m	struct:__anon9562267c0608	typeref:typename:pcre_uint8
cat_cmd	my_project/libgit2/tests/util/process/start.c	/^static git_str cat_cmd = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
catfile_mode	my_project/libgit2/examples/cat-file.c	/^} catfile_mode;$/;"	t	typeref:enum:__anon036441b00103	file:
catfile_options	my_project/libgit2/examples/cat-file.c	/^struct catfile_options {$/;"	s	file:
catposstab	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 catposstab[7][30] = {$/;"	v	typeref:typename:const pcre_uint8[7][30]	file:
cb	my_project/libgit2/src/libgit2/index.c	/^	git_index_matched_path_cb cb;$/;"	m	struct:foreach_diff_data	typeref:typename:git_index_matched_path_cb	file:
cb	my_project/libgit2/src/libgit2/iterator.c	/^	git_iterator_callbacks cb;$/;"	m	struct:__anon2f88b95a0208	typeref:typename:git_iterator_callbacks	file:
cb	my_project/libgit2/src/libgit2/iterator.h	/^	git_iterator_callbacks *cb;$/;"	m	struct:git_iterator	typeref:typename:git_iterator_callbacks *
cb	my_project/libgit2/src/libgit2/odb_loose.c	/^	git_odb_foreach_cb cb;$/;"	m	struct:foreach_state	typeref:typename:git_odb_foreach_cb	file:
cb	my_project/libgit2/src/libgit2/tag.c	/^	git_tag_foreach_cb cb;$/;"	m	struct:__anon317eab2c0108	typeref:typename:git_tag_foreach_cb	file:
cb	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^	git_push_transfer_progress_cb cb;$/;"	m	struct:push_packbuilder_payload	typeref:typename:git_push_transfer_progress_cb	file:
cb	my_project/libgit2/tests/libgit2/config/multivar.c	/^static int cb(const git_config_entry *entry, void *data)$/;"	f	typeref:typename:int	file:
cbSize	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD cbSize;$/;"	m	struct:__anon0b61ebe80808	typeref:typename:DWORD
cb__reflist_add	my_project/libgit2/src/libgit2/refs.c	/^static int cb__reflist_add(const char *ref, void *data)$/;"	f	typeref:typename:int	file:
cb_arg	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    char *cb_arg;               \/* first argument for the callback *\/$/;"	m	struct:bio_st	typeref:typename:char *
cb_data	my_project/libgit2/src/libgit2/commit_graph.c	/^	void *cb_data;$/;"	m	struct:commit_graph_write_hash_context	typeref:typename:void *	file:
cb_data	my_project/libgit2/src/libgit2/midx.c	/^	void *cb_data;$/;"	m	struct:midx_write_hash_context	typeref:typename:void *	file:
cb_data	my_project/libgit2/src/libgit2/tag.c	/^	void *cb_data;$/;"	m	struct:__anon317eab2c0108	typeref:typename:void *	file:
cb_payload	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^	void *cb_payload;$/;"	m	struct:push_packbuilder_payload	typeref:typename:void *	file:
cb_status__check_592	my_project/libgit2/tests/libgit2/status/worktree.c	/^static int cb_status__check_592(const char *p, unsigned int s, void *payload)$/;"	f	typeref:typename:int	file:
cb_status__count	my_project/libgit2/tests/libgit2/status/status_helpers.c	/^int cb_status__count(const char *p, unsigned int s, void *payload)$/;"	f	typeref:typename:int
cb_status__expected_path	my_project/libgit2/tests/libgit2/status/worktree_init.c	/^static int cb_status__expected_path(const char *p, unsigned int s, void *payload)$/;"	f	typeref:typename:int	file:
cb_status__interrupt	my_project/libgit2/tests/libgit2/status/worktree.c	/^static int cb_status__interrupt(const char *p, unsigned int s, void *payload)$/;"	f	typeref:typename:int	file:
cb_status__match	my_project/libgit2/tests/libgit2/status/submodules.c	/^static int cb_status__match(const char *p, unsigned int s, void *payload)$/;"	f	typeref:typename:int	file:
cb_status__normal	my_project/libgit2/tests/libgit2/status/status_helpers.c	/^int cb_status__normal($/;"	f	typeref:typename:int
cb_status__print	my_project/libgit2/tests/libgit2/status/status_helpers.c	/^int cb_status__print($/;"	f	typeref:typename:int
cb_status__single	my_project/libgit2/tests/libgit2/status/status_helpers.c	/^int cb_status__single(const char *p, unsigned int s, void *payload)$/;"	f	typeref:typename:int
cb_tag_foreach	my_project/libgit2/src/libgit2/pack-objects.c	/^static int cb_tag_foreach(const char *name, git_oid *oid, void *data)$/;"	f	typeref:typename:int	file:
cb_tree_walk	my_project/libgit2/src/libgit2/pack-objects.c	/^static int cb_tree_walk($/;"	f	typeref:typename:int	file:
cbegroup	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define cbegroup /;"	d	file:
cbit_cntrl	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_cntrl /;"	d
cbit_digit	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_digit /;"	d
cbit_graph	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_graph /;"	d
cbit_length	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_length /;"	d
cbit_lower	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_lower /;"	d
cbit_print	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_print /;"	d
cbit_punct	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_punct /;"	d
cbit_space	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_space /;"	d
cbit_upper	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_upper /;"	d
cbit_word	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_word /;"	d
cbit_xdigit	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define cbit_xdigit /;"	d
cbits	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uint8 *cbits;          \/* Points to character type table *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uint8 *
cbits_offset	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define cbits_offset /;"	d
cblock	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^        DES_cblock cblock;$/;"	m	union:DES_ks::__anoncf67763b010a	typeref:typename:DES_cblock
cbra_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 cbra_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
cc	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  pcre_uchar *cc;$/;"	m	struct:backtrack_common	typeref:typename:pcre_uchar *	file:
ceiling_dirs	my_project/libgit2/tests/libgit2/repo/discover.c	/^static git_str ceiling_dirs;$/;"	v	typeref:typename:git_str	file:
cert_chain	my_project/libgit2/src/libgit2/streams/schannel.c	/^	const CERT_CHAIN_CONTEXT *cert_chain;$/;"	m	struct:__anonafd1b44a0208	typeref:typename:const CERT_CHAIN_CONTEXT *	file:
cert_check_assert_invalid	my_project/libgit2/tests/libgit2/online/badssl.c	/^static int cert_check_assert_invalid(git_cert *cert, int valid, const char* host, void *payload)$/;"	f	typeref:typename:int	file:
cert_info	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^	git_cert_x509 cert_info;$/;"	m	struct:__anoncc3749c90108	typeref:typename:git_cert_x509	file:
cert_info	my_project/libgit2/src/libgit2/streams/openssl.c	/^	git_cert_x509 cert_info;$/;"	m	struct:__anonb80f06c20108	typeref:typename:git_cert_x509	file:
cert_info	my_project/libgit2/src/libgit2/streams/stransport.c	/^	git_cert_x509 cert_info;$/;"	m	struct:__anon898973fe0108	typeref:typename:git_cert_x509	file:
cert_type	my_project/libgit2/include/git2/cert.h	/^	git_cert_t cert_type;$/;"	m	struct:git_cert	typeref:typename:git_cert_t
certificate	my_project/libgit2/src/libgit2/streams/schannel.c	/^	CERT_CONTEXT *certificate;$/;"	m	struct:__anonafd1b44a0208	typeref:typename:CERT_CONTEXT *	file:
certificate_check	my_project/libgit2/include/git2/proxy.h	/^	git_transport_certificate_check_cb certificate_check;$/;"	m	struct:__anon188a123c0208	typeref:typename:git_transport_certificate_check_cb
certificate_check	my_project/libgit2/include/git2/remote.h	/^	git_transport_certificate_check_cb certificate_check;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_transport_certificate_check_cb
certificate_check	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int certificate_check(winhttp_stream *s, int valid)$/;"	f	typeref:typename:int	file:
cfg	my_project/libgit2/include/git2/sys/config.h	/^	struct git_config *cfg;$/;"	m	struct:git_config_backend	typeref:struct:git_config *
cfg	my_project/libgit2/src/libgit2/config_mem.c	/^	git_str cfg;$/;"	m	struct:__anon766d71c40108	typeref:typename:git_str	file:
cfg	my_project/libgit2/src/libgit2/transaction.c	/^	git_config *cfg;$/;"	m	struct:git_transaction	typeref:typename:git_config *	file:
cfg	my_project/libgit2/tests/libgit2/config/include.c	/^static git_config *cfg;$/;"	v	typeref:typename:git_config *	file:
cfg	my_project/libgit2/tests/libgit2/config/readonly.c	/^static git_config *cfg;$/;"	v	typeref:typename:git_config *	file:
cfg	my_project/libgit2/tests/libgit2/config/snapshot.c	/^static git_config *cfg;$/;"	v	typeref:typename:git_config *	file:
cfg	my_project/libgit2/tests/libgit2/config/validkeyname.c	/^static git_config *cfg;$/;"	v	typeref:typename:git_config *	file:
cfg_attr_file	my_project/libgit2/src/libgit2/attrcache.h	/^	char *cfg_attr_file; \/* cached value of core.attributesfile *\/$/;"	m	struct:__anon35c990e40108	typeref:typename:char *
cfg_callback_countdown	my_project/libgit2/tests/libgit2/config/read.c	/^static int cfg_callback_countdown(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
cfg_data	my_project/libgit2/src/libgit2/transaction.c	/^	void *cfg_data;$/;"	m	struct:git_transaction	typeref:typename:void *	file:
cfg_excl_file	my_project/libgit2/src/libgit2/attrcache.h	/^	char *cfg_excl_file; \/* cached value of core.excludesfile *\/$/;"	m	struct:__anon35c990e40108	typeref:typename:char *
cgraph	my_project/libgit2/src/libgit2/odb.h	/^	git_commit_graph *cgraph;$/;"	m	struct:git_odb	typeref:typename:git_commit_graph *
challenge	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_challenge challenge;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_challenge
challenge	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^	char *challenge;$/;"	m	struct:__anon7fc745b70108	typeref:typename:char *	file:
challenge	my_project/libgit2/src/libgit2/transports/auth_ntlmclient.c	/^	char *challenge;$/;"	m	struct:__anon9ffa9aaa0108	typeref:typename:char *	file:
challenge	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^	git_str challenge;$/;"	m	struct:__anon0a0089cf0108	typeref:typename:git_str	file:
challenge_for_context	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static const char *challenge_for_context($/;"	f	typeref:typename:const char *	file:
challenge_matches_scheme	my_project/libgit2/src/libgit2/transports/httpclient.c	/^GIT_INLINE(bool) challenge_matches_scheme($/;"	f	typeref:typename:bool
change_type	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	git_merge_diff_t change_type;$/;"	m	struct:merge_index_conflict_data	typeref:typename:git_merge_diff_t
channel	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^	LIBSSH2_CHANNEL *channel;$/;"	m	struct:__anonf54f66e30108	typeref:typename:LIBSSH2_CHANNEL *	file:
chanode_t	my_project/libgit2/deps/xdiff/xtypes.h	/^} chanode_t;$/;"	t	typeref:struct:s_chanode
char_get_othercase_bit	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static unsigned int char_get_othercase_bit(compiler_common *common, pcre_uchar *cc)$/;"	f	typeref:typename:unsigned int	file:
char_has_othercase	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE BOOL char_has_othercase(compiler_common *common, pcre_uchar *cc)$/;"	f	typeref:typename:SLJIT_INLINE BOOL	file:
char_iterator_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct char_iterator_backtrack {$/;"	s	file:
char_iterator_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} char_iterator_backtrack;$/;"	t	typeref:struct:char_iterator_backtrack	file:
char_othercase	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE unsigned int char_othercase(compiler_common *common, unsigned int c)$/;"	f	typeref:typename:SLJIT_INLINE unsigned int	file:
character_to_int32	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static sljit_s32 character_to_int32(pcre_uchar chr)$/;"	f	typeref:typename:sljit_s32	file:
charf	my_project/libgit2/deps/zlib/zconf.h	/^#  define charf /;"	d
charf	my_project/libgit2/deps/zlib/zconf.h	/^typedef char  FAR charf;$/;"	t	typeref:typename:char FAR
charpos	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    } charpos;$/;"	m	union:char_iterator_backtrack::__anon4bd17169020a	typeref:struct:char_iterator_backtrack::__anon4bd17169020a::__anon4bd171690308	file:
charptr	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define charptr /;"	d	file:
chartype	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint8 chartype;   \/* ucp_Cc, etc. (general categories) *\/$/;"	m	struct:__anon9562267c0608	typeref:typename:pcre_uint8
chastore_t	my_project/libgit2/deps/xdiff/xtypes.h	/^} chastore_t;$/;"	t	typeref:struct:s_chastore
chdir	my_project/libgit2/tests/clar/clar.c	/^#		define chdir(/;"	d	file:
check	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned long check;        \/* protected copy of check value *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned long
check	my_project/libgit2/examples/tag.c	/^static void check(int result, const char *message)$/;"	f	typeref:typename:void	file:
check	my_project/libgit2/include/git2/sys/filter.h	/^	git_filter_check_fn    check;$/;"	m	struct:git_filter	typeref:typename:git_filter_check_fn
check_against_known_hosts	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int check_against_known_hosts($/;"	f	typeref:typename:int	file:
check_anynewline	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void check_anynewline(compiler_common *common)$/;"	f	typeref:typename:void	file:
check_backend_sorting	my_project/libgit2/tests/libgit2/odb/sorting.c	/^static void check_backend_sorting(git_odb *odb)$/;"	f	typeref:typename:void	file:
check_basename	my_project/libgit2/tests/util/path/core.c	/^check_basename(const char *A, const char *B)$/;"	f	typeref:typename:void	file:
check_blame_hunk_index	my_project/libgit2/tests/libgit2/blame/blame_helpers.c	/^void check_blame_hunk_index(git_repository *repo, git_blame *blame, int idx,$/;"	f	typeref:typename:void
check_buf	my_project/libgit2/tests/util/gitstr.c	/^#define check_buf(/;"	d	file:
check_buf_append	my_project/libgit2/tests/util/gitstr.c	/^check_buf_append($/;"	f	typeref:typename:void	file:
check_buf_append_abc	my_project/libgit2/tests/util/gitstr.c	/^check_buf_append_abc($/;"	f	typeref:typename:void	file:
check_certificate	my_project/libgit2/src/libgit2/streams/schannel.c	/^static int check_certificate(schannel_stream* st)$/;"	f	typeref:typename:int	file:
check_certificate	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int check_certificate($/;"	f	typeref:typename:int	file:
check_certificate	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int check_certificate($/;"	f	typeref:typename:int	file:
check_char_prop	my_project/libgit2/deps/pcre/pcre_compile.c	/^check_char_prop(pcre_uint32 c, unsigned int ptype, unsigned int pdata,$/;"	f	typeref:typename:BOOL	file:
check_class_ranges	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static BOOL check_class_ranges(compiler_common *common, const sljit_u8 *bits, BOOL nclass, BOOL /;"	f	typeref:typename:BOOL	file:
check_counts	my_project/libgit2/tests/util/dirent.c	/^static void check_counts(walk_data *d)$/;"	f	typeref:typename:void	file:
check_crlf	my_project/libgit2/src/libgit2/crlf.c	/^static git_crlf_t check_crlf(const char *value)$/;"	f	typeref:typename:git_crlf_t	file:
check_delta_limit	my_project/libgit2/src/libgit2/pack-objects.c	/^static size_t check_delta_limit(git_pobject *me, size_t n)$/;"	f	typeref:typename:size_t	file:
check_diff_patches	my_project/libgit2/tests/libgit2/diff/submodules.c	/^#define check_diff_patches(/;"	d	file:
check_diff_patches_at_line	my_project/libgit2/tests/libgit2/diff/submodules.c	/^static void check_diff_patches_at_line($/;"	f	typeref:typename:void	file:
check_dirname	my_project/libgit2/tests/util/path/core.c	/^check_dirname(const char *A, const char *B)$/;"	f	typeref:typename:void	file:
check_entry	my_project/libgit2/src/libgit2/tree.c	/^static int check_entry(git_repository *repo, const char *filename, const git_oid *id, git_filemo/;"	f	typeref:typename:int	file:
check_eol	my_project/libgit2/src/libgit2/crlf.c	/^static git_configmap_value check_eol(const char *value)$/;"	f	typeref:typename:git_configmap_value	file:
check_error	my_project/libgit2/examples/general.c	/^static void check_error(int error_code, const char *action)$/;"	f	typeref:typename:void	file:
check_escape	my_project/libgit2/deps/pcre/pcre_compile.c	/^check_escape(const pcre_uchar **ptrptr, pcre_uint32 *chptr, int *errorcodeptr,$/;"	f	typeref:typename:int	file:
check_extensions	my_project/libgit2/src/libgit2/repository.c	/^static int check_extensions(git_config *config, int version)$/;"	f	typeref:typename:int	file:
check_file_contents	my_project/libgit2/tests/libgit2/checkout/checkout_helpers.h	/^#define check_file_contents(/;"	d
check_file_contents_nocr	my_project/libgit2/tests/libgit2/checkout/checkout_helpers.h	/^#define check_file_contents_nocr(/;"	d
check_file_directory_collision	my_project/libgit2/src/libgit2/index.c	/^static int check_file_directory_collision(git_index *index,$/;"	f	typeref:typename:int	file:
check_filenames	my_project/libgit2/src/libgit2/patch_parse.c	/^static int check_filenames(git_patch_parsed *patch)$/;"	f	typeref:typename:int	file:
check_fromurl	my_project/libgit2/tests/util/path/core.c	/^static void check_fromurl(const char *expected_result, const char *input, int should_fail)$/;"	f	typeref:typename:void	file:
check_get_multivar	my_project/libgit2/tests/libgit2/config/multivar.c	/^static void check_get_multivar(git_config *cfg, int expected)$/;"	f	typeref:typename:void	file:
check_get_multivar_foreach	my_project/libgit2/tests/libgit2/config/multivar.c	/^static void check_get_multivar_foreach($/;"	f	typeref:typename:void	file:
check_glob_iter	my_project/libgit2/tests/libgit2/config/read.c	/^static void check_glob_iter(git_config *cfg, const char *regexp, int expected)$/;"	f	typeref:typename:void	file:
check_global_searchpath	my_project/libgit2/tests/libgit2/core/env.c	/^static void check_global_searchpath($/;"	f	typeref:typename:void	file:
check_header_names	my_project/libgit2/src/libgit2/patch_parse.c	/^static int check_header_names($/;"	f	typeref:typename:int	file:
check_host_name	my_project/libgit2/src/libgit2/streams/openssl.c	/^static bool check_host_name(const char *host, const char *name)$/;"	f	typeref:typename:bool	file:
check_hspace	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void check_hspace(compiler_common *common)$/;"	f	typeref:typename:void	file:
check_index_range	my_project/libgit2/tests/libgit2/iterator/index.c	/^static void check_index_range($/;"	f	typeref:typename:void	file:
check_invariant	my_project/libgit2/src/util/tsort.c	/^static int check_invariant(struct tsort_run *stack, ssize_t stack_curr)$/;"	f	typeref:typename:int	file:
check_joinbuf_2	my_project/libgit2/tests/util/gitstr.c	/^check_joinbuf_2($/;"	f	typeref:typename:void	file:
check_joinbuf_n_2	my_project/libgit2/tests/util/gitstr.c	/^check_joinbuf_n_2($/;"	f	typeref:typename:void	file:
check_joinbuf_n_4	my_project/libgit2/tests/util/gitstr.c	/^check_joinbuf_n_4($/;"	f	typeref:typename:void	file:
check_joinbuf_overlapped	my_project/libgit2/tests/util/gitstr.c	/^check_joinbuf_overlapped($/;"	f	typeref:typename:void	file:
check_joinpath	my_project/libgit2/tests/util/path/core.c	/^check_joinpath(const char *path_a, const char *path_b, const char *expected_path)$/;"	f	typeref:typename:void	file:
check_joinpath_n	my_project/libgit2/tests/util/path/core.c	/^check_joinpath_n($/;"	f	typeref:typename:void	file:
check_lg2	my_project/libgit2/examples/common.c	/^void check_lg2(int error, const char *message, const char *extra)$/;"	f	typeref:typename:void
check_lookbehind	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL check_lookbehind;            \/* Lookbehinds need later checking *\/$/;"	m	struct:compile_data	typeref:typename:BOOL
check_lref	my_project/libgit2/src/libgit2/push.c	/^static int check_lref(git_push *push, char *ref)$/;"	f	typeref:typename:int	file:
check_mailmap_entries	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^static void check_mailmap_entries($/;"	f	typeref:typename:void	file:
check_mailmap_resolve	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^static void check_mailmap_resolve($/;"	f	typeref:typename:void	file:
check_match	my_project/libgit2/deps/zlib/deflate.c	/^#  define check_match(/;"	d	file:
check_match	my_project/libgit2/deps/zlib/deflate.c	/^local void check_match(deflate_state *s, IPos start, IPos match, int length) {$/;"	f	typeref:typename:local void
check_mode	my_project/libgit2/tests/util/mkdir.c	/^#define check_mode(/;"	d	file:
check_mode_at_line	my_project/libgit2/tests/util/mkdir.c	/^static void check_mode_at_line($/;"	f	typeref:typename:void	file:
check_newlinechar	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void check_newlinechar(compiler_common *common, int nltype, jump_list **backtracks, BOOL /;"	f	typeref:typename:void	file:
check_object_connectivity	my_project/libgit2/src/libgit2/indexer.c	/^static int check_object_connectivity(git_indexer *idx, const git_rawobj *obj)$/;"	f	typeref:typename:int	file:
check_object_files	my_project/libgit2/tests/libgit2/object/raw/write.c	/^static void check_object_files(object_data *d)$/;"	f	typeref:typename:void	file:
check_one_assign	my_project/libgit2/tests/libgit2/attr/file.c	/^static void check_one_assign($/;"	f	typeref:typename:void	file:
check_one_walkup_step	my_project/libgit2/tests/util/path/core.c	/^static int check_one_walkup_step(void *ref, const char *path)$/;"	f	typeref:typename:int	file:
check_opcode_types	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static BOOL check_opcode_types(compiler_common *common, pcre_uchar *cc, pcre_uchar *ccend)$/;"	f	typeref:typename:BOOL	file:
check_partial	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void check_partial(compiler_common *common, BOOL force)$/;"	f	typeref:typename:void	file:
check_partial_oid	my_project/libgit2/tests/libgit2/object/raw/convert.c	/^static void check_partial_oid($/;"	f	typeref:typename:void	file:
check_patch	my_project/libgit2/src/libgit2/patch_parse.c	/^static int check_patch(git_patch_parsed *patch)$/;"	f	typeref:typename:int	file:
check_path_to_dir	my_project/libgit2/tests/util/path/core.c	/^check_path_to_dir($/;"	f	typeref:typename:void	file:
check_percent_decoding	my_project/libgit2/tests/util/path/core.c	/^static void check_percent_decoding(const char *expected_result, const char *input)$/;"	f	typeref:typename:void	file:
check_posix_name	my_project/libgit2/deps/pcre/pcre_compile.c	/^check_posix_name(const pcre_uchar *ptr, int len)$/;"	f	typeref:typename:int	file:
check_posix_syntax	my_project/libgit2/deps/pcre/pcre_compile.c	/^check_posix_syntax(const pcre_uchar *ptr, const pcre_uchar **endptr)$/;"	f	typeref:typename:BOOL	file:
check_prefix	my_project/libgit2/src/libgit2/patch_parse.c	/^static int check_prefix($/;"	f	typeref:typename:int	file:
check_prototype_definition_safe	my_project/libgit2/cmake/CheckPrototypeDefinitionSafe.cmake	/^function(check_prototype_definition_safe function prototype return header variable)$/;"	f
check_removal_cb	my_project/libgit2/tests/libgit2/diff/patch.c	/^static int check_removal_cb($/;"	f	typeref:typename:int	file:
check_repositoryformatversion	my_project/libgit2/src/libgit2/repository.c	/^static int check_repositoryformatversion(int *version, git_config *config)$/;"	f	typeref:typename:int	file:
check_rref	my_project/libgit2/src/libgit2/push.c	/^static int check_rref(char *ref)$/;"	f	typeref:typename:int	file:
check_safecrlf	my_project/libgit2/src/libgit2/crlf.c	/^GIT_INLINE(int) check_safecrlf($/;"	f	typeref:typename:int
check_setenv	my_project/libgit2/tests/util/path/core.c	/^static void check_setenv(const char* name, const char* value)$/;"	f	typeref:typename:void	file:
check_single_patch_stats	my_project/libgit2/tests/libgit2/diff/patch.c	/^static void check_single_patch_stats($/;"	f	typeref:typename:void	file:
check_some_bits	my_project/libgit2/tests/util/bitvec.c	/^static void check_some_bits(git_bitvec *bv, size_t length)$/;"	f	typeref:typename:void	file:
check_ssh_auth_methods	my_project/libgit2/tests/libgit2/online/clone.c	/^static int check_ssh_auth_methods(git_credential **cred, const char *url, const char *username_f/;"	f	typeref:typename:int	file:
check_start_used_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void check_start_used_ptr(compiler_common *common)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
check_stat_data	my_project/libgit2/tests/libgit2/index/addall.c	/^static void check_stat_data(git_index *index, const char *path, bool match)$/;"	f	typeref:typename:void	file:
check_status	my_project/libgit2/tests/libgit2/index/addall.c	/^#define check_status(/;"	d	file:
check_status	my_project/libgit2/tests/libgit2/status/renames.c	/^static void check_status($/;"	f	typeref:typename:void	file:
check_status0	my_project/libgit2/tests/libgit2/status/worktree.c	/^static void check_status0(git_status_list *status)$/;"	f	typeref:typename:void	file:
check_status_at_line	my_project/libgit2/tests/libgit2/index/addall.c	/^static void check_status_at_line($/;"	f	typeref:typename:void	file:
check_str_end	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void check_str_end(compiler_common *common, jump_list **end_reached)$/;"	f	typeref:typename:void	file:
check_string_to_dir	my_project/libgit2/tests/util/path/core.c	/^check_string_to_dir($/;"	f	typeref:typename:void	file:
check_tree_entry	my_project/libgit2/tests/libgit2/iterator/tree.c	/^static void check_tree_entry($/;"	f	typeref:typename:void	file:
check_tree_range	my_project/libgit2/tests/libgit2/iterator/tree.c	/^static void check_tree_range($/;"	f	typeref:typename:void	file:
check_type_combination	my_project/libgit2/src/libgit2/object.c	/^static int check_type_combination(git_object_t type, git_object_t target)$/;"	f	typeref:typename:int	file:
check_valid_extension	my_project/libgit2/src/libgit2/repository.c	/^static int check_valid_extension(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
check_vspace	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void check_vspace(compiler_common *common)$/;"	f	typeref:typename:void	file:
check_walkup_info	my_project/libgit2/tests/util/path/core.c	/^} check_walkup_info;$/;"	t	typeref:struct:__anonb3a8d3310108	file:
check_wd_first_through_third_range	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^static void check_wd_first_through_third_range($/;"	f	typeref:typename:void	file:
check_wordboundary	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void check_wordboundary(compiler_common *common)$/;"	f	typeref:typename:void	file:
checked	my_project/libgit2/src/libgit2/commit_graph.h	/^	bool checked;$/;"	m	struct:git_commit_graph	typeref:typename:bool
checkout	my_project/libgit2/src/cli/cmd_clone.c	/^static int show_help, quiet, checkout = 1, bare;$/;"	v	typeref:typename:int	file:
checkout_action	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_action($/;"	f	typeref:typename:int	file:
checkout_action_common	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_action_common($/;"	f	typeref:typename:int	file:
checkout_action_no_wd	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_action_no_wd($/;"	f	typeref:typename:int	file:
checkout_action_wd_only	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_action_wd_only($/;"	f	typeref:typename:int	file:
checkout_action_with_wd	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_action_with_wd($/;"	f	typeref:typename:int	file:
checkout_action_with_wd_blocker	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_action_with_wd_blocker($/;"	f	typeref:typename:int	file:
checkout_action_with_wd_dir	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_action_with_wd_dir($/;"	f	typeref:typename:int	file:
checkout_action_with_wd_dir_empty	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_action_with_wd_dir_empty($/;"	f	typeref:typename:int	file:
checkout_blob	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_blob($/;"	f	typeref:typename:int	file:
checkout_branch	my_project/libgit2/include/git2/clone.h	/^	const char *checkout_branch;$/;"	m	struct:git_clone_options	typeref:typename:const char *
checkout_branch	my_project/libgit2/src/libgit2/clone.c	/^static int checkout_branch(git_repository *repo, git_remote *remote, const git_checkout_options /;"	f	typeref:typename:int	file:
checkout_cancel_at	my_project/libgit2/tests/libgit2/checkout/tree.c	/^struct checkout_cancel_at {$/;"	s	file:
checkout_cancel_cb	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static int checkout_cancel_cb($/;"	f	typeref:typename:int	file:
checkout_conflict_add	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_conflict_add($/;"	f	typeref:typename:int	file:
checkout_conflict_append_remove	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_conflict_append_remove($/;"	f	typeref:typename:int	file:
checkout_conflict_append_update	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_conflict_append_update($/;"	f	typeref:typename:int	file:
checkout_conflict_count_cb	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static int checkout_conflict_count_cb($/;"	f	typeref:typename:int	file:
checkout_conflict_detect_binary	my_project/libgit2/src/libgit2/checkout.c	/^GIT_INLINE(int) checkout_conflict_detect_binary(git_repository *repo, checkout_conflictdata *con/;"	f	typeref:typename:int
checkout_conflict_detect_submodule	my_project/libgit2/src/libgit2/checkout.c	/^GIT_INLINE(int) checkout_conflict_detect_submodule(checkout_conflictdata *conflict)$/;"	f	typeref:typename:int
checkout_conflict_update_index	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_conflict_update_index($/;"	f	typeref:typename:int	file:
checkout_conflictdata	my_project/libgit2/src/libgit2/checkout.c	/^} checkout_conflictdata;$/;"	t	typeref:struct:__anon35c6e5c60308	file:
checkout_conflictdata_cmp	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_conflictdata_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
checkout_conflictdata_empty	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_conflictdata_empty($/;"	f	typeref:typename:int	file:
checkout_conflicts_cmp_ancestor	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_conflicts_cmp_ancestor(const void *p, const void *c)$/;"	f	typeref:typename:int	file:
checkout_conflicts_cmp_entry	my_project/libgit2/src/libgit2/checkout.c	/^GIT_INLINE(int) checkout_conflicts_cmp_entry($/;"	f	typeref:typename:int
checkout_conflicts_coalesce_renames	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_conflicts_coalesce_renames($/;"	f	typeref:typename:int	file:
checkout_conflicts_foreach	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_conflicts_foreach($/;"	f	typeref:typename:int	file:
checkout_conflicts_load	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_conflicts_load(checkout_data *data, git_iterator *workdir, git_vector *paths/;"	f	typeref:typename:int	file:
checkout_conflicts_load_byname_entry	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_conflicts_load_byname_entry($/;"	f	typeref:typename:int	file:
checkout_conflicts_mark_directoryfile	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_conflicts_mark_directoryfile($/;"	f	typeref:typename:int	file:
checkout_conflicts_search_ancestor	my_project/libgit2/src/libgit2/checkout.c	/^static checkout_conflictdata *checkout_conflicts_search_ancestor($/;"	f	typeref:typename:checkout_conflictdata *	file:
checkout_conflicts_search_branch	my_project/libgit2/src/libgit2/checkout.c	/^static checkout_conflictdata *checkout_conflicts_search_branch($/;"	f	typeref:typename:checkout_conflictdata *	file:
checkout_count_callback	my_project/libgit2/tests/libgit2/checkout/checkout_helpers.c	/^int checkout_count_callback($/;"	f	typeref:typename:int
checkout_counts	my_project/libgit2/tests/libgit2/checkout/checkout_helpers.h	/^} checkout_counts;$/;"	t	typeref:struct:__anon5b89200d0108
checkout_create_conflicts	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_create_conflicts(checkout_data *data)$/;"	f	typeref:typename:int	file:
checkout_create_submodules	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_create_submodules($/;"	f	typeref:typename:int	file:
checkout_create_the_new	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_create_the_new($/;"	f	typeref:typename:int	file:
checkout_data	my_project/libgit2/src/libgit2/checkout.c	/^} checkout_data;$/;"	t	typeref:struct:__anon35c6e5c60208	file:
checkout_data_clear	my_project/libgit2/src/libgit2/checkout.c	/^static void checkout_data_clear(checkout_data *data)$/;"	f	typeref:typename:void	file:
checkout_data_init	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_data_init($/;"	f	typeref:typename:int	file:
checkout_existing	my_project/libgit2/include/git2/worktree.h	/^	int checkout_existing;	\/**< allow checkout of existing branch matching worktree name *\/$/;"	m	struct:git_worktree_add_options	typeref:typename:int
checkout_extensions_update_index	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_extensions_update_index(checkout_data *data)$/;"	f	typeref:typename:int	file:
checkout_get_actions	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_get_actions($/;"	f	typeref:typename:int	file:
checkout_get_remove_conflicts	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_get_remove_conflicts($/;"	f	typeref:typename:int	file:
checkout_get_update_conflicts	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_get_update_conflicts($/;"	f	typeref:typename:int	file:
checkout_idxentry_cmp	my_project/libgit2/src/libgit2/checkout.c	/^GIT_INLINE(int) checkout_idxentry_cmp($/;"	f	typeref:typename:int
checkout_index_entry	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^struct checkout_index_entry {$/;"	s	file:
checkout_is_empty_dir	my_project/libgit2/src/libgit2/checkout.c	/^static bool checkout_is_empty_dir(checkout_data *data, const char *path)$/;"	f	typeref:typename:bool	file:
checkout_is_workdir_modified	my_project/libgit2/src/libgit2/checkout.c	/^static bool checkout_is_workdir_modified($/;"	f	typeref:typename:bool	file:
checkout_lookup_head_tree	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_lookup_head_tree(git_tree **out, git_repository *repo)$/;"	f	typeref:typename:int	file:
checkout_merge_path	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_merge_path($/;"	f	typeref:typename:int	file:
checkout_message	my_project/libgit2/src/libgit2/repository.c	/^static int checkout_message(git_str *out, git_reference *old, const char *new)$/;"	f	typeref:typename:int	file:
checkout_mkdir	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_mkdir($/;"	f	typeref:typename:int	file:
checkout_name_entry	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^struct checkout_name_entry {$/;"	s	file:
checkout_notify	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_notify($/;"	f	typeref:typename:int	file:
checkout_notify	my_project/libgit2/tests/libgit2/stash/apply.c	/^static int checkout_notify($/;"	f	typeref:typename:int	file:
checkout_notify_called	my_project/libgit2/tests/libgit2/submodule/update.c	/^	int checkout_notify_called;$/;"	m	struct:update_submodule_cb_payload	typeref:typename:int	file:
checkout_notify_cb	my_project/libgit2/tests/libgit2/submodule/update.c	/^static int checkout_notify_cb($/;"	f	typeref:typename:int	file:
checkout_options	my_project/libgit2/examples/checkout.c	/^} checkout_options;$/;"	t	typeref:struct:__anona3d43da10108	file:
checkout_options	my_project/libgit2/include/git2/rebase.h	/^	git_checkout_options checkout_options;$/;"	m	struct:__anonf9a5428c0108	typeref:typename:git_checkout_options
checkout_options	my_project/libgit2/include/git2/stash.h	/^	git_checkout_options checkout_options;$/;"	m	struct:git_stash_apply_options	typeref:typename:git_checkout_options
checkout_options	my_project/libgit2/include/git2/worktree.h	/^	git_checkout_options checkout_options;$/;"	m	struct:git_worktree_add_options	typeref:typename:git_checkout_options
checkout_opts	my_project/libgit2/include/git2/cherrypick.h	/^	git_checkout_options checkout_opts; \/**< Options for the checkout *\/$/;"	m	struct:__anon241c174e0108	typeref:typename:git_checkout_options
checkout_opts	my_project/libgit2/include/git2/clone.h	/^	git_checkout_options checkout_opts;$/;"	m	struct:git_clone_options	typeref:typename:git_checkout_options
checkout_opts	my_project/libgit2/include/git2/revert.h	/^	git_checkout_options checkout_opts; \/**< Options for the checkout *\/$/;"	m	struct:__anon289484920108	typeref:typename:git_checkout_options
checkout_opts	my_project/libgit2/include/git2/submodule.h	/^	git_checkout_options checkout_opts;$/;"	m	struct:git_submodule_update_options	typeref:typename:git_checkout_options
checkout_opts	my_project/libgit2/tests/libgit2/checkout/icase.c	/^static git_checkout_options checkout_opts;$/;"	v	typeref:typename:git_checkout_options	file:
checkout_opts	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^static git_checkout_options checkout_opts;$/;"	v	typeref:typename:git_checkout_options	file:
checkout_path_suffixed	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_path_suffixed(git_str *path, const char *suffix)$/;"	f	typeref:typename:int	file:
checkout_progress	my_project/libgit2/examples/clone.c	/^static void checkout_progress(const char *path, size_t cur, size_t tot, void *payload)$/;"	f	typeref:typename:void	file:
checkout_progress	my_project/libgit2/tests/libgit2/online/clone.c	/^static void checkout_progress(const char *path, size_t cur, size_t tot, void *payload)$/;"	f	typeref:typename:void	file:
checkout_progress_called	my_project/libgit2/tests/libgit2/submodule/update.c	/^	int checkout_progress_called;$/;"	m	struct:update_submodule_cb_payload	typeref:typename:int	file:
checkout_progress_cb	my_project/libgit2/tests/libgit2/submodule/update.c	/^static void checkout_progress_cb($/;"	f	typeref:typename:void	file:
checkout_progress_counter	my_project/libgit2/tests/libgit2/checkout/index.c	/^static void checkout_progress_counter($/;"	f	typeref:typename:void	file:
checkout_queue_remove	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_queue_remove(checkout_data *data, const char *path)$/;"	f	typeref:typename:int	file:
checkout_remaining_wd_items	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_remaining_wd_items($/;"	f	typeref:typename:int	file:
checkout_remove_conflicts	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_remove_conflicts(checkout_data *data)$/;"	f	typeref:typename:int	file:
checkout_remove_the_old	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_remove_the_old($/;"	f	typeref:typename:int	file:
checkout_safe_for_update_only	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_safe_for_update_only($/;"	f	typeref:typename:int	file:
checkout_strategy	my_project/libgit2/include/git2/checkout.h	/^	unsigned int checkout_strategy; \/**< default will be a safe checkout *\/$/;"	m	struct:git_checkout_options	typeref:typename:unsigned int
checkout_stream	my_project/libgit2/src/libgit2/checkout.c	/^struct checkout_stream {$/;"	s	file:
checkout_stream_close	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_stream_close(git_writestream *s)$/;"	f	typeref:typename:int	file:
checkout_stream_free	my_project/libgit2/src/libgit2/checkout.c	/^static void checkout_stream_free(git_writestream *s)$/;"	f	typeref:typename:void	file:
checkout_stream_write	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_stream_write($/;"	f	typeref:typename:int	file:
checkout_submodule	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_submodule($/;"	f	typeref:typename:int	file:
checkout_submodule_update_index	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_submodule_update_index($/;"	f	typeref:typename:int	file:
checkout_target_fullpath	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_target_fullpath($/;"	f	typeref:typename:int	file:
checkout_tree_with_blob_ignored_in_workdir	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static int checkout_tree_with_blob_ignored_in_workdir(int strategy, bool isdir)$/;"	f	typeref:typename:int	file:
checkout_update_index	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_update_index($/;"	f	typeref:typename:int	file:
checkout_verify_paths	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_verify_paths($/;"	f	typeref:typename:int	file:
checkout_write_content	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_write_content($/;"	f	typeref:typename:int	file:
checkout_write_entries	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_write_entries($/;"	f	typeref:typename:int	file:
checkout_write_entry	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_write_entry($/;"	f	typeref:typename:int	file:
checkout_write_merge	my_project/libgit2/src/libgit2/checkout.c	/^static int checkout_write_merge($/;"	f	typeref:typename:int	file:
checksum	my_project/libgit2/src/libgit2/commit_graph.h	/^	unsigned char checksum[GIT_HASH_SHA1_SIZE];$/;"	m	struct:git_commit_graph_file	typeref:typename:unsigned char[]
checksum	my_project/libgit2/src/libgit2/config_file.c	/^	unsigned char checksum[GIT_HASH_SHA256_SIZE];$/;"	m	struct:config_file	typeref:typename:unsigned char[]	file:
checksum	my_project/libgit2/src/libgit2/index.h	/^	unsigned char checksum[GIT_HASH_MAX_SIZE];$/;"	m	struct:git_index	typeref:typename:unsigned char[]
checksum	my_project/libgit2/src/libgit2/indexer.c	/^	unsigned char checksum[GIT_HASH_MAX_SIZE];$/;"	m	struct:git_indexer	typeref:typename:unsigned char[]	file:
checksum	my_project/libgit2/src/libgit2/midx.h	/^	unsigned char checksum[GIT_HASH_MAX_SIZE];$/;"	m	struct:git_midx_file	typeref:typename:unsigned char[]
cherrypick_normalize_opts	my_project/libgit2/src/libgit2/cherrypick.c	/^static int cherrypick_normalize_opts($/;"	f	typeref:typename:int	file:
cherrypick_seterr	my_project/libgit2/src/libgit2/cherrypick.c	/^static int cherrypick_seterr(git_commit *commit, const char *fmt)$/;"	f	typeref:typename:int	file:
cherrypick_state_cleanup	my_project/libgit2/src/libgit2/cherrypick.c	/^static int cherrypick_state_cleanup(git_repository *repo)$/;"	f	typeref:typename:int	file:
chg0	my_project/libgit2/deps/xdiff/xmerge.c	/^	long chg0;$/;"	m	struct:s_xdmerge	typeref:typename:long	file:
chg1	my_project/libgit2/deps/xdiff/xdiffi.h	/^	long chg1, chg2;$/;"	m	struct:s_xdchange	typeref:typename:long
chg1	my_project/libgit2/deps/xdiff/xmerge.c	/^	long chg1, chg2;$/;"	m	struct:s_xdmerge	typeref:typename:long	file:
chg2	my_project/libgit2/deps/xdiff/xdiffi.h	/^	long chg1, chg2;$/;"	m	struct:s_xdchange	typeref:typename:long
chg2	my_project/libgit2/deps/xdiff/xmerge.c	/^	long chg1, chg2;$/;"	m	struct:s_xdmerge	typeref:typename:long	file:
child_err	my_project/libgit2/src/util/unix/process.c	/^	int child_err;$/;"	m	struct:git_process	typeref:typename:int	file:
child_err	my_project/libgit2/src/util/win32/process.c	/^	HANDLE child_err;$/;"	m	struct:git_process	typeref:typename:HANDLE	file:
child_in	my_project/libgit2/src/util/unix/process.c	/^	int child_in;$/;"	m	struct:git_process	typeref:typename:int	file:
child_in	my_project/libgit2/src/util/win32/process.c	/^	HANDLE child_in;$/;"	m	struct:git_process	typeref:typename:HANDLE	file:
child_out	my_project/libgit2/src/util/unix/process.c	/^	int child_out;$/;"	m	struct:git_process	typeref:typename:int	file:
child_out	my_project/libgit2/src/util/win32/process.c	/^	HANDLE child_out;$/;"	m	struct:git_process	typeref:typename:HANDLE	file:
children	my_project/libgit2/src/libgit2/oid.c	/^	node_index children[16];$/;"	m	union:__anon312886ec010a	typeref:typename:node_index[16]	file:
children	my_project/libgit2/src/libgit2/tree-cache.h	/^	struct git_tree_cache **children;$/;"	m	struct:git_tree_cache	typeref:struct:git_tree_cache **
children_count	my_project/libgit2/src/libgit2/tree-cache.h	/^	size_t children_count;$/;"	m	struct:git_tree_cache	typeref:typename:size_t
chmod_calls	my_project/libgit2/include/git2/checkout.h	/^	size_t chmod_calls;$/;"	m	struct:__anon65c3b8100308	typeref:typename:size_t
chmod_calls	my_project/libgit2/src/util/futils.h	/^	size_t chmod_calls;$/;"	m	struct:git_futils_mkdir_perfdata	typeref:typename:size_t
chr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^      pcre_uchar chr;$/;"	m	struct:char_iterator_backtrack::__anon4bd17169020a::__anon4bd171690308	typeref:typename:pcre_uchar	file:
chromium_zlib	my_project/libgit2/deps/chromium-zlib/CMakeLists.txt	/^add_library(chromium_zlib OBJECT ${SRC_ZLIB})$/;"	t
chunk_buffer	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	char *chunk_buffer;$/;"	m	struct:__anon5ba854ad0208	typeref:typename:char *	file:
chunk_buffer_len	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	unsigned chunk_buffer_len;$/;"	m	struct:__anon5ba854ad0208	typeref:typename:unsigned	file:
chunked	my_project/libgit2/src/libgit2/transports/http.c	/^	             chunked : 1;$/;"	m	struct:__anon515ae8bf0208	typeref:typename:unsigned int:1	file:
chunked	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	unsigned chunked : 1,              \/**< Post with chunking *\/$/;"	m	struct:__anon3d590bc30208	typeref:typename:unsigned:1
chunked	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	unsigned chunked : 1,             \/**< Response body is chunked *\/$/;"	m	struct:__anon3d590bc30308	typeref:typename:unsigned:1
chunked	my_project/libgit2/src/libgit2/transports/winhttp.c	/^		chunked : 1,$/;"	m	struct:__anon5ba854ad0208	typeref:typename:unsigned:1	file:
chunks	my_project/libgit2/src/libgit2/commit_graph.c	/^	uint8_t chunks;$/;"	m	struct:git_commit_graph_header	typeref:typename:uint8_t	file:
chunks	my_project/libgit2/src/libgit2/midx.c	/^	uint8_t chunks;$/;"	m	struct:git_midx_header	typeref:typename:uint8_t	file:
ciphers_list	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static int ciphers_list[GIT_SSL_DEFAULT_CIPHERS_COUNT];$/;"	v	typeref:typename:int[]	file:
ciphertext_in	my_project/libgit2/src/libgit2/streams/schannel.c	/^	git_str ciphertext_in;$/;"	m	struct:__anonafd1b44a0208	typeref:typename:git_str	file:
cl__free	my_project/libgit2/tests/clar/clar_libgit2_alloc.c	/^static void cl__free(void *ptr)$/;"	f	typeref:typename:void	file:
cl__malloc	my_project/libgit2/tests/clar/clar_libgit2_alloc.c	/^static void *cl__malloc(size_t len, const char *file, int line)$/;"	f	typeref:typename:void *	file:
cl__realloc	my_project/libgit2/tests/clar/clar_libgit2_alloc.c	/^static void *cl__realloc(void *ptr, size_t size, const char *file, int line)$/;"	f	typeref:typename:void *	file:
cl_alloc_limit	my_project/libgit2/tests/clar/clar_libgit2_alloc.c	/^void cl_alloc_limit(size_t bytes)$/;"	f	typeref:typename:void
cl_alloc_reset	my_project/libgit2/tests/clar/clar_libgit2_alloc.c	/^void cl_alloc_reset(void)$/;"	f	typeref:typename:void
cl_assert	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert(/;"	d
cl_assert_	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert_(/;"	d
cl_assert_at_line	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define cl_assert_at_line(/;"	d
cl_assert_equal_b	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert_equal_b(/;"	d
cl_assert_equal_file	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define cl_assert_equal_file(/;"	d
cl_assert_equal_file_ignore_cr	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define cl_assert_equal_file_ignore_cr(/;"	d
cl_assert_equal_i	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert_equal_i(/;"	d
cl_assert_equal_i_	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert_equal_i_(/;"	d
cl_assert_equal_i_fmt	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert_equal_i_fmt(/;"	d
cl_assert_equal_i_src	my_project/libgit2/tests/libgit2/diff/parse.c	/^#define cl_assert_equal_i_src(/;"	d	file:
cl_assert_equal_oid	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define cl_assert_equal_oid(/;"	d
cl_assert_equal_oidstr	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define cl_assert_equal_oidstr(/;"	d
cl_assert_equal_p	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert_equal_p(/;"	d
cl_assert_equal_s	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert_equal_s(/;"	d
cl_assert_equal_s_	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert_equal_s_(/;"	d
cl_assert_equal_strn	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert_equal_strn(/;"	d
cl_assert_equal_strn_	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert_equal_strn_(/;"	d
cl_assert_equal_sz	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define cl_assert_equal_sz(/;"	d
cl_assert_equal_wcs	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert_equal_wcs(/;"	d
cl_assert_equal_wcs_	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert_equal_wcs_(/;"	d
cl_assert_equal_wcsn	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert_equal_wcsn(/;"	d
cl_assert_equal_wcsn_	my_project/libgit2/tests/clar/clar.h	/^#define cl_assert_equal_wcsn_(/;"	d
cl_assert_error	my_project/libgit2/tests/util/stat.c	/^#define cl_assert_error(/;"	d	file:
cl_assert_in_range	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define cl_assert_in_range(/;"	d
cl_check	my_project/libgit2/tests/clar/clar.h	/^#define cl_check(/;"	d
cl_check_	my_project/libgit2/tests/clar/clar.h	/^#define cl_check_(/;"	d
cl_check_fail	my_project/libgit2/tests/clar/clar.h	/^#define cl_check_fail(/;"	d
cl_check_fail_	my_project/libgit2/tests/clar/clar.h	/^#define cl_check_fail_(/;"	d
cl_check_pass	my_project/libgit2/tests/clar/clar.h	/^#define cl_check_pass(/;"	d
cl_check_pass_	my_project/libgit2/tests/clar/clar.h	/^#define cl_check_pass_(/;"	d
cl_fail	my_project/libgit2/tests/clar/clar.h	/^#define cl_fail(/;"	d
cl_fake_globalconfig	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_fake_globalconfig(git_str *out)$/;"	f	typeref:typename:void
cl_fake_globalconfig_cleanup	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_fake_globalconfig_cleanup(void *payload)$/;"	f	typeref:typename:void
cl_fake_homedir	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_fake_homedir(git_str *out)$/;"	f	typeref:typename:void
cl_fake_homedir_cleanup	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_fake_homedir_cleanup(void *payload)$/;"	f	typeref:typename:void
cl_fixture	my_project/libgit2/tests/clar/clar/fixtures.h	/^const char *cl_fixture(const char *fixture_name)$/;"	f	typeref:typename:const char *
cl_fixture_basename	my_project/libgit2/tests/clar/clar/fixtures.h	/^const char *cl_fixture_basename(const char *fixture_name)$/;"	f	typeref:typename:const char *
cl_fixture_cleanup	my_project/libgit2/tests/clar/clar/fixtures.h	/^void cl_fixture_cleanup(const char *fixture_name)$/;"	f	typeref:typename:void
cl_fixture_sandbox	my_project/libgit2/tests/clar/clar/fixtures.h	/^void cl_fixture_sandbox(const char *fixture_name)$/;"	f	typeref:typename:void
cl_fs_cleanup	my_project/libgit2/tests/clar/clar/fs.h	/^cl_fs_cleanup(void)$/;"	f	typeref:typename:void
cl_getenv	my_project/libgit2/tests/clar/clar_libgit2.c	/^char *cl_getenv(const char *name)$/;"	f	typeref:typename:char *
cl_git_append2file	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_git_append2file(const char *path, const char *content)$/;"	f	typeref:typename:void
cl_git_assert_lineinfo	my_project/libgit2/tests/libgit2/diff/parse.c	/^#define cl_git_assert_lineinfo(/;"	d	file:
cl_git_assert_lineinfo_	my_project/libgit2/tests/libgit2/diff/parse.c	/^static void cl_git_assert_lineinfo_(int old_lineno, int new_lineno, int num_lines, git_patch *pa/;"	f	typeref:typename:void	file:
cl_git_expect	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define cl_git_expect(/;"	d
cl_git_fail	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define cl_git_fail(/;"	d
cl_git_fail_at_line	my_project/libgit2/tests/libgit2/repo/env.c	/^#define cl_git_fail_at_line(/;"	d	file:
cl_git_fail_with	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define cl_git_fail_with(/;"	d
cl_git_fixture_url	my_project/libgit2/tests/clar/clar_libgit2.c	/^const char* cl_git_fixture_url(const char *fixturename)$/;"	f	typeref:typename:const char *
cl_git_mkfile	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_git_mkfile(const char *filename, const char *content)$/;"	f	typeref:typename:void
cl_git_pass	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define cl_git_pass(/;"	d
cl_git_path_url	my_project/libgit2/tests/clar/clar_libgit2.c	/^const char* cl_git_path_url(const char *path)$/;"	f	typeref:typename:const char *
cl_git_remove_placeholders	my_project/libgit2/tests/clar/clar_libgit2.c	/^int cl_git_remove_placeholders(const char *directory_path, const char *filename)$/;"	f	typeref:typename:int
cl_git_report_failure	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_git_report_failure($/;"	f	typeref:typename:void
cl_git_rewritefile	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_git_rewritefile(const char *path, const char *content)$/;"	f	typeref:typename:void
cl_git_rmfile	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_git_rmfile(const char *filename)$/;"	f	typeref:typename:void
cl_git_sandbox_cleanup	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_git_sandbox_cleanup(void)$/;"	f	typeref:typename:void
cl_git_sandbox_init	my_project/libgit2/tests/clar/clar_libgit2.c	/^git_repository *cl_git_sandbox_init(const char *sandbox)$/;"	f	typeref:typename:git_repository *
cl_git_sandbox_init_new	my_project/libgit2/tests/clar/clar_libgit2.c	/^git_repository *cl_git_sandbox_init_new(const char *sandbox)$/;"	f	typeref:typename:git_repository *
cl_git_sandbox_path	my_project/libgit2/tests/clar/clar_libgit2.c	/^const char *cl_git_sandbox_path(int is_dir, ...)$/;"	f	typeref:typename:const char *
cl_git_sandbox_reopen	my_project/libgit2/tests/clar/clar_libgit2.c	/^git_repository *cl_git_sandbox_reopen(void)$/;"	f	typeref:typename:git_repository *
cl_git_thread_check	my_project/libgit2/tests/clar/clar_libgit2.h	/^GIT_INLINE(void) cl_git_thread_check(void *data)$/;"	f	typeref:typename:void
cl_git_thread_err	my_project/libgit2/tests/clar/clar_libgit2.h	/^} cl_git_thread_err;$/;"	t	typeref:struct:__anonbd488f430108
cl_git_thread_pass	my_project/libgit2/tests/clar/clar_libgit2.h	/^# define cl_git_thread_pass(/;"	d
cl_git_thread_pass_	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define cl_git_thread_pass_(/;"	d
cl_git_write2file	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_git_write2file($/;"	f	typeref:typename:void
cl_global_trace_disable	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^void cl_global_trace_disable(void)$/;"	f	typeref:typename:void
cl_global_trace_register	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^void cl_global_trace_register(void)$/;"	f	typeref:typename:void
cl_is_chmod_supported	my_project/libgit2/tests/clar/clar_libgit2.c	/^bool cl_is_chmod_supported(void)$/;"	f	typeref:typename:bool
cl_is_env_set	my_project/libgit2/tests/clar/clar_libgit2.c	/^bool cl_is_env_set(const char *name)$/;"	f	typeref:typename:bool
cl_msleep	my_project/libgit2/tests/clar/clar_libgit2.h	/^# define cl_msleep(/;"	d
cl_must_fail	my_project/libgit2/tests/clar/clar.h	/^#define cl_must_fail(/;"	d
cl_must_fail_	my_project/libgit2/tests/clar/clar.h	/^#define cl_must_fail_(/;"	d
cl_must_pass	my_project/libgit2/tests/clar/clar.h	/^#define cl_must_pass(/;"	d
cl_must_pass_	my_project/libgit2/tests/clar/clar.h	/^#define cl_must_pass_(/;"	d
cl_output_format	my_project/libgit2/tests/clar/clar.h	/^enum cl_output_format {$/;"	g
cl_perf_timer	my_project/libgit2/tests/clar/clar_libgit2_timer.h	/^struct cl_perf_timer$/;"	s
cl_perf_timer	my_project/libgit2/tests/clar/clar_libgit2_timer.h	/^typedef struct cl_perf_timer cl_perf_timer;$/;"	t	typeref:struct:cl_perf_timer
cl_perf_timer__init	my_project/libgit2/tests/clar/clar_libgit2_timer.c	/^void cl_perf_timer__init(cl_perf_timer *t)$/;"	f	typeref:typename:void
cl_perf_timer__last	my_project/libgit2/tests/clar/clar_libgit2_timer.c	/^uint64_t cl_perf_timer__last(const cl_perf_timer *t)$/;"	f	typeref:typename:uint64_t
cl_perf_timer__start	my_project/libgit2/tests/clar/clar_libgit2_timer.c	/^void cl_perf_timer__start(cl_perf_timer *t)$/;"	f	typeref:typename:void
cl_perf_timer__stop	my_project/libgit2/tests/clar/clar_libgit2_timer.c	/^void cl_perf_timer__stop(cl_perf_timer *t)$/;"	f	typeref:typename:void
cl_perf_timer__sum	my_project/libgit2/tests/clar/clar_libgit2_timer.c	/^uint64_t cl_perf_timer__sum(const cl_perf_timer *t)$/;"	f	typeref:typename:uint64_t
cl_reflog_check_entry	my_project/libgit2/tests/libgit2/refs/reflog/reflog_helpers.h	/^#define cl_reflog_check_entry(/;"	d
cl_reflog_check_entry_	my_project/libgit2/tests/libgit2/refs/reflog/reflog_helpers.c	/^void cl_reflog_check_entry_(git_repository *repo, const char *reflog, size_t idx,$/;"	f	typeref:typename:void
cl_rename	my_project/libgit2/tests/clar/clar_libgit2.c	/^int cl_rename(const char *source, const char *dest)$/;"	f	typeref:typename:int
cl_repo_commit_from_index	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_repo_commit_from_index($/;"	f	typeref:typename:void
cl_repo_get_bool	my_project/libgit2/tests/clar/clar_libgit2.c	/^int cl_repo_get_bool(git_repository *repo, const char *cfg)$/;"	f	typeref:typename:int
cl_repo_get_int	my_project/libgit2/tests/clar/clar_libgit2.c	/^int cl_repo_get_int(git_repository *repo, const char *cfg)$/;"	f	typeref:typename:int
cl_repo_set_bool	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_repo_set_bool(git_repository *repo, const char *cfg, int value)$/;"	f	typeref:typename:void
cl_repo_set_int	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_repo_set_int(git_repository *repo, const char *cfg, int value)$/;"	f	typeref:typename:void
cl_repo_set_string	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_repo_set_string(git_repository *repo, const char *cfg, const char *value)$/;"	f	typeref:typename:void
cl_sandbox_disable_ownership_validation	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_sandbox_disable_ownership_validation(void)$/;"	f	typeref:typename:void
cl_sandbox_set_homedir	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_sandbox_set_homedir(const char *home)$/;"	f	typeref:typename:void
cl_sandbox_set_search_path_defaults	my_project/libgit2/tests/clar/clar_libgit2.c	/^void cl_sandbox_set_search_path_defaults(void)$/;"	f	typeref:typename:void
cl_sandbox_supports_8dot3	my_project/libgit2/tests/clar/clar_libgit2.c	/^bool cl_sandbox_supports_8dot3(void)$/;"	f	typeref:typename:bool
cl_set_cleanup	my_project/libgit2/tests/clar/clar.c	/^void cl_set_cleanup(void (*cleanup)(void *), void *opaque)$/;"	f	typeref:typename:void
cl_setenv	my_project/libgit2/tests/clar/clar_libgit2.c	/^int cl_setenv(const char *name, const char *value)$/;"	f	typeref:typename:int
cl_setenv_printf	my_project/libgit2/tests/libgit2/repo/env.c	/^static int GIT_FORMAT_PRINTF(2, 3) cl_setenv_printf(const char *name, const char *fmt, ...)$/;"	f	typeref:typename:int GIT_FORMAT_PRINTF (2,3)	file:
cl_skip	my_project/libgit2/tests/clar/clar.h	/^#define cl_skip(/;"	d
cl_test_status	my_project/libgit2/tests/clar/clar.h	/^enum cl_test_status {$/;"	g
cl_toggle_filemode	my_project/libgit2/tests/clar/clar_libgit2.c	/^bool cl_toggle_filemode(const char *filename)$/;"	f	typeref:typename:bool
cl_trace_cb	my_project/libgit2/tests/clar/clar.h	/^typedef void (cl_trace_cb)($/;"	t	typeref:typename:void ()(cl_trace_event ev,const char * suite_name,const char * test_name,void * payload)
cl_trace_event	my_project/libgit2/tests/clar/clar.h	/^typedef enum cl_trace_event {$/;"	g
cl_trace_event	my_project/libgit2/tests/clar/clar.h	/^} cl_trace_event;$/;"	t	typeref:enum:cl_trace_event
cl_trace_register	my_project/libgit2/tests/clar/clar.c	/^void cl_trace_register(cl_trace_cb *cb, void *payload)$/;"	f	typeref:typename:void
cl_warning	my_project/libgit2/tests/clar/clar.h	/^#define cl_warning(/;"	d
cl_win32_pass	my_project/libgit2/tests/clar/clar_libgit2.h	/^#define cl_win32_pass(/;"	d
clar__assert	my_project/libgit2/script/user_model.c	/^void clar__assert($/;"	f	typeref:typename:void
clar__assert	my_project/libgit2/tests/clar/clar.c	/^void clar__assert($/;"	f	typeref:typename:void
clar__assert_equal	my_project/libgit2/tests/clar/clar.c	/^void clar__assert_equal($/;"	f	typeref:typename:void
clar__assert_equal_file	my_project/libgit2/tests/clar/clar_libgit2.c	/^void clar__assert_equal_file($/;"	f	typeref:typename:void
clar__assert_equal_oid	my_project/libgit2/tests/clar/clar_libgit2.h	/^GIT_INLINE(void) clar__assert_equal_oid($/;"	f	typeref:typename:void
clar__assert_equal_oidstr	my_project/libgit2/tests/clar/clar_libgit2.h	/^GIT_INLINE(void) clar__assert_equal_oidstr($/;"	f	typeref:typename:void
clar__assert_in_range	my_project/libgit2/tests/clar/clar_libgit2.h	/^GIT_INLINE(void) clar__assert_in_range($/;"	f	typeref:typename:void
clar__fail	my_project/libgit2/script/user_model.c	/^void clar__fail($/;"	f	typeref:typename:void
clar__fail	my_project/libgit2/tests/clar/clar.c	/^void clar__fail($/;"	f	typeref:typename:void
clar__skip	my_project/libgit2/tests/clar/clar.c	/^void clar__skip(void)$/;"	f	typeref:typename:void
clar_error	my_project/libgit2/tests/clar/clar.c	/^struct clar_error {$/;"	s	file:
clar_explicit	my_project/libgit2/tests/clar/clar.c	/^struct clar_explicit {$/;"	s	file:
clar_func	my_project/libgit2/tests/clar/clar.c	/^struct clar_func {$/;"	s	file:
clar_parse_args	my_project/libgit2/tests/clar/clar.c	/^clar_parse_args(int argc, char **argv)$/;"	f	typeref:typename:void	file:
clar_print_clap_error	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_clap_error(int num, const struct clar_report *report, const struct clar_e/;"	f	typeref:typename:void
clar_print_clap_init	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_clap_init(int test_count, int suite_count, const char *suite_names)$/;"	f	typeref:typename:void
clar_print_clap_onabort	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_clap_onabort(const char *fmt, va_list arg)$/;"	f	typeref:typename:void
clar_print_clap_onsuite	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_clap_onsuite(const char *suite_name, int suite_index)$/;"	f	typeref:typename:void
clar_print_clap_ontest	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_clap_ontest(const char *suite_name, const char *test_name, int test_numbe/;"	f	typeref:typename:void
clar_print_clap_shutdown	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_clap_shutdown(int test_count, int suite_count, int error_count)$/;"	f	typeref:typename:void
clar_print_error	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_error(int num, const struct clar_report *report, const struct clar_error /;"	f	typeref:typename:void
clar_print_init	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_init(int test_count, int suite_count, const char *suite_names)$/;"	f	typeref:typename:void
clar_print_onabort	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_onabort(const char *msg, ...)$/;"	f	typeref:typename:void
clar_print_onsuite	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_onsuite(const char *suite_name, int suite_index)$/;"	f	typeref:typename:void
clar_print_ontest	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_ontest(const char *suite_name, const char *test_name, int test_number, en/;"	f	typeref:typename:void
clar_print_shutdown	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_shutdown(int test_count, int suite_count, int error_count)$/;"	f	typeref:typename:void
clar_print_tap_error	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_tap_error(int num, const struct clar_report *report, const struct clar_er/;"	f	typeref:typename:void
clar_print_tap_init	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_tap_init(int test_count, int suite_count, const char *suite_names)$/;"	f	typeref:typename:void
clar_print_tap_onabort	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_tap_onabort(const char *fmt, va_list arg)$/;"	f	typeref:typename:void
clar_print_tap_onsuite	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_tap_onsuite(const char *suite_name, int suite_index)$/;"	f	typeref:typename:void
clar_print_tap_ontest	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_tap_ontest(const char *suite_name, const char *test_name, int test_number/;"	f	typeref:typename:void
clar_print_tap_shutdown	my_project/libgit2/tests/clar/clar/print.h	/^static void clar_print_tap_shutdown(int test_count, int suite_count, int error_count)$/;"	f	typeref:typename:void
clar_report	my_project/libgit2/tests/clar/clar.c	/^struct clar_report {$/;"	s	file:
clar_report_all	my_project/libgit2/tests/clar/clar.c	/^clar_report_all(void)$/;"	f	typeref:typename:void	file:
clar_report_errors	my_project/libgit2/tests/clar/clar.c	/^clar_report_errors(struct clar_report *report)$/;"	f	typeref:typename:void	file:
clar_run_suite	my_project/libgit2/tests/clar/clar.c	/^clar_run_suite(const struct clar_suite *suite, const char *filter)$/;"	f	typeref:typename:void	file:
clar_run_test	my_project/libgit2/tests/clar/clar.c	/^clar_run_test($/;"	f	typeref:typename:void	file:
clar_sandbox	my_project/libgit2/tests/clar/clar/sandbox.h	/^static int clar_sandbox(void)$/;"	f	typeref:typename:int
clar_sandbox_path	my_project/libgit2/tests/clar/clar/sandbox.h	/^const char *clar_sandbox_path(void)$/;"	f	typeref:typename:const char *
clar_suite	my_project/libgit2/tests/clar/clar.c	/^struct clar_suite {$/;"	s	file:
clar_summary	my_project/libgit2/tests/clar/clar.c	/^struct clar_summary {$/;"	s	file:
clar_summary_close_tag	my_project/libgit2/tests/clar/clar/summary.h	/^static int clar_summary_close_tag($/;"	f	typeref:typename:int
clar_summary_failure	my_project/libgit2/tests/clar/clar/summary.h	/^static int clar_summary_failure(struct clar_summary *summary,$/;"	f	typeref:typename:int
clar_summary_init	my_project/libgit2/tests/clar/clar/summary.h	/^struct clar_summary *clar_summary_init(const char *filename)$/;"	f	typeref:struct:clar_summary *
clar_summary_shutdown	my_project/libgit2/tests/clar/clar/summary.h	/^int clar_summary_shutdown(struct clar_summary *summary)$/;"	f	typeref:typename:int
clar_summary_skipped	my_project/libgit2/tests/clar/clar/summary.h	/^static int clar_summary_skipped(struct clar_summary *summary)$/;"	f	typeref:typename:int
clar_summary_testcase	my_project/libgit2/tests/clar/clar/summary.h	/^static int clar_summary_testcase(struct clar_summary *summary,$/;"	f	typeref:typename:int
clar_summary_testsuite	my_project/libgit2/tests/clar/clar/summary.h	/^static int clar_summary_testsuite(struct clar_summary *summary,$/;"	f	typeref:typename:int
clar_summary_testsuites	my_project/libgit2/tests/clar/clar/summary.h	/^static int clar_summary_testsuites(struct clar_summary *summary)$/;"	f	typeref:typename:int
clar_test	my_project/libgit2/tests/clar/clar.c	/^clar_test(int argc, char **argv)$/;"	f	typeref:typename:int
clar_test_init	my_project/libgit2/tests/clar/clar.c	/^clar_test_init(int argc, char **argv)$/;"	f	typeref:typename:void
clar_test_run	my_project/libgit2/tests/clar/clar.c	/^clar_test_run(void)$/;"	f	typeref:typename:int
clar_test_shutdown	my_project/libgit2/tests/clar/clar.c	/^clar_test_shutdown(void)$/;"	f	typeref:typename:void
clar_time	my_project/libgit2/tests/clar/clar.c	/^# define clar_time /;"	d	file:
clar_time_diff	my_project/libgit2/tests/clar/clar.c	/^static double clar_time_diff(clar_time *start, clar_time *end)$/;"	f	typeref:typename:double	file:
clar_time_now	my_project/libgit2/tests/clar/clar.c	/^static void clar_time_now(clar_time *out)$/;"	f	typeref:typename:void	file:
clar_unsandbox	my_project/libgit2/tests/clar/clar/sandbox.h	/^static void clar_unsandbox(void)$/;"	f	typeref:typename:void
clar_usage	my_project/libgit2/tests/clar/clar.c	/^clar_usage(const char *arg)$/;"	f	typeref:typename:void	file:
clean_name	my_project/libgit2/tests/clar/generate.py	/^    def clean_name(self):$/;"	m	class:Module
clean_test_config	my_project/libgit2/tests/libgit2/config/read.c	/^static void clean_test_config(void *unused)$/;"	f	typeref:typename:void	file:
cleanup	my_project/libgit2/ci/test.sh	/^cleanup() {$/;"	f
cleanup	my_project/libgit2/include/git2/sys/filter.h	/^	git_filter_cleanup_fn  cleanup;$/;"	m	struct:git_filter	typeref:typename:git_filter_cleanup_fn
cleanup	my_project/libgit2/src/cli/cmd_clone.c	/^static void cleanup(void)$/;"	f	typeref:typename:void	file:
cleanup	my_project/libgit2/tests/clar/clar.c	/^	struct clar_func cleanup;$/;"	m	struct:clar_suite	typeref:struct:clar_func	file:
cleanup_1397	my_project/libgit2/tests/libgit2/index/tests.c	/^static void cleanup_1397(void *opaque)$/;"	f	typeref:typename:void	file:
cleanup__remove_file	my_project/libgit2/tests/libgit2/status/single.c	/^cleanup__remove_file(void *_file)$/;"	f	typeref:typename:void	file:
cleanup_basedir	my_project/libgit2/tests/util/mkdir.c	/^static void cleanup_basedir(void *ref)$/;"	f	typeref:typename:void	file:
cleanup_basic_dirs	my_project/libgit2/tests/util/mkdir.c	/^static void cleanup_basic_dirs(void *ref)$/;"	f	typeref:typename:void	file:
cleanup_chmod_root	my_project/libgit2/tests/util/mkdir.c	/^static void cleanup_chmod_root(void *ref)$/;"	f	typeref:typename:void	file:
cleanup_fixture_submodules	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.c	/^static void cleanup_fixture_submodules(void *payload)$/;"	f	typeref:typename:void	file:
cleanup_fixture_worktree	my_project/libgit2/tests/libgit2/worktree/worktree_helpers.c	/^void cleanup_fixture_worktree(worktree_fixture *fixture)$/;"	f	typeref:typename:void
cleanup_local_repo	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^static void cleanup_local_repo(void *path)$/;"	f	typeref:typename:void	file:
cleanup_myrepo	my_project/libgit2/tests/libgit2/index/tests.c	/^static void cleanup_myrepo(void *opaque)$/;"	f	typeref:typename:void	file:
cleanup_myrepo	my_project/libgit2/tests/libgit2/index/tests256.c	/^static void cleanup_myrepo(void *opaque)$/;"	f	typeref:typename:void	file:
cleanup_new_repo	my_project/libgit2/tests/libgit2/status/worktree_init.c	/^static void cleanup_new_repo(void *path)$/;"	f	typeref:typename:void	file:
cleanup_repository	my_project/libgit2/tests/libgit2/clone/empty.c	/^static void cleanup_repository(void *path)$/;"	f	typeref:typename:void	file:
cleanup_repository	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^static void cleanup_repository(void *path)$/;"	f	typeref:typename:void	file:
cleanup_repository	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static void cleanup_repository(void *path)$/;"	f	typeref:typename:void	file:
cleanup_repository	my_project/libgit2/tests/libgit2/repo/init.c	/^static void cleanup_repository(void *path)$/;"	f	typeref:typename:void	file:
clear_cache	my_project/libgit2/src/libgit2/cache.c	/^static void clear_cache(git_cache *cache)$/;"	f	typeref:typename:void	file:
clear_commit_marks	my_project/libgit2/src/libgit2/merge.c	/^static int clear_commit_marks(git_commit_list_node *commit, unsigned int mark)$/;"	f	typeref:typename:int	file:
clear_commit_marks_1	my_project/libgit2/src/libgit2/merge.c	/^static int clear_commit_marks_1(git_commit_list **plist,$/;"	f	typeref:typename:int	file:
clear_commit_marks_many	my_project/libgit2/src/libgit2/merge.c	/^static int clear_commit_marks_many(git_vector *commits, unsigned int mark)$/;"	f	typeref:typename:int	file:
clear_git_env	my_project/libgit2/tests/libgit2/repo/env.c	/^static void clear_git_env(void)$/;"	f	typeref:typename:void	file:
clear_uptodate	my_project/libgit2/src/libgit2/index.c	/^static void clear_uptodate(git_index *index)$/;"	f	typeref:typename:void	file:
cli	my_project/libgit2/src/cli/README.md	/^# cli$/;"	c
cli_cmd_spec	my_project/libgit2/src/cli/cmd.h	/^} cli_cmd_spec;$/;"	t	typeref:struct:__anoncf5572f40108
cli_cmd_spec_byname	my_project/libgit2/src/cli/cmd.c	/^const cli_cmd_spec *cli_cmd_spec_byname(const char *name)$/;"	f	typeref:typename:const cli_cmd_spec *
cli_cmds	my_project/libgit2/src/cli/main.c	/^const cli_cmd_spec cli_cmds[] = {$/;"	v	typeref:typename:const cli_cmd_spec[]
cli_common_opts	my_project/libgit2/src/cli/main.c	/^const cli_opt_spec cli_common_opts[] = {$/;"	v	typeref:typename:const cli_opt_spec[]
cli_error	my_project/libgit2/src/cli/error.h	/^GIT_INLINE(int) cli_error(const char *fmt, ...)$/;"	f	typeref:typename:int
cli_error__print	my_project/libgit2/src/cli/error.h	/^#define cli_error__print(/;"	d
cli_error_git	my_project/libgit2/src/cli/error.h	/^GIT_INLINE(int) cli_error_git(void)$/;"	f	typeref:typename:int
cli_error_os	my_project/libgit2/src/cli/error.h	/^#define cli_error_os(/;"	d
cli_error_usage	my_project/libgit2/src/cli/error.h	/^GIT_INLINE(int) cli_error_usage(const char *fmt, ...)$/;"	f	typeref:typename:int
cli_opt	my_project/libgit2/src/cli/opt.h	/^typedef struct cli_opt {$/;"	s
cli_opt	my_project/libgit2/src/cli/opt.h	/^} cli_opt;$/;"	t	typeref:struct:cli_opt
cli_opt_flag_t	my_project/libgit2/src/cli/opt.h	/^} cli_opt_flag_t;$/;"	t	typeref:enum:__anond03082330303
cli_opt_foreach	my_project/libgit2/src/cli/opt.c	/^int cli_opt_foreach($/;"	f	typeref:typename:int
cli_opt_help_fprint	my_project/libgit2/src/cli/opt_usage.c	/^int cli_opt_help_fprint($/;"	f	typeref:typename:int
cli_opt_parse	my_project/libgit2/src/cli/opt.c	/^cli_opt_status_t cli_opt_parse($/;"	f	typeref:typename:cli_opt_status_t
cli_opt_parser	my_project/libgit2/src/cli/opt.h	/^typedef struct cli_opt_parser {$/;"	s
cli_opt_parser	my_project/libgit2/src/cli/opt.h	/^} cli_opt_parser;$/;"	t	typeref:struct:cli_opt_parser
cli_opt_parser_init	my_project/libgit2/src/cli/opt.c	/^void cli_opt_parser_init($/;"	f	typeref:typename:void
cli_opt_parser_next	my_project/libgit2/src/cli/opt.c	/^cli_opt_status_t cli_opt_parser_next(cli_opt *opt, cli_opt_parser *parser)$/;"	f	typeref:typename:cli_opt_status_t
cli_opt_spec	my_project/libgit2/src/cli/opt.h	/^typedef struct cli_opt_spec {$/;"	s
cli_opt_spec	my_project/libgit2/src/cli/opt.h	/^} cli_opt_spec;$/;"	t	typeref:struct:cli_opt_spec
cli_opt_status_fprint	my_project/libgit2/src/cli/opt.c	/^int cli_opt_status_fprint($/;"	f	typeref:typename:int
cli_opt_status_t	my_project/libgit2/src/cli/opt.h	/^} cli_opt_status_t;$/;"	t	typeref:enum:__anond03082330403
cli_opt_type_t	my_project/libgit2/src/cli/opt.h	/^} cli_opt_type_t;$/;"	t	typeref:enum:__anond03082330103
cli_opt_usage_error	my_project/libgit2/src/cli/opt_usage.c	/^int cli_opt_usage_error($/;"	f	typeref:typename:int
cli_opt_usage_fprint	my_project/libgit2/src/cli/opt_usage.c	/^int cli_opt_usage_fprint($/;"	f	typeref:typename:int
cli_opt_usage_t	my_project/libgit2/src/cli/opt.h	/^} cli_opt_usage_t;$/;"	t	typeref:enum:__anond03082330203
cli_progress	my_project/libgit2/src/cli/progress.h	/^} cli_progress;$/;"	t	typeref:struct:__anonb5f2ec150208
cli_progress_abort	my_project/libgit2/src/cli/progress.c	/^int cli_progress_abort(cli_progress *progress)$/;"	f	typeref:typename:int
cli_progress_checkout	my_project/libgit2/src/cli/progress.c	/^void cli_progress_checkout($/;"	f	typeref:typename:void
cli_progress_dispose	my_project/libgit2/src/cli/progress.c	/^void cli_progress_dispose(cli_progress *progress)$/;"	f	typeref:typename:void
cli_progress_fetch_sideband	my_project/libgit2/src/cli/progress.c	/^int cli_progress_fetch_sideband(const char *str, int len, void *payload)$/;"	f	typeref:typename:int
cli_progress_fetch_transfer	my_project/libgit2/src/cli/progress.c	/^int cli_progress_fetch_transfer(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int
cli_progress_finish	my_project/libgit2/src/cli/progress.c	/^int cli_progress_finish(cli_progress *progress)$/;"	f	typeref:typename:int
cli_progress_indexer	my_project/libgit2/src/cli/progress.c	/^int cli_progress_indexer($/;"	f	typeref:typename:int
cli_progress_t	my_project/libgit2/src/cli/progress.h	/^} cli_progress_t;$/;"	t	typeref:enum:__anonb5f2ec150103
cli_repository_open	my_project/libgit2/src/cli/common.c	/^int cli_repository_open($/;"	f	typeref:typename:int
cli_repository_open_options	my_project/libgit2/src/cli/common.h	/^} cli_repository_open_options;$/;"	t	typeref:struct:__anonfdaa9e490108
cli_sighandler_set_interrupt	my_project/libgit2/src/cli/unix/sighandler.c	/^int cli_sighandler_set_interrupt(void (*handler)(void))$/;"	f	typeref:typename:int
cli_sighandler_set_interrupt	my_project/libgit2/src/cli/win32/sighandler.c	/^int cli_sighandler_set_interrupt(void (*handler)(void))$/;"	f	typeref:typename:int
cli_version	my_project/libgit2/tests/benchmarks/benchmark.sh	/^cli_version() {$/;"	f
client	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_http_client *client;$/;"	m	struct:__anon3d590bbe0608	typeref:typename:git_http_client *	file:
client_read	my_project/libgit2/src/libgit2/transports/httpclient.c	/^GIT_INLINE(int) client_read(git_http_client *client)$/;"	f	typeref:typename:int
client_read_and_parse	my_project/libgit2/src/libgit2/transports/httpclient.c	/^GIT_INLINE(int) client_read_and_parse(git_http_client *client)$/;"	f	typeref:typename:int
client_write_request	my_project/libgit2/src/libgit2/transports/httpclient.c	/^GIT_INLINE(int) client_write_request(git_http_client *client)$/;"	f	typeref:typename:int
clone_cancel_checkout_cb	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^static int clone_cancel_checkout_cb($/;"	f	typeref:typename:int	file:
clone_cancel_fetch_transfer_progress_cb	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^static int clone_cancel_fetch_transfer_progress_cb($/;"	f	typeref:typename:int	file:
clone_into	my_project/libgit2/src/libgit2/clone.c	/^static int clone_into($/;"	f	typeref:typename:int	file:
clone_local_into	my_project/libgit2/src/libgit2/clone.c	/^static int clone_local_into(git_repository *repo, git_remote *remote, const git_fetch_options *f/;"	f	typeref:typename:int	file:
clone_return_origin	my_project/libgit2/src/libgit2/submodule.c	/^static int clone_return_origin(git_remote **out, git_repository *repo, const char *name, const c/;"	f	typeref:typename:int	file:
clone_return_repo	my_project/libgit2/src/libgit2/submodule.c	/^static int clone_return_repo(git_repository **out, const char *path, int bare, void *payload)$/;"	f	typeref:typename:int	file:
close	my_project/libgit2/deps/zlib/gzguts.h	/^#  define close /;"	d
close	my_project/libgit2/examples/common.h	/^# define close /;"	d
close	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^	void (*close)(void);$/;"	m	struct:method	typeref:typename:void (*)(void)	file:
close_algorithm_provider	my_project/libgit2/src/util/hash/win32.c	/^	cng_close_algorithm_provider_fn close_algorithm_provider;$/;"	m	struct:cng_provider	typeref:typename:cng_close_algorithm_provider_fn	file:
close_socket	my_project/libgit2/src/libgit2/streams/socket.c	/^static int close_socket(GIT_SOCKET s)$/;"	f	typeref:typename:int	file:
close_stream	my_project/libgit2/src/libgit2/transports/httpclient.c	/^GIT_INLINE(void) close_stream(git_http_server *server)$/;"	f	typeref:typename:void
closedir	my_project/libgit2/src/util/win32/dir.h	/^#	define closedir /;"	d
cmd	my_project/libgit2/examples/remote.c	/^	enum subcmd cmd;$/;"	m	struct:remote_opts	typeref:enum:subcmd	file:
cmd	my_project/libgit2/examples/stash.c	/^	enum subcmd cmd;$/;"	m	struct:opts	typeref:enum:subcmd	file:
cmd	my_project/libgit2/src/libgit2/transports/git.c	/^	const char *cmd;$/;"	m	struct:__anoneb1923e30108	typeref:typename:const char *	file:
cmd	my_project/libgit2/src/libgit2/transports/smart.h	/^	char *cmd;$/;"	m	struct:git_pkt_cmd	typeref:typename:char *
cmd	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^	const char *cmd;$/;"	m	struct:__anonf54f66e30108	typeref:typename:const char *	file:
cmd_add	my_project/libgit2/examples/remote.c	/^static int cmd_add(git_repository *repo, struct remote_opts *o)$/;"	f	typeref:typename:int	file:
cmd_apply	my_project/libgit2/examples/stash.c	/^static int cmd_apply(git_repository *repo, struct opts *opts)$/;"	f	typeref:typename:int	file:
cmd_c	sdb.c	/^static int cmd_c(char *args) {$/;"	f	typeref:typename:int	file:
cmd_cat_file	my_project/libgit2/src/cli/cmd_cat_file.c	/^int cmd_cat_file(int argc, char **argv)$/;"	f	typeref:typename:int
cmd_clone	my_project/libgit2/src/cli/cmd_clone.c	/^int cmd_clone(int argc, char **argv)$/;"	f	typeref:typename:int
cmd_config	my_project/libgit2/src/cli/cmd_config.c	/^int cmd_config(int argc, char **argv)$/;"	f	typeref:typename:int
cmd_hash_object	my_project/libgit2/src/cli/cmd_hash_object.c	/^int cmd_hash_object(int argc, char **argv)$/;"	f	typeref:typename:int
cmd_help	my_project/libgit2/src/cli/cmd_help.c	/^int cmd_help(int argc, char **argv)$/;"	f	typeref:typename:int
cmd_help	sdb.c	/^static int cmd_help(char *args) {$/;"	f	typeref:typename:int	file:
cmd_index_pack	my_project/libgit2/src/cli/cmd_index_pack.c	/^int cmd_index_pack(int argc, char **argv)$/;"	f	typeref:typename:int
cmd_list	my_project/libgit2/examples/stash.c	/^static int cmd_list(git_repository *repo, struct opts *opts)$/;"	f	typeref:typename:int	file:
cmd_pop	my_project/libgit2/examples/stash.c	/^static int cmd_pop(git_repository *repo, struct opts *opts)$/;"	f	typeref:typename:int	file:
cmd_push	my_project/libgit2/examples/stash.c	/^static int cmd_push(git_repository *repo, struct opts *opts)$/;"	f	typeref:typename:int	file:
cmd_q	sdb.c	/^static int cmd_q(char *args) {$/;"	f	typeref:typename:int	file:
cmd_receivepack	my_project/libgit2/src/libgit2/transports/git.c	/^static const char cmd_receivepack[] = "git-receive-pack";$/;"	v	typeref:typename:const char[]	file:
cmd_receivepack	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^	char *cmd_receivepack;$/;"	m	struct:__anonec53c3310208	typeref:typename:char *	file:
cmd_receivepack	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^	char *cmd_receivepack;$/;"	m	struct:__anonf54f66e30208	typeref:typename:char *	file:
cmd_receivepack	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static const char cmd_receivepack[] = "git-receive-pack";$/;"	v	typeref:typename:const char[]	file:
cmd_remove	my_project/libgit2/examples/remote.c	/^static int cmd_remove(git_repository *repo, struct remote_opts *o)$/;"	f	typeref:typename:int	file:
cmd_rename	my_project/libgit2/examples/remote.c	/^static int cmd_rename(git_repository *repo, struct remote_opts *o)$/;"	f	typeref:typename:int	file:
cmd_seturl	my_project/libgit2/examples/remote.c	/^static int cmd_seturl(git_repository *repo, struct remote_opts *o)$/;"	f	typeref:typename:int	file:
cmd_show	my_project/libgit2/examples/remote.c	/^static int cmd_show(git_repository *repo, struct remote_opts *o)$/;"	f	typeref:typename:int	file:
cmd_si	sdb.c	/^static int cmd_si(char *args) {$/;"	f	typeref:typename:int	file:
cmd_table	sdb.c	/^} cmd_table [] = {$/;"	v	typeref:struct:__anon10587f2f0108[]
cmd_uploadpack	my_project/libgit2/src/libgit2/transports/git.c	/^static const char cmd_uploadpack[] = "git-upload-pack";$/;"	v	typeref:typename:const char[]	file:
cmd_uploadpack	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^	char *cmd_uploadpack;$/;"	m	struct:__anonec53c3310208	typeref:typename:char *	file:
cmd_uploadpack	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^	char *cmd_uploadpack;$/;"	m	struct:__anonf54f66e30208	typeref:typename:char *	file:
cmd_uploadpack	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static const char cmd_uploadpack[] = "git-upload-pack";$/;"	v	typeref:typename:const char[]	file:
cmdline	my_project/libgit2/src/util/win32/process.c	/^	wchar_t *cmdline;$/;"	m	struct:git_process	typeref:typename:wchar_t *	file:
cmp	my_project/libgit2/src/libgit2/hashsig.c	/^	hashsig_cmp cmp;$/;"	m	struct:__anon8885faf70108	typeref:typename:hashsig_cmp	file:
cmp	my_project/libgit2/src/util/tsort.c	/^	git__sort_r_cmp cmp;$/;"	m	struct:tsort_store	typeref:typename:git__sort_r_cmp	file:
cmp	my_project/libgit2/src/util/util.c	/^	git__sort_r_cmp cmp;$/;"	m	struct:__anon381de8bf0108	typeref:typename:git__sort_r_cmp	file:
cmp_big	my_project/libgit2/tests/util/qsort.c	/^static int cmp_big(const void *_a, const void *_b, void *payload)$/;"	f	typeref:typename:int	file:
cmp_int	my_project/libgit2/tests/util/qsort.c	/^static int cmp_int(const void *_a, const void *_b, void *payload)$/;"	f	typeref:typename:int	file:
cmp_ints	my_project/libgit2/tests/util/pqueue.c	/^static int cmp_ints(const void *v1, const void *v2)$/;"	f	typeref:typename:int	file:
cmp_ints_like_commit_time	my_project/libgit2/tests/util/pqueue.c	/^static int cmp_ints_like_commit_time(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
cmp_objects	my_project/libgit2/tests/libgit2/object/raw/write.c	/^static void cmp_objects(git_rawobj *o1, git_rawobj *o2)$/;"	f	typeref:typename:void	file:
cmp_objects	my_project/libgit2/tests/libgit2/odb/loose.c	/^static void cmp_objects(git_rawobj *o, object_data *d)$/;"	f	typeref:typename:void	file:
cmp_old_ref	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int cmp_old_ref(int *cmp, git_refdb_backend *backend, const char *name,$/;"	f	typeref:typename:int	file:
cmp_record_to_refname	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int cmp_record_to_refname($/;"	f	typeref:typename:int	file:
cmp_recs	my_project/libgit2/deps/xdiff/xhistogram.c	/^static int cmp_recs(xrecord_t *r1, xrecord_t *r2)$/;"	f	typeref:typename:int	file:
cmp_str	my_project/libgit2/tests/util/qsort.c	/^static int cmp_str(const void *_a, const void *_b, void *payload)$/;"	f	typeref:typename:int	file:
cng	my_project/libgit2/src/util/hash/win32.c	/^		struct cng_provider cng;$/;"	m	union:__anon307989470108::__anon30798947020a	typeref:struct:cng_provider	file:
cng	my_project/libgit2/src/util/hash/win32.h	/^		struct git_hash_win32_cng_ctx cng;$/;"	m	union:__anon3079894c0208::__anon3079894c030a	typeref:struct:git_hash_win32_cng_ctx
cng_close_algorithm_provider_fn	my_project/libgit2/src/util/hash/win32.c	/^typedef NTSTATUS (WINAPI *cng_close_algorithm_provider_fn)($/;"	t	typeref:typename:NTSTATUS (WINAPI *)(HANDLE hAlgorithm,ULONG dwFlags)	file:
cng_create_hash_fn	my_project/libgit2/src/util/hash/win32.c	/^typedef NTSTATUS (WINAPI *cng_create_hash_fn)($/;"	t	typeref:typename:NTSTATUS (WINAPI *)(HANDLE hAlgorithm,HANDLE * phHash,PUCHAR pbHashObject,ULONG cbHashObject,PUCHAR pbSecret,ULONG cbSecret,ULONG dwFlags)	file:
cng_destroy_hash_fn	my_project/libgit2/src/util/hash/win32.c	/^typedef NTSTATUS (WINAPI *cng_destroy_hash_fn)($/;"	t	typeref:typename:NTSTATUS (WINAPI *)(HANDLE hHash)	file:
cng_finish_hash_fn	my_project/libgit2/src/util/hash/win32.c	/^typedef NTSTATUS (WINAPI *cng_finish_hash_fn)($/;"	t	typeref:typename:NTSTATUS (WINAPI *)(HANDLE hHash,PUCHAR pbOutput,ULONG cbOutput,ULONG dwFlags)	file:
cng_get_property_fn	my_project/libgit2/src/util/hash/win32.c	/^typedef NTSTATUS (WINAPI *cng_get_property_fn)($/;"	t	typeref:typename:NTSTATUS (WINAPI *)(HANDLE hObject,LPCWSTR pszProperty,PUCHAR pbOutput,ULONG cbOutput,ULONG * pcbResult,ULONG dwFlags)	file:
cng_hash_data_fn	my_project/libgit2/src/util/hash/win32.c	/^typedef NTSTATUS (WINAPI *cng_hash_data_fn)($/;"	t	typeref:typename:NTSTATUS (WINAPI *)(HANDLE hHash,PUCHAR pbInput,ULONG cbInput,ULONG dwFlags)	file:
cng_open_algorithm_provider_fn	my_project/libgit2/src/util/hash/win32.c	/^typedef NTSTATUS (WINAPI *cng_open_algorithm_provider_fn)($/;"	t	typeref:typename:NTSTATUS (WINAPI *)(HANDLE * phAlgorithm,LPCWSTR pszAlgId,LPCWSTR pszImplementation,DWORD dwFlags)	file:
cng_provider	my_project/libgit2/src/util/hash/win32.c	/^struct cng_provider {$/;"	s	file:
cng_provider_init	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) cng_provider_init(void)$/;"	f	typeref:typename:int
cng_provider_shutdown	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(void) cng_provider_shutdown(void)$/;"	f	typeref:typename:void
cnt	my_project/libgit2/deps/xdiff/xhistogram.c	/^		unsigned int ptr, cnt;$/;"	m	struct:histindex::record	typeref:typename:unsigned int	file:
cnt	my_project/libgit2/deps/xdiff/xhistogram.c	/^	unsigned int cnt,$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
cnt	my_project/libgit2/tests/libgit2/apply/apply_helpers.c	/^	size_t cnt;$/;"	m	struct:iterator_compare_data	typeref:typename:size_t	file:
coalesce	my_project/libgit2/src/libgit2/blame_git.c	/^static void coalesce(git_blame *blame)$/;"	f	typeref:typename:void	file:
code	my_project/libgit2/deps/zlib/deflate.h	/^        ush  code;       \/* bit string *\/$/;"	m	union:ct_data_s::__anon0b76eeb2010a	typeref:typename:ush
code	my_project/libgit2/deps/zlib/inftrees.h	/^} code;$/;"	t	typeref:struct:__anon3554db3d0108
code_offset	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define code_offset /;"	d	file:
codelink	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define codelink /;"	d	file:
codes	my_project/libgit2/deps/zlib/inflate.h	/^    code codes[ENOUGH];         \/* space for code tables *\/$/;"	m	struct:inflate_state	typeref:typename:code[]
codetype	my_project/libgit2/deps/zlib/inftrees.h	/^} codetype;$/;"	t	typeref:enum:__anon3554db3d0203
collapse	my_project/libgit2/src/util/tsort.c	/^static ssize_t collapse(void **dst, struct tsort_run *stack, ssize_t stack_curr, struct tsort_st/;"	f	typeref:typename:ssize_t	file:
collect_attr_files	my_project/libgit2/src/libgit2/attr.c	/^static int collect_attr_files($/;"	f	typeref:typename:int	file:
collect_authinfo	my_project/libgit2/src/libgit2/transports/httpclient.c	/^GIT_INLINE(void) collect_authinfo($/;"	f	typeref:typename:void
collect_progress	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^static void collect_progress($/;"	f	typeref:typename:void	file:
collision_block_callback	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^typedef void(*collision_block_callback)(uint64_t, const uint32_t*, const uint32_t*, const uint32/;"	t	typeref:typename:void (*)(uint64_t,const uint32_t *,const uint32_t *,const uint32_t *,const uint32_t *)
color	my_project/libgit2/examples/diff.c	/^	int color;$/;"	m	struct:diff_options	typeref:typename:int	file:
color_printer	my_project/libgit2/examples/diff.c	/^static int color_printer($/;"	f	typeref:typename:int	file:
colors	my_project/libgit2/examples/diff.c	/^static const char *colors[] = {$/;"	v	typeref:typename:const char * []	file:
comm_max	my_project/libgit2/deps/zlib/zlib.h	/^    uInt    comm_max;   \/* space at comment (only when reading header) *\/$/;"	m	struct:gz_header_s	typeref:typename:uInt
command	my_project/libgit2/.vscode/tasks.json	/^        "command": "build\/libgit2_tests -v",$/;"	s	object:tasks.1
command	my_project/libgit2/.vscode/tasks.json	/^        "command": "cd build && cmake --build . --parallel",$/;"	s	object:tasks.0
command	my_project/libgit2/src/cli/cmd_help.c	/^static char *command;$/;"	v	typeref:typename:char *	file:
command	my_project/libgit2/src/cli/main.c	/^static char *command = NULL;$/;"	v	typeref:typename:char *	file:
command	my_project/simplegit-progit/lib/simplegit.rb	/^    def command(git_cmd)$/;"	f	class:SimpleGit
commands	my_project/libgit2/examples/lg2.c	/^} commands[] = {$/;"	v	typeref:struct:__anonbfe592f00108[]
comment	my_project/libgit2/deps/zlib/zlib.h	/^    Bytef   *comment;   \/* pointer to zero-terminated comment or Z_NULL *\/$/;"	m	struct:gz_header_s	typeref:typename:Bytef *
comment	my_project/libgit2/src/libgit2/transports/smart.h	/^	char comment[GIT_FLEX_ARRAY];$/;"	m	struct:__anonb9ceeb0b0508	typeref:typename:char[]
comment_pkt	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int comment_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
commit	my_project/libgit2/src/libgit2/annotated_commit.h	/^	git_commit *commit;$/;"	m	struct:git_annotated_commit	typeref:typename:git_commit *
commit	my_project/libgit2/src/libgit2/blame.h	/^	git_commit *commit;$/;"	m	struct:git_blame__origin	typeref:typename:git_commit *
commit	my_project/libgit2/tests/libgit2/commit/parent.c	/^static git_commit *commit;$/;"	v	typeref:typename:git_commit *	file:
commit	my_project/libgit2/tests/libgit2/commit/write.c	/^static git_commit *commit;$/;"	v	typeref:typename:git_commit *	file:
commit	my_project/libgit2/tests/libgit2/graph/ahead_behind.c	/^static git_commit *commit;$/;"	v	typeref:typename:git_commit *	file:
commit	my_project/libgit2/tests/libgit2/graph/descendant_of.c	/^static git_commit *commit;$/;"	v	typeref:typename:git_commit *	file:
commit	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static object_data commit = {$/;"	v	typeref:typename:object_data
commit_and_tag	my_project/libgit2/tests/libgit2/describe/t6120.c	/^static void commit_and_tag($/;"	f	typeref:typename:void	file:
commit_bytes	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char commit_bytes[] = {$/;"	v	typeref:typename:unsigned char[]
commit_bytes_sha256	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char commit_bytes_sha256[] = {$/;"	v	typeref:typename:unsigned char[]
commit_count	my_project/libgit2/examples/describe.c	/^	size_t commit_count;$/;"	m	struct:describe_options	typeref:typename:size_t	file:
commit_count	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^#define commit_count /;"	d	file:
commit_count	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^#define commit_count /;"	d	file:
commit_create_cb	my_project/libgit2/include/git2/rebase.h	/^	git_commit_create_cb commit_create_cb;$/;"	m	struct:__anonf9a5428c0108	typeref:typename:git_commit_create_cb
commit_data	my_project/libgit2/src/libgit2/commit_graph.h	/^	const unsigned char *commit_data;$/;"	m	struct:git_commit_graph_file	typeref:typename:const unsigned char *
commit_data	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static unsigned char commit_data[] = {$/;"	v	typeref:typename:unsigned char[]
commit_data	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char commit_data[] = {$/;"	v	typeref:typename:unsigned char[]
commit_data_sha256	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char commit_data_sha256[] = {$/;"	v	typeref:typename:unsigned char[]
commit_graph_error	my_project/libgit2/src/libgit2/commit_graph.c	/^static int commit_graph_error(const char *message)$/;"	f	typeref:typename:int	file:
commit_graph_parse_commit_data	my_project/libgit2/src/libgit2/commit_graph.c	/^static int commit_graph_parse_commit_data($/;"	f	typeref:typename:int	file:
commit_graph_parse_extra_edge_list	my_project/libgit2/src/libgit2/commit_graph.c	/^static int commit_graph_parse_extra_edge_list($/;"	f	typeref:typename:int	file:
commit_graph_parse_oid_fanout	my_project/libgit2/src/libgit2/commit_graph.c	/^static int commit_graph_parse_oid_fanout($/;"	f	typeref:typename:int	file:
commit_graph_parse_oid_lookup	my_project/libgit2/src/libgit2/commit_graph.c	/^static int commit_graph_parse_oid_lookup($/;"	f	typeref:typename:int	file:
commit_graph_write	my_project/libgit2/src/libgit2/commit_graph.c	/^static int commit_graph_write($/;"	f	typeref:typename:int	file:
commit_graph_write_buf	my_project/libgit2/src/libgit2/commit_graph.c	/^static int commit_graph_write_buf(const char *buf, size_t size, void *data)$/;"	f	typeref:typename:int	file:
commit_graph_write_cb	my_project/libgit2/src/libgit2/commit_graph.c	/^typedef int (*commit_graph_write_cb)(const char *buf, size_t size, void *cb_data);$/;"	t	typeref:typename:int (*)(const char * buf,size_t size,void * cb_data)	file:
commit_graph_write_filebuf	my_project/libgit2/src/libgit2/commit_graph.c	/^static int commit_graph_write_filebuf(const char *buf, size_t size, void *data)$/;"	f	typeref:typename:int	file:
commit_graph_write_hash	my_project/libgit2/src/libgit2/commit_graph.c	/^static int commit_graph_write_hash(const char *buf, size_t size, void *data)$/;"	f	typeref:typename:int	file:
commit_graph_write_hash_context	my_project/libgit2/src/libgit2/commit_graph.c	/^struct commit_graph_write_hash_context {$/;"	s	file:
commit_head	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static const char *commit_head = "a4a7dce85cf63874e984719f4fdd239f5145052f";$/;"	v	typeref:typename:const char *	file:
commit_head	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^static const char *commit_head = "a4a7dce85cf63874e984719f4fdd239f5145052f";$/;"	v	typeref:typename:const char *	file:
commit_head	my_project/libgit2/tests/libgit2/revwalk/simplify.c	/^static const char *commit_head = "a4a7dce85cf63874e984719f4fdd239f5145052f";$/;"	v	typeref:typename:const char *	file:
commit_id	my_project/libgit2/include/git2/attr.h	/^	git_oid *commit_id;$/;"	m	struct:__anon790e91d50208	typeref:typename:git_oid *
commit_id	my_project/libgit2/include/git2/blob.h	/^	git_oid *commit_id;$/;"	m	struct:__anon7acff4790208	typeref:typename:git_oid *
commit_id	my_project/libgit2/include/git2/filter.h	/^	git_oid *commit_id;$/;"	m	struct:__anon331c2ce00308	typeref:typename:git_oid *
commit_id	my_project/libgit2/src/libgit2/attr_file.h	/^	git_oid *commit_id;$/;"	m	struct:__anon0df92d8f0208	typeref:typename:git_oid *
commit_id	my_project/libgit2/src/libgit2/describe.c	/^	git_oid commit_id;$/;"	m	struct:git_describe_result	typeref:typename:git_oid	file:
commit_id	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static char *commit_id = "3d7f8a6af076c8c3f20071a8935cdbe8228594d1";$/;"	v	typeref:typename:char *
commit_id	my_project/libgit2/tests/libgit2/refs/races.c	/^static const char *commit_id = "099fabac3a9ea935598528c27f866e34089c2eff";$/;"	v	typeref:typename:const char *	file:
commit_id_cmp	my_project/libgit2/tests/libgit2/graph/reachable_from_any.c	/^static int commit_id_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
commit_ids	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static const char *commit_ids[] = {$/;"	v	typeref:typename:const char * []	file:
commit_ids	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^static git_oid commit_ids[commit_count];$/;"	v	typeref:typename:git_oid[]	file:
commit_index	my_project/libgit2/src/libgit2/stash.c	/^static int commit_index($/;"	f	typeref:typename:int	file:
commit_message	my_project/libgit2/tests/libgit2/commit/write.c	/^static const char *commit_message = "This commit has been created in memory\\n\\$/;"	v	typeref:typename:const char *	file:
commit_msg	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^#define commit_msg /;"	d	file:
commit_name	my_project/libgit2/src/libgit2/describe.c	/^struct commit_name {$/;"	s	file:
commit_name_dup	my_project/libgit2/src/libgit2/describe.c	/^static int commit_name_dup(struct commit_name **out, struct commit_name *in)$/;"	f	typeref:typename:int	file:
commit_obj	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static git_rawobj commit_obj = {$/;"	v	typeref:typename:git_rawobj
commit_parent_data	my_project/libgit2/src/libgit2/commit.c	/^} commit_parent_data;$/;"	t	typeref:struct:__anon9e6354d90308	file:
commit_parent_for_amend	my_project/libgit2/src/libgit2/commit.c	/^static const git_oid *commit_parent_for_amend(size_t curr, void *payload)$/;"	f	typeref:typename:const git_oid *	file:
commit_parent_from_array	my_project/libgit2/src/libgit2/commit.c	/^static const git_oid *commit_parent_from_array(size_t curr, void *payload)$/;"	f	typeref:typename:const git_oid *	file:
commit_parent_from_commit	my_project/libgit2/src/libgit2/commit.c	/^static const git_oid *commit_parent_from_commit(size_t n, void *payload)$/;"	f	typeref:typename:const git_oid *	file:
commit_parent_from_ids	my_project/libgit2/src/libgit2/commit.c	/^static const git_oid *commit_parent_from_ids(size_t curr, void *payload)$/;"	f	typeref:typename:const git_oid *	file:
commit_parent_from_varargs	my_project/libgit2/src/libgit2/commit.c	/^static const git_oid *commit_parent_from_varargs(size_t curr, void *payload)$/;"	f	typeref:typename:const git_oid *	file:
commit_parent_oids	my_project/libgit2/src/libgit2/commit.c	/^} commit_parent_oids;$/;"	t	typeref:struct:__anon9e6354d90208	file:
commit_parent_varargs	my_project/libgit2/src/libgit2/commit.c	/^} commit_parent_varargs;$/;"	t	typeref:struct:__anon9e6354d90108	file:
commit_parse	my_project/libgit2/src/libgit2/commit.c	/^static int commit_parse($/;"	f	typeref:typename:int	file:
commit_parsing	my_project/libgit2/examples/general.c	/^static void commit_parsing(git_repository *repo)$/;"	f	typeref:typename:void	file:
commit_pool	my_project/libgit2/src/libgit2/revwalk.h	/^	git_pool commit_pool;$/;"	m	struct:git_revwalk	typeref:typename:git_pool
commit_quick_parse	my_project/libgit2/src/libgit2/commit_list.c	/^static int commit_quick_parse($/;"	f	typeref:typename:int	file:
commit_sha256	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static object_data commit_sha256 = {$/;"	v	typeref:typename:object_data
commit_sorting_segment	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static const int commit_sorting_segment[][6] = {$/;"	v	typeref:typename:const int[][6]	file:
commit_sorting_time	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static const int commit_sorting_time[][6] = {$/;"	v	typeref:typename:const int[][6]	file:
commit_sorting_time_reverse	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static const int commit_sorting_time_reverse[][6] = {$/;"	v	typeref:typename:const int[][6]	file:
commit_sorting_topo	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static const int commit_sorting_topo[][6] = {$/;"	v	typeref:typename:const int[][6]	file:
commit_sorting_topo_reverse	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static const int commit_sorting_topo_reverse[][6] = {$/;"	v	typeref:typename:const int[][6]	file:
commit_strs	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^static const char *commit_strs[] = {$/;"	v	typeref:typename:const char * []	file:
commit_time	my_project/libgit2/src/libgit2/commit_graph.c	/^	git_time_t commit_time;$/;"	m	struct:packed_commit	typeref:typename:git_time_t	file:
commit_time	my_project/libgit2/src/libgit2/commit_graph.h	/^	git_time_t commit_time;$/;"	m	struct:git_commit_graph_entry	typeref:typename:git_time_t
commit_type	my_project/libgit2/src/libgit2/refs.c	/^static const char *commit_type(const git_commit *commit)$/;"	f	typeref:typename:const char *	file:
commit_untracked	my_project/libgit2/src/libgit2/stash.c	/^static int commit_untracked($/;"	f	typeref:typename:int	file:
commit_worktree	my_project/libgit2/src/libgit2/stash.c	/^static int commit_worktree($/;"	f	typeref:typename:int	file:
commit_writing	my_project/libgit2/examples/general.c	/^static void commit_writing(git_repository *repo)$/;"	f	typeref:typename:void	file:
commits	my_project/libgit2/examples/describe.c	/^	const char **commits;$/;"	m	struct:describe_options	typeref:typename:const char **	file:
commits	my_project/libgit2/include/git2/commit.h	/^	git_commit *const *commits;$/;"	m	struct:git_commitarray	typeref:typename:git_commit * const *
commits	my_project/libgit2/src/libgit2/commit_graph.c	/^	git_vector *commits;$/;"	m	struct:object_entry_cb_state	typeref:typename:git_vector *	file:
commits	my_project/libgit2/src/libgit2/commit_graph.h	/^	git_vector commits;$/;"	m	struct:git_commit_graph_writer	typeref:typename:git_vector
commits	my_project/libgit2/src/libgit2/grafts.c	/^	git_oidmap *commits;$/;"	m	struct:git_grafts	typeref:typename:git_oidmap *	file:
commits	my_project/libgit2/src/libgit2/revwalk.h	/^	git_oidmap *commits;$/;"	m	struct:git_revwalk	typeref:typename:git_oidmap *
commits	my_project/libgit2/tests/libgit2/graph/reachable_from_any.c	/^	git_vector commits;$/;"	m	struct:exhaustive_state	typeref:typename:git_vector	file:
commitspec	my_project/libgit2/examples/blame.c	/^	char *commitspec;$/;"	m	struct:blame_opts	typeref:typename:char *	file:
committed	my_project/libgit2/src/libgit2/transaction.c	/^	unsigned int committed :1,$/;"	m	struct:__anonbebdb9760208	typeref:typename:unsigned int:1	file:
committer	my_project/libgit2/examples/log.c	/^	const char *committer;$/;"	m	struct:log_options	typeref:typename:const char *	file:
committer	my_project/libgit2/include/git2/commit.h	/^	const git_signature *committer;$/;"	m	struct:__anon3e0cd1e30108	typeref:typename:const git_signature *
committer	my_project/libgit2/src/libgit2/commit.h	/^	git_signature *committer;$/;"	m	struct:git_commit	typeref:typename:git_signature *
committer	my_project/libgit2/src/libgit2/notes.h	/^	git_signature *committer;$/;"	m	struct:git_note	typeref:typename:git_signature *
committer	my_project/libgit2/src/libgit2/reflog.h	/^	git_signature *committer;$/;"	m	struct:git_reflog_entry	typeref:typename:git_signature *
committer_email	my_project/libgit2/tests/libgit2/commit/write.c	/^static const char *committer_email = "vicent@github.com";$/;"	v	typeref:typename:const char *	file:
committer_name	my_project/libgit2/tests/libgit2/commit/write.c	/^static const char *committer_name = "Vicent Marti";$/;"	v	typeref:typename:const char *	file:
common	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:assert_backtrack	typeref:typename:backtrack_common	file:
common	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:bracket_backtrack	typeref:typename:backtrack_common	file:
common	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:bracketpos_backtrack	typeref:typename:backtrack_common	file:
common	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:braminzero_backtrack	typeref:typename:backtrack_common	file:
common	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:char_iterator_backtrack	typeref:typename:backtrack_common	file:
common	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:recurse_backtrack	typeref:typename:backtrack_common	file:
common	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:ref_iterator_backtrack	typeref:typename:backtrack_common	file:
common	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  backtrack_common common;$/;"	m	struct:then_trap_backtrack	typeref:typename:backtrack_common	file:
common	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_vector common;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:git_vector
common	my_project/libgit2/src/libgit2/transports/smart.h	/^	unsigned int common:1,$/;"	m	struct:transport_smart_caps	typeref:typename:unsigned int:1
common_prefix_icase	my_project/libgit2/src/libgit2/path.c	/^GIT_INLINE(size_t) common_prefix_icase(const char *str, size_t len, const char *prefix)$/;"	f	typeref:typename:size_t
commondir	my_project/libgit2/src/libgit2/repository.c	/^	git_str commondir;$/;"	m	struct:repo_paths	typeref:typename:git_str	file:
commondir	my_project/libgit2/src/libgit2/repository.h	/^	char *commondir;$/;"	m	struct:git_repository	typeref:typename:char *
commondir_path	my_project/libgit2/src/libgit2/worktree.h	/^	char *commondir_path;$/;"	m	struct:git_worktree	typeref:typename:char *
commonpath	my_project/libgit2/src/libgit2/refdb_fs.c	/^	char *commonpath;$/;"	m	struct:refdb_fs_backend	typeref:typename:char *	file:
compare_checksum	my_project/libgit2/src/libgit2/index.c	/^static int compare_checksum(git_index *index)$/;"	f	typeref:typename:int	file:
compare_context	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct compare_context {$/;"	s	file:
compare_context	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} compare_context;$/;"	t	typeref:struct:compare_context	file:
compare_data	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^struct compare_data$/;"	s	file:
compare_data	my_project/libgit2/tests/libgit2/index/crlf.c	/^struct compare_data$/;"	s	file:
compare_entries	my_project/libgit2/src/libgit2/tree.c	/^static int compare_entries(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
compare_file	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^static int compare_file(void *payload, git_str *actual_path)$/;"	f	typeref:typename:int	file:
compare_opcodes	my_project/libgit2/deps/pcre/pcre_compile.c	/^compare_opcodes(const pcre_uchar *code, BOOL utf, const compile_data *cd,$/;"	f	typeref:typename:BOOL	file:
compare_pt	my_project/libgit2/src/libgit2/describe.c	/^static int compare_pt(const void *a_, const void *b_)$/;"	f	typeref:typename:int	file:
compare_structs	my_project/libgit2/tests/util/vector.c	/^static int compare_structs(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
compare_them	my_project/libgit2/tests/util/vector.c	/^static int compare_them(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
compile_assert_backtrackingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_assert_backtrackingpath(compiler_common *common, struct backtrack_common *cu/;"	f	typeref:typename:void	file:
compile_assert_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *compile_assert_matchingpath(compiler_common *common, pcre_uchar *cc, assert_b/;"	f	typeref:typename:pcre_uchar *	file:
compile_backtrackingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_backtrackingpath(compiler_common *common, struct backtrack_common *current)$/;"	f	typeref:typename:void	file:
compile_bracket_backtrackingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_bracket_backtrackingpath(compiler_common *common, struct backtrack_common *c/;"	f	typeref:typename:void	file:
compile_bracket_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *compile_bracket_matchingpath(compiler_common *common, pcre_uchar *cc, backtra/;"	f	typeref:typename:pcre_uchar *	file:
compile_bracketpos_backtrackingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_bracketpos_backtrackingpath(compiler_common *common, struct bac/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_bracketpos_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *compile_bracketpos_matchingpath(compiler_common *common, pcre_uchar *cc, back/;"	f	typeref:typename:pcre_uchar *	file:
compile_braminzero_backtrackingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_braminzero_backtrackingpath(compiler_common *common, struct bac/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_branch	my_project/libgit2/deps/pcre/pcre_compile.c	/^compile_branch(int *optionsptr, pcre_uchar **codeptr,$/;"	f	typeref:typename:BOOL	file:
compile_callout_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *compile_callout_matchingpath(compiler_common *common, pcre_uchar/;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
compile_char1_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *compile_char1_matchingpath(compiler_common *common, pcre_uchar type, pcre_uch/;"	f	typeref:typename:pcre_uchar *	file:
compile_charn_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *compile_charn_matchingpath(compiler_common *common, pcre_uchar */;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
compile_close_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *compile_close_matchingpath(compiler_common *common, pcre_uchar */;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
compile_control_verb_backtrackingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_control_verb_backtrackingpath(compiler_common *common, struct b/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_control_verb_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *compile_control_verb_matchingpath(compiler_common *common, pcre_/;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
compile_data	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct compile_data {$/;"	s
compile_data	my_project/libgit2/deps/pcre/pcre_internal.h	/^} compile_data;$/;"	t	typeref:struct:compile_data
compile_dnref_search	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_dnref_search(compiler_common *common, pcre_uchar *cc, jump_list **backtracks/;"	f	typeref:typename:void	file:
compile_fail_accept_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *compile_fail_accept_matchingpath(compiler_common *common, pcre_u/;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
compile_iterator_backtrackingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_iterator_backtrackingpath(compiler_common *common, struct backtrack_common */;"	f	typeref:typename:void	file:
compile_iterator_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *compile_iterator_matchingpath(compiler_common *common, pcre_uchar *cc, backtr/;"	f	typeref:typename:pcre_uchar *	file:
compile_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_matchingpath(compiler_common *common, pcre_uchar *cc, pcre_uchar *ccend, bac/;"	f	typeref:typename:void	file:
compile_recurse	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_recurse(compiler_common *common)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_recurse_backtrackingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_recurse_backtrackingpath(compiler_common *common, struct backtr/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_recurse_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *compile_recurse_matchingpath(compiler_common *common, pcre_uchar/;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
compile_ref_iterator_backtrackingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_ref_iterator_backtrackingpath(compiler_common *common, struct b/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_ref_iterator_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *compile_ref_iterator_matchingpath(compiler_common *common, pcre_/;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
compile_ref_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_ref_matchingpath(compiler_common *common, pcre_uchar *cc, jump_list **backtr/;"	f	typeref:typename:void	file:
compile_regex	my_project/libgit2/deps/pcre/pcre_compile.c	/^compile_regex(int options, pcre_uchar **codeptr, const pcre_uchar **ptrptr,$/;"	f	typeref:typename:BOOL	file:
compile_simple_assertion_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *compile_simple_assertion_matchingpath(compiler_common *common, pcre_uchar typ/;"	f	typeref:typename:pcre_uchar *	file:
compile_then_trap_backtrackingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_then_trap_backtrackingpath(compiler_common *common, struct back/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_then_trap_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void compile_then_trap_matchingpath(compiler_common *common, pcre_uchar *cc,/;"	f	typeref:typename:SLJIT_INLINE void	file:
compile_xclass_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void compile_xclass_matchingpath(compiler_common *common, pcre_uchar *cc, jump_list **bac/;"	f	typeref:typename:void	file:
compiler	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_compiler *compiler;$/;"	m	struct:compiler_common	typeref:struct:sljit_compiler *	file:
compiler_common	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct compiler_common {$/;"	s	file:
compiler_common	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} compiler_common;$/;"	t	typeref:struct:compiler_common	file:
complete	my_project/libgit2/src/libgit2/filter.c	/^	bool complete;$/;"	m	struct:buf_stream	typeref:typename:bool	file:
complete	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^		complete : 1;$/;"	m	struct:__anon7fc745b70108	typeref:typename:unsigned:1	file:
complete	my_project/libgit2/src/libgit2/transports/auth_ntlmclient.c	/^	bool complete;$/;"	m	struct:__anon9ffa9aaa0108	typeref:typename:bool	file:
complete	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^	    complete : 1;$/;"	m	struct:__anon0a0089cf0108	typeref:typename:int:1	file:
complete_callout	my_project/libgit2/deps/pcre/pcre_compile.c	/^complete_callout(pcre_uchar *previous_callout, const pcre_uchar *ptr, compile_data *cd)$/;"	f	typeref:typename:void	file:
complete_request	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int complete_request(git_http_client *client)$/;"	f	typeref:typename:int	file:
complete_response_body	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static void complete_response_body(git_http_client *client)$/;"	f	typeref:typename:void	file:
completed_steps	my_project/libgit2/examples/clone.c	/^	size_t completed_steps;$/;"	m	struct:progress_data	typeref:typename:size_t	file:
completed_steps	my_project/libgit2/src/libgit2/checkout.c	/^	size_t completed_steps;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:size_t	file:
compress	my_project/libgit2/deps/zlib/zconf.h	/^#    define compress /;"	d
compress2	my_project/libgit2/deps/zlib/zconf.h	/^#    define compress2 /;"	d
compressBound	my_project/libgit2/deps/zlib/zconf.h	/^#    define compressBound /;"	d
compress_and_decompress_input_various_ways	my_project/libgit2/tests/util/zstream.c	/^static void compress_and_decompress_input_various_ways(git_str *input)$/;"	f	typeref:typename:void	file:
compress_block	my_project/libgit2/deps/zlib/trees.c	/^local void compress_block(deflate_state *s, const ct_data *ltree,$/;"	f	typeref:typename:local void
compress_filter	my_project/libgit2/tests/libgit2/filter/stream.c	/^static git_filter *compress_filter;$/;"	v	typeref:typename:git_filter *	file:
compress_filter_stream_init	my_project/libgit2/tests/libgit2/filter/stream.c	/^static int compress_filter_stream_init($/;"	f	typeref:typename:int	file:
compress_func	my_project/libgit2/deps/zlib/deflate.c	/^typedef block_state (*compress_func)(deflate_state *s, int flush);$/;"	t	typeref:typename:block_state (*)(deflate_state * s,int flush)	file:
compress_stream	my_project/libgit2/tests/libgit2/filter/stream.c	/^struct compress_stream {$/;"	s	file:
compress_stream_close	my_project/libgit2/tests/libgit2/filter/stream.c	/^static int compress_stream_close(git_writestream *s)$/;"	f	typeref:typename:int	file:
compress_stream_free	my_project/libgit2/tests/libgit2/filter/stream.c	/^static void compress_stream_free(git_writestream *stream)$/;"	f	typeref:typename:void	file:
compress_stream_write	my_project/libgit2/tests/libgit2/filter/stream.c	/^static int compress_stream_write(git_writestream *s, const char *buffer, size_t len)$/;"	f	typeref:typename:int	file:
compress_stream_write__deflated	my_project/libgit2/tests/libgit2/filter/stream.c	/^static int compress_stream_write__deflated(struct compress_stream *stream, const char *buffer, s/;"	f	typeref:typename:int	file:
compress_stream_write__inflated	my_project/libgit2/tests/libgit2/filter/stream.c	/^static int compress_stream_write__inflated(struct compress_stream *stream, const char *buffer, s/;"	f	typeref:typename:int	file:
compressed_len	my_project/libgit2/deps/zlib/deflate.h	/^    ulg compressed_len; \/* total bit length of compressed file mod 2^32 *\/$/;"	m	struct:internal_state	typeref:typename:ulg
compressing_objects_fmt	my_project/libgit2/src/libgit2/transports/local.c	/^static const char *compressing_objects_fmt = "Compressing objects: %.0f%% (%d\/%d)";$/;"	v	typeref:typename:const char *	file:
compression_level	my_project/libgit2/include/git2/odb_backend.h	/^	int compression_level;$/;"	m	struct:__anon6d9003760308	typeref:typename:int
compute_base	my_project/libgit2/src/libgit2/merge.c	/^static int compute_base($/;"	f	typeref:typename:int	file:
compute_depth	my_project/libgit2/src/cli/cmd_clone.c	/^static int compute_depth(const char *depth)$/;"	f	typeref:typename:int	file:
compute_diff_no_index	my_project/libgit2/examples/diff.c	/^static void compute_diff_no_index(git_diff **diff, struct diff_options *o) {$/;"	f	typeref:typename:void	file:
compute_digest	my_project/libgit2/src/util/filebuf.h	/^	bool compute_digest;$/;"	m	struct:git_filebuf	typeref:typename:bool
compute_generation_numbers	my_project/libgit2/src/libgit2/commit_graph.c	/^static int compute_generation_numbers(git_vector *commits)$/;"	f	typeref:typename:int	file:
compute_local_path	my_project/libgit2/src/cli/cmd_clone.c	/^static char *compute_local_path(const char *orig_path)$/;"	f	typeref:typename:char *	file:
compute_minrun	my_project/libgit2/src/util/tsort.c	/^static size_t compute_minrun(size_t n)$/;"	f	typeref:typename:size_t	file:
compute_new_size	my_project/libgit2/src/util/vector.c	/^GIT_INLINE(size_t) compute_new_size(git_vector *v)$/;"	f	typeref:typename:size_t
compute_write_order	my_project/libgit2/src/libgit2/pack-objects.c	/^static int compute_write_order(git_pobject ***out, git_packbuilder *pb)$/;"	f	typeref:typename:int	file:
concurrent_compress	my_project/libgit2/tests/libgit2/threads/refdb.c	/^static bool concurrent_compress = false;$/;"	v	typeref:typename:bool	file:
concurrent_compress	my_project/libgit2/tests/libgit2/threads/refdb.c	/^static bool concurrent_compress = true;$/;"	v	typeref:typename:bool	file:
cond	my_project/libgit2/src/libgit2/pack-objects.c	/^	git_cond cond;$/;"	m	struct:thread_params	typeref:typename:git_cond	file:
condassert	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define condassert /;"	d	file:
condfailed	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    jump_list *condfailed;$/;"	m	union:bracket_backtrack::__anon4bd17169010a	typeref:typename:jump_list *	file:
condfailed	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *condfailed;$/;"	m	struct:assert_backtrack	typeref:typename:jump_list *	file:
condition	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define condition /;"	d	file:
conditional_match_gitdir	my_project/libgit2/src/libgit2/config_file.c	/^static int conditional_match_gitdir($/;"	f	typeref:typename:int	file:
conditional_match_gitdir_i	my_project/libgit2/src/libgit2/config_file.c	/^static int conditional_match_gitdir_i($/;"	f	typeref:typename:int	file:
conditional_match_onbranch	my_project/libgit2/src/libgit2/config_file.c	/^static int conditional_match_onbranch($/;"	f	typeref:typename:int	file:
conditions	my_project/libgit2/src/libgit2/config_file.c	/^} conditions[] = {$/;"	v	typeref:typename:const struct __anon341047050308[]
config	my_project/libgit2/deps/zlib/deflate.c	/^} config;$/;"	t	typeref:struct:config_s	file:
config	my_project/libgit2/src/libgit2/config.c	/^	const git_config *config;$/;"	m	struct:__anona0399aa60308	typeref:typename:const git_config *	file:
config	my_project/libgit2/src/libgit2/config.c	/^	git_config *config;$/;"	m	struct:rename_data	typeref:typename:git_config *	file:
config	my_project/libgit2/src/libgit2/diff_xdiff.h	/^	xdemitconf_t config;$/;"	m	struct:__anon544d965e0108	typeref:typename:xdemitconf_t
config	my_project/libgit2/src/libgit2/remote.c	/^	git_config *config;$/;"	m	struct:update_data	typeref:typename:git_config *	file:
config	my_project/libgit2/tests/libgit2/repo/objectformat.c	/^static git_config *config;$/;"	v	typeref:typename:git_config *	file:
config_backend_new	my_project/libgit2/src/libgit2/config_mem.c	/^static config_memory_backend *config_backend_new($/;"	f	typeref:typename:config_memory_backend *	file:
config_entry_list	my_project/libgit2/src/libgit2/config_list.c	/^typedef struct config_entry_list {$/;"	s	file:
config_entry_list	my_project/libgit2/src/libgit2/config_list.c	/^} config_entry_list;$/;"	t	typeref:struct:config_entry_list	file:
config_entry_map_head	my_project/libgit2/src/libgit2/config_list.c	/^} config_entry_map_head;$/;"	t	typeref:struct:__anon421351410108	file:
config_error_notfound	my_project/libgit2/src/libgit2/config.c	/^static int config_error_notfound(const char *name)$/;"	f	typeref:typename:int	file:
config_error_readonly	my_project/libgit2/src/libgit2/config_mem.c	/^static int config_error_readonly(void)$/;"	f	typeref:typename:int	file:
config_error_readonly	my_project/libgit2/src/libgit2/config_snapshot.c	/^static int config_error_readonly(void)$/;"	f	typeref:typename:int	file:
config_file	my_project/libgit2/src/libgit2/config_file.c	/^typedef struct config_file {$/;"	s	file:
config_file	my_project/libgit2/src/libgit2/config_file.c	/^} config_file;$/;"	t	typeref:struct:config_file	file:
config_file_backend	my_project/libgit2/src/libgit2/config_file.c	/^} config_file_backend;$/;"	t	typeref:struct:__anon341047050108	file:
config_file_clear	my_project/libgit2/src/libgit2/config_file.c	/^static void config_file_clear(config_file *file)$/;"	f	typeref:typename:void	file:
config_file_clear_includes	my_project/libgit2/src/libgit2/config_file.c	/^static void config_file_clear_includes(config_file_backend *cfg)$/;"	f	typeref:typename:void	file:
config_file_delete	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_delete(git_config_backend *cfg, const char *name)$/;"	f	typeref:typename:int	file:
config_file_delete_multivar	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_delete_multivar(git_config_backend *cfg, const char *name, const char *re/;"	f	typeref:typename:int	file:
config_file_free	my_project/libgit2/src/libgit2/config_file.c	/^static void config_file_free(git_config_backend *_backend)$/;"	f	typeref:typename:void	file:
config_file_get	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_get(git_config_backend *cfg, const char *key, git_config_entry **out)$/;"	f	typeref:typename:int	file:
config_file_is_modified	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_is_modified(int *modified, config_file *file)$/;"	f	typeref:typename:int	file:
config_file_iterator	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_iterator($/;"	f	typeref:typename:int	file:
config_file_lock	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_lock(git_config_backend *_cfg)$/;"	f	typeref:typename:int	file:
config_file_open	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_open(git_config_backend *cfg, git_config_level_t level, const git_reposit/;"	f	typeref:typename:int	file:
config_file_parse_data	my_project/libgit2/src/libgit2/config_file.c	/^} config_file_parse_data;$/;"	t	typeref:struct:__anon341047050208	file:
config_file_read	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_read($/;"	f	typeref:typename:int	file:
config_file_read_buffer	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_read_buffer($/;"	f	typeref:typename:int	file:
config_file_refresh	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_refresh(git_config_backend *cfg)$/;"	f	typeref:typename:int	file:
config_file_refresh_from_buffer	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_refresh_from_buffer(git_config_backend *cfg, const char *buf, size_t bufl/;"	f	typeref:typename:int	file:
config_file_set	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_set(git_config_backend *cfg, const char *name, const char *value)$/;"	f	typeref:typename:int	file:
config_file_set_entries	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_set_entries(git_config_backend *cfg, git_config_list *config_list)$/;"	f	typeref:typename:int	file:
config_file_set_multivar	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_set_multivar($/;"	f	typeref:typename:int	file:
config_file_snapshot	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_snapshot(git_config_backend **out, git_config_backend *backend)$/;"	f	typeref:typename:int	file:
config_file_take_list	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_take_list(git_config_list **out, config_file_backend *b)$/;"	f	typeref:typename:int	file:
config_file_unlock	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_unlock(git_config_backend *_cfg, int success)$/;"	f	typeref:typename:int	file:
config_file_write	my_project/libgit2/src/libgit2/config_file.c	/^static int config_file_write($/;"	f	typeref:typename:int	file:
config_filename	my_project/libgit2/src/cli/cmd_config.c	/^static char *config_filename;$/;"	v	typeref:typename:char *	file:
config_files	my_project/libgit2/examples/general.c	/^static void config_files(const char *repo_path, git_repository* repo)$/;"	f	typeref:typename:void	file:
config_free	my_project/libgit2/src/libgit2/config.c	/^static void config_free(git_config *config)$/;"	f	typeref:typename:void	file:
config_get	my_project/libgit2/examples/config.c	/^static int config_get(git_config *cfg, const char *key)$/;"	f	typeref:typename:int	file:
config_get	my_project/libgit2/src/libgit2/pack-objects.c	/^#define config_get(/;"	d	file:
config_iterator_free	my_project/libgit2/src/libgit2/config_list.c	/^static void config_iterator_free(git_config_iterator *iter)$/;"	f	typeref:typename:void	file:
config_iterator_next	my_project/libgit2/src/libgit2/config_list.c	/^static int config_iterator_next($/;"	f	typeref:typename:int	file:
config_keychar	my_project/libgit2/src/libgit2/config_parse.c	/^GIT_INLINE(int) config_keychar(char c)$/;"	f	typeref:typename:int
config_level	my_project/libgit2/src/cli/cmd_config.c	/^static int config_level;$/;"	v	typeref:typename:int	file:
config_level_to_sysdir	my_project/libgit2/src/libgit2/settings.c	/^static int config_level_to_sysdir(int *out, int config_level)$/;"	f	typeref:typename:int	file:
config_list	my_project/libgit2/src/libgit2/config_file.c	/^	git_config_list *config_list;$/;"	m	struct:__anon341047050108	typeref:typename:git_config_list *	file:
config_list	my_project/libgit2/src/libgit2/config_file.c	/^	git_config_list *config_list;$/;"	m	struct:__anon341047050208	typeref:typename:git_config_list *	file:
config_list	my_project/libgit2/src/libgit2/config_list.h	/^	git_config_list *config_list;$/;"	m	struct:__anon421351460108	typeref:typename:git_config_list *
config_list	my_project/libgit2/src/libgit2/config_mem.c	/^	git_config_list *config_list;$/;"	m	struct:__anon766d71c40108	typeref:typename:git_config_list *	file:
config_list	my_project/libgit2/src/libgit2/config_mem.c	/^	git_config_list *config_list;$/;"	m	struct:__anon766d71c40208	typeref:typename:git_config_list *	file:
config_list	my_project/libgit2/src/libgit2/config_snapshot.c	/^	git_config_list *config_list;$/;"	m	struct:__anon05a78b950108	typeref:typename:git_config_list *	file:
config_list_free	my_project/libgit2/src/libgit2/config_list.c	/^static void config_list_free(git_config_list *config_list)$/;"	f	typeref:typename:void	file:
config_list_iterator	my_project/libgit2/src/libgit2/config_list.c	/^typedef struct config_list_iterator {$/;"	s	file:
config_list_iterator	my_project/libgit2/src/libgit2/config_list.c	/^} config_list_iterator;$/;"	t	typeref:struct:config_list_iterator	file:
config_memory_backend	my_project/libgit2/src/libgit2/config_mem.c	/^} config_memory_backend;$/;"	t	typeref:struct:__anon766d71c40108	file:
config_memory_delete	my_project/libgit2/src/libgit2/config_mem.c	/^static int config_memory_delete(git_config_backend *backend, const char *name)$/;"	f	typeref:typename:int	file:
config_memory_delete_multivar	my_project/libgit2/src/libgit2/config_mem.c	/^static int config_memory_delete_multivar(git_config_backend *backend, const char *name, const ch/;"	f	typeref:typename:int	file:
config_memory_free	my_project/libgit2/src/libgit2/config_mem.c	/^static void config_memory_free(git_config_backend *_backend)$/;"	f	typeref:typename:void	file:
config_memory_get	my_project/libgit2/src/libgit2/config_mem.c	/^static int config_memory_get(git_config_backend *backend, const char *key, git_config_entry **ou/;"	f	typeref:typename:int	file:
config_memory_iterator	my_project/libgit2/src/libgit2/config_mem.c	/^static int config_memory_iterator($/;"	f	typeref:typename:int	file:
config_memory_lock	my_project/libgit2/src/libgit2/config_mem.c	/^static int config_memory_lock(git_config_backend *backend)$/;"	f	typeref:typename:int	file:
config_memory_open	my_project/libgit2/src/libgit2/config_mem.c	/^static int config_memory_open(git_config_backend *backend, git_config_level_t level, const git_r/;"	f	typeref:typename:int	file:
config_memory_parse_data	my_project/libgit2/src/libgit2/config_mem.c	/^} config_memory_parse_data;$/;"	t	typeref:struct:__anon766d71c40208	file:
config_memory_set	my_project/libgit2/src/libgit2/config_mem.c	/^static int config_memory_set(git_config_backend *backend, const char *name, const char *value)$/;"	f	typeref:typename:int	file:
config_memory_set_multivar	my_project/libgit2/src/libgit2/config_mem.c	/^static int config_memory_set_multivar($/;"	f	typeref:typename:int	file:
config_memory_unlock	my_project/libgit2/src/libgit2/config_mem.c	/^static int config_memory_unlock(git_config_backend *backend, int success)$/;"	f	typeref:typename:int	file:
config_path	my_project/libgit2/tests/libgit2/repo/open.c	/^static git_buf config_path = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
config_path_global	my_project/libgit2/src/libgit2/repository.c	/^GIT_INLINE(int) config_path_global(git_str *out, bool use_env)$/;"	f	typeref:typename:int
config_path_system	my_project/libgit2/src/libgit2/repository.c	/^GIT_INLINE(int) config_path_system(git_str *out, bool use_env)$/;"	f	typeref:typename:int
config_s	my_project/libgit2/deps/zlib/deflate.c	/^typedef struct config_s {$/;"	s	file:
config_set	my_project/libgit2/examples/config.c	/^static int config_set(git_config *cfg, const char *key, const char *value)$/;"	f	typeref:typename:int	file:
config_snapshot_backend	my_project/libgit2/src/libgit2/config_snapshot.c	/^} config_snapshot_backend;$/;"	t	typeref:struct:__anon05a78b950108	file:
config_snapshot_delete	my_project/libgit2/src/libgit2/config_snapshot.c	/^static int config_snapshot_delete(git_config_backend *cfg, const char *name)$/;"	f	typeref:typename:int	file:
config_snapshot_delete_multivar	my_project/libgit2/src/libgit2/config_snapshot.c	/^static int config_snapshot_delete_multivar(git_config_backend *cfg, const char *name, const char/;"	f	typeref:typename:int	file:
config_snapshot_free	my_project/libgit2/src/libgit2/config_snapshot.c	/^static void config_snapshot_free(git_config_backend *_backend)$/;"	f	typeref:typename:void	file:
config_snapshot_get	my_project/libgit2/src/libgit2/config_snapshot.c	/^static int config_snapshot_get(git_config_backend *cfg, const char *key, git_config_entry **out)$/;"	f	typeref:typename:int	file:
config_snapshot_iterator	my_project/libgit2/src/libgit2/config_snapshot.c	/^static int config_snapshot_iterator($/;"	f	typeref:typename:int	file:
config_snapshot_lock	my_project/libgit2/src/libgit2/config_snapshot.c	/^static int config_snapshot_lock(git_config_backend *_cfg)$/;"	f	typeref:typename:int	file:
config_snapshot_open	my_project/libgit2/src/libgit2/config_snapshot.c	/^static int config_snapshot_open(git_config_backend *cfg, git_config_level_t level, const git_rep/;"	f	typeref:typename:int	file:
config_snapshot_set	my_project/libgit2/src/libgit2/config_snapshot.c	/^static int config_snapshot_set(git_config_backend *cfg, const char *name, const char *value)$/;"	f	typeref:typename:int	file:
config_snapshot_set_multivar	my_project/libgit2/src/libgit2/config_snapshot.c	/^static int config_snapshot_set_multivar($/;"	f	typeref:typename:int	file:
config_snapshot_unlock	my_project/libgit2/src/libgit2/config_snapshot.c	/^static int config_snapshot_unlock(git_config_backend *_cfg, int success)$/;"	f	typeref:typename:int	file:
configmap_cache	my_project/libgit2/src/libgit2/repository.h	/^	intptr_t configmap_cache[GIT_CONFIGMAP_CACHE_MAX];$/;"	m	struct:git_repository	typeref:typename:intptr_t[]
configuration_table	my_project/libgit2/deps/zlib/deflate.c	/^local const config configuration_table[10] = {$/;"	v	typeref:typename:local const config[10]
configuration_table	my_project/libgit2/deps/zlib/deflate.c	/^local const config configuration_table[2] = {$/;"	v	typeref:typename:local const config[2]
configurations	my_project/libgit2/.vscode/launch.json	/^    "configurations": [$/;"	a
configured	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^	unsigned configured : 1,$/;"	m	struct:__anon7fc745b70108	typeref:typename:unsigned:1	file:
confirm_submodule_status	my_project/libgit2/tests/libgit2/submodule/status.c	/^static int confirm_submodule_status($/;"	f	typeref:typename:int	file:
conflict_driver_apply	my_project/libgit2/tests/libgit2/merge/driver.c	/^static int conflict_driver_apply($/;"	f	typeref:typename:int	file:
conflict_entry_name	my_project/libgit2/src/libgit2/checkout.c	/^static int conflict_entry_name($/;"	f	typeref:typename:int	file:
conflict_name_cmp	my_project/libgit2/src/libgit2/index.c	/^static int conflict_name_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
conflict_pathspec_match	my_project/libgit2/src/libgit2/checkout.c	/^GIT_INLINE(bool) conflict_pathspec_match($/;"	f	typeref:typename:bool
conflicts	my_project/libgit2/src/libgit2/merge.h	/^	git_vector conflicts;$/;"	m	struct:__anon7b397d650208	typeref:typename:git_vector
conflicts	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^	int conflicts;$/;"	m	struct:__anon79a1dca80108	typeref:typename:int	file:
conflicts	my_project/libgit2/tests/libgit2/index/addall.c	/^	size_t conflicts;$/;"	m	struct:__anond08108c40108	typeref:typename:size_t	file:
conndata	my_project/libgit2/tests/util/url/http.c	/^static git_net_url conndata;$/;"	v	typeref:typename:git_net_url	file:
conndata	my_project/libgit2/tests/util/url/parse.c	/^static git_net_url conndata;$/;"	v	typeref:typename:git_net_url	file:
conndata	my_project/libgit2/tests/util/url/redirect.c	/^static git_net_url conndata;$/;"	v	typeref:typename:git_net_url	file:
conndata	my_project/libgit2/tests/util/url/scp.c	/^static git_net_url conndata;$/;"	v	typeref:typename:git_net_url	file:
connect_context	my_project/libgit2/src/libgit2/streams/schannel.c	/^static int connect_context(schannel_stream *st)$/;"	f	typeref:typename:int	file:
connect_opts	my_project/libgit2/src/libgit2/transports/local.c	/^	git_remote_connect_options connect_opts;$/;"	m	struct:__anona3bc4f8a0108	typeref:typename:git_remote_connect_options	file:
connect_opts	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_remote_connect_options connect_opts;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:git_remote_connect_options
connect_or_reset_options	my_project/libgit2/src/libgit2/remote.c	/^static int connect_or_reset_options($/;"	f	typeref:typename:int	file:
connect_timeout	my_project/libgit2/include/git2/sys/stream.h	/^	int connect_timeout;$/;"	m	struct:git_stream	typeref:typename:int
connect_to_local_repository	my_project/libgit2/tests/libgit2/network/remote/local.c	/^static void connect_to_local_repository(const char *local_repository)$/;"	f	typeref:typename:void	file:
connect_with_timeout	my_project/libgit2/src/libgit2/streams/socket.c	/^static int connect_with_timeout($/;"	f	typeref:typename:int	file:
connect_would_block	my_project/libgit2/src/libgit2/streams/socket.c	/^GIT_INLINE(bool) connect_would_block(int error)$/;"	f	typeref:typename:bool
connected	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^	bool connected;$/;"	m	struct:__anoncc3749c90108	typeref:typename:bool	file:
connected	my_project/libgit2/src/libgit2/streams/openssl.c	/^	bool connected;$/;"	m	struct:__anonb80f06c20108	typeref:typename:bool	file:
connected	my_project/libgit2/src/libgit2/streams/schannel.c	/^	bool connected;$/;"	m	struct:__anonafd1b44a0208	typeref:typename:bool	file:
connected	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	unsigned connected : 1,$/;"	m	struct:git_http_client	typeref:typename:unsigned:1	file:
connected	my_project/libgit2/src/libgit2/transports/local.c	/^	unsigned connected : 1,$/;"	m	struct:__anona3bc4f8a0108	typeref:typename:unsigned:1	file:
connected	my_project/libgit2/src/libgit2/transports/smart.h	/^	         connected : 1;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:unsigned:1
connection	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	HINTERNET connection;$/;"	m	struct:__anon5ba854ad0408	typeref:typename:HINTERNET	file:
connection_affinity	my_project/libgit2/src/libgit2/transports/auth.h	/^	unsigned connection_affinity : 1;$/;"	m	struct:git_http_auth_context	typeref:typename:unsigned:1
const	my_project/libgit2/deps/zlib/zconf.h	/^#    define const /;"	d
const_DES_cblock	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^typedef unsigned char const_DES_cblock[8];$/;"	t	typeref:typename:unsigned char[8]
consume_choices	my_project/libgit2/src/cli/opt.c	/^GIT_INLINE(void) consume_choices(const cli_opt_spec *spec, cli_opt_parser *parser)$/;"	f	typeref:typename:void
containing_dir	my_project/libgit2/src/libgit2/attr_file.h	/^	char *containing_dir;$/;"	m	struct:__anon0df92d8f0308	typeref:typename:char *
containing_dir_length	my_project/libgit2/src/libgit2/attr_file.h	/^	size_t containing_dir_length;$/;"	m	struct:__anon0df92d8f0308	typeref:typename:size_t
contains_all_cb	my_project/libgit2/tests/libgit2/config/memory.c	/^static int contains_all_cb(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
contains_angle_brackets	my_project/libgit2/src/libgit2/signature.c	/^static bool contains_angle_brackets(const char *input)$/;"	f	typeref:typename:bool	file:
contains_branches	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^static void contains_branches(struct expectations exp[], git_branch_iterator *iter)$/;"	f	typeref:typename:void	file:
contains_data	my_project/libgit2/include/git2/diff.h	/^	unsigned int contains_data;$/;"	m	struct:__anon7f3f1dd30908	typeref:typename:unsigned int
content	my_project/libgit2/include/git2/diff.h	/^	const char *content; \/**< Pointer to diff text, not NUL-byte terminated *\/$/;"	m	struct:__anon7f3f1dd30c08	typeref:typename:const char *
content	my_project/libgit2/src/libgit2/parse.h	/^	const char *content;$/;"	m	struct:__anon58da25b00108	typeref:typename:const char *
content	my_project/libgit2/src/libgit2/repo_template.h	/^	const char *content;$/;"	m	struct:__anon5b8f20a60108	typeref:typename:const char *
content	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.h	/^	const char *content;$/;"	m	struct:__anon1e6212950108	typeref:typename:const char *
content	my_project/libgit2/tests/util/vector.c	/^	int content;$/;"	m	struct:__anon93daa45f0108	typeref:typename:int	file:
content_len	my_project/libgit2/include/git2/diff.h	/^	size_t content_len;  \/**< Number of bytes of data *\/$/;"	m	struct:__anon7f3f1dd30c08	typeref:typename:size_t
content_len	my_project/libgit2/src/libgit2/parse.h	/^	size_t content_len;$/;"	m	struct:__anon58da25b00108	typeref:typename:size_t
content_length	my_project/libgit2/deps/llhttp/llhttp.h	/^  uint64_t content_length;$/;"	m	struct:llhttp__internal_s	typeref:typename:uint64_t
content_length	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	size_t content_length;             \/**< Length of the POST body *\/$/;"	m	struct:__anon3d590bc30208	typeref:typename:size_t
content_length	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	size_t content_length;$/;"	m	struct:__anon3d590bc30308	typeref:typename:size_t
content_offset	my_project/libgit2/include/git2/diff.h	/^	git_off_t content_offset; \/**< Offset in the original file to the content *\/$/;"	m	struct:__anon7f3f1dd30c08	typeref:typename:git_off_t
content_size	my_project/libgit2/src/libgit2/patch.h	/^	size_t content_size;$/;"	m	struct:git_patch	typeref:typename:size_t
content_type	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	char *content_type;$/;"	m	struct:__anon3d590bc30308	typeref:typename:char *
content_type	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	const char *content_type;          \/**< Content-Type header (for POST) *\/$/;"	m	struct:__anon3d590bc30208	typeref:typename:const char *
contents	my_project/libgit2/script/user_model.c	/^	void **contents;$/;"	m	struct:git_vector	typeref:typename:void **	file:
contents	my_project/libgit2/src/util/vector.h	/^	void **contents;$/;"	m	struct:git_vector	typeref:typename:void **
context	my_project/libgit2/src/libgit2/streams/schannel.c	/^	CtxtHandle context;$/;"	m	struct:__anonafd1b44a0208	typeref:typename:CtxtHandle	file:
context	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^	CtxtHandle context;$/;"	m	struct:__anon0a0089cf0108	typeref:typename:CtxtHandle	file:
context_lines	my_project/libgit2/include/git2/diff.h	/^	uint32_t    context_lines;$/;"	m	struct:__anon7f3f1dd30608	typeref:typename:uint32_t
context_size	my_project/libgit2/src/libgit2/patch.h	/^	size_t context_size;$/;"	m	struct:git_patch	typeref:typename:size_t
control_head_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 control_head_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
control_types	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^enum control_types {$/;"	g	file:
conversionOK	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^	conversionOK,           \/* conversion successful *\/$/;"	e	enum:__anon2762a15e0103	file:
convert_attrs	my_project/libgit2/src/libgit2/crlf.c	/^static int convert_attrs($/;"	f	typeref:typename:int	file:
coptable	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^static const pcre_uint8 coptable[] = {$/;"	v	typeref:typename:const pcre_uint8[]	file:
copy_common	my_project/libgit2/src/libgit2/transaction.c	/^static int copy_common(transaction_node *node, git_transaction *tx, const git_signature *sig, co/;"	f	typeref:typename:int	file:
copy_file	my_project/libgit2/tests/libgit2/index/tests.c	/^static void copy_file(const char *src, const char *dst)$/;"	f	typeref:typename:void	file:
copy_file	my_project/libgit2/tests/libgit2/index/tests256.c	/^static void copy_file(const char *src, const char *dst)$/;"	f	typeref:typename:void	file:
copy_ovector	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void copy_ovector(compiler_common *common, int topbracket)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
copy_private_data	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void copy_private_data(compiler_common *common, pcre_uchar *cc, pcre_uchar *ccend,$/;"	f	typeref:typename:void	file:
copy_refspecs	my_project/libgit2/src/libgit2/remote.c	/^static int copy_refspecs(git_strarray *array, const git_remote *remote, unsigned int push)$/;"	f	typeref:typename:int	file:
copy_threshold	my_project/libgit2/include/git2/diff.h	/^	uint16_t copy_threshold;$/;"	m	struct:__anon7f3f1dd30f08	typeref:typename:uint16_t
core.longpaths support	my_project/libgit2/docs/win32-longpaths.md	/^core.longpaths support$/;"	c
core_eol	my_project/libgit2/src/libgit2/crlf.c	/^	int core_eol;$/;"	m	struct:crlf_attrs	typeref:typename:int	file:
corrupt_thin_pack	my_project/libgit2/tests/libgit2/pack/indexer.c	/^static const unsigned char corrupt_thin_pack[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
corrupt_thin_pack_len	my_project/libgit2/tests/libgit2/pack/indexer.c	/^static const unsigned int corrupt_thin_pack_len = 67;$/;"	v	typeref:typename:const unsigned int	file:
could_be_empty	my_project/libgit2/deps/pcre/pcre_compile.c	/^could_be_empty(const pcre_uchar *code, const pcre_uchar *endcode,$/;"	f	typeref:typename:BOOL	file:
could_be_empty_branch	my_project/libgit2/deps/pcre/pcre_compile.c	/^could_be_empty_branch(const pcre_uchar *code, const pcre_uchar *endcode,$/;"	f	typeref:typename:BOOL	file:
count	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^  UINT4 count[2];        \/* number of bits, modulo 2^64 (lsb first) *\/$/;"	m	struct:__anonc766ba4d0108	typeref:typename:UINT4[2]	file:
count	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^  int count;                      \/* Count for repeats *\/$/;"	m	struct:stateblock	typeref:typename:int	file:
count	my_project/libgit2/deps/xdiff/xprepare.c	/^	long count;$/;"	m	struct:s_xdlclassifier	typeref:typename:long	file:
count	my_project/libgit2/include/git2/commit.h	/^	size_t count;$/;"	m	struct:git_commitarray	typeref:typename:size_t
count	my_project/libgit2/include/git2/message.h	/^  size_t count;$/;"	m	struct:__anon2d3685bf0208	typeref:typename:size_t
count	my_project/libgit2/include/git2/oidarray.h	/^	size_t count;$/;"	m	struct:git_oidarray	typeref:typename:size_t
count	my_project/libgit2/include/git2/strarray.h	/^	size_t count;$/;"	m	struct:git_strarray	typeref:typename:size_t
count	my_project/libgit2/src/libgit2/status.c	/^	unsigned int count;$/;"	m	struct:status_file_info	typeref:typename:unsigned int	file:
count	my_project/libgit2/tests/libgit2/checkout/tree.c	/^	int count;$/;"	m	struct:checkout_cancel_at	typeref:typename:int	file:
count	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^	int count;$/;"	m	struct:prefix_count	typeref:typename:int	file:
count	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^	int count;$/;"	m	struct:__anon6ff743e90208	typeref:typename:int
count	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^	int count;$/;"	m	struct:__anon34b4ac340108	typeref:typename:int	file:
count	my_project/libgit2/tests/util/dirent.c	/^	int count; \/* return count *\/$/;"	m	struct:name_data	typeref:typename:int	file:
count	my_project/libgit2/tests/util/vector.c	/^	int count;$/;"	m	struct:__anon93daa45f0108	typeref:typename:int	file:
count_allocs	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^	unsigned int count_allocs; \/* times this alloc signature seen since init *\/$/;"	m	struct:__anonc260a6b90308	typeref:typename:unsigned int	file:
count_allocs_at_last_checkpoint	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^	unsigned int count_allocs_at_last_checkpoint; \/* times since last mark *\/$/;"	m	struct:__anonc260a6b90308	typeref:typename:unsigned int	file:
count_attrs	my_project/libgit2/tests/libgit2/attr/repo.c	/^static int count_attrs($/;"	f	typeref:typename:int	file:
count_cb	my_project/libgit2/tests/libgit2/refs/foreachglob.c	/^static int count_cb(const char *reference_name, void *payload)$/;"	f	typeref:typename:int	file:
count_cfg_entries	my_project/libgit2/tests/libgit2/config/read.c	/^static int count_cfg_entries(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
count_cfg_entries_and_compare_levels	my_project/libgit2/tests/libgit2/config/read.c	/^static int count_cfg_entries_and_compare_levels($/;"	f	typeref:typename:int	file:
count_config_entries_cb	my_project/libgit2/tests/libgit2/config/config_helpers.c	/^static int count_config_entries_cb($/;"	f	typeref:typename:int	file:
count_config_entries_match	my_project/libgit2/tests/libgit2/config/config_helpers.c	/^int count_config_entries_match(git_repository *repo, const char *pattern)$/;"	f	typeref:typename:int
count_fsyncs	my_project/libgit2/tests/libgit2/refs/create.c	/^static void count_fsyncs(size_t *create_count, size_t *compress_count)$/;"	f	typeref:typename:void	file:
count_match	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void count_match(compiler_common *common)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
count_me	my_project/libgit2/tests/libgit2/config/snapshot.c	/^static int count_me(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
count_references	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^static size_t count_references(void)$/;"	f	typeref:typename:size_t	file:
count_refs	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static int count_refs(const char *ref_name, const char *remote_url, const git_oid *oid, unsigned/;"	f	typeref:typename:int	file:
count_refs_called	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static bool count_refs_called;$/;"	v	typeref:typename:bool	file:
count_run	my_project/libgit2/src/util/tsort.c	/^static ssize_t count_run($/;"	f	typeref:typename:ssize_t	file:
count_slashes	my_project/libgit2/src/libgit2/tree.c	/^GIT_INLINE(size_t) count_slashes(const char *path)$/;"	f	typeref:typename:size_t
counter	my_project/libgit2/tests/libgit2/online/fetch.c	/^static int counter;$/;"	v	typeref:typename:int	file:
counter	my_project/libgit2/tests/libgit2/submodule/status.c	/^	size_t counter;$/;"	m	struct:__anon0b5f5e9e0108	typeref:typename:size_t	file:
counting_objects_fmt	my_project/libgit2/src/libgit2/transports/local.c	/^static const char *counting_objects_fmt = "Counting objects %d\\r";$/;"	v	typeref:typename:const char *	file:
cp_by_fd	my_project/libgit2/src/util/futils.c	/^static int cp_by_fd(int ifd, int ofd, bool close_fd_when_done)$/;"	f	typeref:typename:int	file:
cp_link	my_project/libgit2/src/util/futils.c	/^static int cp_link(const char *from, const char *to, size_t link_size)$/;"	f	typeref:typename:int	file:
cp_r_info	my_project/libgit2/src/util/futils.c	/^} cp_r_info;$/;"	t	typeref:struct:__anon45ee97580208	file:
cr	my_project/libgit2/src/util/str.h	/^	unsigned int nul, cr, lf, crlf; \/* NUL, CR, LF and CRLF counts *\/$/;"	m	struct:__anon85703a5f0208	typeref:typename:unsigned int
crc	my_project/libgit2/src/libgit2/indexer.c	/^	uint32_t crc;$/;"	m	struct:entry	typeref:typename:uint32_t	file:
crc32	my_project/libgit2/deps/zlib/crc32.c	/^unsigned long ZEXPORT crc32(unsigned long crc, const unsigned char FAR *buf,$/;"	f	typeref:typename:unsigned long ZEXPORT
crc32	my_project/libgit2/deps/zlib/zconf.h	/^#  define crc32 /;"	d
crc32_combine	my_project/libgit2/deps/zlib/crc32.c	/^uLong ZEXPORT crc32_combine(uLong crc1, uLong crc2, z_off_t len2) {$/;"	f	typeref:typename:uLong ZEXPORT
crc32_combine	my_project/libgit2/deps/zlib/zconf.h	/^#  define crc32_combine /;"	d
crc32_combine	my_project/libgit2/deps/zlib/zlib.h	/^#    define crc32_combine /;"	d
crc32_combine64	my_project/libgit2/deps/zlib/crc32.c	/^uLong ZEXPORT crc32_combine64(uLong crc1, uLong crc2, z_off64_t len2) {$/;"	f	typeref:typename:uLong ZEXPORT
crc32_combine64	my_project/libgit2/deps/zlib/zconf.h	/^#  define crc32_combine64 /;"	d
crc32_combine_gen	my_project/libgit2/deps/zlib/crc32.c	/^uLong ZEXPORT crc32_combine_gen(z_off_t len2) {$/;"	f	typeref:typename:uLong ZEXPORT
crc32_combine_gen	my_project/libgit2/deps/zlib/zconf.h	/^#  define crc32_combine_gen /;"	d
crc32_combine_gen	my_project/libgit2/deps/zlib/zlib.h	/^#    define crc32_combine_gen /;"	d
crc32_combine_gen64	my_project/libgit2/deps/zlib/crc32.c	/^uLong ZEXPORT crc32_combine_gen64(z_off64_t len2) {$/;"	f	typeref:typename:uLong ZEXPORT
crc32_combine_gen64	my_project/libgit2/deps/zlib/zconf.h	/^#  define crc32_combine_gen64 /;"	d
crc32_combine_op	my_project/libgit2/deps/zlib/crc32.c	/^uLong ZEXPORT crc32_combine_op(uLong crc1, uLong crc2, uLong op) {$/;"	f	typeref:typename:uLong ZEXPORT
crc32_combine_op	my_project/libgit2/deps/zlib/zconf.h	/^#  define crc32_combine_op /;"	d
crc32_z	my_project/libgit2/deps/zlib/crc32.c	/^unsigned long ZEXPORT crc32_z(unsigned long crc, const unsigned char FAR *buf,$/;"	f	typeref:typename:unsigned long ZEXPORT
crc32_z	my_project/libgit2/deps/zlib/zconf.h	/^#  define crc32_z /;"	d
crc_big_table	my_project/libgit2/deps/zlib/crc32.c	/^   local z_word_t FAR crc_big_table[256];$/;"	v	typeref:typename:local z_word_t FAR[256]
crc_big_table	my_project/libgit2/deps/zlib/crc32.h	/^local const z_word_t FAR crc_big_table[] = {$/;"	v	typeref:typename:local const z_word_t FAR[]
crc_braid_big_table	my_project/libgit2/deps/zlib/crc32.c	/^   local z_word_t FAR crc_braid_big_table[W][256];$/;"	v	typeref:typename:local z_word_t FAR[][256]
crc_braid_big_table	my_project/libgit2/deps/zlib/crc32.h	/^local const z_word_t FAR crc_braid_big_table[][256] = {$/;"	v	typeref:typename:local const z_word_t FAR[][256]
crc_braid_table	my_project/libgit2/deps/zlib/crc32.c	/^   local z_crc_t FAR crc_braid_table[W][256];$/;"	v	typeref:typename:local z_crc_t FAR[][256]
crc_braid_table	my_project/libgit2/deps/zlib/crc32.h	/^local const z_crc_t FAR crc_braid_table[][256] = {$/;"	v	typeref:typename:local const z_crc_t FAR[][256]
crc_object	my_project/libgit2/src/libgit2/indexer.c	/^static int crc_object(uint32_t *crc_out, git_mwindow_file *mwf, off64_t start, off64_t size)$/;"	f	typeref:typename:int	file:
crc_table	my_project/libgit2/deps/zlib/crc32.c	/^local z_crc_t FAR crc_table[256];$/;"	v	typeref:typename:local z_crc_t FAR[256]
crc_table	my_project/libgit2/deps/zlib/crc32.h	/^local const z_crc_t FAR crc_table[] = {$/;"	v	typeref:typename:local const z_crc_t FAR[]
crc_word	my_project/libgit2/deps/zlib/crc32.c	/^local z_crc_t crc_word(z_word_t data) {$/;"	f	typeref:typename:local z_crc_t
crc_word_big	my_project/libgit2/deps/zlib/crc32.c	/^local z_word_t crc_word_big(z_word_t data) {$/;"	f	typeref:typename:local z_word_t
create	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int (*create) (BIO *);$/;"	m	struct:bio_method_st	typeref:typename:int (*)(BIO *)
create_and_configure_origin	my_project/libgit2/src/libgit2/clone.c	/^static int create_and_configure_origin($/;"	f	typeref:typename:int	file:
create_annotation	my_project/libgit2/tests/libgit2/object/tag/write.c	/^static void create_annotation(git_oid *tag_id, const char *name)$/;"	f	typeref:typename:void	file:
create_binary	my_project/libgit2/src/libgit2/patch_generate.c	/^static int create_binary($/;"	f	typeref:typename:int	file:
create_bitflip_filter	my_project/libgit2/tests/libgit2/filter/custom_helpers.c	/^git_filter *create_bitflip_filter(void)$/;"	f	typeref:typename:git_filter *
create_branch	my_project/libgit2/src/libgit2/branch.c	/^static int create_branch($/;"	f	typeref:typename:int	file:
create_branch	my_project/libgit2/src/libgit2/clone.c	/^static int create_branch($/;"	f	typeref:typename:int	file:
create_cb_error	my_project/libgit2/tests/libgit2/rebase/sign.c	/^static int create_cb_error($/;"	f	typeref:typename:int	file:
create_cb_passthrough	my_project/libgit2/tests/libgit2/rebase/sign.c	/^static int create_cb_passthrough($/;"	f	typeref:typename:int	file:
create_cb_signed_gpg	my_project/libgit2/tests/libgit2/rebase/sign.c	/^static int create_cb_signed_gpg($/;"	f	typeref:typename:int	file:
create_commit_from_ids	my_project/libgit2/tests/libgit2/commit/write.c	/^static int create_commit_from_ids($/;"	f	typeref:typename:int	file:
create_compress_filter	my_project/libgit2/tests/libgit2/filter/stream.c	/^git_filter *create_compress_filter(void)$/;"	f	typeref:typename:git_filter *
create_conflict	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static void create_conflict(const char *path)$/;"	f	typeref:typename:void	file:
create_conflicting_index	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^static void create_conflicting_index(void)$/;"	f	typeref:typename:void	file:
create_deletion_refspecs	my_project/libgit2/tests/libgit2/online/push_util.c	/^int create_deletion_refspecs(git_vector *out, const git_remote_head **heads, size_t heads_len)$/;"	f	typeref:typename:int
create_dummy_commit	my_project/libgit2/tests/libgit2/network/remote/push.c	/^static void create_dummy_commit(git_reference **out, git_repository *repo)$/;"	f	typeref:typename:void	file:
create_empty_file	my_project/libgit2/src/libgit2/repository.c	/^static int create_empty_file(const char *path, mode_t mode)$/;"	f	typeref:typename:int	file:
create_erroneous_filter	my_project/libgit2/tests/libgit2/filter/custom_helpers.c	/^git_filter *create_erroneous_filter(const char *attrs)$/;"	f	typeref:typename:git_filter *
create_error	my_project/libgit2/src/libgit2/stash.c	/^static int create_error(int error, const char *msg)$/;"	f	typeref:typename:int	file:
create_fake_stash_reference_and_reflog	my_project/libgit2/tests/libgit2/refs/revparse.c	/^static void create_fake_stash_reference_and_reflog(git_repository *repo)$/;"	f	typeref:typename:void	file:
create_hash	my_project/libgit2/src/util/hash/win32.c	/^	cng_create_hash_fn create_hash;$/;"	m	struct:cng_provider	typeref:typename:cng_create_hash_fn	file:
create_identity	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^static int create_identity($/;"	f	typeref:typename:int	file:
create_index	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^static void create_index(struct checkout_index_entry *entries, size_t entries_len)$/;"	f	typeref:typename:void	file:
create_index_error	my_project/libgit2/src/libgit2/index.c	/^static int create_index_error(int error, const char *msg)$/;"	f	typeref:typename:int	file:
create_index_names	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^static void create_index_names(struct checkout_name_entry *entries, size_t entries_len)$/;"	f	typeref:typename:void	file:
create_initial_commit	my_project/libgit2/examples/init.c	/^static void create_initial_commit(git_repository *repo)$/;"	f	typeref:typename:void	file:
create_merge_commit	my_project/libgit2/examples/merge.c	/^static int create_merge_commit(git_repository *repo, git_index *index, struct merge_options *opt/;"	f	typeref:typename:int	file:
create_name_extension_data	my_project/libgit2/src/libgit2/index.c	/^static int create_name_extension_data(git_str *name_buf, git_index_name_entry *conflict_name)$/;"	f	typeref:typename:int	file:
create_new_reflog_file	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int create_new_reflog_file(const char *filepath)$/;"	f	typeref:typename:int	file:
create_note	my_project/libgit2/tests/libgit2/notes/notes.c	/^static void create_note(git_oid *note_oid, const char *canonical_namespace, const char *target_s/;"	f	typeref:typename:void	file:
create_packfile_commit	my_project/libgit2/tests/libgit2/pack/filelimit.c	/^static void create_packfile_commit($/;"	f	typeref:typename:void	file:
create_paths	my_project/libgit2/tests/libgit2/iterator/index.c	/^static void create_paths(git_index *index, const char *root, int depth)$/;"	f	typeref:typename:void	file:
create_paths	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^static void create_paths(const char *root, int depth)$/;"	f	typeref:typename:void	file:
create_popped_tree	my_project/libgit2/src/libgit2/tree.c	/^static int create_popped_tree(tree_stack_entry *current, tree_stack_entry *popped, git_str *comp/;"	f	typeref:typename:int	file:
create_preparescript	my_project/libgit2/tests/benchmarks/benchmark_helpers.sh	/^create_preparescript() {$/;"	f
create_refs	my_project/libgit2/tests/libgit2/threads/refdb.c	/^static void *create_refs(void *arg)$/;"	f	typeref:typename:void *	file:
create_remote_tracking_branch	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^static int create_remote_tracking_branch(const char *branch_name, const char *oid_str)$/;"	f	typeref:typename:int	file:
create_reuc_extension_data	my_project/libgit2/src/libgit2/index.c	/^static int create_reuc_extension_data(git_str *reuc_buf, git_index *index, git_index_reuc_entry /;"	f	typeref:typename:int	file:
create_reverse_filter	my_project/libgit2/tests/libgit2/filter/custom_helpers.c	/^git_filter *create_reverse_filter(const char *attrs)$/;"	f	typeref:typename:git_filter *
create_runscript	my_project/libgit2/tests/benchmarks/benchmark_helpers.sh	/^create_runscript() {$/;"	f
create_signed	my_project/libgit2/src/libgit2/rebase.c	/^static int create_signed($/;"	f	typeref:typename:int	file:
create_tmp_global_config	my_project/libgit2/tests/libgit2/repo/repo_helpers.c	/^void create_tmp_global_config(const char *dirname, const char *key, const char *val)$/;"	f	typeref:typename:void
create_to_odb_data	my_project/libgit2/tests/resources/generate_crlf.sh	/^create_to_odb_data() {$/;"	f
create_to_workdir_data	my_project/libgit2/tests/resources/generate_crlf.sh	/^create_to_workdir_data() {$/;"	f
create_tracking_branch	my_project/libgit2/src/libgit2/clone.c	/^static int create_tracking_branch($/;"	f	typeref:typename:int	file:
create_virtual_base	my_project/libgit2/src/libgit2/merge.c	/^static int create_virtual_base($/;"	f	typeref:typename:int	file:
create_wildcard_filter	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^static git_filter *create_wildcard_filter(void)$/;"	f	typeref:typename:git_filter *	file:
create_with_name	my_project/libgit2/tests/libgit2/remote/create.c	/^static int create_with_name(git_remote **remote, git_repository *repo, const char *name, const c/;"	f	typeref:typename:int	file:
created_lock	my_project/libgit2/src/util/filebuf.h	/^	bool created_lock;$/;"	m	struct:git_filebuf	typeref:typename:bool
creation_disposition	my_project/libgit2/src/util/win32/posix_w32.c	/^	DWORD creation_disposition;$/;"	m	struct:open_opts	typeref:typename:DWORD	file:
cred	my_project/libgit2/src/libgit2/streams/schannel.c	/^	CredHandle cred;$/;"	m	struct:__anonafd1b44a0208	typeref:typename:CredHandle	file:
cred	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^	CredHandle cred;$/;"	m	struct:__anon0a0089cf0108	typeref:typename:CredHandle	file:
cred	my_project/libgit2/src/libgit2/transports/http.c	/^	git_credential *cred;$/;"	m	struct:__anon515ae8bf0408	typeref:typename:git_credential *	file:
cred	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^	git_credential *cred;$/;"	m	struct:__anonf54f66e30208	typeref:typename:git_credential *	file:
cred	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	git_credential *cred;$/;"	m	struct:__anon5ba854ad0308	typeref:typename:git_credential *	file:
cred_acquire_cb	my_project/libgit2/examples/common.c	/^int cred_acquire_cb(git_credential **out,$/;"	f	typeref:typename:int
cred_acquire_cb	my_project/libgit2/tests/libgit2/online/push.c	/^static int cred_acquire_cb($/;"	f	typeref:typename:int	file:
cred_cb	my_project/libgit2/tests/libgit2/online/clone.c	/^static int cred_cb(git_credential **cred, const char *url, const char *user_from_url,$/;"	f	typeref:typename:int	file:
cred_count_calls_cb	my_project/libgit2/tests/libgit2/online/clone.c	/^static int cred_count_calls_cb(git_credential **cred, const char *url, const char *user,$/;"	f	typeref:typename:int	file:
cred_default	my_project/libgit2/tests/libgit2/online/clone.c	/^static int cred_default($/;"	f	typeref:typename:int	file:
cred_failure_cb	my_project/libgit2/tests/libgit2/online/clone.c	/^static int cred_failure_cb($/;"	f	typeref:typename:int	file:
cred_foo_bar	my_project/libgit2/tests/libgit2/online/clone.c	/^static int cred_foo_bar(git_credential **cred, const char *url, const char *username_from_url,$/;"	f	typeref:typename:int	file:
credentials	my_project/libgit2/include/git2/proxy.h	/^	git_credential_acquire_cb credentials;$/;"	m	struct:__anon188a123c0208	typeref:typename:git_credential_acquire_cb
credentials	my_project/libgit2/include/git2/remote.h	/^	git_credential_acquire_cb credentials;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_credential_acquire_cb
credentials	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	git_credential *credentials;       \/**< Credentials to authenticate with *\/$/;"	m	struct:__anon3d590bc30208	typeref:typename:git_credential *
credtype	my_project/libgit2/include/git2/sys/credential.h	/^	git_credential_t credtype; \/**< A type of credential *\/$/;"	m	struct:git_credential	typeref:typename:git_credential_t
credtypes	my_project/libgit2/src/libgit2/transports/auth.h	/^	git_credential_t credtypes;$/;"	m	struct:__anon4118c2d60208	typeref:typename:git_credential_t
credtypes	my_project/libgit2/src/libgit2/transports/auth.h	/^	git_credential_t credtypes;$/;"	m	struct:git_http_auth_context	typeref:typename:git_credential_t
crlf	my_project/libgit2/src/util/str.h	/^	unsigned int nul, cr, lf, crlf; \/* NUL, CR, LF and CRLF counts *\/$/;"	m	struct:__anon85703a5f0208	typeref:typename:unsigned int
crlf_action	my_project/libgit2/src/libgit2/crlf.c	/^	int crlf_action; \/* the core.autocrlf setting *\/$/;"	m	struct:crlf_attrs	typeref:typename:int	file:
crlf_apply	my_project/libgit2/src/libgit2/crlf.c	/^static int crlf_apply($/;"	f	typeref:typename:int	file:
crlf_apply_to_odb	my_project/libgit2/src/libgit2/crlf.c	/^static int crlf_apply_to_odb($/;"	f	typeref:typename:int	file:
crlf_apply_to_workdir	my_project/libgit2/src/libgit2/crlf.c	/^static int crlf_apply_to_workdir($/;"	f	typeref:typename:int	file:
crlf_attrs	my_project/libgit2/src/libgit2/crlf.c	/^struct crlf_attrs {$/;"	s	file:
crlf_check	my_project/libgit2/src/libgit2/crlf.c	/^static int crlf_check($/;"	f	typeref:typename:int	file:
crlf_cleanup	my_project/libgit2/src/libgit2/crlf.c	/^static void crlf_cleanup($/;"	f	typeref:typename:void	file:
crlf_filter	my_project/libgit2/src/libgit2/crlf.c	/^struct crlf_filter {$/;"	s	file:
crlf_stream	my_project/libgit2/src/libgit2/crlf.c	/^static int crlf_stream($/;"	f	typeref:typename:int	file:
crypt_ctx	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_crypt_ctx crypt_ctx;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_crypt_ctx
crypt_initialized	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	int crypt_initialized : 1,$/;"	m	struct:ntlm_client	typeref:typename:int:1
cryptoapi	my_project/libgit2/src/util/hash/win32.c	/^		struct cryptoapi_provider cryptoapi;$/;"	m	union:__anon307989470108::__anon30798947020a	typeref:struct:cryptoapi_provider	file:
cryptoapi	my_project/libgit2/src/util/hash/win32.h	/^		struct git_hash_win32_cryptoapi_ctx cryptoapi;$/;"	m	union:__anon3079894c0208::__anon3079894c030a	typeref:struct:git_hash_win32_cryptoapi_ctx
cryptoapi_provider	my_project/libgit2/src/util/hash/win32.c	/^struct cryptoapi_provider {$/;"	s	file:
cryptoapi_provider_init	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) cryptoapi_provider_init(void)$/;"	f	typeref:typename:int
cryptoapi_provider_shutdown	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(void) cryptoapi_provider_shutdown(void)$/;"	f	typeref:typename:void
csec	my_project/libgit2/src/util/win32/thread.h	/^		CRITICAL_SECTION csec;$/;"	m	union:__anond08cd1a00308::__anond08cd1a0040a	typeref:typename:CRITICAL_SECTION
ct_data	my_project/libgit2/deps/zlib/deflate.h	/^} FAR ct_data;$/;"	t	typeref:struct:ct_data_s FAR
ct_data_s	my_project/libgit2/deps/zlib/deflate.h	/^typedef struct ct_data_s {$/;"	s
ctime	my_project/libgit2/include/git2/index.h	/^	git_index_time ctime;$/;"	m	struct:git_index_entry	typeref:typename:git_index_time
ctime	my_project/libgit2/src/libgit2/index.c	/^	struct entry_time ctime;$/;"	m	struct:entry_common	typeref:struct:entry_time	file:
ctor_called	my_project/libgit2/tests/libgit2/stream/deprecated.c	/^static int ctor_called;$/;"	v	typeref:typename:int	file:
ctor_called	my_project/libgit2/tests/libgit2/stream/registration.c	/^static int ctor_called;$/;"	v	typeref:typename:int	file:
ctrl	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    long (*ctrl) (BIO *, int, long, void *);$/;"	m	struct:bio_method_st	typeref:typename:long (*)(BIO *,int,long,void *)
ctx	my_project/libgit2/src/libgit2/commit_graph.c	/^	git_hash_ctx *ctx;$/;"	m	struct:commit_graph_write_hash_context	typeref:typename:git_hash_ctx *	file:
ctx	my_project/libgit2/src/libgit2/config_parse.h	/^	git_parse_ctx ctx;$/;"	m	struct:__anona5ab66050108	typeref:typename:git_parse_ctx
ctx	my_project/libgit2/src/libgit2/diff.c	/^	git_hash_ctx ctx;$/;"	m	struct:patch_id_args	typeref:typename:git_hash_ctx	file:
ctx	my_project/libgit2/src/libgit2/midx.c	/^	git_hash_ctx *ctx;$/;"	m	struct:midx_write_hash_context	typeref:typename:git_hash_ctx *	file:
ctx	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_hash_ctx ctx;$/;"	m	struct:git_packbuilder	typeref:typename:git_hash_ctx
ctx	my_project/libgit2/src/libgit2/patch_parse.c	/^	git_patch_parse_ctx *ctx;$/;"	m	struct:__anonddb10c3a0108	typeref:typename:git_patch_parse_ctx *	file:
ctx	my_project/libgit2/src/libgit2/streams/stransport.c	/^	SSLContextRef ctx;$/;"	m	struct:__anon898973fe0108	typeref:typename:SSLContextRef	file:
ctx	my_project/libgit2/src/util/hash.h	/^	} ctx;$/;"	m	struct:git_hash_ctx	typeref:union:git_hash_ctx::__anon187871ca030a
ctx	my_project/libgit2/src/util/hash/win32.h	/^	} ctx;$/;"	m	struct:__anon3079894c0208	typeref:union:__anon3079894c0208::__anon3079894c030a
ctxlen	my_project/libgit2/deps/xdiff/xdiff.h	/^	long ctxlen;$/;"	m	struct:s_xdemitconf	typeref:typename:long
ctype	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define ctype /;"	d	file:
ctype_digit	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define ctype_digit /;"	d
ctype_letter	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define ctype_letter /;"	d
ctype_meta	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define ctype_meta /;"	d
ctype_space	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define ctype_space /;"	d
ctype_word	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define ctype_word /;"	d
ctype_xdigit	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define ctype_xdigit /;"	d
ctypes	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const  pcre_uint8 *ctypes;      \/* Points to table of type maps *\/$/;"	m	struct:match_data	typeref:typename:const pcre_uint8 *
ctypes	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uint8 *ctypes;         \/* Points to table of type maps *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uint8 *
ctypes	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_sw ctypes;$/;"	m	struct:compiler_common	typeref:typename:sljit_sw	file:
ctypes_offset	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define ctypes_offset /;"	d
cur	my_project/libgit2/src/libgit2/index.h	/^	size_t cur;$/;"	m	struct:git_index_conflict_iterator	typeref:typename:size_t
cur	my_project/libgit2/src/libgit2/index.h	/^	size_t cur;$/;"	m	struct:git_index_iterator	typeref:typename:size_t
cur_is_word	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define cur_is_word /;"	d	file:
curpos	my_project/libgit2/src/libgit2/pack.h	/^	off64_t curpos;$/;"	m	struct:git_packfile_stream	typeref:typename:off64_t
current	my_project/libgit2/deps/llhttp/llhttp.c	/^  const unsigned char* current;$/;"	m	struct:llparse_match_s	typeref:typename:const unsigned char *	file:
current	my_project/libgit2/src/libgit2/config.c	/^	git_config_iterator *current;$/;"	m	struct:__anona0399aa60308	typeref:typename:git_config_iterator *	file:
current	my_project/libgit2/src/libgit2/iterator.c	/^	tree_iterator_entry *current;$/;"	m	struct:__anon2f88b95a0408	typeref:typename:tree_iterator_entry *	file:
current	my_project/libgit2/src/libgit2/iterator.h	/^	int (*current)(const git_index_entry **, git_iterator *);$/;"	m	struct:__anon2f88b95f0508	typeref:typename:int (*)(const git_index_entry **,git_iterator *)
current	my_project/libgit2/src/libgit2/rebase.c	/^	size_t current;$/;"	m	struct:git_rebase	typeref:typename:size_t	file:
current	my_project/libgit2/src/util/fs_path.h	/^	WIN32_FIND_DATAW current;$/;"	m	struct:git_fs_path_diriter	typeref:typename:WIN32_FIND_DATAW
current	my_project/libgit2/tests/libgit2/filter/stream.c	/^	char current;$/;"	m	struct:compress_stream	typeref:typename:char	file:
current_branch	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uchar *current_branch;$/;"	m	struct:branch_chain	typeref:typename:pcre_uchar *
current_chunk	my_project/libgit2/tests/libgit2/filter/stream.c	/^	size_t current_chunk;$/;"	m	struct:compress_stream	typeref:typename:size_t	file:
current_diff_line	my_project/libgit2/src/libgit2/blame.h	/^	size_t current_diff_line;$/;"	m	struct:git_blame	typeref:typename:size_t
current_dir	my_project/libgit2/src/util/win32/path_w32.c	/^	const wchar_t *current_dir;$/;"	m	struct:win32_path_iter	typeref:typename:const wchar_t *	file:
current_head_target	my_project/libgit2/tests/libgit2/refs/create.c	/^static const char *current_head_target = "refs\/heads\/master";$/;"	v	typeref:typename:const char *	file:
current_head_target	my_project/libgit2/tests/libgit2/refs/read.c	/^static const char *current_head_target = "refs\/heads\/master";$/;"	v	typeref:typename:const char *	file:
current_hunk	my_project/libgit2/src/libgit2/blame.h	/^	git_blame_hunk *current_hunk;$/;"	m	struct:git_blame	typeref:typename:git_blame_hunk *
current_is_ignored	my_project/libgit2/src/libgit2/iterator.c	/^	int current_is_ignored;$/;"	m	struct:__anon2f88b95a0808	typeref:typename:int	file:
current_master_tip	my_project/libgit2/tests/libgit2/refs/create.c	/^static const char *current_master_tip = "099fabac3a9ea935598528c27f866e34089c2eff";$/;"	v	typeref:typename:const char *	file:
current_master_tip	my_project/libgit2/tests/libgit2/refs/delete.c	/^static const char *current_master_tip = "a65fedf39aefe402d3bb6e24df4d4f5fe4547750";$/;"	v	typeref:typename:const char *	file:
current_master_tip	my_project/libgit2/tests/libgit2/refs/read.c	/^static const char *current_master_tip = "a65fedf39aefe402d3bb6e24df4d4f5fe4547750";$/;"	v	typeref:typename:const char *	file:
current_master_tip	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^static const char *current_master_tip = "a65fedf39aefe402d3bb6e24df4d4f5fe4547750";$/;"	v	typeref:typename:const char *	file:
current_path	my_project/libgit2/src/libgit2/iterator.c	/^	git_str current_path;$/;"	m	struct:__anon2f88b95a0808	typeref:typename:git_str	file:
current_position	my_project/libgit2/deps/pcre/pcre.h	/^  int          current_position;  \/* Where we currently are in the subject *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
current_position	my_project/libgit2/deps/pcre/pcre.h	/^  int          current_position;  \/* Where we currently are in the subject *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
current_position	my_project/libgit2/deps/pcre/pcre.h	/^  int          current_position;  \/* Where we currently are in the subject *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
current_server	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_http_server_t current_server;$/;"	m	struct:git_http_client	typeref:typename:git_http_server_t	file:
current_stream	my_project/libgit2/src/libgit2/transports/git.c	/^	git_proto_stream *current_stream;$/;"	m	struct:__anoneb1923e30208	typeref:typename:git_proto_stream *	file:
current_stream	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_smart_subtransport_stream *current_stream;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:git_smart_subtransport_stream *
current_stream	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^	ssh_exec_subtransport_stream *current_stream;$/;"	m	struct:__anonec53c3310208	typeref:typename:ssh_exec_subtransport_stream *	file:
current_stream	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^	ssh_stream *current_stream;$/;"	m	struct:__anonf54f66e30208	typeref:typename:ssh_stream *	file:
current_time	my_project/libgit2/src/libgit2/signature.c	/^static void current_time(time_t *now_out, int *offset_out)$/;"	f	typeref:typename:void	file:
current_user_sid	my_project/libgit2/src/util/fs_path.c	/^static int current_user_sid(PSID *out)$/;"	f	typeref:typename:int	file:
currententry	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  recurse_entry *currententry;$/;"	m	struct:compiler_common	typeref:typename:recurse_entry *	file:
custom_headers	my_project/libgit2/include/git2/remote.h	/^	git_strarray custom_headers;$/;"	m	struct:__anon144be4e60808	typeref:typename:git_strarray
custom_headers	my_project/libgit2/include/git2/remote.h	/^	git_strarray custom_headers;$/;"	m	struct:__anon144be4e60908	typeref:typename:git_strarray
custom_headers	my_project/libgit2/include/git2/remote.h	/^	git_strarray custom_headers;$/;"	m	struct:__anon144be4e60a08	typeref:typename:git_strarray
custom_headers	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	git_strarray *custom_headers;      \/**< Additional headers to deliver *\/$/;"	m	struct:__anon3d590bc30208	typeref:typename:git_strarray *
custom_origin_name_remote_create	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^static int custom_origin_name_remote_create($/;"	f	typeref:typename:int	file:
custom_remote_ssh_with_paths	my_project/libgit2/tests/libgit2/online/clone.c	/^static int custom_remote_ssh_with_paths($/;"	f	typeref:typename:int	file:
custom_subtransport	my_project/libgit2/tests/libgit2/transport/register.c	/^struct custom_subtransport {$/;"	s	file:
custom_subtransport__action	my_project/libgit2/tests/libgit2/transport/register.c	/^static int custom_subtransport__action($/;"	f	typeref:typename:int	file:
custom_subtransport__close	my_project/libgit2/tests/libgit2/transport/register.c	/^static int custom_subtransport__close(git_smart_subtransport *transport)$/;"	f	typeref:typename:int	file:
custom_subtransport__free	my_project/libgit2/tests/libgit2/transport/register.c	/^static void custom_subtransport__free(git_smart_subtransport *transport)$/;"	f	typeref:typename:void	file:
custom_subtransport_stream__free	my_project/libgit2/tests/libgit2/transport/register.c	/^static void custom_subtransport_stream__free($/;"	f	typeref:typename:void	file:
custom_subtransport_stream__read	my_project/libgit2/tests/libgit2/transport/register.c	/^static int custom_subtransport_stream__read($/;"	f	typeref:typename:int	file:
custom_subtransport_stream__write	my_project/libgit2/tests/libgit2/transport/register.c	/^static int custom_subtransport_stream__write($/;"	f	typeref:typename:int	file:
custom_transport	my_project/libgit2/tests/libgit2/clone/transport.c	/^static int custom_transport($/;"	f	typeref:typename:int	file:
custom_transport	my_project/libgit2/tests/libgit2/transport/register.c	/^static int custom_transport(git_transport **out, git_remote *owner, void *param)$/;"	f	typeref:typename:int	file:
custom_transport_callback	my_project/libgit2/tests/libgit2/transport/register.c	/^static int custom_transport_callback(git_smart_subtransport **out, git_transport *owner, void *p/;"	f	typeref:typename:int	file:
custom_transport_remote_create	my_project/libgit2/tests/libgit2/clone/transport.c	/^static int custom_transport_remote_create($/;"	f	typeref:typename:int	file:
custom_transports	my_project/libgit2/src/libgit2/transport.c	/^static git_vector custom_transports = GIT_VECTOR_INIT;$/;"	v	typeref:typename:git_vector	file:
cwd	my_project/libgit2/.vscode/launch.json	/^            "cwd": "${fileDirname}",$/;"	s	object:configurations.0
cwd	my_project/libgit2/src/util/process.h	/^	char *cwd;$/;"	m	struct:__anon3c78bdc50108	typeref:typename:char *
cwd	my_project/libgit2/src/util/unix/process.c	/^	char *cwd;$/;"	m	struct:git_process	typeref:typename:char *	file:
cwd	my_project/libgit2/src/util/win32/process.c	/^	wchar_t *cwd;$/;"	m	struct:git_process	typeref:typename:wchar_t *	file:
cygfullpath	my_project/libgit2/ci/build.sh	/^cygfullpath() {$/;"	f
cygfullpath	my_project/libgit2/ci/test.sh	/^cygfullpath() {$/;"	f
d	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    } d;$/;"	m	struct:__anon6b5cad8b0208	typeref:union:__anon6b5cad8b0208::__anon6b5cad8b030a
d	my_project/libgit2/src/util/rand.c	/^	uint64_t d;$/;"	m	union:__anon2fc93926010a	typeref:typename:uint64_t	file:
d	my_project/libgit2/tests/libgit2/diff/blob.c	/^static git_blob *d, *alien;$/;"	v	typeref:typename:git_blob *	file:
d_code	my_project/libgit2/deps/zlib/deflate.h	/^#define d_code(/;"	d
d_desc	my_project/libgit2/deps/zlib/deflate.h	/^    struct tree_desc_s d_desc;               \/* desc. for distance tree *\/$/;"	m	struct:internal_state	typeref:struct:tree_desc_s
d_ino	my_project/libgit2/src/util/win32/dir.h	/^	int d_ino;$/;"	m	struct:git__dirent	typeref:typename:int
d_name	my_project/libgit2/src/util/win32/dir.h	/^	git_win32_utf8_path d_name;$/;"	m	struct:git__dirent	typeref:typename:git_win32_utf8_path
dad	my_project/libgit2/deps/zlib/deflate.h	/^        ush  dad;        \/* father node in Huffman tree *\/$/;"	m	union:ct_data_s::__anon0b76eeb2020a	typeref:typename:ush
data	my_project/libgit2/deps/llhttp/llhttp.h	/^  void* data;$/;"	m	struct:llhttp__internal_s	typeref:typename:void *
data	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^  int data;                       \/* Some use extra data *\/$/;"	m	struct:stateblock	typeref:typename:int	file:
data	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define data /;"	d	file:
data	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^	const unsigned char *data;$/;"	m	struct:fuzzer_buffer	typeref:typename:const unsigned char *	file:
data	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^	struct fuzzer_buffer data;$/;"	m	struct:fuzzer_subtransport	typeref:struct:fuzzer_buffer	file:
data	my_project/libgit2/include/git2/cert.h	/^	void *data;$/;"	m	struct:__anon7ca863480408	typeref:typename:void *
data	my_project/libgit2/include/git2/diff.h	/^	const char *data;$/;"	m	struct:__anon7f3f1dd30808	typeref:typename:const char *
data	my_project/libgit2/src/libgit2/blob.h	/^			const char *data;$/;"	m	struct:git_blob::__anon38237cb4010a::__anon38237cb40208	typeref:typename:const char *
data	my_project/libgit2/src/libgit2/blob.h	/^	} data;$/;"	m	struct:git_blob	typeref:union:git_blob::__anon38237cb4010a
data	my_project/libgit2/src/libgit2/diff_tform.c	/^	git_str data;$/;"	m	struct:__anon258239f00108	typeref:typename:git_str	file:
data	my_project/libgit2/src/libgit2/odb.h	/^	void *data;			\/**< Raw, decompressed object data. *\/$/;"	m	struct:__anon3125c08a0108	typeref:typename:void *
data	my_project/libgit2/src/libgit2/odb_loose.c	/^	void *data;$/;"	m	struct:foreach_state	typeref:typename:void *	file:
data	my_project/libgit2/src/libgit2/odb_mempack.c	/^	char data[GIT_FLEX_ARRAY];$/;"	m	struct:memobject	typeref:typename:char[]	file:
data	my_project/libgit2/src/libgit2/pack-objects.c	/^	void *data;$/;"	m	struct:unpacked	typeref:typename:void *	file:
data	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    unsigned char *data;$/;"	m	struct:__anon6b5cad8b0108	typeref:typename:unsigned char *
data	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	void *data;$/;"	m	struct:git_http_parser	typeref:typename:void *
data	my_project/libgit2/src/libgit2/transports/smart.h	/^	char data[GIT_FLEX_ARRAY];$/;"	m	struct:__anonb9ceeb0b0608	typeref:typename:char[]
data	my_project/libgit2/src/util/hash.h	/^	void *data;$/;"	m	struct:__anon187871ca0108	typeref:typename:void *
data	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int data[16];$/;"	m	struct:__anone07cb6fd0108	typeref:typename:unsigned int[16]
data	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int data[16];$/;"	m	struct:__anone07cb6fd0208	typeref:typename:unsigned int[16]
data	my_project/libgit2/src/util/map.h	/^	void *data; \/* data bytes			*\/$/;"	m	struct:__anon84f933a40108	typeref:typename:void *
data	my_project/libgit2/src/util/staticstr.h	/^	char data[GIT_FLEX_ARRAY];$/;"	m	struct:__anon361876470108	typeref:typename:char[]
data	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^    unsigned char *data;   \/* (uncompressed) object data                *\/$/;"	m	struct:object_data	typeref:typename:unsigned char *
data	my_project/libgit2/tests/libgit2/stash/foreach.c	/^struct callback_data data;$/;"	v	typeref:struct:callback_data
data	my_project/libgit2/tests/util/zstream.c	/^static const char *data = "This is a test test test of This is a test";$/;"	v	typeref:typename:const char *	file:
data_cb	my_project/libgit2/src/libgit2/patch_generate.h	/^	git_diff_line_cb data_cb;$/;"	m	struct:git_patch_generated_output	typeref:typename:git_diff_line_cb
data_pkt	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int data_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
data_ready	my_project/libgit2/src/libgit2/pack-objects.c	/^	size_t data_ready;$/;"	m	struct:thread_params	typeref:typename:size_t	file:
data_type	my_project/libgit2/deps/zlib/zlib.h	/^    int     data_type;  \/* best guess about the data type: binary or text$/;"	m	struct:z_stream_s	typeref:typename:int
datalen	my_project/libgit2/include/git2/diff.h	/^	size_t datalen;$/;"	m	struct:__anon7f3f1dd30808	typeref:typename:size_t
datatype	my_project/libgit2/src/libgit2/pathspec.h	/^	int datatype;$/;"	m	struct:git_pathspec_match_list	typeref:typename:int
date_am	my_project/libgit2/src/util/date.c	/^static void date_am(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
date_midnight	my_project/libgit2/src/util/date.c	/^static void date_midnight(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
date_mode	my_project/libgit2/src/util/date.c	/^} date_mode;$/;"	t	typeref:enum:__anon0f244edf0103	file:
date_never	my_project/libgit2/src/util/date.c	/^static void date_never(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
date_noon	my_project/libgit2/src/util/date.c	/^static void date_noon(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
date_now	my_project/libgit2/src/util/date.c	/^static void date_now(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
date_pm	my_project/libgit2/src/util/date.c	/^static void date_pm(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
date_tea	my_project/libgit2/src/util/date.c	/^static void date_tea(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
date_time	my_project/libgit2/src/util/date.c	/^static void date_time(struct tm *tm, struct tm *now, int hour)$/;"	f	typeref:typename:void	file:
date_yesterday	my_project/libgit2/src/util/date.c	/^static void date_yesterday(struct tm *tm, struct tm *now, int *num)$/;"	f	typeref:typename:void	file:
db	my_project/libgit2/include/git2/sys/refdb_backend.h	/^	git_refdb *db;$/;"	m	struct:git_reference_iterator	typeref:typename:git_refdb *
db	my_project/libgit2/src/libgit2/commit_graph.c	/^	git_odb *db;$/;"	m	struct:object_entry_cb_state	typeref:typename:git_odb *	file:
db	my_project/libgit2/src/libgit2/reflog.h	/^	git_refdb *db;$/;"	m	struct:git_reflog	typeref:typename:git_refdb *
db	my_project/libgit2/src/libgit2/refs.h	/^	git_refdb *db;$/;"	m	struct:git_reference	typeref:typename:git_refdb *
db	my_project/libgit2/src/libgit2/transaction.c	/^	git_refdb *db;$/;"	m	struct:git_transaction	typeref:typename:git_refdb *	file:
db	my_project/libgit2/tests/libgit2/graph/reachable_from_any.c	/^	git_odb *db;$/;"	m	struct:exhaustive_state	typeref:typename:git_odb *	file:
debug	my_project/libgit2/tests/libgit2/checkout/checkout_helpers.h	/^	int debug;$/;"	m	struct:__anon5b89200d0108	typeref:typename:int
debug	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	int debug;$/;"	m	struct:__anone9d3a2f30108	typeref:typename:int
debug	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^	bool debug;$/;"	m	struct:__anon6ff743e90108	typeref:typename:bool
debug	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^	bool debug;$/;"	m	struct:__anon6ff743e90208	typeref:typename:bool
debugalloc__free	my_project/libgit2/src/util/allocators/debugalloc.c	/^static void debugalloc__free(void *_ptr)$/;"	f	typeref:typename:void	file:
debugalloc__malloc	my_project/libgit2/src/util/allocators/debugalloc.c	/^static void *debugalloc__malloc(size_t len, const char *file, int line)$/;"	f	typeref:typename:void *	file:
debugalloc__realloc	my_project/libgit2/src/util/allocators/debugalloc.c	/^static void *debugalloc__realloc(void *_ptr, size_t len, const char *file, int line)$/;"	f	typeref:typename:void *	file:
declared_size	my_project/libgit2/include/git2/odb_backend.h	/^	git_object_size_t declared_size;$/;"	m	struct:git_odb_stream	typeref:typename:git_object_size_t
decref_split	my_project/libgit2/src/libgit2/blame_git.c	/^static void decref_split(git_blame__entry *split)$/;"	f	typeref:typename:void	file:
def_ff	my_project/libgit2/deps/xdiff/xemit.c	/^static long def_ff(const char *rec, long len, char *buf, long sz)$/;"	f	typeref:typename:long	file:
default_driver	my_project/libgit2/include/git2/merge.h	/^	const char *default_driver;$/;"	m	struct:__anon1374edca0708	typeref:typename:const char *
default_driver	my_project/libgit2/src/libgit2/merge_driver.h	/^	const char *default_driver;$/;"	m	struct:git_merge_driver_source	typeref:typename:const char *
default_fetchspec_for_name	my_project/libgit2/src/libgit2/remote.c	/^static int default_fetchspec_for_name(git_str *buf, const char *name)$/;"	f	typeref:typename:int	file:
default_free	my_project/libgit2/src/libgit2/transports/credential.c	/^static void default_free(struct git_credential *cred)$/;"	f	typeref:typename:void	file:
default_port_for_scheme	my_project/libgit2/src/util/net.c	/^static const char *default_port_for_scheme(const char *scheme)$/;"	f	typeref:typename:const char *	file:
default_product	my_project/libgit2/tests/libgit2/core/useragent.c	/^static git_buf default_product = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
default_remote_create	my_project/libgit2/src/libgit2/clone.c	/^static int default_remote_create($/;"	f	typeref:typename:int	file:
default_repository_create	my_project/libgit2/src/libgit2/clone.c	/^static int default_repository_create(git_repository **out, const char *path, int bare, void *pay/;"	f	typeref:typename:int	file:
default_socket_stream_new	my_project/libgit2/src/libgit2/streams/socket.c	/^static int default_socket_stream_new($/;"	f	typeref:typename:int	file:
default_tables	my_project/libgit2/deps/pcre/pcre_chartables.c	/^const pcre_uint8 PRIV(default_tables)[] = {$/;"	v	typeref:typename:const pcre_uint8 PRIV ()[]
default_ua	my_project/libgit2/tests/libgit2/core/useragent.c	/^static git_buf default_ua = GIT_BUF_INIT;$/;"	v	typeref:typename:git_buf	file:
default_value	my_project/libgit2/src/libgit2/config_cache.c	/^	int default_value;$/;"	m	struct:map_data	typeref:typename:int	file:
defer_driver_apply	my_project/libgit2/tests/libgit2/merge/driver.c	/^static int defer_driver_apply($/;"	f	typeref:typename:int	file:
deferred	my_project/libgit2/src/cli/progress.h	/^	git_str deferred;$/;"	m	struct:__anonb5f2ec150208	typeref:typename:git_str
deflate	my_project/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflate(z_streamp strm, int flush) {$/;"	f	typeref:typename:int ZEXPORT
deflate	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflate /;"	d
deflateBound	my_project/libgit2/deps/zlib/deflate.c	/^uLong ZEXPORT deflateBound(z_streamp strm, uLong sourceLen) {$/;"	f	typeref:typename:uLong ZEXPORT
deflateBound	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflateBound /;"	d
deflateCopy	my_project/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateCopy(z_streamp dest, z_streamp source) {$/;"	f	typeref:typename:int ZEXPORT
deflateCopy	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflateCopy /;"	d
deflateEnd	my_project/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateEnd(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
deflateEnd	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflateEnd /;"	d
deflateGetDictionary	my_project/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateGetDictionary(z_streamp strm, Bytef *dictionary,$/;"	f	typeref:typename:int ZEXPORT
deflateGetDictionary	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflateGetDictionary /;"	d
deflateInit	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflateInit /;"	d
deflateInit	my_project/libgit2/deps/zlib/zlib.h	/^#  define deflateInit(/;"	d
deflateInit2	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflateInit2 /;"	d
deflateInit2	my_project/libgit2/deps/zlib/zlib.h	/^#  define deflateInit2(/;"	d
deflateInit2_	my_project/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateInit2_(z_streamp strm, int level, int method,$/;"	f	typeref:typename:int ZEXPORT
deflateInit2_	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflateInit2_ /;"	d
deflateInit_	my_project/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateInit_(z_streamp strm, int level, const char *version,$/;"	f	typeref:typename:int ZEXPORT
deflateInit_	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflateInit_ /;"	d
deflateParams	my_project/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateParams(z_streamp strm, int level, int strategy) {$/;"	f	typeref:typename:int ZEXPORT
deflateParams	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflateParams /;"	d
deflatePending	my_project/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflatePending(z_streamp strm, unsigned *pending, int *bits) {$/;"	f	typeref:typename:int ZEXPORT
deflatePending	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflatePending /;"	d
deflatePrime	my_project/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflatePrime(z_streamp strm, int bits, int value) {$/;"	f	typeref:typename:int ZEXPORT
deflatePrime	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflatePrime /;"	d
deflateReset	my_project/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateReset(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
deflateReset	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflateReset /;"	d
deflateResetKeep	my_project/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateResetKeep(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
deflateResetKeep	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflateResetKeep /;"	d
deflateSetDictionary	my_project/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateSetDictionary(z_streamp strm, const Bytef *dictionary,$/;"	f	typeref:typename:int ZEXPORT
deflateSetDictionary	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflateSetDictionary /;"	d
deflateSetHeader	my_project/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateSetHeader(z_streamp strm, gz_headerp head) {$/;"	f	typeref:typename:int ZEXPORT
deflateSetHeader	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflateSetHeader /;"	d
deflateStateCheck	my_project/libgit2/deps/zlib/deflate.c	/^local int deflateStateCheck(z_streamp strm) {$/;"	f	typeref:typename:local int
deflateTune	my_project/libgit2/deps/zlib/deflate.c	/^int ZEXPORT deflateTune(z_streamp strm, int good_length, int max_lazy,$/;"	f	typeref:typename:int ZEXPORT
deflateTune	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflateTune /;"	d
deflate_copyright	my_project/libgit2/deps/zlib/deflate.c	/^const char deflate_copyright[] =$/;"	v	typeref:typename:const char[]
deflate_copyright	my_project/libgit2/deps/zlib/zconf.h	/^#  define deflate_copyright /;"	d
deflate_fast	my_project/libgit2/deps/zlib/deflate.c	/^local block_state deflate_fast(deflate_state *s, int flush) {$/;"	f	typeref:typename:local block_state
deflate_huff	my_project/libgit2/deps/zlib/deflate.c	/^local block_state deflate_huff(deflate_state *s, int flush) {$/;"	f	typeref:typename:local block_state
deflate_rle	my_project/libgit2/deps/zlib/deflate.c	/^local block_state deflate_rle(deflate_state *s, int flush) {$/;"	f	typeref:typename:local block_state
deflate_slow	my_project/libgit2/deps/zlib/deflate.c	/^local block_state deflate_slow(deflate_state *s, int flush) {$/;"	f	typeref:typename:local block_state
deflate_state	my_project/libgit2/deps/zlib/deflate.h	/^} FAR deflate_state;$/;"	t	typeref:struct:internal_state FAR
deflate_stored	my_project/libgit2/deps/zlib/deflate.c	/^local block_state deflate_stored(deflate_state *s, int flush) {$/;"	f	typeref:typename:local block_state
delete_cb	my_project/libgit2/tests/libgit2/describe/describe.c	/^static int delete_cb(git_reference *ref, void *payload)$/;"	f	typeref:typename:int	file:
delete_head	my_project/libgit2/tests/libgit2/repo/repo_helpers.c	/^void delete_head(git_repository* repo)$/;"	f	typeref:typename:void
delete_one_config	my_project/libgit2/tests/libgit2/submodule/modify.c	/^static int delete_one_config(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
delete_refs	my_project/libgit2/src/libgit2/transports/smart.h	/^	             delete_refs:1,$/;"	m	struct:transport_smart_caps	typeref:typename:unsigned int:1
delete_refs	my_project/libgit2/tests/libgit2/threads/refdb.c	/^static void *delete_refs(void *arg)$/;"	f	typeref:typename:void *	file:
deleted	my_project/libgit2/src/libgit2/index.h	/^	git_vector deleted; \/* deleted entries if readers > 0 *\/$/;"	m	struct:git_index	typeref:typename:git_vector
deletes_by_oid_dequeue	my_project/libgit2/src/libgit2/merge.c	/^static int deletes_by_oid_dequeue(size_t *idx, git_oidmap *map, const git_oid *id)$/;"	f	typeref:typename:int	file:
deletes_by_oid_enqueue	my_project/libgit2/src/libgit2/merge.c	/^static int deletes_by_oid_enqueue(git_oidmap *map, git_pool *pool, const git_oid *id, size_t idx/;"	f	typeref:typename:int	file:
deletes_by_oid_free	my_project/libgit2/src/libgit2/merge.c	/^static void deletes_by_oid_free(git_oidmap *map) {$/;"	f	typeref:typename:void	file:
deletes_by_oid_queue	my_project/libgit2/src/libgit2/merge.c	/^} deletes_by_oid_queue;$/;"	t	typeref:struct:__anon7b397d600208	file:
deletions	my_project/libgit2/src/libgit2/diff_stats.c	/^	size_t deletions;$/;"	m	struct:__anonf83411370108	typeref:typename:size_t	file:
deletions	my_project/libgit2/src/libgit2/diff_stats.c	/^	size_t deletions;$/;"	m	struct:git_diff_stats	typeref:typename:size_t	file:
delta	my_project/libgit2/src/libgit2/pack-objects.h	/^	struct git_pobject *delta; \/* delta base object *\/$/;"	m	struct:git_pobject	typeref:struct:git_pobject *
delta	my_project/libgit2/src/libgit2/patch.h	/^	git_diff_delta *delta;$/;"	m	struct:git_patch	typeref:typename:git_diff_delta *
delta	my_project/libgit2/src/libgit2/patch_generate.c	/^	git_diff_delta delta;$/;"	m	struct:__anonbb9a560a0108	typeref:typename:git_diff_delta	file:
delta_abort_cb	my_project/libgit2/tests/libgit2/apply/callbacks.c	/^static int delta_abort_cb(const git_diff_delta *delta, void *payload)$/;"	f	typeref:typename:int	file:
delta_cache_size	my_project/libgit2/src/libgit2/pack-objects.h	/^	size_t delta_cache_size;$/;"	m	struct:git_packbuilder	typeref:typename:size_t
delta_cacheable	my_project/libgit2/src/libgit2/pack-objects.c	/^static int delta_cacheable($/;"	f	typeref:typename:int	file:
delta_cb	my_project/libgit2/include/git2/apply.h	/^	git_apply_delta_cb delta_cb;$/;"	m	struct:__anon9141b5a00208	typeref:typename:git_apply_delta_cb
delta_child	my_project/libgit2/src/libgit2/pack-objects.h	/^	struct git_pobject *delta_child; \/* deltified objects who bases me *\/$/;"	m	struct:git_pobject	typeref:struct:git_pobject *
delta_data	my_project/libgit2/src/libgit2/pack-objects.h	/^	void *delta_data;$/;"	m	struct:git_pobject	typeref:typename:void *
delta_index	my_project/libgit2/src/libgit2/patch_generate.h	/^	size_t delta_index;$/;"	m	struct:git_patch_generated	typeref:typename:size_t
delta_info	my_project/libgit2/src/libgit2/indexer.c	/^struct delta_info {$/;"	s	file:
delta_is_new_only	my_project/libgit2/src/libgit2/diff_tform.c	/^GIT_INLINE(bool) delta_is_new_only(git_diff_delta *delta)$/;"	f	typeref:typename:bool
delta_is_split	my_project/libgit2/src/libgit2/diff_tform.c	/^GIT_INLINE(bool) delta_is_split(git_diff_delta *delta)$/;"	f	typeref:typename:bool
delta_is_unchanged	my_project/libgit2/src/libgit2/diff_print.c	/^static bool delta_is_unchanged(const git_diff_delta *delta)$/;"	f	typeref:typename:bool	file:
delta_make_rename	my_project/libgit2/src/libgit2/diff_tform.c	/^GIT_INLINE(void) delta_make_rename($/;"	f	typeref:typename:void
delta_off	my_project/libgit2/src/libgit2/indexer.c	/^	off64_t delta_off;$/;"	m	struct:delta_info	typeref:typename:off64_t	file:
delta_sibling	my_project/libgit2/src/libgit2/pack-objects.h	/^	struct git_pobject *delta_sibling; \/* other deltified objects$/;"	m	struct:git_pobject	typeref:struct:git_pobject *
delta_size	my_project/libgit2/src/libgit2/pack-objects.h	/^	size_t delta_size;$/;"	m	struct:git_pobject	typeref:typename:size_t
delta_skip_cb	my_project/libgit2/tests/libgit2/apply/callbacks.c	/^static int delta_skip_cb(const git_diff_delta *delta, void *payload)$/;"	f	typeref:typename:int	file:
deltas	my_project/libgit2/src/libgit2/diff.h	/^	git_vector        deltas;    \/* vector of git_diff_delta *\/$/;"	m	struct:git_diff	typeref:typename:git_vector
deltas	my_project/libgit2/src/libgit2/indexer.c	/^	git_vector deltas;$/;"	m	struct:git_indexer	typeref:typename:git_vector	file:
dend	my_project/libgit2/deps/xdiff/xtypes.h	/^	long dstart, dend;$/;"	m	struct:s_xdfile	typeref:typename:long
depth	my_project/libgit2/deps/zlib/deflate.h	/^    uch depth[2*L_CODES+1];$/;"	m	struct:internal_state	typeref:typename:uch[]
depth	my_project/libgit2/include/git2/remote.h	/^	int depth;$/;"	m	struct:__anon144be4e60808	typeref:typename:int
depth	my_project/libgit2/include/git2/sys/transport.h	/^	int depth;$/;"	m	struct:__anon4efa7c750108	typeref:typename:int
depth	my_project/libgit2/src/cli/cmd_clone.c	/^static char *branch, *remote_path, *local_path, *depth;$/;"	v	typeref:typename:char *	file:
depth	my_project/libgit2/src/libgit2/config_file.c	/^	unsigned int depth;$/;"	m	struct:__anon341047050208	typeref:typename:unsigned int	file:
depth	my_project/libgit2/src/libgit2/describe.c	/^	int depth;$/;"	m	struct:possible_tag	typeref:typename:int	file:
depth	my_project/libgit2/src/libgit2/ignore.h	/^	int depth;$/;"	m	struct:__anonc29a75590108	typeref:typename:int
depth	my_project/libgit2/src/libgit2/pack-objects.c	/^	size_t depth;$/;"	m	struct:thread_params	typeref:typename:size_t	file:
depth	my_project/libgit2/src/libgit2/pack-objects.c	/^	size_t depth;$/;"	m	struct:unpacked	typeref:typename:size_t	file:
depth	my_project/libgit2/src/util/futils.c	/^	int depth;$/;"	m	struct:__anon45ee97580108	typeref:typename:int	file:
der_data	my_project/libgit2/src/libgit2/streams/stransport.c	/^	CFDataRef der_data;$/;"	m	struct:__anon898973fe0108	typeref:typename:CFDataRef	file:
dereference_object	my_project/libgit2/src/libgit2/object.c	/^static int dereference_object(git_object **dereferenced, git_object *obj)$/;"	f	typeref:typename:int	file:
dereference_to_non_tag	my_project/libgit2/src/libgit2/revparse.c	/^static int dereference_to_non_tag(git_object **out, git_object *obj)$/;"	f	typeref:typename:int	file:
des_ecb_encrypt_fn	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	void (*des_ecb_encrypt_fn)(const_DES_cblock *input, DES_cblock *output, DES_key_schedule *ks, i/;"	m	struct:ntlm_crypt_ctx	typeref:typename:void (*)(const_DES_cblock * input,DES_cblock * output,DES_key_schedule * ks,int enc)
des_key_from_password	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static void des_key_from_password($/;"	f	typeref:typename:void	file:
des_keys_from_lm_hash	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static void des_keys_from_lm_hash(ntlm_des_block out[3], ntlm_des_block lm_hash[2])$/;"	f	typeref:typename:void	file:
des_set_key_fn	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	int (*des_set_key_fn)(const_DES_cblock *key, DES_key_schedule *schedule);$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:int (*)(const_DES_cblock * key,DES_key_schedule * schedule)
desc	my_project/libgit2/src/cli/cmd.h	/^	const char *desc;$/;"	m	struct:__anoncf5572f40108	typeref:typename:const char *
describe	my_project/libgit2/src/libgit2/describe.c	/^static int describe($/;"	f	typeref:typename:int	file:
describe_not_found	my_project/libgit2/src/libgit2/describe.c	/^static int describe_not_found(const git_oid *oid, const char *message_format) {$/;"	f	typeref:typename:int	file:
describe_options	my_project/libgit2/examples/describe.c	/^	git_describe_options describe_options;$/;"	m	struct:describe_options	typeref:typename:git_describe_options	file:
describe_options	my_project/libgit2/examples/describe.c	/^struct describe_options {$/;"	s	file:
describe_options_init	my_project/libgit2/examples/describe.c	/^static void describe_options_init(struct describe_options *opts)$/;"	f	typeref:typename:void	file:
describe_strategy	my_project/libgit2/include/git2/describe.h	/^	unsigned int describe_strategy; \/**< default: GIT_DESCRIBE_DEFAULT *\/$/;"	m	struct:git_describe_options	typeref:typename:unsigned int
description	my_project/libgit2/.vscode/launch.json	/^                    "description": "Enable pretty-printing for gdb",$/;"	s	object:configurations.0.setupCommands.0
description	my_project/libgit2/include/git2/repository.h	/^	const char *description;$/;"	m	struct:__anon67af0d3a0408	typeref:typename:const char *
description	my_project/libgit2/package.json	/^  "description": " A cross-platform, linkable library implementation of Git that you can use in /;"	s
description	my_project/libgit2/src/libgit2/annotated_commit.h	/^	const char *description;$/;"	m	struct:git_annotated_commit	typeref:typename:const char *
description	my_project/libgit2/tests/clar/clar.c	/^	char *description;$/;"	m	struct:clar_error	typeref:typename:char *	file:
description	sdb.c	/^  const char *description;$/;"	m	struct:__anon10587f2f0108	typeref:typename:const char *	file:
deslong	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^        DES_LONG deslong[2];$/;"	m	union:DES_ks::__anoncf67763b010a	typeref:typename:DES_LONG[2]
destpath	my_project/libgit2/tests/libgit2/odb/alternates.c	/^static git_str destpath, filepath;$/;"	v	typeref:typename:git_str	file:
destroy	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int (*destroy) (BIO *);$/;"	m	struct:bio_method_st	typeref:typename:int (*)(BIO *)
destroy_hash	my_project/libgit2/src/util/hash/win32.c	/^	cng_destroy_hash_fn destroy_hash;$/;"	m	struct:cng_provider	typeref:typename:cng_destroy_hash_fn	file:
detach	my_project/libgit2/src/libgit2/repository.c	/^static int detach(git_repository *repo, const git_oid *id, const char *new)$/;"	f	typeref:typename:int	file:
detect_coll	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^	int detect_coll;$/;"	m	struct:__anon09d552690108	typeref:typename:int
detect_data_type	my_project/libgit2/deps/zlib/trees.c	/^local int detect_data_type(deflate_state *s) {$/;"	f	typeref:typename:local int
detect_fast_fail	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void detect_fast_fail(compiler_common *common, pcre_uchar *cc, int *private_/;"	f	typeref:typename:SLJIT_INLINE void	file:
detect_fast_forward_skip	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE BOOL detect_fast_forward_skip(compiler_common *common, int *private_data_sta/;"	f	typeref:typename:SLJIT_INLINE BOOL	file:
detect_partial_match	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void detect_partial_match(compiler_common *common, jump_list **backtracks)$/;"	f	typeref:typename:void	file:
detect_repeat	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static BOOL detect_repeat(compiler_common *common, pcre_uchar *begin)$/;"	f	typeref:typename:BOOL	file:
dev	my_project/libgit2/include/git2/index.h	/^	uint32_t dev;$/;"	m	struct:git_index_entry	typeref:typename:uint32_t
dev	my_project/libgit2/src/libgit2/index.c	/^	uint32_t dev;$/;"	m	struct:entry_common	typeref:typename:uint32_t	file:
df_data	my_project/libgit2/src/libgit2/merge.c	/^	struct merge_diff_df_data df_data;$/;"	m	struct:merge_diff_find_data	typeref:struct:merge_diff_df_data	file:
df_path	my_project/libgit2/src/libgit2/merge.c	/^	const char *df_path;$/;"	m	struct:merge_diff_df_data	typeref:typename:const char *	file:
dfa_match_data	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct dfa_match_data {$/;"	s
dfa_match_data	my_project/libgit2/deps/pcre/pcre_internal.h	/^} dfa_match_data;$/;"	t	typeref:struct:dfa_match_data
dfa_recursion_info	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct dfa_recursion_info {$/;"	s
dfa_recursion_info	my_project/libgit2/deps/pcre/pcre_internal.h	/^} dfa_recursion_info;$/;"	t	typeref:struct:dfa_recursion_info
did_hide	my_project/libgit2/src/libgit2/revwalk.h	/^		did_hide: 1,$/;"	m	struct:git_revwalk	typeref:typename:unsigned:1
did_push	my_project/libgit2/src/libgit2/revwalk.h	/^		did_push: 1,$/;"	m	struct:git_revwalk	typeref:typename:unsigned:1
did_rename	my_project/libgit2/src/util/filebuf.h	/^	bool did_rename;$/;"	m	struct:git_filebuf	typeref:typename:bool
die	my_project.git/hooks/push-to-checkout.sample	/^die () {$/;"	f
die	my_project/libgit2/tests/resources/testrepo_256.git/hooks/push-to-checkout.sample	/^die () {$/;"	f
diff	my_project/libgit2/src/libgit2/checkout.c	/^	git_diff *diff;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_diff *	file:
diff	my_project/libgit2/src/libgit2/diff.c	/^	git_diff *diff;$/;"	m	struct:patch_id_args	typeref:typename:git_diff *	file:
diff	my_project/libgit2/src/libgit2/diff_stats.c	/^	git_diff *diff;$/;"	m	struct:git_diff_stats	typeref:typename:git_diff *	file:
diff	my_project/libgit2/src/libgit2/patch_generate.h	/^	git_diff *diff; \/* for refcount purposes, maybe NULL for blob diffs *\/$/;"	m	struct:git_patch_generated	typeref:typename:git_diff *
diff	my_project/libgit2/tests/libgit2/diff/tree.c	/^static git_diff *diff;$/;"	v	typeref:typename:git_diff *	file:
diff_assert_equal	my_project/libgit2/tests/libgit2/diff/diff_helpers.c	/^void diff_assert_equal(git_diff *a, git_diff *b)$/;"	f	typeref:typename:void
diff_binary	my_project/libgit2/src/libgit2/patch_generate.c	/^static int diff_binary(git_patch_generated_output *output, git_patch_generated *patch)$/;"	f	typeref:typename:int	file:
diff_binary_cb	my_project/libgit2/tests/libgit2/diff/diff_helpers.c	/^int diff_binary_cb($/;"	f	typeref:typename:int
diff_cb	my_project/libgit2/src/libgit2/patch_generate.h	/^	int (*diff_cb)(git_patch_generated_output *output,$/;"	m	struct:git_patch_generated_output	typeref:typename:int (*)(git_patch_generated_output * output,git_patch_generated * patch)
diff_context_find	my_project/libgit2/src/libgit2/diff_driver.c	/^static long diff_context_find($/;"	f	typeref:typename:long	file:
diff_context_line__pattern_match	my_project/libgit2/src/libgit2/diff_driver.c	/^static int diff_context_line__pattern_match($/;"	f	typeref:typename:int	file:
diff_context_line__simple	my_project/libgit2/src/libgit2/diff_driver.c	/^static int diff_context_line__simple($/;"	f	typeref:typename:int	file:
diff_data	my_project/libgit2/tests/libgit2/diff/binary.c	/^struct diff_data {$/;"	s	file:
diff_delta__alloc	my_project/libgit2/src/libgit2/diff_generate.c	/^static git_diff_delta *diff_delta__alloc($/;"	f	typeref:typename:git_diff_delta *	file:
diff_delta__flag_known_size	my_project/libgit2/src/libgit2/diff_generate.c	/^static void diff_delta__flag_known_size(git_diff_file *file)$/;"	f	typeref:typename:void	file:
diff_delta__flag_known_sizes	my_project/libgit2/src/libgit2/diff_generate.c	/^static void diff_delta__flag_known_sizes(git_diff_delta *delta)$/;"	f	typeref:typename:void	file:
diff_delta__from_one	my_project/libgit2/src/libgit2/diff_generate.c	/^static int diff_delta__from_one($/;"	f	typeref:typename:int	file:
diff_delta__from_two	my_project/libgit2/src/libgit2/diff_generate.c	/^static int diff_delta__from_two($/;"	f	typeref:typename:int	file:
diff_delta__i2w_path	my_project/libgit2/src/libgit2/diff_generate.c	/^GIT_INLINE(const char *) diff_delta__i2w_path(const git_diff_delta *delta)$/;"	f	typeref:typename:const char *
diff_delta__last_for_item	my_project/libgit2/src/libgit2/diff_generate.c	/^static git_diff_delta *diff_delta__last_for_item($/;"	f	typeref:typename:git_diff_delta *	file:
diff_delta__path	my_project/libgit2/src/libgit2/diff.c	/^GIT_INLINE(const char *) diff_delta__path(const git_diff_delta *delta)$/;"	f	typeref:typename:const char *
diff_delta_format_path	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_delta_format_path($/;"	f	typeref:typename:int	file:
diff_delta_format_similarity_header	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_delta_format_similarity_header($/;"	f	typeref:typename:int	file:
diff_delta_format_with_paths	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_delta_format_with_paths($/;"	f	typeref:typename:int	file:
diff_delta_i2w_casecmp	my_project/libgit2/src/libgit2/diff_generate.c	/^static int diff_delta_i2w_casecmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
diff_delta_i2w_cmp	my_project/libgit2/src/libgit2/diff_generate.c	/^static int diff_delta_i2w_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
diff_driver_add_patterns	my_project/libgit2/src/libgit2/diff_driver.c	/^static int diff_driver_add_patterns($/;"	f	typeref:typename:int	file:
diff_driver_alloc	my_project/libgit2/src/libgit2/diff_driver.c	/^static int diff_driver_alloc($/;"	f	typeref:typename:int	file:
diff_driver_auto	my_project/libgit2/src/libgit2/diff_driver.c	/^static git_diff_driver diff_driver_auto =   { DIFF_DRIVER_AUTO,   0, 0 };$/;"	v	typeref:typename:git_diff_driver	file:
diff_driver_binary	my_project/libgit2/src/libgit2/diff_driver.c	/^static git_diff_driver diff_driver_binary = { DIFF_DRIVER_BINARY, GIT_DIFF_FORCE_BINARY, 0 };$/;"	v	typeref:typename:git_diff_driver	file:
diff_driver_funcname	my_project/libgit2/src/libgit2/diff_driver.c	/^static int diff_driver_funcname(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
diff_driver_text	my_project/libgit2/src/libgit2/diff_driver.c	/^static git_diff_driver diff_driver_text =   { DIFF_DRIVER_TEXT,   GIT_DIFF_FORCE_TEXT, 0 };$/;"	v	typeref:typename:git_diff_driver	file:
diff_driver_xfuncname	my_project/libgit2/src/libgit2/diff_driver.c	/^static int diff_driver_xfuncname(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
diff_drivers	my_project/libgit2/src/libgit2/repository.h	/^	git_diff_driver_registry *diff_drivers;$/;"	m	struct:git_repository	typeref:typename:git_diff_driver_registry *
diff_expects	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^} diff_expects;$/;"	t	typeref:struct:__anone9d3a2f30108
diff_file_cb	my_project/libgit2/tests/libgit2/diff/diff_helpers.c	/^int diff_file_cb($/;"	f	typeref:typename:int
diff_file_content_binary_by_content	my_project/libgit2/src/libgit2/diff_file.c	/^static void diff_file_content_binary_by_content(git_diff_file_content *fc)$/;"	f	typeref:typename:void	file:
diff_file_content_binary_by_size	my_project/libgit2/src/libgit2/diff_file.c	/^static bool diff_file_content_binary_by_size(git_diff_file_content *fc)$/;"	f	typeref:typename:bool	file:
diff_file_content_commit_to_str	my_project/libgit2/src/libgit2/diff_file.c	/^static int diff_file_content_commit_to_str($/;"	f	typeref:typename:int	file:
diff_file_content_init_common	my_project/libgit2/src/libgit2/diff_file.c	/^static int diff_file_content_init_common($/;"	f	typeref:typename:int	file:
diff_file_content_load_blob	my_project/libgit2/src/libgit2/diff_file.c	/^static int diff_file_content_load_blob($/;"	f	typeref:typename:int	file:
diff_file_content_load_workdir	my_project/libgit2/src/libgit2/diff_file.c	/^static int diff_file_content_load_workdir($/;"	f	typeref:typename:int	file:
diff_file_content_load_workdir_file	my_project/libgit2/src/libgit2/diff_file.c	/^static int diff_file_content_load_workdir_file($/;"	f	typeref:typename:int	file:
diff_file_content_load_workdir_symlink	my_project/libgit2/src/libgit2/diff_file.c	/^static int diff_file_content_load_workdir_symlink($/;"	f	typeref:typename:int	file:
diff_file_content_load_workdir_symlink_fake	my_project/libgit2/src/libgit2/diff_file.c	/^static int diff_file_content_load_workdir_symlink_fake($/;"	f	typeref:typename:int	file:
diff_file_stats	my_project/libgit2/src/libgit2/diff_stats.c	/^} diff_file_stats;$/;"	t	typeref:struct:__anonf83411370108	file:
diff_file_stats_full_to_buf	my_project/libgit2/src/libgit2/diff_stats.c	/^static int diff_file_stats_full_to_buf($/;"	f	typeref:typename:int	file:
diff_file_stats_number_to_buf	my_project/libgit2/src/libgit2/diff_stats.c	/^static int diff_file_stats_number_to_buf($/;"	f	typeref:typename:int	file:
diff_file_stats_summary_to_buf	my_project/libgit2/src/libgit2/diff_stats.c	/^static int diff_file_stats_summary_to_buf($/;"	f	typeref:typename:int	file:
diff_find_match	my_project/libgit2/src/libgit2/diff_tform.c	/^} diff_find_match;$/;"	t	typeref:struct:__anon258239f00208	file:
diff_find_opts	my_project/libgit2/include/git2/email.h	/^	git_diff_find_options diff_find_opts;$/;"	m	struct:__anonbd19e2c20208	typeref:typename:git_diff_find_options
diff_foreach_via_iterator	my_project/libgit2/tests/libgit2/diff/diff_helpers.c	/^int diff_foreach_via_iterator($/;"	f	typeref:typename:int
diff_from_buffer	my_project/libgit2/tests/libgit2/diff/diff_helpers.c	/^int diff_from_buffer($/;"	f	typeref:typename:int
diff_from_sources	my_project/libgit2/src/libgit2/patch_generate.c	/^static int diff_from_sources($/;"	f	typeref:typename:int	file:
diff_generated_alloc	my_project/libgit2/src/libgit2/diff_generate.c	/^static git_diff_generated *diff_generated_alloc($/;"	f	typeref:typename:git_diff_generated *	file:
diff_generated_apply_options	my_project/libgit2/src/libgit2/diff_generate.c	/^static int diff_generated_apply_options($/;"	f	typeref:typename:int	file:
diff_generated_free	my_project/libgit2/src/libgit2/diff_generate.c	/^static void diff_generated_free(git_diff *d)$/;"	f	typeref:typename:void	file:
diff_hunk_cb	my_project/libgit2/tests/libgit2/diff/diff_helpers.c	/^int diff_hunk_cb($/;"	f	typeref:typename:int
diff_hunks	my_project/libgit2/src/libgit2/blame_git.c	/^static int diff_hunks(mmfile_t file_a, mmfile_t file_b, void *cb_data, git_blame_options *option/;"	f	typeref:typename:int	file:
diff_in_progress	my_project/libgit2/src/libgit2/diff_generate.c	/^} diff_in_progress;$/;"	t	typeref:struct:__anonff5a2cd30208	file:
diff_insert_delta	my_project/libgit2/src/libgit2/diff_generate.c	/^static int diff_insert_delta($/;"	f	typeref:typename:int	file:
diff_line_cb	my_project/libgit2/tests/libgit2/diff/diff_helpers.c	/^int diff_line_cb($/;"	f	typeref:typename:int
diff_list	my_project/libgit2/src/libgit2/merge.c	/^	git_merge_diff_list *diff_list;$/;"	m	struct:merge_diff_find_data	typeref:typename:git_merge_diff_list *	file:
diff_load_index	my_project/libgit2/src/libgit2/diff_generate.c	/^static int diff_load_index(git_index **index, git_repository *repo)$/;"	f	typeref:typename:int	file:
diff_mnemonic_prefix	my_project/libgit2/src/libgit2/diff_generate.c	/^static const char *diff_mnemonic_prefix($/;"	f	typeref:typename:const char *	file:
diff_options	my_project/libgit2/examples/diff.c	/^struct diff_options {$/;"	s	file:
diff_opts	my_project/libgit2/include/git2/email.h	/^	git_diff_options diff_opts;$/;"	m	struct:__anonbd19e2c20208	typeref:typename:git_diff_options
diff_opts	my_project/libgit2/src/libgit2/patch.h	/^	git_diff_options diff_opts;$/;"	m	struct:git_patch	typeref:typename:git_diff_options
diff_output	my_project/libgit2/examples/common.c	/^int diff_output($/;"	f	typeref:typename:int
diff_output_init	my_project/libgit2/src/libgit2/patch_generate.c	/^static void diff_output_init($/;"	f	typeref:typename:void	file:
diff_output_to_patch	my_project/libgit2/src/libgit2/patch_generate.c	/^static void diff_output_to_patch($/;"	f	typeref:typename:void	file:
diff_parsed_alloc	my_project/libgit2/src/libgit2/diff_parse.c	/^static git_diff_parsed *diff_parsed_alloc(git_oid_t oid_type)$/;"	f	typeref:typename:git_diff_parsed *	file:
diff_parsed_free	my_project/libgit2/src/libgit2/diff_parse.c	/^static void diff_parsed_free(git_diff *d)$/;"	f	typeref:typename:void	file:
diff_patchid_print_callback_to_buf	my_project/libgit2/src/libgit2/diff.c	/^static int diff_patchid_print_callback_to_buf($/;"	f	typeref:typename:int	file:
diff_pathspec_match	my_project/libgit2/src/libgit2/diff_generate.c	/^static bool diff_pathspec_match($/;"	f	typeref:typename:bool	file:
diff_pick_suffix	my_project/libgit2/src/libgit2/diff_print.c	/^static char diff_pick_suffix(int mode)$/;"	f	typeref:typename:char	file:
diff_pick_suffix	my_project/libgit2/tests/libgit2/diff/diff_helpers.c	/^static char diff_pick_suffix(int mode)$/;"	f	typeref:typename:char	file:
diff_prepare_iterator_opts	my_project/libgit2/src/libgit2/diff_generate.c	/^static int diff_prepare_iterator_opts(char **prefix, git_iterator_options *a, int aflags,$/;"	f	typeref:typename:int	file:
diff_print	my_project/libgit2/tests/libgit2/diff/diff_helpers.c	/^void diff_print(FILE *fp, git_diff *diff)$/;"	f	typeref:typename:void
diff_print_file_cb	my_project/libgit2/tests/libgit2/diff/diff_helpers.c	/^int diff_print_file_cb($/;"	f	typeref:typename:int
diff_print_info	my_project/libgit2/src/libgit2/diff_print.c	/^} diff_print_info;$/;"	t	typeref:struct:__anon0d2887b50108	file:
diff_print_info_init__common	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_print_info_init__common($/;"	f	typeref:typename:int	file:
diff_print_info_init_fromdiff	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_print_info_init_fromdiff($/;"	f	typeref:typename:int	file:
diff_print_info_init_frompatch	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_print_info_init_frompatch($/;"	f	typeref:typename:int	file:
diff_print_modes	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_print_modes($/;"	f	typeref:typename:int	file:
diff_print_oid_range	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_print_oid_range($/;"	f	typeref:typename:int	file:
diff_print_one_name_only	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_print_one_name_only($/;"	f	typeref:typename:int	file:
diff_print_one_name_status	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_print_one_name_status($/;"	f	typeref:typename:int	file:
diff_print_one_raw	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_print_one_raw($/;"	f	typeref:typename:int	file:
diff_print_patch_binary	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_print_patch_binary($/;"	f	typeref:typename:int	file:
diff_print_patch_file	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_print_patch_file($/;"	f	typeref:typename:int	file:
diff_print_patch_file_binary	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_print_patch_file_binary($/;"	f	typeref:typename:int	file:
diff_print_patch_file_binary_noshow	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_print_patch_file_binary_noshow($/;"	f	typeref:typename:int	file:
diff_print_patch_hunk	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_print_patch_hunk($/;"	f	typeref:typename:int	file:
diff_print_patch_line	my_project/libgit2/src/libgit2/diff_print.c	/^static int diff_print_patch_line($/;"	f	typeref:typename:int	file:
diff_print_raw	my_project/libgit2/tests/libgit2/diff/diff_helpers.c	/^void diff_print_raw(FILE *fp, git_diff *diff)$/;"	f	typeref:typename:void
diff_print_stats	my_project/libgit2/examples/diff.c	/^static void diff_print_stats(git_diff *diff, struct diff_options *o)$/;"	f	typeref:typename:void	file:
diff_required	my_project/libgit2/src/libgit2/patch_generate.c	/^static int diff_required(git_diff *diff, const char *action)$/;"	f	typeref:typename:int	file:
diff_set_ignore_case	my_project/libgit2/src/libgit2/diff_generate.c	/^static void diff_set_ignore_case(git_diff *diff, bool ignore_case)$/;"	f	typeref:typename:void	file:
diff_single_generate	my_project/libgit2/src/libgit2/patch_generate.c	/^static int diff_single_generate(patch_generated_with_delta *pd, git_xdiff_output *xo)$/;"	f	typeref:typename:int	file:
diff_stats_from_commit_oid	my_project/libgit2/tests/libgit2/diff/stats.c	/^static void diff_stats_from_commit_oid($/;"	f	typeref:typename:void	file:
diff_stop_after_2_files	my_project/libgit2/tests/libgit2/diff/index.c	/^static int diff_stop_after_2_files($/;"	f	typeref:typename:int	file:
diff_strdup_prefix	my_project/libgit2/src/libgit2/diff_generate.c	/^static char *diff_strdup_prefix(git_pool *pool, const char *prefix)$/;"	f	typeref:typename:char *	file:
diff_update_lines	my_project/libgit2/src/libgit2/diff_xdiff.c	/^static int diff_update_lines($/;"	f	typeref:typename:int	file:
diffcaps	my_project/libgit2/src/libgit2/diff_generate.c	/^	uint32_t diffcaps;$/;"	m	struct:__anonff5a2cd30108	typeref:typename:uint32_t	file:
diffdata_t	my_project/libgit2/deps/xdiff/xdiffi.h	/^} diffdata_t;$/;"	t	typeref:struct:s_diffdata
diffopts	my_project/libgit2/examples/diff.c	/^	git_diff_options diffopts;$/;"	m	struct:diff_options	typeref:typename:git_diff_options	file:
digest	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^    const EVP_MD *digest;$/;"	m	struct:env_md_ctx_st	typeref:typename:const EVP_MD *
digest	my_project/libgit2/src/util/filebuf.h	/^	git_hash_ctx digest;$/;"	m	struct:git_filebuf	typeref:typename:git_hash_ctx
digitab	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 digitab[] =$/;"	v	typeref:typename:const pcre_uint8[]	file:
digits_for_value	my_project/libgit2/src/libgit2/diff_stats.c	/^static int digits_for_value(size_t val)$/;"	f	typeref:typename:int	file:
dir	my_project/libgit2/examples/cat-file.c	/^	const char *dir;$/;"	m	struct:catfile_options	typeref:typename:const char *	file:
dir	my_project/libgit2/examples/diff.c	/^	const char *dir;$/;"	m	struct:diff_options	typeref:typename:const char *	file:
dir	my_project/libgit2/examples/init.c	/^	const char *dir;$/;"	m	struct:init_opts	typeref:typename:const char *	file:
dir	my_project/libgit2/src/libgit2/ignore.h	/^	git_str dir; \/* current directory reflected in ign_path *\/$/;"	m	struct:__anonc29a75590108	typeref:typename:git_str
dir	my_project/libgit2/src/util/fs_path.h	/^	DIR *dir;$/;"	m	struct:git_fs_path_diriter	typeref:typename:DIR *
dir	my_project/libgit2/src/util/win32/dir.h	/^	char dir[GIT_FLEX_ARRAY];$/;"	m	struct:__anon088cf8e70108	typeref:typename:char[]
dir	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^	const char *dir;$/;"	m	struct:__anon2bf18d4b0208	typeref:typename:const char *	file:
dir	my_project/libgit2/tests/libgit2/object/raw/write.c	/^    char *dir;    \/* object store (fan-out) directory name     *\/$/;"	m	struct:object_data	typeref:typename:char *	file:
dir	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^    char          *dir;    \/* object store (fan-out) directory name     *\/$/;"	m	struct:object_data	typeref:typename:char *
dir_len	my_project/libgit2/src/libgit2/odb_loose.c	/^	size_t dir_len;$/;"	m	struct:__anon5ce333660408	typeref:typename:size_t	file:
dir_len	my_project/libgit2/src/libgit2/odb_loose.c	/^	size_t dir_len;$/;"	m	struct:foreach_state	typeref:typename:size_t	file:
dir_map	my_project/libgit2/src/util/futils.h	/^	git_strmap *dir_map;$/;"	m	struct:git_futils_mkdir_options	typeref:typename:git_strmap *
dir_mode	my_project/libgit2/include/git2/checkout.h	/^	unsigned int dir_mode;  \/**< default is 0755 *\/$/;"	m	struct:git_checkout_options	typeref:typename:unsigned int
dir_mode	my_project/libgit2/include/git2/odb_backend.h	/^	unsigned int dir_mode;$/;"	m	struct:__anon6d9003760308	typeref:typename:unsigned int
dir_root	my_project/libgit2/src/libgit2/ignore.h	/^	size_t dir_root; \/* offset in dir to repo root *\/$/;"	m	struct:__anonc29a75590108	typeref:typename:size_t
dircount	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^static int dircount(void *payload, git_str *pathbuf)$/;"	f	typeref:typename:int	file:
direach_flags	my_project/libgit2/src/libgit2/refdb_fs.c	/^	uint32_t direach_flags;$/;"	m	struct:refdb_fs_backend	typeref:typename:uint32_t	file:
direct	my_project/libgit2/deps/zlib/gzguts.h	/^    int direct;             \/* 0 if processing gzip, 1 if transparent *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:int
direction	my_project/libgit2/src/libgit2/transports/local.c	/^	int direction;$/;"	m	struct:__anona3bc4f8a0108	typeref:typename:int	file:
direction	my_project/libgit2/src/libgit2/transports/smart.h	/^	int direction;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:int
directory	my_project/libgit2/src/libgit2/repository.c	/^    bool directory;$/;"	m	struct:__anon453495b00108	typeref:typename:bool	file:
directoryfile	my_project/libgit2/src/libgit2/checkout.c	/^	             directoryfile:1,$/;"	m	struct:__anon35c6e5c60308	typeref:typename:unsigned int:1	file:
dirent	my_project/libgit2/src/util/win32/dir.h	/^#	define dirent /;"	d
dirent_cleanup__cb	my_project/libgit2/tests/util/dirent.c	/^static void dirent_cleanup__cb(void *_d)$/;"	f	typeref:typename:void	file:
diriter_update_paths	my_project/libgit2/src/util/fs_path.c	/^static int diriter_update_paths(git_fs_path_diriter *diriter)$/;"	f	typeref:typename:int	file:
dirload_flags	my_project/libgit2/src/libgit2/iterator.c	/^	unsigned int dirload_flags;$/;"	m	struct:__anon2f88b95a0808	typeref:typename:unsigned int	file:
dirmode	my_project/libgit2/src/util/futils.c	/^	mode_t dirmode;$/;"	m	struct:__anon45ee97580208	typeref:typename:mode_t	file:
dirname	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^	const char *dirname;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
dirname	my_project/libgit2/tests/libgit2/index/crlf.c	/^	const char *dirname;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
dirs	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^	int dirs;$/;"	m	struct:treewalk_skip_data	typeref:typename:int	file:
dirty	my_project/libgit2/src/libgit2/describe.c	/^	int dirty;$/;"	m	struct:git_describe_result	typeref:typename:int	file:
dirty	my_project/libgit2/src/libgit2/index.h	/^	unsigned int dirty:1;	\/* whether we have unsaved changes *\/$/;"	m	struct:git_index	typeref:typename:unsigned int:1
dirty	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^	int dirty;$/;"	m	struct:__anon79a1dca80108	typeref:typename:int	file:
dirty_suffix	my_project/libgit2/include/git2/describe.h	/^	const char *dirty_suffix;$/;"	m	struct:__anon07cf78db0208	typeref:typename:const char *
disable	my_project/libgit2/tests/clar/generate.py	/^    def disable(self, excluded):$/;"	m	class:TestSuite
disable_filters	my_project/libgit2/include/git2/checkout.h	/^	int disable_filters;    \/**< don't apply filters like CRLF conversion *\/$/;"	m	struct:git_checkout_options	typeref:typename:int
disable_signals	my_project/libgit2/src/util/unix/process.c	/^GIT_INLINE(int) disable_signals(sigset_t *saved_mask)$/;"	f	typeref:typename:int
disable_signals	my_project/libgit2/src/util/unix/process.c	/^GIT_INLINE(int) disable_signals(struct sigaction *saved_handler)$/;"	f	typeref:typename:int
discovered	my_project/libgit2/tests/libgit2/repo/discover.c	/^static git_buf discovered;$/;"	v	typeref:typename:git_buf	file:
disk_inode	my_project/libgit2/src/libgit2/odb.c	/^	ino_t disk_inode;$/;"	m	struct:__anon3125c0850108	typeref:typename:ino_t	file:
display	my_project/libgit2/src/cli/cmd_cat_file.c	/^static int display = DISPLAY_CONTENT;$/;"	v	typeref:typename:int	file:
display_name	my_project/libgit2/src/libgit2/describe.c	/^static int display_name(git_str *buf, git_repository *repo, struct commit_name *n)$/;"	f	typeref:typename:int	file:
display_t	my_project/libgit2/src/cli/cmd_cat_file.c	/^} display_t;$/;"	t	typeref:enum:__anon97a0de250103	file:
distbits	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned distbits;          \/* index bits for distcode *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
distcode	my_project/libgit2/deps/zlib/inflate.h	/^    code const FAR *distcode;   \/* starting table for distance codes *\/$/;"	m	struct:inflate_state	typeref:typename:code const FAR *
distfix	my_project/libgit2/deps/zlib/inffixed.h	/^    static const code distfix[32] = {$/;"	v	typeref:typename:const code[32]
distrust_filemode	my_project/libgit2/src/libgit2/index.h	/^	unsigned int distrust_filemode:1;$/;"	m	struct:git_index	typeref:typename:unsigned int:1
dl	my_project/libgit2/deps/zlib/deflate.h	/^    } dl;$/;"	m	struct:ct_data_s	typeref:union:ct_data_s::__anon0b76eeb2020a
dlen	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^    size_t        dlen;    \/* length of (uncompressed) object data      *\/$/;"	m	struct:object_data	typeref:typename:size_t
dll	my_project/libgit2/src/util/hash/win32.c	/^	HINSTANCE dll;$/;"	m	struct:cng_provider	typeref:typename:HINSTANCE	file:
dm	my_project/libgit2/src/util/hash/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	m	struct:__anonf957b8130108	typeref:typename:uint32_t[80]
dmax	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned dmax;              \/* zlib header max distance (INFLATE_STRICT) *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
do_callout	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static sljit_s32 SLJIT_FUNC do_callout(struct jit_arguments *arguments, PUBL(callout_block) *cal/;"	f	typeref:typename:sljit_s32 SLJIT_FUNC	file:
do_casefulcmp	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void do_casefulcmp(compiler_common *common)$/;"	f	typeref:typename:void	file:
do_caselesscmp	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void do_caselesscmp(compiler_common *common)$/;"	f	typeref:typename:void	file:
do_conflicted_diff	my_project/libgit2/tests/libgit2/diff/index.c	/^static void do_conflicted_diff(diff_expects *exp, unsigned long flags)$/;"	f	typeref:typename:void	file:
do_custom_reparse	my_project/libgit2/tests/util/link.c	/^static void do_custom_reparse(const char *path)$/;"	f	typeref:typename:void	file:
do_describe	my_project/libgit2/examples/describe.c	/^static void do_describe(git_repository *repo, struct describe_options *opts)$/;"	f	typeref:typename:void	file:
do_describe_single	my_project/libgit2/examples/describe.c	/^static void do_describe_single(git_repository *repo, struct describe_options *opts, const char */;"	f	typeref:typename:void	file:
do_fetch	my_project/libgit2/tests/libgit2/online/fetch.c	/^static void do_fetch(const char *url, git_remote_autotag_option_t flag, int n)$/;"	f	typeref:typename:void	file:
do_fsync	my_project/libgit2/src/libgit2/indexer.c	/^		do_fsync :1,$/;"	m	struct:git_indexer	typeref:typename:unsigned int:1	file:
do_fsync	my_project/libgit2/src/libgit2/odb.h	/^	unsigned int do_fsync :1;$/;"	m	struct:git_odb	typeref:typename:unsigned int:1
do_fsync	my_project/libgit2/src/util/filebuf.h	/^	bool do_fsync;$/;"	m	struct:git_filebuf	typeref:typename:bool
do_getucd	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void do_getucd(compiler_common *common)$/;"	f	typeref:typename:void	file:
do_hardlink	my_project/libgit2/tests/util/link.c	/^static void do_hardlink(const char *old, const char *new)$/;"	f	typeref:typename:void	file:
do_junction	my_project/libgit2/tests/util/link.c	/^static void do_junction(const char *old, const char *new)$/;"	f	typeref:typename:void	file:
do_lstat	my_project/libgit2/src/util/win32/posix_w32.c	/^static int do_lstat(const char *path, struct stat *buf, bool posixly_correct)$/;"	f	typeref:typename:int	file:
do_match_gitdir	my_project/libgit2/src/libgit2/config_file.c	/^static int do_match_gitdir($/;"	f	typeref:typename:int	file:
do_not_buffer	my_project/libgit2/src/util/filebuf.h	/^	bool do_not_buffer;$/;"	m	struct:git_filebuf	typeref:typename:bool
do_progress_callback	my_project/libgit2/src/libgit2/indexer.c	/^static int do_progress_callback(git_indexer *idx, git_indexer_progress *stats)$/;"	f	typeref:typename:int	file:
do_push	my_project/libgit2/src/libgit2/push.c	/^static int do_push(git_push *push)$/;"	f	typeref:typename:int	file:
do_push	my_project/libgit2/tests/libgit2/online/push.c	/^static void do_push($/;"	f	typeref:typename:void	file:
do_redirected_fetch	my_project/libgit2/tests/libgit2/online/fetch.c	/^static int do_redirected_fetch(const char *url, const char *name, const char *config)$/;"	f	typeref:typename:int	file:
do_reset_match	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void do_reset_match(compiler_common *common, int length)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
do_revertframes	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void do_revertframes(compiler_common *common)$/;"	f	typeref:typename:void	file:
do_search_mark	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static sljit_sw SLJIT_FUNC do_search_mark(sljit_sw *current, const pcre_uchar *skip_arg)$/;"	f	typeref:typename:sljit_sw SLJIT_FUNC	file:
do_send_request	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int do_send_request(winhttp_stream *s, size_t len, bool chunked)$/;"	f	typeref:typename:int	file:
do_symlink	my_project/libgit2/tests/util/link.c	/^static void do_symlink(const char *old, const char *new, int is_dir)$/;"	f	typeref:typename:void	file:
do_time_travelling_fetch	my_project/libgit2/tests/libgit2/remote/fetch.c	/^static void do_time_travelling_fetch(git_oid *commit1id, git_oid *commit2id,$/;"	f	typeref:typename:void	file:
do_utf_caselesscmp	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static const pcre_uchar * SLJIT_FUNC do_utf_caselesscmp(pcre_uchar *src1, pcre_uchar *src2, pcre/;"	f	typeref:typename:const pcre_uchar * SLJIT_FUNC	file:
do_utfreadchar	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void do_utfreadchar(compiler_common *common)$/;"	f	typeref:typename:void	file:
do_utfreadchar16	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void do_utfreadchar16(compiler_common *common)$/;"	f	typeref:typename:void	file:
do_utfreadtype8	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void do_utfreadtype8(compiler_common *common)$/;"	f	typeref:typename:void	file:
do_verify	my_project/libgit2/src/libgit2/indexer.c	/^		do_verify :1;$/;"	m	struct:git_indexer	typeref:typename:unsigned int:1	file:
do_verify_push_status	my_project/libgit2/tests/libgit2/online/push.c	/^static void do_verify_push_status(record_callbacks_data *data, const push_status expected[], con/;"	f	typeref:typename:void	file:
do_with_retries	my_project/libgit2/src/util/win32/posix_w32.c	/^#define do_with_retries(/;"	d	file:
does_negate_pattern	my_project/libgit2/src/libgit2/ignore.c	/^static int does_negate_pattern(git_attr_fnmatch *rule, git_attr_fnmatch *neg)$/;"	f	typeref:typename:int	file:
does_negate_rule	my_project/libgit2/src/libgit2/ignore.c	/^static int does_negate_rule(int *out, git_vector *rules, git_attr_fnmatch *match)$/;"	f	typeref:typename:int	file:
done	my_project/libgit2/deps/zlib/crc32.c	/^    atomic_int done;$/;"	m	struct:once_s	typeref:typename:atomic_int	file:
done	my_project/libgit2/deps/zlib/crc32.c	/^    volatile int done;$/;"	m	struct:once_s	typeref:typename:volatile int	file:
done	my_project/libgit2/deps/zlib/zlib.h	/^    int     done;       \/* true when done reading gzip header (not used$/;"	m	struct:gz_header_s	typeref:typename:int
done	my_project/libgit2/src/libgit2/pack-objects.h	/^	bool done;$/;"	m	struct:git_packbuilder	typeref:typename:bool
done	my_project/libgit2/src/libgit2/pack.h	/^	int done;$/;"	m	struct:git_packfile_stream	typeref:typename:int
dont_notify_cb	my_project/libgit2/tests/libgit2/checkout/index.c	/^static int dont_notify_cb($/;"	f	typeref:typename:int	file:
dos_drive_prefix_length	my_project/libgit2/src/util/fs_path.c	/^static int dos_drive_prefix_length(const char *path)$/;"	f	typeref:typename:int	file:
dot	my_project/libgit2/tests/util/dirent.c	/^static walk_data dot = {$/;"	v	typeref:typename:walk_data	file:
dot_names	my_project/libgit2/tests/util/dirent.c	/^static name_data dot_names[] = {$/;"	v	typeref:typename:name_data[]	file:
dotgit_flags	my_project/libgit2/src/libgit2/path.c	/^GIT_INLINE(unsigned int) dotgit_flags($/;"	f	typeref:typename:unsigned int
dowild	my_project/libgit2/src/util/wildmatch.c	/^static int dowild(const uchar *p, const uchar *text, unsigned int flags)$/;"	f	typeref:typename:int	file:
download_tags	my_project/libgit2/include/git2/remote.h	/^	git_remote_autotag_option_t download_tags;$/;"	m	struct:__anon144be4e60808	typeref:typename:git_remote_autotag_option_t
download_tags	my_project/libgit2/src/libgit2/remote.h	/^	git_remote_autotag_option_t download_tags;$/;"	m	struct:git_remote	typeref:typename:git_remote_autotag_option_t
download_tags_value	my_project/libgit2/src/libgit2/remote.c	/^static int download_tags_value(git_remote *remote, git_config *cfg)$/;"	f	typeref:typename:int	file:
drips	my_project/libgit2/FUNDING.json	/^  "drips": {$/;"	o
driver	my_project/libgit2/src/libgit2/diff_driver.h	/^	git_diff_driver *driver;$/;"	m	struct:__anon9fad28f90108	typeref:typename:git_diff_driver *
driver	my_project/libgit2/src/libgit2/diff_file.h	/^	git_diff_driver *driver;$/;"	m	struct:__anonffb6e84d0108	typeref:typename:git_diff_driver *
driver	my_project/libgit2/src/libgit2/merge_driver.c	/^	git_merge_driver *driver;$/;"	m	struct:__anonbbbb786b0108	typeref:typename:git_merge_driver *	file:
drivers	my_project/libgit2/src/libgit2/diff_driver.c	/^	git_strmap *drivers;$/;"	m	struct:git_diff_driver_registry	typeref:typename:git_strmap *	file:
drivers	my_project/libgit2/src/libgit2/merge_driver.c	/^	git_vector drivers;$/;"	m	struct:merge_driver_registry	typeref:typename:git_vector	file:
dry_run	my_project/libgit2/examples/add.c	/^	int dry_run;$/;"	m	struct:index_options	typeref:typename:int	file:
dst	my_project/libgit2/include/git2/remote.h	/^	git_oid dst;$/;"	m	struct:__anon144be4e60408	typeref:typename:git_oid
dst	my_project/libgit2/src/libgit2/refspec.h	/^	char *dst;$/;"	m	struct:git_refspec	typeref:typename:char *
dst	my_project/libgit2/src/util/date.c	/^	int dst;$/;"	m	struct:__anon0f244edf0208	typeref:typename:int	file:
dst_refname	my_project/libgit2/include/git2/remote.h	/^	char *dst_refname;$/;"	m	struct:__anon144be4e60408	typeref:typename:char *
dstart	my_project/libgit2/deps/xdiff/xtypes.h	/^	long dstart, dend;$/;"	m	struct:s_xdfile	typeref:typename:long
dummy	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 dummy;              \/* To ensure size is a multiple of 8 *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
dummy1	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 dummy1;             \/* To ensure size is a multiple of 8 *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
dummy2	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 dummy2;             \/* To ensure size is a multiple of 8 *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
dummy3	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 dummy3;             \/* To ensure size is a multiple of 8 *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
dummy_fn	my_project/libgit2/tests/util/assert.c	/^static int dummy_fn(const char *myarg)$/;"	f	typeref:typename:int	file:
dummy_submodule_cb	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^static int dummy_submodule_cb($/;"	f	typeref:typename:int	file:
dummy_transport	my_project/libgit2/tests/libgit2/transport/register.c	/^static int dummy_transport(git_transport **transport, git_remote *owner, void *param)$/;"	f	typeref:typename:int	file:
dummy_ucd_record	my_project/libgit2/deps/pcre/pcre_ucd.c	/^const ucd_record PRIV(dummy_ucd_record)[] = {{$/;"	v	typeref:typename:const ucd_record PRIV ()[]
dump_submodules	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.c	/^void dump_submodules(git_repository *repo)$/;"	f	typeref:typename:void
dump_summary	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static void dump_summary(const char *label)$/;"	f	typeref:typename:void	file:
dup_entry	my_project/libgit2/src/libgit2/blame_git.c	/^static void dup_entry(git_blame__entry *dst, git_blame__entry *src)$/;"	f	typeref:typename:void	file:
dup_ext_err	my_project/libgit2/src/libgit2/repository.c	/^static int dup_ext_err(void **old, void *extension)$/;"	f	typeref:typename:int	file:
dup_hunk	my_project/libgit2/src/libgit2/blame.c	/^static git_blame_hunk *dup_hunk(git_blame_hunk *hunk, git_blame *blame)$/;"	f	typeref:typename:git_blame_hunk *	file:
dup_reflog	my_project/libgit2/src/libgit2/transaction.c	/^static int dup_reflog(git_reflog **out, const git_reflog *in, git_pool *pool)$/;"	f	typeref:typename:int	file:
dupgroups	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL dupgroups;                   \/* Duplicate groups exist: (?| found *\/$/;"	m	struct:compile_data	typeref:typename:BOOL
duplicate_level	my_project/libgit2/src/libgit2/config.c	/^static int duplicate_level(void **_old, void *_new)$/;"	f	typeref:typename:int	file:
dupnames	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL dupnames;                    \/* Duplicate names exist *\/$/;"	m	struct:compile_data	typeref:typename:BOOL
dvB	my_project/libgit2/src/util/hash/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	m	struct:__anonf957b8130108	typeref:typename:int
dvK	my_project/libgit2/src/util/hash/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	m	struct:__anonf957b8130108	typeref:typename:int
dvType	my_project/libgit2/src/util/hash/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	m	struct:__anonf957b8130108	typeref:typename:int
dv_info_t	my_project/libgit2/src/util/hash/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	t	typeref:struct:__anonf957b8130108
dwAccessType	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwAccessType;$/;"	m	struct:__anon0b61ebe80408	typeref:typename:DWORD
dwAutoDetectFlags	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwAutoDetectFlags;$/;"	m	struct:__anon0b61ebe80608	typeref:typename:DWORD
dwError	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwError;$/;"	m	struct:__anon0b61ebe80208	typeref:typename:DWORD
dwExtraInfoLength	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD   dwExtraInfoLength;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:DWORD
dwFlags	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwFlags;$/;"	m	struct:__anon0b61ebe80608	typeref:typename:DWORD
dwHostNameLength	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD   dwHostNameLength;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:DWORD
dwKeySize	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwKeySize;$/;"	m	struct:__anon0b61ebe80308	typeref:typename:DWORD
dwMajorVersion	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwMajorVersion;$/;"	m	struct:__anon0b61ebe80708	typeref:typename:DWORD
dwMinorVersion	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwMinorVersion;$/;"	m	struct:__anon0b61ebe80708	typeref:typename:DWORD
dwPasswordLength	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD   dwPasswordLength;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:DWORD
dwReserved	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD dwReserved;$/;"	m	struct:__anon0b61ebe80608	typeref:typename:DWORD
dwResult	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD_PTR dwResult;$/;"	m	struct:__anon0b61ebe80208	typeref:typename:DWORD_PTR
dwSchemeLength	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD   dwSchemeLength;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:DWORD
dwStructSize	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD   dwStructSize;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:DWORD
dwUrlPathLength	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD   dwUrlPathLength;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:DWORD
dwUserNameLength	my_project/libgit2/deps/winhttp/winhttp.h	/^    DWORD   dwUserNameLength;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:DWORD
dwim_refspecs	my_project/libgit2/src/libgit2/remote.c	/^static int dwim_refspecs(git_vector *out, git_vector *refspecs, git_vector *refs)$/;"	f	typeref:typename:int	file:
dyn_dtree	my_project/libgit2/deps/zlib/deflate.h	/^    struct ct_data_s dyn_dtree[2*D_CODES+1]; \/* distance tree *\/$/;"	m	struct:internal_state	typeref:struct:ct_data_s[]
dyn_ltree	my_project/libgit2/deps/zlib/deflate.h	/^    struct ct_data_s dyn_ltree[HEAP_SIZE];   \/* literal and length tree *\/$/;"	m	struct:internal_state	typeref:struct:ct_data_s[]
dyn_tree	my_project/libgit2/deps/zlib/deflate.h	/^    ct_data *dyn_tree;           \/* the dynamic tree *\/$/;"	m	struct:tree_desc_s	typeref:typename:ct_data *
dynamic_shutdown	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^static void dynamic_shutdown(void)$/;"	f	typeref:typename:void	file:
each_tag	my_project/libgit2/examples/tag.c	/^static int each_tag(const char *name, tag_state *state)$/;"	f	typeref:typename:int	file:
early_response	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_http_response early_response;$/;"	m	struct:git_http_client	typeref:typename:git_http_response	file:
ebcdic_chartab	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 ebcdic_chartab[] = { \/* chartable partial dup *\/$/;"	v	typeref:typename:const pcre_uint8[]	file:
ebcdic_escape_c	my_project/libgit2/deps/pcre/pcre_compile.c	/^static unsigned char ebcdic_escape_c[] = "@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_";$/;"	v	typeref:typename:unsigned char[]	file:
ecode	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define ecode /;"	d	file:
effective_indent	my_project/libgit2/deps/xdiff/xdiffi.c	/^	int effective_indent;$/;"	m	struct:split_score	typeref:typename:int	file:
eint	my_project/libgit2/deps/pcre/pcreposix.c	/^static const int eint[] = {$/;"	v	typeref:typename:const int[]	file:
elapsed	my_project/libgit2/tests/clar/clar.c	/^	double elapsed;$/;"	m	struct:clar_report	typeref:typename:double	file:
elems	my_project/libgit2/deps/zlib/trees.c	/^    int     elems;               \/* max number of elements in the tree *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:int	file:
email	my_project/libgit2/include/git2/types.h	/^	char *email; \/**< email of the author *\/$/;"	m	struct:git_signature	typeref:typename:char *
email	my_project/libgit2/tests/libgit2/commit/parse.c	/^	const char *email;$/;"	m	struct:__anon39d5c3ee0208	typeref:typename:const char *	file:
email_for_commit	my_project/libgit2/tests/libgit2/email/create.c	/^static void email_for_commit($/;"	f	typeref:typename:void	file:
emit_func_t	my_project/libgit2/deps/xdiff/xemit.h	/^typedef int (*emit_func_t)(xdfenv_t *xe, xdchange_t *xscr, xdemitcb_t *ecb,$/;"	t	typeref:typename:int (*)(xdfenv_t * xe,xdchange_t * xscr,xdemitcb_t * ecb,xdemitconf_t const * xecfg)
empty	my_project/libgit2/tests/util/dirent.c	/^static walk_data empty = {$/;"	v	typeref:typename:walk_data	file:
empty_iterator	my_project/libgit2/src/libgit2/iterator.c	/^} empty_iterator;$/;"	t	typeref:struct:__anon2f88b95a0208	file:
empty_iterator_advance_over	my_project/libgit2/src/libgit2/iterator.c	/^static int empty_iterator_advance_over($/;"	f	typeref:typename:int	file:
empty_iterator_free	my_project/libgit2/src/libgit2/iterator.c	/^static void empty_iterator_free(git_iterator *i)$/;"	f	typeref:typename:void	file:
empty_iterator_noop	my_project/libgit2/src/libgit2/iterator.c	/^static int empty_iterator_noop(const git_index_entry **e, git_iterator *i)$/;"	f	typeref:typename:int	file:
empty_iterator_reset	my_project/libgit2/src/libgit2/iterator.c	/^static int empty_iterator_reset(git_iterator *i)$/;"	f	typeref:typename:int	file:
empty_names	my_project/libgit2/tests/util/dirent.c	/^static name_data empty_names[] = {$/;"	v	typeref:typename:name_data[]	file:
empty_tmp_dir	my_project/libgit2/tests/util/rmdir.c	/^static const char *empty_tmp_dir = "test_gitfo_rmdir_recurs_test";$/;"	v	typeref:typename:const char *	file:
empty_workdir	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^static void empty_workdir(const char *name)$/;"	f	typeref:typename:void	file:
enabled	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^      BOOL enabled;$/;"	m	struct:char_iterator_backtrack::__anon4bd17169020a::__anon4bd171690308	typeref:typename:BOOL	file:
enabled	my_project/libgit2/tests/clar/clar.c	/^	int enabled;$/;"	m	struct:clar_suite	typeref:typename:int	file:
encounters	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^	int encounters;$/;"	m	struct:expectations	typeref:typename:int	file:
encrypted	my_project/libgit2/include/git2/sys/stream.h	/^	unsigned int encrypted : 1,$/;"	m	struct:git_stream	typeref:typename:unsigned int:1
end	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  const pcre_uchar *end;$/;"	m	struct:jit_arguments	typeref:typename:const pcre_uchar *	file:
end	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  end$/;"	e	enum:copy_private_data::__anon4bd171690603	file:
end	my_project/libgit2/deps/xdiff/xdiffi.c	/^	long end;$/;"	m	struct:xdlgroup	typeref:typename:long	file:
end	my_project/libgit2/src/libgit2/iterator.h	/^	char *end;$/;"	m	struct:git_iterator	typeref:typename:char *
end	my_project/libgit2/src/libgit2/iterator.h	/^	const char *end;$/;"	m	struct:__anon2f88b95f0408	typeref:typename:const char *
end	my_project/libgit2/src/util/regexp.h	/^	ssize_t end;$/;"	m	struct:__anon6acbdb710208	typeref:typename:ssize_t
end1	my_project/libgit2/deps/xdiff/xhistogram.c	/^	unsigned int begin1, end1;$/;"	m	struct:region	typeref:typename:unsigned int	file:
end2	my_project/libgit2/deps/xdiff/xhistogram.c	/^	unsigned int begin2, end2;$/;"	m	struct:region	typeref:typename:unsigned int	file:
end_len	my_project/libgit2/src/libgit2/iterator.h	/^	size_t end_len;$/;"	m	struct:git_iterator	typeref:typename:size_t
end_line	my_project/libgit2/examples/blame.c	/^	int end_line;$/;"	m	struct:blame_opts	typeref:typename:int	file:
end_match_ptr	my_project/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR end_match_ptr;      \/* Subject position at end match *\/$/;"	m	struct:match_data	typeref:typename:PCRE_PUCHAR
end_of_file	my_project/libgit2/deps/xdiff/xdiffi.c	/^	int end_of_file;$/;"	m	struct:split_measurement	typeref:typename:int	file:
end_of_record	my_project/libgit2/src/libgit2/refdb_fs.c	/^static const char *end_of_record(const char *p, const char *end)$/;"	f	typeref:typename:const char *	file:
end_offset_top	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int    end_offset_top;          \/* Highwater mark at end of match *\/$/;"	m	struct:match_data	typeref:typename:int
end_pattern	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *end_pattern;    \/* The end of the pattern *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uchar *
end_subject	my_project/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR end_subject;        \/* End of the subject string *\/$/;"	m	struct:match_data	typeref:typename:PCRE_PUCHAR
end_subject	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *end_subject;    \/* End of subject string *\/$/;"	m	struct:dfa_match_data	typeref:typename:const pcre_uchar *
ended	my_project/libgit2/src/libgit2/iterator.h	/^	bool ended;$/;"	m	struct:git_iterator	typeref:typename:bool
endonly	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   endonly;                 \/* Dollar not before final \\n *\/$/;"	m	struct:match_data	typeref:typename:BOOL
endonly	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int endonly;$/;"	m	struct:compiler_common	typeref:typename:int	file:
endp	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^	const unsigned char *endp;$/;"	m	struct:fuzzer_stream	typeref:typename:const unsigned char *	file:
ends_with_optional_cr	my_project/libgit2/deps/xdiff/xutils.c	/^static int ends_with_optional_cr(const char *l, long s, long i)$/;"	f	typeref:typename:int	file:
engine	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^    ENGINE *engine;$/;"	m	struct:env_md_ctx_st	typeref:typename:ENGINE *
enqueue	my_project/libgit2/src/libgit2/revwalk.h	/^	int (*enqueue)(git_revwalk *, git_commit_list_node *);$/;"	m	struct:git_revwalk	typeref:typename:int (*)(git_revwalk *,git_commit_list_node *)
enqueue_tag	my_project/libgit2/src/libgit2/push.c	/^static int enqueue_tag(git_object **out, git_push *push, git_oid *id)$/;"	f	typeref:typename:int	file:
ensure_aborted	my_project/libgit2/tests/libgit2/rebase/abort.c	/^static void ensure_aborted($/;"	f	typeref:typename:void	file:
ensure_base_rev_is_not_known_yet	my_project/libgit2/src/libgit2/revparse.c	/^static int ensure_base_rev_is_not_known_yet(git_object *object)$/;"	f	typeref:typename:int	file:
ensure_base_rev_loaded	my_project/libgit2/src/libgit2/revparse.c	/^static int ensure_base_rev_loaded(git_object **object, git_reference **reference, const char *sp/;"	f	typeref:typename:int	file:
ensure_clean_index	my_project/libgit2/src/libgit2/stash.c	/^static int ensure_clean_index(git_repository *repo, git_index *index)$/;"	f	typeref:typename:int	file:
ensure_error_set	my_project/libgit2/src/util/fs_path.c	/^#define ensure_error_set(/;"	d	file:
ensure_identical_patch_inout	my_project/libgit2/tests/libgit2/patch/parse.c	/^static void ensure_identical_patch_inout(const char *content)$/;"	f	typeref:typename:void	file:
ensure_is_an_updatable_direct_reference	my_project/libgit2/src/libgit2/refs.c	/^static int ensure_is_an_updatable_direct_reference(git_reference *ref)$/;"	f	typeref:typename:int	file:
ensure_is_an_updatable_symbolic_reference	my_project/libgit2/src/libgit2/refs.c	/^static int ensure_is_an_updatable_symbolic_reference(git_reference *ref)$/;"	f	typeref:typename:int	file:
ensure_left_hand_identifier_is_not_known_yet	my_project/libgit2/src/libgit2/revparse.c	/^static int ensure_left_hand_identifier_is_not_known_yet(git_object *object, git_reference *refer/;"	f	typeref:typename:int	file:
ensure_no_refname_starts_with_a_forward_slash	my_project/libgit2/tests/libgit2/refs/listall.c	/^static void ensure_no_refname_starts_with_a_forward_slash(const char *path)$/;"	f	typeref:typename:void	file:
ensure_patch_validity	my_project/libgit2/tests/libgit2/patch/parse.c	/^static void ensure_patch_validity(git_patch *patch)$/;"	f	typeref:typename:void	file:
ensure_refname_invalid	my_project/libgit2/tests/libgit2/refs/normalize.c	/^static void ensure_refname_invalid(unsigned int flags, const char *input_refname)$/;"	f	typeref:typename:void	file:
ensure_refname_normalized	my_project/libgit2/tests/libgit2/refs/normalize.c	/^static void ensure_refname_normalized($/;"	f	typeref:typename:void	file:
ensure_remote_doesnot_exist	my_project/libgit2/src/libgit2/remote.c	/^static int ensure_remote_doesnot_exist(git_repository *repo, const char *name)$/;"	f	typeref:typename:int	file:
ensure_remote_name_is_valid	my_project/libgit2/src/libgit2/remote.c	/^static int ensure_remote_name_is_valid(const char *name)$/;"	f	typeref:typename:int	file:
ensure_repository_discover	my_project/libgit2/tests/libgit2/repo/discover.c	/^static void ensure_repository_discover(const char *start_path,$/;"	f	typeref:typename:void	file:
ensure_repository_init	my_project/libgit2/tests/libgit2/repo/init.c	/^static void ensure_repository_init($/;"	f	typeref:typename:void	file:
ensure_segment_validity	my_project/libgit2/src/libgit2/refs.c	/^static int ensure_segment_validity(const char *name, char may_contain_glob)$/;"	f	typeref:typename:int	file:
ensure_submodules_found	my_project/libgit2/tests/libgit2/diff/submodules.c	/^static void ensure_submodules_found($/;"	f	typeref:typename:void	file:
ensure_tag_pattern_match	my_project/libgit2/tests/libgit2/object/tag/list.c	/^static void ensure_tag_pattern_match(git_repository *repo,$/;"	f	typeref:typename:void	file:
ensure_there_are_changes_to_stash	my_project/libgit2/src/libgit2/stash.c	/^static int ensure_there_are_changes_to_stash(git_repository *repo, uint32_t flags)$/;"	f	typeref:typename:int	file:
ensure_there_are_changes_to_stash_paths	my_project/libgit2/src/libgit2/stash.c	/^static int ensure_there_are_changes_to_stash_paths($/;"	f	typeref:typename:int	file:
ensure_transport_state	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^GIT_INLINE(int) ensure_transport_state($/;"	f	typeref:typename:int
ensure_workdir	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^static void ensure_workdir(const char *path, int mode, const char *oid_str)$/;"	f	typeref:typename:void	file:
ensure_workdir_contents	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^static void ensure_workdir_contents(const char *path, const char *contents)$/;"	f	typeref:typename:void	file:
ensure_workdir_link	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^static void ensure_workdir_link($/;"	f	typeref:typename:void	file:
ensure_workdir_mode	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^static void ensure_workdir_mode(const char *path, int mode)$/;"	f	typeref:typename:void	file:
ensure_workdir_oid	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^static void ensure_workdir_oid(const char *path, const char *oid_str)$/;"	f	typeref:typename:void	file:
ensure_writable	my_project/libgit2/src/util/win32/posix_w32.c	/^static int ensure_writable(wchar_t *path)$/;"	f	typeref:typename:int	file:
ent	my_project/libgit2/src/libgit2/blame.h	/^	git_blame__entry *ent;$/;"	m	struct:git_blame	typeref:typename:git_blame__entry *
entries	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  recurse_entry *entries;$/;"	m	struct:compiler_common	typeref:typename:recurse_entry *	file:
entries	my_project/libgit2/deps/xdiff/xpatience.c	/^	} *entries, *first, *last;$/;"	m	struct:hashmap	typeref:struct:hashmap::entry *	file:
entries	my_project/libgit2/src/libgit2/config_list.c	/^	config_entry_list *entries;$/;"	m	struct:git_config_list	typeref:typename:config_entry_list *	file:
entries	my_project/libgit2/src/libgit2/index.h	/^	git_vector entries;$/;"	m	struct:git_index	typeref:typename:git_vector
entries	my_project/libgit2/src/libgit2/iterator.c	/^	git_vector entries;$/;"	m	struct:__anon2f88b95a0408	typeref:typename:git_vector	file:
entries	my_project/libgit2/src/libgit2/iterator.c	/^	git_vector entries;$/;"	m	struct:__anon2f88b95a0708	typeref:typename:git_vector	file:
entries	my_project/libgit2/src/libgit2/iterator.c	/^	git_vector entries;$/;"	m	struct:__anon2f88b95a0908	typeref:typename:git_vector	file:
entries	my_project/libgit2/src/libgit2/mailmap.h	/^	git_vector entries;$/;"	m	struct:git_mailmap	typeref:typename:git_vector
entries	my_project/libgit2/src/libgit2/pack.h	/^	git_offmap *entries;$/;"	m	struct:__anon57fe39b40108	typeref:typename:git_offmap *
entries	my_project/libgit2/src/libgit2/reflog.h	/^	git_vector entries;$/;"	m	struct:git_reflog	typeref:typename:git_vector
entries	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^static const mailmap_entry entries[] = {$/;"	v	typeref:typename:const mailmap_entry[]	file:
entries_cmp_path	my_project/libgit2/src/libgit2/index.h	/^	git_vector_cmp entries_cmp_path;$/;"	m	struct:git_index	typeref:typename:git_vector_cmp
entries_map	my_project/libgit2/src/libgit2/index.h	/^	git_idxmap *entries_map;$/;"	m	struct:git_index	typeref:typename:git_idxmap *
entries_search	my_project/libgit2/src/libgit2/index.h	/^	git_vector_cmp entries_search;$/;"	m	struct:git_index	typeref:typename:git_vector_cmp
entries_search_path	my_project/libgit2/src/libgit2/index.h	/^	git_vector_cmp entries_search_path;$/;"	m	struct:git_index	typeref:typename:git_vector_cmp
entry	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *entry;$/;"	m	struct:recurse_entry	typeref:struct:sljit_label *	file:
entry	my_project/libgit2/deps/xdiff/xpatience.c	/^	struct entry {$/;"	s	struct:hashmap	file:
entry	my_project/libgit2/src/libgit2/attr_file.h	/^	git_attr_file_entry *entry;$/;"	m	struct:__anon0df92d8f0708	typeref:typename:git_attr_file_entry *
entry	my_project/libgit2/src/libgit2/config_list.c	/^	git_config_list_entry *entry;$/;"	m	struct:__anon421351410108	typeref:typename:git_config_list_entry *	file:
entry	my_project/libgit2/src/libgit2/config_list.c	/^	git_config_list_entry *entry;$/;"	m	struct:config_entry_list	typeref:typename:git_config_list_entry *	file:
entry	my_project/libgit2/src/libgit2/index.c	/^	git_index_entry entry;$/;"	m	struct:entry_internal	typeref:typename:git_index_entry	file:
entry	my_project/libgit2/src/libgit2/index.c	/^	git_index_reuc_entry entry;$/;"	m	struct:reuc_entry_internal	typeref:typename:git_index_reuc_entry	file:
entry	my_project/libgit2/src/libgit2/indexer.c	/^struct entry {$/;"	s	file:
entry	my_project/libgit2/src/libgit2/iterator.c	/^	const git_index_entry *entry;$/;"	m	struct:__anon2f88b95a0908	typeref:typename:const git_index_entry *	file:
entry	my_project/libgit2/src/libgit2/iterator.c	/^	git_index_entry entry;$/;"	m	struct:__anon2f88b95a0508	typeref:typename:git_index_entry	file:
entry	my_project/libgit2/src/libgit2/iterator.c	/^	git_index_entry entry;$/;"	m	struct:__anon2f88b95a0808	typeref:typename:git_index_entry	file:
entry	my_project/libgit2/src/util/win32/dir.h	/^	struct git__dirent entry;$/;"	m	struct:__anon088cf8e70108	typeref:struct:git__dirent
entry	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	struct merge_index_entry entry;$/;"	m	struct:merge_index_with_status	typeref:struct:merge_index_entry
entry_cmp	my_project/libgit2/src/libgit2/index.c	/^	git_vector_cmp entry_cmp;$/;"	m	struct:read_tree_data	typeref:typename:git_vector_cmp	file:
entry_common	my_project/libgit2/src/libgit2/index.c	/^struct entry_common {$/;"	s	file:
entry_count	my_project/libgit2/src/libgit2/index.c	/^	uint32_t entry_count;$/;"	m	struct:index_header	typeref:typename:uint32_t	file:
entry_count	my_project/libgit2/src/libgit2/tree-cache.h	/^	ssize_t entry_count;$/;"	m	struct:git_tree_cache	typeref:typename:ssize_t
entry_count	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^	int entry_count;$/;"	m	struct:__anon6ff743e90108	typeref:typename:int
entry_count0	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const int entry_count0 = 16;$/;"	v	typeref:typename:const int
entry_count2	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const int entry_count2 = 15;$/;"	v	typeref:typename:const int
entry_count3	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const int entry_count3 = 22;$/;"	v	typeref:typename:const int
entry_count4	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const int entry_count4 = 23;$/;"	v	typeref:typename:const int
entry_count5	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const int entry_count5 = 8;$/;"	v	typeref:typename:const int
entry_count6	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const int entry_count6 = 13;$/;"	v	typeref:typename:const int
entry_data	my_project/libgit2/src/libgit2/indexer.c	/^	git_str entry_data;$/;"	m	struct:git_indexer	typeref:typename:git_str	file:
entry_dir_flag	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(git_dir_flag) entry_dir_flag(git_index_entry *entry)$/;"	f	typeref:typename:git_dir_flag
entry_fromname	my_project/libgit2/src/libgit2/tree.c	/^static const git_tree_entry *entry_fromname($/;"	f	typeref:typename:const git_tree_entry *	file:
entry_internal	my_project/libgit2/src/libgit2/index.c	/^struct entry_internal {$/;"	s	file:
entry_is_prefixed	my_project/libgit2/src/libgit2/diff_generate.c	/^static bool entry_is_prefixed($/;"	f	typeref:typename:bool	file:
entry_long	my_project/libgit2/src/libgit2/index.c	/^#define entry_long(/;"	d	file:
entry_path	my_project/libgit2/src/libgit2/iterator.c	/^	git_str entry_path;$/;"	m	struct:__anon2f88b95a0508	typeref:typename:git_str	file:
entry_paths0	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const char *entry_paths0[] = {$/;"	v	typeref:typename:const char * []
entry_paths2	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const char *entry_paths2[] = {$/;"	v	typeref:typename:const char * []
entry_paths3	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const char *entry_paths3[] = {$/;"	v	typeref:typename:const char * []
entry_paths3_icase	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const char *entry_paths3_icase[] = {$/;"	v	typeref:typename:const char * []
entry_paths4	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const char *entry_paths4[] = {$/;"	v	typeref:typename:const char * []
entry_paths5	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const char *entry_paths5[] = {$/;"	v	typeref:typename:const char * []
entry_paths6	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const char *entry_paths6[] = {$/;"	v	typeref:typename:const char * []
entry_pool	my_project/libgit2/src/libgit2/iterator.c	/^	git_pool entry_pool;$/;"	m	struct:__anon2f88b95a0508	typeref:typename:git_pool	file:
entry_pool	my_project/libgit2/src/libgit2/iterator.c	/^	git_pool entry_pool;$/;"	m	struct:__anon2f88b95a0708	typeref:typename:git_pool	file:
entry_short	my_project/libgit2/src/libgit2/index.c	/^#define entry_short(/;"	d	file:
entry_sort_cmp	my_project/libgit2/src/libgit2/tree.c	/^static int entry_sort_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
entry_srch	my_project/libgit2/src/libgit2/iterator.h	/^	int (*entry_srch)(const void *key, const void *array_member);$/;"	m	struct:git_iterator	typeref:typename:int (*)(const void * key,const void * array_member)
entry_srch_key	my_project/libgit2/src/libgit2/index.c	/^struct entry_srch_key {$/;"	s	file:
entry_start	my_project/libgit2/src/libgit2/indexer.c	/^	off64_t entry_start;$/;"	m	struct:git_indexer	typeref:typename:off64_t	file:
entry_statuses0	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const unsigned int entry_statuses0[] = {$/;"	v	typeref:typename:const unsigned int[]
entry_statuses2	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const unsigned int entry_statuses2[] = {$/;"	v	typeref:typename:const unsigned int[]
entry_statuses3	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const unsigned int entry_statuses3[] = {$/;"	v	typeref:typename:const unsigned int[]
entry_statuses3_icase	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const unsigned int entry_statuses3_icase[] = {$/;"	v	typeref:typename:const unsigned int[]
entry_statuses4	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const unsigned int entry_statuses4[] = {$/;"	v	typeref:typename:const unsigned int[]
entry_statuses5	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const unsigned int entry_statuses5[] = {$/;"	v	typeref:typename:const unsigned int[]
entry_statuses6	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const unsigned int entry_statuses6[] = {$/;"	v	typeref:typename:const unsigned int[]
entry_time	my_project/libgit2/src/libgit2/index.c	/^struct entry_time {$/;"	s	file:
entry_type	my_project/libgit2/src/libgit2/indexer.c	/^	git_object_t entry_type;$/;"	m	struct:git_indexer	typeref:typename:git_object_t	file:
entrycomp	my_project/libgit2/src/libgit2/diff.h	/^	int (*entrycomp)(const void *a, const void *b);$/;"	m	struct:git_diff	typeref:typename:int (*)(const void * a,const void * b)
entrycount	my_project/libgit2/tests/libgit2/refs/reflog/drop.c	/^static size_t entrycount;$/;"	v	typeref:typename:size_t	file:
env	my_project/libgit2/deps/xdiff/xhistogram.c	/^	xdfenv_t *env;$/;"	m	struct:histindex	typeref:typename:xdfenv_t *	file:
env	my_project/libgit2/deps/xdiff/xpatience.c	/^	xdfenv_t *env;$/;"	m	struct:hashmap	typeref:typename:xdfenv_t *	file:
env	my_project/libgit2/src/util/unix/process.c	/^	char **env;$/;"	m	struct:git_process	typeref:typename:char **	file:
env	my_project/libgit2/src/util/win32/path_w32.c	/^	wchar_t *env;$/;"	m	struct:win32_path_iter	typeref:typename:wchar_t *	file:
env	my_project/libgit2/src/util/win32/process.c	/^	wchar_t *env;$/;"	m	struct:git_process	typeref:typename:wchar_t *	file:
env_cd_	my_project/libgit2/tests/libgit2/repo/env.c	/^static void env_cd_($/;"	f	typeref:typename:void	file:
env_cd_fail	my_project/libgit2/tests/libgit2/repo/env.c	/^#define env_cd_fail(/;"	d	file:
env_cd_pass	my_project/libgit2/tests/libgit2/repo/env.c	/^#define env_cd_pass(/;"	d	file:
env_check_objects	my_project/libgit2/tests/libgit2/repo/env.c	/^#define env_check_objects(/;"	d	file:
env_check_objects_	my_project/libgit2/tests/libgit2/repo/env.c	/^static void env_check_objects_(bool a, bool t, bool p, const char *file, const char *func, int l/;"	f	typeref:typename:void	file:
env_cmd	my_project/libgit2/tests/util/process/env.c	/^static git_str env_cmd = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
env_fail	my_project/libgit2/tests/libgit2/repo/env.c	/^#define env_fail(/;"	d	file:
env_fail_	my_project/libgit2/tests/libgit2/repo/env.c	/^static void env_fail_(const char *path, const char *file, const char *func, int line)$/;"	f	typeref:typename:void	file:
env_md_ctx_st	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^struct env_md_ctx_st {$/;"	s
env_pass	my_project/libgit2/tests/libgit2/repo/env.c	/^#define env_pass(/;"	d	file:
env_pass_	my_project/libgit2/tests/libgit2/repo/env.c	/^static void env_pass_(const char *path, const char *file, const char *func, int line)$/;"	f	typeref:typename:void	file:
env_result	my_project/libgit2/tests/util/process/env.c	/^static git_vector env_result = GIT_VECTOR_INIT;$/;"	v	typeref:typename:git_vector	file:
env_save	my_project/libgit2/tests/libgit2/core/env.c	/^static char *env_save[NUM_VARS];$/;"	v	typeref:typename:char * []	file:
env_vars	my_project/libgit2/tests/libgit2/core/env.c	/^static const char *env_vars[NUM_VARS] = { "HOME" };$/;"	v	typeref:typename:const char * []	file:
env_vars	my_project/libgit2/tests/libgit2/core/env.c	/^static const char *env_vars[NUM_VARS] = {$/;"	v	typeref:typename:const char * []	file:
environ	my_project/libgit2/src/util/unix/process.c	/^	#define environ /;"	d	file:
environment	my_project/libgit2/.vscode/launch.json	/^            "environment": [],$/;"	a	object:configurations.0
eof	my_project/libgit2/deps/zlib/gzguts.h	/^    int eof;                \/* true if end of input file reached *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:int
eof_for_origin	my_project/libgit2/src/libgit2/patch_parse.c	/^static int eof_for_origin(int origin) {$/;"	f	typeref:typename:int	file:
epb_prev	my_project/libgit2/deps/pcre/pcre_internal.h	/^  struct eptrblock *epb_prev;$/;"	m	struct:eptrblock	typeref:struct:eptrblock *
epb_saved_eptr	my_project/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR epb_saved_eptr;$/;"	m	struct:eptrblock	typeref:typename:PCRE_PUCHAR
eptr	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define eptr /;"	d	file:
eptrb	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define eptrb /;"	d	file:
eptrblock	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct eptrblock {$/;"	s
eptrblock	my_project/libgit2/deps/pcre/pcre_internal.h	/^} eptrblock;$/;"	t	typeref:struct:eptrblock
eptrchain	my_project/libgit2/deps/pcre/pcre_internal.h	/^  eptrblock *eptrchain;           \/* Chain of eptrblocks for tail recursions *\/$/;"	m	struct:match_data	typeref:typename:eptrblock *
eptrn	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int    eptrn;                   \/* Next free eptrblock *\/$/;"	m	struct:match_data	typeref:typename:int
err	my_project/libgit2/deps/zlib/gzguts.h	/^    int err;                \/* error code *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:int
err_get_error_fn	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	unsigned long (*err_get_error_fn)(void);$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:unsigned long (*)(void)
err_lib_error_string_fn	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	const char *(*err_lib_error_string_fn)(unsigned long e);$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:const char * (*)(unsigned long e)
err_pkt	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int err_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
errmsg	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	const char *errmsg;$/;"	m	struct:ntlm_client	typeref:typename:const char *
errno	my_project/libgit2/deps/zlib/zutil.c	/^    int errno = 0;$/;"	v	typeref:typename:int
erroneous_filter_free	my_project/libgit2/tests/libgit2/filter/custom_helpers.c	/^static void erroneous_filter_free(git_filter *f)$/;"	f	typeref:typename:void	file:
erroneous_filter_stream	my_project/libgit2/tests/libgit2/filter/custom_helpers.c	/^static int erroneous_filter_stream($/;"	f	typeref:typename:int	file:
error	my_project/libgit2/deps/llhttp/llhttp.h	/^  int32_t error;$/;"	m	struct:llhttp__internal_s	typeref:typename:int32_t
error	my_project/libgit2/src/libgit2/patch_generate.h	/^	int error;$/;"	m	struct:git_patch_generated_output	typeref:typename:int
error	my_project/libgit2/src/libgit2/streams/stransport.c	/^	int error;$/;"	m	struct:__anon898973fe0108	typeref:typename:int	file:
error	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	int error;$/;"	m	struct:__anon3d590bbe0608	typeref:typename:int	file:
error	my_project/libgit2/src/libgit2/transports/smart.h	/^	char error[GIT_FLEX_ARRAY];$/;"	m	struct:__anonb9ceeb0b0708	typeref:typename:char[]
error	my_project/libgit2/src/util/errors.c	/^	git_error error;$/;"	m	struct:error_threadstate	typeref:typename:git_error	file:
error	my_project/libgit2/tests/clar/clar_libgit2.h	/^	int error;$/;"	m	struct:__anonbd488f430108	typeref:typename:int
error	my_project/libgit2/tests/libgit2/checkout/tree.c	/^	int error;$/;"	m	struct:checkout_cancel_at	typeref:typename:int	file:
error	my_project/libgit2/tests/libgit2/threads/refdb.c	/^	cl_git_thread_err error;$/;"	m	struct:th_data	typeref:typename:cl_git_thread_err	file:
error_invalid_local_file_uri	my_project/libgit2/src/util/fs_path.c	/^static int error_invalid_local_file_uri(const char *uri)$/;"	f	typeref:typename:int	file:
error_msg	my_project/libgit2/tests/clar/clar.c	/^	const char *error_msg;$/;"	m	struct:clar_error	typeref:typename:const char *	file:
error_msg	my_project/libgit2/tests/clar/clar_libgit2.h	/^	char error_msg[4096];$/;"	m	struct:__anonbd488f430108	typeref:typename:char[4096]
error_null_oid	my_project/libgit2/src/libgit2/odb.c	/^static int error_null_oid(int error, const char *message)$/;"	f	typeref:typename:int	file:
error_pos	my_project/libgit2/deps/llhttp/llhttp.h	/^  const char* error_pos;$/;"	m	struct:llhttp__internal_s	typeref:typename:const char *
error_texts	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const char error_texts[] =$/;"	v	typeref:typename:const char[]	file:
error_threadstate	my_project/libgit2/src/util/errors.c	/^struct error_threadstate {$/;"	s	file:
error_unmatch	my_project/libgit2/examples/ls-files.c	/^	int error_unmatch;$/;"	m	struct:ls_options	typeref:typename:int	file:
errors	my_project/libgit2/tests/clar/clar.c	/^	struct clar_error *errors;$/;"	m	struct:clar_report	typeref:struct:clar_error *	file:
escape	my_project/libgit2/tests/benchmarks/benchmark.sh	/^escape() {$/;"	f
escape_value	my_project/libgit2/src/libgit2/config_file.c	/^static char *escape_value(const char *ptr)$/;"	f	typeref:typename:char *	file:
escapes	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const short int escapes[] = {$/;"	v	typeref:typename:const short int[]	file:
ethereum	my_project/libgit2/FUNDING.json	/^    "ethereum": {$/;"	o	object:drips
events	my_project/libgit2/src/util/posix.h	/^	short events;$/;"	m	struct:pollfd	typeref:typename:short
evp_md5_fn	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	const EVP_MD *(*evp_md5_fn)(void);$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:const EVP_MD * (*)(void)
ex_data	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    CRYPTO_EX_DATA ex_data;$/;"	m	struct:bio_st	typeref:typename:CRYPTO_EX_DATA
exact_match	my_project/libgit2/src/libgit2/describe.c	/^	int exact_match;$/;"	m	struct:git_describe_result	typeref:typename:int	file:
exclude_env	my_project/libgit2/src/util/process.h	/^	             exclude_env : 1;$/;"	m	struct:__anon3c78bdc50108	typeref:typename:unsigned int:1
exec	my_project/libgit2/include/git2/rebase.h	/^	const char *exec;$/;"	m	struct:__anonf9a5428c0308	typeref:typename:const char *
executable_func	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^   void *executable_func;$/;"	m	union:PRIV::__anon4bd17169080a	typeref:typename:void *	file:
executable_func	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^   void *executable_func;$/;"	m	union:jit_machine_stack_exec::__anon4bd17169070a	typeref:typename:void *	file:
executable_func	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^   void *executable_func;$/;"	m	union:pcre_jit_exec::__anon4bd17169090a	typeref:typename:void *	file:
executable_funcs	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  void *executable_funcs[JIT_NUMBER_OF_COMPILE_MODES];$/;"	m	struct:executable_functions	typeref:typename:void * []	file:
executable_functions	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct executable_functions {$/;"	s	file:
executable_functions	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} executable_functions;$/;"	t	typeref:struct:executable_functions	file:
executable_jit	my_project/libgit2/deps/pcre/pcre.h	/^  void *executable_jit;           \/* Contains a pointer to a compiled jit code *\/$/;"	m	struct:pcre16_extra	typeref:typename:void *
executable_jit	my_project/libgit2/deps/pcre/pcre.h	/^  void *executable_jit;           \/* Contains a pointer to a compiled jit code *\/$/;"	m	struct:pcre32_extra	typeref:typename:void *
executable_jit	my_project/libgit2/deps/pcre/pcre.h	/^  void *executable_jit;           \/* Contains a pointer to a compiled jit code *\/$/;"	m	struct:pcre_extra	typeref:typename:void *
executable_sizes	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_uw executable_sizes[JIT_NUMBER_OF_COMPILE_MODES];$/;"	m	struct:executable_functions	typeref:typename:sljit_uw[]	file:
execute_test	my_project/libgit2/tests/libgit2/checkout/binaryunicode.c	/^static void execute_test(void)$/;"	f	typeref:typename:void	file:
exhaustive_commits	my_project/libgit2/tests/libgit2/graph/reachable_from_any.c	/^static int exhaustive_commits(const git_oid *id, void *payload)$/;"	f	typeref:typename:int	file:
exhaustive_state	my_project/libgit2/tests/libgit2/graph/reachable_from_any.c	/^struct exhaustive_state {$/;"	s	file:
exists_calls	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.h	/^	int exists_calls;$/;"	m	struct:__anon1e6212950208	typeref:typename:int
exists_prefix_calls	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.h	/^	int exists_prefix_calls;$/;"	m	struct:__anon1e6212950208	typeref:typename:int
exit_abruptly	my_project/libgit2/tests/libgit2/threads/basic.c	/^static void *exit_abruptly(void *param)$/;"	f	typeref:typename:void *	file:
exit_on_error	my_project/libgit2/tests/clar/clar.c	/^	int exit_on_error;$/;"	m	struct:__anon15d96e120108	typeref:typename:int	file:
exitcode	my_project/libgit2/src/util/process.h	/^	int exitcode;$/;"	m	struct:__anon3c78bdc50308	typeref:typename:int
expand_id_test_data	my_project/libgit2/tests/libgit2/odb/mixed.c	/^struct expand_id_test_data expand_id_test_data[] = {$/;"	v	typeref:struct:expand_id_test_data[]
expand_id_test_data	my_project/libgit2/tests/libgit2/odb/mixed.c	/^struct expand_id_test_data {$/;"	s	file:
expand_win32_path	my_project/libgit2/src/libgit2/sysdir.c	/^static int expand_win32_path(git_win32_path dest, const wchar_t *src)$/;"	f	typeref:typename:int	file:
expand_workspace	my_project/libgit2/deps/pcre/pcre_compile.c	/^expand_workspace(compile_data *cd)$/;"	f	typeref:typename:int	file:
expect	my_project/libgit2/tests/libgit2/diff/tree.c	/^static diff_expects expect;$/;"	v	typeref:typename:diff_expects	file:
expect	my_project/libgit2/tests/util/path/core.c	/^	char **expect;$/;"	m	struct:__anonb3a8d3310108	typeref:typename:char **	file:
expect_advance_into	my_project/libgit2/tests/libgit2/iterator/iterator_helpers.c	/^void expect_advance_into($/;"	f	typeref:typename:void
expect_advance_over	my_project/libgit2/tests/libgit2/iterator/iterator_helpers.c	/^void expect_advance_over($/;"	f	typeref:typename:void
expect_continue	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	         expect_continue : 1;      \/**< Use expect\/continue negotiation *\/$/;"	m	struct:__anon3d590bc30208	typeref:typename:unsigned:1
expect_decode_pass	my_project/libgit2/tests/util/str/percent.c	/^static void expect_decode_pass(const char *expected, const char *encoded)$/;"	f	typeref:typename:void	file:
expect_files_not_renamed	my_project/libgit2/tests/libgit2/diff/rename.c	/^static void expect_files_not_renamed(const char *one, const char *two, uint32_t whitespace_flags/;"	f	typeref:typename:void	file:
expect_files_renamed	my_project/libgit2/tests/libgit2/diff/rename.c	/^static void expect_files_renamed(const char *one, const char *two, uint32_t whitespace_flags)$/;"	f	typeref:typename:void	file:
expect_idx	my_project/libgit2/tests/util/path/core.c	/^	int expect_idx;$/;"	m	struct:__anonb3a8d3310108	typeref:typename:int	file:
expect_iterator_items	my_project/libgit2/tests/libgit2/iterator/iterator_helpers.c	/^void expect_iterator_items($/;"	f	typeref:typename:void
expect_pos	my_project/libgit2/tests/util/array.c	/^#define expect_pos(/;"	d	file:
expect_quote_pass	my_project/libgit2/tests/util/str/quote.c	/^static void expect_quote_pass(const char *expected, const char *str)$/;"	f	typeref:typename:void	file:
expect_unquote_fail	my_project/libgit2/tests/util/str/quote.c	/^static void expect_unquote_fail(const char *quoted)$/;"	f	typeref:typename:void	file:
expect_unquote_pass	my_project/libgit2/tests/util/str/quote.c	/^static void expect_unquote_pass(const char *expected, const char *quoted)$/;"	f	typeref:typename:void	file:
expectations	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^struct expectations {$/;"	s	file:
expected	my_project/libgit2/src/libgit2/status.c	/^	char *expected;$/;"	m	struct:status_file_info	typeref:typename:char *	file:
expected	my_project/libgit2/tests/libgit2/apply/apply_helpers.c	/^	struct merge_index_entry *expected;$/;"	m	struct:iterator_compare_data	typeref:struct:merge_index_entry *	file:
expected	my_project/libgit2/tests/libgit2/attr/attr_expect.h	/^	enum attr_expect_t expected;$/;"	m	struct:attr_expected	typeref:enum:attr_expect_t
expected	my_project/libgit2/tests/libgit2/diff/blob.c	/^static diff_expects expected;$/;"	v	typeref:typename:diff_expects	file:
expected	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^	int expected;$/;"	m	struct:prefix_count	typeref:typename:int	file:
expected	my_project/libgit2/tests/libgit2/ignore/status.c	/^		int expected;$/;"	m	struct:test_ignore_status__0::__anone6eef5b20108	typeref:typename:int	file:
expected	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^} expected[] = {$/;"	v	typeref:struct:__anonae472b4d0108[]
expected_commit_content	my_project/libgit2/tests/libgit2/rebase/sign.c	/^static const char *expected_commit_content = "\\$/;"	v	typeref:typename:const char *	file:
expected_entry	my_project/libgit2/tests/libgit2/config/memory.c	/^struct expected_entry {$/;"	s	file:
expected_entry	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^} expected_entry;$/;"	t	typeref:struct:__anon0731209b0108	file:
expected_entry_count	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^	int expected_entry_count;$/;"	m	struct:__anon6ff743e90108	typeref:typename:int
expected_files	my_project/libgit2/tests/libgit2/status/submodules.c	/^static const char *expected_files[] = {$/;"	v	typeref:typename:const char * []	file:
expected_fixture	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^static git_str expected_fixture = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
expected_fixture	my_project/libgit2/tests/libgit2/index/crlf.c	/^static git_str expected_fixture = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
expected_fsyncs	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static int expected_fsyncs = 2;$/;"	v	typeref:typename:int	file:
expected_fsyncs	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static int expected_fsyncs = 4;$/;"	v	typeref:typename:int	file:
expected_fsyncs_compress	my_project/libgit2/tests/libgit2/refs/create.c	/^static int expected_fsyncs_create = 2, expected_fsyncs_compress = 1;$/;"	v	typeref:typename:int	file:
expected_fsyncs_compress	my_project/libgit2/tests/libgit2/refs/create.c	/^static int expected_fsyncs_create = 4, expected_fsyncs_compress = 2;$/;"	v	typeref:typename:int	file:
expected_fsyncs_create	my_project/libgit2/tests/libgit2/refs/create.c	/^static int expected_fsyncs_create = 2, expected_fsyncs_compress = 1;$/;"	v	typeref:typename:int	file:
expected_fsyncs_create	my_project/libgit2/tests/libgit2/refs/create.c	/^static int expected_fsyncs_create = 4, expected_fsyncs_compress = 2;$/;"	v	typeref:typename:int	file:
expected_id	my_project/libgit2/tests/libgit2/odb/mixed.c	/^	char *expected_id;$/;"	m	struct:expand_id_test_data	typeref:typename:char *	file:
expected_index_0	my_project/libgit2/tests/libgit2/iterator/index.c	/^static const char *expected_index_0[] = {$/;"	v	typeref:typename:const char * []	file:
expected_index_1	my_project/libgit2/tests/libgit2/iterator/index.c	/^static const char *expected_index_1[] = {$/;"	v	typeref:typename:const char * []	file:
expected_index_ci	my_project/libgit2/tests/libgit2/iterator/index.c	/^static const char *expected_index_ci[] = {$/;"	v	typeref:typename:const char * []	file:
expected_index_cs	my_project/libgit2/tests/libgit2/iterator/index.c	/^static const char *expected_index_cs[] = {$/;"	v	typeref:typename:const char * []	file:
expected_index_oids_0	my_project/libgit2/tests/libgit2/iterator/index.c	/^static const char *expected_index_oids_0[] = {$/;"	v	typeref:typename:const char * []	file:
expected_index_oids_1	my_project/libgit2/tests/libgit2/iterator/index.c	/^static const char* expected_index_oids_1[] = {$/;"	v	typeref:typename:const char * []	file:
expected_index_oids_range	my_project/libgit2/tests/libgit2/iterator/index.c	/^static const char *expected_index_oids_range[] = {$/;"	v	typeref:typename:const char * []	file:
expected_index_range	my_project/libgit2/tests/libgit2/iterator/index.c	/^static const char *expected_index_range[] = {$/;"	v	typeref:typename:const char * []	file:
expected_matches	my_project/libgit2/tests/libgit2/object/tag/list.c	/^	const size_t expected_matches;$/;"	m	struct:pattern_match_t	typeref:typename:const size_t	file:
expected_oids	my_project/libgit2/src/libgit2/indexer.c	/^	git_oidmap *expected_oids;$/;"	m	struct:git_indexer	typeref:typename:git_oidmap *	file:
expected_open_mwindow_files	my_project/libgit2/tests/libgit2/pack/filelimit.c	/^static size_t expected_open_mwindow_files = 0;$/;"	v	typeref:typename:size_t	file:
expected_patch_text	my_project/libgit2/tests/libgit2/diff/diffiter.c	/^static const char *expected_patch_text[8] = {$/;"	v	typeref:typename:const char * [8]	file:
expected_paths	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^	const char** expected_paths;$/;"	m	struct:__anon6ff743e90108	typeref:typename:const char **
expected_ref	my_project/libgit2/tests/libgit2/online/push_util.h	/^} expected_ref;$/;"	t	typeref:struct:__anonec09f7510308
expected_remote_name	my_project/libgit2/tests/libgit2/refs/branches/remote.c	/^static const char *expected_remote_name = "test";$/;"	v	typeref:typename:const char *	file:
expected_remote_name_length	my_project/libgit2/tests/libgit2/refs/branches/remote.c	/^static int expected_remote_name_length;$/;"	v	typeref:typename:int	file:
expected_results	my_project/libgit2/tests/libgit2/object/tag/list.c	/^	const char* expected_results[MAX_USED_TAGS];$/;"	m	struct:pattern_match_t	typeref:typename:const char * []	file:
expected_state	my_project/libgit2/src/libgit2/patch_parse.c	/^	parse_header_state expected_state;$/;"	m	struct:__anonddb10c3a0308	typeref:typename:parse_header_state	file:
expected_status	my_project/libgit2/tests/libgit2/status/submodules.c	/^static unsigned int expected_status[] = {$/;"	v	typeref:typename:unsigned int[]	file:
expected_status	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^enum expected_status {$/;"	g	file:
expected_statuses	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^	const unsigned int* expected_statuses;$/;"	m	struct:__anon6ff743e90108	typeref:typename:const unsigned int *
expected_str	my_project/libgit2/tests/libgit2/attr/attr_expect.h	/^	const char *expected_str;$/;"	m	struct:attr_expected	typeref:typename:const char *
expected_str	my_project/libgit2/tests/libgit2/revwalk/simplify.c	/^static const char *expected_str[] = {$/;"	v	typeref:typename:const char * []	file:
expected_tree_0	my_project/libgit2/tests/libgit2/iterator/tree.c	/^const char *expected_tree_0[] = {$/;"	v	typeref:typename:const char * []
expected_tree_1	my_project/libgit2/tests/libgit2/iterator/tree.c	/^const char *expected_tree_1[] = {$/;"	v	typeref:typename:const char * []
expected_tree_2	my_project/libgit2/tests/libgit2/iterator/tree.c	/^const char *expected_tree_2[] = {$/;"	v	typeref:typename:const char * []
expected_tree_3	my_project/libgit2/tests/libgit2/iterator/tree.c	/^const char *expected_tree_3[] = {$/;"	v	typeref:typename:const char * []
expected_tree_4	my_project/libgit2/tests/libgit2/iterator/tree.c	/^const char *expected_tree_4[] = {$/;"	v	typeref:typename:const char * []
expected_tree_ranged_0	my_project/libgit2/tests/libgit2/iterator/tree.c	/^const char *expected_tree_ranged_0[] = {$/;"	v	typeref:typename:const char * []
expected_tree_ranged_1	my_project/libgit2/tests/libgit2/iterator/tree.c	/^const char *expected_tree_ranged_1[] = {$/;"	v	typeref:typename:const char * []
expected_type	my_project/libgit2/tests/libgit2/odb/mixed.c	/^	git_object_t expected_type;$/;"	m	struct:expand_id_test_data	typeref:typename:git_object_t	file:
explicit	my_project/libgit2/tests/clar/clar.c	/^	struct clar_explicit *explicit;$/;"	m	struct:__anon15d96e120108	typeref:struct:clar_explicit *	file:
expr	my_project/libgit2/tests/clar/clar_libgit2.h	/^	const char *expr;$/;"	m	struct:__anonbd488f430108	typeref:typename:const char *
extension_size	my_project/libgit2/src/libgit2/index.c	/^	uint32_t extension_size;$/;"	m	struct:index_extension	typeref:typename:uint32_t	file:
externalConsole	my_project/libgit2/.vscode/launch.json	/^            "externalConsole": false,$/;"	b	object:configurations.0
external_flags	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 external_flags;       \/* External flag bits to be set *\/$/;"	m	struct:compile_data	typeref:typename:pcre_uint32
external_options	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 external_options;     \/* External (initial) options *\/$/;"	m	struct:compile_data	typeref:typename:pcre_uint32
extra	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned extra;             \/* extra bits needed *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
extra	my_project/libgit2/deps/zlib/zlib.h	/^    Bytef   *extra;     \/* pointer to extra field or Z_NULL if none *\/$/;"	m	struct:gz_header_s	typeref:typename:Bytef *
extra	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^		char extra[MY_MAX_FILENAME + 1];$/;"	m	struct:git_win32_leakcheck_stack_format::__anonc260a6b90108	typeref:typename:char[]	file:
extra	my_project/libgit2/tests/libgit2/core/oidmap.c	/^	size_t extra;$/;"	m	struct:__anon2599d8ed0108	typeref:typename:size_t	file:
extra_base	my_project/libgit2/deps/zlib/trees.c	/^    int     extra_base;          \/* base index for extra_bits *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:int	file:
extra_bits	my_project/libgit2/deps/zlib/trees.c	/^    const intf *extra_bits;      \/* extra bits for each code or NULL *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:const intf *	file:
extra_blbits	my_project/libgit2/deps/zlib/trees.c	/^local const int extra_blbits[BL_CODES]\/* extra bits for each bit length code *\/$/;"	v	typeref:typename:local const int[]
extra_dbits	my_project/libgit2/deps/zlib/trees.c	/^local const int extra_dbits[D_CODES] \/* extra bits for each distance code *\/$/;"	v	typeref:typename:local const int[]
extra_edge_list	my_project/libgit2/src/libgit2/commit_graph.h	/^	const unsigned char *extra_edge_list;$/;"	m	struct:git_commit_graph_file	typeref:typename:const unsigned char *
extra_lbits	my_project/libgit2/deps/zlib/trees.c	/^local const int extra_lbits[LENGTH_CODES] \/* extra bits for each length code *\/$/;"	v	typeref:typename:local const int[]
extra_len	my_project/libgit2/deps/zlib/zlib.h	/^    uInt    extra_len;  \/* extra field length (valid if extra != Z_NULL) *\/$/;"	m	struct:gz_header_s	typeref:typename:uInt
extra_max	my_project/libgit2/deps/zlib/zlib.h	/^    uInt    extra_max;  \/* space at extra (only when reading header) *\/$/;"	m	struct:gz_header_s	typeref:typename:uInt
extra_parents_index	my_project/libgit2/src/libgit2/commit_graph.h	/^	size_t extra_parents_index;$/;"	m	struct:git_commit_graph_entry	typeref:typename:size_t
extract_curly_braces_content	my_project/libgit2/src/libgit2/revparse.c	/^static int extract_curly_braces_content(git_str *buf, const char *spec, size_t *pos)$/;"	f	typeref:typename:int	file:
extract_how_many	my_project/libgit2/src/libgit2/revparse.c	/^static int extract_how_many(int *n, const char *spec, size_t *pos)$/;"	f	typeref:typename:int	file:
extract_path	my_project/libgit2/src/libgit2/revparse.c	/^static int extract_path(git_str *buf, const char *spec, size_t *pos)$/;"	f	typeref:typename:int	file:
extract_trailer_block	my_project/libgit2/src/libgit2/trailer.c	/^static char *extract_trailer_block(const char *message, size_t *len)$/;"	f	typeref:typename:char *	file:
extract_trimmed	my_project/libgit2/src/libgit2/signature.c	/^static char *extract_trimmed(const char *ptr, size_t len)$/;"	f	typeref:typename:char *	file:
f	my_project/libgit2/src/libgit2/crlf.c	/^	git_filter f;$/;"	m	struct:crlf_filter	typeref:typename:git_filter	file:
f	my_project/libgit2/src/util/rand.c	/^	double f;$/;"	m	union:__anon2fc93926010a	typeref:typename:double	file:
f	my_project/libgit2/src/util/win32/dir.h	/^	WIN32_FIND_DATAW f;$/;"	m	struct:__anon088cf8e70108	typeref:typename:WIN32_FIND_DATAW
fAutoDetect	my_project/libgit2/deps/winhttp/winhttp.h	/^    BOOL   fAutoDetect;$/;"	m	struct:__anon0b61ebe80508	typeref:typename:BOOL
fAutoLogonIfChallenged	my_project/libgit2/deps/winhttp/winhttp.h	/^    BOOL fAutoLogonIfChallenged;$/;"	m	struct:__anon0b61ebe80608	typeref:typename:BOOL
fail	my_project/libgit2/tests/util/assert.c	/^static const char *fail = "FAIL";$/;"	v	typeref:typename:const char *	file:
fail_certificate_check	my_project/libgit2/tests/libgit2/online/clone.c	/^static int fail_certificate_check(git_cert *cert, int valid, const char *host, void *payload)$/;"	f	typeref:typename:int	file:
failing_commit_cases	my_project/libgit2/tests/libgit2/commit/parse.c	/^static char *failing_commit_cases[] = {$/;"	v	typeref:typename:char * []	file:
failing_header_cases	my_project/libgit2/tests/libgit2/commit/parse.c	/^static parse_test_case failing_header_cases[] = {$/;"	v	typeref:typename:parse_test_case[]	file:
failing_signature_cases	my_project/libgit2/tests/libgit2/commit/parse.c	/^failing_signature_test_case failing_signature_cases[] = {$/;"	v	typeref:typename:failing_signature_test_case[]
failing_signature_test_case	my_project/libgit2/tests/libgit2/commit/parse.c	/^} failing_signature_test_case;$/;"	t	typeref:struct:__anon39d5c3ee0308	file:
failures	my_project/libgit2/src/libgit2/pathspec.h	/^	git_pathspec_string_array_t failures;$/;"	m	struct:git_pathspec_match_list	typeref:typename:git_pathspec_string_array_t
fake_backend	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.h	/^} fake_backend;$/;"	t	typeref:struct:__anon1e6212950208
fake_backend	my_project/libgit2/tests/libgit2/odb/sorting.c	/^} fake_backend;$/;"	t	typeref:struct:__anon5e7ea0850108	file:
fake_backend__exists	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.c	/^static int fake_backend__exists(git_odb_backend *backend, const git_oid *oid)$/;"	f	typeref:typename:int	file:
fake_backend__exists_prefix	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.c	/^static int fake_backend__exists_prefix($/;"	f	typeref:typename:int	file:
fake_backend__free	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.c	/^static void fake_backend__free(git_odb_backend *_backend)$/;"	f	typeref:typename:void	file:
fake_backend__read	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.c	/^static int fake_backend__read($/;"	f	typeref:typename:int	file:
fake_backend__read_header	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.c	/^static int fake_backend__read_header($/;"	f	typeref:typename:int	file:
fake_backend__read_prefix	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.c	/^static int fake_backend__read_prefix($/;"	f	typeref:typename:int	file:
fake_backend__refresh	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.c	/^static int fake_backend__refresh(git_odb_backend *backend)$/;"	f	typeref:typename:int	file:
fake_object	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.h	/^} fake_object;$/;"	t	typeref:struct:__anon1e6212950108
fake_remote	my_project/libgit2/tests/libgit2/refs/branches/delete.c	/^static git_reference *fake_remote;$/;"	v	typeref:typename:git_reference *	file:
fake_remote	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^static git_reference *fake_remote;$/;"	v	typeref:typename:git_reference *	file:
fake_remote	my_project/libgit2/tests/libgit2/refs/foreachglob.c	/^static git_reference *fake_remote;$/;"	v	typeref:typename:git_reference *	file:
fake_submod_cb	my_project/libgit2/tests/libgit2/submodule/nosubs.c	/^static int fake_submod_cb(git_submodule *sm, const char *n, void *p)$/;"	f	typeref:typename:int	file:
fake_wstream	my_project/libgit2/src/libgit2/odb.c	/^} fake_wstream;$/;"	t	typeref:struct:__anon3125c0850208	file:
fake_wstream__free	my_project/libgit2/src/libgit2/odb.c	/^static void fake_wstream__free(git_odb_stream *_stream)$/;"	f	typeref:typename:void	file:
fake_wstream__fwrite	my_project/libgit2/src/libgit2/odb.c	/^static int fake_wstream__fwrite(git_odb_stream *_stream, const git_oid *oid)$/;"	f	typeref:typename:int	file:
fake_wstream__write	my_project/libgit2/src/libgit2/odb.c	/^static int fake_wstream__write(git_odb_stream *_stream, const char *data, size_t len)$/;"	f	typeref:typename:int	file:
fall_back_to_classic_diff	my_project/libgit2/deps/xdiff/xhistogram.c	/^static int fall_back_to_classic_diff(xpparam_t const *xpp, xdfenv_t *env,$/;"	f	typeref:typename:int	file:
fall_back_to_classic_diff	my_project/libgit2/deps/xdiff/xpatience.c	/^static int fall_back_to_classic_diff(struct hashmap *map,$/;"	f	typeref:typename:int	file:
fallback	my_project/libgit2/src/libgit2/repository.c	/^	git_repository_item_t fallback;$/;"	m	struct:__anon453495b00108	typeref:typename:git_repository_item_t	file:
fallback_to_id	my_project/libgit2/src/libgit2/describe.c	/^	int fallback_to_id;$/;"	m	struct:git_describe_result	typeref:typename:int	file:
false	my_project/libgit2/deps/ntlmclient/compat.h	/^#  define false /;"	d
false	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define false /;"	d	file:
false	my_project/libgit2/src/util/cc-compat.h	/^#		define false /;"	d
fanout	my_project/libgit2/src/libgit2/indexer.c	/^	unsigned int fanout[256];$/;"	m	struct:git_indexer	typeref:typename:unsigned int[256]	file:
fast_fail_end_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 fast_fail_end_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
fast_fail_start_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 fast_fail_start_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
fast_forward_bc_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  pcre_uchar *fast_forward_bc_ptr;$/;"	m	struct:compiler_common	typeref:typename:pcre_uchar *	file:
fast_forward_first_char	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void fast_forward_first_char(compiler_common *common, pcre_uchar first_char,/;"	f	typeref:typename:SLJIT_INLINE void	file:
fast_forward_first_char2	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void fast_forward_first_char2(compiler_common *common, pcre_uchar char1, pcre_uchar char2/;"	f	typeref:typename:void	file:
fast_forward_first_char2_sse2	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void fast_forward_first_char2_sse2(compiler_common *common, pcre_uchar char1/;"	f	typeref:typename:SLJIT_INLINE void	file:
fast_forward_first_n_chars	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE BOOL fast_forward_first_n_chars(compiler_common *common)$/;"	f	typeref:typename:SLJIT_INLINE BOOL	file:
fast_forward_newline	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void fast_forward_newline(compiler_common *common)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
fast_forward_start_bits	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void fast_forward_start_bits(compiler_common *common, const sljit_u8 *start_/;"	f	typeref:typename:SLJIT_INLINE void	file:
fatal	my_project/libgit2/examples/common.c	/^void fatal(const char *message, const char *extra)$/;"	f	typeref:typename:void
favor	my_project/libgit2/deps/xdiff/xdiff.h	/^	int favor;$/;"	m	struct:s_xmparam	typeref:typename:int
favor	my_project/libgit2/include/git2/merge.h	/^	git_merge_file_favor_t favor;$/;"	m	struct:__anon1374edca0508	typeref:typename:git_merge_file_favor_t
favor	my_project/libgit2/src/libgit2/merge_driver.h	/^	git_merge_file_favor_t favor;$/;"	m	struct:git_merge_driver__builtin	typeref:typename:git_merge_file_favor_t
fbp_data	my_project/libgit2/src/libgit2/submodule.c	/^} fbp_data;$/;"	t	typeref:struct:__anon705203a00308	file:
fbuf	my_project/libgit2/src/libgit2/blob.c	/^	git_filebuf fbuf;$/;"	m	struct:__anon38237caf0108	typeref:typename:git_filebuf	file:
fbuf	my_project/libgit2/src/libgit2/odb_loose.c	/^	git_filebuf fbuf;$/;"	m	struct:__anon5ce333660208	typeref:typename:git_filebuf	file:
fc	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define fc /;"	d	file:
fc	my_project/libgit2/deps/zlib/deflate.h	/^    } fc;$/;"	m	struct:ct_data_s	typeref:union:ct_data_s::__anon0b76eeb2010a
fcc	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const  pcre_uint8 *fcc;         \/* Points to case-flipping table *\/$/;"	m	struct:match_data	typeref:typename:const pcre_uint8 *
fcc	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uint8 *fcc;            \/* Points to case-flipping table *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uint8 *
fcc	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  const sljit_u8 *fcc;$/;"	m	struct:compiler_common	typeref:typename:const sljit_u8 *	file:
fcc_offset	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define fcc_offset /;"	d
fd	my_project/libgit2/deps/zlib/gzguts.h	/^    int fd;                 \/* file descriptor *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:int
fd	my_project/libgit2/src/libgit2/checkout.c	/^	int fd;$/;"	m	struct:checkout_stream	typeref:typename:int	file:
fd	my_project/libgit2/src/libgit2/mwindow.h	/^	int fd;$/;"	m	struct:git_mwindow_file	typeref:typename:int
fd	my_project/libgit2/src/util/filebuf.h	/^	git_file fd;$/;"	m	struct:git_filebuf	typeref:typename:git_file
fd	my_project/libgit2/src/util/posix.h	/^	int fd;$/;"	m	struct:pollfd	typeref:typename:int
fd	my_project/libgit2/tests/util/ftruncate.c	/^static int fd = -1;$/;"	v	typeref:typename:int	file:
fd_is_open	my_project/libgit2/src/util/filebuf.h	/^	bool fd_is_open;$/;"	m	struct:git_filebuf	typeref:typename:bool
fdopen	my_project/libgit2/deps/zlib/zutil.h	/^#        define fdopen(/;"	d
fdopen	my_project/libgit2/deps/zlib/zutil.h	/^#    define fdopen(/;"	d
fdopen	my_project/libgit2/deps/zlib/zutil.h	/^#  define fdopen(/;"	d
feed_indexer	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static int feed_indexer(void *ptr, size_t len, void *payload)$/;"	f	typeref:typename:int	file:
fetch	my_project/libgit2/src/libgit2/remote.c	/^	int fetch;$/;"	m	struct:refspec_cb_data	typeref:typename:int	file:
fetch_opts	my_project/libgit2/include/git2/clone.h	/^	git_fetch_options fetch_opts;$/;"	m	struct:git_clone_options	typeref:typename:git_fetch_options
fetch_opts	my_project/libgit2/include/git2/submodule.h	/^	git_fetch_options fetch_opts;$/;"	m	struct:git_submodule_update_options	typeref:typename:git_fetch_options
fetch_progress	my_project/libgit2/examples/clone.c	/^	git_indexer_progress fetch_progress;$/;"	m	struct:progress_data	typeref:typename:git_indexer_progress	file:
fetch_progress	my_project/libgit2/examples/clone.c	/^static int fetch_progress(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
fetch_progress	my_project/libgit2/tests/libgit2/online/clone.c	/^static int fetch_progress(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
fetch_receiving	my_project/libgit2/src/cli/progress.c	/^static int fetch_receiving($/;"	f	typeref:typename:int	file:
fetch_recurse	my_project/libgit2/src/libgit2/submodule.h	/^	git_submodule_recurse_t fetch_recurse;$/;"	m	struct:git_submodule	typeref:typename:git_submodule_recurse_t
fetch_recurse_default	my_project/libgit2/src/libgit2/submodule.h	/^	git_submodule_recurse_t fetch_recurse_default;$/;"	m	struct:git_submodule	typeref:typename:git_submodule_recurse_t
fetch_refspecs	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^static const char *fetch_refspecs[] = {$/;"	v	typeref:typename:const char * []	file:
fetchhead_ref_cb	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static int fetchhead_ref_cb(const char *name, const char *url,$/;"	f	typeref:typename:int	file:
fetchhead_ref_cb_data	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^} fetchhead_ref_cb_data;$/;"	t	typeref:struct:__anonfaf9122d0108	file:
fetchhead_ref_parse	my_project/libgit2/src/libgit2/fetchhead.c	/^static int fetchhead_ref_parse($/;"	f	typeref:typename:int	file:
fetchhead_ref_write	my_project/libgit2/src/libgit2/fetchhead.c	/^static int fetchhead_ref_write($/;"	f	typeref:typename:int	file:
fetchhead_test_clone	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^static void fetchhead_test_clone(void)$/;"	f	typeref:typename:void	file:
fetchhead_test_fetch	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^static void fetchhead_test_fetch(const char *fetchspec, const char *expected_fetchhead)$/;"	f	typeref:typename:void	file:
fetchhead_vector	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^	git_vector *fetchhead_vector;$/;"	m	struct:__anonfaf9122d0108	typeref:typename:git_vector *	file:
fetchspec	my_project/libgit2/include/git2/remote.h	/^	const char *fetchspec;$/;"	m	struct:git_remote_create_options	typeref:typename:const char *
ff_newline_shortcut	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *ff_newline_shortcut;$/;"	m	struct:compiler_common	typeref:struct:sljit_label *	file:
fi	my_project/libgit2/deps/pcre/pcre_exec.c	/^#defin/;"	d	file:
file	my_project/libgit2/src/libgit2/attr_file.h	/^	git_attr_file *file[GIT_ATTR_FILE_NUM_SOURCES];$/;"	m	struct:git_attr_file_entry	typeref:typename:git_attr_file * []
file	my_project/libgit2/src/libgit2/commit_graph.h	/^	git_commit_graph_file *file;$/;"	m	struct:git_commit_graph	typeref:typename:git_commit_graph_file *
file	my_project/libgit2/src/libgit2/config_file.c	/^	config_file *file;$/;"	m	struct:__anon341047050208	typeref:typename:config_file *	file:
file	my_project/libgit2/src/libgit2/config_file.c	/^	config_file file;$/;"	m	struct:__anon341047050108	typeref:typename:config_file	file:
file	my_project/libgit2/src/libgit2/diff_file.h	/^	git_diff_file *file;$/;"	m	struct:__anonffb6e84d0108	typeref:typename:git_diff_file *
file	my_project/libgit2/src/libgit2/diff_tform.c	/^	git_diff_file *file;$/;"	m	struct:__anon258239f00108	typeref:typename:git_diff_file *	file:
file	my_project/libgit2/src/libgit2/index.h	/^	git_filebuf file;$/;"	m	struct:__anon5b50d90d0108	typeref:typename:git_filebuf
file	my_project/libgit2/src/libgit2/path.c	/^	const char *file;$/;"	m	struct:__anon58077f5d0208	typeref:typename:const char *	file:
file	my_project/libgit2/tests/clar/clar.c	/^	const char *file;$/;"	m	struct:clar_error	typeref:typename:const char *	file:
file	my_project/libgit2/tests/clar/clar_libgit2.h	/^	const char *file;$/;"	m	struct:__anonbd488f430108	typeref:typename:const char *
file	my_project/libgit2/tests/libgit2/checkout/index.c	/^	const char *file;$/;"	m	struct:notify_data	typeref:typename:const char *	file:
file	my_project/libgit2/tests/libgit2/object/raw/write.c	/^    char *file;   \/* object store filename                     *\/$/;"	m	struct:object_data	typeref:typename:char *	file:
file	my_project/libgit2/tests/libgit2/odb/alternates.c	/^static git_filebuf file;$/;"	v	typeref:typename:git_filebuf	file:
file	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^    char          *file;   \/* object store filename                     *\/$/;"	m	struct:object_data	typeref:typename:char *
file	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^	const char *file;$/;"	m	struct:__anon6ff743e90108	typeref:typename:const char *
file1	my_project/libgit2/deps/xdiff/xdiff.h	/^	const char *file1;	\/* label for mf1 *\/$/;"	m	struct:s_xmparam	typeref:typename:const char *
file2	my_project/libgit2/deps/xdiff/xdiff.h	/^	const char *file2;	\/* label for mf2 *\/$/;"	m	struct:s_xmparam	typeref:typename:const char *
file_cb	my_project/libgit2/src/libgit2/patch_generate.h	/^	git_diff_file_cb file_cb;$/;"	m	struct:git_patch_generated_output	typeref:typename:git_diff_file_cb
file_cb	my_project/libgit2/tests/libgit2/diff/binary.c	/^static int file_cb($/;"	f	typeref:typename:int	file:
file_cb	my_project/libgit2/tests/libgit2/diff/parse.c	/^static int file_cb(const git_diff_delta *delta, float progress, void *payload)$/;"	f	typeref:typename:int	file:
file_count	my_project/libgit2/examples/ls-files.c	/^	size_t file_count;$/;"	m	struct:ls_options	typeref:typename:size_t	file:
file_favor	my_project/libgit2/include/git2/merge.h	/^	git_merge_file_favor_t file_favor;$/;"	m	struct:__anon1374edca0708	typeref:typename:git_merge_file_favor_t
file_flags	my_project/libgit2/include/git2/merge.h	/^	uint32_t file_flags;$/;"	m	struct:__anon1374edca0708	typeref:typename:uint32_t
file_mode	my_project/libgit2/include/git2/checkout.h	/^	unsigned int file_mode; \/**< default is 0644 or 0755 as dictated by blob *\/$/;"	m	struct:git_checkout_options	typeref:typename:unsigned int
file_mode	my_project/libgit2/include/git2/odb_backend.h	/^	unsigned int file_mode;$/;"	m	struct:__anon6d9003760308	typeref:typename:unsigned int
file_mode	my_project/libgit2/src/libgit2/path.c	/^	uint16_t file_mode;$/;"	m	struct:__anon58077f5d0108	typeref:typename:uint16_t	file:
file_open_flags	my_project/libgit2/include/git2/checkout.h	/^	int file_open_flags;    \/**< default is O_CREAT | O_TRUNC | O_WRONLY *\/$/;"	m	struct:git_checkout_options	typeref:typename:int
file_opts	my_project/libgit2/src/libgit2/merge_driver.h	/^	const git_merge_file_options *file_opts;$/;"	m	struct:git_merge_driver_source	typeref:typename:const git_merge_file_options *
file_owner_sid	my_project/libgit2/src/util/fs_path.c	/^static int file_owner_sid(PSID *out, const char *path)$/;"	f	typeref:typename:int	file:
file_path_buf	my_project/libgit2/tests/libgit2/network/remote/local.c	/^static git_str file_path_buf = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
file_size	my_project/libgit2/include/git2/index.h	/^	uint32_t file_size;$/;"	m	struct:git_index_entry	typeref:typename:uint32_t
file_size	my_project/libgit2/src/libgit2/index.c	/^	uint32_t file_size;$/;"	m	struct:entry_common	typeref:typename:uint32_t	file:
file_size	my_project/libgit2/tests/libgit2/index/tests.c	/^   off64_t file_size;$/;"	m	struct:test_entry	typeref:typename:off64_t	file:
file_size	my_project/libgit2/tests/libgit2/index/tests256.c	/^   off64_t file_size;$/;"	m	struct:test_entry	typeref:typename:off64_t	file:
file_status	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	int file_status[11]; \/* indexed by git_delta_t value *\/$/;"	m	struct:__anone9d3a2f30108	typeref:typename:int[11]
file_url	my_project/libgit2/tests/libgit2/clone/local.c	/^static int file_url(git_str *buf, const char *host, const char *path)$/;"	f	typeref:typename:int	file:
filebuf_flags	my_project/libgit2/src/libgit2/odb_loose.c	/^static int filebuf_flags(loose_backend *backend)$/;"	f	typeref:typename:int	file:
filelen	my_project/libgit2/src/libgit2/path.c	/^	size_t filelen;$/;"	m	struct:__anon58077f5d0208	typeref:typename:size_t	file:
filemode	my_project/libgit2/include/git2/tree.h	/^	git_filemode_t filemode;$/;"	m	struct:__anona533f3ca0308	typeref:typename:git_filemode_t
filemode	my_project/libgit2/src/libgit2/filter.c	/^	uint16_t           filemode; \/* zero if unknown *\/$/;"	m	struct:git_filter_source	typeref:typename:uint16_t	file:
filemode_count	my_project/libgit2/tests/libgit2/status/worktree.c	/^static const int filemode_count = 8;$/;"	v	typeref:typename:const int	file:
filemode_paths	my_project/libgit2/tests/libgit2/status/worktree.c	/^static const char *filemode_paths[] = {$/;"	v	typeref:typename:const char * []	file:
filemode_statuses	my_project/libgit2/tests/libgit2/status/worktree.c	/^static unsigned int filemode_statuses[] = {$/;"	v	typeref:typename:unsigned int[]	file:
filename	my_project/libgit2/src/cli/cmd_index_pack.c	/^static char *filename;$/;"	v	typeref:typename:char *	file:
filename	my_project/libgit2/src/libgit2/attr_file.h	/^	const char *filename;$/;"	m	struct:__anon0df92d8f0208	typeref:typename:const char *
filename	my_project/libgit2/src/libgit2/commit_graph.h	/^	git_str filename;$/;"	m	struct:git_commit_graph	typeref:typename:git_str
filename	my_project/libgit2/src/libgit2/midx.h	/^	git_str filename;$/;"	m	struct:git_midx_file	typeref:typename:git_str
filename	my_project/libgit2/src/libgit2/tree.c	/^	const char *filename;$/;"	m	struct:tree_key_search	typeref:typename:const char *	file:
filename	my_project/libgit2/src/libgit2/tree.h	/^	const char *filename;$/;"	m	struct:git_tree_entry	typeref:typename:const char *
filename	my_project/libgit2/tests/clar/clar.c	/^	const char *filename;$/;"	m	struct:clar_summary	typeref:typename:const char *	file:
filename	my_project/libgit2/tests/clar/clar_libgit2.c	/^	const char *filename;$/;"	m	struct:__anonbd488f3e0108	typeref:typename:const char *	file:
filename	my_project/libgit2/tests/libgit2/checkout/tree.c	/^	const char *filename;$/;"	m	struct:checkout_cancel_at	typeref:typename:const char *	file:
filename	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^	const char *filename;$/;"	m	struct:__anon0731209b0108	typeref:typename:const char *	file:
filename	my_project/libgit2/tests/libgit2/object/tree/write.c	/^		const char *filename;$/;"	m	struct:test_object_tree_write__sorted_subtrees::__anon490e2c6b0108	typeref:typename:const char *	file:
filename	my_project/libgit2/tests/libgit2/object/tree/write.c	/^	const char *filename;$/;"	m	struct:__anon490e2c6b0208	typeref:typename:const char *	file:
filename	my_project/libgit2/tests/util/ftruncate.c	/^static const char *filename = "core_ftruncate.txt";$/;"	v	typeref:typename:const char *	file:
filename_len	my_project/libgit2/src/libgit2/tree.c	/^	uint16_t filename_len;$/;"	m	struct:tree_key_search	typeref:typename:uint16_t	file:
filename_len	my_project/libgit2/src/libgit2/tree.h	/^	uint16_t filename_len;$/;"	m	struct:git_tree_entry	typeref:typename:uint16_t
filename_len	my_project/libgit2/tests/clar/clar_libgit2.c	/^	size_t filename_len;$/;"	m	struct:__anonbd488f3e0108	typeref:typename:size_t	file:
filename_to_oid	my_project/libgit2/src/libgit2/odb_loose.c	/^GIT_INLINE(int) filename_to_oid(struct loose_backend *backend, git_oid *oid, const char *ptr)$/;"	f	typeref:typename:int
filenames	my_project/libgit2/src/cli/cmd_hash_object.c	/^static char **filenames;$/;"	v	typeref:typename:char **	file:
filepath	my_project/libgit2/tests/libgit2/odb/alternates.c	/^static git_str destpath, filepath;$/;"	v	typeref:typename:git_str	file:
files	my_project/libgit2/examples/ls-files.c	/^	char *files[1024];$/;"	m	struct:ls_options	typeref:typename:char * [1024]	file:
files	my_project/libgit2/src/libgit2/attr.c	/^	git_vector *files;$/;"	m	struct:__anon36621a0b0208	typeref:typename:git_vector *	file:
files	my_project/libgit2/src/libgit2/attrcache.h	/^	git_strmap *files;	 \/* hash path to git_attr_cache_entry records *\/$/;"	m	struct:__anon35c990e40108	typeref:typename:git_strmap *
files	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	int files;$/;"	m	struct:__anone9d3a2f30108	typeref:typename:int
files	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^	int files;$/;"	m	struct:treewalk_skip_data	typeref:typename:int	file:
files_are_equal	my_project/libgit2/tests/libgit2/index/tests.c	/^static void files_are_equal(const char *a, const char *b)$/;"	f	typeref:typename:void	file:
files_are_equal	my_project/libgit2/tests/libgit2/index/tests256.c	/^static void files_are_equal(const char *a, const char *b)$/;"	f	typeref:typename:void	file:
files_binary	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	int files_binary;$/;"	m	struct:__anone9d3a2f30108	typeref:typename:int
files_changed	my_project/libgit2/src/libgit2/diff_stats.c	/^	size_t files_changed;$/;"	m	struct:git_diff_stats	typeref:typename:size_t	file:
filestats	my_project/libgit2/src/libgit2/diff_stats.c	/^	diff_file_stats *filestats;$/;"	m	struct:git_diff_stats	typeref:typename:diff_file_stats *	file:
filesystem_iterator	my_project/libgit2/src/libgit2/iterator.c	/^} filesystem_iterator;$/;"	t	typeref:struct:__anon2f88b95a0808	file:
filesystem_iterator_advance	my_project/libgit2/src/libgit2/iterator.c	/^static int filesystem_iterator_advance($/;"	f	typeref:typename:int	file:
filesystem_iterator_advance_into	my_project/libgit2/src/libgit2/iterator.c	/^static int filesystem_iterator_advance_into($/;"	f	typeref:typename:int	file:
filesystem_iterator_advance_over	my_project/libgit2/src/libgit2/iterator.c	/^static int filesystem_iterator_advance_over($/;"	f	typeref:typename:int	file:
filesystem_iterator_clear	my_project/libgit2/src/libgit2/iterator.c	/^static void filesystem_iterator_clear(filesystem_iterator *iter)$/;"	f	typeref:typename:void	file:
filesystem_iterator_current	my_project/libgit2/src/libgit2/iterator.c	/^static int filesystem_iterator_current($/;"	f	typeref:typename:int	file:
filesystem_iterator_current_entry	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(filesystem_iterator_entry *) filesystem_iterator_current_entry($/;"	f	typeref:typename:filesystem_iterator_entry *
filesystem_iterator_current_frame	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(filesystem_iterator_frame *) filesystem_iterator_current_frame($/;"	f	typeref:typename:filesystem_iterator_frame *
filesystem_iterator_current_is_ignored	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(bool) filesystem_iterator_current_is_ignored($/;"	f	typeref:typename:bool
filesystem_iterator_entry	my_project/libgit2/src/libgit2/iterator.c	/^} filesystem_iterator_entry;$/;"	t	typeref:struct:__anon2f88b95a0608	file:
filesystem_iterator_entry_cmp	my_project/libgit2/src/libgit2/iterator.c	/^static int filesystem_iterator_entry_cmp(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
filesystem_iterator_entry_cmp_icase	my_project/libgit2/src/libgit2/iterator.c	/^static int filesystem_iterator_entry_cmp_icase(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
filesystem_iterator_entry_hash	my_project/libgit2/src/libgit2/iterator.c	/^static int filesystem_iterator_entry_hash($/;"	f	typeref:typename:int	file:
filesystem_iterator_entry_init	my_project/libgit2/src/libgit2/iterator.c	/^static int filesystem_iterator_entry_init($/;"	f	typeref:typename:int	file:
filesystem_iterator_examine_path	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(bool) filesystem_iterator_examine_path($/;"	f	typeref:typename:bool
filesystem_iterator_frame	my_project/libgit2/src/libgit2/iterator.c	/^} filesystem_iterator_frame;$/;"	t	typeref:struct:__anon2f88b95a0708	file:
filesystem_iterator_frame_pop	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(int) filesystem_iterator_frame_pop(filesystem_iterator *iter)$/;"	f	typeref:typename:int
filesystem_iterator_frame_pop_ignores	my_project/libgit2/src/libgit2/iterator.c	/^static void filesystem_iterator_frame_pop_ignores($/;"	f	typeref:typename:void	file:
filesystem_iterator_frame_push	my_project/libgit2/src/libgit2/iterator.c	/^static int filesystem_iterator_frame_push($/;"	f	typeref:typename:int	file:
filesystem_iterator_frame_push_ignores	my_project/libgit2/src/libgit2/iterator.c	/^static void filesystem_iterator_frame_push_ignores($/;"	f	typeref:typename:void	file:
filesystem_iterator_free	my_project/libgit2/src/libgit2/iterator.c	/^static void filesystem_iterator_free(git_iterator *i)$/;"	f	typeref:typename:void	file:
filesystem_iterator_init	my_project/libgit2/src/libgit2/iterator.c	/^static int filesystem_iterator_init(filesystem_iterator *iter)$/;"	f	typeref:typename:int	file:
filesystem_iterator_is_dir	my_project/libgit2/src/libgit2/iterator.c	/^static int filesystem_iterator_is_dir($/;"	f	typeref:typename:int	file:
filesystem_iterator_is_dot_git	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(bool) filesystem_iterator_is_dot_git($/;"	f	typeref:typename:bool
filesystem_iterator_is_submodule	my_project/libgit2/src/libgit2/iterator.c	/^static int filesystem_iterator_is_submodule($/;"	f	typeref:typename:int	file:
filesystem_iterator_parent_frame	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(filesystem_iterator_frame *) filesystem_iterator_parent_frame($/;"	f	typeref:typename:filesystem_iterator_frame *
filesystem_iterator_reset	my_project/libgit2/src/libgit2/iterator.c	/^static int filesystem_iterator_reset(git_iterator *i)$/;"	f	typeref:typename:int	file:
filesystem_iterator_set_current	my_project/libgit2/src/libgit2/iterator.c	/^static void filesystem_iterator_set_current($/;"	f	typeref:typename:void	file:
filesystem_iterator_update_ignored	my_project/libgit2/src/libgit2/iterator.c	/^static void filesystem_iterator_update_ignored(filesystem_iterator *iter)$/;"	f	typeref:typename:void	file:
fill_conflict_hunk	my_project/libgit2/deps/xdiff/xmerge.c	/^static int fill_conflict_hunk(xdfenv_t *xe1, const char *name1,$/;"	f	typeref:typename:int	file:
fill_hashmap	my_project/libgit2/deps/xdiff/xpatience.c	/^static int fill_hashmap(xpparam_t const *xpp, xdfenv_t *env,$/;"	f	typeref:typename:int	file:
fill_index_wth_head_entries	my_project/libgit2/tests/libgit2/status/worktree_init.c	/^static void fill_index_wth_head_entries(git_repository *repo, git_index *index)$/;"	f	typeref:typename:void	file:
fill_origin_blob	my_project/libgit2/src/libgit2/blame_git.c	/^static void fill_origin_blob(git_blame__origin *o, mmfile_t *file)$/;"	f	typeref:typename:void	file:
fill_window	my_project/libgit2/deps/zlib/deflate.c	/^local void fill_window(deflate_state *s) {$/;"	f	typeref:typename:local void
filled	my_project/libgit2/src/libgit2/pack-objects.h	/^	             filled:1;$/;"	m	struct:git_pobject	typeref:typename:unsigned int:1
filter	my_project/libgit2/src/libgit2/filter.c	/^	git_filter *filter;$/;"	m	struct:__anon9372afd60108	typeref:typename:git_filter *	file:
filter	my_project/libgit2/src/libgit2/filter.c	/^	git_filter *filter;$/;"	m	struct:__anon9372afd60208	typeref:typename:git_filter *	file:
filter	my_project/libgit2/src/libgit2/filter.c	/^	git_filter *filter;$/;"	m	struct:buffered_stream	typeref:typename:git_filter *	file:
filter	my_project/libgit2/tests/clar/clar.c	/^	const char *filter;$/;"	m	struct:clar_explicit	typeref:typename:const char *	file:
filter_all	my_project/libgit2/tests/libgit2/diff/notify.c	/^static int filter_all($/;"	f	typeref:typename:int	file:
filter_def_filter_key_check	my_project/libgit2/src/libgit2/filter.c	/^static int filter_def_filter_key_check(const void *key, const void *fdef)$/;"	f	typeref:typename:int	file:
filter_def_name_key_check	my_project/libgit2/src/libgit2/filter.c	/^static int filter_def_name_key_check(const void *key, const void *fdef)$/;"	f	typeref:typename:int	file:
filter_def_priority_cmp	my_project/libgit2/src/libgit2/filter.c	/^static int filter_def_priority_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
filter_def_scan_attrs	my_project/libgit2/src/libgit2/filter.c	/^static int filter_def_scan_attrs($/;"	f	typeref:typename:int	file:
filter_def_set_attrs	my_project/libgit2/src/libgit2/filter.c	/^static void filter_def_set_attrs(git_filter_def *fdef)$/;"	f	typeref:typename:void	file:
filter_for	my_project/libgit2/tests/libgit2/filter/query.c	/^static int filter_for(const char *filename, const char *filter)$/;"	f	typeref:typename:int	file:
filter_initialize	my_project/libgit2/src/libgit2/filter.c	/^static int filter_initialize(git_filter_def *fdef)$/;"	f	typeref:typename:int	file:
filter_list_check_attributes	my_project/libgit2/src/libgit2/filter.c	/^static int filter_list_check_attributes($/;"	f	typeref:typename:int	file:
filter_list_new	my_project/libgit2/src/libgit2/filter.c	/^static int filter_list_new($/;"	f	typeref:typename:int	file:
filter_name	my_project/libgit2/src/libgit2/filter.c	/^	char *filter_name;$/;"	m	struct:__anon9372afd60208	typeref:typename:char *	file:
filter_name	my_project/libgit2/src/libgit2/filter.c	/^	const char *filter_name;$/;"	m	struct:__anon9372afd60108	typeref:typename:const char *	file:
filter_opts	my_project/libgit2/tests/libgit2/filter/bare.c	/^static git_blob_filter_options filter_opts = GIT_BLOB_FILTER_OPTIONS_INIT;$/;"	v	typeref:typename:git_blob_filter_options	file:
filter_refs	my_project/libgit2/src/libgit2/push.c	/^static int filter_refs(git_remote *remote)$/;"	f	typeref:typename:int	file:
filter_registry	my_project/libgit2/src/libgit2/filter.c	/^static struct git_filter_registry filter_registry;$/;"	v	typeref:struct:git_filter_registry	file:
filter_registry_find	my_project/libgit2/src/libgit2/filter.c	/^static int filter_registry_find(size_t *pos, const char *name)$/;"	f	typeref:typename:int	file:
filter_registry_insert	my_project/libgit2/src/libgit2/filter.c	/^static int filter_registry_insert($/;"	f	typeref:typename:int	file:
filter_registry_lookup	my_project/libgit2/src/libgit2/filter.c	/^static git_filter_def *filter_registry_lookup(size_t *pos, const char *name)$/;"	f	typeref:typename:git_filter_def *	file:
filter_streams_free	my_project/libgit2/src/libgit2/filter.c	/^static void filter_streams_free(git_vector *streams)$/;"	f	typeref:typename:void	file:
filter_wants	my_project/libgit2/src/libgit2/fetch.c	/^static int filter_wants(git_remote *remote, const git_fetch_options *opts)$/;"	f	typeref:typename:int	file:
filters	my_project/libgit2/src/libgit2/filter.c	/^	git_vector filters;$/;"	m	struct:git_filter_registry	typeref:typename:git_vector	file:
final	my_project/libgit2/src/libgit2/blame.h	/^	git_commit *final;$/;"	m	struct:git_blame	typeref:typename:git_commit *
final_blob	my_project/libgit2/src/libgit2/blame.h	/^	git_blob *final_blob;$/;"	m	struct:git_blame	typeref:typename:git_blob *
final_bracount	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int  final_bracount;              \/* Saved value after first pass *\/$/;"	m	struct:compile_data	typeref:typename:int
final_buf	my_project/libgit2/src/libgit2/blame.h	/^	const char *final_buf;$/;"	m	struct:git_blame	typeref:typename:const char *
final_buf_size	my_project/libgit2/src/libgit2/blame.h	/^	size_t final_buf_size;$/;"	m	struct:git_blame	typeref:typename:size_t
final_commit_id	my_project/libgit2/include/git2/blame.h	/^	git_oid final_commit_id;$/;"	m	struct:git_blame_hunk	typeref:typename:git_oid
final_signature	my_project/libgit2/include/git2/blame.h	/^	git_signature *final_signature;$/;"	m	struct:git_blame_hunk	typeref:typename:git_signature *
final_start_line_number	my_project/libgit2/include/git2/blame.h	/^	size_t final_start_line_number;$/;"	m	struct:git_blame_hunk	typeref:typename:size_t
find_backend_by_level	my_project/libgit2/src/libgit2/config.c	/^static int find_backend_by_level($/;"	f	typeref:typename:int	file:
find_blob	my_project/libgit2/src/libgit2/notes.c	/^static int find_blob(git_oid *blob, git_tree *tree, const char *target)$/;"	f	typeref:typename:int	file:
find_by_path	my_project/libgit2/src/libgit2/submodule.c	/^static int find_by_path(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
find_ceiling_dir_offset	my_project/libgit2/src/libgit2/repository.c	/^static size_t find_ceiling_dir_offset($/;"	f	typeref:typename:size_t	file:
find_child	my_project/libgit2/src/libgit2/tree-cache.c	/^static git_tree_cache *find_child($/;"	f	typeref:typename:git_tree_cache *	file:
find_commit_name	my_project/libgit2/src/libgit2/describe.c	/^static struct commit_name *find_commit_name($/;"	f	typeref:struct:commit_name *	file:
find_deltas	my_project/libgit2/src/libgit2/pack-objects.c	/^static int find_deltas(git_packbuilder *pb, git_pobject **list,$/;"	f	typeref:typename:int	file:
find_error_text	my_project/libgit2/deps/pcre/pcre_compile.c	/^find_error_text(int n)$/;"	f	typeref:typename:const char *	file:
find_evil	my_project/libgit2/tests/libgit2/submodule/escape.c	/^static int find_evil(git_submodule *sm, const char *name, void *payload)$/;"	f	typeref:typename:int	file:
find_firstassertedchar	my_project/libgit2/deps/pcre/pcre_compile.c	/^find_firstassertedchar(const pcre_uchar *code, pcre_int32 *flags,$/;"	f	typeref:typename:pcre_uint32	file:
find_fixedlength	my_project/libgit2/deps/pcre/pcre_compile.c	/^find_fixedlength(pcre_uchar *code, BOOL utf, BOOL atend, compile_data *cd,$/;"	f	typeref:typename:int	file:
find_func	my_project/libgit2/deps/xdiff/xdiff.h	/^	find_func_t find_func;$/;"	m	struct:s_xdemitconf	typeref:typename:find_func_t
find_func_priv	my_project/libgit2/deps/xdiff/xdiff.h	/^	void *find_func_priv;$/;"	m	struct:s_xdemitconf	typeref:typename:void *
find_func_t	my_project/libgit2/deps/xdiff/xdiff.h	/^typedef long (*find_func_t)(const char *line, long line_len, char *buffer, long buffer_size, voi/;"	t	typeref:typename:long (*)(const char * line,long line_len,char * buffer,long buffer_size,void * priv)
find_head	my_project/libgit2/src/libgit2/remote.c	/^static int find_head(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
find_hostkey_preference	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static void find_hostkey_preference($/;"	f	typeref:typename:void	file:
find_hunk_linenum	my_project/libgit2/src/libgit2/apply.c	/^static bool find_hunk_linenum($/;"	f	typeref:typename:bool	file:
find_last_in_target	my_project/libgit2/src/libgit2/blame_git.c	/^static bool find_last_in_target(size_t *out, git_blame *blame, git_blame__origin *target)$/;"	f	typeref:typename:bool	file:
find_lcs	my_project/libgit2/deps/xdiff/xhistogram.c	/^static int find_lcs(xpparam_t const *xpp, xdfenv_t *env,$/;"	f	typeref:typename:int	file:
find_locked	my_project/libgit2/src/libgit2/transaction.c	/^static int find_locked(transaction_node **out, git_transaction *tx, const char *refname)$/;"	f	typeref:typename:int	file:
find_longest_common_sequence	my_project/libgit2/deps/xdiff/xpatience.c	/^static int find_longest_common_sequence(struct hashmap *map, struct entry **res)$/;"	f	typeref:typename:int	file:
find_master_haacked	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static int find_master_haacked(const char *ref_name, const char *remote_url, const git_oid *oid,/;"	f	typeref:typename:int	file:
find_master_haacked_called	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static bool find_master_haacked_called;$/;"	v	typeref:typename:bool	file:
find_minlength	my_project/libgit2/deps/pcre/pcre_study.c	/^find_minlength(const REAL_PCRE *re, const pcre_uchar *code,$/;"	f	typeref:typename:int	file:
find_modules	my_project/libgit2/tests/clar/generate.py	/^    def find_modules(self):$/;"	m	class:TestSuite
find_naughty	my_project/libgit2/tests/libgit2/submodule/inject_option.c	/^static int find_naughty(git_submodule *sm, const char *name, void *payload)$/;"	f	typeref:typename:int	file:
find_next_dir	my_project/libgit2/src/libgit2/tree.c	/^static size_t find_next_dir(const char *dirname, git_index *index, size_t start)$/;"	f	typeref:typename:size_t	file:
find_origin	my_project/libgit2/src/libgit2/blame_git.c	/^static git_blame__origin *find_origin($/;"	f	typeref:typename:git_blame__origin *	file:
find_patch_start	my_project/libgit2/src/libgit2/trailer.c	/^static size_t find_patch_start(const char *str)$/;"	f	typeref:typename:size_t	file:
find_recurse	my_project/libgit2/deps/pcre/pcre_compile.c	/^find_recurse(const pcre_uchar *code, BOOL utf)$/;"	f	typeref:typename:const pcre_uchar *	file:
find_repo	my_project/libgit2/src/libgit2/repository.c	/^static int find_repo($/;"	f	typeref:typename:int	file:
find_repo_traverse	my_project/libgit2/src/libgit2/repository.c	/^static int find_repo_traverse($/;"	f	typeref:typename:int	file:
find_separator	my_project/libgit2/src/libgit2/trailer.c	/^static bool find_separator(size_t *out, const char *line, const char *separators)$/;"	f	typeref:typename:bool	file:
find_subtree_in_current_level	my_project/libgit2/src/libgit2/notes.c	/^static int find_subtree_in_current_level($/;"	f	typeref:typename:int	file:
find_subtree_r	my_project/libgit2/src/libgit2/notes.c	/^static int find_subtree_r(git_tree **out, git_tree *root,$/;"	f	typeref:typename:int	file:
find_sysdir_in_path	my_project/libgit2/src/libgit2/sysdir.c	/^static int find_sysdir_in_path(git_win32_path out)$/;"	f	typeref:typename:int	file:
find_sysdir_in_registry	my_project/libgit2/src/libgit2/sysdir.c	/^static int find_sysdir_in_registry(git_win32_path out)$/;"	f	typeref:typename:int	file:
find_tmp_file_recurs	my_project/libgit2/tests/libgit2/pack/indexer.c	/^static int find_tmp_file_recurs(void *opaque, git_str *path)$/;"	f	typeref:typename:int	file:
find_tmp_path	my_project/libgit2/tests/clar/clar/sandbox.h	/^find_tmp_path(char *buffer, size_t length)$/;"	f	typeref:typename:int
find_trailer_end	my_project/libgit2/src/libgit2/trailer.c	/^static size_t find_trailer_end(const char *buf, size_t len)$/;"	f	typeref:typename:size_t	file:
find_trailer_start	my_project/libgit2/src/libgit2/trailer.c	/^static size_t find_trailer_start(const char *buf, size_t len)$/;"	f	typeref:typename:size_t	file:
find_unique_abbrev_size	my_project/libgit2/src/libgit2/describe.c	/^static int find_unique_abbrev_size($/;"	f	typeref:typename:int	file:
find_win32_dirs	my_project/libgit2/src/libgit2/sysdir.c	/^static int find_win32_dirs($/;"	f	typeref:typename:int	file:
findopts	my_project/libgit2/examples/diff.c	/^	git_diff_find_options findopts;$/;"	m	struct:diff_options	typeref:typename:git_diff_find_options	file:
fingerprint_type_mask	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int fingerprint_type_mask(int keytype)$/;"	f	typeref:typename:int	file:
finish	my_project/libgit2/deps/llhttp/llhttp.h	/^  uint8_t finish;$/;"	m	struct:llhttp__internal_s	typeref:typename:uint8_t
finish_depth_computation	my_project/libgit2/src/libgit2/describe.c	/^static unsigned long finish_depth_computation($/;"	f	typeref:typename:unsigned long	file:
finish_done	my_project/libgit2/deps/zlib/deflate.c	/^    finish_done     \/* finish done, accept no more input or output *\/$/;"	e	enum:__anon0b76eead0103	file:
finish_hash	my_project/libgit2/src/util/hash/win32.c	/^	cng_finish_hash_fn finish_hash;$/;"	m	struct:cng_provider	typeref:typename:cng_finish_hash_fn	file:
finish_started	my_project/libgit2/deps/zlib/deflate.c	/^    finish_started, \/* finish started, need only more output at next deflate *\/$/;"	e	enum:__anon0b76eead0103	file:
first	my_project/libgit2/deps/xdiff/xpatience.c	/^	} *entries, *first, *last;$/;"	m	struct:hashmap	typeref:struct:hashmap::entry *	file:
first	my_project/libgit2/src/util/win32/dir.h	/^	int first;$/;"	m	struct:__anon088cf8e70108	typeref:typename:int
first	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^		const char *first;$/;"	m	struct:test_refs_branches_create__name_vs_namespace::item	typeref:typename:const char *	file:
first	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^		const char *first;$/;"	m	struct:test_refs_branches_create__name_vs_namespace_fail::item	typeref:typename:const char *	file:
first section	my_project/libgit2/tests/resources/userdiff/after/file.html	/^  <h1 id="first section">$/;"	I
first section	my_project/libgit2/tests/resources/userdiff/before/file.html	/^  <h1 id="first section">$/;"	I
first section	my_project/libgit2/tests/resources/userdiff/expected/driver/diff.html	/^@@ -13,2 +13,3 @@ <h1 id="first section">$/;"	I
first section	my_project/libgit2/tests/resources/userdiff/expected/driver/diff.html	/^@@ -5,4 +5,4 @@ <h1 id="first section">$/;"	I
first section	my_project/libgit2/tests/resources/userdiff/files/file.html	/^  <h1 id="first section">$/;"	I
firstByteMark	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^static const UTF8 firstByteMark[7] = { 0x00, 0x00, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC };$/;"	v	typeref:typename:const UTF8[7]	file:
first_alternate	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^		const char *first_alternate;$/;"	m	struct:test_refs_branches_create__name_vs_namespace_fail::item	typeref:typename:const char *	file:
first_char	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 first_char;         \/* Starting character *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
first_char	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 first_char;         \/* Starting character *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
first_entry	my_project/libgit2/src/libgit2/merge.c	/^	size_t first_entry;$/;"	m	struct:__anon7b397d600208	typeref:typename:size_t	file:
first_file	my_project/libgit2/src/libgit2/diff.c	/^	int first_file;$/;"	m	struct:patch_id_args	typeref:typename:int	file:
first_parent	my_project/libgit2/src/libgit2/revwalk.h	/^		first_parent: 1,$/;"	m	struct:git_revwalk	typeref:typename:unsigned:1
first_significant_code	my_project/libgit2/deps/pcre/pcre_compile.c	/^first_significant_code(const pcre_uchar *code, BOOL skipassert)$/;"	f	typeref:typename:const pcre_uchar *	file:
first_time	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^	bool first_time;$/;"	m	struct:__anon2bf18d4b0208	typeref:typename:bool	file:
first_tree	my_project/libgit2/tests/libgit2/object/tree/write.c	/^static const char *first_tree  = "181037049a54a1eb5fab404658a3a250b44335d7";$/;"	v	typeref:typename:const char *	file:
fix_path	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^static void fix_path(git_str *s)$/;"	f	typeref:typename:void	file:
fix_path	my_project/libgit2/tests/util/path/core.c	/^static void fix_path(git_str *s)$/;"	f	typeref:typename:void	file:
fix_thin_pack	my_project/libgit2/src/libgit2/indexer.c	/^static int fix_thin_pack(git_indexer *idx, git_indexer_progress *stats)$/;"	f	typeref:typename:int	file:
fixedtables	my_project/libgit2/deps/zlib/infback.c	/^local void fixedtables(struct inflate_state FAR *state) {$/;"	f	typeref:typename:local void
fixedtables	my_project/libgit2/deps/zlib/inflate.c	/^local void fixedtables(struct inflate_state FAR *state) {$/;"	f	typeref:typename:local void
fixture_path	my_project/libgit2/tests/clar/clar/fixtures.h	/^fixture_path(const char *base, const char *fixture_name)$/;"	f	typeref:typename:const char *
fixture_repo	my_project/libgit2/tests/libgit2/repo/template.c	/^static const char *fixture_repo;$/;"	v	typeref:typename:const char *	file:
fixture_templates	my_project/libgit2/tests/libgit2/repo/template.c	/^static const char *fixture_templates;$/;"	v	typeref:typename:const char *	file:
flag	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 flag;             \/* Set TRUE if recursive back ref *\/$/;"	m	struct:open_capitem	typeref:typename:pcre_uint16
flag_within	my_project/libgit2/src/libgit2/describe.c	/^	unsigned flag_within;$/;"	m	struct:possible_tag	typeref:typename:unsigned	file:
flags	my_project/libgit2/deps/llhttp/llhttp.h	/^  uint16_t flags;$/;"	m	struct:llhttp__internal_s	typeref:typename:uint16_t
flags	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^    unsigned long flags;$/;"	m	struct:env_md_ctx_st	typeref:typename:unsigned long
flags	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_client_flags flags;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_client_flags
flags	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	uint32_t flags;$/;"	m	struct:__anondc54b7e10408	typeref:typename:uint32_t
flags	my_project/libgit2/deps/pcre/pcre.h	/^  unsigned long int flags;        \/* Bits for which fields are set *\/$/;"	m	struct:pcre16_extra	typeref:typename:unsigned long int
flags	my_project/libgit2/deps/pcre/pcre.h	/^  unsigned long int flags;        \/* Bits for which fields are set *\/$/;"	m	struct:pcre32_extra	typeref:typename:unsigned long int
flags	my_project/libgit2/deps/pcre/pcre.h	/^  unsigned long int flags;        \/* Bits for which fields are set *\/$/;"	m	struct:pcre_extra	typeref:typename:unsigned long int
flags	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 flags;              \/* Private flags *\/$/;"	m	struct:pcre_study_data	typeref:typename:pcre_uint32
flags	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 flags;              \/* Private flags *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
flags	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 flags;              \/* Private flags *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint32
flags	my_project/libgit2/deps/xdiff/xdiff.h	/^	unsigned long flags;$/;"	m	struct:s_xdemitconf	typeref:typename:unsigned long
flags	my_project/libgit2/deps/xdiff/xdiff.h	/^	unsigned long flags;$/;"	m	struct:s_xpparam	typeref:typename:unsigned long
flags	my_project/libgit2/deps/xdiff/xprepare.c	/^	long flags;$/;"	m	struct:s_xdlclassifier	typeref:typename:long	file:
flags	my_project/libgit2/deps/zlib/inflate.h	/^    int flags;                  \/* gzip header method and flags, 0 if zlib, or$/;"	m	struct:inflate_state	typeref:typename:int
flags	my_project/libgit2/include/git2/apply.h	/^	unsigned int flags;$/;"	m	struct:__anon9141b5a00208	typeref:typename:unsigned int
flags	my_project/libgit2/include/git2/attr.h	/^	unsigned int flags;$/;"	m	struct:__anon790e91d50208	typeref:typename:unsigned int
flags	my_project/libgit2/include/git2/blame.h	/^	uint32_t flags;$/;"	m	struct:git_blame_options	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/blob.h	/^	uint32_t flags;$/;"	m	struct:__anon7acff4790208	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/deprecated.h	/^	uint32_t flags;$/;"	m	struct:__anon325f306b0208	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/diff.h	/^	uint32_t           flags;$/;"	m	struct:__anon7f3f1dd30408	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/diff.h	/^	uint32_t      flags;	   \/**< git_diff_flag_t values *\/$/;"	m	struct:__anon7f3f1dd30508	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/diff.h	/^	uint32_t flags;$/;"	m	struct:__anon7f3f1dd30608	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/diff.h	/^	uint32_t flags;$/;"	m	struct:__anon7f3f1dd30f08	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/email.h	/^	uint32_t flags;$/;"	m	struct:__anonbd19e2c20208	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/filter.h	/^	uint32_t flags;$/;"	m	struct:__anon331c2ce00308	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/index.h	/^	uint16_t flags;$/;"	m	struct:git_index_entry	typeref:typename:uint16_t
flags	my_project/libgit2/include/git2/merge.h	/^	uint32_t flags;$/;"	m	struct:__anon1374edca0508	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/merge.h	/^	uint32_t flags;$/;"	m	struct:__anon1374edca0708	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/odb_backend.h	/^	uint32_t flags;$/;"	m	struct:__anon6d9003760308	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/remote.h	/^	unsigned int flags;$/;"	m	struct:git_remote_create_options	typeref:typename:unsigned int
flags	my_project/libgit2/include/git2/repository.h	/^	uint32_t    flags;$/;"	m	struct:__anon67af0d3a0408	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/revparse.h	/^	unsigned int flags;$/;"	m	struct:__anonc6e279620208	typeref:typename:unsigned int
flags	my_project/libgit2/include/git2/stash.h	/^	uint32_t flags;$/;"	m	struct:git_stash_apply_options	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/stash.h	/^	uint32_t flags;$/;"	m	struct:git_stash_save_options	typeref:typename:uint32_t
flags	my_project/libgit2/include/git2/status.h	/^	unsigned int      flags;$/;"	m	struct:__anon6794a3fe0408	typeref:typename:unsigned int
flags	my_project/libgit2/include/git2/sys/config.h	/^	unsigned int flags;$/;"	m	struct:git_config_iterator	typeref:typename:unsigned int
flags	my_project/libgit2/include/git2/worktree.h	/^	uint32_t flags;$/;"	m	struct:git_worktree_prune_options	typeref:typename:uint32_t
flags	my_project/libgit2/src/cli/opt.h	/^	unsigned int flags;$/;"	m	struct:cli_opt_parser	typeref:typename:unsigned int
flags	my_project/libgit2/src/libgit2/attr_file.h	/^	unsigned int flags;$/;"	m	struct:__anon0df92d8f0308	typeref:typename:unsigned int
flags	my_project/libgit2/src/libgit2/branch.c	/^	unsigned int flags;$/;"	m	struct:__anon7d20e9de0108	typeref:typename:unsigned int	file:
flags	my_project/libgit2/src/libgit2/cache.h	/^	uint16_t     flags; \/* GIT_CACHE_STORE value *\/$/;"	m	struct:__anon6f0f98290208	typeref:typename:uint16_t
flags	my_project/libgit2/src/libgit2/commit.h	/^	unsigned int flags;$/;"	m	struct:__anon9e6354de0108	typeref:typename:unsigned int
flags	my_project/libgit2/src/libgit2/commit_list.h	/^			 flags : FLAG_BITS;$/;"	m	struct:git_commit_list_node	typeref:typename:unsigned int
flags	my_project/libgit2/src/libgit2/diff_driver.c	/^	int flags;$/;"	m	struct:__anon9fad28f40208	typeref:typename:int	file:
flags	my_project/libgit2/src/libgit2/diff_file.h	/^	uint32_t flags;$/;"	m	struct:__anonffb6e84d0108	typeref:typename:uint32_t
flags	my_project/libgit2/src/libgit2/diff_print.c	/^	uint32_t flags;$/;"	m	struct:__anon0d2887b50108	typeref:typename:uint32_t	file:
flags	my_project/libgit2/src/libgit2/index.c	/^	unsigned int flags;$/;"	m	struct:foreach_diff_data	typeref:typename:unsigned int	file:
flags	my_project/libgit2/src/libgit2/iterator.h	/^	unsigned int flags;$/;"	m	struct:__anon2f88b95f0408	typeref:typename:unsigned int
flags	my_project/libgit2/src/libgit2/iterator.h	/^	unsigned int flags;$/;"	m	struct:git_iterator	typeref:typename:unsigned int
flags	my_project/libgit2/src/libgit2/patch_generate.h	/^	uint32_t flags;$/;"	m	struct:git_patch_generated	typeref:typename:uint32_t
flags	my_project/libgit2/src/libgit2/path.c	/^	unsigned int flags;$/;"	m	struct:__anon58077f5d0108	typeref:typename:unsigned int	file:
flags	my_project/libgit2/src/libgit2/refdb_fs.c	/^	char flags;$/;"	m	struct:packref	typeref:typename:char	file:
flags	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int flags;                  \/* extra storage *\/$/;"	m	struct:bio_st	typeref:typename:int
flags	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    long flags;$/;"	m	struct:__anon6b5cad8b0108	typeref:typename:long
flags	my_project/libgit2/src/libgit2/submodule.h	/^	uint32_t flags;$/;"	m	struct:git_submodule	typeref:typename:uint32_t
flags	my_project/libgit2/src/libgit2/userdiff.h	/^	int flags;$/;"	m	struct:__anonf1be5fcd0108	typeref:typename:int
flags	my_project/libgit2/src/util/fs_path.h	/^	unsigned int flags;$/;"	m	struct:git_fs_path_diriter	typeref:typename:unsigned int
flags	my_project/libgit2/src/util/futils.c	/^	uint32_t flags;$/;"	m	struct:__anon45ee97580108	typeref:typename:uint32_t	file:
flags	my_project/libgit2/src/util/futils.c	/^	uint32_t flags;$/;"	m	struct:__anon45ee97580208	typeref:typename:uint32_t	file:
flags	my_project/libgit2/src/util/vector.h	/^	uint32_t flags;$/;"	m	struct:git_vector	typeref:typename:uint32_t
flags_extended	my_project/libgit2/include/git2/index.h	/^	uint16_t flags_extended;$/;"	m	struct:git_index_entry	typeref:typename:uint16_t
flattened	my_project/libgit2/src/libgit2/patch_generate.h	/^	git_pool flattened;$/;"	m	struct:git_patch_generated	typeref:typename:git_pool
flipped	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^static unsigned char flipped[] = {$/;"	v	typeref:typename:unsigned char[]	file:
fls_index	my_project/libgit2/src/util/win32/thread.c	/^static DWORD fls_index;$/;"	v	typeref:typename:DWORD	file:
flush	my_project/libgit2/src/util/zstream.h	/^	int flush;$/;"	m	struct:__anon596d958c0208	typeref:typename:int
flush_buffer	my_project/libgit2/src/util/filebuf.c	/^GIT_INLINE(int) flush_buffer(git_filebuf *file)$/;"	f	typeref:typename:int
flush_file_header	my_project/libgit2/src/libgit2/diff_print.c	/^GIT_INLINE(int) flush_file_header(const git_diff_delta *delta, diff_print_info *pi)$/;"	f	typeref:typename:int
flush_hunk	my_project/libgit2/src/libgit2/diff.c	/^static int flush_hunk(git_oid *result, struct patch_id_args *args)$/;"	f	typeref:typename:int	file:
flush_mode	my_project/libgit2/src/util/filebuf.h	/^	int flush_mode;$/;"	m	struct:git_filebuf	typeref:typename:int
flush_pending	my_project/libgit2/deps/zlib/deflate.c	/^local void flush_pending(z_streamp strm) {$/;"	f	typeref:typename:local void
flush_pkt	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int flush_pkt(git_pkt **out)$/;"	f	typeref:typename:int	file:
flush_stubs	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void flush_stubs(compiler_common *common)$/;"	f	typeref:typename:void	file:
fmh	my_project/libgit2/src/util/map.h	/^	HANDLE fmh; \/* file mapping handle *\/$/;"	m	struct:__anon84f933a40108	typeref:typename:HANDLE
fn	my_project/libgit2/examples/lg2.c	/^	git_command_fn fn;$/;"	m	struct:__anonbfe592f00108	typeref:typename:git_command_fn	file:
fn	my_project/libgit2/src/cli/cmd.h	/^	int (*fn)(int argc, char **argv);$/;"	m	struct:__anoncf5572f40108	typeref:typename:int (*)(int argc,char ** argv)
fn	my_project/libgit2/src/libgit2/patch_parse.c	/^	int(*fn)(git_patch_parsed *, git_patch_parse_ctx *);$/;"	m	struct:__anonddb10c3a0308	typeref:typename:int (*)(git_patch_parsed *,git_patch_parse_ctx *)	file:
fn	my_project/libgit2/src/libgit2/transport.c	/^	git_transport_cb fn;$/;"	m	struct:transport_definition	typeref:typename:git_transport_cb	file:
fn	my_project/libgit2/src/util/date.c	/^	void (*fn)(struct tm *, struct tm *, int *);$/;"	m	struct:special	typeref:typename:void (*)(struct tm *,struct tm *,int *)	file:
fn_locate_object_short_oid	my_project/libgit2/src/libgit2/odb_loose.c	/^static int fn_locate_object_short_oid(void *state, git_str *pathbuf) {$/;"	f	typeref:typename:int	file:
fn_returns_string	my_project/libgit2/tests/util/assert.c	/^static const char *fn_returns_string(const char *myarg)$/;"	f	typeref:typename:const char *	file:
fns	my_project/libgit2/src/libgit2/userdiff.h	/^	const char *fns;$/;"	m	struct:__anonf1be5fcd0108	typeref:typename:const char *
foc	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define foc /;"	d	file:
follow_and_lstat_link	my_project/libgit2/src/util/win32/posix_w32.c	/^static int follow_and_lstat_link(git_win32_path path, struct stat *buf)$/;"	f	typeref:typename:int	file:
follow_redirects	my_project/libgit2/include/git2/remote.h	/^	git_remote_redirect_t follow_redirects;$/;"	m	struct:__anon144be4e60808	typeref:typename:git_remote_redirect_t
follow_redirects	my_project/libgit2/include/git2/remote.h	/^	git_remote_redirect_t follow_redirects;$/;"	m	struct:__anon144be4e60908	typeref:typename:git_remote_redirect_t
follow_redirects	my_project/libgit2/include/git2/remote.h	/^	git_remote_redirect_t follow_redirects;$/;"	m	struct:__anon144be4e60a08	typeref:typename:git_remote_redirect_t
forbidden_custom_headers	my_project/libgit2/src/libgit2/remote.c	/^static char *forbidden_custom_headers[] = {$/;"	v	typeref:typename:char * []	file:
force	my_project/libgit2/examples/checkout.c	/^	unsigned int force : 1;$/;"	m	struct:__anona3d43da10108	typeref:typename:unsigned int:1	file:
force	my_project/libgit2/examples/tag.c	/^	int force;$/;"	m	struct:tag_options	typeref:typename:int	file:
force	my_project/libgit2/src/libgit2/refspec.h	/^	unsigned int force :1,$/;"	m	struct:git_refspec	typeref:typename:unsigned int:1
force_create_file	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^static void force_create_file(const char *file)$/;"	f	typeref:typename:void	file:
forced_quit	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *forced_quit;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
forced_quit_label	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *forced_quit_label;$/;"	m	struct:compiler_common	typeref:struct:sljit_label *	file:
foreach_cancel_cb	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static int foreach_cancel_cb(void *buf, size_t len, void *payload)$/;"	f	typeref:typename:int	file:
foreach_cb	my_project/libgit2/fuzzers/config_file_fuzzer.c	/^static int foreach_cb(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
foreach_cb	my_project/libgit2/src/libgit2/odb_loose.c	/^static int foreach_cb(void *_state, git_str *path)$/;"	f	typeref:typename:int	file:
foreach_cb	my_project/libgit2/src/libgit2/transports/local.c	/^static int foreach_cb(void *buf, size_t len, void *payload)$/;"	f	typeref:typename:int	file:
foreach_cb	my_project/libgit2/tests/libgit2/config/stress.c	/^static int foreach_cb(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
foreach_cb	my_project/libgit2/tests/libgit2/odb/foreach.c	/^static int foreach_cb(const git_oid *oid, void *data)$/;"	f	typeref:typename:int	file:
foreach_cb	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static int foreach_cb(void *buf, size_t len, void *payload)$/;"	f	typeref:typename:int	file:
foreach_cb	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^static int foreach_cb(git_submodule *sm, const char *name, void *payload)$/;"	f	typeref:typename:int	file:
foreach_data	my_project/libgit2/src/libgit2/transports/local.c	/^typedef struct foreach_data {$/;"	s	file:
foreach_data	my_project/libgit2/src/libgit2/transports/local.c	/^} foreach_data;$/;"	t	typeref:struct:foreach_data	file:
foreach_diff_data	my_project/libgit2/src/libgit2/index.c	/^struct foreach_diff_data {$/;"	s	file:
foreach_object_dir_cb	my_project/libgit2/src/libgit2/odb_loose.c	/^static int foreach_object_dir_cb(void *_state, git_str *path)$/;"	f	typeref:typename:int	file:
foreach_reference_cb	my_project/libgit2/src/libgit2/transports/local.c	/^static int foreach_reference_cb(git_reference *reference, void *payload)$/;"	f	typeref:typename:int	file:
foreach_state	my_project/libgit2/src/libgit2/odb_loose.c	/^struct foreach_state {$/;"	s	file:
foreach_stop_cb	my_project/libgit2/tests/libgit2/odb/foreach.c	/^static int foreach_stop_cb(const git_oid *oid, void *data)$/;"	f	typeref:typename:int	file:
foreach_stop_cb_positive_ret	my_project/libgit2/tests/libgit2/odb/foreach.c	/^static int foreach_stop_cb_positive_ret(const git_oid *oid, void *data)$/;"	f	typeref:typename:int	file:
foreach_stop_first_cb	my_project/libgit2/tests/libgit2/odb/foreach.c	/^static int foreach_stop_first_cb(const git_oid *oid, void *data)$/;"	f	typeref:typename:int	file:
foreach_worktree_cb	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^static int foreach_worktree_cb(git_repository *worktree, void *payload)$/;"	f	typeref:typename:int	file:
format	my_project/libgit2/examples/diff.c	/^	git_diff_format_t format;$/;"	m	struct:diff_options	typeref:typename:git_diff_format_t	file:
format	my_project/libgit2/examples/status.c	/^	int format;$/;"	m	struct:status_opts	typeref:typename:int	file:
format	my_project/libgit2/src/libgit2/diff_print.c	/^	git_diff_format_t format;$/;"	m	struct:__anon0d2887b50108	typeref:typename:git_diff_format_t	file:
format_binary	my_project/libgit2/src/libgit2/diff_print.c	/^static int format_binary($/;"	f	typeref:typename:int	file:
format_header_field	my_project/libgit2/src/libgit2/commit.c	/^static int format_header_field(git_str *out, const char *field, const char *content)$/;"	f	typeref:typename:int	file:
format_options	my_project/libgit2/examples/describe.c	/^	git_describe_format_options format_options;$/;"	m	struct:describe_options	typeref:typename:git_describe_format_options	file:
found	my_project/libgit2/src/libgit2/attr.c	/^	git_attr_assignment *found;$/;"	m	struct:__anon36621a0b0108	typeref:typename:git_attr_assignment *	file:
found	my_project/libgit2/src/libgit2/odb_loose.c	/^	int found;$/;"	m	struct:__anon5ce333660408	typeref:typename:int	file:
found_collision	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^	int found_collision;$/;"	m	struct:__anon09d552690108	typeref:typename:int
found_haacked	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static bool found_haacked;$/;"	v	typeref:typename:bool	file:
found_master	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static bool found_master;$/;"	v	typeref:typename:bool	file:
found_order	my_project/libgit2/src/libgit2/describe.c	/^	int found_order;$/;"	m	struct:possible_tag	typeref:typename:int	file:
fp	my_project/libgit2/tests/clar/clar.c	/^	FILE *fp;$/;"	m	struct:clar_summary	typeref:typename:FILE *	file:
fprintf_delta	my_project/libgit2/tests/libgit2/diff/diff_helpers.c	/^static void fprintf_delta(FILE *fp, const git_diff_delta *delta, float progress)$/;"	f	typeref:typename:void	file:
fragment	my_project/libgit2/src/util/net.c	/^	const char *fragment;$/;"	m	struct:__anon850d8ea80108	typeref:typename:const char *	file:
fragment	my_project/libgit2/src/util/net.h	/^	char *fragment;$/;"	m	struct:git_net_url	typeref:typename:char *
fragment_len	my_project/libgit2/src/util/net.c	/^	size_t fragment_len;$/;"	m	struct:__anon850d8ea80108	typeref:typename:size_t	file:
frame_types	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^enum frame_types {$/;"	g	file:
frames	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^	void *frames[GIT_WIN32_LEAKCHECK_STACK_MAX_FRAMES];$/;"	m	struct:__anonc260a6be0108	typeref:typename:void * []
framesize	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^    int framesize;$/;"	m	union:bracket_backtrack::__anon4bd17169010a	typeref:typename:int	file:
framesize	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int framesize;$/;"	m	struct:assert_backtrack	typeref:typename:int	file:
framesize	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int framesize;$/;"	m	struct:bracketpos_backtrack	typeref:typename:int	file:
framesize	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int framesize;$/;"	m	struct:then_trap_backtrack	typeref:typename:int	file:
free	my_project/libgit2/src/libgit2/iterator.h	/^	void (*free)(git_iterator *);$/;"	m	struct:__anon2f88b95f0508	typeref:typename:void (*)(git_iterator *)
free	my_project/libgit2/src/libgit2/object.c	/^	void (*free)(void *self);$/;"	m	struct:__anonc130b1670108	typeref:typename:void (*)(void * self)	file:
free	my_project/libgit2/src/libgit2/transports/auth.h	/^	void (*free)(git_http_auth_context *ctx);$/;"	m	struct:git_http_auth_context	typeref:typename:void (*)(git_http_auth_context * ctx)
free_auth_context	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static void free_auth_context(git_http_server *server)$/;"	f	typeref:typename:void	file:
free_cache_object	my_project/libgit2/src/libgit2/pack.c	/^static void free_cache_object(void *o)$/;"	f	typeref:typename:void	file:
free_cred	my_project/libgit2/src/libgit2/transports/http.c	/^GIT_INLINE(void) free_cred(git_credential **cred)$/;"	f	typeref:typename:void
free_credentials	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static void free_credentials(ntlm_client *ntlm)$/;"	f	typeref:typename:void	file:
free_fn	my_project/libgit2/src/libgit2/diff.h	/^	void (*free_fn)(git_diff *diff);$/;"	m	struct:git_diff	typeref:typename:void (*)(git_diff * diff)
free_fn	my_project/libgit2/src/libgit2/patch.h	/^	void (*free_fn)(git_patch *patch);$/;"	m	struct:git_patch	typeref:typename:void (*)(git_patch * patch)
free_func	my_project/libgit2/deps/zlib/zconf.h	/^#  define free_func /;"	d
free_func	my_project/libgit2/deps/zlib/zlib.h	/^typedef void   (*free_func)(voidpf opaque, voidpf address);$/;"	t	typeref:typename:void (*)(voidpf opaque,voidpf address)
free_head	my_project/libgit2/src/libgit2/transports/local.c	/^static void free_head(git_remote_head *head)$/;"	f	typeref:typename:void	file:
free_heads	my_project/libgit2/src/libgit2/remote.c	/^static void free_heads(git_vector *heads)$/;"	f	typeref:typename:void	file:
free_heads	my_project/libgit2/src/libgit2/transports/local.c	/^static void free_heads(git_vector *heads)$/;"	f	typeref:typename:void	file:
free_hostname	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static void free_hostname(ntlm_client *ntlm)$/;"	f	typeref:typename:void	file:
free_hunk	my_project/libgit2/src/libgit2/blame.c	/^static void free_hunk(git_blame_hunk *hunk)$/;"	f	typeref:typename:void	file:
free_index	my_project/libgit2/deps/xdiff/xhistogram.c	/^static inline void free_index(struct histindex *index)$/;"	f	typeref:typename:void	file:
free_item	my_project/libgit2/src/util/sortedcache.h	/^	git_sortedcache_free_item_fn free_item;$/;"	m	struct:__anon21e0f34b0108	typeref:typename:git_sortedcache_free_item_fn
free_item_payload	my_project/libgit2/src/util/sortedcache.h	/^	void         *free_item_payload;$/;"	m	struct:__anon21e0f34b0108	typeref:typename:void *
free_lowest_entry	my_project/libgit2/src/libgit2/pack.c	/^static void free_lowest_entry(git_pack_cache *cache)$/;"	f	typeref:typename:void	file:
free_oids	my_project/libgit2/tests/libgit2/object/raw/short.c	/^static void free_oids(int n, char **oids)$/;"	f	typeref:typename:void	file:
free_read_only_data	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void free_read_only_data(void *current, void *allocator_data)$/;"	f	typeref:typename:void	file:
free_refspec	my_project/libgit2/src/libgit2/push.c	/^static void free_refspec(push_spec *spec)$/;"	f	typeref:typename:void	file:
free_refspecs	my_project/libgit2/src/libgit2/remote.c	/^static void free_refspecs(git_vector *vec)$/;"	f	typeref:typename:void	file:
free_stack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void free_stack(compiler_common *common, int size)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
free_submodule_names	my_project/libgit2/src/libgit2/submodule.c	/^static void free_submodule_names(git_strmap *names)$/;"	f	typeref:typename:void	file:
free_symrefs	my_project/libgit2/src/libgit2/transports/smart.c	/^static void free_symrefs(git_vector *symrefs)$/;"	f	typeref:typename:void	file:
free_trees	my_project/libgit2/tests/libgit2/threads/diff.c	/^static void free_trees(void)$/;"	f	typeref:typename:void	file:
free_unpacked	my_project/libgit2/src/libgit2/pack-objects.c	/^static size_t free_unpacked(struct unpacked *n)$/;"	f	typeref:typename:size_t	file:
freq	my_project/libgit2/deps/zlib/deflate.h	/^        ush  freq;       \/* frequency count *\/$/;"	m	union:ct_data_s::__anon0b76eeb2010a	typeref:typename:ush
from	my_project/libgit2/include/git2/revparse.h	/^	git_object *from;$/;"	m	struct:__anonc6e279620208	typeref:typename:git_object *
from_glob	my_project/libgit2/src/libgit2/revwalk.h	/^	int from_glob;$/;"	m	struct:__anoncf11cd510108	typeref:typename:int
from_hex	my_project/libgit2/src/util/util.h	/^static signed char from_hex[] = {$/;"	v	typeref:typename:signed char[]
from_prefix	my_project/libgit2/src/util/futils.c	/^	ssize_t from_prefix;$/;"	m	struct:__anon45ee97580208	typeref:typename:ssize_t	file:
fs__dotordotdot	my_project/libgit2/tests/clar/clar/fs.h	/^fs__dotordotdot(WCHAR *_tocheck)$/;"	f	typeref:typename:int
fs_copy	my_project/libgit2/tests/clar/clar/fs.h	/^fs_copy(const char *_source, const char *_dest)$/;"	f	typeref:typename:void
fs_copy	my_project/libgit2/tests/clar/clar/fs.h	/^fs_copy(const char *source, const char *_dest)$/;"	f	typeref:typename:void
fs_copydir_helper	my_project/libgit2/tests/clar/clar/fs.h	/^fs_copydir_helper(WCHAR *_wsource, WCHAR *_wdest)$/;"	f	typeref:typename:void
fs_copydir_helper	my_project/libgit2/tests/clar/clar/fs.h	/^fs_copydir_helper(const char *source, const char *dest, int dest_mode)$/;"	f	typeref:typename:void
fs_copyfile_helper	my_project/libgit2/tests/clar/clar/fs.h	/^fs_copyfile_helper(const char *source, size_t source_len, const char *dest, int dest_mode)$/;"	f	typeref:typename:void
fs_rm	my_project/libgit2/tests/clar/clar/fs.h	/^fs_rm(const char *_source)$/;"	f	typeref:typename:void
fs_rm	my_project/libgit2/tests/clar/clar/fs.h	/^fs_rm(const char *path)$/;"	f	typeref:typename:void
fs_rm_wait	my_project/libgit2/tests/clar/clar/fs.h	/^fs_rm_wait(WCHAR *_wpath)$/;"	f	typeref:typename:int
fs_rmdir_helper	my_project/libgit2/tests/clar/clar/fs.h	/^fs_rmdir_helper(WCHAR *_wsource)$/;"	f	typeref:typename:void
fs_rmdir_helper	my_project/libgit2/tests/clar/clar/fs.h	/^fs_rmdir_helper(const char *path)$/;"	f	typeref:typename:void
fs_rmdir_rmdir	my_project/libgit2/tests/clar/clar/fs.h	/^fs_rmdir_rmdir(WCHAR *_wpath)$/;"	f	typeref:typename:int
fsync	my_project/libgit2/src/libgit2/refdb_fs.c	/^	unsigned int fsync : 1,$/;"	m	struct:refdb_fs_backend	typeref:typename:unsigned int:1	file:
ftExpiry	my_project/libgit2/deps/winhttp/winhttp.h	/^    FILETIME ftExpiry;$/;"	m	struct:__anon0b61ebe80308	typeref:typename:FILETIME
ftStart	my_project/libgit2/deps/winhttp/winhttp.h	/^    FILETIME ftStart;$/;"	m	struct:__anon0b61ebe80308	typeref:typename:FILETIME
full	my_project/libgit2/src/libgit2/attr_file.h	/^	git_str  full;$/;"	m	struct:__anon0df92d8f0908	typeref:typename:git_str
full	my_project/libgit2/src/libgit2/oid.c	/^	int min_length, full;$/;"	m	struct:git_oid_shorten	typeref:typename:int	file:
fullpath	my_project/libgit2/src/libgit2/attr_file.h	/^	char fullpath[GIT_FLEX_ARRAY];$/;"	m	struct:git_attr_file_entry	typeref:typename:char[]
fullpath	my_project/libgit2/tests/benchmarks/benchmark.sh	/^fullpath() {$/;"	f
fullpath	my_project/libgit2/tests/benchmarks/benchmark_helpers.sh	/^fullpath() {$/;"	f
func	my_project/libgit2/deps/zlib/deflate.c	/^   compress_func func;$/;"	m	struct:config_s	typeref:typename:compress_func	file:
func	my_project/libgit2/tests/clar/clar_libgit2.h	/^	const char *func;$/;"	m	struct:__anonbd488f430108	typeref:typename:const char *
func	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^	const char *func;$/;"	m	struct:__anon6ff743e90108	typeref:typename:const char *
func_line	my_project/libgit2/deps/xdiff/xemit.c	/^struct func_line {$/;"	s	file:
function	my_project/libgit2/tests/clar/clar.c	/^	const char *function;$/;"	m	struct:clar_error	typeref:typename:const char *	file:
futils__error_cannot_rmdir	my_project/libgit2/src/util/futils.c	/^static int futils__error_cannot_rmdir(const char *path, const char *filemsg)$/;"	f	typeref:typename:int	file:
futils__rm_first_parent	my_project/libgit2/src/util/futils.c	/^static int futils__rm_first_parent(git_str *path, const char *ceiling)$/;"	f	typeref:typename:int	file:
futils__rmdir_data	my_project/libgit2/src/util/futils.c	/^} futils__rmdir_data;$/;"	t	typeref:struct:__anon45ee97580108	file:
futils__rmdir_empty_parent	my_project/libgit2/src/util/futils.c	/^static int futils__rmdir_empty_parent(void *opaque, const char *path)$/;"	f	typeref:typename:int	file:
futils__rmdir_recurs_foreach	my_project/libgit2/src/util/futils.c	/^static int futils__rmdir_recurs_foreach(void *opaque, git_str *path)$/;"	f	typeref:typename:int	file:
fuzzer_buffer	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^struct fuzzer_buffer {$/;"	s	file:
fuzzer_git_abort	my_project/libgit2/fuzzers/fuzzer_utils.c	/^void fuzzer_git_abort(const char *op)$/;"	f	typeref:typename:void
fuzzer_repo_init	my_project/libgit2/fuzzers/fuzzer_utils.c	/^git_repository *fuzzer_repo_init(void)$/;"	f	typeref:typename:git_repository *
fuzzer_stream	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^struct fuzzer_stream {$/;"	s	file:
fuzzer_stream_free	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^static void fuzzer_stream_free(git_smart_subtransport_stream *stream)$/;"	f	typeref:typename:void	file:
fuzzer_stream_new	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^static int fuzzer_stream_new($/;"	f	typeref:typename:int	file:
fuzzer_stream_read	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^static int fuzzer_stream_read(git_smart_subtransport_stream *stream,$/;"	f	typeref:typename:int	file:
fuzzer_stream_write	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^static int fuzzer_stream_write(git_smart_subtransport_stream *stream,$/;"	f	typeref:typename:int	file:
fuzzer_subtransport	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^struct fuzzer_subtransport {$/;"	s	file:
fuzzer_subtransport_action	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^static int fuzzer_subtransport_action($/;"	f	typeref:typename:int	file:
fuzzer_subtransport_cb	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^static int fuzzer_subtransport_cb($/;"	f	typeref:typename:int	file:
fuzzer_subtransport_close	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^static int fuzzer_subtransport_close(git_smart_subtransport *transport)$/;"	f	typeref:typename:int	file:
fuzzer_subtransport_free	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^static void fuzzer_subtransport_free(git_smart_subtransport *transport)$/;"	f	typeref:typename:void	file:
fuzzer_subtransport_new	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^static int fuzzer_subtransport_new($/;"	f	typeref:typename:int	file:
fuzzer_transport_cb	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^static int fuzzer_transport_cb(git_transport **out, git_remote *owner, void *param)$/;"	f	typeref:typename:int	file:
g_actualobject	my_project/libgit2/tests/libgit2/object/lookupbypath.c	/^						*g_actualobject;$/;"	v	typeref:typename:git_object *	file:
g_author	my_project/libgit2/tests/libgit2/commit/create.c	/^static git_signature *g_author, *g_committer;$/;"	v	typeref:typename:git_signature *	file:
g_aux_cb_alloc	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static git_win32_leakcheck_stack_aux_cb_alloc  g_aux_cb_alloc  = NULL;$/;"	v	typeref:typename:git_win32_leakcheck_stack_aux_cb_alloc	file:
g_aux_cb_lookup	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static git_win32_leakcheck_stack_aux_cb_lookup g_aux_cb_lookup = NULL;$/;"	v	typeref:typename:git_win32_leakcheck_stack_aux_cb_lookup	file:
g_blame	my_project/libgit2/tests/libgit2/blame/getters.c	/^git_blame *g_blame;$/;"	v	typeref:typename:git_blame *
g_blame	my_project/libgit2/tests/libgit2/blame/simple.c	/^static git_blame *g_blame;$/;"	v	typeref:typename:git_blame *	file:
g_blame	my_project/libgit2/tests/libgit2/mailmap/blame.c	/^static git_blame *g_blame;$/;"	v	typeref:typename:git_blame *	file:
g_bufferblame	my_project/libgit2/tests/libgit2/blame/buffer.c	/^static git_blame *g_fileblame, *g_bufferblame;$/;"	v	typeref:typename:git_blame *	file:
g_checkpoint_id	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static unsigned int g_checkpoint_id = 0; \/* to better label leak checkpoints *\/$/;"	v	typeref:typename:unsigned int	file:
g_child	my_project/libgit2/tests/libgit2/submodule/open.c	/^static git_repository *g_child;$/;"	v	typeref:typename:git_repository *	file:
g_committer	my_project/libgit2/tests/libgit2/commit/create.c	/^static git_signature *g_author, *g_committer;$/;"	v	typeref:typename:git_signature *	file:
g_config	my_project/libgit2/tests/libgit2/config/rename.c	/^static git_config *g_config = NULL;$/;"	v	typeref:typename:git_config *	file:
g_config	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^static git_config *g_config;$/;"	v	typeref:typename:git_config *	file:
g_count_total_allocs	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static unsigned int g_count_total_allocs = 0; \/* number of allocs seen *\/$/;"	v	typeref:typename:unsigned int	file:
g_crlf_filtered	my_project/libgit2/tests/libgit2/object/blob/filter.c	/^static git_str g_crlf_filtered[CRLF_NUM_TEST_OBJECTS] = {$/;"	v	typeref:typename:git_str[]	file:
g_crlf_filtered_stats	my_project/libgit2/tests/libgit2/object/blob/filter.c	/^static git_str_text_stats g_crlf_filtered_stats[CRLF_NUM_TEST_OBJECTS] = {$/;"	v	typeref:typename:git_str_text_stats[]	file:
g_crlf_oids	my_project/libgit2/tests/libgit2/object/blob/filter.c	/^static git_oid g_crlf_oids[CRLF_NUM_TEST_OBJECTS];$/;"	v	typeref:typename:git_oid[]	file:
g_crlf_raw	my_project/libgit2/tests/libgit2/object/blob/filter.c	/^static const char *g_crlf_raw[CRLF_NUM_TEST_OBJECTS] = {$/;"	v	typeref:typename:const char * []	file:
g_crlf_raw_len	my_project/libgit2/tests/libgit2/object/blob/filter.c	/^static off64_t g_crlf_raw_len[CRLF_NUM_TEST_OBJECTS] = {$/;"	v	typeref:typename:off64_t[]	file:
g_crtdbg_stacktrace_cs	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static CRITICAL_SECTION g_crtdbg_stacktrace_cs;$/;"	v	typeref:typename:CRITICAL_SECTION	file:
g_cs_end	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static unsigned int g_cs_end = MY_ROW_LIMIT;$/;"	v	typeref:typename:unsigned int	file:
g_cs_index	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static git_win32_leakcheck_stacktrace_row *g_cs_index[MY_ROW_LIMIT];$/;"	v	typeref:typename:git_win32_leakcheck_stacktrace_row * []	file:
g_cs_ins	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static unsigned int g_cs_ins = 0; \/* insertion point == unique allocs seen *\/$/;"	v	typeref:typename:unsigned int	file:
g_cs_rows	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static git_win32_leakcheck_stacktrace_row  g_cs_rows[MY_ROW_LIMIT];$/;"	v	typeref:typename:git_win32_leakcheck_stacktrace_row[]	file:
g_data	my_project/libgit2/tests/libgit2/object/cache.c	/^} g_data[] = {$/;"	v	typeref:struct:__anon393b45750108[]
g_email	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^static const char *g_email = "foo@example.com";$/;"	v	typeref:typename:const char *	file:
g_email	my_project/libgit2/tests/libgit2/repo/head.c	/^static const char *g_email = "foo@example.com";$/;"	v	typeref:typename:const char *	file:
g_empty_id	my_project/libgit2/tests/libgit2/index/collision.c	/^static git_oid g_empty_id;$/;"	v	typeref:typename:git_oid	file:
g_expected	my_project/libgit2/tests/libgit2/threads/refdb.c	/^static int g_expected = 0;$/;"	v	typeref:typename:int	file:
g_expectedobject	my_project/libgit2/tests/libgit2/object/lookupbypath.c	/^static git_object *g_expectedobject,$/;"	v	typeref:typename:git_object *	file:
g_fileblame	my_project/libgit2/tests/libgit2/blame/buffer.c	/^static git_blame *g_fileblame, *g_bufferblame;$/;"	v	typeref:typename:git_blame *	file:
g_global_path	my_project/libgit2/tests/libgit2/checkout/index.c	/^static git_str g_global_path = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
g_global_path	my_project/libgit2/tests/libgit2/repo/init.c	/^static git_str g_global_path = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
g_has_ssl	my_project/libgit2/tests/libgit2/online/badssl.c	/^static bool g_has_ssl = false;$/;"	v	typeref:typename:bool	file:
g_has_ssl	my_project/libgit2/tests/libgit2/online/badssl.c	/^static bool g_has_ssl = true;$/;"	v	typeref:typename:bool	file:
g_head_commit	my_project/libgit2/tests/libgit2/object/lookupbypath.c	/^static git_commit *g_head_commit;$/;"	v	typeref:typename:git_commit *	file:
g_idx	my_project/libgit2/tests/libgit2/index/bypath.c	/^static git_index *g_idx;$/;"	v	typeref:typename:git_index *	file:
g_index	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^static git_index *g_index;$/;"	v	typeref:typename:git_index *	file:
g_index	my_project/libgit2/tests/libgit2/index/add.c	/^static git_index *g_index = NULL;$/;"	v	typeref:typename:git_index *	file:
g_index	my_project/libgit2/tests/libgit2/index/collision.c	/^static git_index *g_index;$/;"	v	typeref:typename:git_index *	file:
g_index	my_project/libgit2/tests/libgit2/index/crlf.c	/^static git_index *g_index;$/;"	v	typeref:typename:git_index *	file:
g_limit_reached	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static bool g_limit_reached = false; \/* had allocs after we filled row table *\/$/;"	v	typeref:typename:bool	file:
g_mailmap	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^static git_mailmap *g_mailmap;$/;"	v	typeref:typename:git_mailmap *	file:
g_map	my_project/libgit2/tests/libgit2/core/oidmap.c	/^static git_oidmap *g_map;$/;"	v	typeref:typename:git_oidmap *	file:
g_module	my_project/libgit2/tests/libgit2/submodule/open.c	/^static git_submodule *g_module;$/;"	v	typeref:typename:git_submodule *	file:
g_obj	my_project/libgit2/tests/libgit2/refs/revparse.c	/^static git_object *g_obj;$/;"	v	typeref:typename:git_object *	file:
g_object	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static git_object *g_object;$/;"	v	typeref:typename:git_object *	file:
g_odb	my_project/libgit2/tests/libgit2/index/collision.c	/^static git_odb *g_odb;$/;"	v	typeref:typename:git_odb *	file:
g_odb	my_project/libgit2/tests/libgit2/odb/emptyobjects.c	/^git_odb *g_odb;$/;"	v	typeref:typename:git_odb *
g_options	my_project/libgit2/tests/libgit2/clone/empty.c	/^static git_clone_options g_options;$/;"	v	typeref:typename:git_clone_options	file:
g_options	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^static git_clone_options g_options;$/;"	v	typeref:typename:git_clone_options	file:
g_options	my_project/libgit2/tests/libgit2/online/clone.c	/^static git_clone_options g_options;$/;"	v	typeref:typename:git_clone_options	file:
g_options	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^static git_clone_options g_options;$/;"	v	typeref:typename:git_clone_options	file:
g_opts	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static git_checkout_options g_opts;$/;"	v	typeref:typename:git_checkout_options	file:
g_parent	my_project/libgit2/tests/libgit2/submodule/open.c	/^static git_repository *g_parent;$/;"	v	typeref:typename:git_repository *	file:
g_peel_repo	my_project/libgit2/tests/libgit2/refs/peel.c	/^static git_repository *g_peel_repo;$/;"	v	typeref:typename:git_repository *	file:
g_ref	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^static git_reference* g_ref;$/;"	v	typeref:typename:git_reference *	file:
g_reflog	my_project/libgit2/tests/libgit2/refs/reflog/drop.c	/^static git_reflog *g_reflog;$/;"	v	typeref:typename:git_reflog *	file:
g_remote	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^static git_remote* g_remote;$/;"	v	typeref:typename:git_remote *	file:
g_remote	my_project/libgit2/tests/libgit2/network/remote/defaultbranch.c	/^static git_remote *g_remote;$/;"	v	typeref:typename:git_remote *	file:
g_remote	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^static git_remote *g_remote;$/;"	v	typeref:typename:git_remote *	file:
g_repo	my_project/libgit2/tests/libgit2/attr/macro.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/attr/repo.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/blame/buffer.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/blame/harder.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/blame/simple.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/checkout/binaryunicode.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/checkout/head.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/checkout/index.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/clone/empty.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/commit/create.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/commit/parse.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/commit/signature.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/commit/write.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/config/rename.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/diff/blob.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/diff/drivers.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/diff/externalmodifications.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/diff/index.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/diff/notify.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/diff/patch.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/diff/pathspec.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/diff/rename.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/diff/submodules.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/diff/tree.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/diff/workdir.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/filter/bare.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/filter/blob.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/filter/crlf.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/filter/custom.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/filter/file.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/filter/ident.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/filter/query.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/filter/stream.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/filter/systemattrs.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/grafts/basic.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/grafts/shallow.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/ignore/path.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/ignore/status.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/index/add.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/index/addall.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/index/bypath.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/index/cache.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/index/collision.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/index/crlf.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/index/filemodes.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/index/racy.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/index/splitindex.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/index/version.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/iterator/index.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/iterator/tree.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/mailmap/blame.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/merge/annotated_commit.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/object/blob/filter.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/object/cache.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/object/lookup.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/object/lookup256.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/object/lookupbypath.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/object/peel.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/object/tag/list.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/object/tag/read.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/object/tag/write.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/object/tree/read.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/object/tree/update.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/object/tree/write.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/odb/emptyobjects.c	/^git_repository *g_repo;$/;"	v	typeref:typename:git_repository *
g_repo	my_project/libgit2/tests/libgit2/online/badssl.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/online/clone.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/online/customcert.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/perf/helper__perf__do_merge.c	/^static git_repository * g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/basic.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/branches/remote.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/create.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/delete.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/dup.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/list.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/lookup.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/namespaces.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/overwrite.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/pack.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/peel.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/races.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/read.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/reflog/drop.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/rename.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/revparse.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/setter.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/transactions.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/refs/update.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/repo/init.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/repo/shallow.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/status/renames.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/status/submodules.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/stress/diff.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/submodule/add.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/submodule/escape.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/submodule/init.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/submodule/inject_option.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/submodule/modify.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/submodule/repository_init.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/submodule/status.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/submodule/update.c	/^static git_repository *g_repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/threads/basic.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/threads/refdb.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo	my_project/libgit2/tests/libgit2/worktree/bare.c	/^static git_repository *g_repo;$/;"	v	typeref:typename:git_repository *	file:
g_repo_a	my_project/libgit2/tests/libgit2/network/remote/defaultbranch.c	/^static git_repository *g_repo_a, *g_repo_b;$/;"	v	typeref:typename:git_repository *	file:
g_repo_b	my_project/libgit2/tests/libgit2/network/remote/defaultbranch.c	/^static git_repository *g_repo_a, *g_repo_b;$/;"	v	typeref:typename:git_repository *	file:
g_repo_cloned	my_project/libgit2/tests/libgit2/clone/empty.c	/^static git_repository *g_repo_cloned;$/;"	v	typeref:typename:git_repository *	file:
g_root_tree	my_project/libgit2/tests/libgit2/object/lookupbypath.c	/^static git_tree *g_root_tree;$/;"	v	typeref:typename:git_tree *	file:
g_shallow_oid	my_project/libgit2/tests/libgit2/grafts/shallow.c	/^static git_oid g_shallow_oid;$/;"	v	typeref:typename:git_oid	file:
g_table	my_project/libgit2/tests/util/strmap.c	/^static git_strmap *g_table;$/;"	v	typeref:typename:git_strmap *	file:
g_transient_count_dedup_leaks	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static unsigned int g_transient_count_dedup_leaks = 0; \/* number of unique leaks *\/$/;"	v	typeref:typename:unsigned int	file:
g_transient_count_total_leaks	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static unsigned int g_transient_count_total_leaks = 0; \/* number of total leaks *\/$/;"	v	typeref:typename:unsigned int	file:
g_transient_leaks_since_mark	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static bool g_transient_leaks_since_mark = false; \/* payload for hook *\/$/;"	v	typeref:typename:bool	file:
g_tx	my_project/libgit2/tests/libgit2/refs/transactions.c	/^static git_transaction *g_tx;$/;"	v	typeref:typename:git_transaction *	file:
g_typechange_empty	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^static bool g_typechange_empty[] = {$/;"	v	typeref:typename:bool[]	file:
g_typechange_expected_conflicts	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^static const int g_typechange_expected_conflicts[] = {$/;"	v	typeref:typename:const int[]	file:
g_typechange_expected_untracked	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^static const int g_typechange_expected_untracked[] = {$/;"	v	typeref:typename:const int[]	file:
g_typechange_oids	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^static const char *g_typechange_oids[] = {$/;"	v	typeref:typename:const char * []	file:
g_umask	my_project/libgit2/tests/libgit2/repo/template.c	/^static mode_t g_umask = 0;$/;"	v	typeref:typename:mode_t	file:
g_win32_stack_initialized	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static bool   g_win32_stack_initialized = false;$/;"	v	typeref:typename:bool	file:
g_win32_stack_process	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static HANDLE g_win32_stack_process = INVALID_HANDLE_VALUE;$/;"	v	typeref:typename:HANDLE	file:
gbprop	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint8 gbprop;     \/* ucp_gbControl, etc. (grapheme break property) *\/$/;"	m	struct:__anon9562267c0608	typeref:typename:pcre_uint8
gen_bitlen	my_project/libgit2/deps/zlib/trees.c	/^local void gen_bitlen(deflate_state *s, tree_desc *desc) {$/;"	f	typeref:typename:local void
gen_codes	my_project/libgit2/deps/zlib/trees.c	/^local void gen_codes(ct_data *tree, int max_code, ushf *bl_count) {$/;"	f	typeref:typename:local void
gen_pktline	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int gen_pktline(git_str *buf, git_push *push)$/;"	f	typeref:typename:int	file:
gen_proto	my_project/libgit2/src/libgit2/transports/git.c	/^static int gen_proto(git_str *request, const char *cmd, const char *url)$/;"	f	typeref:typename:int	file:
gen_proto	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int gen_proto(git_str *request, const char *cmd, git_net_url *url)$/;"	f	typeref:typename:int	file:
gen_trees_header	my_project/libgit2/deps/zlib/trees.c	/^void gen_trees_header(void) {$/;"	f	typeref:typename:void
generate_asset	my_project/libgit2/script/release.py	/^def generate_asset(version, tree, archive_format):$/;"	f
generate_connect_request	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int generate_connect_request($/;"	f	typeref:typename:int	file:
generate_lm2_response	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_lm2_response(ntlm_client *ntlm,$/;"	f	typeref:typename:bool	file:
generate_lm_hash	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool generate_lm_hash($/;"	f	typeref:typename:bool	file:
generate_lm_response	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_lm_response(ntlm_client *ntlm)$/;"	f	typeref:typename:bool	file:
generate_nonce	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_nonce(ntlm_client *ntlm)$/;"	f	typeref:typename:bool	file:
generate_ntlm2_challengehash	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_ntlm2_challengehash($/;"	f	typeref:typename:bool	file:
generate_ntlm2_hash	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_ntlm2_hash($/;"	f	typeref:typename:bool	file:
generate_ntlm2_response	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_ntlm2_response(ntlm_client *ntlm)$/;"	f	typeref:typename:bool	file:
generate_ntlm_hash	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_ntlm_hash($/;"	f	typeref:typename:bool	file:
generate_ntlm_response	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_ntlm_response(ntlm_client *ntlm)$/;"	f	typeref:typename:bool	file:
generate_odd_parity	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static void generate_odd_parity(ntlm_des_block *block)$/;"	f	typeref:typename:void	file:
generate_relnotes	my_project/libgit2/script/release.py	/^def generate_relnotes(tree, version):$/;"	f
generate_request	my_project/libgit2/src/libgit2/transports/http.c	/^static int generate_request($/;"	f	typeref:typename:int	file:
generate_request	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int generate_request($/;"	f	typeref:typename:int	file:
generate_timestamp	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static bool generate_timestamp(ntlm_client *ntlm)$/;"	f	typeref:typename:bool	file:
generation	my_project/libgit2/src/libgit2/commit_graph.c	/^	uint32_t generation;$/;"	m	struct:packed_commit	typeref:typename:uint32_t	file:
generation	my_project/libgit2/src/libgit2/commit_graph.h	/^	size_t generation;$/;"	m	struct:git_commit_graph_entry	typeref:typename:size_t
generation	my_project/libgit2/src/libgit2/commit_list.h	/^	uint32_t generation;$/;"	m	struct:git_commit_list_node	typeref:typename:uint32_t
generation_number_commit_state	my_project/libgit2/src/libgit2/commit_graph.c	/^enum generation_number_commit_state {$/;"	g	file:
generator	my_project/libgit2/tests/resources/userdiff/after/file.php	/^    protected $generator;$/;"	v	class:Faker\\UniqueGenerator
generator	my_project/libgit2/tests/resources/userdiff/before/file.php	/^    protected $generator;$/;"	v	class:Faker\\UniqueGenerator
generator	my_project/libgit2/tests/resources/userdiff/files/file.php	/^    protected $generator;$/;"	v	class:Faker\\UniqueGenerator
get_allocation_granularity	my_project/libgit2/src/util/win32/map.c	/^static DWORD get_allocation_granularity(void)$/;"	f	typeref:typename:DWORD	file:
get_assign	my_project/libgit2/tests/libgit2/attr/file.c	/^#define get_assign(/;"	d	file:
get_buf_ptr	my_project/libgit2/tests/libgit2/diff/submodules.c	/^#define get_buf_ptr(/;"	d	file:
get_chr_property_list	my_project/libgit2/deps/pcre/pcre_compile.c	/^get_chr_property_list(const pcre_uchar *code, BOOL utf,$/;"	f	typeref:typename:const pcre_uchar *	file:
get_class_iterator_size	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static int get_class_iterator_size(pcre_uchar *cc)$/;"	f	typeref:typename:int	file:
get_commit_index	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static int get_commit_index(git_oid *raw_oid)$/;"	f	typeref:typename:int	file:
get_config	my_project/libgit2/src/cli/cmd_config.c	/^static int get_config(git_config *config)$/;"	f	typeref:typename:int	file:
get_crc_table	my_project/libgit2/deps/zlib/crc32.c	/^const z_crc_t FAR * ZEXPORT get_crc_table(void) {$/;"	f	typeref:typename:const z_crc_t FAR * ZEXPORT
get_crc_table	my_project/libgit2/deps/zlib/zconf.h	/^#  define get_crc_table /;"	d
get_delta	my_project/libgit2/src/libgit2/pack-objects.c	/^static int get_delta(void **out, git_odb *odb, git_pobject *po)$/;"	f	typeref:typename:int	file:
get_delta_base	my_project/libgit2/src/libgit2/pack.c	/^int get_delta_base($/;"	f	typeref:typename:int
get_entry	my_project/libgit2/src/libgit2/config.c	/^static int get_entry($/;"	f	typeref:typename:int	file:
get_filename	my_project/libgit2/tests/libgit2/checkout/icase.c	/^static char *get_filename(const char *in)$/;"	f	typeref:typename:char *	file:
get_first_set	my_project/libgit2/deps/pcre/pcre_get.c	/^get_first_set(const pcre *code, const char *stringname, int *ovector,$/;"	f	typeref:typename:int	file:
get_framesize	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static int get_framesize(compiler_common *common, pcre_uchar *cc, pcre_uchar *ccend, BOOL recurs/;"	f	typeref:typename:int	file:
get_func_line	my_project/libgit2/deps/xdiff/xemit.c	/^static long get_func_line(xdfenv_t *xe, xdemitconf_t const *xecfg,$/;"	f	typeref:typename:long	file:
get_idx_path	my_project/libgit2/src/libgit2/odb_pack.c	/^static int get_idx_path($/;"	f	typeref:typename:int	file:
get_indent	my_project/libgit2/deps/xdiff/xdiffi.c	/^static int get_indent(xrecord_t *rec)$/;"	f	typeref:typename:int	file:
get_index_path	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static void get_index_path(git_str *out, git_packbuilder *pb)$/;"	f	typeref:typename:void	file:
get_internal_ignores	my_project/libgit2/src/libgit2/ignore.c	/^static int get_internal_ignores(git_attr_file **out, git_repository *repo)$/;"	f	typeref:typename:int	file:
get_iterator_parameters	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *get_iterator_parameters(compiler_common *common, pcre_uchar *cc,/;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
get_name	my_project/libgit2/src/libgit2/describe.c	/^static int get_name(const char *refname, void *payload)$/;"	f	typeref:typename:int	file:
get_name_data	my_project/libgit2/src/libgit2/describe.c	/^struct get_name_data$/;"	s	file:
get_next	my_project/libgit2/src/libgit2/revwalk.h	/^	int (*get_next)(git_commit_list_node **, git_revwalk *);$/;"	m	struct:git_revwalk	typeref:typename:int (*)(git_commit_list_node **,git_revwalk *)
get_one_status	my_project/libgit2/src/libgit2/status.c	/^static int get_one_status(const char *path, unsigned int status, void *data)$/;"	f	typeref:typename:int	file:
get_one_test_cases	my_project/libgit2/tests/libgit2/attr/repo.c	/^static struct attr_expected get_one_test_cases[] = {$/;"	v	typeref:struct:attr_expected[]	file:
get_optional_config	my_project/libgit2/src/libgit2/remote.c	/^static int get_optional_config($/;"	f	typeref:typename:int	file:
get_othercase_range	my_project/libgit2/deps/pcre/pcre_compile.c	/^get_othercase_range(pcre_uint32 *cptr, pcre_uint32 d, pcre_uint32 *ocptr,$/;"	f	typeref:typename:int	file:
get_packfile_path	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static void get_packfile_path(git_str *out, git_packbuilder *pb)$/;"	f	typeref:typename:void	file:
get_page_size	my_project/libgit2/src/util/win32/map.c	/^static DWORD get_page_size(void)$/;"	f	typeref:typename:DWORD	file:
get_passwd_home	my_project/libgit2/src/libgit2/sysdir.c	/^static int get_passwd_home(git_str *out, uid_t uid)$/;"	f	typeref:typename:int	file:
get_private_data_copy_length	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE int get_private_data_copy_length(compiler_common *common, pcre_uchar *cc, pc/;"	f	typeref:typename:SLJIT_INLINE int	file:
get_property	my_project/libgit2/src/util/hash/win32.c	/^	cng_get_property_fn get_property;$/;"	m	struct:cng_provider	typeref:typename:cng_get_property_fn	file:
get_repeat_base	my_project/libgit2/deps/pcre/pcre_compile.c	/^get_repeat_base(pcre_uchar c)$/;"	f	typeref:typename:pcre_uchar	file:
get_revision	my_project/libgit2/src/libgit2/revwalk.c	/^static int get_revision(git_commit_list_node **out, git_revwalk *walk, git_commit_list **list)$/;"	f	typeref:typename:int	file:
get_rule	my_project/libgit2/tests/libgit2/attr/file.c	/^#define get_rule(/;"	d	file:
get_ssh_cmdline	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^static int get_ssh_cmdline($/;"	f	typeref:typename:int	file:
get_status	my_project/libgit2/tests/libgit2/pack/threadsafety.c	/^static void *get_status(void *arg)$/;"	f	typeref:typename:void *	file:
get_submodule_status	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.c	/^unsigned int get_submodule_status(git_repository *repo, const char *name)$/;"	f	typeref:typename:unsigned int
get_temp_file	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int get_temp_file(LPWSTR buffer, DWORD buffer_len_cch)$/;"	f	typeref:typename:int	file:
get_ucp	my_project/libgit2/deps/pcre/pcre_compile.c	/^get_ucp(const pcre_uchar **ptrptr, BOOL *negptr, unsigned int *ptypeptr,$/;"	f	typeref:typename:BOOL	file:
get_ucpname	my_project/libgit2/deps/pcre/pcre_printint.c	/^get_ucpname(unsigned int ptype, unsigned int pvalue)$/;"	f	typeref:typename:const char *	file:
get_url_base	my_project/libgit2/src/libgit2/submodule.c	/^static int get_url_base(git_str *url, git_repository *repo)$/;"	f	typeref:typename:int	file:
get_value	my_project/libgit2/src/libgit2/submodule.c	/^static int get_value(const char **out, git_config *cfg, git_str *buf, const char *name, const ch/;"	f	typeref:typename:int	file:
get_verb	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static const wchar_t *get_verb = L"GET";$/;"	v	typeref:typename:const wchar_t *	file:
get_working_dir	my_project.git/hooks/fsmonitor-watchman.sample	/^sub get_working_dir {$/;"	s
get_working_dir	my_project/libgit2/tests/resources/testrepo_256.git/hooks/fsmonitor-watchman.sample	/^sub get_working_dir {$/;"	s
get_writer	my_project/libgit2/src/libgit2/config.c	/^static git_config_backend *get_writer(git_config *config)$/;"	f	typeref:typename:git_config_backend *	file:
get_writer_instance	my_project/libgit2/src/libgit2/config.c	/^ static backend_instance *get_writer_instance(git_config *config)$/;"	f	typeref:typename:backend_instance *	file:
getfinalpath_w	my_project/libgit2/src/util/win32/posix_w32.c	/^static int getfinalpath_w($/;"	f	typeref:typename:int	file:
getseed	my_project/libgit2/src/util/rand.c	/^GIT_INLINE(int) getseed(uint64_t *seed)$/;"	f	typeref:typename:int
getucd	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *getucd;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
gfw_path_root	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^static git_str gfw_path_root = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
gfw_registry_root	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^static git_str gfw_registry_root = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
gid	my_project/libgit2/include/git2/index.h	/^	uint32_t gid;$/;"	m	struct:git_index_entry	typeref:typename:uint32_t
gid	my_project/libgit2/src/libgit2/index.c	/^	uint32_t gid;$/;"	m	struct:entry_common	typeref:typename:uint32_t	file:
git	my_project/libgit2/script/release.py	/^def git(*args):$/;"	f
git2_cli	my_project/libgit2/src/cli/CMakeLists.txt	/^add_executable(git2_cli ${CLI_SRC_C} ${CLI_SRC_OS} ${CLI_OBJECTS}$/;"	t
git__DIR	my_project/libgit2/src/util/win32/dir.h	/^} git__DIR;$/;"	t	typeref:struct:__anon088cf8e70108
git__add_int64_overflow	my_project/libgit2/src/util/integer.h	/^# define git__add_int64_overflow(/;"	d
git__add_int64_overflow	my_project/libgit2/src/util/integer.h	/^#define git__add_int64_overflow(/;"	d
git__add_int64_overflow	my_project/libgit2/src/util/integer.h	/^GIT_INLINE(bool) git__add_int64_overflow(int64_t *out, int64_t one, int64_t two)$/;"	f	typeref:typename:bool
git__add_int_overflow	my_project/libgit2/src/util/integer.h	/^# define git__add_int_overflow(/;"	d
git__add_int_overflow	my_project/libgit2/src/util/integer.h	/^#define git__add_int_overflow(/;"	d
git__add_int_overflow	my_project/libgit2/src/util/integer.h	/^GIT_INLINE(bool) git__add_int_overflow(int *out, int one, int two)$/;"	f	typeref:typename:bool
git__add_sizet_overflow	my_project/libgit2/src/util/integer.h	/^#  define git__add_sizet_overflow(/;"	d
git__add_sizet_overflow	my_project/libgit2/src/util/integer.h	/^# define git__add_sizet_overflow(/;"	d
git__add_sizet_overflow	my_project/libgit2/src/util/integer.h	/^GIT_INLINE(bool) git__add_sizet_overflow(size_t *out, size_t one, size_t two)$/;"	f	typeref:typename:bool
git__allocator	my_project/libgit2/src/util/alloc.c	/^git_allocator git__allocator = {$/;"	v	typeref:typename:git_allocator
git__bsearch	my_project/libgit2/src/util/util.c	/^int git__bsearch($/;"	f	typeref:typename:int
git__bsearch_r	my_project/libgit2/src/util/util.c	/^int git__bsearch_r($/;"	f	typeref:typename:int
git__calloc	my_project/libgit2/src/util/alloc.c	/^void *git__calloc(size_t nelem, size_t elsize)$/;"	f	typeref:typename:void *
git__clone	my_project/libgit2/src/libgit2/clone.c	/^static int git__clone($/;"	f	typeref:typename:int	file:
git__closedir	my_project/libgit2/src/util/win32/dir.c	/^int git__closedir(git__DIR *d)$/;"	f	typeref:typename:int
git__dirent	my_project/libgit2/src/util/win32/dir.h	/^struct git__dirent {$/;"	s
git__free	my_project/libgit2/src/util/alloc.h	/^GIT_INLINE(void) git__free(void *ptr)$/;"	f	typeref:typename:void
git__fromhex	my_project/libgit2/src/util/util.h	/^GIT_INLINE(int) git__fromhex(char h)$/;"	f	typeref:typename:int
git__getenv	my_project/libgit2/src/util/util.c	/^int git__getenv(git_str *out, const char *name)$/;"	f	typeref:typename:int
git__hash	my_project/libgit2/src/util/util.c	/^uint32_t git__hash(const void *key, int len, uint32_t seed)$/;"	f	typeref:typename:uint32_t
git__hash	my_project/libgit2/src/util/util.c	/^uint32_t git__hash(const void *key, int len, unsigned int seed)$/;"	f	typeref:typename:uint32_t
git__hexdump	my_project/libgit2/src/util/util.c	/^void git__hexdump(const char *buffer, size_t len)$/;"	f	typeref:typename:void
git__init_structure	my_project/libgit2/src/libgit2/common.h	/^GIT_INLINE(void) git__init_structure(void *structure, size_t len, unsigned int version)$/;"	f	typeref:typename:void
git__is_int	my_project/libgit2/src/util/integer.h	/^GIT_INLINE(int) git__is_int(int64_t p)$/;"	f	typeref:typename:int
git__is_sizet	my_project/libgit2/src/util/integer.h	/^GIT_INLINE(int) git__is_sizet(int64_t p)$/;"	f	typeref:typename:int
git__is_ssizet	my_project/libgit2/src/util/integer.h	/^GIT_INLINE(int) git__is_ssizet(size_t p)$/;"	f	typeref:typename:int
git__is_uint16	my_project/libgit2/src/util/integer.h	/^GIT_INLINE(int) git__is_uint16(size_t p)$/;"	f	typeref:typename:int
git__is_uint32	my_project/libgit2/src/util/integer.h	/^GIT_INLINE(int) git__is_uint32(size_t p)$/;"	f	typeref:typename:int
git__is_ulong	my_project/libgit2/src/util/integer.h	/^GIT_INLINE(int) git__is_ulong(int64_t p)$/;"	f	typeref:typename:int
git__isalnum	my_project/libgit2/src/util/ctype_compat.h	/^# define git__isalnum(/;"	d
git__isalnum	my_project/libgit2/src/util/ctype_compat.h	/^GIT_INLINE(bool) git__isalnum(int c)$/;"	f	typeref:typename:bool
git__isalpha	my_project/libgit2/src/util/ctype_compat.h	/^# define git__isalpha(/;"	d
git__isalpha	my_project/libgit2/src/util/ctype_compat.h	/^GIT_INLINE(bool) git__isalpha(int c)$/;"	f	typeref:typename:bool
git__isdigit	my_project/libgit2/src/util/ctype_compat.h	/^# define git__isdigit(/;"	d
git__isdigit	my_project/libgit2/src/util/ctype_compat.h	/^GIT_INLINE(bool) git__isdigit(int c)$/;"	f	typeref:typename:bool
git__ishex	my_project/libgit2/src/util/util.h	/^GIT_INLINE(int) git__ishex(const char *str)$/;"	f	typeref:typename:int
git__isprint	my_project/libgit2/src/util/ctype_compat.h	/^# define git__isprint(/;"	d
git__isprint	my_project/libgit2/src/util/ctype_compat.h	/^GIT_INLINE(bool) git__isprint(int c)$/;"	f	typeref:typename:bool
git__isspace	my_project/libgit2/src/util/ctype_compat.h	/^# define git__isspace(/;"	d
git__isspace	my_project/libgit2/src/util/ctype_compat.h	/^GIT_INLINE(bool) git__isspace(int c)$/;"	f	typeref:typename:bool
git__isspace_nonlf	my_project/libgit2/src/util/util.h	/^GIT_INLINE(bool) git__isspace_nonlf(int c)$/;"	f	typeref:typename:bool
git__iswildcard	my_project/libgit2/src/util/util.h	/^GIT_INLINE(bool) git__iswildcard(int c)$/;"	f	typeref:typename:bool
git__isxdigit	my_project/libgit2/src/util/ctype_compat.h	/^# define git__isxdigit(/;"	d
git__isxdigit	my_project/libgit2/src/util/ctype_compat.h	/^GIT_INLINE(bool) git__isxdigit(int c)$/;"	f	typeref:typename:bool
git__linenlen	my_project/libgit2/src/util/util.c	/^size_t git__linenlen(const char *buffer, size_t buffer_len)$/;"	f	typeref:typename:size_t
git__malloc	my_project/libgit2/src/util/alloc.h	/^GIT_INLINE(void *) git__malloc(size_t len)$/;"	f	typeref:typename:void *
git__mallocarray	my_project/libgit2/src/util/alloc.c	/^void *git__mallocarray(size_t nelem, size_t elsize)$/;"	f	typeref:typename:void *
git__memcmp4	my_project/libgit2/src/libgit2/pack.c	/^static int git__memcmp4(const void *a, const void *b) {$/;"	f	typeref:typename:int	file:
git__memmem	my_project/libgit2/src/util/util.c	/^const void * git__memmem(const void *haystack, size_t haystacklen,$/;"	f	typeref:typename:const void *
git__memrchr	my_project/libgit2/src/util/util.h	/^GIT_INLINE(const void *) git__memrchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:const void *
git__memzero	my_project/libgit2/src/util/util.h	/^GIT_INLINE(void) git__memzero(void *data, size_t size)$/;"	f	typeref:typename:void
git__mmap_alignment	my_project/libgit2/src/util/posix.c	/^int git__mmap_alignment(size_t *alignment)$/;"	f	typeref:typename:int
git__mmap_alignment	my_project/libgit2/src/util/unix/map.c	/^int git__mmap_alignment(size_t *alignment)$/;"	f	typeref:typename:int
git__mmap_alignment	my_project/libgit2/src/util/win32/map.c	/^int git__mmap_alignment(size_t *page_size)$/;"	f	typeref:typename:int
git__multiply_int64_overflow	my_project/libgit2/src/util/integer.h	/^#  define git__multiply_int64_overflow(/;"	d
git__multiply_int64_overflow	my_project/libgit2/src/util/integer.h	/^#define git__multiply_int64_overflow(/;"	d
git__multiply_int64_overflow	my_project/libgit2/src/util/integer.h	/^GIT_INLINE(bool) git__multiply_int64_overflow(int64_t *out, int64_t one, int64_t two)$/;"	f	typeref:typename:bool
git__multiply_sizet_overflow	my_project/libgit2/src/util/integer.h	/^#  define git__multiply_sizet_overflow(/;"	d
git__multiply_sizet_overflow	my_project/libgit2/src/util/integer.h	/^# define git__multiply_sizet_overflow(/;"	d
git__multiply_sizet_overflow	my_project/libgit2/src/util/integer.h	/^GIT_INLINE(bool) git__multiply_sizet_overflow(size_t *out, size_t one, size_t two)$/;"	f	typeref:typename:bool
git__mwindow_mutex	my_project/libgit2/src/libgit2/mwindow.c	/^git_mutex git__mwindow_mutex;$/;"	v	typeref:typename:git_mutex
git__next_line	my_project/libgit2/src/util/util.h	/^GIT_INLINE(const char *) git__next_line(const char *s)$/;"	f	typeref:typename:const char *
git__noop	my_project/libgit2/src/util/util.h	/^GIT_INLINE(int) git__noop(void) { return 0; }$/;"	f	typeref:typename:int
git__noop_args	my_project/libgit2/src/util/util.h	/^GIT_INLINE(int) git__noop_args(void *a, ...) { GIT_UNUSED(a); return 0; }$/;"	f	typeref:typename:int
git__online_cpus	my_project/libgit2/src/util/util.c	/^int git__online_cpus(void)$/;"	f	typeref:typename:int
git__opendir	my_project/libgit2/src/util/win32/dir.c	/^git__DIR *git__opendir(const char *dir)$/;"	f	typeref:typename:git__DIR *
git__pack_cache	my_project/libgit2/src/libgit2/mwindow.c	/^git_strmap *git__pack_cache = NULL;$/;"	v	typeref:typename:git_strmap *
git__page_size	my_project/libgit2/src/util/posix.c	/^int git__page_size(size_t *page_size)$/;"	f	typeref:typename:int
git__page_size	my_project/libgit2/src/util/unix/map.c	/^int git__page_size(size_t *page_size)$/;"	f	typeref:typename:int
git__page_size	my_project/libgit2/src/util/win32/map.c	/^int git__page_size(size_t *page_size)$/;"	f	typeref:typename:int
git__parse_bool	my_project/libgit2/src/util/util.c	/^int git__parse_bool(int *out, const char *value)$/;"	f	typeref:typename:int
git__percent_decode	my_project/libgit2/src/util/fs_path.c	/^int git__percent_decode(git_str *decoded_out, const char *input)$/;"	f	typeref:typename:int
git__prefixcmp	my_project/libgit2/src/util/util.c	/^int git__prefixcmp(const char *str, const char *prefix)$/;"	f	typeref:typename:int
git__prefixcmp_icase	my_project/libgit2/src/util/util.c	/^int git__prefixcmp_icase(const char *str, const char *prefix)$/;"	f	typeref:typename:int
git__prefixncmp	my_project/libgit2/src/util/util.c	/^int git__prefixncmp(const char *str, size_t str_n, const char *prefix)$/;"	f	typeref:typename:int
git__prefixncmp_icase	my_project/libgit2/src/util/util.c	/^int git__prefixncmp_icase(const char *str, size_t str_n, const char *prefix)$/;"	f	typeref:typename:int
git__qsort_r	my_project/libgit2/src/util/util.c	/^void git__qsort_r($/;"	f	typeref:typename:void
git__qsort_r_glue	my_project/libgit2/src/util/util.c	/^} git__qsort_r_glue;$/;"	t	typeref:struct:__anon381de8bf0108	file:
git__qsort_r_glue_cmp	my_project/libgit2/src/util/util.c	/^static int GIT_LIBGIT2_CALL git__qsort_r_glue_cmp($/;"	f	typeref:typename:int GIT_LIBGIT2_CALL	file:
git__readdir	my_project/libgit2/src/util/win32/dir.c	/^struct git__dirent *git__readdir(git__DIR *d)$/;"	f	typeref:struct:git__dirent *
git__readdir_ext	my_project/libgit2/src/util/win32/dir.c	/^int git__readdir_ext($/;"	f	typeref:typename:int
git__realloc	my_project/libgit2/src/util/alloc.h	/^GIT_INLINE(void *) git__realloc(void *ptr, size_t size)$/;"	f	typeref:typename:void *
git__reallocarray	my_project/libgit2/src/util/alloc.c	/^void *git__reallocarray(void *ptr, size_t nelem, size_t elsize)$/;"	f	typeref:typename:void *
git__rewinddir	my_project/libgit2/src/util/win32/dir.c	/^void git__rewinddir(git__DIR *d)$/;"	f	typeref:typename:void
git__rotl	my_project/libgit2/src/util/util.h	/^#	define git__rotl(/;"	d
git__set_errno	my_project/libgit2/src/util/win32/utf-conv.c	/^GIT_INLINE(void) git__set_errno(void)$/;"	f	typeref:typename:void
git__signum	my_project/libgit2/src/util/util.h	/^GIT_INLINE(int) git__signum(int val)$/;"	f	typeref:typename:int
git__size_t_bitmask	my_project/libgit2/src/util/util.h	/^GIT_INLINE(size_t) git__size_t_bitmask(size_t v)$/;"	f	typeref:typename:size_t
git__size_t_powerof2	my_project/libgit2/src/util/util.h	/^GIT_INLINE(size_t) git__size_t_powerof2(size_t v)$/;"	f	typeref:typename:size_t
git__sort_r_cmp	my_project/libgit2/src/util/util.h	/^typedef int (*git__sort_r_cmp)(const void *a, const void *b, void *payload);$/;"	t	typeref:typename:int (*)(const void * a,const void * b,void * payload)
git__ssl_ciphers	my_project/libgit2/src/libgit2/settings.c	/^char *git__ssl_ciphers;$/;"	v	typeref:typename:char *
git__ssl_ctx	my_project/libgit2/src/libgit2/streams/openssl.c	/^SSL_CTX *git__ssl_ctx;$/;"	v	typeref:typename:SSL_CTX *
git__strcasecmp	my_project/libgit2/src/util/util.c	/^int git__strcasecmp(const char *a, const char *b)$/;"	f	typeref:typename:int
git__strcasecmp_cb	my_project/libgit2/src/util/util.c	/^int git__strcasecmp_cb(const void *a, const void *b)$/;"	f	typeref:typename:int
git__strcasesort_cmp	my_project/libgit2/src/util/util.c	/^int git__strcasesort_cmp(const char *a, const char *b)$/;"	f	typeref:typename:int
git__strcmp	my_project/libgit2/src/util/util.h	/^#define git__strcmp /;"	d
git__strcmp_cb	my_project/libgit2/src/util/util.c	/^int git__strcmp_cb(const void *a, const void *b)$/;"	f	typeref:typename:int
git__strdup	my_project/libgit2/src/util/alloc.c	/^char *git__strdup(const char *str)$/;"	f	typeref:typename:char *
git__strlcmp	my_project/libgit2/src/util/util.h	/^GIT_INLINE(int) git__strlcmp(const char *a, const char *b, size_t b_len)$/;"	f	typeref:typename:int
git__strncasecmp	my_project/libgit2/src/util/util.c	/^int git__strncasecmp(const char *a, const char *b, size_t sz)$/;"	f	typeref:typename:int
git__strncmp	my_project/libgit2/src/util/util.h	/^#define git__strncmp /;"	d
git__strndup	my_project/libgit2/src/util/alloc.c	/^char *git__strndup(const char *str, size_t n)$/;"	f	typeref:typename:char *
git__strntol32	my_project/libgit2/src/util/util.c	/^int git__strntol32(int32_t *result, const char *nptr, size_t nptr_len, const char **endptr, int /;"	f	typeref:typename:int
git__strntol64	my_project/libgit2/src/util/util.c	/^int git__strntol64(int64_t *result, const char *nptr, size_t nptr_len, const char **endptr, int /;"	f	typeref:typename:int
git__strntolower	my_project/libgit2/src/util/util.c	/^void git__strntolower(char *str, size_t len)$/;"	f	typeref:typename:void
git__strsep	my_project/libgit2/src/util/util.c	/^char *git__strsep(char **end, const char *sep)$/;"	f	typeref:typename:char *
git__strtok	my_project/libgit2/src/util/util.c	/^char *git__strtok(char **end, const char *sep)$/;"	f	typeref:typename:char *
git__strtolower	my_project/libgit2/src/util/util.c	/^void git__strtolower(char *str)$/;"	f	typeref:typename:void
git__sub_int_overflow	my_project/libgit2/src/util/integer.h	/^# define git__sub_int_overflow(/;"	d
git__sub_int_overflow	my_project/libgit2/src/util/integer.h	/^#define git__sub_int_overflow(/;"	d
git__sub_int_overflow	my_project/libgit2/src/util/integer.h	/^GIT_INLINE(bool) git__sub_int_overflow(int *out, int one, int two)$/;"	f	typeref:typename:bool
git__substrdup	my_project/libgit2/src/util/alloc.c	/^char *git__substrdup(const char *str, size_t n)$/;"	f	typeref:typename:char *
git__suffixcmp	my_project/libgit2/src/util/util.c	/^int git__suffixcmp(const char *str, const char *suffix)$/;"	f	typeref:typename:int
git__tolower	my_project/libgit2/src/util/ctype_compat.h	/^# define git__tolower(/;"	d
git__tolower	my_project/libgit2/src/util/ctype_compat.h	/^GIT_INLINE(int) git__tolower(int c)$/;"	f	typeref:typename:int
git__toupper	my_project/libgit2/src/util/ctype_compat.h	/^# define git__toupper(/;"	d
git__toupper	my_project/libgit2/src/util/ctype_compat.h	/^GIT_INLINE(int) git__toupper(int c)$/;"	f	typeref:typename:int
git__tsort	my_project/libgit2/src/util/tsort.c	/^void git__tsort(void **dst, size_t size, git__tsort_cmp cmp)$/;"	f	typeref:typename:void
git__tsort_cmp	my_project/libgit2/src/util/util.h	/^typedef int (*git__tsort_cmp)(const void *a, const void *b);$/;"	t	typeref:typename:int (*)(const void * a,const void * b)
git__tsort_r	my_project/libgit2/src/util/tsort.c	/^void git__tsort_r($/;"	f	typeref:typename:void
git__unescape	my_project/libgit2/src/util/util.c	/^size_t git__unescape(char *str)$/;"	f	typeref:typename:size_t
git__user_agent	my_project/libgit2/src/libgit2/settings.c	/^char *git__user_agent;$/;"	v	typeref:typename:char *
git__user_agent_product	my_project/libgit2/src/libgit2/settings.c	/^char *git__user_agent_product;$/;"	v	typeref:typename:char *
git_ack_status	my_project/libgit2/src/libgit2/transports/smart.h	/^enum git_ack_status {$/;"	g
git_allocator	my_project/libgit2/include/git2/sys/alloc.h	/^} git_allocator;$/;"	t	typeref:struct:__anon10be08330108
git_allocator_global_init	my_project/libgit2/src/util/alloc.c	/^int git_allocator_global_init(void)$/;"	f	typeref:typename:int
git_allocator_setup	my_project/libgit2/src/util/alloc.c	/^int git_allocator_setup(git_allocator *allocator)$/;"	f	typeref:typename:int
git_annotated_commit	my_project/libgit2/include/git2/types.h	/^typedef struct git_annotated_commit git_annotated_commit;$/;"	t	typeref:struct:git_annotated_commit
git_annotated_commit	my_project/libgit2/src/libgit2/annotated_commit.h	/^struct git_annotated_commit {$/;"	s
git_annotated_commit_free	my_project/libgit2/src/libgit2/annotated_commit.c	/^void git_annotated_commit_free(git_annotated_commit *annotated_commit)$/;"	f	typeref:typename:void
git_annotated_commit_from_commit	my_project/libgit2/src/libgit2/annotated_commit.c	/^int git_annotated_commit_from_commit($/;"	f	typeref:typename:int
git_annotated_commit_from_fetchhead	my_project/libgit2/src/libgit2/annotated_commit.c	/^int git_annotated_commit_from_fetchhead($/;"	f	typeref:typename:int
git_annotated_commit_from_head	my_project/libgit2/src/libgit2/annotated_commit.c	/^int git_annotated_commit_from_head($/;"	f	typeref:typename:int
git_annotated_commit_from_ref	my_project/libgit2/src/libgit2/annotated_commit.c	/^int git_annotated_commit_from_ref($/;"	f	typeref:typename:int
git_annotated_commit_from_revspec	my_project/libgit2/src/libgit2/annotated_commit.c	/^int git_annotated_commit_from_revspec($/;"	f	typeref:typename:int
git_annotated_commit_id	my_project/libgit2/src/libgit2/annotated_commit.c	/^const git_oid *git_annotated_commit_id($/;"	f	typeref:typename:const git_oid *
git_annotated_commit_lookup	my_project/libgit2/src/libgit2/annotated_commit.c	/^int git_annotated_commit_lookup($/;"	f	typeref:typename:int
git_annotated_commit_ref	my_project/libgit2/src/libgit2/annotated_commit.c	/^const char *git_annotated_commit_ref($/;"	f	typeref:typename:const char *
git_annotated_commit_t	my_project/libgit2/src/libgit2/annotated_commit.h	/^} git_annotated_commit_t;$/;"	t	typeref:enum:__anon3860199b0103
git_apply	my_project/libgit2/src/libgit2/apply.c	/^int git_apply($/;"	f	typeref:typename:int
git_apply__patch	my_project/libgit2/src/libgit2/apply.c	/^int git_apply__patch($/;"	f	typeref:typename:int
git_apply__to_index	my_project/libgit2/src/libgit2/apply.c	/^static int git_apply__to_index($/;"	f	typeref:typename:int	file:
git_apply__to_workdir	my_project/libgit2/src/libgit2/apply.c	/^static int git_apply__to_workdir($/;"	f	typeref:typename:int	file:
git_apply_delta_cb	my_project/libgit2/include/git2/apply.h	/^typedef int GIT_CALLBACK(git_apply_delta_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff_delta * delta,void * payload)
git_apply_flags_t	my_project/libgit2/include/git2/apply.h	/^} git_apply_flags_t;$/;"	t	typeref:enum:__anon9141b5a00103
git_apply_hunk_cb	my_project/libgit2/include/git2/apply.h	/^typedef int GIT_CALLBACK(git_apply_hunk_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff_hunk * hunk,void * payload)
git_apply_location_t	my_project/libgit2/include/git2/apply.h	/^} git_apply_location_t;$/;"	t	typeref:enum:__anon9141b5a00303
git_apply_options	my_project/libgit2/include/git2/apply.h	/^} git_apply_options;$/;"	t	typeref:struct:__anon9141b5a00208
git_apply_options_init	my_project/libgit2/src/libgit2/apply.c	/^int git_apply_options_init(git_apply_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_apply_to_tree	my_project/libgit2/src/libgit2/apply.c	/^int git_apply_to_tree($/;"	f	typeref:typename:int
git_array__alloc	my_project/libgit2/src/util/array.h	/^GIT_INLINE(void *) git_array__alloc(void *arr, size_t *size, size_t *asize, size_t item_size)$/;"	f	typeref:typename:void *
git_array__search	my_project/libgit2/src/util/array.h	/^GIT_INLINE(int) git_array__search($/;"	f	typeref:typename:int
git_array_alloc	my_project/libgit2/src/util/array.h	/^#define git_array_alloc(/;"	d
git_array_clear	my_project/libgit2/src/util/array.h	/^#define git_array_clear(/;"	d
git_array_compare_cb	my_project/libgit2/src/util/array.h	/^typedef int (*git_array_compare_cb)(const void *, const void *);$/;"	t	typeref:typename:int (*)(const void *,const void *)
git_array_dispose	my_project/libgit2/src/util/array.h	/^#define git_array_dispose(/;"	d
git_array_foreach	my_project/libgit2/src/util/array.h	/^#define git_array_foreach(/;"	d
git_array_get	my_project/libgit2/src/util/array.h	/^#define git_array_get(/;"	d
git_array_init	my_project/libgit2/src/util/array.h	/^#define git_array_init(/;"	d
git_array_init_to_size	my_project/libgit2/src/util/array.h	/^#define git_array_init_to_size(/;"	d
git_array_last	my_project/libgit2/src/util/array.h	/^#define git_array_last(/;"	d
git_array_oid_t	my_project/libgit2/src/libgit2/oidarray.h	/^typedef git_array_t(git_oid) git_array_oid_t;$/;"	t
git_array_pop	my_project/libgit2/src/util/array.h	/^#define git_array_pop(/;"	d
git_array_search	my_project/libgit2/src/util/array.h	/^#define git_array_search(/;"	d
git_array_size	my_project/libgit2/src/util/array.h	/^#define git_array_size(/;"	d
git_array_t	my_project/libgit2/src/util/array.h	/^#define git_array_t(/;"	d
git_array_trailer_t	my_project/libgit2/src/libgit2/trailer.c	/^typedef git_array_t(git_message_trailer) git_array_trailer_t;$/;"	t	file:
git_array_valid_index	my_project/libgit2/src/util/array.h	/^#define git_array_valid_index(/;"	d
git_atomic32	my_project/libgit2/src/util/thread.h	/^} git_atomic32;$/;"	t	typeref:struct:__anon43da2a9e0108
git_atomic32_add	my_project/libgit2/src/util/thread.h	/^GIT_INLINE(int) git_atomic32_add(git_atomic32 *a, int32_t addend)$/;"	f	typeref:typename:int
git_atomic32_dec	my_project/libgit2/src/util/thread.h	/^GIT_INLINE(int) git_atomic32_dec(git_atomic32 *a)$/;"	f	typeref:typename:int
git_atomic32_get	my_project/libgit2/src/util/thread.h	/^GIT_INLINE(int) git_atomic32_get(git_atomic32 *a)$/;"	f	typeref:typename:int
git_atomic32_inc	my_project/libgit2/src/util/thread.h	/^GIT_INLINE(int) git_atomic32_inc(git_atomic32 *a)$/;"	f	typeref:typename:int
git_atomic32_set	my_project/libgit2/src/util/thread.h	/^GIT_INLINE(void) git_atomic32_set(git_atomic32 *a, int val)$/;"	f	typeref:typename:void
git_atomic64	my_project/libgit2/src/util/thread.h	/^} git_atomic64;$/;"	t	typeref:struct:__anon43da2a9e0208
git_atomic64_add	my_project/libgit2/src/util/thread.h	/^GIT_INLINE(int64_t) git_atomic64_add(git_atomic64 *a, int64_t addend)$/;"	f	typeref:typename:int64_t
git_atomic64_get	my_project/libgit2/src/util/thread.h	/^GIT_INLINE(int64_t) git_atomic64_get(git_atomic64 *a)$/;"	f	typeref:typename:int64_t
git_atomic64_set	my_project/libgit2/src/util/thread.h	/^GIT_INLINE(void) git_atomic64_set(git_atomic64 *a, int64_t val)$/;"	f	typeref:typename:void
git_atomic__compare_and_swap	my_project/libgit2/src/util/thread.h	/^GIT_INLINE(void *) git_atomic__compare_and_swap($/;"	f	typeref:typename:void *
git_atomic__load	my_project/libgit2/src/util/thread.h	/^GIT_INLINE(volatile void *) git_atomic__load(void * volatile *ptr)$/;"	f	typeref:typename:volatile void *
git_atomic__swap	my_project/libgit2/src/util/thread.h	/^GIT_INLINE(volatile void *) git_atomic__swap($/;"	f	typeref:typename:volatile void *
git_atomic_compare_and_swap	my_project/libgit2/src/util/thread.h	/^#define git_atomic_compare_and_swap(/;"	d
git_atomic_load	my_project/libgit2/src/util/thread.h	/^#define git_atomic_load(/;"	d
git_atomic_ssize	my_project/libgit2/src/util/thread.h	/^typedef git_atomic32 git_atomic_ssize;$/;"	t	typeref:typename:git_atomic32
git_atomic_ssize	my_project/libgit2/src/util/thread.h	/^typedef git_atomic64 git_atomic_ssize;$/;"	t	typeref:typename:git_atomic64
git_atomic_ssize_add	my_project/libgit2/src/util/thread.h	/^#define git_atomic_ssize_add /;"	d
git_atomic_ssize_get	my_project/libgit2/src/util/thread.h	/^#define git_atomic_ssize_get /;"	d
git_atomic_ssize_set	my_project/libgit2/src/util/thread.h	/^#define git_atomic_ssize_set /;"	d
git_atomic_swap	my_project/libgit2/src/util/thread.h	/^#define git_atomic_swap(/;"	d
git_attr__false	my_project/libgit2/src/libgit2/attr.c	/^const char *git_attr__false = "[internal]__FALSE__";$/;"	v	typeref:typename:const char *
git_attr__true	my_project/libgit2/src/libgit2/attr.c	/^const char *git_attr__true  = "[internal]__TRUE__";$/;"	v	typeref:typename:const char *
git_attr__unset	my_project/libgit2/src/libgit2/attr.c	/^const char *git_attr__unset = "[internal]__UNSET__";$/;"	v	typeref:typename:const char *
git_attr_add_macro	my_project/libgit2/src/libgit2/attr.c	/^int git_attr_add_macro($/;"	f	typeref:typename:int
git_attr_assignment	my_project/libgit2/src/libgit2/attr_file.h	/^} git_attr_assignment;$/;"	t	typeref:struct:__anon0df92d8f0608
git_attr_assignment__free	my_project/libgit2/src/libgit2/attr_file.c	/^static void git_attr_assignment__free(git_attr_assignment *assign)$/;"	f	typeref:typename:void	file:
git_attr_assignment__parse	my_project/libgit2/src/libgit2/attr_file.c	/^int git_attr_assignment__parse($/;"	f	typeref:typename:int
git_attr_cache	my_project/libgit2/src/libgit2/attrcache.h	/^} git_attr_cache;$/;"	t	typeref:struct:__anon35c990e40108
git_attr_cache__alloc_file_entry	my_project/libgit2/src/libgit2/attrcache.c	/^int git_attr_cache__alloc_file_entry($/;"	f	typeref:typename:int
git_attr_cache__get	my_project/libgit2/src/libgit2/attrcache.c	/^int git_attr_cache__get($/;"	f	typeref:typename:int
git_attr_cache__init	my_project/libgit2/src/libgit2/attrcache.c	/^int git_attr_cache__init(git_repository *repo)$/;"	f	typeref:typename:int
git_attr_cache__insert_macro	my_project/libgit2/src/libgit2/attrcache.c	/^int git_attr_cache__insert_macro(git_repository *repo, git_attr_rule *macro)$/;"	f	typeref:typename:int
git_attr_cache__is_cached	my_project/libgit2/src/libgit2/attrcache.c	/^bool git_attr_cache__is_cached($/;"	f	typeref:typename:bool
git_attr_cache__lookup_macro	my_project/libgit2/src/libgit2/attrcache.c	/^git_attr_rule *git_attr_cache__lookup_macro($/;"	f	typeref:typename:git_attr_rule *
git_attr_cache_flush	my_project/libgit2/src/libgit2/attrcache.c	/^int git_attr_cache_flush(git_repository *repo)$/;"	f	typeref:typename:int
git_attr_file	my_project/libgit2/src/libgit2/attr_file.h	/^} git_attr_file;$/;"	t	typeref:struct:__anon0df92d8f0708
git_attr_file__clear_rules	my_project/libgit2/src/libgit2/attr_file.c	/^int git_attr_file__clear_rules(git_attr_file *file, bool need_lock)$/;"	f	typeref:typename:int
git_attr_file__foreach_matching_rule	my_project/libgit2/src/libgit2/attr_file.h	/^#define git_attr_file__foreach_matching_rule(/;"	d
git_attr_file__free	my_project/libgit2/src/libgit2/attr_file.c	/^void git_attr_file__free(git_attr_file *file)$/;"	f	typeref:typename:void
git_attr_file__load	my_project/libgit2/src/libgit2/attr_file.c	/^int git_attr_file__load($/;"	f	typeref:typename:int
git_attr_file__load_standalone	my_project/libgit2/src/libgit2/attr_file.c	/^int git_attr_file__load_standalone(git_attr_file **out, const char *path)$/;"	f	typeref:typename:int
git_attr_file__lookup_one	my_project/libgit2/src/libgit2/attr_file.c	/^int git_attr_file__lookup_one($/;"	f	typeref:typename:int
git_attr_file__name_hash	my_project/libgit2/src/libgit2/attr_file.c	/^uint32_t git_attr_file__name_hash(const char *name)$/;"	f	typeref:typename:uint32_t
git_attr_file__new	my_project/libgit2/src/libgit2/attr_file.c	/^int git_attr_file__new($/;"	f	typeref:typename:int
git_attr_file__out_of_date	my_project/libgit2/src/libgit2/attr_file.c	/^int git_attr_file__out_of_date($/;"	f	typeref:typename:int
git_attr_file__parse_buffer	my_project/libgit2/src/libgit2/attr_file.c	/^int git_attr_file__parse_buffer($/;"	f	typeref:typename:int
git_attr_file_entry	my_project/libgit2/src/libgit2/attr_file.h	/^struct git_attr_file_entry {$/;"	s
git_attr_file_entry	my_project/libgit2/src/libgit2/attr_file.h	/^typedef struct git_attr_file_entry git_attr_file_entry;$/;"	t	typeref:struct:git_attr_file_entry
git_attr_file_parser	my_project/libgit2/src/libgit2/attr_file.h	/^typedef int (*git_attr_file_parser)($/;"	t	typeref:typename:int (*)(git_repository * repo,git_attr_file * file,const char * data,bool allow_macros)
git_attr_file_source	my_project/libgit2/src/libgit2/attr_file.h	/^} git_attr_file_source;$/;"	t	typeref:struct:__anon0df92d8f0208
git_attr_file_source_t	my_project/libgit2/src/libgit2/attr_file.h	/^} git_attr_file_source_t;$/;"	t	typeref:enum:__anon0df92d8f0103
git_attr_fnmatch	my_project/libgit2/src/libgit2/attr_file.h	/^} git_attr_fnmatch;$/;"	t	typeref:struct:__anon0df92d8f0308
git_attr_fnmatch__match	my_project/libgit2/src/libgit2/attr_file.c	/^bool git_attr_fnmatch__match($/;"	f	typeref:typename:bool
git_attr_fnmatch__parse	my_project/libgit2/src/libgit2/attr_file.c	/^int git_attr_fnmatch__parse($/;"	f	typeref:typename:int
git_attr_foreach	my_project/libgit2/src/libgit2/attr.c	/^int git_attr_foreach($/;"	f	typeref:typename:int
git_attr_foreach_cb	my_project/libgit2/include/git2/attr.h	/^typedef int GIT_CALLBACK(git_attr_foreach_cb)(const char *name, const char *value, void *payload/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * name,const char * value,void * payload)
git_attr_foreach_ext	my_project/libgit2/src/libgit2/attr.c	/^int git_attr_foreach_ext($/;"	f	typeref:typename:int
git_attr_get	my_project/libgit2/src/libgit2/attr.c	/^int git_attr_get($/;"	f	typeref:typename:int
git_attr_get_ext	my_project/libgit2/src/libgit2/attr.c	/^int git_attr_get_ext($/;"	f	typeref:typename:int
git_attr_get_many	my_project/libgit2/src/libgit2/attr.c	/^int git_attr_get_many($/;"	f	typeref:typename:int
git_attr_get_many_ext	my_project/libgit2/src/libgit2/attr.c	/^int git_attr_get_many_ext($/;"	f	typeref:typename:int
git_attr_get_many_with_session	my_project/libgit2/src/libgit2/attr.c	/^int git_attr_get_many_with_session($/;"	f	typeref:typename:int
git_attr_name	my_project/libgit2/src/libgit2/attr_file.h	/^} git_attr_name;$/;"	t	typeref:struct:__anon0df92d8f0508
git_attr_options	my_project/libgit2/include/git2/attr.h	/^} git_attr_options;$/;"	t	typeref:struct:__anon790e91d50208
git_attr_path	my_project/libgit2/src/libgit2/attr_file.h	/^} git_attr_path;$/;"	t	typeref:struct:__anon0df92d8f0908
git_attr_path__free	my_project/libgit2/src/libgit2/attr_file.c	/^void git_attr_path__free(git_attr_path *info)$/;"	f	typeref:typename:void
git_attr_path__init	my_project/libgit2/src/libgit2/attr_file.c	/^int git_attr_path__init($/;"	f	typeref:typename:int
git_attr_rule	my_project/libgit2/src/libgit2/attr_file.h	/^} git_attr_rule;$/;"	t	typeref:struct:__anon0df92d8f0408
git_attr_rule__clear	my_project/libgit2/src/libgit2/attr_file.c	/^static void git_attr_rule__clear(git_attr_rule *rule)$/;"	f	typeref:typename:void	file:
git_attr_rule__free	my_project/libgit2/src/libgit2/attr_file.c	/^void git_attr_rule__free(git_attr_rule *rule)$/;"	f	typeref:typename:void
git_attr_rule__lookup_assignment	my_project/libgit2/src/libgit2/attr_file.c	/^git_attr_assignment *git_attr_rule__lookup_assignment($/;"	f	typeref:typename:git_attr_assignment *
git_attr_rule__match	my_project/libgit2/src/libgit2/attr_file.c	/^bool git_attr_rule__match($/;"	f	typeref:typename:bool
git_attr_session	my_project/libgit2/src/libgit2/attr_file.h	/^} git_attr_session;$/;"	t	typeref:struct:__anon0df92d8f0a08
git_attr_session__free	my_project/libgit2/src/libgit2/attr_file.c	/^void git_attr_session__free(git_attr_session *session)$/;"	f	typeref:typename:void
git_attr_session__init	my_project/libgit2/src/libgit2/attr_file.c	/^int git_attr_session__init(git_attr_session *session, git_repository *repo)$/;"	f	typeref:typename:int
git_attr_t	my_project/libgit2/include/git2/deprecated.h	/^typedef git_attr_value_t git_attr_t;$/;"	t	typeref:typename:git_attr_value_t
git_attr_value	my_project/libgit2/src/libgit2/attr.c	/^git_attr_value_t git_attr_value(const char *attr)$/;"	f	typeref:typename:git_attr_value_t
git_attr_value_t	my_project/libgit2/include/git2/attr.h	/^} git_attr_value_t;$/;"	t	typeref:enum:__anon790e91d50103
git_bitvec	my_project/libgit2/src/util/bitvec.h	/^} git_bitvec;$/;"	t	typeref:struct:__anonfa138ea30108
git_bitvec_clear	my_project/libgit2/src/util/bitvec.h	/^GIT_INLINE(void) git_bitvec_clear(git_bitvec *bv)$/;"	f	typeref:typename:void
git_bitvec_free	my_project/libgit2/src/util/bitvec.h	/^GIT_INLINE(void) git_bitvec_free(git_bitvec *bv)$/;"	f	typeref:typename:void
git_bitvec_get	my_project/libgit2/src/util/bitvec.h	/^GIT_INLINE(bool) git_bitvec_get(git_bitvec *bv, size_t bit)$/;"	f	typeref:typename:bool
git_bitvec_init	my_project/libgit2/src/util/bitvec.h	/^GIT_INLINE(int) git_bitvec_init(git_bitvec *bv, size_t capacity)$/;"	f	typeref:typename:int
git_bitvec_set	my_project/libgit2/src/util/bitvec.h	/^GIT_INLINE(void) git_bitvec_set(git_bitvec *bv, size_t bit, bool on)$/;"	f	typeref:typename:void
git_blame	my_project/libgit2/include/git2/blame.h	/^typedef struct git_blame git_blame;$/;"	t	typeref:struct:git_blame
git_blame	my_project/libgit2/src/libgit2/blame.h	/^struct git_blame {$/;"	s
git_blame__alloc	my_project/libgit2/src/libgit2/blame.c	/^git_blame *git_blame__alloc($/;"	f	typeref:typename:git_blame *
git_blame__entry	my_project/libgit2/src/libgit2/blame.h	/^typedef struct git_blame__entry {$/;"	s
git_blame__entry	my_project/libgit2/src/libgit2/blame.h	/^} git_blame__entry;$/;"	t	typeref:struct:git_blame__entry
git_blame__free_entry	my_project/libgit2/src/libgit2/blame_git.c	/^void git_blame__free_entry(git_blame__entry *ent)$/;"	f	typeref:typename:void
git_blame__get_origin	my_project/libgit2/src/libgit2/blame_git.c	/^int git_blame__get_origin($/;"	f	typeref:typename:int
git_blame__like_git	my_project/libgit2/src/libgit2/blame_git.c	/^int git_blame__like_git(git_blame *blame, uint32_t opt)$/;"	f	typeref:typename:int
git_blame__origin	my_project/libgit2/src/libgit2/blame.h	/^typedef struct git_blame__origin {$/;"	s
git_blame__origin	my_project/libgit2/src/libgit2/blame.h	/^} git_blame__origin;$/;"	t	typeref:struct:git_blame__origin
git_blame_buffer	my_project/libgit2/src/libgit2/blame.c	/^int git_blame_buffer($/;"	f	typeref:typename:int
git_blame_file	my_project/libgit2/src/libgit2/blame.c	/^int git_blame_file($/;"	f	typeref:typename:int
git_blame_flag_t	my_project/libgit2/include/git2/blame.h	/^} git_blame_flag_t;$/;"	t	typeref:enum:__anond3d8179b0103
git_blame_free	my_project/libgit2/src/libgit2/blame.c	/^void git_blame_free(git_blame *blame)$/;"	f	typeref:typename:void
git_blame_get_hunk_byindex	my_project/libgit2/src/libgit2/blame.c	/^const git_blame_hunk *git_blame_get_hunk_byindex(git_blame *blame, uint32_t index)$/;"	f	typeref:typename:const git_blame_hunk *
git_blame_get_hunk_byline	my_project/libgit2/src/libgit2/blame.c	/^const git_blame_hunk *git_blame_get_hunk_byline(git_blame *blame, size_t lineno)$/;"	f	typeref:typename:const git_blame_hunk *
git_blame_get_hunk_count	my_project/libgit2/src/libgit2/blame.c	/^uint32_t git_blame_get_hunk_count(git_blame *blame)$/;"	f	typeref:typename:uint32_t
git_blame_hunk	my_project/libgit2/include/git2/blame.h	/^typedef struct git_blame_hunk {$/;"	s
git_blame_hunk	my_project/libgit2/include/git2/blame.h	/^} git_blame_hunk;$/;"	t	typeref:struct:git_blame_hunk
git_blame_init_options	my_project/libgit2/src/libgit2/blame.c	/^int git_blame_init_options(git_blame_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_blame_options	my_project/libgit2/include/git2/blame.h	/^typedef struct git_blame_options {$/;"	s
git_blame_options	my_project/libgit2/include/git2/blame.h	/^} git_blame_options;$/;"	t	typeref:struct:git_blame_options
git_blame_options_init	my_project/libgit2/src/libgit2/blame.c	/^int git_blame_options_init(git_blame_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_blob	my_project/libgit2/include/git2/types.h	/^typedef struct git_blob git_blob;$/;"	t	typeref:struct:git_blob
git_blob	my_project/libgit2/src/libgit2/blob.h	/^struct git_blob {$/;"	s
git_blob__create_from_paths	my_project/libgit2/src/libgit2/blob.c	/^int git_blob__create_from_paths($/;"	f	typeref:typename:int
git_blob__free	my_project/libgit2/src/libgit2/blob.c	/^void git_blob__free(void *_blob)$/;"	f	typeref:typename:void
git_blob__getbuf	my_project/libgit2/src/libgit2/blob.c	/^int git_blob__getbuf(git_str *buffer, git_blob *blob)$/;"	f	typeref:typename:int
git_blob__parse	my_project/libgit2/src/libgit2/blob.c	/^int git_blob__parse(void *_blob, git_odb_object *odb_obj, git_oid_t oid_type)$/;"	f	typeref:typename:int
git_blob__parse_raw	my_project/libgit2/src/libgit2/blob.c	/^int git_blob__parse_raw(void *_blob, const char *data, size_t size, git_oid_t oid_type)$/;"	f	typeref:typename:int
git_blob_create_from_buffer	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_create_from_buffer($/;"	f	typeref:typename:int
git_blob_create_from_disk	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_create_from_disk($/;"	f	typeref:typename:int
git_blob_create_from_stream	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_create_from_stream(git_writestream **out, git_repository *repo, const char *hintpat/;"	f	typeref:typename:int
git_blob_create_from_stream_commit	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_create_from_stream_commit(git_oid *out, git_writestream *_stream)$/;"	f	typeref:typename:int
git_blob_create_from_workdir	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_create_from_workdir($/;"	f	typeref:typename:int
git_blob_create_frombuffer	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_create_frombuffer($/;"	f	typeref:typename:int
git_blob_create_fromdisk	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_create_fromdisk(git_oid *id, git_repository *repo, const char *path)$/;"	f	typeref:typename:int
git_blob_create_fromstream	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_create_fromstream($/;"	f	typeref:typename:int
git_blob_create_fromstream_commit	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_create_fromstream_commit($/;"	f	typeref:typename:int
git_blob_create_fromworkdir	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_create_fromworkdir(git_oid *id, git_repository *repo, const char *relative_path)$/;"	f	typeref:typename:int
git_blob_data_is_binary	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_data_is_binary(const char *str, size_t len)$/;"	f	typeref:typename:int
git_blob_dup	my_project/libgit2/src/libgit2/object_api.c	/^int git_blob_dup(git_blob **out, git_blob *obj)$/;"	f	typeref:typename:int
git_blob_filter	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_filter($/;"	f	typeref:typename:int
git_blob_filter_flag_t	my_project/libgit2/include/git2/blob.h	/^} git_blob_filter_flag_t;$/;"	t	typeref:enum:__anon7acff4790103
git_blob_filter_options	my_project/libgit2/include/git2/blob.h	/^} git_blob_filter_options;$/;"	t	typeref:struct:__anon7acff4790208
git_blob_filter_options_init	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_filter_options_init($/;"	f	typeref:typename:int
git_blob_filtered_content	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_filtered_content($/;"	f	typeref:typename:int
git_blob_free	my_project/libgit2/src/libgit2/object_api.c	/^void git_blob_free(git_blob *obj)$/;"	f	typeref:typename:void
git_blob_id	my_project/libgit2/src/libgit2/object_api.c	/^const git_oid *git_blob_id(const git_blob *obj)$/;"	f	typeref:typename:const git_oid *
git_blob_is_binary	my_project/libgit2/src/libgit2/blob.c	/^int git_blob_is_binary(const git_blob *blob)$/;"	f	typeref:typename:int
git_blob_lookup	my_project/libgit2/src/libgit2/object_api.c	/^int git_blob_lookup(git_blob **out, git_repository *repo, const git_oid *id)$/;"	f	typeref:typename:int
git_blob_lookup_prefix	my_project/libgit2/src/libgit2/object_api.c	/^int git_blob_lookup_prefix(git_blob **out, git_repository *repo, const git_oid *id, size_t len)$/;"	f	typeref:typename:int
git_blob_owner	my_project/libgit2/src/libgit2/object_api.c	/^git_repository *git_blob_owner(const git_blob *obj)$/;"	f	typeref:typename:git_repository *
git_blob_rawcontent	my_project/libgit2/src/libgit2/blob.c	/^const void *git_blob_rawcontent(const git_blob *blob)$/;"	f	typeref:typename:const void *
git_blob_rawsize	my_project/libgit2/src/libgit2/blob.c	/^git_object_size_t git_blob_rawsize(const git_blob *blob)$/;"	f	typeref:typename:git_object_size_t
git_branch__remote_name	my_project/libgit2/src/libgit2/branch.c	/^int git_branch__remote_name($/;"	f	typeref:typename:int
git_branch__upstream_merge	my_project/libgit2/src/libgit2/branch.c	/^int git_branch__upstream_merge($/;"	f	typeref:typename:int
git_branch__upstream_name	my_project/libgit2/src/libgit2/branch.c	/^int git_branch__upstream_name($/;"	f	typeref:typename:int
git_branch__upstream_remote	my_project/libgit2/src/libgit2/branch.c	/^int git_branch__upstream_remote($/;"	f	typeref:typename:int
git_branch_create	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_create($/;"	f	typeref:typename:int
git_branch_create_from_annotated	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_create_from_annotated($/;"	f	typeref:typename:int
git_branch_delete	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_delete(git_reference *branch)$/;"	f	typeref:typename:int
git_branch_is_checked_out	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_is_checked_out(const git_reference *branch)$/;"	f	typeref:typename:int
git_branch_is_head	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_is_head($/;"	f	typeref:typename:int
git_branch_iterator	my_project/libgit2/include/git2/branch.h	/^typedef struct git_branch_iterator git_branch_iterator;$/;"	t	typeref:struct:git_branch_iterator
git_branch_iterator_free	my_project/libgit2/src/libgit2/branch.c	/^void git_branch_iterator_free(git_branch_iterator *_iter)$/;"	f	typeref:typename:void
git_branch_iterator_new	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_iterator_new($/;"	f	typeref:typename:int
git_branch_lookup	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_lookup($/;"	f	typeref:typename:int
git_branch_move	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_move($/;"	f	typeref:typename:int
git_branch_name	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_name($/;"	f	typeref:typename:int
git_branch_name_is_valid	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_name_is_valid(int *valid, const char *name)$/;"	f	typeref:typename:int
git_branch_next	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_next(git_reference **out, git_branch_t *out_type, git_branch_iterator *_iter)$/;"	f	typeref:typename:int
git_branch_remote_name	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_remote_name($/;"	f	typeref:typename:int
git_branch_set_upstream	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_set_upstream(git_reference *branch, const char *branch_name)$/;"	f	typeref:typename:int
git_branch_t	my_project/libgit2/include/git2/types.h	/^} git_branch_t;$/;"	t	typeref:enum:__anon5cceb56f0303
git_branch_upstream	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_upstream($/;"	f	typeref:typename:int
git_branch_upstream_merge	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_upstream_merge($/;"	f	typeref:typename:int
git_branch_upstream_name	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_upstream_name($/;"	f	typeref:typename:int
git_branch_upstream_remote	my_project/libgit2/src/libgit2/branch.c	/^int git_branch_upstream_remote($/;"	f	typeref:typename:int
git_branch_upstream_with_format	my_project/libgit2/src/libgit2/branch.c	/^static int git_branch_upstream_with_format($/;"	f	typeref:typename:int	file:
git_buf	my_project/libgit2/include/git2/buffer.h	/^} git_buf;$/;"	t	typeref:struct:__anon0ed367940108
git_buf	my_project/libgit2/script/user_model.c	/^typedef struct git_buf {$/;"	s	file:
git_buf	my_project/libgit2/script/user_model.c	/^} git_buf;$/;"	t	typeref:struct:git_buf	file:
git_buf_contains_nul	my_project/libgit2/src/libgit2/buf.c	/^int git_buf_contains_nul(const git_buf *buf)$/;"	f	typeref:typename:int
git_buf_dispose	my_project/libgit2/src/libgit2/buf.c	/^void git_buf_dispose(git_buf *buf)$/;"	f	typeref:typename:void
git_buf_free	my_project/libgit2/src/libgit2/buf.c	/^void git_buf_free(git_buf *buffer)$/;"	f	typeref:typename:void
git_buf_fromstr	my_project/libgit2/src/libgit2/buf.c	/^int git_buf_fromstr(git_buf *out, git_str *str)$/;"	f	typeref:typename:int
git_buf_grow	my_project/libgit2/src/libgit2/buf.c	/^int git_buf_grow(git_buf *buffer, size_t target_size)$/;"	f	typeref:typename:int
git_buf_is_binary	my_project/libgit2/src/libgit2/buf.c	/^int git_buf_is_binary(const git_buf *buf)$/;"	f	typeref:typename:int
git_buf_len	my_project/libgit2/script/user_model.c	/^int git_buf_len(const struct git_buf *buf)$/;"	f	typeref:typename:int
git_buf_put	my_project/libgit2/script/user_model.c	/^int git_buf_put(git_buf *buf, const char *data, size_t len)$/;"	f	typeref:typename:int
git_buf_sanitize	my_project/libgit2/src/libgit2/buf.c	/^int git_buf_sanitize(git_buf *buf)$/;"	f	typeref:typename:int
git_buf_set	my_project/libgit2/script/user_model.c	/^int git_buf_set(git_buf *buf, const void *data, size_t len)$/;"	f	typeref:typename:int
git_buf_set	my_project/libgit2/src/libgit2/buf.c	/^int git_buf_set(git_buf *buffer, const void *data, size_t datalen)$/;"	f	typeref:typename:int
git_buf_tostr	my_project/libgit2/src/libgit2/buf.c	/^int git_buf_tostr(git_str *out, git_buf *buf)$/;"	f	typeref:typename:int
git_buf_vprintf	my_project/libgit2/script/user_model.c	/^int git_buf_vprintf(git_buf *buf, const char *format, va_list ap)$/;"	f	typeref:typename:int
git_cache	my_project/libgit2/src/libgit2/cache.h	/^} git_cache;$/;"	t	typeref:struct:__anon6f0f98290308
git_cache__current_storage	my_project/libgit2/src/libgit2/cache.c	/^git_atomic_ssize git_cache__current_storage = {0};$/;"	v	typeref:typename:git_atomic_ssize
git_cache__enabled	my_project/libgit2/src/libgit2/cache.c	/^bool git_cache__enabled = true;$/;"	v	typeref:typename:bool
git_cache__max_object_size	my_project/libgit2/src/libgit2/cache.c	/^static size_t git_cache__max_object_size[8] = {$/;"	v	typeref:typename:size_t[8]	file:
git_cache__max_storage	my_project/libgit2/src/libgit2/cache.c	/^ssize_t git_cache__max_storage = (256 * 1024 * 1024);$/;"	v	typeref:typename:ssize_t
git_cache_clear	my_project/libgit2/src/libgit2/cache.c	/^void git_cache_clear(git_cache *cache)$/;"	f	typeref:typename:void
git_cache_dispose	my_project/libgit2/src/libgit2/cache.c	/^void git_cache_dispose(git_cache *cache)$/;"	f	typeref:typename:void
git_cache_get_any	my_project/libgit2/src/libgit2/cache.c	/^void *git_cache_get_any(git_cache *cache, const git_oid *oid)$/;"	f	typeref:typename:void *
git_cache_get_parsed	my_project/libgit2/src/libgit2/cache.c	/^git_object *git_cache_get_parsed(git_cache *cache, const git_oid *oid)$/;"	f	typeref:typename:git_object *
git_cache_get_raw	my_project/libgit2/src/libgit2/cache.c	/^git_odb_object *git_cache_get_raw(git_cache *cache, const git_oid *oid)$/;"	f	typeref:typename:git_odb_object *
git_cache_init	my_project/libgit2/src/libgit2/cache.c	/^int git_cache_init(git_cache *cache)$/;"	f	typeref:typename:int
git_cache_set_max_object_size	my_project/libgit2/src/libgit2/cache.c	/^int git_cache_set_max_object_size(git_object_t type, size_t size)$/;"	f	typeref:typename:int
git_cache_size	my_project/libgit2/src/libgit2/cache.h	/^GIT_INLINE(size_t) git_cache_size(git_cache *cache)$/;"	f	typeref:typename:size_t
git_cache_store_parsed	my_project/libgit2/src/libgit2/cache.c	/^void *git_cache_store_parsed(git_cache *cache, git_object *entry)$/;"	f	typeref:typename:void *
git_cache_store_raw	my_project/libgit2/src/libgit2/cache.c	/^void *git_cache_store_raw(git_cache *cache, git_odb_object *entry)$/;"	f	typeref:typename:void *
git_cached_obj	my_project/libgit2/src/libgit2/cache.h	/^} git_cached_obj;$/;"	t	typeref:struct:__anon6f0f98290208
git_cached_obj_decref	my_project/libgit2/src/libgit2/cache.c	/^void git_cached_obj_decref(void *_obj)$/;"	f	typeref:typename:void
git_cached_obj_incref	my_project/libgit2/src/libgit2/cache.h	/^GIT_INLINE(void) git_cached_obj_incref(void *_obj)$/;"	f	typeref:typename:void
git_cert	my_project/libgit2/include/git2/cert.h	/^struct git_cert {$/;"	s
git_cert	my_project/libgit2/include/git2/types.h	/^typedef struct git_cert git_cert;$/;"	t	typeref:struct:git_cert
git_cert_hostkey	my_project/libgit2/include/git2/cert.h	/^} git_cert_hostkey;$/;"	t	typeref:struct:__anon7ca863480308
git_cert_ssh_raw_type_t	my_project/libgit2/include/git2/cert.h	/^} git_cert_ssh_raw_type_t;$/;"	t	typeref:enum:__anon7ca863480203
git_cert_ssh_t	my_project/libgit2/include/git2/cert.h	/^} git_cert_ssh_t;$/;"	t	typeref:enum:__anon7ca863480103
git_cert_t	my_project/libgit2/include/git2/cert.h	/^typedef enum git_cert_t {$/;"	g
git_cert_t	my_project/libgit2/include/git2/cert.h	/^} git_cert_t;$/;"	t	typeref:enum:git_cert_t
git_cert_x509	my_project/libgit2/include/git2/cert.h	/^} git_cert_x509;$/;"	t	typeref:struct:__anon7ca863480408
git_checkout_head	my_project/libgit2/src/libgit2/checkout.c	/^int git_checkout_head($/;"	f	typeref:typename:int
git_checkout_index	my_project/libgit2/src/libgit2/checkout.c	/^int git_checkout_index($/;"	f	typeref:typename:int
git_checkout_init_options	my_project/libgit2/src/libgit2/checkout.c	/^int git_checkout_init_options(git_checkout_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_checkout_iterator	my_project/libgit2/src/libgit2/checkout.c	/^int git_checkout_iterator($/;"	f	typeref:typename:int
git_checkout_notify_cb	my_project/libgit2/include/git2/checkout.h	/^typedef int GIT_CALLBACK(git_checkout_notify_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_checkout_notify_t why,const char * path,const git_diff_file * baseline,const git_diff_file * target,const git_diff_file * workdir,void * payload)
git_checkout_notify_t	my_project/libgit2/include/git2/checkout.h	/^} git_checkout_notify_t;$/;"	t	typeref:enum:__anon65c3b8100203
git_checkout_options	my_project/libgit2/include/git2/checkout.h	/^typedef struct git_checkout_options {$/;"	s
git_checkout_options	my_project/libgit2/include/git2/checkout.h	/^} git_checkout_options;$/;"	t	typeref:struct:git_checkout_options
git_checkout_options_init	my_project/libgit2/src/libgit2/checkout.c	/^int git_checkout_options_init(git_checkout_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_checkout_perfdata	my_project/libgit2/include/git2/checkout.h	/^} git_checkout_perfdata;$/;"	t	typeref:struct:__anon65c3b8100308
git_checkout_perfdata_cb	my_project/libgit2/include/git2/checkout.h	/^typedef void GIT_CALLBACK(git_checkout_perfdata_cb)($/;"	t	typeref:typename:void GIT_CALLBACK ()(const git_checkout_perfdata * perfdata,void * payload)
git_checkout_progress_cb	my_project/libgit2/include/git2/checkout.h	/^typedef void GIT_CALLBACK(git_checkout_progress_cb)($/;"	t	typeref:typename:void GIT_CALLBACK ()(const char * path,size_t completed_steps,size_t total_steps,void * payload)
git_checkout_strategy_t	my_project/libgit2/include/git2/checkout.h	/^} git_checkout_strategy_t;$/;"	t	typeref:enum:__anon65c3b8100103
git_checkout_tree	my_project/libgit2/src/libgit2/checkout.c	/^int git_checkout_tree($/;"	f	typeref:typename:int
git_cherrypick	my_project/libgit2/src/libgit2/cherrypick.c	/^int git_cherrypick($/;"	f	typeref:typename:int
git_cherrypick_commit	my_project/libgit2/src/libgit2/cherrypick.c	/^int git_cherrypick_commit($/;"	f	typeref:typename:int
git_cherrypick_init_options	my_project/libgit2/src/libgit2/cherrypick.c	/^int git_cherrypick_init_options($/;"	f	typeref:typename:int
git_cherrypick_options	my_project/libgit2/include/git2/cherrypick.h	/^} git_cherrypick_options;$/;"	t	typeref:struct:__anon241c174e0108
git_cherrypick_options_init	my_project/libgit2/src/libgit2/cherrypick.c	/^int git_cherrypick_options_init($/;"	f	typeref:typename:int
git_clone	my_project/libgit2/src/libgit2/clone.c	/^int git_clone($/;"	f	typeref:typename:int
git_clone__should_clone_local	my_project/libgit2/src/libgit2/clone.c	/^int git_clone__should_clone_local(const char *url_or_path, git_clone_local_t local)$/;"	f	typeref:typename:int
git_clone__submodule	my_project/libgit2/src/libgit2/clone.c	/^int git_clone__submodule($/;"	f	typeref:typename:int
git_clone_init_options	my_project/libgit2/src/libgit2/clone.c	/^int git_clone_init_options(git_clone_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_clone_local_t	my_project/libgit2/include/git2/clone.h	/^} git_clone_local_t;$/;"	t	typeref:enum:__anon21d037cb0103
git_clone_options	my_project/libgit2/include/git2/clone.h	/^typedef struct git_clone_options {$/;"	s
git_clone_options	my_project/libgit2/include/git2/clone.h	/^} git_clone_options;$/;"	t	typeref:struct:git_clone_options
git_clone_options_init	my_project/libgit2/src/libgit2/clone.c	/^int git_clone_options_init(git_clone_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_command_fn	my_project/libgit2/examples/lg2.c	/^typedef int (*git_command_fn)(git_repository *, int , char **);$/;"	t	typeref:typename:int (*)(git_repository *,int,char **)	file:
git_commit	my_project/libgit2/include/git2/types.h	/^typedef struct git_commit git_commit;$/;"	t	typeref:struct:git_commit
git_commit	my_project/libgit2/src/libgit2/commit.h	/^struct git_commit {$/;"	s
git_commit__create_buffer	my_project/libgit2/src/libgit2/commit.c	/^int git_commit__create_buffer($/;"	f	typeref:typename:int
git_commit__create_buffer_internal	my_project/libgit2/src/libgit2/commit.c	/^static int git_commit__create_buffer_internal($/;"	f	typeref:typename:int	file:
git_commit__create_internal	my_project/libgit2/src/libgit2/commit.c	/^static int git_commit__create_internal($/;"	f	typeref:typename:int	file:
git_commit__extract_signature	my_project/libgit2/src/libgit2/commit.c	/^int git_commit__extract_signature($/;"	f	typeref:typename:int
git_commit__free	my_project/libgit2/src/libgit2/commit.c	/^void git_commit__free(void *_commit)$/;"	f	typeref:typename:void
git_commit__header_field	my_project/libgit2/src/libgit2/commit.c	/^int git_commit__header_field($/;"	f	typeref:typename:int
git_commit__parse	my_project/libgit2/src/libgit2/commit.c	/^int git_commit__parse($/;"	f	typeref:typename:int
git_commit__parse_ext	my_project/libgit2/src/libgit2/commit.c	/^int git_commit__parse_ext($/;"	f	typeref:typename:int
git_commit__parse_flags	my_project/libgit2/src/libgit2/commit.h	/^} git_commit__parse_flags;$/;"	t	typeref:enum:__anon9e6354de0203
git_commit__parse_options	my_project/libgit2/src/libgit2/commit.h	/^} git_commit__parse_options;$/;"	t	typeref:struct:__anon9e6354de0108
git_commit__parse_raw	my_project/libgit2/src/libgit2/commit.c	/^int git_commit__parse_raw($/;"	f	typeref:typename:int
git_commit_amend	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_amend($/;"	f	typeref:typename:int
git_commit_author_with_mailmap	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_author_with_mailmap($/;"	f	typeref:typename:int
git_commit_body	my_project/libgit2/src/libgit2/commit.c	/^const char *git_commit_body(git_commit *commit)$/;"	f	typeref:typename:const char *
git_commit_committer_with_mailmap	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_committer_with_mailmap($/;"	f	typeref:typename:int
git_commit_create	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_create($/;"	f	typeref:typename:int
git_commit_create_buffer	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_create_buffer($/;"	f	typeref:typename:int
git_commit_create_cb	my_project/libgit2/include/git2/commit.h	/^typedef int (*git_commit_create_cb)($/;"	t	typeref:typename:int (*)(git_oid * out,const git_signature * author,const git_signature * committer,const char * message_encoding,const char * message,const git_tree * tree,size_t parent_count,const git_commit * parents[],void * payload)
git_commit_create_from_callback	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_create_from_callback($/;"	f	typeref:typename:int
git_commit_create_from_ids	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_create_from_ids($/;"	f	typeref:typename:int
git_commit_create_from_stage	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_create_from_stage($/;"	f	typeref:typename:int
git_commit_create_options	my_project/libgit2/include/git2/commit.h	/^} git_commit_create_options;$/;"	t	typeref:struct:__anon3e0cd1e30108
git_commit_create_v	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_create_v($/;"	f	typeref:typename:int
git_commit_create_with_signature	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_create_with_signature($/;"	f	typeref:typename:int
git_commit_dup	my_project/libgit2/src/libgit2/object_api.c	/^int git_commit_dup(git_commit **out, git_commit *obj)$/;"	f	typeref:typename:int
git_commit_extract_signature	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_extract_signature($/;"	f	typeref:typename:int
git_commit_free	my_project/libgit2/src/libgit2/object_api.c	/^void git_commit_free(git_commit *obj)$/;"	f	typeref:typename:void
git_commit_graft	my_project/libgit2/src/libgit2/grafts.h	/^} git_commit_graft;$/;"	t	typeref:struct:__anon19e2cf7c0108
git_commit_graph	my_project/libgit2/include/git2/types.h	/^typedef struct git_commit_graph git_commit_graph;$/;"	t	typeref:struct:git_commit_graph
git_commit_graph	my_project/libgit2/src/libgit2/commit_graph.h	/^struct git_commit_graph {$/;"	s
git_commit_graph__writer_dump	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph__writer_dump($/;"	f	typeref:typename:int
git_commit_graph_chunk	my_project/libgit2/src/libgit2/commit_graph.c	/^struct git_commit_graph_chunk {$/;"	s	file:
git_commit_graph_entry	my_project/libgit2/src/libgit2/commit_graph.h	/^typedef struct git_commit_graph_entry {$/;"	s
git_commit_graph_entry	my_project/libgit2/src/libgit2/commit_graph.h	/^} git_commit_graph_entry;$/;"	t	typeref:struct:git_commit_graph_entry
git_commit_graph_entry_find	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_entry_find($/;"	f	typeref:typename:int
git_commit_graph_entry_get_byindex	my_project/libgit2/src/libgit2/commit_graph.c	/^static int git_commit_graph_entry_get_byindex($/;"	f	typeref:typename:int	file:
git_commit_graph_entry_parent	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_entry_parent($/;"	f	typeref:typename:int
git_commit_graph_file	my_project/libgit2/src/libgit2/commit_graph.h	/^typedef struct git_commit_graph_file {$/;"	s
git_commit_graph_file	my_project/libgit2/src/libgit2/commit_graph.h	/^} git_commit_graph_file;$/;"	t	typeref:struct:git_commit_graph_file
git_commit_graph_file_close	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_file_close(git_commit_graph_file *file)$/;"	f	typeref:typename:int
git_commit_graph_file_free	my_project/libgit2/src/libgit2/commit_graph.c	/^void git_commit_graph_file_free(git_commit_graph_file *file)$/;"	f	typeref:typename:void
git_commit_graph_file_needs_refresh	my_project/libgit2/src/libgit2/commit_graph.c	/^bool git_commit_graph_file_needs_refresh(const git_commit_graph_file *file, const char *path)$/;"	f	typeref:typename:bool
git_commit_graph_file_open	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_file_open($/;"	f	typeref:typename:int
git_commit_graph_file_parse	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_file_parse($/;"	f	typeref:typename:int
git_commit_graph_free	my_project/libgit2/src/libgit2/commit_graph.c	/^void git_commit_graph_free(git_commit_graph *cgraph)$/;"	f	typeref:typename:void
git_commit_graph_get_file	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_get_file($/;"	f	typeref:typename:int
git_commit_graph_header	my_project/libgit2/src/libgit2/commit_graph.c	/^struct git_commit_graph_header {$/;"	s	file:
git_commit_graph_new	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_new($/;"	f	typeref:typename:int
git_commit_graph_open	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_open($/;"	f	typeref:typename:int
git_commit_graph_refresh	my_project/libgit2/src/libgit2/commit_graph.c	/^void git_commit_graph_refresh(git_commit_graph *cgraph)$/;"	f	typeref:typename:void
git_commit_graph_split_strategy_t	my_project/libgit2/include/git2/sys/commit_graph.h	/^} git_commit_graph_split_strategy_t;$/;"	t	typeref:enum:__anon6744c2020103
git_commit_graph_validate	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_validate(git_commit_graph *cgraph) {$/;"	f	typeref:typename:int
git_commit_graph_writer	my_project/libgit2/include/git2/types.h	/^typedef struct git_commit_graph_writer git_commit_graph_writer;$/;"	t	typeref:struct:git_commit_graph_writer
git_commit_graph_writer	my_project/libgit2/src/libgit2/commit_graph.h	/^struct git_commit_graph_writer {$/;"	s
git_commit_graph_writer_add_index_file	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_writer_add_index_file($/;"	f	typeref:typename:int
git_commit_graph_writer_add_revwalk	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_writer_add_revwalk(git_commit_graph_writer *w, git_revwalk *walk)$/;"	f	typeref:typename:int
git_commit_graph_writer_commit	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_writer_commit($/;"	f	typeref:typename:int
git_commit_graph_writer_dump	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_writer_dump($/;"	f	typeref:typename:int
git_commit_graph_writer_free	my_project/libgit2/src/libgit2/commit_graph.c	/^void git_commit_graph_writer_free(git_commit_graph_writer *w)$/;"	f	typeref:typename:void
git_commit_graph_writer_new	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_writer_new($/;"	f	typeref:typename:int
git_commit_graph_writer_options	my_project/libgit2/include/git2/sys/commit_graph.h	/^} git_commit_graph_writer_options;$/;"	t	typeref:struct:__anon6744c2020208
git_commit_graph_writer_options_init	my_project/libgit2/src/libgit2/commit_graph.c	/^int git_commit_graph_writer_options_init($/;"	f	typeref:typename:int
git_commit_header_field	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_header_field($/;"	f	typeref:typename:int
git_commit_id	my_project/libgit2/src/libgit2/object_api.c	/^const git_oid *git_commit_id(const git_commit *obj)$/;"	f	typeref:typename:const git_oid *
git_commit_list	my_project/libgit2/src/libgit2/commit_list.h	/^typedef struct git_commit_list {$/;"	s
git_commit_list	my_project/libgit2/src/libgit2/commit_list.h	/^} git_commit_list;$/;"	t	typeref:struct:git_commit_list
git_commit_list_alloc_node	my_project/libgit2/src/libgit2/commit_list.c	/^git_commit_list_node *git_commit_list_alloc_node(git_revwalk *walk)$/;"	f	typeref:typename:git_commit_list_node *
git_commit_list_create	my_project/libgit2/src/libgit2/commit_list.c	/^git_commit_list *git_commit_list_create(git_commit_list_node *item, git_commit_list *next) {$/;"	f	typeref:typename:git_commit_list *
git_commit_list_free	my_project/libgit2/src/libgit2/commit_list.c	/^void git_commit_list_free(git_commit_list **list_p)$/;"	f	typeref:typename:void
git_commit_list_generation_cmp	my_project/libgit2/src/libgit2/commit_list.c	/^int git_commit_list_generation_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_commit_list_insert	my_project/libgit2/src/libgit2/commit_list.c	/^git_commit_list *git_commit_list_insert(git_commit_list_node *item, git_commit_list **list_p)$/;"	f	typeref:typename:git_commit_list *
git_commit_list_insert_by_date	my_project/libgit2/src/libgit2/commit_list.c	/^git_commit_list *git_commit_list_insert_by_date(git_commit_list_node *item, git_commit_list **li/;"	f	typeref:typename:git_commit_list *
git_commit_list_node	my_project/libgit2/src/libgit2/commit_list.h	/^typedef struct git_commit_list_node {$/;"	s
git_commit_list_node	my_project/libgit2/src/libgit2/commit_list.h	/^} git_commit_list_node;$/;"	t	typeref:struct:git_commit_list_node
git_commit_list_parse	my_project/libgit2/src/libgit2/commit_list.c	/^int git_commit_list_parse(git_revwalk *walk, git_commit_list_node *commit)$/;"	f	typeref:typename:int
git_commit_list_pop	my_project/libgit2/src/libgit2/commit_list.c	/^git_commit_list_node *git_commit_list_pop(git_commit_list **stack)$/;"	f	typeref:typename:git_commit_list_node *
git_commit_list_time_cmp	my_project/libgit2/src/libgit2/commit_list.c	/^int git_commit_list_time_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_commit_lookup	my_project/libgit2/src/libgit2/object_api.c	/^int git_commit_lookup(git_commit **out, git_repository *repo, const git_oid *id)$/;"	f	typeref:typename:int
git_commit_lookup_prefix	my_project/libgit2/src/libgit2/object_api.c	/^int git_commit_lookup_prefix(git_commit **out, git_repository *repo, const git_oid *id, size_t l/;"	f	typeref:typename:int
git_commit_message	my_project/libgit2/src/libgit2/commit.c	/^const char *git_commit_message(const git_commit *commit)$/;"	f
git_commit_nth_gen_ancestor	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_nth_gen_ancestor($/;"	f	typeref:typename:int
git_commit_owner	my_project/libgit2/src/libgit2/object_api.c	/^git_repository *git_commit_owner(const git_commit *obj)$/;"	f	typeref:typename:git_repository *
git_commit_parent	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_parent($/;"	f	typeref:typename:int
git_commit_parent_callback	my_project/libgit2/include/git2/sys/commit.h	/^typedef const git_oid * GIT_CALLBACK(git_commit_parent_callback)(size_t idx, void *payload);$/;"	t	typeref:typename:const git_oid * GIT_CALLBACK ()(size_t idx,void * payload)
git_commit_parent_id	my_project/libgit2/src/libgit2/commit.c	/^const git_oid *git_commit_parent_id($/;"	f	typeref:typename:const git_oid *
git_commit_signing_cb	my_project/libgit2/include/git2/deprecated.h	/^typedef int (*git_commit_signing_cb)($/;"	t	typeref:typename:int (*)(git_buf * signature,git_buf * signature_field,const char * commit_content,void * payload)
git_commit_summary	my_project/libgit2/src/libgit2/commit.c	/^const char *git_commit_summary(git_commit *commit)$/;"	f	typeref:typename:const char *
git_commit_tree	my_project/libgit2/src/libgit2/commit.c	/^int git_commit_tree(git_tree **tree_out, const git_commit *commit)$/;"	f	typeref:typename:int
git_commitarray	my_project/libgit2/include/git2/commit.h	/^typedef struct git_commitarray {$/;"	s
git_commitarray	my_project/libgit2/include/git2/commit.h	/^} git_commitarray;$/;"	t	typeref:struct:git_commitarray
git_commitarray_dispose	my_project/libgit2/src/libgit2/commit.c	/^void git_commitarray_dispose(git_commitarray *array)$/;"	f	typeref:typename:void
git_cond	my_project/libgit2/src/util/thread.h	/^#define git_cond /;"	d
git_cond	my_project/libgit2/src/util/unix/pthread.h	/^#define git_cond /;"	d
git_cond	my_project/libgit2/src/util/win32/thread.h	/^typedef HANDLE git_cond;$/;"	t	typeref:typename:HANDLE
git_cond_broadcast	my_project/libgit2/src/util/thread.h	/^#define git_cond_broadcast(/;"	d
git_cond_broadcast	my_project/libgit2/src/util/unix/pthread.h	/^#define git_cond_broadcast(/;"	d
git_cond_free	my_project/libgit2/src/util/thread.h	/^#define git_cond_free(/;"	d
git_cond_free	my_project/libgit2/src/util/unix/pthread.h	/^#define git_cond_free(/;"	d
git_cond_free	my_project/libgit2/src/util/win32/thread.c	/^int git_cond_free(git_cond *cond)$/;"	f	typeref:typename:int
git_cond_init	my_project/libgit2/src/util/thread.h	/^#define git_cond_init(/;"	d
git_cond_init	my_project/libgit2/src/util/unix/pthread.h	/^#define git_cond_init(/;"	d
git_cond_init	my_project/libgit2/src/util/win32/thread.c	/^int git_cond_init(git_cond *cond)$/;"	f	typeref:typename:int
git_cond_signal	my_project/libgit2/src/util/thread.h	/^#define git_cond_signal(/;"	d
git_cond_signal	my_project/libgit2/src/util/unix/pthread.h	/^#define git_cond_signal(/;"	d
git_cond_signal	my_project/libgit2/src/util/win32/thread.c	/^int git_cond_signal(git_cond *cond)$/;"	f	typeref:typename:int
git_cond_wait	my_project/libgit2/src/util/thread.h	/^#define git_cond_wait(/;"	d
git_cond_wait	my_project/libgit2/src/util/unix/pthread.h	/^#define git_cond_wait(/;"	d
git_cond_wait	my_project/libgit2/src/util/win32/thread.c	/^int git_cond_wait(git_cond *cond, git_mutex *mutex)$/;"	f	typeref:typename:int
git_config	my_project/libgit2/include/git2/types.h	/^typedef struct git_config git_config;$/;"	t	typeref:struct:git_config
git_config	my_project/libgit2/src/libgit2/config.h	/^struct git_config {$/;"	s
git_config__add_instance	my_project/libgit2/src/libgit2/config.c	/^static int git_config__add_instance($/;"	f	typeref:typename:int	file:
git_config__configmap_lookup	my_project/libgit2/src/libgit2/config_cache.c	/^int git_config__configmap_lookup(int *out, git_config *config, git_configmap_item item)$/;"	f	typeref:typename:int
git_config__find_global	my_project/libgit2/src/libgit2/config.c	/^int git_config__find_global(git_str *path)$/;"	f	typeref:typename:int
git_config__find_programdata	my_project/libgit2/src/libgit2/config.c	/^int git_config__find_programdata(git_str *path)$/;"	f	typeref:typename:int
git_config__find_system	my_project/libgit2/src/libgit2/config.c	/^int git_config__find_system(git_str *path)$/;"	f	typeref:typename:int
git_config__find_xdg	my_project/libgit2/src/libgit2/config.c	/^int git_config__find_xdg(git_str *path)$/;"	f	typeref:typename:int
git_config__get_bool_force	my_project/libgit2/src/libgit2/config.c	/^int git_config__get_bool_force($/;"	f	typeref:typename:int
git_config__get_int_force	my_project/libgit2/src/libgit2/config.c	/^int git_config__get_int_force($/;"	f	typeref:typename:int
git_config__get_path	my_project/libgit2/src/libgit2/config.c	/^int git_config__get_path($/;"	f	typeref:typename:int
git_config__get_string_buf	my_project/libgit2/src/libgit2/config.c	/^int git_config__get_string_buf($/;"	f	typeref:typename:int
git_config__get_string_force	my_project/libgit2/src/libgit2/config.c	/^char *git_config__get_string_force($/;"	f	typeref:typename:char *
git_config__global_location	my_project/libgit2/src/libgit2/config.c	/^int git_config__global_location(git_str *buf)$/;"	f	typeref:typename:int
git_config__lookup_entry	my_project/libgit2/src/libgit2/config.c	/^int git_config__lookup_entry($/;"	f	typeref:typename:int
git_config__normalize_name	my_project/libgit2/src/libgit2/config.c	/^int git_config__normalize_name(const char *in, char **out)$/;"	f	typeref:typename:int
git_config__parse_path	my_project/libgit2/src/libgit2/config.c	/^static int git_config__parse_path(git_str *out, const char *value)$/;"	f	typeref:typename:int	file:
git_config__update_entry	my_project/libgit2/src/libgit2/config.c	/^int git_config__update_entry($/;"	f	typeref:typename:int
git_config_add_backend	my_project/libgit2/src/libgit2/config.c	/^int git_config_add_backend($/;"	f	typeref:typename:int
git_config_add_file_ondisk	my_project/libgit2/src/libgit2/config.c	/^int git_config_add_file_ondisk($/;"	f	typeref:typename:int
git_config_backend	my_project/libgit2/include/git2/sys/config.h	/^struct git_config_backend {$/;"	s
git_config_backend	my_project/libgit2/include/git2/types.h	/^typedef struct git_config_backend git_config_backend;$/;"	t	typeref:struct:git_config_backend
git_config_backend_delete	my_project/libgit2/src/libgit2/config_backend.h	/^GIT_INLINE(int) git_config_backend_delete($/;"	f	typeref:typename:int
git_config_backend_foreach	my_project/libgit2/src/libgit2/config_backend.h	/^GIT_INLINE(int) git_config_backend_foreach($/;"	f	typeref:typename:int
git_config_backend_foreach_match	my_project/libgit2/src/libgit2/config.c	/^int git_config_backend_foreach_match($/;"	f	typeref:typename:int
git_config_backend_free	my_project/libgit2/src/libgit2/config_backend.h	/^GIT_INLINE(void) git_config_backend_free(git_config_backend *cfg)$/;"	f	typeref:typename:void
git_config_backend_from_file	my_project/libgit2/src/libgit2/config_file.c	/^int git_config_backend_from_file(git_config_backend **out, const char *path)$/;"	f	typeref:typename:int
git_config_backend_from_string	my_project/libgit2/src/libgit2/config_mem.c	/^int git_config_backend_from_string($/;"	f	typeref:typename:int
git_config_backend_from_values	my_project/libgit2/src/libgit2/config_mem.c	/^int git_config_backend_from_values($/;"	f	typeref:typename:int
git_config_backend_get_string	my_project/libgit2/src/libgit2/config_backend.h	/^GIT_INLINE(int) git_config_backend_get_string($/;"	f	typeref:typename:int
git_config_backend_lock	my_project/libgit2/src/libgit2/config_backend.h	/^GIT_INLINE(int) git_config_backend_lock(git_config_backend *cfg)$/;"	f	typeref:typename:int
git_config_backend_memory_options	my_project/libgit2/include/git2/sys/config.h	/^} git_config_backend_memory_options;$/;"	t	typeref:struct:__anonebfd18fe0108
git_config_backend_open	my_project/libgit2/src/libgit2/config_backend.h	/^GIT_INLINE(int) git_config_backend_open(git_config_backend *cfg, unsigned int level, const git_r/;"	f	typeref:typename:int
git_config_backend_set_string	my_project/libgit2/src/libgit2/config_backend.h	/^GIT_INLINE(int) git_config_backend_set_string($/;"	f	typeref:typename:int
git_config_backend_snapshot	my_project/libgit2/src/libgit2/config_snapshot.c	/^int git_config_backend_snapshot(git_config_backend **out, git_config_backend *source)$/;"	f	typeref:typename:int
git_config_backend_unlock	my_project/libgit2/src/libgit2/config_backend.h	/^GIT_INLINE(int) git_config_backend_unlock(git_config_backend *cfg, int success)$/;"	f	typeref:typename:int
git_config_delete_entry	my_project/libgit2/src/libgit2/config.c	/^int git_config_delete_entry(git_config *config, const char *name)$/;"	f	typeref:typename:int
git_config_delete_multivar	my_project/libgit2/src/libgit2/config.c	/^int git_config_delete_multivar(git_config *config, const char *name, const char *regexp)$/;"	f	typeref:typename:int
git_config_entry	my_project/libgit2/include/git2/config.h	/^typedef struct git_config_entry {$/;"	s
git_config_entry	my_project/libgit2/include/git2/config.h	/^} git_config_entry;$/;"	t	typeref:struct:git_config_entry
git_config_entry_free	my_project/libgit2/src/libgit2/config.c	/^void git_config_entry_free(git_config_entry *entry)$/;"	f	typeref:typename:void
git_config_escaped	my_project/libgit2/src/libgit2/config_parse.c	/^const char *git_config_escaped = "\\n\\t\\b\\"\\\\";$/;"	v	typeref:typename:const char *
git_config_escapes	my_project/libgit2/src/libgit2/config_parse.c	/^const char *git_config_escapes = "ntb\\"\\\\";$/;"	v	typeref:typename:const char *
git_config_find_global	my_project/libgit2/src/libgit2/config.c	/^int git_config_find_global(git_buf *path)$/;"	f	typeref:typename:int
git_config_find_programdata	my_project/libgit2/src/libgit2/config.c	/^int git_config_find_programdata(git_buf *path)$/;"	f	typeref:typename:int
git_config_find_system	my_project/libgit2/src/libgit2/config.c	/^int git_config_find_system(git_buf *path)$/;"	f	typeref:typename:int
git_config_find_xdg	my_project/libgit2/src/libgit2/config.c	/^int git_config_find_xdg(git_buf *path)$/;"	f	typeref:typename:int
git_config_foreach	my_project/libgit2/src/libgit2/config.c	/^int git_config_foreach($/;"	f	typeref:typename:int
git_config_foreach_cb	my_project/libgit2/include/git2/config.h	/^typedef int GIT_CALLBACK(git_config_foreach_cb)(const git_config_entry *entry, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_config_entry * entry,void * payload)
git_config_foreach_match	my_project/libgit2/src/libgit2/config.c	/^int git_config_foreach_match($/;"	f	typeref:typename:int
git_config_free	my_project/libgit2/src/libgit2/config.c	/^void git_config_free(git_config *config)$/;"	f	typeref:typename:void
git_config_get_bool	my_project/libgit2/src/libgit2/config.c	/^int git_config_get_bool(int *out, const git_config *config, const char *name)$/;"	f	typeref:typename:int
git_config_get_entry	my_project/libgit2/src/libgit2/config.c	/^int git_config_get_entry($/;"	f	typeref:typename:int
git_config_get_int32	my_project/libgit2/src/libgit2/config.c	/^int git_config_get_int32(int32_t *out, const git_config *config, const char *name)$/;"	f	typeref:typename:int
git_config_get_int64	my_project/libgit2/src/libgit2/config.c	/^int git_config_get_int64(int64_t *out, const git_config *config, const char *name)$/;"	f	typeref:typename:int
git_config_get_mapped	my_project/libgit2/src/libgit2/config.c	/^int git_config_get_mapped($/;"	f	typeref:typename:int
git_config_get_multivar_foreach	my_project/libgit2/src/libgit2/config.c	/^int git_config_get_multivar_foreach($/;"	f	typeref:typename:int
git_config_get_path	my_project/libgit2/src/libgit2/config.c	/^int git_config_get_path($/;"	f	typeref:typename:int
git_config_get_string	my_project/libgit2/src/libgit2/config.c	/^int git_config_get_string($/;"	f	typeref:typename:int
git_config_get_string_buf	my_project/libgit2/src/libgit2/config.c	/^int git_config_get_string_buf($/;"	f	typeref:typename:int
git_config_init_backend	my_project/libgit2/src/libgit2/config.c	/^int git_config_init_backend(git_config_backend *backend, unsigned int version)$/;"	f	typeref:typename:int
git_config_iterator	my_project/libgit2/include/git2/config.h	/^typedef struct git_config_iterator git_config_iterator;$/;"	t	typeref:struct:git_config_iterator
git_config_iterator	my_project/libgit2/include/git2/sys/config.h	/^struct git_config_iterator {$/;"	s
git_config_iterator_free	my_project/libgit2/src/libgit2/config.c	/^void git_config_iterator_free(git_config_iterator *iter)$/;"	f	typeref:typename:void
git_config_iterator_glob_new	my_project/libgit2/src/libgit2/config.c	/^int git_config_iterator_glob_new(git_config_iterator **out, const git_config *config, const char/;"	f	typeref:typename:int
git_config_iterator_new	my_project/libgit2/src/libgit2/config.c	/^int git_config_iterator_new(git_config_iterator **out, const git_config *config)$/;"	f	typeref:typename:int
git_config_level_t	my_project/libgit2/include/git2/config.h	/^} git_config_level_t;$/;"	t	typeref:enum:__anon3fe317b00103
git_config_list	my_project/libgit2/src/libgit2/config_list.c	/^struct git_config_list {$/;"	s	file:
git_config_list	my_project/libgit2/src/libgit2/config_list.h	/^typedef struct git_config_list git_config_list;$/;"	t	typeref:struct:git_config_list
git_config_list_add_string	my_project/libgit2/src/libgit2/config_list.c	/^const char *git_config_list_add_string($/;"	f	typeref:typename:const char *
git_config_list_append	my_project/libgit2/src/libgit2/config_list.c	/^int git_config_list_append(git_config_list *config_list, git_config_list_entry *entry)$/;"	f	typeref:typename:int
git_config_list_dup	my_project/libgit2/src/libgit2/config_list.c	/^int git_config_list_dup(git_config_list **out, git_config_list *config_list)$/;"	f	typeref:typename:int
git_config_list_dup_entry	my_project/libgit2/src/libgit2/config_list.c	/^int git_config_list_dup_entry(git_config_list *config_list, const git_config_entry *entry)$/;"	f	typeref:typename:int
git_config_list_entry	my_project/libgit2/src/libgit2/config_list.h	/^} git_config_list_entry;$/;"	t	typeref:struct:__anon421351460108
git_config_list_entry_free	my_project/libgit2/src/libgit2/config_list.c	/^void git_config_list_entry_free(git_config_entry *e)$/;"	f	typeref:typename:void
git_config_list_free	my_project/libgit2/src/libgit2/config_list.c	/^void git_config_list_free(git_config_list *config_list)$/;"	f	typeref:typename:void
git_config_list_get	my_project/libgit2/src/libgit2/config_list.c	/^int git_config_list_get(git_config_list_entry **out, git_config_list *config_list, const char *k/;"	f	typeref:typename:int
git_config_list_get_unique	my_project/libgit2/src/libgit2/config_list.c	/^int git_config_list_get_unique(git_config_list_entry **out, git_config_list *config_list, const /;"	f	typeref:typename:int
git_config_list_incref	my_project/libgit2/src/libgit2/config_list.c	/^void git_config_list_incref(git_config_list *config_list)$/;"	f	typeref:typename:void
git_config_list_iterator_new	my_project/libgit2/src/libgit2/config_list.c	/^int git_config_list_iterator_new(git_config_iterator **out, git_config_list *config_list)$/;"	f	typeref:typename:int
git_config_list_new	my_project/libgit2/src/libgit2/config_list.c	/^int git_config_list_new(git_config_list **out)$/;"	f	typeref:typename:int
git_config_lock	my_project/libgit2/src/libgit2/config.c	/^int git_config_lock(git_transaction **out, git_config *config)$/;"	f	typeref:typename:int
git_config_lookup_map_enum	my_project/libgit2/src/libgit2/config.c	/^int git_config_lookup_map_enum(git_configmap_t *type_out, const char **str_out,$/;"	f	typeref:typename:int
git_config_lookup_map_value	my_project/libgit2/src/libgit2/config.c	/^int git_config_lookup_map_value($/;"	f	typeref:typename:int
git_config_multivar_iterator_new	my_project/libgit2/src/libgit2/config.c	/^int git_config_multivar_iterator_new(git_config_iterator **out, const git_config *config, const /;"	f	typeref:typename:int
git_config_new	my_project/libgit2/src/libgit2/config.c	/^int git_config_new(git_config **out)$/;"	f	typeref:typename:int
git_config_next	my_project/libgit2/src/libgit2/config.c	/^int git_config_next(git_config_entry **entry, git_config_iterator *iter)$/;"	f	typeref:typename:int
git_config_open_default	my_project/libgit2/src/libgit2/config.c	/^int git_config_open_default(git_config **out)$/;"	f	typeref:typename:int
git_config_open_global	my_project/libgit2/src/libgit2/config.c	/^int git_config_open_global(git_config **out, git_config *config)$/;"	f	typeref:typename:int
git_config_open_level	my_project/libgit2/src/libgit2/config.c	/^int git_config_open_level($/;"	f	typeref:typename:int
git_config_open_ondisk	my_project/libgit2/src/libgit2/config.c	/^int git_config_open_ondisk(git_config **out, const char *path)$/;"	f	typeref:typename:int
git_config_parse	my_project/libgit2/src/libgit2/config_parse.c	/^int git_config_parse($/;"	f	typeref:typename:int
git_config_parse_bool	my_project/libgit2/src/libgit2/config.c	/^int git_config_parse_bool(int *out, const char *value)$/;"	f	typeref:typename:int
git_config_parse_int32	my_project/libgit2/src/libgit2/config.c	/^int git_config_parse_int32(int32_t *out, const char *value)$/;"	f	typeref:typename:int
git_config_parse_int64	my_project/libgit2/src/libgit2/config.c	/^int git_config_parse_int64(int64_t *out, const char *value)$/;"	f	typeref:typename:int
git_config_parse_path	my_project/libgit2/src/libgit2/config.c	/^int git_config_parse_path(git_buf *out, const char *value)$/;"	f	typeref:typename:int
git_config_parser	my_project/libgit2/src/libgit2/config_parse.h	/^} git_config_parser;$/;"	t	typeref:struct:__anona5ab66050108
git_config_parser_comment_cb	my_project/libgit2/src/libgit2/config_parse.h	/^typedef int (*git_config_parser_comment_cb)($/;"	t	typeref:typename:int (*)(git_config_parser * parser,const char * line,size_t line_len,void * payload)
git_config_parser_dispose	my_project/libgit2/src/libgit2/config_parse.c	/^void git_config_parser_dispose(git_config_parser *parser)$/;"	f	typeref:typename:void
git_config_parser_eof_cb	my_project/libgit2/src/libgit2/config_parse.h	/^typedef int (*git_config_parser_eof_cb)($/;"	t	typeref:typename:int (*)(git_config_parser * parser,const char * current_section,void * payload)
git_config_parser_init	my_project/libgit2/src/libgit2/config_parse.c	/^int git_config_parser_init(git_config_parser *out, const char *path, const char *data, size_t da/;"	f	typeref:typename:int
git_config_parser_section_cb	my_project/libgit2/src/libgit2/config_parse.h	/^typedef int (*git_config_parser_section_cb)($/;"	t	typeref:typename:int (*)(git_config_parser * parser,const char * current_section,const char * line,size_t line_len,void * payload)
git_config_parser_variable_cb	my_project/libgit2/src/libgit2/config_parse.h	/^typedef int (*git_config_parser_variable_cb)($/;"	t	typeref:typename:int (*)(git_config_parser * parser,const char * current_section,const char * var_name,const char * var_value,const char * line,size_t line_len,void * payload)
git_config_rename_section	my_project/libgit2/src/libgit2/config.c	/^int git_config_rename_section($/;"	f	typeref:typename:int
git_config_set_bool	my_project/libgit2/src/libgit2/config.c	/^int git_config_set_bool(git_config *config, const char *name, int value)$/;"	f	typeref:typename:int
git_config_set_int32	my_project/libgit2/src/libgit2/config.c	/^int git_config_set_int32(git_config *config, const char *name, int32_t value)$/;"	f	typeref:typename:int
git_config_set_int64	my_project/libgit2/src/libgit2/config.c	/^int git_config_set_int64(git_config *config, const char *name, int64_t value)$/;"	f	typeref:typename:int
git_config_set_multivar	my_project/libgit2/src/libgit2/config.c	/^int git_config_set_multivar(git_config *config, const char *name, const char *regexp, const char/;"	f	typeref:typename:int
git_config_set_string	my_project/libgit2/src/libgit2/config.c	/^int git_config_set_string(git_config *config, const char *name, const char *value)$/;"	f	typeref:typename:int
git_config_set_writeorder	my_project/libgit2/src/libgit2/config.c	/^int git_config_set_writeorder($/;"	f	typeref:typename:int
git_config_snapshot	my_project/libgit2/src/libgit2/config.c	/^int git_config_snapshot(git_config **out, git_config *in)$/;"	f	typeref:typename:int
git_config_unlock	my_project/libgit2/src/libgit2/config.c	/^int git_config_unlock($/;"	f	typeref:typename:int
git_configmap	my_project/libgit2/include/git2/config.h	/^} git_configmap;$/;"	t	typeref:struct:__anon3fe317b00308
git_configmap_item	my_project/libgit2/src/libgit2/repository.h	/^} git_configmap_item;$/;"	t	typeref:enum:__anon453495b50103
git_configmap_t	my_project/libgit2/include/git2/config.h	/^} git_configmap_t;$/;"	t	typeref:enum:__anon3fe317b00203
git_configmap_value	my_project/libgit2/src/libgit2/repository.h	/^} git_configmap_value;$/;"	t	typeref:enum:__anon453495b50203
git_cred	my_project/libgit2/include/git2/deprecated.h	/^typedef git_credential git_cred;$/;"	t	typeref:typename:git_credential
git_cred_acquire_cb	my_project/libgit2/include/git2/deprecated.h	/^typedef git_credential_acquire_cb git_cred_acquire_cb;$/;"	t	typeref:typename:git_credential_acquire_cb
git_cred_default	my_project/libgit2/include/git2/deprecated.h	/^typedef git_credential_default git_cred_default;$/;"	t	typeref:typename:git_credential_default
git_cred_default_new	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_cred_default_new(git_credential **out)$/;"	f	typeref:typename:int
git_cred_free	my_project/libgit2/src/libgit2/transports/credential.c	/^void git_cred_free(git_credential *cred)$/;"	f	typeref:typename:void
git_cred_get_username	my_project/libgit2/src/libgit2/transports/credential.c	/^const char *git_cred_get_username(git_credential *cred)$/;"	f	typeref:typename:const char *
git_cred_has_username	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_cred_has_username(git_credential *cred)$/;"	f	typeref:typename:int
git_cred_sign_callback	my_project/libgit2/include/git2/deprecated.h	/^typedef git_credential_sign_cb git_cred_sign_callback;$/;"	t	typeref:typename:git_credential_sign_cb
git_cred_sign_cb	my_project/libgit2/include/git2/deprecated.h	/^typedef git_credential_sign_cb git_cred_sign_cb;$/;"	t	typeref:typename:git_credential_sign_cb
git_cred_ssh_custom	my_project/libgit2/include/git2/deprecated.h	/^typedef git_credential_ssh_custom git_cred_ssh_custom;$/;"	t	typeref:typename:git_credential_ssh_custom
git_cred_ssh_custom_new	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_cred_ssh_custom_new($/;"	f	typeref:typename:int
git_cred_ssh_interactive	my_project/libgit2/include/git2/deprecated.h	/^typedef git_credential_ssh_interactive git_cred_ssh_interactive;$/;"	t	typeref:typename:git_credential_ssh_interactive
git_cred_ssh_interactive_callback	my_project/libgit2/include/git2/deprecated.h	/^typedef git_credential_ssh_interactive_cb git_cred_ssh_interactive_callback;$/;"	t	typeref:typename:git_credential_ssh_interactive_cb
git_cred_ssh_interactive_cb	my_project/libgit2/include/git2/deprecated.h	/^typedef git_credential_ssh_interactive_cb git_cred_ssh_interactive_cb;$/;"	t	typeref:typename:git_credential_ssh_interactive_cb
git_cred_ssh_interactive_new	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_cred_ssh_interactive_new($/;"	f	typeref:typename:int
git_cred_ssh_key	my_project/libgit2/include/git2/deprecated.h	/^typedef git_credential_ssh_key git_cred_ssh_key;$/;"	t	typeref:typename:git_credential_ssh_key
git_cred_ssh_key_from_agent	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_cred_ssh_key_from_agent($/;"	f	typeref:typename:int
git_cred_ssh_key_memory_new	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_cred_ssh_key_memory_new($/;"	f	typeref:typename:int
git_cred_ssh_key_new	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_cred_ssh_key_new($/;"	f	typeref:typename:int
git_cred_username	my_project/libgit2/include/git2/deprecated.h	/^typedef git_credential_username git_cred_username;$/;"	t	typeref:typename:git_credential_username
git_cred_username_new	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_cred_username_new(git_credential **out, const char *username)$/;"	f	typeref:typename:int
git_cred_userpass	my_project/libgit2/src/libgit2/transports/credential_helpers.c	/^int git_cred_userpass($/;"	f	typeref:typename:int
git_cred_userpass_payload	my_project/libgit2/include/git2/deprecated.h	/^typedef git_credential_userpass_payload git_cred_userpass_payload;$/;"	t	typeref:typename:git_credential_userpass_payload
git_cred_userpass_plaintext	my_project/libgit2/include/git2/deprecated.h	/^typedef git_credential_userpass_plaintext git_cred_userpass_plaintext;$/;"	t	typeref:typename:git_credential_userpass_plaintext
git_cred_userpass_plaintext_new	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_cred_userpass_plaintext_new($/;"	f	typeref:typename:int
git_credential	my_project/libgit2/include/git2/credential.h	/^typedef struct git_credential git_credential;$/;"	t	typeref:struct:git_credential
git_credential	my_project/libgit2/include/git2/sys/credential.h	/^struct git_credential {$/;"	s
git_credential_acquire_cb	my_project/libgit2/include/git2/credential.h	/^typedef int GIT_CALLBACK(git_credential_acquire_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_credential ** out,const char * url,const char * username_from_url,unsigned int allowed_types,void * payload)
git_credential_default	my_project/libgit2/include/git2/credential.h	/^typedef struct git_credential git_credential_default;$/;"	t	typeref:struct:git_credential
git_credential_default_new	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_credential_default_new(git_credential **cred)$/;"	f	typeref:typename:int
git_credential_free	my_project/libgit2/src/libgit2/transports/credential.c	/^void git_credential_free(git_credential *cred)$/;"	f	typeref:typename:void
git_credential_get_username	my_project/libgit2/src/libgit2/transports/credential.c	/^const char *git_credential_get_username(git_credential *cred)$/;"	f	typeref:typename:const char *
git_credential_has_username	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_credential_has_username(git_credential *cred)$/;"	f	typeref:typename:int
git_credential_sign_cb	my_project/libgit2/include/git2/credential.h	/^typedef int GIT_CALLBACK(git_credential_sign_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(LIBSSH2_SESSION * session,unsigned char ** sig,size_t * sig_len,const unsigned char * data,size_t data_len,void ** abstract)
git_credential_ssh_custom	my_project/libgit2/include/git2/credential.h	/^typedef struct git_credential_ssh_custom git_credential_ssh_custom;$/;"	t	typeref:struct:git_credential_ssh_custom
git_credential_ssh_custom	my_project/libgit2/include/git2/sys/credential.h	/^struct git_credential_ssh_custom {$/;"	s
git_credential_ssh_custom_new	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_credential_ssh_custom_new($/;"	f	typeref:typename:int
git_credential_ssh_interactive	my_project/libgit2/include/git2/credential.h	/^typedef struct git_credential_ssh_interactive git_credential_ssh_interactive;$/;"	t	typeref:struct:git_credential_ssh_interactive
git_credential_ssh_interactive	my_project/libgit2/include/git2/sys/credential.h	/^struct git_credential_ssh_interactive {$/;"	s
git_credential_ssh_interactive_cb	my_project/libgit2/include/git2/credential.h	/^typedef void GIT_CALLBACK(git_credential_ssh_interactive_cb)($/;"	t	typeref:typename:void GIT_CALLBACK ()(const char * name,int name_len,const char * instruction,int instruction_len,int num_prompts,const LIBSSH2_USERAUTH_KBDINT_PROMPT * prompts,LIBSSH2_USERAUTH_KBDINT_RESPONSE * responses,void ** abstract)
git_credential_ssh_interactive_new	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_credential_ssh_interactive_new($/;"	f	typeref:typename:int
git_credential_ssh_key	my_project/libgit2/include/git2/credential.h	/^typedef struct git_credential_ssh_key git_credential_ssh_key;$/;"	t	typeref:struct:git_credential_ssh_key
git_credential_ssh_key	my_project/libgit2/include/git2/sys/credential.h	/^struct git_credential_ssh_key {$/;"	s
git_credential_ssh_key_from_agent	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_credential_ssh_key_from_agent(git_credential **cred, const char *username) {$/;"	f	typeref:typename:int
git_credential_ssh_key_memory_new	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_credential_ssh_key_memory_new($/;"	f	typeref:typename:int
git_credential_ssh_key_new	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_credential_ssh_key_new($/;"	f	typeref:typename:int
git_credential_ssh_key_type_new	my_project/libgit2/src/libgit2/transports/credential.c	/^static int git_credential_ssh_key_type_new($/;"	f	typeref:typename:int	file:
git_credential_t	my_project/libgit2/include/git2/credential.h	/^} git_credential_t;$/;"	t	typeref:enum:__anonb62820150103
git_credential_username	my_project/libgit2/include/git2/credential.h	/^typedef struct git_credential_username git_credential_username;$/;"	t	typeref:struct:git_credential_username
git_credential_username	my_project/libgit2/include/git2/sys/credential.h	/^struct git_credential_username {$/;"	s
git_credential_username_new	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_credential_username_new(git_credential **cred, const char *username)$/;"	f	typeref:typename:int
git_credential_userpass	my_project/libgit2/src/libgit2/transports/credential_helpers.c	/^int git_credential_userpass($/;"	f	typeref:typename:int
git_credential_userpass_payload	my_project/libgit2/include/git2/credential_helpers.h	/^typedef struct git_credential_userpass_payload {$/;"	s
git_credential_userpass_payload	my_project/libgit2/include/git2/credential_helpers.h	/^} git_credential_userpass_payload;$/;"	t	typeref:struct:git_credential_userpass_payload
git_credential_userpass_plaintext	my_project/libgit2/include/git2/credential.h	/^typedef struct git_credential_userpass_plaintext git_credential_userpass_plaintext;$/;"	t	typeref:struct:git_credential_userpass_plaintext
git_credential_userpass_plaintext	my_project/libgit2/include/git2/sys/credential.h	/^struct git_credential_userpass_plaintext {$/;"	s
git_credential_userpass_plaintext_new	my_project/libgit2/src/libgit2/transports/credential.c	/^int git_credential_userpass_plaintext_new($/;"	f	typeref:typename:int
git_credtype_t	my_project/libgit2/include/git2/deprecated.h	/^#define git_credtype_t /;"	d
git_crlf_filter_new	my_project/libgit2/src/libgit2/crlf.c	/^git_filter *git_crlf_filter_new(void)$/;"	f	typeref:typename:git_filter *
git_crlf_t	my_project/libgit2/src/libgit2/crlf.c	/^} git_crlf_t;$/;"	t	typeref:enum:__anon3ae3a4370103	file:
git_cvar_map	my_project/libgit2/include/git2/deprecated.h	/^typedef git_configmap git_cvar_map;$/;"	t	typeref:typename:git_configmap
git_date_offset_parse	my_project/libgit2/src/util/date.c	/^int git_date_offset_parse(git_time_t *out, int *out_offset, const char *date)$/;"	f	typeref:typename:int
git_date_parse	my_project/libgit2/src/util/date.c	/^int git_date_parse(git_time_t *out, const char *date)$/;"	f	typeref:typename:int
git_date_rfc2822_fmt	my_project/libgit2/src/util/date.c	/^int git_date_rfc2822_fmt(git_str *out, git_time_t time, int offset)$/;"	f	typeref:typename:int
git_debugalloc_init_allocator	my_project/libgit2/src/util/allocators/debugalloc.c	/^int git_debugalloc_init_allocator(git_allocator *allocator)$/;"	f	typeref:typename:int
git_decode_varint	my_project/libgit2/src/util/varint.c	/^uintmax_t git_decode_varint(const unsigned char *bufp, size_t *varint_len)$/;"	f	typeref:typename:uintmax_t
git_delta	my_project/libgit2/src/libgit2/delta.h	/^GIT_INLINE(int) git_delta($/;"	f	typeref:typename:int
git_delta_apply	my_project/libgit2/src/libgit2/delta.c	/^int git_delta_apply($/;"	f	typeref:typename:int
git_delta_create_from_index	my_project/libgit2/src/libgit2/delta.c	/^int git_delta_create_from_index($/;"	f	typeref:typename:int
git_delta_index	my_project/libgit2/src/libgit2/delta.c	/^struct git_delta_index {$/;"	s	file:
git_delta_index	my_project/libgit2/src/libgit2/delta.h	/^typedef struct git_delta_index git_delta_index;$/;"	t	typeref:struct:git_delta_index
git_delta_index_free	my_project/libgit2/src/libgit2/delta.c	/^void git_delta_index_free(git_delta_index *index)$/;"	f	typeref:typename:void
git_delta_index_init	my_project/libgit2/src/libgit2/delta.c	/^int git_delta_index_init($/;"	f	typeref:typename:int
git_delta_index_size	my_project/libgit2/src/libgit2/delta.c	/^size_t git_delta_index_size(git_delta_index *index)$/;"	f	typeref:typename:size_t
git_delta_read_header	my_project/libgit2/src/libgit2/delta.c	/^int git_delta_read_header($/;"	f	typeref:typename:int
git_delta_read_header_fromstream	my_project/libgit2/src/libgit2/delta.c	/^int git_delta_read_header_fromstream($/;"	f	typeref:typename:int
git_delta_t	my_project/libgit2/include/git2/diff.h	/^} git_delta_t;$/;"	t	typeref:enum:__anon7f3f1dd30303
git_dependency_chain	my_project/libgit2/src/libgit2/pack.h	/^typedef git_array_t(struct pack_chain_elem) git_dependency_chain;$/;"	t
git_describe__format	my_project/libgit2/src/libgit2/describe.c	/^static int git_describe__format($/;"	f	typeref:typename:int	file:
git_describe_commit	my_project/libgit2/src/libgit2/describe.c	/^int git_describe_commit($/;"	f	typeref:typename:int
git_describe_format	my_project/libgit2/src/libgit2/describe.c	/^int git_describe_format($/;"	f	typeref:typename:int
git_describe_format_options	my_project/libgit2/include/git2/describe.h	/^} git_describe_format_options;$/;"	t	typeref:struct:__anon07cf78db0208
git_describe_format_options_init	my_project/libgit2/src/libgit2/describe.c	/^int git_describe_format_options_init(git_describe_format_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_describe_init_format_options	my_project/libgit2/src/libgit2/describe.c	/^int git_describe_init_format_options(git_describe_format_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_describe_init_options	my_project/libgit2/src/libgit2/describe.c	/^int git_describe_init_options(git_describe_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_describe_options	my_project/libgit2/include/git2/describe.h	/^typedef struct git_describe_options {$/;"	s
git_describe_options	my_project/libgit2/include/git2/describe.h	/^} git_describe_options;$/;"	t	typeref:struct:git_describe_options
git_describe_options_init	my_project/libgit2/src/libgit2/describe.c	/^int git_describe_options_init(git_describe_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_describe_result	my_project/libgit2/include/git2/describe.h	/^typedef struct git_describe_result git_describe_result;$/;"	t	typeref:struct:git_describe_result
git_describe_result	my_project/libgit2/src/libgit2/describe.c	/^struct git_describe_result {$/;"	s	file:
git_describe_result_free	my_project/libgit2/src/libgit2/describe.c	/^void git_describe_result_free(git_describe_result *result)$/;"	f	typeref:typename:void
git_describe_strategy_t	my_project/libgit2/include/git2/describe.h	/^} git_describe_strategy_t;$/;"	t	typeref:enum:__anon07cf78db0103
git_describe_workdir	my_project/libgit2/src/libgit2/describe.c	/^int git_describe_workdir($/;"	f	typeref:typename:int
git_diff	my_project/libgit2/include/git2/diff.h	/^typedef struct git_diff git_diff;$/;"	t	typeref:struct:git_diff
git_diff	my_project/libgit2/src/libgit2/diff.h	/^struct git_diff {$/;"	s
git_diff__commit	my_project/libgit2/src/libgit2/diff_generate.c	/^int git_diff__commit($/;"	f	typeref:typename:int
git_diff__delta_dup	my_project/libgit2/src/libgit2/diff_tform.c	/^git_diff_delta *git_diff__delta_dup($/;"	f	typeref:typename:git_diff_delta *
git_diff__entry_cmp	my_project/libgit2/src/libgit2/diff.c	/^int git_diff__entry_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_diff__entry_icmp	my_project/libgit2/src/libgit2/diff.c	/^int git_diff__entry_icmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_diff__from_iterators	my_project/libgit2/src/libgit2/diff_generate.c	/^int git_diff__from_iterators($/;"	f	typeref:typename:int
git_diff__merge	my_project/libgit2/src/libgit2/diff_tform.c	/^int git_diff__merge($/;"	f	typeref:typename:int
git_diff__merge_cb	my_project/libgit2/src/libgit2/diff_generate.h	/^typedef git_diff_delta *(*git_diff__merge_cb)($/;"	t	typeref:typename:git_diff_delta * (*)(const git_diff_delta * left,const git_diff_delta * right,git_pool * pool)
git_diff__merge_like_cgit	my_project/libgit2/src/libgit2/diff_tform.c	/^git_diff_delta *git_diff__merge_like_cgit($/;"	f	typeref:typename:git_diff_delta *
git_diff__oid_for_entry	my_project/libgit2/src/libgit2/diff_generate.c	/^int git_diff__oid_for_entry($/;"	f	typeref:typename:int
git_diff__oid_for_file	my_project/libgit2/src/libgit2/diff_generate.c	/^int git_diff__oid_for_file($/;"	f	typeref:typename:int
git_diff__paired_foreach	my_project/libgit2/src/libgit2/diff_generate.c	/^int git_diff__paired_foreach($/;"	f	typeref:typename:int
git_diff__stats_to_buf	my_project/libgit2/src/libgit2/diff_stats.c	/^int git_diff__stats_to_buf($/;"	f	typeref:typename:int
git_diff_addref	my_project/libgit2/src/libgit2/diff.c	/^void git_diff_addref(git_diff *diff)$/;"	f	typeref:typename:void
git_diff_binary	my_project/libgit2/include/git2/diff.h	/^} git_diff_binary;$/;"	t	typeref:struct:__anon7f3f1dd30908
git_diff_binary_cb	my_project/libgit2/include/git2/diff.h	/^typedef int GIT_CALLBACK(git_diff_binary_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff_delta * delta,const git_diff_binary * binary,void * payload)
git_diff_binary_file	my_project/libgit2/include/git2/diff.h	/^} git_diff_binary_file;$/;"	t	typeref:struct:__anon7f3f1dd30808
git_diff_binary_t	my_project/libgit2/include/git2/diff.h	/^} git_diff_binary_t;$/;"	t	typeref:enum:__anon7f3f1dd30703
git_diff_blob_to_buffer	my_project/libgit2/src/libgit2/patch_generate.c	/^int git_diff_blob_to_buffer($/;"	f	typeref:typename:int
git_diff_blobs	my_project/libgit2/src/libgit2/patch_generate.c	/^int git_diff_blobs($/;"	f	typeref:typename:int
git_diff_buffers	my_project/libgit2/src/libgit2/patch_generate.c	/^int git_diff_buffers($/;"	f	typeref:typename:int
git_diff_commit_as_email	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_commit_as_email($/;"	f	typeref:typename:int
git_diff_delta	my_project/libgit2/include/git2/diff.h	/^} git_diff_delta;$/;"	t	typeref:struct:__anon7f3f1dd30508
git_diff_delta__casecmp	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_delta__casecmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_diff_delta__cmp	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_delta__cmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_diff_delta__format_file_header	my_project/libgit2/src/libgit2/diff_print.c	/^int git_diff_delta__format_file_header($/;"	f	typeref:typename:int
git_diff_delta__should_skip	my_project/libgit2/src/libgit2/diff_generate.c	/^bool git_diff_delta__should_skip($/;"	f	typeref:typename:bool
git_diff_driver	my_project/libgit2/src/libgit2/diff_driver.c	/^struct git_diff_driver {$/;"	s	file:
git_diff_driver	my_project/libgit2/src/libgit2/diff_driver.h	/^typedef struct git_diff_driver git_diff_driver;$/;"	t	typeref:struct:git_diff_driver
git_diff_driver_builtin	my_project/libgit2/src/libgit2/diff_driver.c	/^static int git_diff_driver_builtin($/;"	f	typeref:typename:int	file:
git_diff_driver_content_is_binary	my_project/libgit2/src/libgit2/diff_driver.c	/^int git_diff_driver_content_is_binary($/;"	f	typeref:typename:int
git_diff_driver_definition	my_project/libgit2/src/libgit2/userdiff.h	/^} git_diff_driver_definition;$/;"	t	typeref:struct:__anonf1be5fcd0108
git_diff_driver_free	my_project/libgit2/src/libgit2/diff_driver.c	/^void git_diff_driver_free(git_diff_driver *driver)$/;"	f	typeref:typename:void
git_diff_driver_load	my_project/libgit2/src/libgit2/diff_driver.c	/^static int git_diff_driver_load($/;"	f	typeref:typename:int	file:
git_diff_driver_lookup	my_project/libgit2/src/libgit2/diff_driver.c	/^int git_diff_driver_lookup($/;"	f	typeref:typename:int
git_diff_driver_pattern	my_project/libgit2/src/libgit2/diff_driver.c	/^} git_diff_driver_pattern;$/;"	t	typeref:struct:__anon9fad28f40208	file:
git_diff_driver_registry	my_project/libgit2/src/libgit2/diff_driver.c	/^struct git_diff_driver_registry {$/;"	s	file:
git_diff_driver_registry	my_project/libgit2/src/libgit2/diff_driver.h	/^typedef struct git_diff_driver_registry git_diff_driver_registry;$/;"	t	typeref:struct:git_diff_driver_registry
git_diff_driver_registry_free	my_project/libgit2/src/libgit2/diff_driver.c	/^void git_diff_driver_registry_free(git_diff_driver_registry *reg)$/;"	f	typeref:typename:void
git_diff_driver_registry_new	my_project/libgit2/src/libgit2/diff_driver.c	/^git_diff_driver_registry *git_diff_driver_registry_new(void)$/;"	f	typeref:typename:git_diff_driver_registry *
git_diff_driver_t	my_project/libgit2/src/libgit2/diff_driver.c	/^} git_diff_driver_t;$/;"	t	typeref:enum:__anon9fad28f40103	file:
git_diff_driver_update_options	my_project/libgit2/src/libgit2/diff_driver.c	/^void git_diff_driver_update_options($/;"	f	typeref:typename:void
git_diff_file	my_project/libgit2/include/git2/diff.h	/^} git_diff_file;$/;"	t	typeref:struct:__anon7f3f1dd30408
git_diff_file__resolve_zero_size	my_project/libgit2/src/libgit2/diff_generate.h	/^GIT_INLINE(int) git_diff_file__resolve_zero_size($/;"	f	typeref:typename:int
git_diff_file_cb	my_project/libgit2/include/git2/diff.h	/^typedef int GIT_CALLBACK(git_diff_file_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff_delta * delta,float progress,void * payload)
git_diff_file_content	my_project/libgit2/src/libgit2/diff_file.h	/^} git_diff_file_content;$/;"	t	typeref:struct:__anonffb6e84d0108
git_diff_file_content__clear	my_project/libgit2/src/libgit2/diff_file.c	/^void git_diff_file_content__clear(git_diff_file_content *fc)$/;"	f	typeref:typename:void
git_diff_file_content__init_from_diff	my_project/libgit2/src/libgit2/diff_file.c	/^int git_diff_file_content__init_from_diff($/;"	f	typeref:typename:int
git_diff_file_content__init_from_src	my_project/libgit2/src/libgit2/diff_file.c	/^int git_diff_file_content__init_from_src($/;"	f	typeref:typename:int
git_diff_file_content__load	my_project/libgit2/src/libgit2/diff_file.c	/^int git_diff_file_content__load($/;"	f	typeref:typename:int
git_diff_file_content__unload	my_project/libgit2/src/libgit2/diff_file.c	/^void git_diff_file_content__unload(git_diff_file_content *fc)$/;"	f	typeref:typename:void
git_diff_file_content_src	my_project/libgit2/src/libgit2/diff_file.h	/^} git_diff_file_content_src;$/;"	t	typeref:struct:__anonffb6e84d0208
git_diff_find_context_clear	my_project/libgit2/src/libgit2/diff_driver.c	/^void git_diff_find_context_clear(git_diff_find_context_payload *payload)$/;"	f	typeref:typename:void
git_diff_find_context_fn	my_project/libgit2/src/libgit2/diff_driver.h	/^typedef long (*git_diff_find_context_fn)($/;"	t	typeref:typename:long (*)(const char *,long,char *,long,void *)
git_diff_find_context_init	my_project/libgit2/src/libgit2/diff_driver.c	/^void git_diff_find_context_init($/;"	f	typeref:typename:void
git_diff_find_context_line	my_project/libgit2/src/libgit2/diff_driver.h	/^typedef int (*git_diff_find_context_line)($/;"	t	typeref:typename:int (*)(git_diff_driver *,git_str *)
git_diff_find_context_payload	my_project/libgit2/src/libgit2/diff_driver.h	/^} git_diff_find_context_payload;$/;"	t	typeref:struct:__anon9fad28f90108
git_diff_find_init_options	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_find_init_options($/;"	f	typeref:typename:int
git_diff_find_options	my_project/libgit2/include/git2/diff.h	/^} git_diff_find_options;$/;"	t	typeref:struct:__anon7f3f1dd30f08
git_diff_find_options_init	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_find_options_init($/;"	f	typeref:typename:int
git_diff_find_similar	my_project/libgit2/src/libgit2/diff_tform.c	/^int git_diff_find_similar($/;"	f	typeref:typename:int
git_diff_find_similar__calc_similarity	my_project/libgit2/src/libgit2/diff_tform.c	/^int git_diff_find_similar__calc_similarity($/;"	f	typeref:typename:int
git_diff_find_similar__hashsig_for_buf	my_project/libgit2/src/libgit2/diff_tform.c	/^int git_diff_find_similar__hashsig_for_buf($/;"	f	typeref:typename:int
git_diff_find_similar__hashsig_for_file	my_project/libgit2/src/libgit2/diff_tform.c	/^int git_diff_find_similar__hashsig_for_file($/;"	f	typeref:typename:int
git_diff_find_similar__hashsig_free	my_project/libgit2/src/libgit2/diff_tform.c	/^void git_diff_find_similar__hashsig_free(void *sig, void *payload)$/;"	f	typeref:typename:void
git_diff_find_t	my_project/libgit2/include/git2/diff.h	/^} git_diff_find_t;$/;"	t	typeref:enum:__anon7f3f1dd30d03
git_diff_flag_t	my_project/libgit2/include/git2/diff.h	/^} git_diff_flag_t;$/;"	t	typeref:enum:__anon7f3f1dd30203
git_diff_foreach	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_foreach($/;"	f	typeref:typename:int
git_diff_format_email	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_format_email($/;"	f	typeref:typename:int
git_diff_format_email_flags_t	my_project/libgit2/include/git2/deprecated.h	/^} git_diff_format_email_flags_t;$/;"	t	typeref:enum:__anon325f306b0103
git_diff_format_email_init_options	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_format_email_init_options($/;"	f	typeref:typename:int
git_diff_format_email_options	my_project/libgit2/include/git2/deprecated.h	/^} git_diff_format_email_options;$/;"	t	typeref:struct:__anon325f306b0208
git_diff_format_email_options_init	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_format_email_options_init($/;"	f	typeref:typename:int
git_diff_format_t	my_project/libgit2/include/git2/diff.h	/^} git_diff_format_t;$/;"	t	typeref:enum:__anon7f3f1dd31003
git_diff_free	my_project/libgit2/src/libgit2/diff.c	/^void git_diff_free(git_diff *diff)$/;"	f	typeref:typename:void
git_diff_from_buffer	my_project/libgit2/src/libgit2/diff_parse.c	/^int git_diff_from_buffer($/;"	f	typeref:typename:int
git_diff_generated	my_project/libgit2/src/libgit2/diff_generate.c	/^} git_diff_generated;$/;"	t	typeref:struct:__anonff5a2cd30108	file:
git_diff_get_delta	my_project/libgit2/src/libgit2/diff.c	/^const git_diff_delta *git_diff_get_delta(const git_diff *diff, size_t idx)$/;"	f	typeref:typename:const git_diff_delta *
git_diff_get_perfdata	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_get_perfdata(git_diff_perfdata *out, const git_diff *diff)$/;"	f	typeref:typename:int
git_diff_get_stats	my_project/libgit2/src/libgit2/diff_stats.c	/^int git_diff_get_stats($/;"	f	typeref:typename:int
git_diff_hunk	my_project/libgit2/include/git2/diff.h	/^} git_diff_hunk;$/;"	t	typeref:struct:__anon7f3f1dd30a08
git_diff_hunk_cb	my_project/libgit2/include/git2/diff.h	/^typedef int GIT_CALLBACK(git_diff_hunk_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff_delta * delta,const git_diff_hunk * hunk,void * payload)
git_diff_index_to_index	my_project/libgit2/src/libgit2/diff_generate.c	/^int git_diff_index_to_index($/;"	f	typeref:typename:int
git_diff_index_to_workdir	my_project/libgit2/src/libgit2/diff_generate.c	/^int git_diff_index_to_workdir($/;"	f	typeref:typename:int
git_diff_init_options	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_init_options(git_diff_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_diff_is_sorted_icase	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_is_sorted_icase(const git_diff *diff)$/;"	f	typeref:typename:int
git_diff_line	my_project/libgit2/include/git2/diff.h	/^} git_diff_line;$/;"	t	typeref:struct:__anon7f3f1dd30c08
git_diff_line_cb	my_project/libgit2/include/git2/diff.h	/^typedef int GIT_CALLBACK(git_diff_line_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff_delta * delta,const git_diff_hunk * hunk,const git_diff_line * line,void * payload)
git_diff_line_t	my_project/libgit2/include/git2/diff.h	/^} git_diff_line_t;$/;"	t	typeref:enum:__anon7f3f1dd30b03
git_diff_merge	my_project/libgit2/src/libgit2/diff_tform.c	/^int git_diff_merge(git_diff *onto, const git_diff *from)$/;"	f	typeref:typename:int
git_diff_notify_cb	my_project/libgit2/include/git2/diff.h	/^typedef int GIT_CALLBACK(git_diff_notify_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff * diff_so_far,const git_diff_delta * delta_to_add,const char * matched_pathspec,void * payload)
git_diff_num_deltas	my_project/libgit2/src/libgit2/diff.c	/^size_t git_diff_num_deltas(const git_diff *diff)$/;"	f	typeref:typename:size_t
git_diff_num_deltas_of_type	my_project/libgit2/src/libgit2/diff.c	/^size_t git_diff_num_deltas_of_type(const git_diff *diff, git_delta_t type)$/;"	f	typeref:typename:size_t
git_diff_option_t	my_project/libgit2/include/git2/diff.h	/^} git_diff_option_t;$/;"	t	typeref:enum:__anon7f3f1dd30103
git_diff_options	my_project/libgit2/include/git2/diff.h	/^} git_diff_options;$/;"	t	typeref:struct:__anon7f3f1dd30608
git_diff_options_init	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_options_init(git_diff_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_diff_origin_t	my_project/libgit2/src/libgit2/diff.h	/^} git_diff_origin_t;$/;"	t	typeref:enum:__anon3c92a60e0103
git_diff_parse_options	my_project/libgit2/include/git2/diff.h	/^} git_diff_parse_options;$/;"	t	typeref:struct:__anon7f3f1dd31108
git_diff_parsed	my_project/libgit2/src/libgit2/diff_parse.h	/^} git_diff_parsed;$/;"	t	typeref:struct:__anone6262fa80108
git_diff_patchid	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_patchid(git_oid *out, git_diff *diff, git_diff_patchid_options *opts)$/;"	f	typeref:typename:int
git_diff_patchid_options	my_project/libgit2/include/git2/diff.h	/^typedef struct git_diff_patchid_options {$/;"	s
git_diff_patchid_options	my_project/libgit2/include/git2/diff.h	/^} git_diff_patchid_options;$/;"	t	typeref:struct:git_diff_patchid_options
git_diff_patchid_options_init	my_project/libgit2/src/libgit2/diff.c	/^int git_diff_patchid_options_init(git_diff_patchid_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_diff_perfdata	my_project/libgit2/include/git2/sys/diff.h	/^} git_diff_perfdata;$/;"	t	typeref:struct:__anon9aac73a10108
git_diff_print	my_project/libgit2/src/libgit2/diff_print.c	/^int git_diff_print($/;"	f	typeref:typename:int
git_diff_print_callback__to_buf	my_project/libgit2/src/libgit2/diff_print.c	/^int git_diff_print_callback__to_buf($/;"	f	typeref:typename:int
git_diff_print_callback__to_file_handle	my_project/libgit2/src/libgit2/diff_print.c	/^int git_diff_print_callback__to_file_handle($/;"	f	typeref:typename:int
git_diff_progress_cb	my_project/libgit2/include/git2/diff.h	/^typedef int GIT_CALLBACK(git_diff_progress_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_diff * diff_so_far,const char * old_path,const char * new_path,void * payload)
git_diff_similarity_metric	my_project/libgit2/include/git2/diff.h	/^} git_diff_similarity_metric;$/;"	t	typeref:struct:__anon7f3f1dd30e08
git_diff_stats	my_project/libgit2/include/git2/diff.h	/^typedef struct git_diff_stats git_diff_stats;$/;"	t	typeref:struct:git_diff_stats
git_diff_stats	my_project/libgit2/src/libgit2/diff_stats.c	/^struct git_diff_stats {$/;"	s	file:
git_diff_stats_deletions	my_project/libgit2/src/libgit2/diff_stats.c	/^size_t git_diff_stats_deletions($/;"	f	typeref:typename:size_t
git_diff_stats_files_changed	my_project/libgit2/src/libgit2/diff_stats.c	/^size_t git_diff_stats_files_changed($/;"	f	typeref:typename:size_t
git_diff_stats_format_t	my_project/libgit2/include/git2/diff.h	/^} git_diff_stats_format_t;$/;"	t	typeref:enum:__anon7f3f1dd31203
git_diff_stats_free	my_project/libgit2/src/libgit2/diff_stats.c	/^void git_diff_stats_free(git_diff_stats *stats)$/;"	f	typeref:typename:void
git_diff_stats_insertions	my_project/libgit2/src/libgit2/diff_stats.c	/^size_t git_diff_stats_insertions($/;"	f	typeref:typename:size_t
git_diff_stats_to_buf	my_project/libgit2/src/libgit2/diff_stats.c	/^int git_diff_stats_to_buf($/;"	f	typeref:typename:int
git_diff_status_char	my_project/libgit2/src/libgit2/diff_print.c	/^char git_diff_status_char(git_delta_t status)$/;"	f	typeref:typename:char
git_diff_to_buf	my_project/libgit2/src/libgit2/diff_print.c	/^int git_diff_to_buf(git_buf *out, git_diff *diff, git_diff_format_t format)$/;"	f	typeref:typename:int
git_diff_tree_to_index	my_project/libgit2/src/libgit2/diff_generate.c	/^int git_diff_tree_to_index($/;"	f	typeref:typename:int
git_diff_tree_to_tree	my_project/libgit2/src/libgit2/diff_generate.c	/^int git_diff_tree_to_tree($/;"	f	typeref:typename:int
git_diff_tree_to_workdir	my_project/libgit2/src/libgit2/diff_generate.c	/^int git_diff_tree_to_workdir($/;"	f	typeref:typename:int
git_diff_tree_to_workdir_with_index	my_project/libgit2/src/libgit2/diff_generate.c	/^int git_diff_tree_to_workdir_with_index($/;"	f	typeref:typename:int
git_dir_flag	my_project/libgit2/src/libgit2/attr_file.h	/^typedef enum { GIT_DIR_FLAG_TRUE = 1, GIT_DIR_FLAG_FALSE = 0, GIT_DIR_FLAG_UNKNOWN = -1 } git_di/;"	t	typeref:enum:__anon0df92d8f0b03
git_direction	my_project/libgit2/include/git2/net.h	/^} git_direction;$/;"	t	typeref:enum:__anonc67e94210103
git_disable_pack_keep_file_checks	my_project/libgit2/src/libgit2/pack.c	/^bool git_disable_pack_keep_file_checks = false;$/;"	v	typeref:typename:bool
git_email__append_from_diff	my_project/libgit2/src/libgit2/email.c	/^int git_email__append_from_diff($/;"	f	typeref:typename:int
git_email_create_flags_t	my_project/libgit2/include/git2/email.h	/^} git_email_create_flags_t;$/;"	t	typeref:enum:__anonbd19e2c20103
git_email_create_from_commit	my_project/libgit2/src/libgit2/email.c	/^int git_email_create_from_commit($/;"	f	typeref:typename:int
git_email_create_from_diff	my_project/libgit2/src/libgit2/email.c	/^int git_email_create_from_diff($/;"	f	typeref:typename:int
git_email_create_options	my_project/libgit2/include/git2/email.h	/^} git_email_create_options;$/;"	t	typeref:struct:__anonbd19e2c20208
git_encode_varint	my_project/libgit2/src/util/varint.c	/^int git_encode_varint(unsigned char *buf, size_t bufsize, uintmax_t value)$/;"	f	typeref:typename:int
git_error	my_project/libgit2/include/git2/errors.h	/^} git_error;$/;"	t	typeref:struct:__anon095219370208
git_error__check_version	my_project/libgit2/src/libgit2/common.h	/^GIT_INLINE(int) git_error__check_version(const void *structure, unsigned int expected_max, const/;"	f	typeref:typename:int
git_error_clear	my_project/libgit2/src/util/errors.c	/^void git_error_clear(void)$/;"	f	typeref:typename:void
git_error_code	my_project/libgit2/include/git2/errors.h	/^} git_error_code;$/;"	t	typeref:enum:__anon095219370103
git_error_exists	my_project/libgit2/src/util/errors.c	/^bool git_error_exists(void)$/;"	f	typeref:typename:bool
git_error_free	my_project/libgit2/src/util/errors.c	/^void git_error_free(git_error *error)$/;"	f	typeref:typename:void
git_error_global_init	my_project/libgit2/src/util/errors.c	/^int git_error_global_init(void)$/;"	f	typeref:typename:int
git_error_global_shutdown	my_project/libgit2/src/util/errors.c	/^static void git_error_global_shutdown(void)$/;"	f	typeref:typename:void	file:
git_error_last	my_project/libgit2/src/util/errors.c	/^const git_error *git_error_last(void)$/;"	f	typeref:typename:const git_error *
git_error_restore	my_project/libgit2/src/util/errors.c	/^int git_error_restore(git_error *error)$/;"	f	typeref:typename:int
git_error_save	my_project/libgit2/src/util/errors.c	/^int git_error_save(git_error **out)$/;"	f	typeref:typename:int
git_error_set	my_project/libgit2/src/util/errors.c	/^void git_error_set(int error_class, const char *fmt, ...)$/;"	f	typeref:typename:void
git_error_set_after_callback	my_project/libgit2/src/util/errors.h	/^#define git_error_set_after_callback(/;"	d
git_error_set_after_callback_function	my_project/libgit2/src/util/errors.h	/^GIT_INLINE(int) git_error_set_after_callback_function($/;"	f	typeref:typename:int
git_error_set_oom	my_project/libgit2/src/util/errors.c	/^void git_error_set_oom(void)$/;"	f	typeref:typename:void
git_error_set_str	my_project/libgit2/src/util/errors.c	/^int git_error_set_str(int error_class, const char *string)$/;"	f	typeref:typename:int
git_error_system_last	my_project/libgit2/src/util/errors.c	/^int git_error_system_last(void)$/;"	f	typeref:typename:int
git_error_system_set	my_project/libgit2/src/util/errors.c	/^void git_error_system_set(int code)$/;"	f	typeref:typename:void
git_error_t	my_project/libgit2/include/git2/errors.h	/^} git_error_t;$/;"	t	typeref:enum:__anon095219370303
git_error_vset	my_project/libgit2/src/util/errors.c	/^void git_error_vset(int error_class, const char *fmt, va_list ap)$/;"	f	typeref:typename:void
git_failalloc_free	my_project/libgit2/src/util/allocators/failalloc.c	/^void git_failalloc_free(void *ptr)$/;"	f	typeref:typename:void
git_failalloc_malloc	my_project/libgit2/src/util/allocators/failalloc.c	/^void *git_failalloc_malloc(size_t len, const char *file, int line)$/;"	f	typeref:typename:void *
git_failalloc_realloc	my_project/libgit2/src/util/allocators/failalloc.c	/^void *git_failalloc_realloc(void *ptr, size_t size, const char *file, int line)$/;"	f	typeref:typename:void *
git_feature_t	my_project/libgit2/include/git2/common.h	/^} git_feature_t;$/;"	t	typeref:enum:__anon3e1002a30103
git_fetch_depth_t	my_project/libgit2/include/git2/remote.h	/^} git_fetch_depth_t;$/;"	t	typeref:enum:__anon144be4e60703
git_fetch_download_pack	my_project/libgit2/src/libgit2/fetch.c	/^int git_fetch_download_pack(git_remote *remote)$/;"	f	typeref:typename:int
git_fetch_init_options	my_project/libgit2/src/libgit2/fetch.c	/^int git_fetch_init_options(git_fetch_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_fetch_negotiate	my_project/libgit2/src/libgit2/fetch.c	/^int git_fetch_negotiate(git_remote *remote, const git_fetch_options *opts)$/;"	f	typeref:typename:int
git_fetch_negotiation	my_project/libgit2/include/git2/sys/transport.h	/^} git_fetch_negotiation;$/;"	t	typeref:struct:__anon4efa7c750108
git_fetch_options	my_project/libgit2/include/git2/remote.h	/^} git_fetch_options;$/;"	t	typeref:struct:__anon144be4e60808
git_fetch_options_init	my_project/libgit2/src/libgit2/fetch.c	/^int git_fetch_options_init(git_fetch_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_fetch_prune_t	my_project/libgit2/include/git2/remote.h	/^} git_fetch_prune_t;$/;"	t	typeref:enum:__anon144be4e60503
git_fetchhead_ref	my_project/libgit2/src/libgit2/fetchhead.h	/^typedef struct git_fetchhead_ref {$/;"	s
git_fetchhead_ref	my_project/libgit2/src/libgit2/fetchhead.h	/^} git_fetchhead_ref;$/;"	t	typeref:struct:git_fetchhead_ref
git_fetchhead_ref_cmp	my_project/libgit2/src/libgit2/fetchhead.c	/^int git_fetchhead_ref_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_fetchhead_ref_create	my_project/libgit2/src/libgit2/fetchhead.c	/^int git_fetchhead_ref_create($/;"	f	typeref:typename:int
git_fetchhead_ref_free	my_project/libgit2/src/libgit2/fetchhead.c	/^void git_fetchhead_ref_free(git_fetchhead_ref *fetchhead_ref)$/;"	f	typeref:typename:void
git_fetchhead_write	my_project/libgit2/src/libgit2/fetchhead.c	/^int git_fetchhead_write(git_repository *repo, git_vector *fetchhead_refs)$/;"	f	typeref:typename:int
git_file	my_project/libgit2/src/util/posix.h	/^typedef int git_file;$/;"	t	typeref:typename:int
git_filebuf	my_project/libgit2/src/util/filebuf.h	/^struct git_filebuf {$/;"	s
git_filebuf	my_project/libgit2/src/util/filebuf.h	/^typedef struct git_filebuf git_filebuf;$/;"	t	typeref:struct:git_filebuf
git_filebuf_cleanup	my_project/libgit2/src/util/filebuf.c	/^void git_filebuf_cleanup(git_filebuf *file)$/;"	f	typeref:typename:void
git_filebuf_commit	my_project/libgit2/src/util/filebuf.c	/^int git_filebuf_commit(git_filebuf *file)$/;"	f	typeref:typename:int
git_filebuf_commit_at	my_project/libgit2/src/util/filebuf.c	/^int git_filebuf_commit_at(git_filebuf *file, const char *path)$/;"	f	typeref:typename:int
git_filebuf_flush	my_project/libgit2/src/util/filebuf.c	/^int git_filebuf_flush(git_filebuf *file)$/;"	f	typeref:typename:int
git_filebuf_hash	my_project/libgit2/src/util/filebuf.c	/^int git_filebuf_hash(unsigned char *out, git_filebuf *file)$/;"	f	typeref:typename:int
git_filebuf_hash_flags	my_project/libgit2/src/util/filebuf.h	/^GIT_INLINE(int) git_filebuf_hash_flags(git_hash_algorithm_t algorithm)$/;"	f	typeref:typename:int
git_filebuf_open	my_project/libgit2/src/util/filebuf.c	/^int git_filebuf_open(git_filebuf *file, const char *path, int flags, mode_t mode)$/;"	f	typeref:typename:int
git_filebuf_open_withsize	my_project/libgit2/src/util/filebuf.c	/^int git_filebuf_open_withsize(git_filebuf *file, const char *path, int flags, mode_t mode, size_/;"	f	typeref:typename:int
git_filebuf_printf	my_project/libgit2/src/util/filebuf.c	/^int git_filebuf_printf(git_filebuf *file, const char *format, ...)$/;"	f	typeref:typename:int
git_filebuf_reserve	my_project/libgit2/src/util/filebuf.c	/^int git_filebuf_reserve(git_filebuf *file, void **buffer, size_t len)$/;"	f	typeref:typename:int
git_filebuf_stats	my_project/libgit2/src/util/filebuf.c	/^int git_filebuf_stats(time_t *mtime, size_t *size, git_filebuf *file)$/;"	f	typeref:typename:int
git_filebuf_write	my_project/libgit2/src/util/filebuf.c	/^int git_filebuf_write(git_filebuf *file, const void *buff, size_t len)$/;"	f	typeref:typename:int
git_filemode_t	my_project/libgit2/include/git2/types.h	/^} git_filemode_t;$/;"	t	typeref:enum:__anon5cceb56f0403
git_filter	my_project/libgit2/include/git2/filter.h	/^typedef struct git_filter git_filter;$/;"	t	typeref:struct:git_filter
git_filter	my_project/libgit2/include/git2/sys/filter.h	/^struct git_filter {$/;"	s
git_filter_apply_fn	my_project/libgit2/include/git2/sys/filter.h	/^typedef int GIT_CALLBACK(git_filter_apply_fn)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_filter * self,void ** payload,git_buf * to,const git_buf * from,const git_filter_source * src)
git_filter_buffered_stream_new	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_buffered_stream_new($/;"	f	typeref:typename:int
git_filter_check_fn	my_project/libgit2/include/git2/sys/filter.h	/^typedef int GIT_CALLBACK(git_filter_check_fn)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_filter * self,void ** payload,const git_filter_source * src,const char ** attr_values)
git_filter_cleanup_fn	my_project/libgit2/include/git2/sys/filter.h	/^typedef void GIT_CALLBACK(git_filter_cleanup_fn)($/;"	t	typeref:typename:void GIT_CALLBACK ()(git_filter * self,void * payload)
git_filter_def	my_project/libgit2/src/libgit2/filter.c	/^} git_filter_def;$/;"	t	typeref:struct:__anon9372afd60208	file:
git_filter_entry	my_project/libgit2/src/libgit2/filter.c	/^} git_filter_entry;$/;"	t	typeref:struct:__anon9372afd60108	file:
git_filter_flag_t	my_project/libgit2/include/git2/filter.h	/^} git_filter_flag_t;$/;"	t	typeref:enum:__anon331c2ce00203
git_filter_free	my_project/libgit2/src/libgit2/filter.c	/^void git_filter_free(git_filter *filter)$/;"	f	typeref:typename:void
git_filter_global_init	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_global_init(void)$/;"	f	typeref:typename:int
git_filter_global_shutdown	my_project/libgit2/src/libgit2/filter.c	/^static void git_filter_global_shutdown(void)$/;"	f	typeref:typename:void	file:
git_filter_init	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_init(git_filter *filter, unsigned int version)$/;"	f	typeref:typename:int
git_filter_init_fn	my_project/libgit2/include/git2/sys/filter.h	/^typedef int GIT_CALLBACK(git_filter_init_fn)(git_filter *self);$/;"	t	typeref:typename:int GIT_CALLBACK ()(git_filter * self)
git_filter_list	my_project/libgit2/include/git2/filter.h	/^typedef struct git_filter_list git_filter_list;$/;"	t	typeref:struct:git_filter_list
git_filter_list	my_project/libgit2/src/libgit2/filter.c	/^struct git_filter_list {$/;"	s	file:
git_filter_list__apply_to_blob	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list__apply_to_blob($/;"	f	typeref:typename:int
git_filter_list__apply_to_buffer	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list__apply_to_buffer($/;"	f	typeref:typename:int
git_filter_list__apply_to_file	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list__apply_to_file($/;"	f	typeref:typename:int
git_filter_list__convert_buf	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list__convert_buf($/;"	f	typeref:typename:int
git_filter_list__load	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list__load($/;"	f	typeref:typename:int
git_filter_list_apply_to_blob	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list_apply_to_blob($/;"	f	typeref:typename:int
git_filter_list_apply_to_buffer	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list_apply_to_buffer($/;"	f	typeref:typename:int
git_filter_list_apply_to_data	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list_apply_to_data($/;"	f	typeref:typename:int
git_filter_list_apply_to_file	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list_apply_to_file($/;"	f	typeref:typename:int
git_filter_list_contains	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list_contains($/;"	f	typeref:typename:int
git_filter_list_free	my_project/libgit2/src/libgit2/filter.c	/^void git_filter_list_free(git_filter_list *fl)$/;"	f	typeref:typename:void
git_filter_list_length	my_project/libgit2/src/libgit2/filter.c	/^size_t git_filter_list_length(const git_filter_list *fl)$/;"	f	typeref:typename:size_t
git_filter_list_load	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list_load($/;"	f	typeref:typename:int
git_filter_list_load_ext	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list_load_ext($/;"	f	typeref:typename:int
git_filter_list_new	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list_new($/;"	f	typeref:typename:int
git_filter_list_push	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list_push($/;"	f	typeref:typename:int
git_filter_list_stream_blob	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list_stream_blob($/;"	f	typeref:typename:int
git_filter_list_stream_buffer	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list_stream_buffer($/;"	f	typeref:typename:int
git_filter_list_stream_data	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list_stream_data($/;"	f	typeref:typename:int
git_filter_list_stream_file	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_list_stream_file($/;"	f	typeref:typename:int
git_filter_lookup	my_project/libgit2/src/libgit2/filter.c	/^git_filter *git_filter_lookup(const char *name)$/;"	f	typeref:typename:git_filter *
git_filter_mode_t	my_project/libgit2/include/git2/filter.h	/^} git_filter_mode_t;$/;"	t	typeref:enum:__anon331c2ce00103
git_filter_options	my_project/libgit2/include/git2/filter.h	/^} git_filter_options;$/;"	t	typeref:struct:__anon331c2ce00308
git_filter_register	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_register($/;"	f	typeref:typename:int
git_filter_registry	my_project/libgit2/src/libgit2/filter.c	/^struct git_filter_registry {$/;"	s	file:
git_filter_session	my_project/libgit2/src/libgit2/filter.h	/^} git_filter_session;$/;"	t	typeref:struct:__anon9372afdb0108
git_filter_shutdown_fn	my_project/libgit2/include/git2/sys/filter.h	/^typedef void GIT_CALLBACK(git_filter_shutdown_fn)(git_filter *self);$/;"	t	typeref:typename:void GIT_CALLBACK ()(git_filter * self)
git_filter_source	my_project/libgit2/include/git2/sys/filter.h	/^typedef struct git_filter_source git_filter_source;$/;"	t	typeref:struct:git_filter_source
git_filter_source	my_project/libgit2/src/libgit2/filter.c	/^struct git_filter_source {$/;"	s	file:
git_filter_source_filemode	my_project/libgit2/src/libgit2/filter.c	/^uint16_t git_filter_source_filemode(const git_filter_source *src)$/;"	f	typeref:typename:uint16_t
git_filter_source_flags	my_project/libgit2/src/libgit2/filter.c	/^uint32_t git_filter_source_flags(const git_filter_source *src)$/;"	f	typeref:typename:uint32_t
git_filter_source_id	my_project/libgit2/src/libgit2/filter.c	/^const git_oid *git_filter_source_id(const git_filter_source *src)$/;"	f	typeref:typename:const git_oid *
git_filter_source_mode	my_project/libgit2/src/libgit2/filter.c	/^git_filter_mode_t git_filter_source_mode(const git_filter_source *src)$/;"	f	typeref:typename:git_filter_mode_t
git_filter_source_path	my_project/libgit2/src/libgit2/filter.c	/^const char *git_filter_source_path(const git_filter_source *src)$/;"	f	typeref:typename:const char *
git_filter_source_repo	my_project/libgit2/src/libgit2/filter.c	/^git_repository *git_filter_source_repo(const git_filter_source *src)$/;"	f	typeref:typename:git_repository *
git_filter_stream_fn	my_project/libgit2/include/git2/sys/filter.h	/^typedef int GIT_CALLBACK(git_filter_stream_fn)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_writestream ** out,git_filter * self,void ** payload,const git_filter_source * src,git_writestream * next)
git_filter_unregister	my_project/libgit2/src/libgit2/filter.c	/^int git_filter_unregister(const char *name)$/;"	f	typeref:typename:int
git_fs_path__set_owner	my_project/libgit2/src/util/fs_path.c	/^void git_fs_path__set_owner(git_fs_path_owner_t owner)$/;"	f	typeref:typename:void
git_fs_path_apply_relative	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_apply_relative(git_str *target, const char *relpath)$/;"	f	typeref:typename:int
git_fs_path_at_end_of_segment	my_project/libgit2/src/util/fs_path.h	/^GIT_INLINE(int) git_fs_path_at_end_of_segment(const char *p)$/;"	f	typeref:typename:int
git_fs_path_basename	my_project/libgit2/src/util/fs_path.c	/^char *git_fs_path_basename(const char *path)$/;"	f	typeref:typename:char *
git_fs_path_basename_offset	my_project/libgit2/src/util/fs_path.c	/^size_t git_fs_path_basename_offset(git_str *buffer)$/;"	f	typeref:typename:size_t
git_fs_path_basename_r	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_basename_r(git_str *buffer, const char *path)$/;"	f	typeref:typename:int
git_fs_path_cmp	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_cmp($/;"	f	typeref:typename:int
git_fs_path_common_dirlen	my_project/libgit2/src/util/fs_path.c	/^size_t git_fs_path_common_dirlen(const char *one, const char *two)$/;"	f	typeref:typename:size_t
git_fs_path_contains	my_project/libgit2/src/util/fs_path.c	/^bool git_fs_path_contains(git_str *dir, const char *item)$/;"	f	typeref:typename:bool
git_fs_path_contains_dir	my_project/libgit2/src/util/fs_path.c	/^bool git_fs_path_contains_dir(git_str *base, const char *subdir)$/;"	f	typeref:typename:bool
git_fs_path_contains_file	my_project/libgit2/src/util/fs_path.c	/^bool git_fs_path_contains_file(git_str *base, const char *file)$/;"	f	typeref:typename:bool
git_fs_path_direach	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_direach($/;"	f	typeref:typename:int
git_fs_path_diriter	my_project/libgit2/src/util/fs_path.h	/^struct git_fs_path_diriter$/;"	s
git_fs_path_diriter	my_project/libgit2/src/util/fs_path.h	/^typedef struct git_fs_path_diriter git_fs_path_diriter;$/;"	t	typeref:struct:git_fs_path_diriter
git_fs_path_diriter_filename	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_diriter_filename($/;"	f	typeref:typename:int
git_fs_path_diriter_free	my_project/libgit2/src/util/fs_path.c	/^void git_fs_path_diriter_free(git_fs_path_diriter *diriter)$/;"	f	typeref:typename:void
git_fs_path_diriter_fullpath	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_diriter_fullpath($/;"	f	typeref:typename:int
git_fs_path_diriter_init	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_diriter_init($/;"	f	typeref:typename:int
git_fs_path_diriter_next	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_diriter_next(git_fs_path_diriter *diriter)$/;"	f	typeref:typename:int
git_fs_path_diriter_stat	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_diriter_stat(struct stat *out, git_fs_path_diriter *diriter)$/;"	f	typeref:typename:int
git_fs_path_dirlen	my_project/libgit2/src/util/fs_path.c	/^size_t git_fs_path_dirlen(const char *path)$/;"	f	typeref:typename:size_t
git_fs_path_dirload	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_dirload($/;"	f	typeref:typename:int
git_fs_path_dirname	my_project/libgit2/src/util/fs_path.c	/^char *git_fs_path_dirname(const char *path)$/;"	f	typeref:typename:char *
git_fs_path_dirname_r	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_dirname_r(git_str *buffer, const char *path)$/;"	f	typeref:typename:int
git_fs_path_does_decompose_unicode	my_project/libgit2/src/util/fs_path.c	/^bool git_fs_path_does_decompose_unicode(const char *root)$/;"	f	typeref:typename:bool
git_fs_path_equal_or_prefixed	my_project/libgit2/src/util/fs_path.h	/^GIT_INLINE(int) git_fs_path_equal_or_prefixed($/;"	f	typeref:typename:int
git_fs_path_exists	my_project/libgit2/src/util/fs_path.c	/^bool git_fs_path_exists(const char *path)$/;"	f	typeref:typename:bool
git_fs_path_find_dir	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_find_dir(git_str *dir)$/;"	f	typeref:typename:int
git_fs_path_find_executable	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_find_executable(git_str *fullpath, const char *executable)$/;"	f	typeref:typename:int
git_fs_path_from_url_or_path	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_from_url_or_path(git_str *local_path_out, const char *url_or_path)$/;"	f	typeref:typename:int
git_fs_path_fromurl	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_fromurl(git_str *local_path_out, const char *file_url)$/;"	f	typeref:typename:int
git_fs_path_has_non_ascii	my_project/libgit2/src/util/fs_path.c	/^bool git_fs_path_has_non_ascii(const char *path, size_t pathlen)$/;"	f	typeref:typename:bool
git_fs_path_iconv	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_iconv(git_fs_path_iconv_t *ic, const char **in, size_t *inlen)$/;"	f	typeref:typename:int
git_fs_path_iconv_clear	my_project/libgit2/src/util/fs_path.c	/^void git_fs_path_iconv_clear(git_fs_path_iconv_t *ic)$/;"	f	typeref:typename:void
git_fs_path_iconv_init_precompose	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_iconv_init_precompose(git_fs_path_iconv_t *ic)$/;"	f	typeref:typename:int
git_fs_path_iconv_t	my_project/libgit2/src/util/fs_path.h	/^} git_fs_path_iconv_t;$/;"	t	typeref:struct:__anonea45684b0308
git_fs_path_is_absolute	my_project/libgit2/src/util/fs_path.h	/^#define git_fs_path_is_absolute(/;"	d
git_fs_path_is_dirsep	my_project/libgit2/src/util/fs_path.h	/^#define git_fs_path_is_dirsep(/;"	d
git_fs_path_is_dot_or_dotdot	my_project/libgit2/src/util/fs_path.h	/^GIT_INLINE(int) git_fs_path_is_dot_or_dotdot(const char *name)$/;"	f	typeref:typename:int
git_fs_path_is_dot_or_dotdotW	my_project/libgit2/src/util/fs_path.h	/^GIT_INLINE(int) git_fs_path_is_dot_or_dotdotW(const wchar_t *name)$/;"	f	typeref:typename:int
git_fs_path_is_empty_dir	my_project/libgit2/src/util/fs_path.c	/^bool git_fs_path_is_empty_dir(const char *path)$/;"	f	typeref:typename:bool
git_fs_path_is_local_file_url	my_project/libgit2/src/util/fs_path.c	/^bool git_fs_path_is_local_file_url(const char *file_url)$/;"	f	typeref:typename:bool
git_fs_path_is_relative	my_project/libgit2/src/util/fs_path.h	/^GIT_INLINE(int) git_fs_path_is_relative(const char *p)$/;"	f	typeref:typename:int
git_fs_path_is_root	my_project/libgit2/src/util/fs_path.h	/^GIT_INLINE(int) git_fs_path_is_root(const char *name)$/;"	f	typeref:typename:int
git_fs_path_is_valid	my_project/libgit2/src/util/fs_path.h	/^GIT_INLINE(bool) git_fs_path_is_valid($/;"	f	typeref:typename:bool
git_fs_path_is_valid_ext	my_project/libgit2/src/util/fs_path.h	/^GIT_INLINE(bool) git_fs_path_is_valid_ext($/;"	f	typeref:typename:bool
git_fs_path_isdir	my_project/libgit2/src/util/fs_path.c	/^bool git_fs_path_isdir(const char *path)$/;"	f	typeref:typename:bool
git_fs_path_isfile	my_project/libgit2/src/util/fs_path.c	/^bool git_fs_path_isfile(const char *path)$/;"	f	typeref:typename:bool
git_fs_path_islink	my_project/libgit2/src/util/fs_path.c	/^bool git_fs_path_islink(const char *path)$/;"	f	typeref:typename:bool
git_fs_path_join_unrooted	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_join_unrooted($/;"	f	typeref:typename:int
git_fs_path_lstat	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_lstat(const char *path, struct stat *st)$/;"	f	typeref:typename:int
git_fs_path_make_relative	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_make_relative(git_str *path, const char *parent)$/;"	f	typeref:typename:int
git_fs_path_mkposix	my_project/libgit2/src/util/fs_path.h	/^#	define git_fs_path_mkposix(/;"	d
git_fs_path_mkposix	my_project/libgit2/src/util/fs_path.h	/^GIT_INLINE(void) git_fs_path_mkposix(char *path)$/;"	f	typeref:typename:void
git_fs_path_normalize_slashes	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_normalize_slashes(git_str *out, const char *path)$/;"	f	typeref:typename:int
git_fs_path_owner_is	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_owner_is($/;"	f	typeref:typename:int
git_fs_path_owner_is_current_user	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_owner_is_current_user(bool *out, const char *path)$/;"	f	typeref:typename:int
git_fs_path_owner_is_system	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_owner_is_system(bool *out, const char *path)$/;"	f	typeref:typename:int
git_fs_path_owner_t	my_project/libgit2/src/util/fs_path.h	/^} git_fs_path_owner_t;$/;"	t	typeref:enum:__anonea45684b0403
git_fs_path_prettify	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_prettify(git_str *path_out, const char *path, const char *base)$/;"	f	typeref:typename:int
git_fs_path_prettify_dir	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_prettify_dir(git_str *path_out, const char *path, const char *base)$/;"	f	typeref:typename:int
git_fs_path_resolve_relative	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_resolve_relative(git_str *path, size_t ceiling)$/;"	f	typeref:typename:int
git_fs_path_root	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_root(const char *path)$/;"	f	typeref:typename:int
git_fs_path_set_error	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_set_error(int errno_value, const char *path, const char *action)$/;"	f	typeref:typename:int
git_fs_path_squash_slashes	my_project/libgit2/src/util/fs_path.c	/^void git_fs_path_squash_slashes(git_str *path)$/;"	f	typeref:typename:void
git_fs_path_str_is_valid	my_project/libgit2/src/util/fs_path.h	/^GIT_INLINE(bool) git_fs_path_str_is_valid($/;"	f	typeref:typename:bool
git_fs_path_str_is_valid_ext	my_project/libgit2/src/util/fs_path.c	/^bool git_fs_path_str_is_valid_ext($/;"	f	typeref:typename:bool
git_fs_path_string_to_dir	my_project/libgit2/src/util/fs_path.c	/^void git_fs_path_string_to_dir(char *path, size_t size)$/;"	f	typeref:typename:void
git_fs_path_supports_symlinks	my_project/libgit2/src/util/fs_path.c	/^bool git_fs_path_supports_symlinks(const char *dir)$/;"	f	typeref:typename:bool
git_fs_path_to_dir	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_to_dir(git_str *path)$/;"	f	typeref:typename:int
git_fs_path_validate_filesystem	my_project/libgit2/src/util/fs_path.h	/^GIT_INLINE(int) git_fs_path_validate_filesystem($/;"	f	typeref:typename:int
git_fs_path_validate_filesystem_with_suffix	my_project/libgit2/src/util/fs_path.h	/^GIT_INLINE(int) git_fs_path_validate_filesystem_with_suffix($/;"	f	typeref:typename:int
git_fs_path_validate_str_length_with_suffix	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_validate_str_length_with_suffix($/;"	f	typeref:typename:int
git_fs_path_walk_up	my_project/libgit2/src/util/fs_path.c	/^int git_fs_path_walk_up($/;"	f	typeref:typename:int
git_futils_canonical_mode	my_project/libgit2/src/util/futils.c	/^mode_t git_futils_canonical_mode(mode_t raw_mode)$/;"	f	typeref:typename:mode_t
git_futils_cp	my_project/libgit2/src/util/futils.c	/^int git_futils_cp(const char *from, const char *to, mode_t filemode)$/;"	f	typeref:typename:int
git_futils_cp_r	my_project/libgit2/src/util/futils.c	/^int git_futils_cp_r($/;"	f	typeref:typename:int
git_futils_cpdir_flags	my_project/libgit2/src/util/futils.h	/^} git_futils_cpdir_flags;$/;"	t	typeref:enum:__anon45ee975d0303
git_futils_creat_locked	my_project/libgit2/src/util/futils.c	/^int git_futils_creat_locked(const char *path, const mode_t mode)$/;"	f	typeref:typename:int
git_futils_creat_locked_withpath	my_project/libgit2/src/util/futils.c	/^int git_futils_creat_locked_withpath(const char *path, const mode_t dirmode, const mode_t mode)$/;"	f	typeref:typename:int
git_futils_creat_withpath	my_project/libgit2/src/util/futils.c	/^int git_futils_creat_withpath(const char *path, const mode_t dirmode, const mode_t mode)$/;"	f	typeref:typename:int
git_futils_fake_symlink	my_project/libgit2/src/util/futils.c	/^int git_futils_fake_symlink(const char *target, const char *path)$/;"	f	typeref:typename:int
git_futils_filesize	my_project/libgit2/src/util/futils.c	/^int git_futils_filesize(uint64_t *out, git_file fd)$/;"	f	typeref:typename:int
git_futils_filestamp	my_project/libgit2/src/util/futils.h	/^} git_futils_filestamp;$/;"	t	typeref:struct:__anon45ee975d0408
git_futils_filestamp_check	my_project/libgit2/src/util/futils.c	/^int git_futils_filestamp_check($/;"	f	typeref:typename:int
git_futils_filestamp_set	my_project/libgit2/src/util/futils.c	/^void git_futils_filestamp_set($/;"	f	typeref:typename:void
git_futils_filestamp_set_from_stat	my_project/libgit2/src/util/futils.c	/^void git_futils_filestamp_set_from_stat($/;"	f	typeref:typename:void
git_futils_fsync_dir	my_project/libgit2/src/util/futils.c	/^int git_futils_fsync_dir(const char *path)$/;"	f	typeref:typename:int
git_futils_fsync_parent	my_project/libgit2/src/util/futils.c	/^int git_futils_fsync_parent(const char *path)$/;"	f	typeref:typename:int
git_futils_mkdir	my_project/libgit2/src/util/futils.c	/^int git_futils_mkdir($/;"	f	typeref:typename:int
git_futils_mkdir_flags	my_project/libgit2/src/util/futils.h	/^} git_futils_mkdir_flags;$/;"	t	typeref:enum:__anon45ee975d0103
git_futils_mkdir_options	my_project/libgit2/src/util/futils.h	/^struct git_futils_mkdir_options$/;"	s
git_futils_mkdir_perfdata	my_project/libgit2/src/util/futils.h	/^struct git_futils_mkdir_perfdata$/;"	s
git_futils_mkdir_r	my_project/libgit2/src/util/futils.c	/^int git_futils_mkdir_r(const char *path, const mode_t mode)$/;"	f	typeref:typename:int
git_futils_mkdir_relative	my_project/libgit2/src/util/futils.c	/^int git_futils_mkdir_relative($/;"	f	typeref:typename:int
git_futils_mkpath2file	my_project/libgit2/src/util/futils.c	/^int git_futils_mkpath2file(const char *file_path, const mode_t mode)$/;"	f	typeref:typename:int
git_futils_mktmp	my_project/libgit2/src/util/futils.c	/^int git_futils_mktmp(git_str *path_out, const char *filename, mode_t mode)$/;"	f	typeref:typename:int
git_futils_mmap_free	my_project/libgit2/src/util/futils.c	/^void git_futils_mmap_free(git_map *out)$/;"	f	typeref:typename:void
git_futils_mmap_ro	my_project/libgit2/src/util/futils.c	/^int git_futils_mmap_ro(git_map *out, git_file fd, off64_t begin, size_t len)$/;"	f	typeref:typename:int
git_futils_mmap_ro_file	my_project/libgit2/src/util/futils.c	/^int git_futils_mmap_ro_file(git_map *out, const char *path)$/;"	f	typeref:typename:int
git_futils_mv_withpath	my_project/libgit2/src/util/futils.c	/^int git_futils_mv_withpath(const char *from, const char *to, const mode_t dirmode)$/;"	f	typeref:typename:int
git_futils_open_ro	my_project/libgit2/src/util/futils.c	/^int git_futils_open_ro(const char *path)$/;"	f	typeref:typename:int
git_futils_readbuffer	my_project/libgit2/src/util/futils.c	/^int git_futils_readbuffer(git_str *buf, const char *path)$/;"	f	typeref:typename:int
git_futils_readbuffer_fd	my_project/libgit2/src/util/futils.c	/^int git_futils_readbuffer_fd(git_str *buf, git_file fd, size_t len)$/;"	f	typeref:typename:int
git_futils_readbuffer_fd_full	my_project/libgit2/src/util/futils.c	/^int git_futils_readbuffer_fd_full(git_str *buf, git_file fd)$/;"	f	typeref:typename:int
git_futils_readbuffer_updated	my_project/libgit2/src/util/futils.c	/^int git_futils_readbuffer_updated($/;"	f	typeref:typename:int
git_futils_rmdir_flags	my_project/libgit2/src/util/futils.h	/^} git_futils_rmdir_flags;$/;"	t	typeref:enum:__anon45ee975d0203
git_futils_rmdir_r	my_project/libgit2/src/util/futils.c	/^int git_futils_rmdir_r($/;"	f	typeref:typename:int
git_futils_touch	my_project/libgit2/src/util/futils.c	/^int git_futils_touch(const char *path, time_t *when)$/;"	f	typeref:typename:int
git_futils_truncate	my_project/libgit2/src/util/futils.c	/^int git_futils_truncate(const char *path, int mode)$/;"	f	typeref:typename:int
git_futils_writebuffer	my_project/libgit2/src/util/futils.c	/^int git_futils_writebuffer($/;"	f	typeref:typename:int
git_generated_prefixes	my_project/libgit2/src/libgit2/trailer.c	/^static const char *const git_generated_prefixes[] = {$/;"	v	typeref:typename:const char * const[]	file:
git_grafts	my_project/libgit2/src/libgit2/grafts.c	/^struct git_grafts {$/;"	s	file:
git_grafts	my_project/libgit2/src/libgit2/grafts.h	/^typedef struct git_grafts git_grafts;$/;"	t	typeref:struct:git_grafts
git_grafts_add	my_project/libgit2/src/libgit2/grafts.c	/^int git_grafts_add(git_grafts *grafts, const git_oid *oid, git_array_oid_t parents)$/;"	f	typeref:typename:int
git_grafts_clear	my_project/libgit2/src/libgit2/grafts.c	/^void git_grafts_clear(git_grafts *grafts)$/;"	f	typeref:typename:void
git_grafts_free	my_project/libgit2/src/libgit2/grafts.c	/^void git_grafts_free(git_grafts *grafts)$/;"	f	typeref:typename:void
git_grafts_get	my_project/libgit2/src/libgit2/grafts.c	/^int git_grafts_get(git_commit_graft **out, git_grafts *grafts, const git_oid *oid)$/;"	f	typeref:typename:int
git_grafts_new	my_project/libgit2/src/libgit2/grafts.c	/^int git_grafts_new(git_grafts **out, git_oid_t oid_type)$/;"	f	typeref:typename:int
git_grafts_oids	my_project/libgit2/src/libgit2/grafts.c	/^int git_grafts_oids(git_oid **out, size_t *out_len, git_grafts *grafts)$/;"	f	typeref:typename:int
git_grafts_open	my_project/libgit2/src/libgit2/grafts.c	/^int git_grafts_open($/;"	f	typeref:typename:int
git_grafts_open_or_refresh	my_project/libgit2/src/libgit2/grafts.c	/^int git_grafts_open_or_refresh($/;"	f	typeref:typename:int
git_grafts_parse	my_project/libgit2/src/libgit2/grafts.c	/^int git_grafts_parse(git_grafts *grafts, const char *buf, size_t len)$/;"	f	typeref:typename:int
git_grafts_refresh	my_project/libgit2/src/libgit2/grafts.c	/^int git_grafts_refresh(git_grafts *grafts)$/;"	f	typeref:typename:int
git_grafts_remove	my_project/libgit2/src/libgit2/grafts.c	/^int git_grafts_remove(git_grafts *grafts, const git_oid *oid)$/;"	f	typeref:typename:int
git_grafts_size	my_project/libgit2/src/libgit2/grafts.c	/^size_t git_grafts_size(git_grafts *grafts)$/;"	f	typeref:typename:size_t
git_graph_ahead_behind	my_project/libgit2/src/libgit2/graph.c	/^int git_graph_ahead_behind(size_t *ahead, size_t *behind, git_repository *repo,$/;"	f	typeref:typename:int
git_graph_descendant_of	my_project/libgit2/src/libgit2/graph.c	/^int git_graph_descendant_of(git_repository *repo, const git_oid *commit, const git_oid *ancestor/;"	f	typeref:typename:int
git_graph_reachable_from_any	my_project/libgit2/src/libgit2/graph.c	/^int git_graph_reachable_from_any($/;"	f	typeref:typename:int
git_has_win32_version	my_project/libgit2/src/util/win32/version.h	/^GIT_INLINE(int) git_has_win32_version(int major, int minor, int service_pack)$/;"	f	typeref:typename:int
git_hash_algorithm_t	my_project/libgit2/src/util/hash.h	/^} git_hash_algorithm_t;$/;"	t	typeref:enum:__anon187871ca0203
git_hash_buf	my_project/libgit2/src/util/hash.c	/^int git_hash_buf($/;"	f	typeref:typename:int
git_hash_ctx	my_project/libgit2/src/util/hash.h	/^typedef struct git_hash_ctx {$/;"	s
git_hash_ctx	my_project/libgit2/src/util/hash.h	/^} git_hash_ctx;$/;"	t	typeref:struct:git_hash_ctx
git_hash_ctx_cleanup	my_project/libgit2/src/util/hash.c	/^void git_hash_ctx_cleanup(git_hash_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_ctx_init	my_project/libgit2/src/util/hash.c	/^int git_hash_ctx_init(git_hash_ctx *ctx, git_hash_algorithm_t algorithm)$/;"	f	typeref:typename:int
git_hash_final	my_project/libgit2/src/util/hash.c	/^int git_hash_final(unsigned char *out, git_hash_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_fmt	my_project/libgit2/src/util/hash.c	/^int git_hash_fmt(char *out, unsigned char *hash, size_t hash_len)$/;"	f	typeref:typename:int
git_hash_global_init	my_project/libgit2/src/util/hash.c	/^int git_hash_global_init(void)$/;"	f	typeref:typename:int
git_hash_init	my_project/libgit2/src/util/hash.c	/^int git_hash_init(git_hash_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_openssl_global_init	my_project/libgit2/src/util/hash/openssl.c	/^static int git_hash_openssl_global_init(void)$/;"	f	typeref:typename:int	file:
git_hash_openssl_global_shutdown	my_project/libgit2/src/util/hash/openssl.c	/^static int git_hash_openssl_global_shutdown(void)$/;"	f	typeref:typename:int	file:
git_hash_sha1_ctx	my_project/libgit2/src/util/hash/collisiondetect.h	/^struct git_hash_sha1_ctx {$/;"	s
git_hash_sha1_ctx	my_project/libgit2/src/util/hash/common_crypto.h	/^struct git_hash_sha1_ctx {$/;"	s
git_hash_sha1_ctx	my_project/libgit2/src/util/hash/mbedtls.h	/^struct git_hash_sha1_ctx {$/;"	s
git_hash_sha1_ctx	my_project/libgit2/src/util/hash/openssl.h	/^struct git_hash_sha1_ctx {$/;"	s
git_hash_sha1_ctx	my_project/libgit2/src/util/hash/sha.h	/^typedef struct git_hash_sha1_ctx git_hash_sha1_ctx;$/;"	t	typeref:struct:git_hash_sha1_ctx
git_hash_sha1_ctx	my_project/libgit2/src/util/hash/win32.h	/^struct git_hash_sha1_ctx {$/;"	s
git_hash_sha1_ctx_cleanup	my_project/libgit2/src/util/hash/collisiondetect.c	/^void git_hash_sha1_ctx_cleanup(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha1_ctx_cleanup	my_project/libgit2/src/util/hash/common_crypto.c	/^void git_hash_sha1_ctx_cleanup(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha1_ctx_cleanup	my_project/libgit2/src/util/hash/mbedtls.c	/^void git_hash_sha1_ctx_cleanup(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha1_ctx_cleanup	my_project/libgit2/src/util/hash/openssl.c	/^void git_hash_sha1_ctx_cleanup(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha1_ctx_cleanup	my_project/libgit2/src/util/hash/win32.c	/^void git_hash_sha1_ctx_cleanup(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha1_ctx_init	my_project/libgit2/src/util/hash/collisiondetect.c	/^int git_hash_sha1_ctx_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_ctx_init	my_project/libgit2/src/util/hash/common_crypto.c	/^int git_hash_sha1_ctx_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_ctx_init	my_project/libgit2/src/util/hash/mbedtls.c	/^int git_hash_sha1_ctx_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_ctx_init	my_project/libgit2/src/util/hash/openssl.c	/^int git_hash_sha1_ctx_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_ctx_init	my_project/libgit2/src/util/hash/win32.c	/^int git_hash_sha1_ctx_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_final	my_project/libgit2/src/util/hash/collisiondetect.c	/^int git_hash_sha1_final(unsigned char *out, git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_final	my_project/libgit2/src/util/hash/common_crypto.c	/^int git_hash_sha1_final(unsigned char *out, git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_final	my_project/libgit2/src/util/hash/mbedtls.c	/^int git_hash_sha1_final(unsigned char *out, git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_final	my_project/libgit2/src/util/hash/openssl.c	/^int git_hash_sha1_final(unsigned char *out, git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_final	my_project/libgit2/src/util/hash/win32.c	/^int git_hash_sha1_final(unsigned char *out, git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_global_init	my_project/libgit2/src/util/hash/collisiondetect.c	/^int git_hash_sha1_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha1_global_init	my_project/libgit2/src/util/hash/common_crypto.c	/^int git_hash_sha1_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha1_global_init	my_project/libgit2/src/util/hash/mbedtls.c	/^int git_hash_sha1_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha1_global_init	my_project/libgit2/src/util/hash/openssl.c	/^int git_hash_sha1_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha1_global_init	my_project/libgit2/src/util/hash/win32.c	/^int git_hash_sha1_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha1_init	my_project/libgit2/src/util/hash/collisiondetect.c	/^int git_hash_sha1_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_init	my_project/libgit2/src/util/hash/common_crypto.c	/^int git_hash_sha1_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_init	my_project/libgit2/src/util/hash/mbedtls.c	/^int git_hash_sha1_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_init	my_project/libgit2/src/util/hash/openssl.c	/^int git_hash_sha1_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_init	my_project/libgit2/src/util/hash/win32.c	/^int git_hash_sha1_init(git_hash_sha1_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha1_update	my_project/libgit2/src/util/hash/collisiondetect.c	/^int git_hash_sha1_update(git_hash_sha1_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_sha1_update	my_project/libgit2/src/util/hash/common_crypto.c	/^int git_hash_sha1_update(git_hash_sha1_ctx *ctx, const void *_data, size_t len)$/;"	f	typeref:typename:int
git_hash_sha1_update	my_project/libgit2/src/util/hash/mbedtls.c	/^int git_hash_sha1_update(git_hash_sha1_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_sha1_update	my_project/libgit2/src/util/hash/openssl.c	/^int git_hash_sha1_update(git_hash_sha1_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_sha1_update	my_project/libgit2/src/util/hash/win32.c	/^int git_hash_sha1_update(git_hash_sha1_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_sha256_ctx	my_project/libgit2/src/util/hash/builtin.h	/^struct git_hash_sha256_ctx {$/;"	s
git_hash_sha256_ctx	my_project/libgit2/src/util/hash/common_crypto.h	/^struct git_hash_sha256_ctx {$/;"	s
git_hash_sha256_ctx	my_project/libgit2/src/util/hash/mbedtls.h	/^struct git_hash_sha256_ctx {$/;"	s
git_hash_sha256_ctx	my_project/libgit2/src/util/hash/openssl.h	/^struct git_hash_sha256_ctx {$/;"	s
git_hash_sha256_ctx	my_project/libgit2/src/util/hash/sha.h	/^typedef struct git_hash_sha256_ctx git_hash_sha256_ctx;$/;"	t	typeref:struct:git_hash_sha256_ctx
git_hash_sha256_ctx	my_project/libgit2/src/util/hash/win32.h	/^struct git_hash_sha256_ctx {$/;"	s
git_hash_sha256_ctx_cleanup	my_project/libgit2/src/util/hash/builtin.c	/^void git_hash_sha256_ctx_cleanup(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha256_ctx_cleanup	my_project/libgit2/src/util/hash/common_crypto.c	/^void git_hash_sha256_ctx_cleanup(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha256_ctx_cleanup	my_project/libgit2/src/util/hash/mbedtls.c	/^void git_hash_sha256_ctx_cleanup(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha256_ctx_cleanup	my_project/libgit2/src/util/hash/openssl.c	/^void git_hash_sha256_ctx_cleanup(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha256_ctx_cleanup	my_project/libgit2/src/util/hash/win32.c	/^void git_hash_sha256_ctx_cleanup(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:void
git_hash_sha256_ctx_init	my_project/libgit2/src/util/hash/builtin.c	/^int git_hash_sha256_ctx_init(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_ctx_init	my_project/libgit2/src/util/hash/common_crypto.c	/^int git_hash_sha256_ctx_init(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_ctx_init	my_project/libgit2/src/util/hash/mbedtls.c	/^int git_hash_sha256_ctx_init(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_ctx_init	my_project/libgit2/src/util/hash/openssl.c	/^int git_hash_sha256_ctx_init(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_ctx_init	my_project/libgit2/src/util/hash/win32.c	/^int git_hash_sha256_ctx_init(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_final	my_project/libgit2/src/util/hash/builtin.c	/^int git_hash_sha256_final(unsigned char *out, git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_final	my_project/libgit2/src/util/hash/common_crypto.c	/^int git_hash_sha256_final(unsigned char *out, git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_final	my_project/libgit2/src/util/hash/mbedtls.c	/^int git_hash_sha256_final(unsigned char *out, git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_final	my_project/libgit2/src/util/hash/openssl.c	/^int git_hash_sha256_final(unsigned char *out, git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_final	my_project/libgit2/src/util/hash/win32.c	/^int git_hash_sha256_final(unsigned char *out, git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_global_init	my_project/libgit2/src/util/hash/builtin.c	/^int git_hash_sha256_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha256_global_init	my_project/libgit2/src/util/hash/common_crypto.c	/^int git_hash_sha256_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha256_global_init	my_project/libgit2/src/util/hash/mbedtls.c	/^int git_hash_sha256_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha256_global_init	my_project/libgit2/src/util/hash/openssl.c	/^int git_hash_sha256_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha256_global_init	my_project/libgit2/src/util/hash/win32.c	/^int git_hash_sha256_global_init(void)$/;"	f	typeref:typename:int
git_hash_sha256_init	my_project/libgit2/src/util/hash/builtin.c	/^int git_hash_sha256_init(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_init	my_project/libgit2/src/util/hash/common_crypto.c	/^int git_hash_sha256_init(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_init	my_project/libgit2/src/util/hash/mbedtls.c	/^int git_hash_sha256_init(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_init	my_project/libgit2/src/util/hash/openssl.c	/^int git_hash_sha256_init(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_init	my_project/libgit2/src/util/hash/win32.c	/^int git_hash_sha256_init(git_hash_sha256_ctx *ctx)$/;"	f	typeref:typename:int
git_hash_sha256_update	my_project/libgit2/src/util/hash/builtin.c	/^int git_hash_sha256_update(git_hash_sha256_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_sha256_update	my_project/libgit2/src/util/hash/common_crypto.c	/^int git_hash_sha256_update(git_hash_sha256_ctx *ctx, const void *_data, size_t len)$/;"	f	typeref:typename:int
git_hash_sha256_update	my_project/libgit2/src/util/hash/mbedtls.c	/^int git_hash_sha256_update(git_hash_sha256_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_sha256_update	my_project/libgit2/src/util/hash/openssl.c	/^int git_hash_sha256_update(git_hash_sha256_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_sha256_update	my_project/libgit2/src/util/hash/win32.c	/^int git_hash_sha256_update(git_hash_sha256_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_size	my_project/libgit2/src/util/hash.h	/^GIT_INLINE(size_t) git_hash_size(git_hash_algorithm_t algorithm) {$/;"	f	typeref:typename:size_t
git_hash_update	my_project/libgit2/src/util/hash.c	/^int git_hash_update(git_hash_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
git_hash_vec	my_project/libgit2/src/util/hash.c	/^int git_hash_vec($/;"	f	typeref:typename:int
git_hash_win32_cng_ctx	my_project/libgit2/src/util/hash/win32.h	/^struct git_hash_win32_cng_ctx {$/;"	s
git_hash_win32_cryptoapi_ctx	my_project/libgit2/src/util/hash/win32.h	/^struct git_hash_win32_cryptoapi_ctx {$/;"	s
git_hash_win32_ctx	my_project/libgit2/src/util/hash/win32.h	/^} git_hash_win32_ctx;$/;"	t	typeref:struct:__anon3079894c0208
git_hash_win32_provider	my_project/libgit2/src/util/hash/win32.c	/^git_hash_win32_provider_t git_hash_win32_provider(void)$/;"	f	typeref:typename:git_hash_win32_provider_t
git_hash_win32_provider_t	my_project/libgit2/src/util/hash/win32.h	/^} git_hash_win32_provider_t;$/;"	t	typeref:enum:__anon3079894c0103
git_hash_win32_set_provider	my_project/libgit2/src/util/hash/win32.c	/^int git_hash_win32_set_provider(git_hash_win32_provider_t provider)$/;"	f	typeref:typename:int
git_hashsig	my_project/libgit2/include/git2/sys/hashsig.h	/^typedef struct git_hashsig git_hashsig;$/;"	t	typeref:struct:git_hashsig
git_hashsig	my_project/libgit2/src/libgit2/hashsig.c	/^struct git_hashsig {$/;"	s	file:
git_hashsig_compare	my_project/libgit2/src/libgit2/hashsig.c	/^int git_hashsig_compare(const git_hashsig *a, const git_hashsig *b)$/;"	f	typeref:typename:int
git_hashsig_create	my_project/libgit2/src/libgit2/hashsig.c	/^int git_hashsig_create($/;"	f	typeref:typename:int
git_hashsig_create_fromfile	my_project/libgit2/src/libgit2/hashsig.c	/^int git_hashsig_create_fromfile($/;"	f	typeref:typename:int
git_hashsig_free	my_project/libgit2/src/libgit2/hashsig.c	/^void git_hashsig_free(git_hashsig *sig)$/;"	f	typeref:typename:void
git_hashsig_option_t	my_project/libgit2/include/git2/sys/hashsig.h	/^} git_hashsig_option_t;$/;"	t	typeref:enum:__anon4cb943af0103
git_headlist_cb	my_project/libgit2/include/git2/deprecated.h	/^typedef int GIT_CALLBACK(git_headlist_cb)(git_remote_head *rhead, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(git_remote_head * rhead,void * payload)
git_http__expect_continue	my_project/libgit2/src/libgit2/transports/http.c	/^bool git_http__expect_continue = false;$/;"	v	typeref:typename:bool
git_http__expect_continue	my_project/libgit2/src/libgit2/transports/winhttp.c	/^bool git_http__expect_continue = false;$/;"	v	typeref:typename:bool
git_http_auth_basic	my_project/libgit2/src/libgit2/transports/auth.c	/^int git_http_auth_basic($/;"	f	typeref:typename:int
git_http_auth_context	my_project/libgit2/src/libgit2/transports/auth.h	/^struct git_http_auth_context {$/;"	s
git_http_auth_context	my_project/libgit2/src/libgit2/transports/auth.h	/^typedef struct git_http_auth_context git_http_auth_context;$/;"	t	typeref:struct:git_http_auth_context
git_http_auth_dummy	my_project/libgit2/src/libgit2/transports/auth.c	/^int git_http_auth_dummy($/;"	f	typeref:typename:int
git_http_auth_negotiate	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^int git_http_auth_negotiate($/;"	f	typeref:typename:int
git_http_auth_negotiate	my_project/libgit2/src/libgit2/transports/auth_negotiate.h	/^#define git_http_auth_negotiate /;"	d
git_http_auth_negotiate	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^int git_http_auth_negotiate($/;"	f	typeref:typename:int
git_http_auth_ntlm	my_project/libgit2/src/libgit2/transports/auth_ntlm.h	/^#define git_http_auth_ntlm /;"	d
git_http_auth_ntlm	my_project/libgit2/src/libgit2/transports/auth_ntlmclient.c	/^int git_http_auth_ntlm($/;"	f	typeref:typename:int
git_http_auth_ntlm	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^int git_http_auth_ntlm($/;"	f	typeref:typename:int
git_http_auth_scheme	my_project/libgit2/src/libgit2/transports/auth.h	/^} git_http_auth_scheme;$/;"	t	typeref:struct:__anon4118c2d60208
git_http_auth_t	my_project/libgit2/src/libgit2/transports/auth.h	/^} git_http_auth_t;$/;"	t	typeref:enum:__anon4118c2d60103
git_http_client	my_project/libgit2/src/libgit2/transports/httpclient.c	/^struct git_http_client {$/;"	s	file:
git_http_client	my_project/libgit2/src/libgit2/transports/httpclient.h	/^typedef struct git_http_client git_http_client;$/;"	t	typeref:struct:git_http_client
git_http_client_free	my_project/libgit2/src/libgit2/transports/httpclient.c	/^void git_http_client_free(git_http_client *client)$/;"	f	typeref:typename:void
git_http_client_has_response	my_project/libgit2/src/libgit2/transports/httpclient.c	/^bool git_http_client_has_response(git_http_client *client)$/;"	f	typeref:typename:bool
git_http_client_new	my_project/libgit2/src/libgit2/transports/httpclient.c	/^int git_http_client_new($/;"	f	typeref:typename:int
git_http_client_options	my_project/libgit2/src/libgit2/transports/httpclient.h	/^} git_http_client_options;$/;"	t	typeref:struct:__anon3d590bc30408
git_http_client_read_body	my_project/libgit2/src/libgit2/transports/httpclient.c	/^int git_http_client_read_body($/;"	f	typeref:typename:int
git_http_client_read_response	my_project/libgit2/src/libgit2/transports/httpclient.c	/^int git_http_client_read_response($/;"	f	typeref:typename:int
git_http_client_send_body	my_project/libgit2/src/libgit2/transports/httpclient.c	/^int git_http_client_send_body($/;"	f	typeref:typename:int
git_http_client_send_request	my_project/libgit2/src/libgit2/transports/httpclient.c	/^int git_http_client_send_request($/;"	f	typeref:typename:int
git_http_client_set_options	my_project/libgit2/src/libgit2/transports/httpclient.c	/^void git_http_client_set_options($/;"	f	typeref:typename:void
git_http_client_skip_body	my_project/libgit2/src/libgit2/transports/httpclient.c	/^int git_http_client_skip_body(git_http_client *client)$/;"	f	typeref:typename:int
git_http_method	my_project/libgit2/src/libgit2/transports/httpclient.h	/^} git_http_method;$/;"	t	typeref:enum:__anon3d590bc30103
git_http_parser	my_project/libgit2/src/libgit2/transports/httpparser.h	/^struct git_http_parser {$/;"	s
git_http_parser	my_project/libgit2/src/libgit2/transports/httpparser.h	/^typedef llhttp_t git_http_parser;$/;"	t	typeref:typename:llhttp_t
git_http_parser	my_project/libgit2/src/libgit2/transports/httpparser.h	/^typedef struct git_http_parser git_http_parser;$/;"	t	typeref:struct:git_http_parser
git_http_parser_errmsg	my_project/libgit2/src/libgit2/transports/httpparser.h	/^# define git_http_parser_errmsg(/;"	d
git_http_parser_errno	my_project/libgit2/src/libgit2/transports/httpparser.h	/^# define git_http_parser_errno(/;"	d
git_http_parser_error_t	my_project/libgit2/src/libgit2/transports/httpparser.h	/^} git_http_parser_error_t;$/;"	t	typeref:enum:__anon03e70bb10103
git_http_parser_error_t	my_project/libgit2/src/libgit2/transports/httpparser.h	/^} git_http_parser_error_t;$/;"	t	typeref:enum:__anon03e70bb10403
git_http_parser_execute	my_project/libgit2/src/libgit2/transports/httpparser.c	/^size_t git_http_parser_execute($/;"	f	typeref:typename:size_t
git_http_parser_init	my_project/libgit2/src/libgit2/transports/httpparser.c	/^void git_http_parser_init($/;"	f	typeref:typename:void
git_http_parser_init	my_project/libgit2/src/libgit2/transports/httpparser.h	/^# define git_http_parser_init(/;"	d
git_http_parser_keep_alive	my_project/libgit2/src/libgit2/transports/httpparser.h	/^# define git_http_parser_keep_alive(/;"	d
git_http_parser_pause	my_project/libgit2/src/libgit2/transports/httpparser.h	/^# define git_http_parser_pause(/;"	d
git_http_parser_remain_after_pause	my_project/libgit2/src/libgit2/transports/httpparser.h	/^# define git_http_parser_remain_after_pause(/;"	d
git_http_parser_resume	my_project/libgit2/src/libgit2/transports/httpparser.h	/^# define git_http_parser_resume(/;"	d
git_http_parser_settings	my_project/libgit2/src/libgit2/transports/httpparser.h	/^typedef llhttp_settings_t git_http_parser_settings;$/;"	t	typeref:typename:llhttp_settings_t
git_http_parser_settings	my_project/libgit2/src/libgit2/transports/httpparser.h	/^} git_http_parser_settings;$/;"	t	typeref:struct:__anon03e70bb10308
git_http_parser_status_code	my_project/libgit2/src/libgit2/transports/httpparser.h	/^# define git_http_parser_status_code(/;"	d
git_http_parser_t	my_project/libgit2/src/libgit2/transports/httpparser.h	/^} git_http_parser_t;$/;"	t	typeref:enum:__anon03e70bb10203
git_http_parser_t	my_project/libgit2/src/libgit2/transports/httpparser.h	/^} git_http_parser_t;$/;"	t	typeref:enum:__anon03e70bb10503
git_http_request	my_project/libgit2/src/libgit2/transports/httpclient.h	/^} git_http_request;$/;"	t	typeref:struct:__anon3d590bc30208
git_http_response	my_project/libgit2/src/libgit2/transports/httpclient.h	/^} git_http_response;$/;"	t	typeref:struct:__anon3d590bc30308
git_http_response_dispose	my_project/libgit2/src/libgit2/transports/httpclient.c	/^void git_http_response_dispose(git_http_response *response)$/;"	f	typeref:typename:void
git_http_response_is_redirect	my_project/libgit2/src/libgit2/transports/httpclient.c	/^bool git_http_response_is_redirect(git_http_response *response)$/;"	f	typeref:typename:bool
git_http_server	my_project/libgit2/src/libgit2/transports/httpclient.c	/^} git_http_server;$/;"	t	typeref:struct:__anon3d590bbe0108	file:
git_http_server_t	my_project/libgit2/src/libgit2/transports/httpclient.c	/^} git_http_server_t;$/;"	t	typeref:enum:__anon3d590bbe0203	file:
git_ident_filter_new	my_project/libgit2/src/libgit2/ident.c	/^git_filter *git_ident_filter_new(void)$/;"	f	typeref:typename:git_filter *
git_idxmap	my_project/libgit2/src/libgit2/idxmap.h	/^typedef struct kh_idx_s git_idxmap;$/;"	t	typeref:struct:kh_idx_s
git_idxmap_clear	my_project/libgit2/src/libgit2/idxmap.c	/^void git_idxmap_clear(git_idxmap *map)$/;"	f	typeref:typename:void
git_idxmap_delete	my_project/libgit2/src/libgit2/idxmap.c	/^int git_idxmap_delete(git_idxmap *map, const git_index_entry *key)$/;"	f	typeref:typename:int
git_idxmap_free	my_project/libgit2/src/libgit2/idxmap.c	/^void git_idxmap_free(git_idxmap *map)$/;"	f	typeref:typename:void
git_idxmap_get	my_project/libgit2/src/libgit2/idxmap.c	/^void *git_idxmap_get(git_idxmap *map, const git_index_entry *key)$/;"	f	typeref:typename:void *
git_idxmap_icase	my_project/libgit2/src/libgit2/idxmap.h	/^typedef struct kh_idxicase_s git_idxmap_icase;$/;"	t	typeref:struct:kh_idxicase_s
git_idxmap_icase_clear	my_project/libgit2/src/libgit2/idxmap.c	/^void git_idxmap_icase_clear(git_idxmap_icase *map)$/;"	f	typeref:typename:void
git_idxmap_icase_delete	my_project/libgit2/src/libgit2/idxmap.c	/^int git_idxmap_icase_delete(git_idxmap_icase *map, const git_index_entry *key)$/;"	f	typeref:typename:int
git_idxmap_icase_free	my_project/libgit2/src/libgit2/idxmap.c	/^void git_idxmap_icase_free(git_idxmap_icase *map)$/;"	f	typeref:typename:void
git_idxmap_icase_get	my_project/libgit2/src/libgit2/idxmap.c	/^void *git_idxmap_icase_get(git_idxmap_icase *map, const git_index_entry *key)$/;"	f	typeref:typename:void *
git_idxmap_icase_new	my_project/libgit2/src/libgit2/idxmap.c	/^int git_idxmap_icase_new(git_idxmap_icase **out)$/;"	f	typeref:typename:int
git_idxmap_icase_resize	my_project/libgit2/src/libgit2/idxmap.c	/^int git_idxmap_icase_resize(git_idxmap_icase *map, size_t size)$/;"	f	typeref:typename:int
git_idxmap_icase_set	my_project/libgit2/src/libgit2/idxmap.c	/^int git_idxmap_icase_set(git_idxmap_icase *map, const git_index_entry *key, void *value)$/;"	f	typeref:typename:int
git_idxmap_new	my_project/libgit2/src/libgit2/idxmap.c	/^int git_idxmap_new(git_idxmap **out)$/;"	f
git_idxmap_resize	my_project/libgit2/src/libgit2/idxmap.c	/^int git_idxmap_resize(git_idxmap *map, size_t size)$/;"	f	typeref:typename:int
git_idxmap_set	my_project/libgit2/src/libgit2/idxmap.c	/^int git_idxmap_set(git_idxmap *map, const git_index_entry *key, void *value)$/;"	f	typeref:typename:int
git_ignore__check_pathspec_for_exact_ignores	my_project/libgit2/src/libgit2/ignore.c	/^int git_ignore__check_pathspec_for_exact_ignores($/;"	f	typeref:typename:int
git_ignore__for_path	my_project/libgit2/src/libgit2/ignore.c	/^int git_ignore__for_path($/;"	f	typeref:typename:int
git_ignore__free	my_project/libgit2/src/libgit2/ignore.c	/^void git_ignore__free(git_ignores *ignores)$/;"	f	typeref:typename:void
git_ignore__lookup	my_project/libgit2/src/libgit2/ignore.c	/^int git_ignore__lookup($/;"	f	typeref:typename:int
git_ignore__pop_dir	my_project/libgit2/src/libgit2/ignore.c	/^int git_ignore__pop_dir(git_ignores *ign)$/;"	f	typeref:typename:int
git_ignore__push_dir	my_project/libgit2/src/libgit2/ignore.c	/^int git_ignore__push_dir(git_ignores *ign, const char *dir)$/;"	f	typeref:typename:int
git_ignore_add_rule	my_project/libgit2/src/libgit2/ignore.c	/^int git_ignore_add_rule(git_repository *repo, const char *rules)$/;"	f	typeref:typename:int
git_ignore_clear_internal_rules	my_project/libgit2/src/libgit2/ignore.c	/^int git_ignore_clear_internal_rules(git_repository *repo)$/;"	f	typeref:typename:int
git_ignore_path_is_ignored	my_project/libgit2/src/libgit2/ignore.c	/^int git_ignore_path_is_ignored($/;"	f	typeref:typename:int
git_ignores	my_project/libgit2/src/libgit2/ignore.h	/^} git_ignores;$/;"	t	typeref:struct:__anonc29a75590108
git_index	my_project/libgit2/include/git2/types.h	/^typedef struct git_index git_index;$/;"	t	typeref:struct:git_index
git_index	my_project/libgit2/src/libgit2/index.h	/^struct git_index {$/;"	s
git_index__checksum	my_project/libgit2/src/libgit2/index.h	/^GIT_INLINE(unsigned char *) git_index__checksum(git_index *index)$/;"	f	typeref:typename:unsigned char *
git_index__create_mode	my_project/libgit2/src/libgit2/index.c	/^unsigned int git_index__create_mode(unsigned int mode)$/;"	f	typeref:typename:unsigned int
git_index__enforce_unsaved_safety	my_project/libgit2/src/libgit2/index.c	/^bool git_index__enforce_unsaved_safety = false;$/;"	v	typeref:typename:bool
git_index__filestamp	my_project/libgit2/src/libgit2/index.h	/^GIT_INLINE(const git_futils_filestamp *) git_index__filestamp(git_index *index)$/;"	f	typeref:typename:const git_futils_filestamp *
git_index__fill	my_project/libgit2/src/libgit2/index.c	/^int git_index__fill(git_index *index, const git_vector *source_entries)$/;"	f	typeref:typename:int
git_index__find_pos	my_project/libgit2/src/libgit2/index.c	/^int git_index__find_pos($/;"	f	typeref:typename:int
git_index__new	my_project/libgit2/src/libgit2/index.c	/^int git_index__new(git_index **out, git_oid_t oid_type)$/;"	f	typeref:typename:int
git_index__open	my_project/libgit2/src/libgit2/index.c	/^int git_index__open($/;"	f	typeref:typename:int
git_index__set_ignore_case	my_project/libgit2/src/libgit2/index.c	/^void git_index__set_ignore_case(git_index *index, bool ignore_case)$/;"	f	typeref:typename:void
git_index_add	my_project/libgit2/src/libgit2/index.c	/^int git_index_add(git_index *index, const git_index_entry *source_entry)$/;"	f	typeref:typename:int
git_index_add_all	my_project/libgit2/src/libgit2/index.c	/^int git_index_add_all($/;"	f	typeref:typename:int
git_index_add_bypath	my_project/libgit2/src/libgit2/index.c	/^int git_index_add_bypath(git_index *index, const char *path)$/;"	f	typeref:typename:int
git_index_add_from_buffer	my_project/libgit2/src/libgit2/index.c	/^int git_index_add_from_buffer($/;"	f	typeref:typename:int
git_index_add_frombuffer	my_project/libgit2/src/libgit2/index.c	/^int git_index_add_frombuffer($/;"	f	typeref:typename:int
git_index_add_option_t	my_project/libgit2/include/git2/index.h	/^} git_index_add_option_t;$/;"	t	typeref:enum:__anonf38c49720503
git_index_capability_t	my_project/libgit2/include/git2/index.h	/^} git_index_capability_t;$/;"	t	typeref:enum:__anonf38c49720403
git_index_caps	my_project/libgit2/src/libgit2/index.c	/^int git_index_caps(const git_index *index)$/;"	f	typeref:typename:int
git_index_checksum	my_project/libgit2/src/libgit2/index.c	/^const git_oid *git_index_checksum(git_index *index)$/;"	f	typeref:typename:const git_oid *
git_index_clear	my_project/libgit2/src/libgit2/index.c	/^int git_index_clear(git_index *index)$/;"	f	typeref:typename:int
git_index_conflict_add	my_project/libgit2/src/libgit2/index.c	/^int git_index_conflict_add(git_index *index,$/;"	f	typeref:typename:int
git_index_conflict_cleanup	my_project/libgit2/src/libgit2/index.c	/^int git_index_conflict_cleanup(git_index *index)$/;"	f	typeref:typename:int
git_index_conflict_get	my_project/libgit2/src/libgit2/index.c	/^int git_index_conflict_get($/;"	f	typeref:typename:int
git_index_conflict_iterator	my_project/libgit2/include/git2/types.h	/^typedef struct git_index_conflict_iterator git_index_conflict_iterator;$/;"	t	typeref:struct:git_index_conflict_iterator
git_index_conflict_iterator	my_project/libgit2/src/libgit2/index.h	/^struct git_index_conflict_iterator {$/;"	s
git_index_conflict_iterator_free	my_project/libgit2/src/libgit2/index.c	/^void git_index_conflict_iterator_free(git_index_conflict_iterator *iterator)$/;"	f	typeref:typename:void
git_index_conflict_iterator_new	my_project/libgit2/src/libgit2/index.c	/^int git_index_conflict_iterator_new($/;"	f	typeref:typename:int
git_index_conflict_next	my_project/libgit2/src/libgit2/index.c	/^int git_index_conflict_next($/;"	f	typeref:typename:int
git_index_conflict_remove	my_project/libgit2/src/libgit2/index.c	/^int git_index_conflict_remove(git_index *index, const char *path)$/;"	f	typeref:typename:int
git_index_entry	my_project/libgit2/include/git2/index.h	/^typedef struct git_index_entry {$/;"	s
git_index_entry	my_project/libgit2/include/git2/index.h	/^} git_index_entry;$/;"	t	typeref:struct:git_index_entry
git_index_entry__init_from_stat	my_project/libgit2/src/libgit2/index.c	/^void git_index_entry__init_from_stat($/;"	f	typeref:typename:void
git_index_entry_cmp	my_project/libgit2/src/libgit2/index.c	/^int git_index_entry_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_index_entry_extended_flag_t	my_project/libgit2/include/git2/index.h	/^} git_index_entry_extended_flag_t;$/;"	t	typeref:enum:__anonf38c49720303
git_index_entry_flag_t	my_project/libgit2/include/git2/index.h	/^} git_index_entry_flag_t;$/;"	t	typeref:enum:__anonf38c49720203
git_index_entry_icmp	my_project/libgit2/src/libgit2/index.c	/^int git_index_entry_icmp(const void *a, const void *b)$/;"	f	typeref:typename:int
git_index_entry_is_conflict	my_project/libgit2/src/libgit2/index.c	/^int git_index_entry_is_conflict(const git_index_entry *entry)$/;"	f	typeref:typename:int
git_index_entry_isrch	my_project/libgit2/src/libgit2/index.c	/^int git_index_entry_isrch(const void *key, const void *array_member)$/;"	f	typeref:typename:int
git_index_entry_newer_than_index	my_project/libgit2/src/libgit2/index.h	/^GIT_INLINE(bool) git_index_entry_newer_than_index($/;"	f	typeref:typename:bool
git_index_entry_srch	my_project/libgit2/src/libgit2/index.c	/^int git_index_entry_srch(const void *key, const void *array_member)$/;"	f	typeref:typename:int
git_index_entry_stage	my_project/libgit2/src/libgit2/index.c	/^int git_index_entry_stage(const git_index_entry *entry)$/;"	f	typeref:typename:int
git_index_entrycount	my_project/libgit2/src/libgit2/index.c	/^size_t git_index_entrycount(const git_index *index)$/;"	f	typeref:typename:size_t
git_index_find	my_project/libgit2/src/libgit2/index.c	/^int git_index_find(size_t *at_pos, git_index *index, const char *path)$/;"	f	typeref:typename:int
git_index_find_prefix	my_project/libgit2/src/libgit2/index.c	/^int git_index_find_prefix(size_t *at_pos, git_index *index, const char *prefix)$/;"	f	typeref:typename:int
git_index_free	my_project/libgit2/src/libgit2/index.c	/^void git_index_free(git_index *index)$/;"	f	typeref:typename:void
git_index_get_byindex	my_project/libgit2/src/libgit2/index.c	/^const git_index_entry *git_index_get_byindex($/;"	f	typeref:typename:const git_index_entry *
git_index_get_bypath	my_project/libgit2/src/libgit2/index.c	/^const git_index_entry *git_index_get_bypath($/;"	f	typeref:typename:const git_index_entry *
git_index_has_conflicts	my_project/libgit2/src/libgit2/index.c	/^int git_index_has_conflicts(const git_index *index)$/;"	f	typeref:typename:int
git_index_is_dirty	my_project/libgit2/src/libgit2/index.h	/^GIT_INLINE(int) git_index_is_dirty(git_index *index)$/;"	f	typeref:typename:int
git_index_iterator	my_project/libgit2/include/git2/types.h	/^typedef struct git_index_iterator git_index_iterator;$/;"	t	typeref:struct:git_index_iterator
git_index_iterator	my_project/libgit2/src/libgit2/index.h	/^struct git_index_iterator {$/;"	s
git_index_iterator_free	my_project/libgit2/src/libgit2/index.c	/^void git_index_iterator_free(git_index_iterator *it)$/;"	f	typeref:typename:void
git_index_iterator_new	my_project/libgit2/src/libgit2/index.c	/^int git_index_iterator_new($/;"	f	typeref:typename:int
git_index_iterator_next	my_project/libgit2/src/libgit2/index.c	/^int git_index_iterator_next($/;"	f	typeref:typename:int
git_index_matched_path_cb	my_project/libgit2/include/git2/index.h	/^typedef int GIT_CALLBACK(git_index_matched_path_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * path,const char * matched_pathspec,void * payload)
git_index_name_add	my_project/libgit2/src/libgit2/index.c	/^int git_index_name_add(git_index *index,$/;"	f	typeref:typename:int
git_index_name_clear	my_project/libgit2/src/libgit2/index.c	/^int git_index_name_clear(git_index *index)$/;"	f	typeref:typename:int
git_index_name_entry	my_project/libgit2/include/git2/sys/index.h	/^typedef struct git_index_name_entry {$/;"	s
git_index_name_entry	my_project/libgit2/include/git2/sys/index.h	/^} git_index_name_entry;$/;"	t	typeref:struct:git_index_name_entry
git_index_name_entrycount	my_project/libgit2/src/libgit2/index.c	/^size_t git_index_name_entrycount(git_index *index)$/;"	f	typeref:typename:size_t
git_index_name_get_byindex	my_project/libgit2/src/libgit2/index.c	/^const git_index_name_entry *git_index_name_get_byindex($/;"	f	typeref:typename:const git_index_name_entry *
git_index_new	my_project/libgit2/src/libgit2/index.c	/^int git_index_new(git_index **out)$/;"	f	typeref:typename:int
git_index_new	my_project/libgit2/src/libgit2/index.c	/^int git_index_new(git_index **out, git_oid_t oid_type)$/;"	f	typeref:typename:int
git_index_open	my_project/libgit2/src/libgit2/index.c	/^int git_index_open(git_index **index_out, const char *index_path)$/;"	f	typeref:typename:int
git_index_open	my_project/libgit2/src/libgit2/index.c	/^int git_index_open(git_index **index_out, const char *index_path, git_oid_t oid_type)$/;"	f	typeref:typename:int
git_index_owner	my_project/libgit2/src/libgit2/index.c	/^git_repository *git_index_owner(const git_index *index)$/;"	f	typeref:typename:git_repository *
git_index_path	my_project/libgit2/src/libgit2/index.c	/^const char *git_index_path(const git_index *index)$/;"	f	typeref:typename:const char *
git_index_read	my_project/libgit2/src/libgit2/index.c	/^int git_index_read(git_index *index, int force)$/;"	f	typeref:typename:int
git_index_read_index	my_project/libgit2/src/libgit2/index.c	/^int git_index_read_index($/;"	f	typeref:typename:int
git_index_read_iterator	my_project/libgit2/src/libgit2/index.c	/^static int git_index_read_iterator($/;"	f	typeref:typename:int	file:
git_index_read_safely	my_project/libgit2/src/libgit2/index.c	/^int git_index_read_safely(git_index *index)$/;"	f	typeref:typename:int
git_index_read_tree	my_project/libgit2/src/libgit2/index.c	/^int git_index_read_tree(git_index *index, const git_tree *tree)$/;"	f	typeref:typename:int
git_index_remove	my_project/libgit2/src/libgit2/index.c	/^int git_index_remove(git_index *index, const char *path, int stage)$/;"	f	typeref:typename:int
git_index_remove_all	my_project/libgit2/src/libgit2/index.c	/^int git_index_remove_all($/;"	f	typeref:typename:int
git_index_remove_bypath	my_project/libgit2/src/libgit2/index.c	/^int git_index_remove_bypath(git_index *index, const char *path)$/;"	f	typeref:typename:int
git_index_remove_directory	my_project/libgit2/src/libgit2/index.c	/^int git_index_remove_directory(git_index *index, const char *dir, int stage)$/;"	f	typeref:typename:int
git_index_reuc_add	my_project/libgit2/src/libgit2/index.c	/^int git_index_reuc_add(git_index *index, const char *path,$/;"	f	typeref:typename:int
git_index_reuc_clear	my_project/libgit2/src/libgit2/index.c	/^int git_index_reuc_clear(git_index *index)$/;"	f	typeref:typename:int
git_index_reuc_entry	my_project/libgit2/include/git2/sys/index.h	/^typedef struct git_index_reuc_entry {$/;"	s
git_index_reuc_entry	my_project/libgit2/include/git2/sys/index.h	/^} git_index_reuc_entry;$/;"	t	typeref:struct:git_index_reuc_entry
git_index_reuc_entrycount	my_project/libgit2/src/libgit2/index.c	/^size_t git_index_reuc_entrycount(git_index *index)$/;"	f	typeref:typename:size_t
git_index_reuc_find	my_project/libgit2/src/libgit2/index.c	/^int git_index_reuc_find(size_t *at_pos, git_index *index, const char *path)$/;"	f	typeref:typename:int
git_index_reuc_get_byindex	my_project/libgit2/src/libgit2/index.c	/^const git_index_reuc_entry *git_index_reuc_get_byindex($/;"	f	typeref:typename:const git_index_reuc_entry *
git_index_reuc_get_bypath	my_project/libgit2/src/libgit2/index.c	/^const git_index_reuc_entry *git_index_reuc_get_bypath($/;"	f	typeref:typename:const git_index_reuc_entry *
git_index_reuc_remove	my_project/libgit2/src/libgit2/index.c	/^int git_index_reuc_remove(git_index *index, size_t position)$/;"	f	typeref:typename:int
git_index_set_caps	my_project/libgit2/src/libgit2/index.c	/^int git_index_set_caps(git_index *index, int caps)$/;"	f	typeref:typename:int
git_index_set_version	my_project/libgit2/src/libgit2/index.c	/^int git_index_set_version(git_index *index, unsigned int version)$/;"	f	typeref:typename:int
git_index_snapshot_find	my_project/libgit2/src/libgit2/index.c	/^int git_index_snapshot_find($/;"	f	typeref:typename:int
git_index_snapshot_new	my_project/libgit2/src/libgit2/index.c	/^int git_index_snapshot_new(git_vector *snap, git_index *index)$/;"	f	typeref:typename:int
git_index_snapshot_release	my_project/libgit2/src/libgit2/index.c	/^void git_index_snapshot_release(git_vector *snap, git_index *index)$/;"	f	typeref:typename:void
git_index_stage_t	my_project/libgit2/include/git2/index.h	/^} git_index_stage_t;$/;"	t	typeref:enum:__anonf38c49720603
git_index_time	my_project/libgit2/include/git2/index.h	/^} git_index_time;$/;"	t	typeref:struct:__anonf38c49720108
git_index_time_eq	my_project/libgit2/src/libgit2/index.h	/^GIT_INLINE(bool) git_index_time_eq(const git_index_time *one, const git_index_time *two)$/;"	f	typeref:typename:bool
git_index_update_all	my_project/libgit2/src/libgit2/index.c	/^int git_index_update_all($/;"	f	typeref:typename:int
git_index_version	my_project/libgit2/src/libgit2/index.c	/^unsigned git_index_version(git_index *index)$/;"	f	typeref:typename:unsigned
git_index_write	my_project/libgit2/src/libgit2/index.c	/^int git_index_write(git_index *index)$/;"	f	typeref:typename:int
git_index_write_tree	my_project/libgit2/src/libgit2/index.c	/^int git_index_write_tree(git_oid *oid, git_index *index)$/;"	f	typeref:typename:int
git_index_write_tree_to	my_project/libgit2/src/libgit2/index.c	/^int git_index_write_tree_to($/;"	f	typeref:typename:int
git_indexer	my_project/libgit2/include/git2/indexer.h	/^typedef struct git_indexer git_indexer;$/;"	t	typeref:struct:git_indexer
git_indexer	my_project/libgit2/src/libgit2/indexer.c	/^struct git_indexer {$/;"	s	file:
git_indexer__max_objects	my_project/libgit2/src/libgit2/indexer.c	/^size_t git_indexer__max_objects = UINT32_MAX;$/;"	v	typeref:typename:size_t
git_indexer__set_fsync	my_project/libgit2/src/libgit2/indexer.c	/^void git_indexer__set_fsync(git_indexer *idx, int do_fsync)$/;"	f	typeref:typename:void
git_indexer_append	my_project/libgit2/src/libgit2/indexer.c	/^int git_indexer_append(git_indexer *idx, const void *data, size_t size, git_indexer_progress *st/;"	f	typeref:typename:int
git_indexer_commit	my_project/libgit2/src/libgit2/indexer.c	/^int git_indexer_commit(git_indexer *idx, git_indexer_progress *stats)$/;"	f	typeref:typename:int
git_indexer_free	my_project/libgit2/src/libgit2/indexer.c	/^void git_indexer_free(git_indexer *idx)$/;"	f	typeref:typename:void
git_indexer_hash	my_project/libgit2/src/libgit2/indexer.c	/^const git_oid *git_indexer_hash(const git_indexer *idx)$/;"	f	typeref:typename:const git_oid *
git_indexer_init_options	my_project/libgit2/src/libgit2/indexer.c	/^int git_indexer_init_options(git_indexer_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_indexer_name	my_project/libgit2/src/libgit2/indexer.c	/^const char *git_indexer_name(const git_indexer *idx)$/;"	f	typeref:typename:const char *
git_indexer_new	my_project/libgit2/src/libgit2/indexer.c	/^int git_indexer_new($/;"	f	typeref:typename:int
git_indexer_options	my_project/libgit2/include/git2/indexer.h	/^typedef struct git_indexer_options {$/;"	s
git_indexer_options	my_project/libgit2/include/git2/indexer.h	/^} git_indexer_options;$/;"	t	typeref:struct:git_indexer_options
git_indexer_options_init	my_project/libgit2/src/libgit2/indexer.c	/^int git_indexer_options_init(git_indexer_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_indexer_progress	my_project/libgit2/include/git2/indexer.h	/^typedef struct git_indexer_progress {$/;"	s
git_indexer_progress	my_project/libgit2/include/git2/indexer.h	/^} git_indexer_progress;$/;"	t	typeref:struct:git_indexer_progress
git_indexer_progress_cb	my_project/libgit2/include/git2/indexer.h	/^typedef int GIT_CALLBACK(git_indexer_progress_cb)(const git_indexer_progress *stats, void *paylo/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_indexer_progress * stats,void * payload)
git_indexwriter	my_project/libgit2/src/libgit2/index.h	/^} git_indexwriter;$/;"	t	typeref:struct:__anon5b50d90d0108
git_indexwriter_cleanup	my_project/libgit2/src/libgit2/index.c	/^void git_indexwriter_cleanup(git_indexwriter *writer)$/;"	f	typeref:typename:void
git_indexwriter_commit	my_project/libgit2/src/libgit2/index.c	/^int git_indexwriter_commit(git_indexwriter *writer)$/;"	f	typeref:typename:int
git_indexwriter_init	my_project/libgit2/src/libgit2/index.c	/^int git_indexwriter_init($/;"	f	typeref:typename:int
git_indexwriter_init_for_operation	my_project/libgit2/src/libgit2/index.c	/^int git_indexwriter_init_for_operation($/;"	f	typeref:typename:int
git_iterator	my_project/libgit2/src/libgit2/iterator.h	/^struct git_iterator {$/;"	s
git_iterator	my_project/libgit2/src/libgit2/iterator.h	/^typedef struct git_iterator git_iterator;$/;"	t	typeref:struct:git_iterator
git_iterator_advance	my_project/libgit2/src/libgit2/iterator.h	/^GIT_INLINE(int) git_iterator_advance($/;"	f	typeref:typename:int
git_iterator_advance_into	my_project/libgit2/src/libgit2/iterator.h	/^GIT_INLINE(int) git_iterator_advance_into($/;"	f	typeref:typename:int
git_iterator_advance_over	my_project/libgit2/src/libgit2/iterator.h	/^GIT_INLINE(int) git_iterator_advance_over($/;"	f	typeref:typename:int
git_iterator_callbacks	my_project/libgit2/src/libgit2/iterator.h	/^} git_iterator_callbacks;$/;"	t	typeref:struct:__anon2f88b95f0508
git_iterator_current	my_project/libgit2/src/libgit2/iterator.h	/^GIT_INLINE(int) git_iterator_current($/;"	f	typeref:typename:int
git_iterator_current_is_ignored	my_project/libgit2/src/libgit2/iterator.c	/^bool git_iterator_current_is_ignored(git_iterator *i)$/;"	f	typeref:typename:bool
git_iterator_current_parent_tree	my_project/libgit2/src/libgit2/iterator.c	/^int git_iterator_current_parent_tree($/;"	f	typeref:typename:int
git_iterator_current_tree_entry	my_project/libgit2/src/libgit2/iterator.c	/^int git_iterator_current_tree_entry($/;"	f	typeref:typename:int
git_iterator_current_tree_is_ignored	my_project/libgit2/src/libgit2/iterator.c	/^bool git_iterator_current_tree_is_ignored(git_iterator *i)$/;"	f	typeref:typename:bool
git_iterator_current_workdir_path	my_project/libgit2/src/libgit2/iterator.c	/^int git_iterator_current_workdir_path(git_str **out, git_iterator *i)$/;"	f	typeref:typename:int
git_iterator_flag_t	my_project/libgit2/src/libgit2/iterator.h	/^} git_iterator_flag_t;$/;"	t	typeref:enum:__anon2f88b95f0203
git_iterator_flags	my_project/libgit2/src/libgit2/iterator.h	/^GIT_INLINE(git_iterator_flag_t) git_iterator_flags(git_iterator *iter)$/;"	f	typeref:typename:git_iterator_flag_t
git_iterator_for_filesystem	my_project/libgit2/src/libgit2/iterator.c	/^int git_iterator_for_filesystem($/;"	f	typeref:typename:int
git_iterator_for_index	my_project/libgit2/src/libgit2/iterator.c	/^int git_iterator_for_index($/;"	f	typeref:typename:int
git_iterator_for_nothing	my_project/libgit2/src/libgit2/iterator.c	/^int git_iterator_for_nothing($/;"	f	typeref:typename:int
git_iterator_for_tree	my_project/libgit2/src/libgit2/iterator.c	/^int git_iterator_for_tree($/;"	f	typeref:typename:int
git_iterator_for_workdir	my_project/libgit2/src/libgit2/iterator.h	/^GIT_INLINE(int) git_iterator_for_workdir($/;"	f	typeref:typename:int
git_iterator_for_workdir_ext	my_project/libgit2/src/libgit2/iterator.c	/^int git_iterator_for_workdir_ext($/;"	f	typeref:typename:int
git_iterator_foreach	my_project/libgit2/src/libgit2/iterator.c	/^int git_iterator_foreach($/;"	f	typeref:typename:int
git_iterator_foreach_cb	my_project/libgit2/src/libgit2/iterator.h	/^typedef int (*git_iterator_foreach_cb)($/;"	t	typeref:typename:int (*)(const git_index_entry * entry,void * data)
git_iterator_free	my_project/libgit2/src/libgit2/iterator.c	/^void git_iterator_free(git_iterator *iter)$/;"	f	typeref:typename:void
git_iterator_ignore_case	my_project/libgit2/src/libgit2/iterator.h	/^GIT_INLINE(bool) git_iterator_ignore_case(git_iterator *iter)$/;"	f	typeref:typename:bool
git_iterator_index	my_project/libgit2/src/libgit2/iterator.h	/^GIT_INLINE(git_index *) git_iterator_index(git_iterator *iter)$/;"	f	typeref:typename:git_index *
git_iterator_options	my_project/libgit2/src/libgit2/iterator.h	/^} git_iterator_options;$/;"	t	typeref:struct:__anon2f88b95f0408
git_iterator_owner	my_project/libgit2/src/libgit2/iterator.h	/^GIT_INLINE(git_repository *) git_iterator_owner(git_iterator *iter)$/;"	f	typeref:typename:git_repository *
git_iterator_reset	my_project/libgit2/src/libgit2/iterator.h	/^GIT_INLINE(int) git_iterator_reset(git_iterator *iter)$/;"	f	typeref:typename:int
git_iterator_reset_range	my_project/libgit2/src/libgit2/iterator.c	/^int git_iterator_reset_range($/;"	f	typeref:typename:int
git_iterator_set_ignore_case	my_project/libgit2/src/libgit2/iterator.c	/^int git_iterator_set_ignore_case(git_iterator *i, bool ignore_case)$/;"	f	typeref:typename:int
git_iterator_status_t	my_project/libgit2/src/libgit2/iterator.h	/^} git_iterator_status_t;$/;"	t	typeref:enum:__anon2f88b95f0303
git_iterator_t	my_project/libgit2/src/libgit2/iterator.h	/^} git_iterator_t;$/;"	t	typeref:enum:__anon2f88b95f0103
git_iterator_type	my_project/libgit2/src/libgit2/iterator.h	/^GIT_INLINE(git_iterator_t) git_iterator_type(git_iterator *iter)$/;"	f	typeref:typename:git_iterator_t
git_iterator_walk	my_project/libgit2/src/libgit2/iterator.c	/^int git_iterator_walk($/;"	f	typeref:typename:int
git_iterator_walk_cb	my_project/libgit2/src/libgit2/iterator.h	/^typedef int (*git_iterator_walk_cb)($/;"	t	typeref:typename:int (*)(const git_index_entry ** entries,void * data)
git_libgit2_features	my_project/libgit2/src/libgit2/libgit2.c	/^int git_libgit2_features(void)$/;"	f	typeref:typename:int
git_libgit2_init	my_project/libgit2/src/libgit2/libgit2.c	/^int git_libgit2_init(void)$/;"	f	typeref:typename:int
git_libgit2_opt_t	my_project/libgit2/include/git2/common.h	/^} git_libgit2_opt_t;$/;"	t	typeref:enum:__anon3e1002a30203
git_libgit2_opts	my_project/libgit2/src/libgit2/settings.c	/^int git_libgit2_opts(int key, ...)$/;"	f	typeref:typename:int
git_libgit2_prerelease	my_project/libgit2/src/libgit2/libgit2.c	/^const char *git_libgit2_prerelease(void)$/;"	f	typeref:typename:const char *
git_libgit2_shutdown	my_project/libgit2/src/libgit2/libgit2.c	/^int git_libgit2_shutdown(void)$/;"	f	typeref:typename:int
git_libgit2_version	my_project/libgit2/src/libgit2/libgit2.c	/^int git_libgit2_version(int *major, int *minor, int *rev)$/;"	f	typeref:typename:int
git_mailmap	my_project/libgit2/include/git2/types.h	/^typedef struct git_mailmap git_mailmap;$/;"	t	typeref:struct:git_mailmap
git_mailmap	my_project/libgit2/src/libgit2/mailmap.h	/^struct git_mailmap {$/;"	s
git_mailmap_add_entry	my_project/libgit2/src/libgit2/mailmap.c	/^int git_mailmap_add_entry($/;"	f	typeref:typename:int
git_mailmap_entry	my_project/libgit2/src/libgit2/mailmap.h	/^typedef struct git_mailmap_entry {$/;"	s
git_mailmap_entry	my_project/libgit2/src/libgit2/mailmap.h	/^} git_mailmap_entry;$/;"	t	typeref:struct:git_mailmap_entry
git_mailmap_entry_lookup	my_project/libgit2/src/libgit2/mailmap.c	/^const git_mailmap_entry *git_mailmap_entry_lookup($/;"	f	typeref:typename:const git_mailmap_entry *
git_mailmap_free	my_project/libgit2/src/libgit2/mailmap.c	/^void git_mailmap_free(git_mailmap *mm)$/;"	f	typeref:typename:void
git_mailmap_from_buffer	my_project/libgit2/src/libgit2/mailmap.c	/^int git_mailmap_from_buffer(git_mailmap **out, const char *data, size_t len)$/;"	f	typeref:typename:int
git_mailmap_from_repository	my_project/libgit2/src/libgit2/mailmap.c	/^int git_mailmap_from_repository(git_mailmap **out, git_repository *repo)$/;"	f	typeref:typename:int
git_mailmap_new	my_project/libgit2/src/libgit2/mailmap.c	/^int git_mailmap_new(git_mailmap **out)$/;"	f	typeref:typename:int
git_mailmap_resolve	my_project/libgit2/src/libgit2/mailmap.c	/^int git_mailmap_resolve($/;"	f	typeref:typename:int
git_mailmap_resolve_signature	my_project/libgit2/src/libgit2/mailmap.c	/^int git_mailmap_resolve_signature($/;"	f	typeref:typename:int
git_map	my_project/libgit2/src/util/map.h	/^} git_map;$/;"	t	typeref:struct:__anon84f933a40108
git_mbedtls__set_cert_location	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^int git_mbedtls__set_cert_location(const char *file, const char *path)$/;"	f	typeref:typename:int
git_mbedtls_stream_global_init	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^int git_mbedtls_stream_global_init(void)$/;"	f	typeref:typename:int
git_mbedtls_stream_new	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^int git_mbedtls_stream_new($/;"	f	typeref:typename:int
git_mbedtls_stream_wrap	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^int git_mbedtls_stream_wrap($/;"	f	typeref:typename:int
git_mempack__dump	my_project/libgit2/src/libgit2/odb_mempack.c	/^static int git_mempack__dump($/;"	f	typeref:typename:int	file:
git_mempack_dump	my_project/libgit2/src/libgit2/odb_mempack.c	/^int git_mempack_dump($/;"	f	typeref:typename:int
git_mempack_new	my_project/libgit2/src/libgit2/odb_mempack.c	/^int git_mempack_new(git_odb_backend **out)$/;"	f	typeref:typename:int
git_mempack_reset	my_project/libgit2/src/libgit2/odb_mempack.c	/^int git_mempack_reset(git_odb_backend *_backend)$/;"	f	typeref:typename:int
git_merge	my_project/libgit2/src/libgit2/merge.c	/^int git_merge($/;"	f	typeref:typename:int
git_merge__append_conflicts_to_merge_msg	my_project/libgit2/src/libgit2/merge.c	/^int git_merge__append_conflicts_to_merge_msg($/;"	f	typeref:typename:int
git_merge__bases_many	my_project/libgit2/src/libgit2/merge.c	/^int git_merge__bases_many($/;"	f	typeref:typename:int
git_merge__check_result	my_project/libgit2/src/libgit2/merge.c	/^int git_merge__check_result(git_repository *repo, git_index *index_new)$/;"	f	typeref:typename:int
git_merge__iterators	my_project/libgit2/src/libgit2/merge.c	/^int git_merge__iterators($/;"	f	typeref:typename:int
git_merge__setup	my_project/libgit2/src/libgit2/merge.c	/^int git_merge__setup($/;"	f	typeref:typename:int
git_merge_analysis	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_analysis($/;"	f	typeref:typename:int
git_merge_analysis_for_ref	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_analysis_for_ref($/;"	f	typeref:typename:int
git_merge_analysis_t	my_project/libgit2/include/git2/merge.h	/^} git_merge_analysis_t;$/;"	t	typeref:enum:__anon1374edca0803
git_merge_base	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_base(git_oid *out, git_repository *repo, const git_oid *one, const git_oid *two)$/;"	f	typeref:typename:int
git_merge_base_many	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_base_many(git_oid *out, git_repository *repo, size_t length, const git_oid input_a/;"	f	typeref:typename:int
git_merge_base_octopus	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_base_octopus(git_oid *out, git_repository *repo, size_t length, const git_oid inpu/;"	f	typeref:typename:int
git_merge_bases	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_bases(git_oidarray *out, git_repository *repo, const git_oid *one, const git_oid */;"	f	typeref:typename:int
git_merge_bases_many	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_bases_many(git_oidarray *out, git_repository *repo, size_t length, const git_oid i/;"	f	typeref:typename:int
git_merge_commits	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_commits($/;"	f	typeref:typename:int
git_merge_diff	my_project/libgit2/src/libgit2/merge.h	/^} git_merge_diff;$/;"	t	typeref:struct:__anon7b397d650308
git_merge_diff_list	my_project/libgit2/src/libgit2/merge.h	/^} git_merge_diff_list;$/;"	t	typeref:struct:__anon7b397d650208
git_merge_diff_list__alloc	my_project/libgit2/src/libgit2/merge.c	/^git_merge_diff_list *git_merge_diff_list__alloc(git_repository *repo)$/;"	f	typeref:typename:git_merge_diff_list *
git_merge_diff_list__find_differences	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_diff_list__find_differences($/;"	f	typeref:typename:int
git_merge_diff_list__find_renames	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_diff_list__find_renames($/;"	f	typeref:typename:int
git_merge_diff_list__free	my_project/libgit2/src/libgit2/merge.c	/^void git_merge_diff_list__free(git_merge_diff_list *diff_list)$/;"	f	typeref:typename:void
git_merge_diff_t	my_project/libgit2/src/libgit2/merge.h	/^} git_merge_diff_t;$/;"	t	typeref:enum:__anon7b397d650103
git_merge_driver	my_project/libgit2/include/git2/sys/merge.h	/^struct git_merge_driver {$/;"	s
git_merge_driver	my_project/libgit2/include/git2/sys/merge.h	/^typedef struct git_merge_driver git_merge_driver;$/;"	t	typeref:struct:git_merge_driver
git_merge_driver__binary	my_project/libgit2/src/libgit2/merge_driver.c	/^git_merge_driver git_merge_driver__binary = {$/;"	v	typeref:typename:git_merge_driver
git_merge_driver__builtin	my_project/libgit2/src/libgit2/merge_driver.h	/^typedef struct git_merge_driver__builtin {$/;"	s
git_merge_driver__builtin	my_project/libgit2/src/libgit2/merge_driver.h	/^} git_merge_driver__builtin;$/;"	t	typeref:struct:git_merge_driver__builtin
git_merge_driver__builtin_apply	my_project/libgit2/src/libgit2/merge_driver.c	/^int git_merge_driver__builtin_apply($/;"	f	typeref:typename:int
git_merge_driver__text	my_project/libgit2/src/libgit2/merge_driver.c	/^git_merge_driver__builtin git_merge_driver__text = {$/;"	v	typeref:typename:git_merge_driver__builtin
git_merge_driver__union	my_project/libgit2/src/libgit2/merge_driver.c	/^git_merge_driver__builtin git_merge_driver__union = {$/;"	v	typeref:typename:git_merge_driver__builtin
git_merge_driver_apply_fn	my_project/libgit2/include/git2/sys/merge.h	/^typedef int GIT_CALLBACK(git_merge_driver_apply_fn)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_merge_driver * self,const char ** path_out,uint32_t * mode_out,git_buf * merged_out,const char * filter_name,const git_merge_driver_source * src)
git_merge_driver_entry	my_project/libgit2/src/libgit2/merge_driver.c	/^} git_merge_driver_entry;$/;"	t	typeref:struct:__anonbbbb786b0108	file:
git_merge_driver_for_source	my_project/libgit2/src/libgit2/merge_driver.c	/^int git_merge_driver_for_source($/;"	f	typeref:typename:int
git_merge_driver_global_init	my_project/libgit2/src/libgit2/merge_driver.c	/^int git_merge_driver_global_init(void)$/;"	f	typeref:typename:int
git_merge_driver_global_shutdown	my_project/libgit2/src/libgit2/merge_driver.c	/^static void git_merge_driver_global_shutdown(void)$/;"	f	typeref:typename:void	file:
git_merge_driver_init_fn	my_project/libgit2/include/git2/sys/merge.h	/^typedef int GIT_CALLBACK(git_merge_driver_init_fn)(git_merge_driver *self);$/;"	t	typeref:typename:int GIT_CALLBACK ()(git_merge_driver * self)
git_merge_driver_lookup	my_project/libgit2/src/libgit2/merge_driver.c	/^git_merge_driver *git_merge_driver_lookup(const char *name)$/;"	f	typeref:typename:git_merge_driver *
git_merge_driver_register	my_project/libgit2/src/libgit2/merge_driver.c	/^int git_merge_driver_register(const char *name, git_merge_driver *driver)$/;"	f	typeref:typename:int
git_merge_driver_shutdown_fn	my_project/libgit2/include/git2/sys/merge.h	/^typedef void GIT_CALLBACK(git_merge_driver_shutdown_fn)(git_merge_driver *self);$/;"	t	typeref:typename:void GIT_CALLBACK ()(git_merge_driver * self)
git_merge_driver_source	my_project/libgit2/include/git2/sys/merge.h	/^typedef struct git_merge_driver_source git_merge_driver_source;$/;"	t	typeref:struct:git_merge_driver_source
git_merge_driver_source	my_project/libgit2/src/libgit2/merge_driver.h	/^struct git_merge_driver_source {$/;"	s
git_merge_driver_source_ancestor	my_project/libgit2/src/libgit2/merge_driver.c	/^const git_index_entry *git_merge_driver_source_ancestor($/;"	f	typeref:typename:const git_index_entry *
git_merge_driver_source_file_options	my_project/libgit2/src/libgit2/merge_driver.c	/^const git_merge_file_options *git_merge_driver_source_file_options($/;"	f	typeref:typename:const git_merge_file_options *
git_merge_driver_source_ours	my_project/libgit2/src/libgit2/merge_driver.c	/^const git_index_entry *git_merge_driver_source_ours($/;"	f	typeref:typename:const git_index_entry *
git_merge_driver_source_repo	my_project/libgit2/src/libgit2/merge_driver.c	/^git_repository *git_merge_driver_source_repo($/;"	f	typeref:typename:git_repository *
git_merge_driver_source_theirs	my_project/libgit2/src/libgit2/merge_driver.c	/^const git_index_entry *git_merge_driver_source_theirs($/;"	f	typeref:typename:const git_index_entry *
git_merge_driver_unregister	my_project/libgit2/src/libgit2/merge_driver.c	/^int git_merge_driver_unregister(const char *name)$/;"	f	typeref:typename:int
git_merge_file	my_project/libgit2/src/libgit2/merge_file.c	/^int git_merge_file($/;"	f	typeref:typename:int
git_merge_file__best_mode	my_project/libgit2/src/libgit2/merge.h	/^GIT_INLINE(uint32_t) git_merge_file__best_mode($/;"	f	typeref:typename:uint32_t
git_merge_file__best_path	my_project/libgit2/src/libgit2/merge.h	/^GIT_INLINE(const char *) git_merge_file__best_path($/;"	f	typeref:typename:const char *
git_merge_file__normalize_inputs	my_project/libgit2/src/libgit2/merge_file.c	/^static git_merge_file_input *git_merge_file__normalize_inputs($/;"	f	typeref:typename:git_merge_file_input *	file:
git_merge_file_favor_t	my_project/libgit2/include/git2/merge.h	/^} git_merge_file_favor_t;$/;"	t	typeref:enum:__anon1374edca0303
git_merge_file_flag_t	my_project/libgit2/include/git2/merge.h	/^} git_merge_file_flag_t;$/;"	t	typeref:enum:__anon1374edca0403
git_merge_file_from_index	my_project/libgit2/src/libgit2/merge_file.c	/^int git_merge_file_from_index($/;"	f	typeref:typename:int
git_merge_file_init_input	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_file_init_input(git_merge_file_input *input, unsigned int version)$/;"	f	typeref:typename:int
git_merge_file_init_options	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_file_init_options($/;"	f	typeref:typename:int
git_merge_file_input	my_project/libgit2/include/git2/merge.h	/^} git_merge_file_input;$/;"	t	typeref:struct:__anon1374edca0108
git_merge_file_input_init	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_file_input_init(git_merge_file_input *input, unsigned int version)$/;"	f	typeref:typename:int
git_merge_file_options	my_project/libgit2/include/git2/merge.h	/^} git_merge_file_options;$/;"	t	typeref:struct:__anon1374edca0508
git_merge_file_options_init	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_file_options_init($/;"	f	typeref:typename:int
git_merge_file_result	my_project/libgit2/include/git2/merge.h	/^} git_merge_file_result;$/;"	t	typeref:struct:__anon1374edca0608
git_merge_file_result_free	my_project/libgit2/src/libgit2/merge_file.c	/^void git_merge_file_result_free(git_merge_file_result *result)$/;"	f	typeref:typename:void
git_merge_flag_t	my_project/libgit2/include/git2/merge.h	/^} git_merge_flag_t;$/;"	t	typeref:enum:__anon1374edca0203
git_merge_init_options	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_init_options(git_merge_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_merge_options	my_project/libgit2/include/git2/merge.h	/^} git_merge_options;$/;"	t	typeref:struct:__anon1374edca0708
git_merge_options_init	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_options_init(git_merge_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_merge_preference_t	my_project/libgit2/include/git2/merge.h	/^} git_merge_preference_t;$/;"	t	typeref:enum:__anon1374edca0903
git_merge_trees	my_project/libgit2/src/libgit2/merge.c	/^int git_merge_trees($/;"	f	typeref:typename:int
git_message__prettify	my_project/libgit2/src/libgit2/message.c	/^static int git_message__prettify($/;"	f	typeref:typename:int	file:
git_message_prettify	my_project/libgit2/src/libgit2/message.c	/^int git_message_prettify($/;"	f	typeref:typename:int
git_message_trailer	my_project/libgit2/include/git2/message.h	/^} git_message_trailer;$/;"	t	typeref:struct:__anon2d3685bf0108
git_message_trailer_array	my_project/libgit2/include/git2/message.h	/^} git_message_trailer_array;$/;"	t	typeref:struct:__anon2d3685bf0208
git_message_trailer_array_free	my_project/libgit2/src/libgit2/trailer.c	/^void git_message_trailer_array_free(git_message_trailer_array *arr)$/;"	f	typeref:typename:void
git_message_trailers	my_project/libgit2/src/libgit2/trailer.c	/^int git_message_trailers(git_message_trailer_array *trailer_arr, const char *message)$/;"	f	typeref:typename:int
git_midx_chunk	my_project/libgit2/src/libgit2/midx.c	/^struct git_midx_chunk {$/;"	s	file:
git_midx_close	my_project/libgit2/src/libgit2/midx.c	/^int git_midx_close(git_midx_file *idx)$/;"	f	typeref:typename:int
git_midx_entry	my_project/libgit2/src/libgit2/midx.h	/^typedef struct git_midx_entry {$/;"	s
git_midx_entry	my_project/libgit2/src/libgit2/midx.h	/^} git_midx_entry;$/;"	t	typeref:struct:git_midx_entry
git_midx_entry_find	my_project/libgit2/src/libgit2/midx.c	/^int git_midx_entry_find($/;"	f	typeref:typename:int
git_midx_file	my_project/libgit2/src/libgit2/midx.h	/^typedef struct git_midx_file {$/;"	s
git_midx_file	my_project/libgit2/src/libgit2/midx.h	/^} git_midx_file;$/;"	t	typeref:struct:git_midx_file
git_midx_foreach_entry	my_project/libgit2/src/libgit2/midx.c	/^int git_midx_foreach_entry($/;"	f	typeref:typename:int
git_midx_free	my_project/libgit2/src/libgit2/midx.c	/^void git_midx_free(git_midx_file *idx)$/;"	f	typeref:typename:void
git_midx_header	my_project/libgit2/src/libgit2/midx.c	/^struct git_midx_header {$/;"	s	file:
git_midx_needs_refresh	my_project/libgit2/src/libgit2/midx.c	/^bool git_midx_needs_refresh($/;"	f	typeref:typename:bool
git_midx_open	my_project/libgit2/src/libgit2/midx.c	/^int git_midx_open($/;"	f	typeref:typename:int
git_midx_parse	my_project/libgit2/src/libgit2/midx.c	/^int git_midx_parse($/;"	f	typeref:typename:int
git_midx_writer	my_project/libgit2/include/git2/types.h	/^typedef struct git_midx_writer git_midx_writer;$/;"	t	typeref:struct:git_midx_writer
git_midx_writer	my_project/libgit2/src/libgit2/midx.h	/^struct git_midx_writer {$/;"	s
git_midx_writer_add	my_project/libgit2/src/libgit2/midx.c	/^int git_midx_writer_add($/;"	f	typeref:typename:int
git_midx_writer_commit	my_project/libgit2/src/libgit2/midx.c	/^int git_midx_writer_commit($/;"	f	typeref:typename:int
git_midx_writer_dump	my_project/libgit2/src/libgit2/midx.c	/^int git_midx_writer_dump($/;"	f	typeref:typename:int
git_midx_writer_free	my_project/libgit2/src/libgit2/midx.c	/^void git_midx_writer_free(git_midx_writer *w)$/;"	f	typeref:typename:void
git_midx_writer_new	my_project/libgit2/src/libgit2/midx.c	/^int git_midx_writer_new($/;"	f	typeref:typename:int
git_mutex	my_project/libgit2/src/util/thread.h	/^#define git_mutex /;"	d
git_mutex	my_project/libgit2/src/util/unix/pthread.h	/^#define git_mutex /;"	d
git_mutex	my_project/libgit2/src/util/win32/thread.h	/^typedef CRITICAL_SECTION git_mutex;$/;"	t	typeref:typename:CRITICAL_SECTION
git_mutex_free	my_project/libgit2/src/util/thread.h	/^#define git_mutex_free(/;"	d
git_mutex_free	my_project/libgit2/src/util/unix/pthread.h	/^#define git_mutex_free(/;"	d
git_mutex_free	my_project/libgit2/src/util/win32/thread.c	/^int git_mutex_free(git_mutex *mutex)$/;"	f	typeref:typename:int
git_mutex_init	my_project/libgit2/src/util/thread.h	/^#define git_mutex_init(/;"	d
git_mutex_init	my_project/libgit2/src/util/unix/pthread.h	/^#define git_mutex_init(/;"	d
git_mutex_init	my_project/libgit2/src/util/win32/thread.c	/^int git_mutex_init(git_mutex *GIT_RESTRICT mutex)$/;"	f	typeref:typename:int
git_mutex_lock	my_project/libgit2/src/util/thread.h	/^#define git_mutex_lock(/;"	d
git_mutex_lock	my_project/libgit2/src/util/unix/pthread.h	/^#define git_mutex_lock(/;"	d
git_mutex_lock	my_project/libgit2/src/util/win32/thread.c	/^int git_mutex_lock(git_mutex *mutex)$/;"	f	typeref:typename:int
git_mutex_unlock	my_project/libgit2/src/util/thread.h	/^#define git_mutex_unlock(/;"	d
git_mutex_unlock	my_project/libgit2/src/util/unix/pthread.h	/^#define git_mutex_unlock(/;"	d
git_mutex_unlock	my_project/libgit2/src/util/win32/thread.c	/^int git_mutex_unlock(git_mutex *mutex)$/;"	f	typeref:typename:int
git_mwindow	my_project/libgit2/src/libgit2/mwindow.h	/^typedef struct git_mwindow {$/;"	s
git_mwindow	my_project/libgit2/src/libgit2/mwindow.h	/^} git_mwindow;$/;"	t	typeref:struct:git_mwindow
git_mwindow__file_limit	my_project/libgit2/src/libgit2/mwindow.c	/^size_t git_mwindow__file_limit = DEFAULT_FILE_LIMIT;$/;"	v	typeref:typename:size_t
git_mwindow__mapped_limit	my_project/libgit2/src/libgit2/mwindow.c	/^size_t git_mwindow__mapped_limit = DEFAULT_MAPPED_LIMIT;$/;"	v	typeref:typename:size_t
git_mwindow__mem_ctl	my_project/libgit2/src/libgit2/mwindow.c	/^git_mwindow_ctl git_mwindow__mem_ctl;$/;"	v	typeref:typename:git_mwindow_ctl
git_mwindow__window_size	my_project/libgit2/src/libgit2/mwindow.c	/^size_t git_mwindow__window_size = DEFAULT_WINDOW_SIZE;$/;"	v	typeref:typename:size_t
git_mwindow_close	my_project/libgit2/src/libgit2/mwindow.c	/^void git_mwindow_close(git_mwindow **window)$/;"	f	typeref:typename:void
git_mwindow_close_lru_window_locked	my_project/libgit2/src/libgit2/mwindow.c	/^static int git_mwindow_close_lru_window_locked(void)$/;"	f	typeref:typename:int	file:
git_mwindow_contains	my_project/libgit2/src/libgit2/mwindow.c	/^int git_mwindow_contains(git_mwindow *win, off64_t offset, off64_t extra)$/;"	f	typeref:typename:int
git_mwindow_ctl	my_project/libgit2/src/libgit2/mwindow.h	/^typedef struct git_mwindow_ctl {$/;"	s
git_mwindow_ctl	my_project/libgit2/src/libgit2/mwindow.h	/^} git_mwindow_ctl;$/;"	t	typeref:struct:git_mwindow_ctl
git_mwindow_file	my_project/libgit2/src/libgit2/mwindow.h	/^typedef struct git_mwindow_file {$/;"	s
git_mwindow_file	my_project/libgit2/src/libgit2/mwindow.h	/^} git_mwindow_file;$/;"	t	typeref:struct:git_mwindow_file
git_mwindow_file_deregister	my_project/libgit2/src/libgit2/mwindow.c	/^void git_mwindow_file_deregister(git_mwindow_file *mwf)$/;"	f	typeref:typename:void
git_mwindow_file_register	my_project/libgit2/src/libgit2/mwindow.c	/^int git_mwindow_file_register(git_mwindow_file *mwf)$/;"	f	typeref:typename:int
git_mwindow_find_lru_file_locked	my_project/libgit2/src/libgit2/mwindow.c	/^static int git_mwindow_find_lru_file_locked(git_mwindow_file **out)$/;"	f	typeref:typename:int	file:
git_mwindow_free_all	my_project/libgit2/src/libgit2/mwindow.c	/^int git_mwindow_free_all(git_mwindow_file *mwf)$/;"	f	typeref:typename:int
git_mwindow_free_all_locked	my_project/libgit2/src/libgit2/mwindow.c	/^static int git_mwindow_free_all_locked(git_mwindow_file *mwf)$/;"	f	typeref:typename:int	file:
git_mwindow_get_pack	my_project/libgit2/src/libgit2/mwindow.c	/^int git_mwindow_get_pack($/;"	f	typeref:typename:int
git_mwindow_global_init	my_project/libgit2/src/libgit2/mwindow.c	/^int git_mwindow_global_init(void)$/;"	f	typeref:typename:int
git_mwindow_global_shutdown	my_project/libgit2/src/libgit2/mwindow.c	/^static void git_mwindow_global_shutdown(void)$/;"	f	typeref:typename:void	file:
git_mwindow_open	my_project/libgit2/src/libgit2/mwindow.c	/^unsigned char *git_mwindow_open($/;"	f	typeref:typename:unsigned char *
git_mwindow_put_pack	my_project/libgit2/src/libgit2/mwindow.c	/^int git_mwindow_put_pack(struct git_pack_file *pack)$/;"	f	typeref:typename:int
git_mwindow_scan_recently_used	my_project/libgit2/src/libgit2/mwindow.c	/^static bool git_mwindow_scan_recently_used($/;"	f	typeref:typename:bool	file:
git_net_hostname_matches_cert	my_project/libgit2/src/util/net.c	/^bool git_net_hostname_matches_cert($/;"	f	typeref:typename:bool
git_net_str_is_url	my_project/libgit2/src/util/net.c	/^bool git_net_str_is_url(const char *str)$/;"	f	typeref:typename:bool
git_net_url	my_project/libgit2/src/util/net.h	/^typedef struct git_net_url {$/;"	s
git_net_url	my_project/libgit2/src/util/net.h	/^} git_net_url;$/;"	t	typeref:struct:git_net_url
git_net_url_apply_redirect	my_project/libgit2/src/util/net.c	/^int git_net_url_apply_redirect($/;"	f	typeref:typename:int
git_net_url_dispose	my_project/libgit2/src/util/net.c	/^void git_net_url_dispose(git_net_url *url)$/;"	f	typeref:typename:void
git_net_url_dup	my_project/libgit2/src/util/net.c	/^int git_net_url_dup(git_net_url *out, git_net_url *in)$/;"	f	typeref:typename:int
git_net_url_fmt	my_project/libgit2/src/util/net.c	/^int git_net_url_fmt(git_str *buf, git_net_url *url)$/;"	f	typeref:typename:int
git_net_url_fmt_path	my_project/libgit2/src/util/net.c	/^int git_net_url_fmt_path(git_str *buf, git_net_url *url)$/;"	f	typeref:typename:int
git_net_url_is_default_port	my_project/libgit2/src/util/net.c	/^bool git_net_url_is_default_port(git_net_url *url)$/;"	f	typeref:typename:bool
git_net_url_is_ipv6	my_project/libgit2/src/util/net.c	/^bool git_net_url_is_ipv6(git_net_url *url)$/;"	f	typeref:typename:bool
git_net_url_joinpath	my_project/libgit2/src/util/net.c	/^int git_net_url_joinpath($/;"	f	typeref:typename:int
git_net_url_matches_pattern	my_project/libgit2/src/util/net.c	/^bool git_net_url_matches_pattern(git_net_url *url, const char *pattern)$/;"	f	typeref:typename:bool
git_net_url_matches_pattern_list	my_project/libgit2/src/util/net.c	/^bool git_net_url_matches_pattern_list($/;"	f	typeref:typename:bool
git_net_url_parse	my_project/libgit2/src/util/net.c	/^int git_net_url_parse(git_net_url *url, const char *given)$/;"	f	typeref:typename:int
git_net_url_parse_http	my_project/libgit2/src/util/net.c	/^int git_net_url_parse_http($/;"	f	typeref:typename:int
git_net_url_parse_scp	my_project/libgit2/src/util/net.c	/^int git_net_url_parse_scp(git_net_url *url, const char *given)$/;"	f	typeref:typename:int
git_net_url_parse_standard_or_scp	my_project/libgit2/src/util/net.c	/^int git_net_url_parse_standard_or_scp(git_net_url *url, const char *given)$/;"	f	typeref:typename:int
git_net_url_parser	my_project/libgit2/src/util/net.c	/^} git_net_url_parser;$/;"	t	typeref:struct:__anon850d8ea80108	file:
git_net_url_swap	my_project/libgit2/src/util/net.c	/^void git_net_url_swap(git_net_url *a, git_net_url *b)$/;"	f	typeref:typename:void
git_net_url_valid	my_project/libgit2/src/util/net.c	/^bool git_net_url_valid(git_net_url *url)$/;"	f	typeref:typename:bool
git_note	my_project/libgit2/include/git2/types.h	/^typedef struct git_note git_note;$/;"	t	typeref:struct:git_note
git_note	my_project/libgit2/src/libgit2/notes.h	/^struct git_note {$/;"	s
git_note_author	my_project/libgit2/src/libgit2/notes.c	/^const git_signature *git_note_author(const git_note *note)$/;"	f	typeref:typename:const git_signature *
git_note_commit_create	my_project/libgit2/src/libgit2/notes.c	/^int git_note_commit_create($/;"	f	typeref:typename:int
git_note_commit_iterator_new	my_project/libgit2/src/libgit2/notes.c	/^int git_note_commit_iterator_new($/;"	f	typeref:typename:int
git_note_commit_read	my_project/libgit2/src/libgit2/notes.c	/^int git_note_commit_read($/;"	f	typeref:typename:int
git_note_commit_remove	my_project/libgit2/src/libgit2/notes.c	/^int git_note_commit_remove($/;"	f	typeref:typename:int
git_note_committer	my_project/libgit2/src/libgit2/notes.c	/^const git_signature *git_note_committer(const git_note *note)$/;"	f	typeref:typename:const git_signature *
git_note_create	my_project/libgit2/src/libgit2/notes.c	/^int git_note_create($/;"	f	typeref:typename:int
git_note_default_ref	my_project/libgit2/src/libgit2/notes.c	/^int git_note_default_ref(git_buf *out, git_repository *repo)$/;"	f	typeref:typename:int
git_note_foreach	my_project/libgit2/src/libgit2/notes.c	/^int git_note_foreach($/;"	f	typeref:typename:int
git_note_foreach_cb	my_project/libgit2/include/git2/notes.h	/^typedef int GIT_CALLBACK(git_note_foreach_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_oid * blob_id,const git_oid * annotated_object_id,void * payload)
git_note_free	my_project/libgit2/src/libgit2/notes.c	/^void git_note_free(git_note *note)$/;"	f	typeref:typename:void
git_note_id	my_project/libgit2/src/libgit2/notes.c	/^const git_oid *git_note_id(const git_note *note)$/;"	f	typeref:typename:const git_oid *
git_note_iterator	my_project/libgit2/include/git2/notes.h	/^typedef struct git_iterator git_note_iterator;$/;"	t	typeref:struct:git_iterator
git_note_iterator_free	my_project/libgit2/src/libgit2/notes.c	/^void git_note_iterator_free(git_note_iterator *it)$/;"	f	typeref:typename:void
git_note_iterator_new	my_project/libgit2/src/libgit2/notes.c	/^int git_note_iterator_new($/;"	f	typeref:typename:int
git_note_message	my_project/libgit2/src/libgit2/notes.c	/^const char *git_note_message(const git_note *note)$/;"	f	typeref:typename:const char *
git_note_next	my_project/libgit2/src/libgit2/notes.c	/^int git_note_next($/;"	f	typeref:typename:int
git_note_read	my_project/libgit2/src/libgit2/notes.c	/^int git_note_read(git_note **out, git_repository *repo,$/;"	f	typeref:typename:int
git_note_remove	my_project/libgit2/src/libgit2/notes.c	/^int git_note_remove(git_repository *repo, const char *notes_ref_in,$/;"	f	typeref:typename:int
git_object	my_project/libgit2/include/git2/types.h	/^typedef struct git_object git_object;$/;"	t	typeref:struct:git_object
git_object	my_project/libgit2/src/libgit2/object.h	/^struct git_object {$/;"	s
git_object__free	my_project/libgit2/src/libgit2/object.c	/^void git_object__free(void *obj)$/;"	f	typeref:typename:void
git_object__from_odb_object	my_project/libgit2/src/libgit2/object.c	/^int git_object__from_odb_object($/;"	f	typeref:typename:int
git_object__from_raw	my_project/libgit2/src/libgit2/object.c	/^int git_object__from_raw($/;"	f	typeref:typename:int
git_object__init_from_odb_object	my_project/libgit2/src/libgit2/object.c	/^int git_object__init_from_odb_object($/;"	f	typeref:typename:int
git_object__is_valid	my_project/libgit2/src/libgit2/object.c	/^bool git_object__is_valid($/;"	f	typeref:typename:bool
git_object__parse_oid_header	my_project/libgit2/src/libgit2/object.c	/^int git_object__parse_oid_header($/;"	f	typeref:typename:int
git_object__short_id	my_project/libgit2/src/libgit2/object.c	/^static int git_object__short_id(git_str *out, const git_object *obj)$/;"	f	typeref:typename:int	file:
git_object__size	my_project/libgit2/src/libgit2/object.c	/^size_t git_object__size(git_object_t type)$/;"	f	typeref:typename:size_t
git_object__strict_input_validation	my_project/libgit2/src/libgit2/object.c	/^bool git_object__strict_input_validation = true;$/;"	v	typeref:typename:bool
git_object__type_from_filemode	my_project/libgit2/src/libgit2/object.h	/^GIT_INLINE(git_object_t) git_object__type_from_filemode(git_filemode_t mode)$/;"	f	typeref:typename:git_object_t
git_object__write_oid_header	my_project/libgit2/src/libgit2/object.c	/^int git_object__write_oid_header($/;"	f	typeref:typename:int
git_object_def	my_project/libgit2/src/libgit2/object.c	/^} git_object_def;$/;"	t	typeref:struct:__anonc130b1670108	file:
git_object_dup	my_project/libgit2/src/libgit2/object.c	/^int git_object_dup(git_object **dest, git_object *source)$/;"	f	typeref:typename:int
git_object_free	my_project/libgit2/src/libgit2/object.c	/^void git_object_free(git_object *object)$/;"	f	typeref:typename:void
git_object_id	my_project/libgit2/src/libgit2/object.c	/^const git_oid *git_object_id(const git_object *obj)$/;"	f	typeref:typename:const git_oid *
git_object_lookup	my_project/libgit2/src/libgit2/object.c	/^int git_object_lookup(git_object **object_out, git_repository *repo, const git_oid *id, git_obje/;"	f	typeref:typename:int
git_object_lookup_bypath	my_project/libgit2/src/libgit2/object.c	/^int git_object_lookup_bypath($/;"	f	typeref:typename:int
git_object_lookup_prefix	my_project/libgit2/src/libgit2/object.c	/^int git_object_lookup_prefix($/;"	f	typeref:typename:int
git_object_owner	my_project/libgit2/src/libgit2/object.c	/^git_repository *git_object_owner(const git_object *obj)$/;"	f	typeref:typename:git_repository *
git_object_peel	my_project/libgit2/src/libgit2/object.c	/^int git_object_peel($/;"	f	typeref:typename:int
git_object_rawcontent_is_valid	my_project/libgit2/src/libgit2/object.c	/^int git_object_rawcontent_is_valid($/;"	f	typeref:typename:int
git_object_short_id	my_project/libgit2/src/libgit2/object.c	/^int git_object_short_id(git_buf *out, const git_object *obj)$/;"	f	typeref:typename:int
git_object_size_t	my_project/libgit2/include/git2/types.h	/^typedef uint64_t git_object_size_t;$/;"	t	typeref:typename:uint64_t
git_object_string2type	my_project/libgit2/src/libgit2/object.c	/^git_object_t git_object_string2type(const char *str)$/;"	f	typeref:typename:git_object_t
git_object_stringn2type	my_project/libgit2/src/libgit2/object.c	/^git_object_t git_object_stringn2type(const char *str, size_t len)$/;"	f	typeref:typename:git_object_t
git_object_t	my_project/libgit2/include/git2/types.h	/^} git_object_t;$/;"	t	typeref:enum:__anon5cceb56f0103
git_object_type	my_project/libgit2/src/libgit2/object.c	/^git_object_t git_object_type(const git_object *obj)$/;"	f	typeref:typename:git_object_t
git_object_type2string	my_project/libgit2/src/libgit2/object.c	/^const char *git_object_type2string(git_object_t type)$/;"	f	typeref:typename:const char *
git_object_typeisloose	my_project/libgit2/src/libgit2/object.c	/^int git_object_typeisloose(git_object_t type)$/;"	f	typeref:typename:int
git_objects_table	my_project/libgit2/src/libgit2/object.c	/^static git_object_def git_objects_table[] = {$/;"	v	typeref:typename:git_object_def[]	file:
git_odb	my_project/libgit2/include/git2/types.h	/^typedef struct git_odb git_odb;$/;"	t	typeref:struct:git_odb
git_odb	my_project/libgit2/src/libgit2/odb.h	/^struct git_odb {$/;"	s
git_odb__add_default_backends	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__add_default_backends($/;"	f	typeref:typename:int
git_odb__backend_loose	my_project/libgit2/src/libgit2/odb_loose.c	/^int git_odb__backend_loose($/;"	f	typeref:typename:int
git_odb__error_ambiguous	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__error_ambiguous(const char *message)$/;"	f	typeref:typename:int
git_odb__error_mismatch	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__error_mismatch(const git_oid *expected, const git_oid *actual)$/;"	f	typeref:typename:int
git_odb__error_notfound	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__error_notfound($/;"	f	typeref:typename:int
git_odb__error_unsupported_in_backend	my_project/libgit2/src/libgit2/odb.c	/^static int git_odb__error_unsupported_in_backend(const char *action)$/;"	f	typeref:typename:int	file:
git_odb__format_object_header	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__format_object_header($/;"	f	typeref:typename:int
git_odb__freshen	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__freshen(git_odb *db, const git_oid *id)$/;"	f	typeref:typename:int
git_odb__get_commit_graph_file	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__get_commit_graph_file(git_commit_graph_file **out, git_odb *db)$/;"	f	typeref:typename:int
git_odb__hash	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__hash($/;"	f	typeref:typename:int
git_odb__hashfd	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__hashfd($/;"	f	typeref:typename:int
git_odb__hashfd_filtered	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__hashfd_filtered($/;"	f	typeref:typename:int
git_odb__hashfile	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__hashfile($/;"	f	typeref:typename:int
git_odb__hashlink	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__hashlink(git_oid *out, const char *path, git_oid_t oid_type)$/;"	f	typeref:typename:int
git_odb__hashobj	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__hashobj(git_oid *id, git_rawobj *obj, git_oid_t oid_type)$/;"	f	typeref:typename:int
git_odb__loose_priority	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__loose_priority = GIT_ODB_DEFAULT_LOOSE_PRIORITY;$/;"	v	typeref:typename:int
git_odb__new	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__new(git_odb **out, const git_odb_options *opts)$/;"	f	typeref:typename:int
git_odb__open	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__open($/;"	f	typeref:typename:int
git_odb__packed_priority	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__packed_priority = GIT_ODB_DEFAULT_PACKED_PRIORITY;$/;"	v	typeref:typename:int
git_odb__read_header_or_object	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__read_header_or_object($/;"	f	typeref:typename:int
git_odb__set_caps	my_project/libgit2/src/libgit2/odb.c	/^int git_odb__set_caps(git_odb *odb, int caps)$/;"	f	typeref:typename:int
git_odb__strict_hash_verification	my_project/libgit2/src/libgit2/odb.c	/^bool git_odb__strict_hash_verification = true;$/;"	v	typeref:typename:bool
git_odb_add_alternate	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_add_alternate(git_odb *odb, git_odb_backend *backend, int priority)$/;"	f	typeref:typename:int
git_odb_add_backend	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_add_backend(git_odb *odb, git_odb_backend *backend, int priority)$/;"	f	typeref:typename:int
git_odb_add_disk_alternate	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_add_disk_alternate(git_odb *odb, const char *path)$/;"	f	typeref:typename:int
git_odb_backend	my_project/libgit2/include/git2/sys/odb_backend.h	/^struct git_odb_backend {$/;"	s
git_odb_backend	my_project/libgit2/include/git2/types.h	/^typedef struct git_odb_backend git_odb_backend;$/;"	t	typeref:struct:git_odb_backend
git_odb_backend_data_alloc	my_project/libgit2/src/libgit2/odb.c	/^void *git_odb_backend_data_alloc(git_odb_backend *backend, size_t len)$/;"	f	typeref:typename:void *
git_odb_backend_data_free	my_project/libgit2/src/libgit2/odb.c	/^void git_odb_backend_data_free(git_odb_backend *backend, void *data)$/;"	f	typeref:typename:void
git_odb_backend_loose	my_project/libgit2/src/libgit2/odb_loose.c	/^int git_odb_backend_loose($/;"	f	typeref:typename:int
git_odb_backend_loose_flag_t	my_project/libgit2/include/git2/odb_backend.h	/^} git_odb_backend_loose_flag_t;$/;"	t	typeref:enum:__anon6d9003760203
git_odb_backend_loose_options	my_project/libgit2/include/git2/odb_backend.h	/^} git_odb_backend_loose_options;$/;"	t	typeref:struct:__anon6d9003760308
git_odb_backend_malloc	my_project/libgit2/src/libgit2/odb.c	/^void *git_odb_backend_malloc(git_odb_backend *backend, size_t len)$/;"	f	typeref:typename:void *
git_odb_backend_one_pack	my_project/libgit2/src/libgit2/odb_pack.c	/^int git_odb_backend_one_pack($/;"	f	typeref:typename:int
git_odb_backend_pack	my_project/libgit2/src/libgit2/odb_pack.c	/^int git_odb_backend_pack($/;"	f	typeref:typename:int
git_odb_backend_pack_options	my_project/libgit2/include/git2/odb_backend.h	/^} git_odb_backend_pack_options;$/;"	t	typeref:struct:__anon6d9003760108
git_odb_cap_t	my_project/libgit2/src/libgit2/odb.h	/^} git_odb_cap_t;$/;"	t	typeref:enum:__anon3125c08a0203
git_odb_exists	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_exists(git_odb *db, const git_oid *id)$/;"	f	typeref:typename:int
git_odb_exists_ext	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_exists_ext(git_odb *db, const git_oid *id, unsigned int flags)$/;"	f	typeref:typename:int
git_odb_exists_prefix	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_exists_prefix($/;"	f	typeref:typename:int
git_odb_expand_id	my_project/libgit2/include/git2/odb.h	/^typedef struct git_odb_expand_id {$/;"	s
git_odb_expand_id	my_project/libgit2/include/git2/odb.h	/^} git_odb_expand_id;$/;"	t	typeref:struct:git_odb_expand_id
git_odb_expand_ids	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_expand_ids($/;"	f	typeref:typename:int
git_odb_foreach	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_foreach(git_odb *db, git_odb_foreach_cb cb, void *payload)$/;"	f	typeref:typename:int
git_odb_foreach_cb	my_project/libgit2/include/git2/odb.h	/^typedef int GIT_CALLBACK(git_odb_foreach_cb)(const git_oid *id, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_oid * id,void * payload)
git_odb_free	my_project/libgit2/src/libgit2/odb.c	/^void git_odb_free(git_odb *db)$/;"	f	typeref:typename:void
git_odb_get_backend	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_get_backend(git_odb_backend **out, git_odb *odb, size_t pos)$/;"	f	typeref:typename:int
git_odb_hash	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_hash($/;"	f	typeref:typename:int
git_odb_hashfile	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_hashfile($/;"	f	typeref:typename:int
git_odb_init_backend	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_init_backend(git_odb_backend *backend, unsigned int version)$/;"	f	typeref:typename:int
git_odb_lookup_flags_t	my_project/libgit2/include/git2/odb.h	/^} git_odb_lookup_flags_t;$/;"	t	typeref:enum:__anonc68fd3af0103
git_odb_new	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_new(git_odb **out)$/;"	f	typeref:typename:int
git_odb_new	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_new(git_odb **out, const git_odb_options *opts)$/;"	f	typeref:typename:int
git_odb_num_backends	my_project/libgit2/src/libgit2/odb.c	/^size_t git_odb_num_backends(git_odb *odb)$/;"	f	typeref:typename:size_t
git_odb_object	my_project/libgit2/include/git2/types.h	/^typedef struct git_odb_object git_odb_object;$/;"	t	typeref:struct:git_odb_object
git_odb_object	my_project/libgit2/src/libgit2/odb.h	/^struct git_odb_object {$/;"	s
git_odb_object__free	my_project/libgit2/src/libgit2/odb.c	/^void git_odb_object__free(void *object)$/;"	f	typeref:typename:void
git_odb_object_data	my_project/libgit2/src/libgit2/odb.c	/^const void *git_odb_object_data(git_odb_object *object)$/;"	f	typeref:typename:const void *
git_odb_object_dup	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_object_dup(git_odb_object **dest, git_odb_object *source)$/;"	f	typeref:typename:int
git_odb_object_free	my_project/libgit2/src/libgit2/odb.c	/^void git_odb_object_free(git_odb_object *object)$/;"	f	typeref:typename:void
git_odb_object_id	my_project/libgit2/src/libgit2/odb.c	/^const git_oid *git_odb_object_id(git_odb_object *object)$/;"	f	typeref:typename:const git_oid *
git_odb_object_size	my_project/libgit2/src/libgit2/odb.c	/^size_t git_odb_object_size(git_odb_object *object)$/;"	f	typeref:typename:size_t
git_odb_object_type	my_project/libgit2/src/libgit2/odb.c	/^git_object_t git_odb_object_type(git_odb_object *object)$/;"	f	typeref:typename:git_object_t
git_odb_open	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_open($/;"	f	typeref:typename:int
git_odb_open	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_open(git_odb **out, const char *objects_dir)$/;"	f	typeref:typename:int
git_odb_open_rstream	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_open_rstream($/;"	f	typeref:typename:int
git_odb_open_wstream	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_open_wstream($/;"	f	typeref:typename:int
git_odb_options	my_project/libgit2/include/git2/odb.h	/^} git_odb_options;$/;"	t	typeref:struct:__anonc68fd3af0208
git_odb_read	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_read(git_odb_object **out, git_odb *db, const git_oid *id)$/;"	f	typeref:typename:int
git_odb_read_header	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_read_header(size_t *len_p, git_object_t *type_p, git_odb *db, const git_oid *id)$/;"	f	typeref:typename:int
git_odb_read_prefix	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_read_prefix($/;"	f	typeref:typename:int
git_odb_refresh	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_refresh(git_odb *db)$/;"	f	typeref:typename:int
git_odb_set_commit_graph	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_set_commit_graph(git_odb *odb, git_commit_graph *cgraph)$/;"	f	typeref:typename:int
git_odb_stream	my_project/libgit2/include/git2/odb_backend.h	/^struct git_odb_stream {$/;"	s
git_odb_stream	my_project/libgit2/include/git2/types.h	/^typedef struct git_odb_stream git_odb_stream;$/;"	t	typeref:struct:git_odb_stream
git_odb_stream__invalid_length	my_project/libgit2/src/libgit2/odb.c	/^static int git_odb_stream__invalid_length($/;"	f	typeref:typename:int	file:
git_odb_stream_finalize_write	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_stream_finalize_write(git_oid *out, git_odb_stream *stream)$/;"	f	typeref:typename:int
git_odb_stream_free	my_project/libgit2/src/libgit2/odb.c	/^void git_odb_stream_free(git_odb_stream *stream)$/;"	f	typeref:typename:void
git_odb_stream_read	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_stream_read(git_odb_stream *stream, char *buffer, size_t len)$/;"	f	typeref:typename:int
git_odb_stream_t	my_project/libgit2/include/git2/odb_backend.h	/^} git_odb_stream_t;$/;"	t	typeref:enum:__anon6d9003760403
git_odb_stream_write	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_stream_write(git_odb_stream *stream, const char *buffer, size_t len)$/;"	f	typeref:typename:int
git_odb_write	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_write($/;"	f	typeref:typename:int
git_odb_write_multi_pack_index	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_write_multi_pack_index(git_odb *db)$/;"	f	typeref:typename:int
git_odb_write_pack	my_project/libgit2/src/libgit2/odb.c	/^int git_odb_write_pack(struct git_odb_writepack **out, git_odb *db, git_indexer_progress_cb prog/;"	f	typeref:typename:int
git_odb_writepack	my_project/libgit2/include/git2/odb_backend.h	/^struct git_odb_writepack {$/;"	s
git_odb_writepack	my_project/libgit2/include/git2/types.h	/^typedef struct git_odb_writepack git_odb_writepack;$/;"	t	typeref:struct:git_odb_writepack
git_off_t	my_project/libgit2/include/git2/types.h	/^typedef __int64 git_off_t;$/;"	t	typeref:typename:__int64
git_offmap	my_project/libgit2/src/libgit2/offmap.h	/^typedef struct kh_off_s git_offmap;$/;"	t	typeref:struct:kh_off_s
git_offmap_clear	my_project/libgit2/src/libgit2/offmap.c	/^void git_offmap_clear(git_offmap *map)$/;"	f	typeref:typename:void
git_offmap_delete	my_project/libgit2/src/libgit2/offmap.c	/^int git_offmap_delete(git_offmap *map, const off64_t key)$/;"	f	typeref:typename:int
git_offmap_exists	my_project/libgit2/src/libgit2/offmap.c	/^int git_offmap_exists(git_offmap *map, const off64_t key)$/;"	f	typeref:typename:int
git_offmap_foreach	my_project/libgit2/src/libgit2/offmap.h	/^#define git_offmap_foreach(/;"	d
git_offmap_foreach_value	my_project/libgit2/src/libgit2/offmap.h	/^#define git_offmap_foreach_value(/;"	d
git_offmap_free	my_project/libgit2/src/libgit2/offmap.c	/^void git_offmap_free(git_offmap *map)$/;"	f	typeref:typename:void
git_offmap_get	my_project/libgit2/src/libgit2/offmap.c	/^void *git_offmap_get(git_offmap *map, const off64_t key)$/;"	f	typeref:typename:void *
git_offmap_iterate	my_project/libgit2/src/libgit2/offmap.c	/^int git_offmap_iterate(void **value, git_offmap *map, size_t *iter, off64_t *key)$/;"	f	typeref:typename:int
git_offmap_set	my_project/libgit2/src/libgit2/offmap.c	/^int git_offmap_set(git_offmap *map, const off64_t key, void *value)$/;"	f	typeref:typename:int
git_offmap_size	my_project/libgit2/src/libgit2/offmap.c	/^size_t git_offmap_size(git_offmap *map)$/;"	f	typeref:typename:size_t
git_oid	my_project/libgit2/include/git2/oid.h	/^typedef struct git_oid {$/;"	s
git_oid	my_project/libgit2/include/git2/oid.h	/^} git_oid;$/;"	t	typeref:struct:git_oid
git_oid__cmp	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(int) git_oid__cmp(const git_oid *a, const git_oid *b)$/;"	f	typeref:typename:int
git_oid__cpy_prefix	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(void) git_oid__cpy_prefix($/;"	f	typeref:typename:void
git_oid__empty_blob_sha1	my_project/libgit2/src/libgit2/oid.c	/^const git_oid git_oid__empty_blob_sha1 =$/;"	v	typeref:typename:const git_oid
git_oid__empty_tree_sha1	my_project/libgit2/src/libgit2/oid.c	/^const git_oid git_oid__empty_tree_sha1 =$/;"	v	typeref:typename:const git_oid
git_oid__fromraw	my_project/libgit2/src/libgit2/oid.c	/^int git_oid__fromraw(git_oid *out, const unsigned char *raw, git_oid_t type)$/;"	f	typeref:typename:int
git_oid__fromstr	my_project/libgit2/src/libgit2/oid.c	/^int git_oid__fromstr(git_oid *out, const char *str, git_oid_t type)$/;"	f	typeref:typename:int
git_oid__fromstrn	my_project/libgit2/src/libgit2/oid.c	/^int git_oid__fromstrn($/;"	f	typeref:typename:int
git_oid__fromstrp	my_project/libgit2/src/libgit2/oid.c	/^int git_oid__fromstrp(git_oid *out, const char *str, git_oid_t type)$/;"	f	typeref:typename:int
git_oid__is_hexstr	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(bool) git_oid__is_hexstr(const char *str, git_oid_t type)$/;"	f	typeref:typename:bool
git_oid_algorithm	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(git_hash_algorithm_t) git_oid_algorithm(git_oid_t type)$/;"	f	typeref:typename:git_hash_algorithm_t
git_oid_allocfmt	my_project/libgit2/src/libgit2/oid.c	/^char *git_oid_allocfmt(const git_oid *oid)$/;"	f	typeref:typename:char *
git_oid_clear	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(void) git_oid_clear(git_oid *out, git_oid_t type)$/;"	f	typeref:typename:void
git_oid_cmp	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_cmp(const git_oid *a, const git_oid *b)$/;"	f	typeref:typename:int
git_oid_cpy	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_cpy(git_oid *out, const git_oid *src)$/;"	f	typeref:typename:int
git_oid_equal	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_equal(const git_oid *a, const git_oid *b)$/;"	f	typeref:typename:int
git_oid_fmt	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_fmt(char *str, const git_oid *oid)$/;"	f	typeref:typename:int
git_oid_fmt_substr	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(void) git_oid_fmt_substr($/;"	f	typeref:typename:void
git_oid_fromraw	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_fromraw(git_oid *out, const unsigned char *raw)$/;"	f	typeref:typename:int
git_oid_fromraw	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_fromraw(git_oid *out, const unsigned char *raw, git_oid_t type)$/;"	f	typeref:typename:int
git_oid_fromstr	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_fromstr(git_oid *out, const char *str)$/;"	f	typeref:typename:int
git_oid_fromstr	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_fromstr(git_oid *out, const char *str, git_oid_t type)$/;"	f	typeref:typename:int
git_oid_fromstrn	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_fromstrn($/;"	f	typeref:typename:int
git_oid_fromstrp	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_fromstrp(git_oid *out, const char *str)$/;"	f	typeref:typename:int
git_oid_fromstrp	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_fromstrp(git_oid *out, const char *str, git_oid_t type)$/;"	f	typeref:typename:int
git_oid_global_init	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_global_init(void)$/;"	f	typeref:typename:int
git_oid_hexsize	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(size_t) git_oid_hexsize(git_oid_t type)$/;"	f	typeref:typename:size_t
git_oid_is_zero	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_is_zero(const git_oid *oid_a)$/;"	f	typeref:typename:int
git_oid_iszero	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_iszero(const git_oid *oid_a)$/;"	f	typeref:typename:int
git_oid_ncmp	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_ncmp(const git_oid *oid_a, const git_oid *oid_b, size_t len)$/;"	f	typeref:typename:int
git_oid_nfmt	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_nfmt(char *str, size_t n, const git_oid *oid)$/;"	f	typeref:typename:int
git_oid_pathfmt	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_pathfmt(char *str, const git_oid *oid)$/;"	f	typeref:typename:int
git_oid_raw_cmp	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(int) git_oid_raw_cmp($/;"	f	typeref:typename:int
git_oid_raw_cpy	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(int) git_oid_raw_cpy($/;"	f	typeref:typename:int
git_oid_raw_ncmp	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(int) git_oid_raw_ncmp($/;"	f	typeref:typename:int
git_oid_shorten	my_project/libgit2/include/git2/oid.h	/^typedef struct git_oid_shorten git_oid_shorten;$/;"	t	typeref:struct:git_oid_shorten
git_oid_shorten	my_project/libgit2/src/libgit2/oid.c	/^struct git_oid_shorten {$/;"	s	file:
git_oid_shorten_add	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_shorten_add(git_oid_shorten *os, const char *text_oid)$/;"	f	typeref:typename:int
git_oid_shorten_free	my_project/libgit2/src/libgit2/oid.c	/^void git_oid_shorten_free(git_oid_shorten *os)$/;"	f	typeref:typename:void
git_oid_shorten_new	my_project/libgit2/src/libgit2/oid.c	/^git_oid_shorten *git_oid_shorten_new(size_t min_length)$/;"	f	typeref:typename:git_oid_shorten *
git_oid_size	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(size_t) git_oid_size(git_oid_t type)$/;"	f	typeref:typename:size_t
git_oid_strcmp	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_strcmp(const git_oid *oid_a, const char *str)$/;"	f	typeref:typename:int
git_oid_streq	my_project/libgit2/src/libgit2/oid.c	/^int git_oid_streq(const git_oid *oid_a, const char *str)$/;"	f	typeref:typename:int
git_oid_t	my_project/libgit2/include/git2/oid.h	/^} git_oid_t;$/;"	t	typeref:enum:__anonc6929a160103
git_oid_tostr	my_project/libgit2/src/libgit2/oid.c	/^char *git_oid_tostr(char *out, size_t n, const git_oid *oid)$/;"	f	typeref:typename:char *
git_oid_tostr_s	my_project/libgit2/src/libgit2/oid.c	/^char *git_oid_tostr_s(const git_oid *oid)$/;"	f	typeref:typename:char *
git_oid_type	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(git_oid_t) git_oid_type(const git_oid *oid)$/;"	f	typeref:typename:git_oid_t
git_oid_type_fromstr	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(git_oid_t) git_oid_type_fromstr(const char *name)$/;"	f	typeref:typename:git_oid_t
git_oid_type_fromstrn	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(git_oid_t) git_oid_type_fromstrn(const char *name, size_t len)$/;"	f	typeref:typename:git_oid_t
git_oid_type_name	my_project/libgit2/src/libgit2/oid.h	/^GIT_INLINE(const char *) git_oid_type_name(git_oid_t type)$/;"	f	typeref:typename:const char *
git_oidarray	my_project/libgit2/include/git2/oidarray.h	/^typedef struct git_oidarray {$/;"	s
git_oidarray	my_project/libgit2/include/git2/oidarray.h	/^} git_oidarray;$/;"	t	typeref:struct:git_oidarray
git_oidarray__add	my_project/libgit2/src/libgit2/oidarray.c	/^int git_oidarray__add(git_array_oid_t *arr, git_oid *id)$/;"	f	typeref:typename:int
git_oidarray__from_array	my_project/libgit2/src/libgit2/oidarray.c	/^void git_oidarray__from_array(git_oidarray *out, const git_array_oid_t *array)$/;"	f	typeref:typename:void
git_oidarray__remove	my_project/libgit2/src/libgit2/oidarray.c	/^bool git_oidarray__remove(git_array_oid_t *arr, git_oid *id)$/;"	f	typeref:typename:bool
git_oidarray__reverse	my_project/libgit2/src/libgit2/oidarray.c	/^void git_oidarray__reverse(git_oidarray *arr)$/;"	f	typeref:typename:void
git_oidarray__to_array	my_project/libgit2/src/libgit2/oidarray.c	/^void git_oidarray__to_array(git_array_oid_t *out, const git_oidarray *array)$/;"	f	typeref:typename:void
git_oidarray_dispose	my_project/libgit2/src/libgit2/oidarray.c	/^void git_oidarray_dispose(git_oidarray *arr)$/;"	f	typeref:typename:void
git_oidarray_free	my_project/libgit2/src/libgit2/oidarray.c	/^void git_oidarray_free(git_oidarray *arr)$/;"	f	typeref:typename:void
git_oidmap	my_project/libgit2/src/libgit2/oidmap.h	/^typedef struct kh_oid_s git_oidmap;$/;"	t	typeref:struct:kh_oid_s
git_oidmap_clear	my_project/libgit2/src/libgit2/oidmap.c	/^void git_oidmap_clear(git_oidmap *map)$/;"	f	typeref:typename:void
git_oidmap_delete	my_project/libgit2/src/libgit2/oidmap.c	/^int git_oidmap_delete(git_oidmap *map, const git_oid *key)$/;"	f	typeref:typename:int
git_oidmap_exists	my_project/libgit2/src/libgit2/oidmap.c	/^int git_oidmap_exists(git_oidmap *map, const git_oid *key)$/;"	f	typeref:typename:int
git_oidmap_foreach_value	my_project/libgit2/src/libgit2/oidmap.h	/^#define git_oidmap_foreach_value(/;"	d
git_oidmap_free	my_project/libgit2/src/libgit2/oidmap.c	/^void git_oidmap_free(git_oidmap *map)$/;"	f	typeref:typename:void
git_oidmap_get	my_project/libgit2/src/libgit2/oidmap.c	/^void *git_oidmap_get(git_oidmap *map, const git_oid *key)$/;"	f	typeref:typename:void *
git_oidmap_iterate	my_project/libgit2/src/libgit2/oidmap.c	/^int git_oidmap_iterate(void **value, git_oidmap *map, size_t *iter, const git_oid **key)$/;"	f	typeref:typename:int
git_oidmap_new	my_project/libgit2/src/libgit2/oidmap.c	/^int git_oidmap_new(git_oidmap **out)$/;"	f	typeref:typename:__KHASH_IMPL (oid,static kh_inline,const git_oid *,void *,1,git_oidmap_hash,git_oid_equal)int
git_oidmap_set	my_project/libgit2/src/libgit2/oidmap.c	/^int git_oidmap_set(git_oidmap *map, const git_oid *key, void *value)$/;"	f	typeref:typename:int
git_oidmap_size	my_project/libgit2/src/libgit2/oidmap.c	/^size_t git_oidmap_size(git_oidmap *map)$/;"	f	typeref:typename:size_t
git_openssl__set_cert_location	my_project/libgit2/src/libgit2/streams/openssl.c	/^int git_openssl__set_cert_location(const char *file, const char *path)$/;"	f	typeref:typename:int
git_openssl_free	my_project/libgit2/src/libgit2/streams/openssl.c	/^static void git_openssl_free(void *mem)$/;"	f	typeref:typename:void	file:
git_openssl_free	my_project/libgit2/src/libgit2/streams/openssl.c	/^static void git_openssl_free(void *mem, const char *file, int line)$/;"	f	typeref:typename:void	file:
git_openssl_malloc	my_project/libgit2/src/libgit2/streams/openssl.c	/^static void *git_openssl_malloc(size_t bytes)$/;"	f	typeref:typename:void *	file:
git_openssl_malloc	my_project/libgit2/src/libgit2/streams/openssl.c	/^static void *git_openssl_malloc(size_t bytes, const char *file, int line)$/;"	f	typeref:typename:void *	file:
git_openssl_realloc	my_project/libgit2/src/libgit2/streams/openssl.c	/^static void *git_openssl_realloc(void *mem, size_t size)$/;"	f	typeref:typename:void *	file:
git_openssl_realloc	my_project/libgit2/src/libgit2/streams/openssl.c	/^static void *git_openssl_realloc(void *mem, size_t size, const char *file, int line)$/;"	f	typeref:typename:void *	file:
git_openssl_set_locking	my_project/libgit2/src/libgit2/streams/openssl.c	/^int git_openssl_set_locking(void)$/;"	f	typeref:typename:int
git_openssl_set_locking	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^int git_openssl_set_locking(void)$/;"	f	typeref:typename:int
git_openssl_stream_dynamic_init	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int git_openssl_stream_dynamic_init(void)$/;"	f	typeref:typename:int
git_openssl_stream_global_init	my_project/libgit2/src/libgit2/streams/openssl.c	/^int git_openssl_stream_global_init(void)$/;"	f	typeref:typename:int
git_openssl_stream_new	my_project/libgit2/src/libgit2/streams/openssl.c	/^int git_openssl_stream_new(git_stream **out, const char *host, const char *port)$/;"	f	typeref:typename:int
git_openssl_stream_wrap	my_project/libgit2/src/libgit2/streams/openssl.c	/^int git_openssl_stream_wrap(git_stream **out, git_stream *in, const char *host)$/;"	f	typeref:typename:int
git_otype	my_project/libgit2/include/git2/deprecated.h	/^#define git_otype /;"	d
git_pack__lookup_id	my_project/libgit2/src/libgit2/pack.c	/^int git_pack__lookup_id($/;"	f	typeref:typename:int
git_pack_cache	my_project/libgit2/src/libgit2/pack.h	/^} git_pack_cache;$/;"	t	typeref:struct:__anon57fe39b40108
git_pack_cache_entry	my_project/libgit2/src/libgit2/pack.h	/^typedef struct git_pack_cache_entry {$/;"	s
git_pack_cache_entry	my_project/libgit2/src/libgit2/pack.h	/^} git_pack_cache_entry;$/;"	t	typeref:struct:git_pack_cache_entry
git_pack_entry	my_project/libgit2/src/libgit2/pack.h	/^struct git_pack_entry {$/;"	s
git_pack_entry_find	my_project/libgit2/src/libgit2/pack.c	/^int git_pack_entry_find($/;"	f	typeref:typename:int
git_pack_file	my_project/libgit2/src/libgit2/pack.h	/^struct git_pack_file {$/;"	s
git_pack_foreach_entry	my_project/libgit2/src/libgit2/pack.c	/^int git_pack_foreach_entry($/;"	f	typeref:typename:int
git_pack_foreach_entry_offset	my_project/libgit2/src/libgit2/pack.c	/^int git_pack_foreach_entry_offset($/;"	f	typeref:typename:int
git_pack_foreach_entry_offset_cb	my_project/libgit2/src/libgit2/pack.h	/^typedef int git_pack_foreach_entry_offset_cb($/;"	t	typeref:typename:int ()(const git_oid * id,off64_t offset,void * payload)
git_pack_header	my_project/libgit2/src/libgit2/pack.h	/^struct git_pack_header {$/;"	s
git_pack_idx_header	my_project/libgit2/src/libgit2/pack.h	/^struct git_pack_idx_header {$/;"	s
git_packbuilder	my_project/libgit2/include/git2/types.h	/^typedef struct git_packbuilder git_packbuilder;$/;"	t	typeref:struct:git_packbuilder
git_packbuilder	my_project/libgit2/src/libgit2/pack-objects.h	/^struct git_packbuilder {$/;"	s
git_packbuilder__cache_lock	my_project/libgit2/src/libgit2/pack-objects.c	/^#define git_packbuilder__cache_lock(/;"	d	file:
git_packbuilder__cache_unlock	my_project/libgit2/src/libgit2/pack-objects.c	/^#define git_packbuilder__cache_unlock(/;"	d	file:
git_packbuilder__prepare	my_project/libgit2/src/libgit2/pack-objects.c	/^int git_packbuilder__prepare(git_packbuilder *pb)$/;"	f	typeref:typename:int
git_packbuilder__progress_lock	my_project/libgit2/src/libgit2/pack-objects.c	/^#define git_packbuilder__progress_lock(/;"	d	file:
git_packbuilder__progress_unlock	my_project/libgit2/src/libgit2/pack-objects.c	/^#define git_packbuilder__progress_unlock(/;"	d	file:
git_packbuilder__write_buf	my_project/libgit2/src/libgit2/pack-objects.c	/^int git_packbuilder__write_buf(git_str *buf, git_packbuilder *pb)$/;"	f	typeref:typename:int
git_packbuilder_foreach	my_project/libgit2/src/libgit2/pack-objects.c	/^int git_packbuilder_foreach(git_packbuilder *pb, int (*cb)(void *buf, size_t size, void *payload/;"	f	typeref:typename:int
git_packbuilder_foreach_cb	my_project/libgit2/include/git2/pack.h	/^typedef int GIT_CALLBACK(git_packbuilder_foreach_cb)(void *buf, size_t size, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(void * buf,size_t size,void * payload)
git_packbuilder_free	my_project/libgit2/src/libgit2/pack-objects.c	/^void git_packbuilder_free(git_packbuilder *pb)$/;"	f	typeref:typename:void
git_packbuilder_hash	my_project/libgit2/src/libgit2/pack-objects.c	/^const git_oid *git_packbuilder_hash(git_packbuilder *pb)$/;"	f	typeref:typename:const git_oid *
git_packbuilder_insert	my_project/libgit2/src/libgit2/pack-objects.c	/^int git_packbuilder_insert(git_packbuilder *pb, const git_oid *oid,$/;"	f	typeref:typename:int
git_packbuilder_insert_commit	my_project/libgit2/src/libgit2/pack-objects.c	/^int git_packbuilder_insert_commit(git_packbuilder *pb, const git_oid *oid)$/;"	f	typeref:typename:int
git_packbuilder_insert_recur	my_project/libgit2/src/libgit2/pack-objects.c	/^int git_packbuilder_insert_recur(git_packbuilder *pb, const git_oid *id, const char *name)$/;"	f	typeref:typename:int
git_packbuilder_insert_tree	my_project/libgit2/src/libgit2/pack-objects.c	/^int git_packbuilder_insert_tree(git_packbuilder *pb, const git_oid *oid)$/;"	f	typeref:typename:int
git_packbuilder_insert_walk	my_project/libgit2/src/libgit2/pack-objects.c	/^int git_packbuilder_insert_walk(git_packbuilder *pb, git_revwalk *walk)$/;"	f	typeref:typename:int
git_packbuilder_name	my_project/libgit2/src/libgit2/pack-objects.c	/^const char *git_packbuilder_name(git_packbuilder *pb)$/;"	f	typeref:typename:const char *
git_packbuilder_new	my_project/libgit2/src/libgit2/pack-objects.c	/^int git_packbuilder_new(git_packbuilder **out, git_repository *repo)$/;"	f	typeref:typename:int
git_packbuilder_object_count	my_project/libgit2/src/libgit2/pack-objects.c	/^size_t git_packbuilder_object_count(git_packbuilder *pb)$/;"	f	typeref:typename:size_t
git_packbuilder_progress	my_project/libgit2/include/git2/pack.h	/^typedef int GIT_CALLBACK(git_packbuilder_progress)($/;"	t	typeref:typename:int GIT_CALLBACK ()(int stage,uint32_t current,uint32_t total,void * payload)
git_packbuilder_set_callbacks	my_project/libgit2/src/libgit2/pack-objects.c	/^int git_packbuilder_set_callbacks(git_packbuilder *pb, git_packbuilder_progress progress_cb, voi/;"	f	typeref:typename:int
git_packbuilder_set_threads	my_project/libgit2/src/libgit2/pack-objects.c	/^unsigned int git_packbuilder_set_threads(git_packbuilder *pb, unsigned int n)$/;"	f	typeref:typename:unsigned int
git_packbuilder_stage_t	my_project/libgit2/include/git2/pack.h	/^} git_packbuilder_stage_t;$/;"	t	typeref:enum:__anon9aaab1790103
git_packbuilder_write	my_project/libgit2/src/libgit2/pack-objects.c	/^int git_packbuilder_write($/;"	f	typeref:typename:int
git_packbuilder_write_buf	my_project/libgit2/src/libgit2/pack-objects.c	/^int git_packbuilder_write_buf(git_buf *buf, git_packbuilder *pb)$/;"	f	typeref:typename:int
git_packbuilder_written	my_project/libgit2/src/libgit2/pack-objects.c	/^size_t git_packbuilder_written(git_packbuilder *pb)$/;"	f	typeref:typename:size_t
git_packfile__name	my_project/libgit2/src/libgit2/pack.c	/^int git_packfile__name(char **out, const char *path)$/;"	f	typeref:typename:int
git_packfile__object_header	my_project/libgit2/src/libgit2/pack.c	/^int git_packfile__object_header(size_t *out, unsigned char *hdr, size_t size, git_object_t type)$/;"	f	typeref:typename:int
git_packfile_alloc	my_project/libgit2/src/libgit2/pack.c	/^int git_packfile_alloc($/;"	f	typeref:typename:int
git_packfile_free	my_project/libgit2/src/libgit2/pack.c	/^void git_packfile_free(struct git_pack_file *p, bool unlink_packfile)$/;"	f	typeref:typename:void
git_packfile_resolve_header	my_project/libgit2/src/libgit2/pack.c	/^int git_packfile_resolve_header($/;"	f	typeref:typename:int
git_packfile_stream	my_project/libgit2/src/libgit2/pack.h	/^typedef struct git_packfile_stream {$/;"	s
git_packfile_stream	my_project/libgit2/src/libgit2/pack.h	/^} git_packfile_stream;$/;"	t	typeref:struct:git_packfile_stream
git_packfile_stream_dispose	my_project/libgit2/src/libgit2/pack.c	/^void git_packfile_stream_dispose(git_packfile_stream *obj)$/;"	f	typeref:typename:void
git_packfile_stream_open	my_project/libgit2/src/libgit2/pack.c	/^int git_packfile_stream_open(git_packfile_stream *obj, struct git_pack_file *p, off64_t curpos)$/;"	f	typeref:typename:int
git_packfile_stream_read	my_project/libgit2/src/libgit2/pack.c	/^ssize_t git_packfile_stream_read(git_packfile_stream *obj, void *buffer, size_t len)$/;"	f	typeref:typename:ssize_t
git_packfile_unpack	my_project/libgit2/src/libgit2/pack.c	/^int git_packfile_unpack($/;"	f	typeref:typename:int
git_packfile_unpack_header	my_project/libgit2/src/libgit2/pack.c	/^int git_packfile_unpack_header($/;"	f	typeref:typename:int
git_parse_advance_chars	my_project/libgit2/src/libgit2/parse.c	/^void git_parse_advance_chars(git_parse_ctx *ctx, size_t char_cnt)$/;"	f	typeref:typename:void
git_parse_advance_digit	my_project/libgit2/src/libgit2/parse.c	/^int git_parse_advance_digit(int64_t *out, git_parse_ctx *ctx, int base)$/;"	f	typeref:typename:int
git_parse_advance_expected	my_project/libgit2/src/libgit2/parse.c	/^int git_parse_advance_expected($/;"	f	typeref:typename:int
git_parse_advance_expected_str	my_project/libgit2/src/libgit2/parse.h	/^#define git_parse_advance_expected_str(/;"	d
git_parse_advance_line	my_project/libgit2/src/libgit2/parse.c	/^void git_parse_advance_line(git_parse_ctx *ctx)$/;"	f	typeref:typename:void
git_parse_advance_nl	my_project/libgit2/src/libgit2/parse.c	/^int git_parse_advance_nl(git_parse_ctx *ctx)$/;"	f	typeref:typename:int
git_parse_advance_oid	my_project/libgit2/src/libgit2/parse.c	/^int git_parse_advance_oid(git_oid *out, git_parse_ctx *ctx, git_oid_t oid_type)$/;"	f	typeref:typename:int
git_parse_advance_ws	my_project/libgit2/src/libgit2/parse.c	/^int git_parse_advance_ws(git_parse_ctx *ctx)$/;"	f	typeref:typename:int
git_parse_ctx	my_project/libgit2/src/libgit2/parse.h	/^} git_parse_ctx;$/;"	t	typeref:struct:__anon58da25b00108
git_parse_ctx_clear	my_project/libgit2/src/libgit2/parse.c	/^void git_parse_ctx_clear(git_parse_ctx *ctx)$/;"	f	typeref:typename:void
git_parse_ctx_contains	my_project/libgit2/src/libgit2/parse.h	/^GIT_INLINE(bool) git_parse_ctx_contains($/;"	f	typeref:typename:bool
git_parse_ctx_contains_s	my_project/libgit2/src/libgit2/parse.h	/^#define git_parse_ctx_contains_s(/;"	d
git_parse_ctx_init	my_project/libgit2/src/libgit2/parse.c	/^int git_parse_ctx_init(git_parse_ctx *ctx, const char *content, size_t content_len)$/;"	f	typeref:typename:int
git_parse_err	my_project/libgit2/src/libgit2/patch_parse.c	/^static int git_parse_err(const char *fmt, ...)$/;"	f	typeref:typename:int	file:
git_parse_peek	my_project/libgit2/src/libgit2/parse.c	/^int git_parse_peek(char *out, git_parse_ctx *ctx, int flags)$/;"	f	typeref:typename:int
git_patch	my_project/libgit2/include/git2/patch.h	/^typedef struct git_patch git_patch;$/;"	t	typeref:struct:git_patch
git_patch	my_project/libgit2/src/libgit2/patch.h	/^struct git_patch {$/;"	s
git_patch__free	my_project/libgit2/src/libgit2/patch.c	/^static void git_patch__free(git_patch *patch)$/;"	f	typeref:typename:void	file:
git_patch__invoke_callbacks	my_project/libgit2/src/libgit2/patch.c	/^int git_patch__invoke_callbacks($/;"	f	typeref:typename:int
git_patch__to_buf	my_project/libgit2/src/libgit2/diff_print.c	/^int git_patch__to_buf(git_str *out, git_patch *patch)$/;"	f	typeref:typename:int
git_patch_free	my_project/libgit2/src/libgit2/patch.c	/^void git_patch_free(git_patch *patch)$/;"	f	typeref:typename:void
git_patch_from_blob_and_buffer	my_project/libgit2/src/libgit2/patch_generate.c	/^int git_patch_from_blob_and_buffer($/;"	f	typeref:typename:int
git_patch_from_blobs	my_project/libgit2/src/libgit2/patch_generate.c	/^int git_patch_from_blobs($/;"	f	typeref:typename:int
git_patch_from_buffer	my_project/libgit2/src/libgit2/patch_parse.c	/^int git_patch_from_buffer($/;"	f	typeref:typename:int
git_patch_from_buffers	my_project/libgit2/src/libgit2/patch_generate.c	/^int git_patch_from_buffers($/;"	f	typeref:typename:int
git_patch_from_diff	my_project/libgit2/src/libgit2/patch.c	/^int git_patch_from_diff(git_patch **out, git_diff *diff, size_t idx)$/;"	f	typeref:typename:int
git_patch_generated	my_project/libgit2/src/libgit2/patch_generate.h	/^struct git_patch_generated {$/;"	s
git_patch_generated	my_project/libgit2/src/libgit2/patch_generate.h	/^typedef struct git_patch_generated git_patch_generated;$/;"	t	typeref:struct:git_patch_generated
git_patch_generated_driver	my_project/libgit2/src/libgit2/patch_generate.c	/^git_diff_driver *git_patch_generated_driver(git_patch_generated *patch)$/;"	f	typeref:typename:git_diff_driver *
git_patch_generated_from_diff	my_project/libgit2/src/libgit2/patch_generate.c	/^int git_patch_generated_from_diff($/;"	f	typeref:typename:int
git_patch_generated_new_data	my_project/libgit2/src/libgit2/patch_generate.c	/^int git_patch_generated_new_data($/;"	f	typeref:typename:int
git_patch_generated_old_data	my_project/libgit2/src/libgit2/patch_generate.c	/^int git_patch_generated_old_data($/;"	f	typeref:typename:int
git_patch_generated_output	my_project/libgit2/src/libgit2/patch_generate.h	/^struct git_patch_generated_output {$/;"	s
git_patch_generated_output	my_project/libgit2/src/libgit2/patch_generate.h	/^typedef struct git_patch_generated_output git_patch_generated_output;$/;"	t	typeref:struct:git_patch_generated_output
git_patch_get_delta	my_project/libgit2/src/libgit2/patch.c	/^const git_diff_delta *git_patch_get_delta(const git_patch *patch)$/;"	f	typeref:typename:const git_diff_delta *
git_patch_get_hunk	my_project/libgit2/src/libgit2/patch.c	/^int git_patch_get_hunk($/;"	f	typeref:typename:int
git_patch_get_line_in_hunk	my_project/libgit2/src/libgit2/patch.c	/^int git_patch_get_line_in_hunk($/;"	f	typeref:typename:int
git_patch_hunk	my_project/libgit2/src/libgit2/patch.h	/^typedef struct git_patch_hunk {$/;"	s
git_patch_hunk	my_project/libgit2/src/libgit2/patch.h	/^} git_patch_hunk;$/;"	t	typeref:struct:git_patch_hunk
git_patch_hunk_cb	my_project/libgit2/src/libgit2/patch_generate.c	/^static int git_patch_hunk_cb($/;"	f	typeref:typename:int	file:
git_patch_line_stats	my_project/libgit2/src/libgit2/patch.c	/^int git_patch_line_stats($/;"	f	typeref:typename:int
git_patch_num_hunks	my_project/libgit2/src/libgit2/patch.c	/^size_t git_patch_num_hunks(const git_patch *patch)$/;"	f	typeref:typename:size_t
git_patch_num_lines_in_hunk	my_project/libgit2/src/libgit2/patch.c	/^int git_patch_num_lines_in_hunk(const git_patch *patch, size_t hunk_idx)$/;"	f	typeref:typename:int
git_patch_options	my_project/libgit2/src/libgit2/patch.h	/^} git_patch_options;$/;"	t	typeref:struct:__anon58f59d650108
git_patch_owner	my_project/libgit2/src/libgit2/patch.c	/^git_repository *git_patch_owner(const git_patch *patch)$/;"	f	typeref:typename:git_repository *
git_patch_parse	my_project/libgit2/src/libgit2/patch_parse.c	/^int git_patch_parse($/;"	f	typeref:typename:int
git_patch_parse_ctx	my_project/libgit2/src/libgit2/patch_parse.h	/^} git_patch_parse_ctx;$/;"	t	typeref:struct:__anonddb10c3f0108
git_patch_parse_ctx_free	my_project/libgit2/src/libgit2/patch_parse.c	/^void git_patch_parse_ctx_free(git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:void
git_patch_parse_ctx_init	my_project/libgit2/src/libgit2/patch_parse.c	/^git_patch_parse_ctx *git_patch_parse_ctx_init($/;"	f	typeref:typename:git_patch_parse_ctx *
git_patch_parsed	my_project/libgit2/src/libgit2/patch_parse.c	/^} git_patch_parsed;$/;"	t	typeref:struct:__anonddb10c3a0108	file:
git_patch_parsed_from_diff	my_project/libgit2/src/libgit2/patch_parse.c	/^int git_patch_parsed_from_diff(git_patch **out, git_diff *d, size_t idx)$/;"	f	typeref:typename:int
git_patch_print	my_project/libgit2/src/libgit2/diff_print.c	/^int git_patch_print($/;"	f	typeref:typename:int
git_patch_size	my_project/libgit2/src/libgit2/patch.c	/^size_t git_patch_size($/;"	f	typeref:typename:size_t
git_patch_to_buf	my_project/libgit2/src/libgit2/diff_print.c	/^int git_patch_to_buf(git_buf *out, git_patch *patch)$/;"	f	typeref:typename:int
git_path_fs	my_project/libgit2/include/git2/sys/path.h	/^} git_path_fs;$/;"	t	typeref:enum:__anonb6214cf50203
git_path_gitfile	my_project/libgit2/include/git2/sys/path.h	/^} git_path_gitfile;$/;"	t	typeref:enum:__anonb6214cf50103
git_path_is_gitfile	my_project/libgit2/src/libgit2/path.c	/^extern int git_path_is_gitfile($/;"	f	typeref:typename:int
git_path_is_valid	my_project/libgit2/src/libgit2/path.h	/^GIT_INLINE(bool) git_path_is_valid($/;"	f	typeref:typename:bool
git_path_str_is_valid	my_project/libgit2/src/libgit2/path.c	/^bool git_path_str_is_valid($/;"	f	typeref:typename:bool
git_path_validate_length	my_project/libgit2/src/libgit2/path.h	/^GIT_INLINE(int) git_path_validate_length($/;"	f	typeref:typename:int
git_path_validate_str_length	my_project/libgit2/src/libgit2/path.h	/^GIT_INLINE(int) git_path_validate_str_length($/;"	f	typeref:typename:int
git_pathspec	my_project/libgit2/include/git2/pathspec.h	/^typedef struct git_pathspec git_pathspec;$/;"	t	typeref:struct:git_pathspec
git_pathspec	my_project/libgit2/src/libgit2/pathspec.h	/^struct git_pathspec {$/;"	s
git_pathspec__clear	my_project/libgit2/src/libgit2/pathspec.c	/^void git_pathspec__clear(git_pathspec *ps)$/;"	f	typeref:typename:void
git_pathspec__init	my_project/libgit2/src/libgit2/pathspec.c	/^int git_pathspec__init(git_pathspec *ps, const git_strarray *paths)$/;"	f	typeref:typename:int
git_pathspec__match	my_project/libgit2/src/libgit2/pathspec.c	/^bool git_pathspec__match($/;"	f	typeref:typename:bool
git_pathspec__match_at	my_project/libgit2/src/libgit2/pathspec.c	/^static int git_pathspec__match_at($/;"	f	typeref:typename:int	file:
git_pathspec__vfree	my_project/libgit2/src/libgit2/pathspec.c	/^void git_pathspec__vfree(git_vector *vspec)$/;"	f	typeref:typename:void
git_pathspec__vinit	my_project/libgit2/src/libgit2/pathspec.c	/^int git_pathspec__vinit($/;"	f	typeref:typename:int
git_pathspec_flag_t	my_project/libgit2/include/git2/pathspec.h	/^} git_pathspec_flag_t;$/;"	t	typeref:enum:__anond656f7d20103
git_pathspec_free	my_project/libgit2/src/libgit2/pathspec.c	/^void git_pathspec_free(git_pathspec *ps)$/;"	f	typeref:typename:void
git_pathspec_is_empty	my_project/libgit2/src/libgit2/pathspec.c	/^bool git_pathspec_is_empty(const git_strarray *pathspec)$/;"	f	typeref:typename:bool
git_pathspec_match_diff	my_project/libgit2/src/libgit2/pathspec.c	/^int git_pathspec_match_diff($/;"	f	typeref:typename:int
git_pathspec_match_index	my_project/libgit2/src/libgit2/pathspec.c	/^int git_pathspec_match_index($/;"	f	typeref:typename:int
git_pathspec_match_list	my_project/libgit2/include/git2/pathspec.h	/^typedef struct git_pathspec_match_list git_pathspec_match_list;$/;"	t	typeref:struct:git_pathspec_match_list
git_pathspec_match_list	my_project/libgit2/src/libgit2/pathspec.h	/^struct git_pathspec_match_list {$/;"	s
git_pathspec_match_list_diff_entry	my_project/libgit2/src/libgit2/pathspec.c	/^const git_diff_delta *git_pathspec_match_list_diff_entry($/;"	f	typeref:typename:const git_diff_delta *
git_pathspec_match_list_entry	my_project/libgit2/src/libgit2/pathspec.c	/^const char *git_pathspec_match_list_entry($/;"	f	typeref:typename:const char *
git_pathspec_match_list_entrycount	my_project/libgit2/src/libgit2/pathspec.c	/^size_t git_pathspec_match_list_entrycount($/;"	f	typeref:typename:size_t
git_pathspec_match_list_failed_entry	my_project/libgit2/src/libgit2/pathspec.c	/^const char * git_pathspec_match_list_failed_entry($/;"	f	typeref:typename:const char *
git_pathspec_match_list_failed_entrycount	my_project/libgit2/src/libgit2/pathspec.c	/^size_t git_pathspec_match_list_failed_entrycount($/;"	f	typeref:typename:size_t
git_pathspec_match_list_free	my_project/libgit2/src/libgit2/pathspec.c	/^void git_pathspec_match_list_free(git_pathspec_match_list *m)$/;"	f	typeref:typename:void
git_pathspec_match_tree	my_project/libgit2/src/libgit2/pathspec.c	/^int git_pathspec_match_tree($/;"	f	typeref:typename:int
git_pathspec_match_workdir	my_project/libgit2/src/libgit2/pathspec.c	/^int git_pathspec_match_workdir($/;"	f	typeref:typename:int
git_pathspec_matches_path	my_project/libgit2/src/libgit2/pathspec.c	/^int git_pathspec_matches_path($/;"	f	typeref:typename:int
git_pathspec_new	my_project/libgit2/src/libgit2/pathspec.c	/^int git_pathspec_new(git_pathspec **out, const git_strarray *pathspec)$/;"	f	typeref:typename:int
git_pathspec_prefix	my_project/libgit2/src/libgit2/pathspec.c	/^char *git_pathspec_prefix(const git_strarray *pathspec)$/;"	f	typeref:typename:char *
git_pathspec_string_array_t	my_project/libgit2/src/libgit2/pathspec.h	/^typedef git_array_t(char *) git_pathspec_string_array_t;$/;"	t
git_pkt	my_project/libgit2/src/libgit2/transports/smart.h	/^} git_pkt;$/;"	t	typeref:struct:__anonb9ceeb0b0208
git_pkt_ack	my_project/libgit2/src/libgit2/transports/smart.h	/^} git_pkt_ack;$/;"	t	typeref:struct:__anonb9ceeb0b0408
git_pkt_buffer_done	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^int git_pkt_buffer_done(git_str *buf)$/;"	f	typeref:typename:int
git_pkt_buffer_flush	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^int git_pkt_buffer_flush(git_str *buf)$/;"	f	typeref:typename:int
git_pkt_buffer_have	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^int git_pkt_buffer_have(git_oid *oid, git_str *buf)$/;"	f	typeref:typename:int
git_pkt_buffer_wants	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^int git_pkt_buffer_wants($/;"	f	typeref:typename:int
git_pkt_cmd	my_project/libgit2/src/libgit2/transports/smart.h	/^struct git_pkt_cmd {$/;"	s
git_pkt_comment	my_project/libgit2/src/libgit2/transports/smart.h	/^} git_pkt_comment;$/;"	t	typeref:struct:__anonb9ceeb0b0508
git_pkt_data	my_project/libgit2/src/libgit2/transports/smart.h	/^} git_pkt_data;$/;"	t	typeref:struct:__anonb9ceeb0b0608
git_pkt_err	my_project/libgit2/src/libgit2/transports/smart.h	/^} git_pkt_err;$/;"	t	typeref:struct:__anonb9ceeb0b0708
git_pkt_free	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^void git_pkt_free(git_pkt *pkt)$/;"	f	typeref:typename:void
git_pkt_ng	my_project/libgit2/src/libgit2/transports/smart.h	/^} git_pkt_ng;$/;"	t	typeref:struct:__anonb9ceeb0b0908
git_pkt_ok	my_project/libgit2/src/libgit2/transports/smart.h	/^} git_pkt_ok;$/;"	t	typeref:struct:__anonb9ceeb0b0808
git_pkt_parse_data	my_project/libgit2/src/libgit2/transports/smart.h	/^} git_pkt_parse_data;$/;"	t	typeref:struct:__anonb9ceeb0b0d08
git_pkt_parse_line	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^int git_pkt_parse_line($/;"	f	typeref:typename:int
git_pkt_progress	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef git_pkt_data git_pkt_progress;$/;"	t	typeref:typename:git_pkt_data
git_pkt_ref	my_project/libgit2/src/libgit2/transports/smart.h	/^} git_pkt_ref;$/;"	t	typeref:struct:__anonb9ceeb0b0308
git_pkt_shallow	my_project/libgit2/src/libgit2/transports/smart.h	/^} git_pkt_shallow;$/;"	t	typeref:struct:__anonb9ceeb0b0b08
git_pkt_type	my_project/libgit2/src/libgit2/transports/smart.h	/^} git_pkt_type;$/;"	t	typeref:enum:__anonb9ceeb0b0103
git_pkt_unpack	my_project/libgit2/src/libgit2/transports/smart.h	/^} git_pkt_unpack;$/;"	t	typeref:struct:__anonb9ceeb0b0a08
git_pobject	my_project/libgit2/src/libgit2/pack-objects.h	/^typedef struct git_pobject {$/;"	s
git_pobject	my_project/libgit2/src/libgit2/pack-objects.h	/^} git_pobject;$/;"	t	typeref:struct:git_pobject
git_pool	my_project/libgit2/src/util/pool.h	/^} git_pool;$/;"	t	typeref:struct:__anon2c1ced600108
git_pool	my_project/libgit2/src/util/pool.h	/^} git_pool;$/;"	t	typeref:struct:__anon2c1ced600208
git_pool__open_pages	my_project/libgit2/src/util/pool.c	/^uint32_t git_pool__open_pages(git_pool *pool)$/;"	f	typeref:typename:uint32_t
git_pool__ptr_cmp	my_project/libgit2/src/util/pool.c	/^static int git_pool__ptr_cmp(const void * a, const void * b)$/;"	f	typeref:typename:int	file:
git_pool__ptr_in_pool	my_project/libgit2/src/util/pool.c	/^bool git_pool__ptr_in_pool(git_pool *pool, void *ptr)$/;"	f	typeref:typename:bool
git_pool_clear	my_project/libgit2/src/util/pool.c	/^void git_pool_clear(git_pool *pool)$/;"	f	typeref:typename:void
git_pool_global_init	my_project/libgit2/src/util/pool.c	/^int git_pool_global_init(void)$/;"	f	typeref:typename:int
git_pool_init	my_project/libgit2/src/util/pool.c	/^int git_pool_init(git_pool *pool, size_t item_size)$/;"	f	typeref:typename:int
git_pool_malloc	my_project/libgit2/src/util/pool.c	/^void *git_pool_malloc(git_pool *pool, size_t items)$/;"	f	typeref:typename:void *
git_pool_mallocz	my_project/libgit2/src/util/pool.c	/^void *git_pool_mallocz(git_pool *pool, size_t items)$/;"	f	typeref:typename:void *
git_pool_page	my_project/libgit2/src/util/pool.c	/^struct git_pool_page {$/;"	s	file:
git_pool_page	my_project/libgit2/src/util/pool.h	/^typedef struct git_pool_page git_pool_page;$/;"	t	typeref:struct:git_pool_page
git_pool_strcat	my_project/libgit2/src/util/pool.c	/^char *git_pool_strcat(git_pool *pool, const char *a, const char *b)$/;"	f	typeref:typename:char *
git_pool_strdup	my_project/libgit2/src/util/pool.c	/^char *git_pool_strdup(git_pool *pool, const char *str)$/;"	f	typeref:typename:char *
git_pool_strdup_safe	my_project/libgit2/src/util/pool.c	/^char *git_pool_strdup_safe(git_pool *pool, const char *str)$/;"	f	typeref:typename:char *
git_pool_strndup	my_project/libgit2/src/util/pool.c	/^char *git_pool_strndup(git_pool *pool, const char *str, size_t n)$/;"	f	typeref:typename:char *
git_pool_swap	my_project/libgit2/src/util/pool.c	/^void git_pool_swap(git_pool *a, git_pool *b)$/;"	f	typeref:typename:void
git_pqueue	my_project/libgit2/src/util/pqueue.h	/^typedef git_vector git_pqueue;$/;"	t	typeref:typename:git_vector
git_pqueue_clear	my_project/libgit2/src/util/pqueue.h	/^#define git_pqueue_clear /;"	d
git_pqueue_free	my_project/libgit2/src/util/pqueue.h	/^#define git_pqueue_free /;"	d
git_pqueue_get	my_project/libgit2/src/util/pqueue.h	/^#define git_pqueue_get /;"	d
git_pqueue_init	my_project/libgit2/src/util/pqueue.c	/^int git_pqueue_init($/;"	f	typeref:typename:int
git_pqueue_insert	my_project/libgit2/src/util/pqueue.c	/^int git_pqueue_insert(git_pqueue *pq, void *item)$/;"	f	typeref:typename:int
git_pqueue_pop	my_project/libgit2/src/util/pqueue.c	/^void *git_pqueue_pop(git_pqueue *pq)$/;"	f	typeref:typename:void *
git_pqueue_reverse	my_project/libgit2/src/util/pqueue.h	/^#define git_pqueue_reverse /;"	d
git_pqueue_size	my_project/libgit2/src/util/pqueue.h	/^#define git_pqueue_size /;"	d
git_process	my_project/libgit2/src/util/process.h	/^typedef struct git_process git_process;$/;"	t	typeref:struct:git_process
git_process	my_project/libgit2/src/util/unix/process.c	/^struct git_process {$/;"	s	file:
git_process	my_project/libgit2/src/util/win32/process.c	/^struct git_process {$/;"	s	file:
git_process__cmdline	my_project/libgit2/src/util/win32/process.c	/^int git_process__cmdline($/;"	f	typeref:typename:int
git_process__is_cmdline_option	my_project/libgit2/src/util/process.h	/^GIT_INLINE(bool) git_process__is_cmdline_option(const char *str)$/;"	f	typeref:typename:bool
git_process_close	my_project/libgit2/src/util/unix/process.c	/^int git_process_close(git_process *process)$/;"	f	typeref:typename:int
git_process_close	my_project/libgit2/src/util/win32/process.c	/^int git_process_close(git_process *process)$/;"	f	typeref:typename:int
git_process_close_err	my_project/libgit2/src/util/unix/process.c	/^int git_process_close_err(git_process *process)$/;"	f	typeref:typename:int
git_process_close_err	my_project/libgit2/src/util/win32/process.c	/^int git_process_close_err(git_process *process)$/;"	f	typeref:typename:int
git_process_close_in	my_project/libgit2/src/util/unix/process.c	/^int git_process_close_in(git_process *process)$/;"	f	typeref:typename:int
git_process_close_in	my_project/libgit2/src/util/win32/process.c	/^int git_process_close_in(git_process *process)$/;"	f	typeref:typename:int
git_process_close_out	my_project/libgit2/src/util/unix/process.c	/^int git_process_close_out(git_process *process)$/;"	f	typeref:typename:int
git_process_close_out	my_project/libgit2/src/util/win32/process.c	/^int git_process_close_out(git_process *process)$/;"	f	typeref:typename:int
git_process_free	my_project/libgit2/src/util/unix/process.c	/^void git_process_free(git_process *process)$/;"	f	typeref:typename:void
git_process_free	my_project/libgit2/src/util/win32/process.c	/^void git_process_free(git_process *process)$/;"	f	typeref:typename:void
git_process_id	my_project/libgit2/src/util/unix/process.c	/^int git_process_id(p_pid_t *out, git_process *process)$/;"	f	typeref:typename:int
git_process_id	my_project/libgit2/src/util/win32/process.c	/^int git_process_id(p_pid_t *out, git_process *process)$/;"	f	typeref:typename:int
git_process_new	my_project/libgit2/src/util/unix/process.c	/^int git_process_new($/;"	f	typeref:typename:int
git_process_new	my_project/libgit2/src/util/win32/process.c	/^int git_process_new($/;"	f	typeref:typename:int
git_process_new_from_cmdline	my_project/libgit2/src/util/unix/process.c	/^extern int git_process_new_from_cmdline($/;"	f	typeref:typename:int
git_process_new_from_cmdline	my_project/libgit2/src/util/win32/process.c	/^int git_process_new_from_cmdline($/;"	f	typeref:typename:int
git_process_options	my_project/libgit2/src/util/process.h	/^} git_process_options;$/;"	t	typeref:struct:__anon3c78bdc50108
git_process_read	my_project/libgit2/src/util/unix/process.c	/^ssize_t git_process_read(git_process *process, void *buf, size_t count)$/;"	f	typeref:typename:ssize_t
git_process_read	my_project/libgit2/src/util/win32/process.c	/^ssize_t git_process_read(git_process *process, void *buf, size_t count)$/;"	f	typeref:typename:ssize_t
git_process_read_err	my_project/libgit2/src/util/unix/process.c	/^ssize_t git_process_read_err(git_process *process, void *buf, size_t count)$/;"	f	typeref:typename:ssize_t
git_process_result	my_project/libgit2/src/util/process.h	/^} git_process_result;$/;"	t	typeref:struct:__anon3c78bdc50308
git_process_result_msg	my_project/libgit2/src/util/unix/process.c	/^int git_process_result_msg(git_str *out, git_process_result *result)$/;"	f	typeref:typename:int
git_process_result_msg	my_project/libgit2/src/util/win32/process.c	/^int git_process_result_msg(git_str *out, git_process_result *result)$/;"	f	typeref:typename:int
git_process_result_status	my_project/libgit2/src/util/process.h	/^} git_process_result_status;$/;"	t	typeref:enum:__anon3c78bdc50203
git_process_start	my_project/libgit2/src/util/unix/process.c	/^int git_process_start(git_process *process)$/;"	f	typeref:typename:int
git_process_start	my_project/libgit2/src/util/win32/process.c	/^int git_process_start(git_process *process)$/;"	f	typeref:typename:int
git_process_wait	my_project/libgit2/src/util/unix/process.c	/^int git_process_wait(git_process_result *result, git_process *process)$/;"	f	typeref:typename:int
git_process_wait	my_project/libgit2/src/util/win32/process.c	/^int git_process_wait(git_process_result *result, git_process *process)$/;"	f	typeref:typename:int
git_process_write	my_project/libgit2/src/util/unix/process.c	/^ssize_t git_process_write(git_process *process, const void *buf, size_t count)$/;"	f	typeref:typename:ssize_t
git_process_write	my_project/libgit2/src/util/win32/process.c	/^ssize_t git_process_write(git_process *process, const void *buf, size_t count)$/;"	f	typeref:typename:ssize_t
git_proto_stream	my_project/libgit2/src/libgit2/transports/git.c	/^} git_proto_stream;$/;"	t	typeref:struct:__anoneb1923e30108	file:
git_proto_stream_alloc	my_project/libgit2/src/libgit2/transports/git.c	/^static int git_proto_stream_alloc($/;"	f	typeref:typename:int	file:
git_proto_stream_free	my_project/libgit2/src/libgit2/transports/git.c	/^static void git_proto_stream_free(git_smart_subtransport_stream *stream)$/;"	f	typeref:typename:void	file:
git_proto_stream_read	my_project/libgit2/src/libgit2/transports/git.c	/^static int git_proto_stream_read($/;"	f	typeref:typename:int	file:
git_proto_stream_write	my_project/libgit2/src/libgit2/transports/git.c	/^static int git_proto_stream_write($/;"	f	typeref:typename:int	file:
git_proxy_init_options	my_project/libgit2/src/libgit2/proxy.c	/^int git_proxy_init_options(git_proxy_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_proxy_options	my_project/libgit2/include/git2/proxy.h	/^} git_proxy_options;$/;"	t	typeref:struct:__anon188a123c0208
git_proxy_options_dispose	my_project/libgit2/src/libgit2/proxy.c	/^void git_proxy_options_dispose(git_proxy_options *opts)$/;"	f	typeref:typename:void
git_proxy_options_dup	my_project/libgit2/src/libgit2/proxy.c	/^int git_proxy_options_dup(git_proxy_options *tgt, const git_proxy_options *src)$/;"	f	typeref:typename:int
git_proxy_options_init	my_project/libgit2/src/libgit2/proxy.c	/^int git_proxy_options_init(git_proxy_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_proxy_t	my_project/libgit2/include/git2/proxy.h	/^} git_proxy_t;$/;"	t	typeref:enum:__anon188a123c0103
git_push	my_project/libgit2/include/git2/types.h	/^typedef struct git_push git_push;$/;"	t	typeref:struct:git_push
git_push	my_project/libgit2/src/libgit2/push.h	/^struct git_push {$/;"	s
git_push_add_refspec	my_project/libgit2/src/libgit2/push.c	/^int git_push_add_refspec(git_push *push, const char *refspec)$/;"	f	typeref:typename:int
git_push_finish	my_project/libgit2/src/libgit2/push.c	/^int git_push_finish(git_push *push)$/;"	f	typeref:typename:int
git_push_free	my_project/libgit2/src/libgit2/push.c	/^void git_push_free(git_push *push)$/;"	f	typeref:typename:void
git_push_init_options	my_project/libgit2/src/libgit2/push.c	/^int git_push_init_options(git_push_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_push_negotiation	my_project/libgit2/include/git2/remote.h	/^typedef int GIT_CALLBACK(git_push_negotiation)(const git_push_update **updates, size_t len, void/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_push_update ** updates,size_t len,void * payload)
git_push_new	my_project/libgit2/src/libgit2/push.c	/^int git_push_new(git_push **out, git_remote *remote, const git_push_options *opts)$/;"	f	typeref:typename:int
git_push_options	my_project/libgit2/include/git2/remote.h	/^} git_push_options;$/;"	t	typeref:struct:__anon144be4e60908
git_push_options_init	my_project/libgit2/src/libgit2/push.c	/^int git_push_options_init(git_push_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_push_status_foreach	my_project/libgit2/src/libgit2/push.c	/^int git_push_status_foreach(git_push *push,$/;"	f	typeref:typename:int
git_push_status_free	my_project/libgit2/src/libgit2/push.c	/^void git_push_status_free(push_status *status)$/;"	f	typeref:typename:void
git_push_transfer_progress	my_project/libgit2/include/git2/deprecated.h	/^typedef git_push_transfer_progress_cb git_push_transfer_progress;$/;"	t	typeref:typename:git_push_transfer_progress_cb
git_push_transfer_progress_cb	my_project/libgit2/include/git2/remote.h	/^typedef int GIT_CALLBACK(git_push_transfer_progress_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(unsigned int current,unsigned int total,size_t bytes,void * payload)
git_push_update	my_project/libgit2/include/git2/remote.h	/^} git_push_update;$/;"	t	typeref:struct:__anon144be4e60408
git_push_update_reference_cb	my_project/libgit2/include/git2/remote.h	/^typedef int GIT_CALLBACK(git_push_update_reference_cb)(const char *refname, const char *status, /;"	t	typeref:typename:int GIT_CALLBACK ()(const char * refname,const char * status,void * data)
git_push_update_tips	my_project/libgit2/src/libgit2/push.c	/^int git_push_update_tips(git_push *push, const git_remote_callbacks *callbacks)$/;"	f	typeref:typename:int
git_rand_global_init	my_project/libgit2/src/util/rand.c	/^int git_rand_global_init(void)$/;"	f	typeref:typename:int
git_rand_global_shutdown	my_project/libgit2/src/util/rand.c	/^static void git_rand_global_shutdown(void)$/;"	f	typeref:typename:void	file:
git_rand_next	my_project/libgit2/src/util/rand.c	/^uint64_t git_rand_next(void) {$/;"	f	typeref:typename:uint64_t
git_rand_seed	my_project/libgit2/src/util/rand.c	/^void git_rand_seed(uint64_t seed)$/;"	f	typeref:typename:void
git_rawobj	my_project/libgit2/src/libgit2/odb.h	/^} git_rawobj;$/;"	t	typeref:struct:__anon3125c08a0108
git_reader	my_project/libgit2/src/libgit2/reader.h	/^struct git_reader {$/;"	s
git_reader	my_project/libgit2/src/libgit2/reader.h	/^typedef struct git_reader git_reader;$/;"	t	typeref:struct:git_reader
git_reader_for_index	my_project/libgit2/src/libgit2/reader.c	/^int git_reader_for_index($/;"	f	typeref:typename:int
git_reader_for_tree	my_project/libgit2/src/libgit2/reader.c	/^int git_reader_for_tree(git_reader **out, git_tree *tree)$/;"	f	typeref:typename:int
git_reader_for_workdir	my_project/libgit2/src/libgit2/reader.c	/^int git_reader_for_workdir($/;"	f	typeref:typename:int
git_reader_free	my_project/libgit2/src/libgit2/reader.c	/^void git_reader_free(git_reader *reader)$/;"	f	typeref:typename:void
git_reader_read	my_project/libgit2/src/libgit2/reader.c	/^int git_reader_read($/;"	f	typeref:typename:int
git_rebase	my_project/libgit2/include/git2/types.h	/^typedef struct git_rebase git_rebase;$/;"	t	typeref:struct:git_rebase
git_rebase	my_project/libgit2/src/libgit2/rebase.c	/^struct git_rebase {$/;"	s	file:
git_rebase_abort	my_project/libgit2/src/libgit2/rebase.c	/^int git_rebase_abort(git_rebase *rebase)$/;"	f	typeref:typename:int
git_rebase_commit	my_project/libgit2/src/libgit2/rebase.c	/^int git_rebase_commit($/;"	f	typeref:typename:int
git_rebase_finish	my_project/libgit2/src/libgit2/rebase.c	/^int git_rebase_finish($/;"	f	typeref:typename:int
git_rebase_free	my_project/libgit2/src/libgit2/rebase.c	/^void git_rebase_free(git_rebase *rebase)$/;"	f	typeref:typename:void
git_rebase_init	my_project/libgit2/src/libgit2/rebase.c	/^int git_rebase_init($/;"	f	typeref:typename:int
git_rebase_init_options	my_project/libgit2/src/libgit2/rebase.c	/^int git_rebase_init_options(git_rebase_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_rebase_inmemory_index	my_project/libgit2/src/libgit2/rebase.c	/^int git_rebase_inmemory_index($/;"	f	typeref:typename:int
git_rebase_next	my_project/libgit2/src/libgit2/rebase.c	/^int git_rebase_next($/;"	f	typeref:typename:int
git_rebase_onto_id	my_project/libgit2/src/libgit2/rebase.c	/^const git_oid *git_rebase_onto_id(git_rebase *rebase) {$/;"	f	typeref:typename:const git_oid *
git_rebase_onto_name	my_project/libgit2/src/libgit2/rebase.c	/^const char *git_rebase_onto_name(git_rebase *rebase) {$/;"	f	typeref:typename:const char *
git_rebase_open	my_project/libgit2/src/libgit2/rebase.c	/^int git_rebase_open($/;"	f	typeref:typename:int
git_rebase_operation	my_project/libgit2/include/git2/rebase.h	/^} git_rebase_operation;$/;"	t	typeref:struct:__anonf9a5428c0308
git_rebase_operation_byindex	my_project/libgit2/src/libgit2/rebase.c	/^git_rebase_operation *git_rebase_operation_byindex(git_rebase *rebase, size_t idx)$/;"	f	typeref:typename:git_rebase_operation *
git_rebase_operation_current	my_project/libgit2/src/libgit2/rebase.c	/^size_t git_rebase_operation_current(git_rebase *rebase)$/;"	f	typeref:typename:size_t
git_rebase_operation_entrycount	my_project/libgit2/src/libgit2/rebase.c	/^size_t git_rebase_operation_entrycount(git_rebase *rebase)$/;"	f	typeref:typename:size_t
git_rebase_operation_t	my_project/libgit2/include/git2/rebase.h	/^} git_rebase_operation_t;$/;"	t	typeref:enum:__anonf9a5428c0203
git_rebase_options	my_project/libgit2/include/git2/rebase.h	/^} git_rebase_options;$/;"	t	typeref:struct:__anonf9a5428c0108
git_rebase_options_init	my_project/libgit2/src/libgit2/rebase.c	/^int git_rebase_options_init(git_rebase_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_rebase_orig_head_id	my_project/libgit2/src/libgit2/rebase.c	/^const git_oid *git_rebase_orig_head_id(git_rebase *rebase) {$/;"	f	typeref:typename:const git_oid *
git_rebase_orig_head_name	my_project/libgit2/src/libgit2/rebase.c	/^const char *git_rebase_orig_head_name(git_rebase *rebase) {$/;"	f	typeref:typename:const char *
git_rebase_t	my_project/libgit2/src/libgit2/rebase.c	/^} git_rebase_t;$/;"	t	typeref:enum:__anon59fbc5820103	file:
git_ref_t	my_project/libgit2/include/git2/deprecated.h	/^#define git_ref_t /;"	d
git_refcount	my_project/libgit2/src/util/util.h	/^} git_refcount;$/;"	t	typeref:struct:__anon381de8c40108
git_refcount_freeptr	my_project/libgit2/src/util/util.h	/^typedef void (*git_refcount_freeptr)(void *r);$/;"	t	typeref:typename:void (*)(void * r)
git_refdb	my_project/libgit2/include/git2/types.h	/^typedef struct git_refdb git_refdb;$/;"	t	typeref:struct:git_refdb
git_refdb	my_project/libgit2/src/libgit2/refdb.h	/^struct git_refdb {$/;"	s
git_refdb__free	my_project/libgit2/src/libgit2/refdb.c	/^void git_refdb__free(git_refdb *db)$/;"	f	typeref:typename:void
git_refdb_backend	my_project/libgit2/include/git2/sys/refdb_backend.h	/^struct git_refdb_backend {$/;"	s
git_refdb_backend	my_project/libgit2/include/git2/types.h	/^typedef struct git_refdb_backend git_refdb_backend;$/;"	t	typeref:struct:git_refdb_backend
git_refdb_backend_fs	my_project/libgit2/src/libgit2/refdb_fs.c	/^int git_refdb_backend_fs($/;"	f	typeref:typename:int
git_refdb_compress	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_compress(git_refdb *db)$/;"	f	typeref:typename:int
git_refdb_delete	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_delete(struct git_refdb *db, const char *ref_name, const git_oid *old_id, const ch/;"	f	typeref:typename:int
git_refdb_ensure_log	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_ensure_log(git_refdb *db, const char *refname)$/;"	f	typeref:typename:int
git_refdb_exists	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_exists(int *exists, git_refdb *refdb, const char *ref_name)$/;"	f	typeref:typename:int
git_refdb_free	my_project/libgit2/src/libgit2/refdb.c	/^void git_refdb_free(git_refdb *db)$/;"	f	typeref:typename:void
git_refdb_has_log	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_has_log(git_refdb *db, const char *refname)$/;"	f	typeref:typename:int
git_refdb_init_backend	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_init_backend(git_refdb_backend *backend, unsigned int version)$/;"	f	typeref:typename:int
git_refdb_iterator	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_iterator(git_reference_iterator **out, git_refdb *db, const char *glob)$/;"	f	typeref:typename:int
git_refdb_iterator_free	my_project/libgit2/src/libgit2/refdb.c	/^void git_refdb_iterator_free(git_reference_iterator *iter)$/;"	f	typeref:typename:void
git_refdb_iterator_next	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_iterator_next(git_reference **out, git_reference_iterator *iter)$/;"	f	typeref:typename:int
git_refdb_iterator_next_name	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_iterator_next_name(const char **out, git_reference_iterator *iter)$/;"	f	typeref:typename:int
git_refdb_lock	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_lock(void **payload, git_refdb *db, const char *refname)$/;"	f	typeref:typename:int
git_refdb_lookup	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_lookup(git_reference **out, git_refdb *db, const char *ref_name)$/;"	f	typeref:typename:int
git_refdb_new	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_new(git_refdb **out, git_repository *repo)$/;"	f	typeref:typename:int
git_refdb_open	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_open(git_refdb **out, git_repository *repo)$/;"	f	typeref:typename:int
git_refdb_reflog_read	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_reflog_read(git_reflog **out, git_refdb *db,  const char *name)$/;"	f	typeref:typename:int
git_refdb_rename	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_rename($/;"	f	typeref:typename:int
git_refdb_resolve	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_resolve($/;"	f	typeref:typename:int
git_refdb_set_backend	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_set_backend(git_refdb *db, git_refdb_backend *backend)$/;"	f	typeref:typename:int
git_refdb_should_write_head_reflog	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_should_write_head_reflog(int *out, git_refdb *db, const git_reference *ref)$/;"	f	typeref:typename:int
git_refdb_should_write_reflog	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_should_write_reflog(int *out, git_refdb *db, const git_reference *ref)$/;"	f	typeref:typename:int
git_refdb_unlock	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_unlock(git_refdb *db, void *payload, int success, int update_reflog, const git_ref/;"	f	typeref:typename:int
git_refdb_write	my_project/libgit2/src/libgit2/refdb.c	/^int git_refdb_write(git_refdb *db, git_reference *ref, int force, const git_signature *who, cons/;"	f	typeref:typename:int
git_reference	my_project/libgit2/include/git2/types.h	/^typedef struct git_reference git_reference;$/;"	t	typeref:struct:git_reference
git_reference	my_project/libgit2/src/libgit2/refs.h	/^struct git_reference {$/;"	s
git_reference__alloc	my_project/libgit2/src/libgit2/refs.c	/^git_reference *git_reference__alloc($/;"	f	typeref:typename:git_reference *
git_reference__alloc_symbolic	my_project/libgit2/src/libgit2/refs.c	/^git_reference *git_reference__alloc_symbolic($/;"	f	typeref:typename:git_reference *
git_reference__cmp_cb	my_project/libgit2/src/libgit2/refs.c	/^int git_reference__cmp_cb(const void *a, const void *b)$/;"	f	typeref:typename:int
git_reference__enable_symbolic_ref_target_validation	my_project/libgit2/src/libgit2/refs.c	/^bool git_reference__enable_symbolic_ref_target_validation = true;$/;"	v	typeref:typename:bool
git_reference__is_branch	my_project/libgit2/src/libgit2/refs.c	/^int git_reference__is_branch(const char *ref_name)$/;"	f	typeref:typename:int
git_reference__is_note	my_project/libgit2/src/libgit2/refs.c	/^int git_reference__is_note(const char *ref_name)$/;"	f	typeref:typename:int
git_reference__is_remote	my_project/libgit2/src/libgit2/refs.c	/^int git_reference__is_remote(const char *ref_name)$/;"	f	typeref:typename:int
git_reference__is_tag	my_project/libgit2/src/libgit2/refs.c	/^int git_reference__is_tag(const char *ref_name)$/;"	f	typeref:typename:int
git_reference__is_unborn_head	my_project/libgit2/src/libgit2/refs.c	/^int git_reference__is_unborn_head(bool *unborn, const git_reference *ref, git_repository *repo)$/;"	f	typeref:typename:int
git_reference__log_signature	my_project/libgit2/src/libgit2/refs.c	/^int git_reference__log_signature(git_signature **out, git_repository *repo)$/;"	f	typeref:typename:int
git_reference__name_is_valid	my_project/libgit2/src/libgit2/refs.c	/^int git_reference__name_is_valid($/;"	f	typeref:typename:int
git_reference__normalize_name	my_project/libgit2/src/libgit2/refs.c	/^int git_reference__normalize_name($/;"	f	typeref:typename:int
git_reference__realloc	my_project/libgit2/src/libgit2/refs.c	/^git_reference *git_reference__realloc($/;"	f	typeref:typename:git_reference *
git_reference__shorthand	my_project/libgit2/src/libgit2/refs.c	/^const char *git_reference__shorthand(const char *name)$/;"	f	typeref:typename:const char *
git_reference__update_for_commit	my_project/libgit2/src/libgit2/refs.c	/^int git_reference__update_for_commit($/;"	f	typeref:typename:int
git_reference__update_terminal	my_project/libgit2/src/libgit2/refs.c	/^int git_reference__update_terminal($/;"	f	typeref:typename:int
git_reference_cmp	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_cmp($/;"	f	typeref:typename:int
git_reference_create	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_create($/;"	f	typeref:typename:int
git_reference_create_matching	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_create_matching($/;"	f	typeref:typename:int
git_reference_delete	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_delete(git_reference *ref)$/;"	f	typeref:typename:int
git_reference_dup	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_dup(git_reference **dest, git_reference *source)$/;"	f	typeref:typename:int
git_reference_dwim	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_dwim(git_reference **out, git_repository *repo, const char *refname)$/;"	f	typeref:typename:int
git_reference_ensure_log	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_ensure_log(git_repository *repo, const char *refname)$/;"	f	typeref:typename:int
git_reference_foreach	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_foreach($/;"	f	typeref:typename:int
git_reference_foreach_cb	my_project/libgit2/include/git2/refs.h	/^typedef int GIT_CALLBACK(git_reference_foreach_cb)(git_reference *reference, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(git_reference * reference,void * payload)
git_reference_foreach_glob	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_foreach_glob($/;"	f	typeref:typename:int
git_reference_foreach_name	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_foreach_name($/;"	f	typeref:typename:int
git_reference_foreach_name_cb	my_project/libgit2/include/git2/refs.h	/^typedef int GIT_CALLBACK(git_reference_foreach_name_cb)(const char *name, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * name,void * payload)
git_reference_format_t	my_project/libgit2/include/git2/refs.h	/^} git_reference_format_t;$/;"	t	typeref:enum:__anon9f9f2bea0103
git_reference_free	my_project/libgit2/src/libgit2/refs.c	/^void git_reference_free(git_reference *reference)$/;"	f	typeref:typename:void
git_reference_has_log	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_has_log(git_repository *repo, const char *refname)$/;"	f	typeref:typename:int
git_reference_is_branch	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_is_branch(const git_reference *ref)$/;"	f	typeref:typename:int
git_reference_is_note	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_is_note(const git_reference *ref)$/;"	f	typeref:typename:int
git_reference_is_remote	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_is_remote(const git_reference *ref)$/;"	f	typeref:typename:int
git_reference_is_tag	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_is_tag(const git_reference *ref)$/;"	f	typeref:typename:int
git_reference_is_valid_name	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_is_valid_name(const char *refname)$/;"	f	typeref:typename:int
git_reference_iterator	my_project/libgit2/include/git2/sys/refdb_backend.h	/^struct git_reference_iterator {$/;"	s
git_reference_iterator	my_project/libgit2/include/git2/types.h	/^typedef struct git_reference_iterator  git_reference_iterator;$/;"	t	typeref:struct:git_reference_iterator
git_reference_iterator_free	my_project/libgit2/src/libgit2/refs.c	/^void git_reference_iterator_free(git_reference_iterator *iter)$/;"	f	typeref:typename:void
git_reference_iterator_glob_new	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_iterator_glob_new($/;"	f	typeref:typename:int
git_reference_iterator_new	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_iterator_new(git_reference_iterator **out, git_repository *repo)$/;"	f	typeref:typename:int
git_reference_list	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_list($/;"	f	typeref:typename:int
git_reference_lookup	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_lookup(git_reference **ref_out,$/;"	f	typeref:typename:int
git_reference_lookup_resolved	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_lookup_resolved($/;"	f	typeref:typename:int
git_reference_name	my_project/libgit2/src/libgit2/refs.c	/^const char *git_reference_name(const git_reference *ref)$/;"	f	typeref:typename:const char *
git_reference_name_is_valid	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_name_is_valid(int *valid, const char *refname)$/;"	f	typeref:typename:int
git_reference_name_to_id	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_name_to_id($/;"	f	typeref:typename:int
git_reference_next	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_next(git_reference **out, git_reference_iterator *iter)$/;"	f	typeref:typename:int
git_reference_next_name	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_next_name(const char **out, git_reference_iterator *iter)$/;"	f	typeref:typename:int
git_reference_normalize_name	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_normalize_name($/;"	f	typeref:typename:int
git_reference_normalize_t	my_project/libgit2/include/git2/deprecated.h	/^#define git_reference_normalize_t /;"	d
git_reference_owner	my_project/libgit2/src/libgit2/refs.c	/^git_repository *git_reference_owner(const git_reference *ref)$/;"	f	typeref:typename:git_repository *
git_reference_peel	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_peel($/;"	f	typeref:typename:int
git_reference_remove	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_remove(git_repository *repo, const char *name)$/;"	f	typeref:typename:int
git_reference_rename	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_rename($/;"	f	typeref:typename:int
git_reference_resolve	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_resolve(git_reference **ref_out, const git_reference *ref)$/;"	f	typeref:typename:int
git_reference_set_target	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_set_target($/;"	f	typeref:typename:int
git_reference_shorthand	my_project/libgit2/src/libgit2/refs.c	/^const char *git_reference_shorthand(const git_reference *ref)$/;"	f	typeref:typename:const char *
git_reference_symbolic_create	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_symbolic_create($/;"	f	typeref:typename:int
git_reference_symbolic_create_matching	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_symbolic_create_matching($/;"	f	typeref:typename:int
git_reference_symbolic_set_target	my_project/libgit2/src/libgit2/refs.c	/^int git_reference_symbolic_set_target($/;"	f	typeref:typename:int
git_reference_symbolic_target	my_project/libgit2/src/libgit2/refs.c	/^const char *git_reference_symbolic_target(const git_reference *ref)$/;"	f	typeref:typename:const char *
git_reference_t	my_project/libgit2/include/git2/types.h	/^} git_reference_t;$/;"	t	typeref:enum:__anon5cceb56f0203
git_reference_target	my_project/libgit2/src/libgit2/refs.c	/^const git_oid *git_reference_target(const git_reference *ref)$/;"	f	typeref:typename:const git_oid *
git_reference_target_peel	my_project/libgit2/src/libgit2/refs.c	/^const git_oid *git_reference_target_peel(const git_reference *ref)$/;"	f	typeref:typename:const git_oid *
git_reference_type	my_project/libgit2/src/libgit2/refs.c	/^git_reference_t git_reference_type(const git_reference *ref)$/;"	f	typeref:typename:git_reference_t
git_reflog	my_project/libgit2/include/git2/types.h	/^typedef struct git_reflog git_reflog;$/;"	t	typeref:struct:git_reflog
git_reflog	my_project/libgit2/src/libgit2/reflog.h	/^struct git_reflog {$/;"	s
git_reflog_append	my_project/libgit2/src/libgit2/reflog.c	/^int git_reflog_append($/;"	f	typeref:typename:int
git_reflog_delete	my_project/libgit2/src/libgit2/reflog.c	/^int git_reflog_delete(git_repository *repo, const char *name)$/;"	f	typeref:typename:int
git_reflog_drop	my_project/libgit2/src/libgit2/reflog.c	/^int git_reflog_drop(git_reflog *reflog, size_t idx, int rewrite_previous_entry)$/;"	f	typeref:typename:int
git_reflog_entry	my_project/libgit2/include/git2/types.h	/^typedef struct git_reflog_entry git_reflog_entry;$/;"	t	typeref:struct:git_reflog_entry
git_reflog_entry	my_project/libgit2/src/libgit2/reflog.h	/^struct git_reflog_entry {$/;"	s
git_reflog_entry__free	my_project/libgit2/src/libgit2/reflog.c	/^void git_reflog_entry__free(git_reflog_entry *entry)$/;"	f	typeref:typename:void
git_reflog_entry_byindex	my_project/libgit2/src/libgit2/reflog.c	/^const git_reflog_entry *git_reflog_entry_byindex(const git_reflog *reflog, size_t idx)$/;"	f	typeref:typename:const git_reflog_entry *
git_reflog_entry_committer	my_project/libgit2/src/libgit2/reflog.c	/^const git_signature *git_reflog_entry_committer(const git_reflog_entry *entry)$/;"	f	typeref:typename:const git_signature *
git_reflog_entry_id_new	my_project/libgit2/src/libgit2/reflog.c	/^const git_oid *git_reflog_entry_id_new(const git_reflog_entry *entry)$/;"	f	typeref:typename:const git_oid *
git_reflog_entry_id_old	my_project/libgit2/src/libgit2/reflog.c	/^const git_oid *git_reflog_entry_id_old(const git_reflog_entry *entry)$/;"	f	typeref:typename:const git_oid *
git_reflog_entry_message	my_project/libgit2/src/libgit2/reflog.c	/^const char *git_reflog_entry_message(const git_reflog_entry *entry)$/;"	f	typeref:typename:const char *
git_reflog_entrycount	my_project/libgit2/src/libgit2/reflog.c	/^size_t git_reflog_entrycount(git_reflog *reflog)$/;"	f	typeref:typename:size_t
git_reflog_free	my_project/libgit2/src/libgit2/reflog.c	/^void git_reflog_free(git_reflog *reflog)$/;"	f	typeref:typename:void
git_reflog_read	my_project/libgit2/src/libgit2/reflog.c	/^int git_reflog_read(git_reflog **reflog, git_repository *repo,  const char *name)$/;"	f	typeref:typename:int
git_reflog_rename	my_project/libgit2/src/libgit2/reflog.c	/^int git_reflog_rename(git_repository *repo, const char *old_name, const char *new_name)$/;"	f	typeref:typename:int
git_reflog_write	my_project/libgit2/src/libgit2/reflog.c	/^int git_reflog_write(git_reflog *reflog)$/;"	f	typeref:typename:int
git_refname_t	my_project/libgit2/src/libgit2/refs.h	/^typedef char git_refname_t[GIT_REFNAME_MAX];$/;"	t	typeref:typename:char[GIT_REFNAME_MAX]
git_refspec	my_project/libgit2/include/git2/types.h	/^typedef struct git_refspec git_refspec;$/;"	t	typeref:struct:git_refspec
git_refspec	my_project/libgit2/src/libgit2/refspec.h	/^struct git_refspec {$/;"	s
git_refspec__dispose	my_project/libgit2/src/libgit2/refspec.c	/^void git_refspec__dispose(git_refspec *refspec)$/;"	f	typeref:typename:void
git_refspec__dwim_one	my_project/libgit2/src/libgit2/refspec.c	/^int git_refspec__dwim_one(git_vector *out, git_refspec *spec, git_vector *refs)$/;"	f	typeref:typename:int
git_refspec__parse	my_project/libgit2/src/libgit2/refspec.c	/^int git_refspec__parse(git_refspec *refspec, const char *input, bool is_fetch)$/;"	f	typeref:typename:int
git_refspec__rtransform	my_project/libgit2/src/libgit2/refspec.c	/^int git_refspec__rtransform(git_str *out, const git_refspec *spec, const char *name)$/;"	f	typeref:typename:int
git_refspec__serialize	my_project/libgit2/src/libgit2/refspec.c	/^int git_refspec__serialize(git_str *out, const git_refspec *refspec)$/;"	f	typeref:typename:int
git_refspec__transform	my_project/libgit2/src/libgit2/refspec.c	/^int git_refspec__transform(git_str *out, const git_refspec *spec, const char *name)$/;"	f	typeref:typename:int
git_refspec_direction	my_project/libgit2/src/libgit2/refspec.c	/^git_direction git_refspec_direction(const git_refspec *spec)$/;"	f	typeref:typename:git_direction
git_refspec_dst	my_project/libgit2/src/libgit2/refspec.c	/^const char *git_refspec_dst(const git_refspec *refspec)$/;"	f	typeref:typename:const char *
git_refspec_dst_matches	my_project/libgit2/src/libgit2/refspec.c	/^int git_refspec_dst_matches(const git_refspec *refspec, const char *refname)$/;"	f	typeref:typename:int
git_refspec_force	my_project/libgit2/src/libgit2/refspec.c	/^int git_refspec_force(const git_refspec *refspec)$/;"	f	typeref:typename:int
git_refspec_free	my_project/libgit2/src/libgit2/refspec.c	/^void git_refspec_free(git_refspec *refspec)$/;"	f	typeref:typename:void
git_refspec_is_wildcard	my_project/libgit2/src/libgit2/refspec.c	/^int git_refspec_is_wildcard(const git_refspec *spec)$/;"	f	typeref:typename:int
git_refspec_parse	my_project/libgit2/src/libgit2/refspec.c	/^int git_refspec_parse(git_refspec **out_refspec, const char *input, int is_fetch)$/;"	f	typeref:typename:int
git_refspec_rtransform	my_project/libgit2/src/libgit2/refspec.c	/^int git_refspec_rtransform(git_buf *out, const git_refspec *spec, const char *name)$/;"	f	typeref:typename:int
git_refspec_src	my_project/libgit2/src/libgit2/refspec.c	/^const char *git_refspec_src(const git_refspec *refspec)$/;"	f	typeref:typename:const char *
git_refspec_src_matches	my_project/libgit2/src/libgit2/refspec.c	/^int git_refspec_src_matches(const git_refspec *refspec, const char *refname)$/;"	f	typeref:typename:int
git_refspec_string	my_project/libgit2/src/libgit2/refspec.c	/^const char *git_refspec_string(const git_refspec *refspec)$/;"	f	typeref:typename:const char *
git_refspec_transform	my_project/libgit2/src/libgit2/refspec.c	/^int git_refspec_transform(git_buf *out, const git_refspec *spec, const char *name)$/;"	f	typeref:typename:int
git_regexp	my_project/libgit2/src/util/regexp.h	/^typedef pcre *git_regexp;$/;"	t	typeref:typename:pcre *
git_regexp	my_project/libgit2/src/util/regexp.h	/^typedef pcre2_code *git_regexp;$/;"	t	typeref:typename:pcre2_code *
git_regexp	my_project/libgit2/src/util/regexp.h	/^typedef regex_t git_regexp;$/;"	t	typeref:typename:regex_t
git_regexp_compile	my_project/libgit2/src/util/regexp.c	/^int git_regexp_compile(git_regexp *r, const char *pattern, int flags)$/;"	f	typeref:typename:int
git_regexp_dispose	my_project/libgit2/src/util/regexp.c	/^void git_regexp_dispose(git_regexp *r)$/;"	f	typeref:typename:void
git_regexp_flags_t	my_project/libgit2/src/util/regexp.h	/^} git_regexp_flags_t;$/;"	t	typeref:enum:__anon6acbdb710103
git_regexp_match	my_project/libgit2/src/util/regexp.c	/^int git_regexp_match(const git_regexp *r, const char *string)$/;"	f	typeref:typename:int
git_regexp_search	my_project/libgit2/src/util/regexp.c	/^int git_regexp_search(const git_regexp *r, const char *string, size_t nmatches, git_regmatch *ma/;"	f	typeref:typename:int
git_regmatch	my_project/libgit2/src/util/regexp.h	/^} git_regmatch;$/;"	t	typeref:struct:__anon6acbdb710208
git_remote	my_project/libgit2/include/git2/types.h	/^typedef struct git_remote git_remote;$/;"	t	typeref:struct:git_remote
git_remote	my_project/libgit2/src/libgit2/remote.h	/^struct git_remote {$/;"	s
git_remote__default_branch	my_project/libgit2/src/libgit2/remote.c	/^int git_remote__default_branch(git_str *out, git_remote *remote)$/;"	f	typeref:typename:int
git_remote__download	my_project/libgit2/src/libgit2/remote.c	/^static int git_remote__download($/;"	f	typeref:typename:int	file:
git_remote__http_proxy	my_project/libgit2/src/libgit2/remote.c	/^int git_remote__http_proxy(char **out, git_remote *remote, git_net_url *url)$/;"	f	typeref:typename:int
git_remote__matching_dst_refspec	my_project/libgit2/src/libgit2/remote.c	/^git_refspec *git_remote__matching_dst_refspec(git_remote *remote, const char *refname)$/;"	f	typeref:typename:git_refspec *
git_remote__matching_refspec	my_project/libgit2/src/libgit2/remote.c	/^git_refspec *git_remote__matching_refspec(git_remote *remote, const char *refname)$/;"	f	typeref:typename:git_refspec *
git_remote__urlfordirection	my_project/libgit2/src/libgit2/remote.c	/^int git_remote__urlfordirection($/;"	f	typeref:typename:int
git_remote_add_fetch	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_add_fetch(git_repository *repo, const char *remote, const char *refspec)$/;"	f	typeref:typename:int
git_remote_add_push	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_add_push(git_repository *repo, const char *remote, const char *refspec)$/;"	f	typeref:typename:int
git_remote_autotag	my_project/libgit2/src/libgit2/remote.c	/^git_remote_autotag_option_t git_remote_autotag(const git_remote *remote)$/;"	f	typeref:typename:git_remote_autotag_option_t
git_remote_autotag_option_t	my_project/libgit2/include/git2/remote.h	/^} git_remote_autotag_option_t;$/;"	t	typeref:enum:__anon144be4e60603
git_remote_callbacks	my_project/libgit2/include/git2/remote.h	/^struct git_remote_callbacks {$/;"	s
git_remote_callbacks	my_project/libgit2/include/git2/types.h	/^typedef struct git_remote_callbacks git_remote_callbacks;$/;"	t	typeref:struct:git_remote_callbacks
git_remote_capabilities	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_capabilities(unsigned int *out, git_remote *remote)$/;"	f	typeref:typename:int
git_remote_capability_t	my_project/libgit2/include/git2/sys/remote.h	/^} git_remote_capability_t;$/;"	t	typeref:enum:__anonc065e6340103
git_remote_completion_t	my_project/libgit2/include/git2/remote.h	/^typedef enum git_remote_completion_t {$/;"	g
git_remote_completion_t	my_project/libgit2/include/git2/remote.h	/^} git_remote_completion_t;$/;"	t	typeref:enum:git_remote_completion_t
git_remote_completion_type	my_project/libgit2/include/git2/deprecated.h	/^#define git_remote_completion_type /;"	d
git_remote_connect	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_connect($/;"	f	typeref:typename:int
git_remote_connect_ext	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_connect_ext($/;"	f	typeref:typename:int
git_remote_connect_options	my_project/libgit2/include/git2/remote.h	/^} git_remote_connect_options;$/;"	t	typeref:struct:__anon144be4e60a08
git_remote_connect_options__copy_opts	my_project/libgit2/src/libgit2/remote.h	/^#define git_remote_connect_options__copy_opts(/;"	d
git_remote_connect_options__dispose	my_project/libgit2/src/libgit2/remote.h	/^GIT_INLINE(void) git_remote_connect_options__dispose($/;"	f	typeref:typename:void
git_remote_connect_options__from_fetch_opts	my_project/libgit2/src/libgit2/remote.h	/^GIT_INLINE(int) git_remote_connect_options__from_fetch_opts($/;"	f	typeref:typename:int
git_remote_connect_options__from_push_opts	my_project/libgit2/src/libgit2/remote.h	/^GIT_INLINE(int) git_remote_connect_options__from_push_opts($/;"	f	typeref:typename:int
git_remote_connect_options_dispose	my_project/libgit2/src/libgit2/remote.c	/^void git_remote_connect_options_dispose(git_remote_connect_options *opts)$/;"	f	typeref:typename:void
git_remote_connect_options_dup	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_connect_options_dup($/;"	f	typeref:typename:int
git_remote_connect_options_init	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_connect_options_init($/;"	f	typeref:typename:int
git_remote_connect_options_normalize	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_connect_options_normalize($/;"	f	typeref:typename:int
git_remote_connected	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_connected(const git_remote *remote)$/;"	f	typeref:typename:int
git_remote_create	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_create(git_remote **out, git_repository *repo, const char *name, const char *url)$/;"	f	typeref:typename:int
git_remote_create_anonymous	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_create_anonymous(git_remote **out, git_repository *repo, const char *url)$/;"	f	typeref:typename:int
git_remote_create_cb	my_project/libgit2/include/git2/clone.h	/^typedef int GIT_CALLBACK(git_remote_create_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_remote ** out,git_repository * repo,const char * name,const char * url,void * payload)
git_remote_create_detached	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_create_detached(git_remote **out, const char *url)$/;"	f	typeref:typename:int
git_remote_create_flags	my_project/libgit2/include/git2/remote.h	/^} git_remote_create_flags;$/;"	t	typeref:enum:__anon144be4e60203
git_remote_create_init_options	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_create_init_options(git_remote_create_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_remote_create_options	my_project/libgit2/include/git2/remote.h	/^typedef struct git_remote_create_options {$/;"	s
git_remote_create_options	my_project/libgit2/include/git2/remote.h	/^} git_remote_create_options;$/;"	t	typeref:struct:git_remote_create_options
git_remote_create_options_init	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_create_options_init(git_remote_create_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_remote_create_with_fetchspec	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_create_with_fetchspec(git_remote **out, git_repository *repo, const char *name, c/;"	f	typeref:typename:int
git_remote_create_with_opts	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_create_with_opts(git_remote **out, const char *url, const git_remote_create_optio/;"	f	typeref:typename:int
git_remote_default_branch	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_default_branch(git_buf *out, git_remote *remote)$/;"	f	typeref:typename:int
git_remote_delete	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_delete(git_repository *repo, const char *name)$/;"	f	typeref:typename:int
git_remote_disconnect	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_disconnect(git_remote *remote)$/;"	f	typeref:typename:int
git_remote_download	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_download($/;"	f	typeref:typename:int
git_remote_dup	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_dup(git_remote **dest, git_remote *source)$/;"	f	typeref:typename:int
git_remote_fetch	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_fetch($/;"	f	typeref:typename:int
git_remote_free	my_project/libgit2/src/libgit2/remote.c	/^void git_remote_free(git_remote *remote)$/;"	f	typeref:typename:void
git_remote_get_fetch_refspecs	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_get_fetch_refspecs(git_strarray *array, const git_remote *remote)$/;"	f	typeref:typename:int
git_remote_get_push_refspecs	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_get_push_refspecs(git_strarray *array, const git_remote *remote)$/;"	f	typeref:typename:int
git_remote_get_refspec	my_project/libgit2/src/libgit2/remote.c	/^const git_refspec *git_remote_get_refspec(const git_remote *remote, size_t n)$/;"	f	typeref:typename:const git_refspec *
git_remote_head	my_project/libgit2/include/git2/net.h	/^struct git_remote_head {$/;"	s
git_remote_head	my_project/libgit2/include/git2/types.h	/^typedef struct git_remote_head git_remote_head;$/;"	t	typeref:struct:git_remote_head
git_remote_init_callbacks	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_init_callbacks(git_remote_callbacks *opts, unsigned int version)$/;"	f	typeref:typename:int
git_remote_is_valid_name	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_is_valid_name(const char *remote_name)$/;"	f	typeref:typename:int
git_remote_list	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_list(git_strarray *remotes_list, git_repository *repo)$/;"	f	typeref:typename:int
git_remote_lookup	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_lookup(git_remote **out, git_repository *repo, const char *name)$/;"	f	typeref:typename:int
git_remote_ls	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_ls(const git_remote_head ***out, size_t *size, git_remote *remote)$/;"	f	typeref:typename:int
git_remote_name	my_project/libgit2/src/libgit2/remote.c	/^const char *git_remote_name(const git_remote *remote)$/;"	f	typeref:typename:const char *
git_remote_name_is_valid	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_name_is_valid(int *valid, const char *remote_name)$/;"	f	typeref:typename:int
git_remote_oid_type	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_oid_type(git_oid_t *out, git_remote *remote)$/;"	f	typeref:typename:int
git_remote_owner	my_project/libgit2/src/libgit2/remote.c	/^git_repository *git_remote_owner(const git_remote *remote)$/;"	f	typeref:typename:git_repository *
git_remote_prune	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_prune(git_remote *remote, const git_remote_callbacks *callbacks)$/;"	f	typeref:typename:int
git_remote_prune_refs	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_prune_refs(const git_remote *remote)$/;"	f	typeref:typename:int
git_remote_push	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_push($/;"	f	typeref:typename:int
git_remote_pushurl	my_project/libgit2/src/libgit2/remote.c	/^const char *git_remote_pushurl(const git_remote *remote)$/;"	f	typeref:typename:const char *
git_remote_ready_cb	my_project/libgit2/include/git2/remote.h	/^typedef int GIT_CALLBACK(git_remote_ready_cb)(git_remote *remote, int direction, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(git_remote * remote,int direction,void * payload)
git_remote_redirect_t	my_project/libgit2/include/git2/remote.h	/^} git_remote_redirect_t;$/;"	t	typeref:enum:__anon144be4e60103
git_remote_refspec_count	my_project/libgit2/src/libgit2/remote.c	/^size_t git_remote_refspec_count(const git_remote *remote)$/;"	f	typeref:typename:size_t
git_remote_rename	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_rename(git_strarray *out, git_repository *repo, const char *name, const char *new/;"	f	typeref:typename:int
git_remote_set_autotag	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_set_autotag(git_repository *repo, const char *remote, git_remote_autotag_option_t/;"	f	typeref:typename:int
git_remote_set_instance_pushurl	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_set_instance_pushurl(git_remote *remote, const char *url)$/;"	f	typeref:typename:int
git_remote_set_instance_url	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_set_instance_url(git_remote *remote, const char *url)$/;"	f	typeref:typename:int
git_remote_set_pushurl	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_set_pushurl(git_repository *repo, const char *remote, const char *url)$/;"	f	typeref:typename:int
git_remote_set_url	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_set_url(git_repository *repo, const char *remote, const char *url)$/;"	f	typeref:typename:int
git_remote_stats	my_project/libgit2/src/libgit2/remote.c	/^const git_indexer_progress *git_remote_stats(git_remote *remote)$/;"	f	typeref:typename:const git_indexer_progress *
git_remote_stop	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_stop(git_remote *remote)$/;"	f	typeref:typename:int
git_remote_update_flags	my_project/libgit2/include/git2/remote.h	/^} git_remote_update_flags;$/;"	t	typeref:enum:__anon144be4e60303
git_remote_update_tips	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_update_tips($/;"	f	typeref:typename:int
git_remote_upload	my_project/libgit2/src/libgit2/remote.c	/^int git_remote_upload($/;"	f	typeref:typename:int
git_remote_url	my_project/libgit2/src/libgit2/remote.c	/^const char *git_remote_url(const git_remote *remote)$/;"	f	typeref:typename:const char *
git_remote_write_fetchhead	my_project/libgit2/src/libgit2/remote.c	/^static int git_remote_write_fetchhead(git_remote *remote, git_refspec *spec, git_vector *update_/;"	f	typeref:typename:int	file:
git_repository	my_project/libgit2/include/git2/types.h	/^typedef struct git_repository git_repository;$/;"	t	typeref:struct:git_repository
git_repository	my_project/libgit2/src/libgit2/repository.h	/^struct git_repository {$/;"	s
git_repository__cleanup	my_project/libgit2/src/libgit2/repository.c	/^int git_repository__cleanup(git_repository *repo)$/;"	f	typeref:typename:int
git_repository__cleanup_files	my_project/libgit2/src/libgit2/repository.c	/^int git_repository__cleanup_files($/;"	f	typeref:typename:int
git_repository__configmap_lookup	my_project/libgit2/src/libgit2/config_cache.c	/^int git_repository__configmap_lookup(int *out, git_repository *repo, git_configmap_item item)$/;"	f	typeref:typename:int
git_repository__configmap_lookup_cache_clear	my_project/libgit2/src/libgit2/config_cache.c	/^void git_repository__configmap_lookup_cache_clear(git_repository *repo)$/;"	f	typeref:typename:void
git_repository__ensure_not_bare	my_project/libgit2/src/libgit2/repository.h	/^GIT_INLINE(int) git_repository__ensure_not_bare($/;"	f	typeref:typename:int
git_repository__extensions	my_project/libgit2/src/libgit2/repository.c	/^int git_repository__extensions(char ***out, size_t *out_len)$/;"	f	typeref:typename:int
git_repository__free_extensions	my_project/libgit2/src/libgit2/repository.c	/^void git_repository__free_extensions(void)$/;"	f	typeref:typename:void
git_repository__fsync_gitdir	my_project/libgit2/src/libgit2/repository.c	/^bool git_repository__fsync_gitdir = false;$/;"	v	typeref:typename:bool
git_repository__item_path	my_project/libgit2/src/libgit2/repository.c	/^int git_repository__item_path($/;"	f	typeref:typename:int
git_repository__message	my_project/libgit2/src/libgit2/repository.c	/^static int git_repository__message(git_str *out, git_repository *repo)$/;"	f	typeref:typename:int	file:
git_repository__new	my_project/libgit2/src/libgit2/repository.c	/^int git_repository__new(git_repository **out, git_oid_t oid_type)$/;"	f	typeref:typename:int
git_repository__reserved_names	my_project/libgit2/src/libgit2/repository.c	/^bool git_repository__reserved_names($/;"	f	typeref:typename:bool
git_repository__reserved_names_posix	my_project/libgit2/src/libgit2/repository.c	/^git_str git_repository__reserved_names_posix[] = {$/;"	v	typeref:typename:git_str[]
git_repository__reserved_names_posix_len	my_project/libgit2/src/libgit2/repository.c	/^size_t git_repository__reserved_names_posix_len = 1;$/;"	v	typeref:typename:size_t
git_repository__reserved_names_win32	my_project/libgit2/src/libgit2/repository.c	/^git_str git_repository__reserved_names_win32[] = {$/;"	v	typeref:typename:git_str[]
git_repository__reserved_names_win32_len	my_project/libgit2/src/libgit2/repository.c	/^size_t git_repository__reserved_names_win32_len = 2;$/;"	v	typeref:typename:size_t
git_repository__set_extensions	my_project/libgit2/src/libgit2/repository.c	/^int git_repository__set_extensions(const char **extensions, size_t len)$/;"	f	typeref:typename:int
git_repository__set_objectformat	my_project/libgit2/src/libgit2/repository.c	/^int git_repository__set_objectformat($/;"	f	typeref:typename:int
git_repository__set_orig_head	my_project/libgit2/src/libgit2/repository.c	/^int git_repository__set_orig_head(git_repository *repo, const git_oid *orig_head)$/;"	f	typeref:typename:int
git_repository__shallow_roots	my_project/libgit2/src/libgit2/repository.c	/^int git_repository__shallow_roots($/;"	f	typeref:typename:int
git_repository__shallow_roots_write	my_project/libgit2/src/libgit2/repository.c	/^int git_repository__shallow_roots_write(git_repository *repo, git_oidarray *roots)$/;"	f	typeref:typename:int
git_repository__validate_ownership	my_project/libgit2/src/libgit2/repository.c	/^bool git_repository__validate_ownership = true;$/;"	v	typeref:typename:bool
git_repository__wrap_odb	my_project/libgit2/src/libgit2/repository.c	/^int git_repository__wrap_odb($/;"	f	typeref:typename:int
git_repository_attr_cache	my_project/libgit2/src/libgit2/repository.h	/^GIT_INLINE(git_attr_cache *) git_repository_attr_cache(git_repository *repo)$/;"	f	typeref:typename:git_attr_cache *
git_repository_commit_parents	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_commit_parents(git_commitarray *out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_commondir	my_project/libgit2/src/libgit2/repository.c	/^const char *git_repository_commondir(const git_repository *repo)$/;"	f	typeref:typename:const char *
git_repository_config	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_config(git_config **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_config__weakptr	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_config__weakptr(git_config **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_config_snapshot	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_config_snapshot(git_config **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_create_cb	my_project/libgit2/include/git2/clone.h	/^typedef int GIT_CALLBACK(git_repository_create_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_repository ** out,const char * path,int bare,void * payload)
git_repository_create_head	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_create_head(const char *git_dir, const char *ref_name)$/;"	f	typeref:typename:int
git_repository_detach_head	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_detach_head(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_discover	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_discover($/;"	f	typeref:typename:int
git_repository_driver_registry	my_project/libgit2/src/libgit2/diff_driver.c	/^static git_diff_driver_registry *git_repository_driver_registry($/;"	f	typeref:typename:git_diff_driver_registry *	file:
git_repository_fetchhead_foreach	my_project/libgit2/src/libgit2/fetchhead.c	/^int git_repository_fetchhead_foreach($/;"	f	typeref:typename:int
git_repository_fetchhead_foreach_cb	my_project/libgit2/include/git2/repository.h	/^typedef int GIT_CALLBACK(git_repository_fetchhead_foreach_cb)(const char *ref_name,$/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * ref_name,const char * remote_url,const git_oid * oid,unsigned int is_merge,void * payload)
git_repository_foreach_worktree	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_foreach_worktree(git_repository *repo,$/;"	f	typeref:typename:int
git_repository_foreach_worktree_cb	my_project/libgit2/src/libgit2/repository.h	/^typedef int (*git_repository_foreach_worktree_cb)(git_repository *, void *);$/;"	t	typeref:typename:int (*)(git_repository *,void *)
git_repository_free	my_project/libgit2/src/libgit2/repository.c	/^void git_repository_free(git_repository *repo)$/;"	f	typeref:typename:void
git_repository_get_namespace	my_project/libgit2/src/libgit2/repository.c	/^const char *git_repository_get_namespace(git_repository *repo)$/;"	f	typeref:typename:const char *
git_repository_grafts__weakptr	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_grafts__weakptr(git_grafts **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_hashfile	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_hashfile($/;"	f	typeref:typename:int
git_repository_head	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_head(git_reference **head_out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_head_commit	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_head_commit(git_commit **commit, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_head_detached	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_head_detached(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_head_detached_for_worktree	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_head_detached_for_worktree(git_repository *repo, const char *name)$/;"	f	typeref:typename:int
git_repository_head_for_worktree	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_head_for_worktree(git_reference **out, git_repository *repo, const char *name/;"	f	typeref:typename:int
git_repository_head_tree	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_head_tree(git_tree **tree, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_head_unborn	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_head_unborn(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_ident	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_ident(const char **name, const char **email, const git_repository *repo)$/;"	f	typeref:typename:int
git_repository_index	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_index(git_index **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_index__weakptr	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_index__weakptr(git_index **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_init	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_init($/;"	f	typeref:typename:int
git_repository_init_ext	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_init_ext($/;"	f	typeref:typename:int
git_repository_init_flag_t	my_project/libgit2/include/git2/repository.h	/^} git_repository_init_flag_t;$/;"	t	typeref:enum:__anon67af0d3a0203
git_repository_init_init_options	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_init_init_options($/;"	f	typeref:typename:int
git_repository_init_mode_t	my_project/libgit2/include/git2/repository.h	/^} git_repository_init_mode_t;$/;"	t	typeref:enum:__anon67af0d3a0303
git_repository_init_options	my_project/libgit2/include/git2/repository.h	/^} git_repository_init_options;$/;"	t	typeref:struct:__anon67af0d3a0408
git_repository_init_options_init	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_init_options_init($/;"	f	typeref:typename:int
git_repository_initialbranch	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_initialbranch(git_str *out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_is_bare	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_is_bare(const git_repository *repo)$/;"	f	typeref:typename:int
git_repository_is_empty	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_is_empty(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_is_shallow	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_is_shallow(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_is_worktree	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_is_worktree(const git_repository *repo)$/;"	f	typeref:typename:int
git_repository_item_path	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_item_path($/;"	f	typeref:typename:int
git_repository_item_t	my_project/libgit2/include/git2/repository.h	/^} git_repository_item_t;$/;"	t	typeref:enum:__anon67af0d3a0503
git_repository_mergehead_foreach	my_project/libgit2/src/libgit2/merge.c	/^int git_repository_mergehead_foreach($/;"	f	typeref:typename:int
git_repository_mergehead_foreach_cb	my_project/libgit2/include/git2/repository.h	/^typedef int GIT_CALLBACK(git_repository_mergehead_foreach_cb)(const git_oid *oid,$/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_oid * oid,void * payload)
git_repository_message	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_message(git_buf *out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_message_remove	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_message_remove(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_new	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_new(git_repository **out, git_oid_t oid_type)$/;"	f	typeref:typename:int
git_repository_new	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_new(git_repository** out)$/;"	f	typeref:typename:int
git_repository_odb	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_odb(git_odb **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_odb__weakptr	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_odb__weakptr(git_odb **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_oid_type	my_project/libgit2/src/libgit2/repository.c	/^git_oid_t git_repository_oid_type(git_repository *repo)$/;"	f	typeref:typename:git_oid_t
git_repository_open	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_open(git_repository **repo_out, const char *path)$/;"	f	typeref:typename:int
git_repository_open_bare	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_open_bare($/;"	f	typeref:typename:int
git_repository_open_ext	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_open_ext($/;"	f	typeref:typename:int
git_repository_open_flag_t	my_project/libgit2/include/git2/repository.h	/^} git_repository_open_flag_t;$/;"	t	typeref:enum:__anon67af0d3a0103
git_repository_open_from_worktree	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_open_from_worktree(git_repository **repo_out, git_worktree *wt)$/;"	f	typeref:typename:int
git_repository_path	my_project/libgit2/src/libgit2/repository.c	/^const char *git_repository_path(const git_repository *repo)$/;"	f	typeref:typename:const char *
git_repository_refdb	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_refdb(git_refdb **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_refdb__weakptr	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_refdb__weakptr(git_refdb **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_reinit_filesystem	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_reinit_filesystem(git_repository *repo, int recurse)$/;"	f	typeref:typename:int
git_repository_set_bare	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_set_bare(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_set_config	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_set_config(git_repository *repo, git_config *config)$/;"	f	typeref:typename:int
git_repository_set_head	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_set_head($/;"	f	typeref:typename:int
git_repository_set_head_detached	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_set_head_detached($/;"	f	typeref:typename:int
git_repository_set_head_detached_from_annotated	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_set_head_detached_from_annotated($/;"	f	typeref:typename:int
git_repository_set_ident	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_set_ident(git_repository *repo, const char *name, const char *email)$/;"	f	typeref:typename:int
git_repository_set_index	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_set_index(git_repository *repo, git_index *index)$/;"	f	typeref:typename:int
git_repository_set_namespace	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_set_namespace(git_repository *repo, const char *namespace)$/;"	f	typeref:typename:int
git_repository_set_odb	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_set_odb(git_repository *repo, git_odb *odb)$/;"	f	typeref:typename:int
git_repository_set_refdb	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_set_refdb(git_repository *repo, git_refdb *refdb)$/;"	f	typeref:typename:int
git_repository_set_workdir	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_set_workdir($/;"	f	typeref:typename:int
git_repository_shallow_grafts__weakptr	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_shallow_grafts__weakptr(git_grafts **out, git_repository *repo)$/;"	f	typeref:typename:int
git_repository_state	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_state(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_state_cleanup	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_state_cleanup(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_state_t	my_project/libgit2/include/git2/repository.h	/^} git_repository_state_t;$/;"	t	typeref:enum:__anon67af0d3a0603
git_repository_submodule_cache_all	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_submodule_cache_all(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_submodule_cache_clear	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_submodule_cache_clear(git_repository *repo)$/;"	f	typeref:typename:int
git_repository_workdir	my_project/libgit2/src/libgit2/repository.c	/^const char *git_repository_workdir(const git_repository *repo)$/;"	f	typeref:typename:const char *
git_repository_workdir_path	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_workdir_path($/;"	f	typeref:typename:int
git_repository_wrap_odb	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_wrap_odb($/;"	f	typeref:typename:int
git_repository_wrap_odb	my_project/libgit2/src/libgit2/repository.c	/^int git_repository_wrap_odb(git_repository **out, git_odb *odb)$/;"	f	typeref:typename:int
git_reset	my_project/libgit2/src/libgit2/reset.c	/^int git_reset($/;"	f	typeref:typename:int
git_reset_default	my_project/libgit2/src/libgit2/reset.c	/^int git_reset_default($/;"	f	typeref:typename:int
git_reset_from_annotated	my_project/libgit2/src/libgit2/reset.c	/^int git_reset_from_annotated($/;"	f	typeref:typename:int
git_reset_t	my_project/libgit2/include/git2/reset.h	/^} git_reset_t;$/;"	t	typeref:enum:__anon94695d1d0103
git_revert	my_project/libgit2/src/libgit2/revert.c	/^int git_revert($/;"	f	typeref:typename:int
git_revert_commit	my_project/libgit2/src/libgit2/revert.c	/^int git_revert_commit($/;"	f	typeref:typename:int
git_revert_init_options	my_project/libgit2/src/libgit2/revert.c	/^int git_revert_init_options(git_revert_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_revert_options	my_project/libgit2/include/git2/revert.h	/^} git_revert_options;$/;"	t	typeref:struct:__anon289484920108
git_revert_options_init	my_project/libgit2/src/libgit2/revert.c	/^int git_revert_options_init(git_revert_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_revparse	my_project/libgit2/src/libgit2/revparse.c	/^int git_revparse($/;"	f	typeref:typename:int
git_revparse_ext	my_project/libgit2/src/libgit2/revparse.c	/^int git_revparse_ext($/;"	f	typeref:typename:int
git_revparse_mode_t	my_project/libgit2/include/git2/deprecated.h	/^typedef git_revspec_t git_revparse_mode_t;$/;"	t	typeref:typename:git_revspec_t
git_revparse_single	my_project/libgit2/src/libgit2/revparse.c	/^int git_revparse_single(git_object **out, git_repository *repo, const char *spec)$/;"	f	typeref:typename:int
git_revspec	my_project/libgit2/include/git2/revparse.h	/^} git_revspec;$/;"	t	typeref:struct:__anonc6e279620208
git_revspec_t	my_project/libgit2/include/git2/revparse.h	/^} git_revspec_t;$/;"	t	typeref:enum:__anonc6e279620103
git_revwalk	my_project/libgit2/include/git2/types.h	/^typedef struct git_revwalk git_revwalk;$/;"	t	typeref:struct:git_revwalk
git_revwalk	my_project/libgit2/src/libgit2/revwalk.h	/^struct git_revwalk {$/;"	s
git_revwalk__commit_lookup	my_project/libgit2/src/libgit2/revwalk.c	/^git_commit_list_node *git_revwalk__commit_lookup($/;"	f	typeref:typename:git_commit_list_node *
git_revwalk__push_commit	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk__push_commit(git_revwalk *walk, const git_oid *oid, const git_revwalk__push_opti/;"	f	typeref:typename:int
git_revwalk__push_glob	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk__push_glob(git_revwalk *walk, const char *glob, const git_revwalk__push_options /;"	f	typeref:typename:int
git_revwalk__push_options	my_project/libgit2/src/libgit2/revwalk.h	/^} git_revwalk__push_options;$/;"	t	typeref:struct:__anoncf11cd510108
git_revwalk__push_ref	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk__push_ref(git_revwalk *walk, const char *refname, const git_revwalk__push_option/;"	f	typeref:typename:int
git_revwalk_add_hide_cb	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_add_hide_cb($/;"	f	typeref:typename:int
git_revwalk_free	my_project/libgit2/src/libgit2/revwalk.c	/^void git_revwalk_free(git_revwalk *walk)$/;"	f	typeref:typename:void
git_revwalk_hide	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_hide(git_revwalk *walk, const git_oid *oid)$/;"	f	typeref:typename:int
git_revwalk_hide_cb	my_project/libgit2/include/git2/revwalk.h	/^typedef int GIT_CALLBACK(git_revwalk_hide_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_oid * commit_id,void * payload)
git_revwalk_hide_glob	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_hide_glob(git_revwalk *walk, const char *glob)$/;"	f	typeref:typename:int
git_revwalk_hide_head	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_hide_head(git_revwalk *walk)$/;"	f	typeref:typename:int
git_revwalk_hide_ref	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_hide_ref(git_revwalk *walk, const char *refname)$/;"	f	typeref:typename:int
git_revwalk_new	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_new(git_revwalk **revwalk_out, git_repository *repo)$/;"	f	typeref:typename:int
git_revwalk_next	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_next(git_oid *oid, git_revwalk *walk)$/;"	f	typeref:typename:int
git_revwalk_push	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_push(git_revwalk *walk, const git_oid *oid)$/;"	f	typeref:typename:int
git_revwalk_push_glob	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_push_glob(git_revwalk *walk, const char *glob)$/;"	f	typeref:typename:int
git_revwalk_push_head	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_push_head(git_revwalk *walk)$/;"	f	typeref:typename:int
git_revwalk_push_range	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_push_range(git_revwalk *walk, const char *range)$/;"	f	typeref:typename:int
git_revwalk_push_ref	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_push_ref(git_revwalk *walk, const char *refname)$/;"	f	typeref:typename:int
git_revwalk_repository	my_project/libgit2/src/libgit2/revwalk.c	/^git_repository *git_revwalk_repository(git_revwalk *walk)$/;"	f	typeref:typename:git_repository *
git_revwalk_reset	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_reset(git_revwalk *walk)$/;"	f	typeref:typename:int
git_revwalk_simplify_first_parent	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_simplify_first_parent(git_revwalk *walk)$/;"	f	typeref:typename:int
git_revwalk_sorting	my_project/libgit2/src/libgit2/revwalk.c	/^int git_revwalk_sorting(git_revwalk *walk, unsigned int sort_mode)$/;"	f	typeref:typename:int
git_runtime_init	my_project/libgit2/src/util/runtime.c	/^int git_runtime_init(git_runtime_init_fn init_fns[], size_t cnt)$/;"	f	typeref:typename:int
git_runtime_init_count	my_project/libgit2/src/util/runtime.c	/^int git_runtime_init_count(void)$/;"	f	typeref:typename:int
git_runtime_init_fn	my_project/libgit2/src/util/runtime.h	/^typedef int (*git_runtime_init_fn)(void);$/;"	t	typeref:typename:int (*)(void)
git_runtime_shutdown	my_project/libgit2/src/util/runtime.c	/^int git_runtime_shutdown(void)$/;"	f	typeref:typename:int
git_runtime_shutdown_fn	my_project/libgit2/src/util/runtime.h	/^typedef void (*git_runtime_shutdown_fn)(void);$/;"	t	typeref:typename:void (*)(void)
git_runtime_shutdown_register	my_project/libgit2/src/util/runtime.c	/^int git_runtime_shutdown_register(git_runtime_shutdown_fn callback)$/;"	f	typeref:typename:int
git_rwlock	my_project/libgit2/src/util/thread.h	/^#define git_rwlock /;"	d
git_rwlock	my_project/libgit2/src/util/unix/pthread.h	/^#define git_rwlock /;"	d
git_rwlock	my_project/libgit2/src/util/win32/thread.h	/^} git_rwlock;$/;"	t	typeref:struct:__anond08cd1a00308
git_rwlock_free	my_project/libgit2/src/util/thread.h	/^#define git_rwlock_free(/;"	d
git_rwlock_free	my_project/libgit2/src/util/unix/pthread.h	/^#define git_rwlock_free(/;"	d
git_rwlock_free	my_project/libgit2/src/util/win32/thread.c	/^int git_rwlock_free(git_rwlock *lock)$/;"	f	typeref:typename:int
git_rwlock_init	my_project/libgit2/src/util/thread.h	/^#define git_rwlock_init(/;"	d
git_rwlock_init	my_project/libgit2/src/util/unix/pthread.h	/^#define git_rwlock_init(/;"	d
git_rwlock_init	my_project/libgit2/src/util/win32/thread.c	/^int git_rwlock_init(git_rwlock *GIT_RESTRICT lock)$/;"	f	typeref:typename:int
git_rwlock_rdlock	my_project/libgit2/src/util/thread.h	/^#define git_rwlock_rdlock(/;"	d
git_rwlock_rdlock	my_project/libgit2/src/util/unix/pthread.h	/^#define git_rwlock_rdlock(/;"	d
git_rwlock_rdlock	my_project/libgit2/src/util/win32/thread.c	/^int git_rwlock_rdlock(git_rwlock *lock)$/;"	f	typeref:typename:int
git_rwlock_rdunlock	my_project/libgit2/src/util/thread.h	/^#define git_rwlock_rdunlock(/;"	d
git_rwlock_rdunlock	my_project/libgit2/src/util/unix/pthread.h	/^#define git_rwlock_rdunlock(/;"	d
git_rwlock_rdunlock	my_project/libgit2/src/util/win32/thread.c	/^int git_rwlock_rdunlock(git_rwlock *lock)$/;"	f	typeref:typename:int
git_rwlock_wrlock	my_project/libgit2/src/util/thread.h	/^#define git_rwlock_wrlock(/;"	d
git_rwlock_wrlock	my_project/libgit2/src/util/unix/pthread.h	/^#define git_rwlock_wrlock(/;"	d
git_rwlock_wrlock	my_project/libgit2/src/util/win32/thread.c	/^int git_rwlock_wrlock(git_rwlock *lock)$/;"	f	typeref:typename:int
git_rwlock_wrunlock	my_project/libgit2/src/util/thread.h	/^#define git_rwlock_wrunlock(/;"	d
git_rwlock_wrunlock	my_project/libgit2/src/util/unix/pthread.h	/^#define git_rwlock_wrunlock(/;"	d
git_rwlock_wrunlock	my_project/libgit2/src/util/win32/thread.c	/^int git_rwlock_wrunlock(git_rwlock *lock)$/;"	f	typeref:typename:int
git_schannel_stream_new	my_project/libgit2/src/libgit2/streams/schannel.c	/^extern int git_schannel_stream_new($/;"	f	typeref:typename:int
git_schannel_stream_wrap	my_project/libgit2/src/libgit2/streams/schannel.c	/^extern int git_schannel_stream_wrap($/;"	f	typeref:typename:int
git_settings__user_agent	my_project/libgit2/src/libgit2/settings.c	/^const char *git_settings__user_agent(void)$/;"	f	typeref:typename:const char *
git_settings__user_agent_product	my_project/libgit2/src/libgit2/settings.c	/^const char *git_settings__user_agent_product(void)$/;"	f	typeref:typename:const char *
git_settings_global_init	my_project/libgit2/src/libgit2/settings.c	/^int git_settings_global_init(void)$/;"	f	typeref:typename:int
git_signature	my_project/libgit2/include/git2/types.h	/^typedef struct git_signature {$/;"	s
git_signature	my_project/libgit2/include/git2/types.h	/^} git_signature;$/;"	t	typeref:struct:git_signature
git_signature__equal	my_project/libgit2/src/libgit2/signature.c	/^bool git_signature__equal(const git_signature *one, const git_signature *two)$/;"	f	typeref:typename:bool
git_signature__parse	my_project/libgit2/src/libgit2/signature.c	/^int git_signature__parse(git_signature *sig, const char **buffer_out,$/;"	f	typeref:typename:int
git_signature__pdup	my_project/libgit2/src/libgit2/signature.c	/^int git_signature__pdup(git_signature **dest, const git_signature *source, git_pool *pool)$/;"	f	typeref:typename:int
git_signature__writebuf	my_project/libgit2/src/libgit2/signature.c	/^void git_signature__writebuf(git_str *buf, const char *header, const git_signature *sig)$/;"	f	typeref:typename:void
git_signature_default	my_project/libgit2/src/libgit2/signature.c	/^int git_signature_default(git_signature **out, git_repository *repo)$/;"	f	typeref:typename:int
git_signature_default_from_env	my_project/libgit2/src/libgit2/signature.c	/^int git_signature_default_from_env($/;"	f	typeref:typename:int
git_signature_dup	my_project/libgit2/src/libgit2/signature.c	/^int git_signature_dup(git_signature **dest, const git_signature *source)$/;"	f	typeref:typename:int
git_signature_free	my_project/libgit2/src/libgit2/signature.c	/^void git_signature_free(git_signature *sig)$/;"	f	typeref:typename:void
git_signature_from_buffer	my_project/libgit2/src/libgit2/signature.c	/^int git_signature_from_buffer(git_signature **out, const char *buf)$/;"	f	typeref:typename:int
git_signature_new	my_project/libgit2/src/libgit2/signature.c	/^int git_signature_new(git_signature **sig_out, const char *name, const char *email, git_time_t t/;"	f	typeref:typename:int
git_signature_now	my_project/libgit2/src/libgit2/signature.c	/^int git_signature_now($/;"	f	typeref:typename:int
git_smart__cancel	my_project/libgit2/src/libgit2/transports/smart.c	/^static void git_smart__cancel(git_transport *transport)$/;"	f	typeref:typename:void	file:
git_smart__capabilities	my_project/libgit2/src/libgit2/transports/smart.c	/^static int git_smart__capabilities(unsigned int *capabilities, git_transport *transport)$/;"	f	typeref:typename:int	file:
git_smart__close	my_project/libgit2/src/libgit2/transports/smart.c	/^static int git_smart__close(git_transport *transport)$/;"	f	typeref:typename:int	file:
git_smart__connect	my_project/libgit2/src/libgit2/transports/smart.c	/^static int git_smart__connect($/;"	f	typeref:typename:int	file:
git_smart__detect_caps	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^int git_smart__detect_caps($/;"	f	typeref:typename:int
git_smart__download_pack	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^int git_smart__download_pack($/;"	f	typeref:typename:int
git_smart__free	my_project/libgit2/src/libgit2/transports/smart.c	/^static void git_smart__free(git_transport *transport)$/;"	f	typeref:typename:void	file:
git_smart__get_push_stream	my_project/libgit2/src/libgit2/transports/smart.c	/^int git_smart__get_push_stream(transport_smart *t, git_smart_subtransport_stream **stream)$/;"	f	typeref:typename:int
git_smart__is_connected	my_project/libgit2/src/libgit2/transports/smart.c	/^static int git_smart__is_connected(git_transport *transport)$/;"	f	typeref:typename:int	file:
git_smart__ls	my_project/libgit2/src/libgit2/transports/smart.c	/^static int git_smart__ls(const git_remote_head ***out, size_t *size, git_transport *transport)$/;"	f	typeref:typename:int	file:
git_smart__negotiate_fetch	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^int git_smart__negotiate_fetch($/;"	f	typeref:typename:int
git_smart__negotiation_step	my_project/libgit2/src/libgit2/transports/smart.c	/^int git_smart__negotiation_step(git_transport *transport, void *data, size_t len)$/;"	f	typeref:typename:int
git_smart__ofs_delta_enabled	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^bool git_smart__ofs_delta_enabled = true;$/;"	v	typeref:typename:bool
git_smart__oid_type	my_project/libgit2/src/libgit2/transports/smart.c	/^static int git_smart__oid_type(git_oid_t *out, git_transport *transport)$/;"	f	typeref:typename:int	file:
git_smart__push	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^int git_smart__push(git_transport *transport, git_push *push)$/;"	f	typeref:typename:int
git_smart__recv	my_project/libgit2/src/libgit2/transports/smart.c	/^int git_smart__recv(transport_smart *t)$/;"	f	typeref:typename:int
git_smart__reset_stream	my_project/libgit2/src/libgit2/transports/smart.c	/^GIT_INLINE(int) git_smart__reset_stream(transport_smart *t, bool close_subtransport)$/;"	f	typeref:typename:int
git_smart__set_connect_opts	my_project/libgit2/src/libgit2/transports/smart.c	/^static int git_smart__set_connect_opts($/;"	f	typeref:typename:int	file:
git_smart__shallow_roots	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^int git_smart__shallow_roots(git_oidarray *out, git_transport *transport)$/;"	f	typeref:typename:int
git_smart__store_refs	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^int git_smart__store_refs(transport_smart *t, int flushes)$/;"	f	typeref:typename:int
git_smart__update_heads	my_project/libgit2/src/libgit2/transports/smart.c	/^int git_smart__update_heads(transport_smart *t, git_vector *symrefs)$/;"	f	typeref:typename:int
git_smart_service_t	my_project/libgit2/include/git2/sys/transport.h	/^} git_smart_service_t;$/;"	t	typeref:enum:__anon4efa7c750203
git_smart_subtransport	my_project/libgit2/include/git2/sys/transport.h	/^struct git_smart_subtransport {$/;"	s
git_smart_subtransport	my_project/libgit2/include/git2/sys/transport.h	/^typedef struct git_smart_subtransport git_smart_subtransport;$/;"	t	typeref:struct:git_smart_subtransport
git_smart_subtransport_cb	my_project/libgit2/include/git2/sys/transport.h	/^typedef int GIT_CALLBACK(git_smart_subtransport_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_smart_subtransport ** out,git_transport * owner,void * param)
git_smart_subtransport_definition	my_project/libgit2/include/git2/sys/transport.h	/^typedef struct git_smart_subtransport_definition {$/;"	s
git_smart_subtransport_definition	my_project/libgit2/include/git2/sys/transport.h	/^} git_smart_subtransport_definition;$/;"	t	typeref:struct:git_smart_subtransport_definition
git_smart_subtransport_git	my_project/libgit2/src/libgit2/transports/git.c	/^int git_smart_subtransport_git(git_smart_subtransport **out, git_transport *owner, void *param)$/;"	f	typeref:typename:int
git_smart_subtransport_http	my_project/libgit2/src/libgit2/transports/http.c	/^int git_smart_subtransport_http(git_smart_subtransport **out, git_transport *owner, void *param)$/;"	f	typeref:typename:int
git_smart_subtransport_http	my_project/libgit2/src/libgit2/transports/winhttp.c	/^int git_smart_subtransport_http(git_smart_subtransport **out, git_transport *owner, void *param)$/;"	f	typeref:typename:int
git_smart_subtransport_ssh	my_project/libgit2/src/libgit2/transports/ssh.c	/^int git_smart_subtransport_ssh($/;"	f	typeref:typename:int
git_smart_subtransport_ssh_exec	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^int git_smart_subtransport_ssh_exec($/;"	f	typeref:typename:int
git_smart_subtransport_ssh_exec_set_paths	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^int git_smart_subtransport_ssh_exec_set_paths($/;"	f	typeref:typename:int
git_smart_subtransport_ssh_libssh2	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^int git_smart_subtransport_ssh_libssh2($/;"	f	typeref:typename:int
git_smart_subtransport_ssh_libssh2_set_paths	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^int git_smart_subtransport_ssh_libssh2_set_paths($/;"	f	typeref:typename:int
git_smart_subtransport_stream	my_project/libgit2/include/git2/sys/transport.h	/^struct git_smart_subtransport_stream {$/;"	s
git_smart_subtransport_stream	my_project/libgit2/include/git2/sys/transport.h	/^typedef struct git_smart_subtransport_stream git_smart_subtransport_stream;$/;"	t	typeref:struct:git_smart_subtransport_stream
git_socket_stream	my_project/libgit2/src/libgit2/streams/socket.h	/^} git_socket_stream;$/;"	t	typeref:struct:__anon362d01ac0108
git_socket_stream__connect_timeout	my_project/libgit2/src/libgit2/streams/socket.c	/^int git_socket_stream__connect_timeout = 0;$/;"	v	typeref:typename:int
git_socket_stream__timeout	my_project/libgit2/src/libgit2/streams/socket.c	/^int git_socket_stream__timeout = 0;$/;"	v	typeref:typename:int
git_socket_stream_global_init	my_project/libgit2/src/libgit2/streams/socket.c	/^int git_socket_stream_global_init(void)$/;"	f	typeref:typename:int
git_socket_stream_new	my_project/libgit2/src/libgit2/streams/socket.c	/^int git_socket_stream_new($/;"	f	typeref:typename:int
git_sort_t	my_project/libgit2/include/git2/revwalk.h	/^} git_sort_t;$/;"	t	typeref:enum:__anon63eaeaf60103
git_sortedcache	my_project/libgit2/src/util/sortedcache.h	/^} git_sortedcache;$/;"	t	typeref:struct:__anon21e0f34b0108
git_sortedcache_clear	my_project/libgit2/src/util/sortedcache.c	/^int git_sortedcache_clear(git_sortedcache *sc, bool wlock)$/;"	f	typeref:typename:int
git_sortedcache_copy	my_project/libgit2/src/util/sortedcache.c	/^int git_sortedcache_copy($/;"	f	typeref:typename:int
git_sortedcache_entry	my_project/libgit2/src/util/sortedcache.c	/^void *git_sortedcache_entry(git_sortedcache *sc, size_t pos)$/;"	f	typeref:typename:void *
git_sortedcache_entrycount	my_project/libgit2/src/util/sortedcache.c	/^size_t git_sortedcache_entrycount(const git_sortedcache *sc)$/;"	f	typeref:typename:size_t
git_sortedcache_free	my_project/libgit2/src/util/sortedcache.c	/^void git_sortedcache_free(git_sortedcache *sc)$/;"	f	typeref:typename:void
git_sortedcache_free_item_fn	my_project/libgit2/src/util/sortedcache.h	/^typedef void (*git_sortedcache_free_item_fn)(void *payload, void *item);$/;"	t	typeref:typename:void (*)(void * payload,void * item)
git_sortedcache_incref	my_project/libgit2/src/util/sortedcache.c	/^void git_sortedcache_incref(git_sortedcache *sc)$/;"	f	typeref:typename:void
git_sortedcache_lockandload	my_project/libgit2/src/util/sortedcache.c	/^int git_sortedcache_lockandload(git_sortedcache *sc, git_str *buf)$/;"	f	typeref:typename:int
git_sortedcache_lookup	my_project/libgit2/src/util/sortedcache.c	/^void *git_sortedcache_lookup(const git_sortedcache *sc, const char *key)$/;"	f	typeref:typename:void *
git_sortedcache_lookup_index	my_project/libgit2/src/util/sortedcache.c	/^int git_sortedcache_lookup_index($/;"	f	typeref:typename:int
git_sortedcache_new	my_project/libgit2/src/util/sortedcache.c	/^int git_sortedcache_new($/;"	f	typeref:typename:int
git_sortedcache_path	my_project/libgit2/src/util/sortedcache.c	/^const char *git_sortedcache_path(git_sortedcache *sc)$/;"	f	typeref:typename:const char *
git_sortedcache_remove	my_project/libgit2/src/util/sortedcache.c	/^int git_sortedcache_remove(git_sortedcache *sc, size_t pos)$/;"	f	typeref:typename:int
git_sortedcache_rlock	my_project/libgit2/src/util/sortedcache.c	/^int git_sortedcache_rlock(git_sortedcache *sc)$/;"	f	typeref:typename:int
git_sortedcache_runlock	my_project/libgit2/src/util/sortedcache.c	/^void git_sortedcache_runlock(git_sortedcache *sc)$/;"	f	typeref:typename:void
git_sortedcache_updated	my_project/libgit2/src/util/sortedcache.c	/^void git_sortedcache_updated(git_sortedcache *sc)$/;"	f	typeref:typename:void
git_sortedcache_upsert	my_project/libgit2/src/util/sortedcache.c	/^int git_sortedcache_upsert(void **out, git_sortedcache *sc, const char *key)$/;"	f	typeref:typename:int
git_sortedcache_wlock	my_project/libgit2/src/util/sortedcache.c	/^int git_sortedcache_wlock(git_sortedcache *sc)$/;"	f	typeref:typename:int
git_sortedcache_wunlock	my_project/libgit2/src/util/sortedcache.c	/^void git_sortedcache_wunlock(git_sortedcache *sc)$/;"	f	typeref:typename:void
git_stash_apply	my_project/libgit2/src/libgit2/stash.c	/^int git_stash_apply($/;"	f	typeref:typename:int
git_stash_apply_flags	my_project/libgit2/include/git2/stash.h	/^} git_stash_apply_flags;$/;"	t	typeref:enum:__anon0322bc7d0203
git_stash_apply_init_options	my_project/libgit2/src/libgit2/stash.c	/^int git_stash_apply_init_options(git_stash_apply_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_stash_apply_options	my_project/libgit2/include/git2/stash.h	/^typedef struct git_stash_apply_options {$/;"	s
git_stash_apply_options	my_project/libgit2/include/git2/stash.h	/^} git_stash_apply_options;$/;"	t	typeref:struct:git_stash_apply_options
git_stash_apply_options_init	my_project/libgit2/src/libgit2/stash.c	/^int git_stash_apply_options_init(git_stash_apply_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_stash_apply_progress_cb	my_project/libgit2/include/git2/stash.h	/^typedef int GIT_CALLBACK(git_stash_apply_progress_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_stash_apply_progress_t progress,void * payload)
git_stash_apply_progress_t	my_project/libgit2/include/git2/stash.h	/^} git_stash_apply_progress_t;$/;"	t	typeref:enum:__anon0322bc7d0303
git_stash_cb	my_project/libgit2/include/git2/stash.h	/^typedef int GIT_CALLBACK(git_stash_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(size_t index,const char * message,const git_oid * stash_id,void * payload)
git_stash_drop	my_project/libgit2/src/libgit2/stash.c	/^int git_stash_drop($/;"	f	typeref:typename:int
git_stash_flags	my_project/libgit2/include/git2/stash.h	/^} git_stash_flags;$/;"	t	typeref:enum:__anon0322bc7d0103
git_stash_foreach	my_project/libgit2/src/libgit2/stash.c	/^int git_stash_foreach($/;"	f	typeref:typename:int
git_stash_pop	my_project/libgit2/src/libgit2/stash.c	/^int git_stash_pop($/;"	f	typeref:typename:int
git_stash_save	my_project/libgit2/src/libgit2/stash.c	/^int git_stash_save($/;"	f	typeref:typename:int
git_stash_save_options	my_project/libgit2/include/git2/stash.h	/^typedef struct git_stash_save_options {$/;"	s
git_stash_save_options	my_project/libgit2/include/git2/stash.h	/^} git_stash_save_options;$/;"	t	typeref:struct:git_stash_save_options
git_stash_save_options_init	my_project/libgit2/src/libgit2/stash.c	/^int git_stash_save_options_init(git_stash_save_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_stash_save_with_opts	my_project/libgit2/src/libgit2/stash.c	/^int git_stash_save_with_opts($/;"	f	typeref:typename:int
git_staticstr	my_project/libgit2/src/util/staticstr.h	/^} git_staticstr;$/;"	t	typeref:struct:__anon361876470108
git_staticstr_clear	my_project/libgit2/src/util/staticstr.h	/^#define git_staticstr_clear(/;"	d
git_staticstr_consume	my_project/libgit2/src/util/staticstr.h	/^#define git_staticstr_consume(/;"	d
git_staticstr_consume_bytes	my_project/libgit2/src/util/staticstr.h	/^#define git_staticstr_consume_bytes(/;"	d
git_staticstr_increase	my_project/libgit2/src/util/staticstr.h	/^#define git_staticstr_increase(/;"	d
git_staticstr_init	my_project/libgit2/src/util/staticstr.h	/^#define git_staticstr_init(/;"	d
git_staticstr_offset	my_project/libgit2/src/util/staticstr.h	/^#define git_staticstr_offset(/;"	d
git_staticstr_remain	my_project/libgit2/src/util/staticstr.h	/^#define git_staticstr_remain(/;"	d
git_staticstr_with_size	my_project/libgit2/src/util/staticstr.h	/^#define git_staticstr_with_size(/;"	d
git_status_byindex	my_project/libgit2/src/libgit2/status.c	/^const git_status_entry *git_status_byindex(git_status_list *status, size_t i)$/;"	f	typeref:typename:const git_status_entry *
git_status_cb	my_project/libgit2/include/git2/status.h	/^typedef int GIT_CALLBACK(git_status_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * path,unsigned int status_flags,void * payload)
git_status_entry	my_project/libgit2/include/git2/status.h	/^} git_status_entry;$/;"	t	typeref:struct:__anon6794a3fe0508
git_status_file	my_project/libgit2/src/libgit2/status.c	/^int git_status_file($/;"	f	typeref:typename:int
git_status_foreach	my_project/libgit2/src/libgit2/status.c	/^int git_status_foreach(git_repository *repo, git_status_cb cb, void *payload)$/;"	f	typeref:typename:int
git_status_foreach_ext	my_project/libgit2/src/libgit2/status.c	/^int git_status_foreach_ext($/;"	f	typeref:typename:int
git_status_init_options	my_project/libgit2/src/libgit2/status.c	/^int git_status_init_options(git_status_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_status_list	my_project/libgit2/include/git2/types.h	/^typedef struct git_status_list git_status_list;$/;"	t	typeref:struct:git_status_list
git_status_list	my_project/libgit2/src/libgit2/status.h	/^struct git_status_list {$/;"	s
git_status_list_alloc	my_project/libgit2/src/libgit2/status.c	/^static git_status_list *git_status_list_alloc(git_index *index)$/;"	f	typeref:typename:git_status_list *	file:
git_status_list_entrycount	my_project/libgit2/src/libgit2/status.c	/^size_t git_status_list_entrycount(git_status_list *status)$/;"	f	typeref:typename:size_t
git_status_list_free	my_project/libgit2/src/libgit2/status.c	/^void git_status_list_free(git_status_list *status)$/;"	f	typeref:typename:void
git_status_list_get_perfdata	my_project/libgit2/src/libgit2/status.c	/^int git_status_list_get_perfdata($/;"	f	typeref:typename:int
git_status_list_new	my_project/libgit2/src/libgit2/status.c	/^int git_status_list_new($/;"	f	typeref:typename:int
git_status_opt_t	my_project/libgit2/include/git2/status.h	/^} git_status_opt_t;$/;"	t	typeref:enum:__anon6794a3fe0303
git_status_options	my_project/libgit2/include/git2/status.h	/^} git_status_options;$/;"	t	typeref:struct:__anon6794a3fe0408
git_status_options_init	my_project/libgit2/src/libgit2/status.c	/^int git_status_options_init(git_status_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_status_should_ignore	my_project/libgit2/src/libgit2/status.c	/^int git_status_should_ignore($/;"	f	typeref:typename:int
git_status_show_t	my_project/libgit2/include/git2/status.h	/^} git_status_show_t;$/;"	t	typeref:enum:__anon6794a3fe0203
git_status_t	my_project/libgit2/include/git2/status.h	/^} git_status_t;$/;"	t	typeref:enum:__anon6794a3fe0103
git_stdalloc_init_allocator	my_project/libgit2/src/util/allocators/stdalloc.c	/^int git_stdalloc_init_allocator(git_allocator *allocator)$/;"	f	typeref:typename:int
git_str	my_project/libgit2/src/util/git2_util.h	/^typedef struct git_str git_str;$/;"	t	typeref:struct:git_str
git_str	my_project/libgit2/src/util/str.h	/^struct git_str {$/;"	s
git_str_PUTS	my_project/libgit2/src/util/str.h	/^#define git_str_PUTS(/;"	d
git_str__initstr	my_project/libgit2/src/util/str.c	/^char git_str__initstr[1];$/;"	v	typeref:typename:char[1]
git_str__oom	my_project/libgit2/src/util/str.c	/^char git_str__oom[1];$/;"	v	typeref:typename:char[1]
git_str_attach	my_project/libgit2/src/util/str.c	/^int git_str_attach(git_str *buf, char *ptr, size_t asize)$/;"	f	typeref:typename:int
git_str_attach_notowned	my_project/libgit2/src/util/str.c	/^void git_str_attach_notowned(git_str *buf, const char *ptr, size_t size)$/;"	f	typeref:typename:void
git_str_bom_t	my_project/libgit2/src/util/str.h	/^} git_str_bom_t;$/;"	t	typeref:enum:__anon85703a5f0103
git_str_clear	my_project/libgit2/src/util/str.c	/^void git_str_clear(git_str *buf)$/;"	f	typeref:typename:void
git_str_cmp	my_project/libgit2/src/util/str.c	/^int git_str_cmp(const git_str *a, const git_str *b)$/;"	f	typeref:typename:int
git_str_common_prefix	my_project/libgit2/src/util/str.c	/^int git_str_common_prefix(git_str *buf, char *const *const strings, size_t count)$/;"	f	typeref:typename:int
git_str_consume	my_project/libgit2/src/util/str.c	/^void git_str_consume(git_str *buf, const char *end)$/;"	f	typeref:typename:void
git_str_consume_bytes	my_project/libgit2/src/util/str.c	/^void git_str_consume_bytes(git_str *buf, size_t len)$/;"	f	typeref:typename:void
git_str_contains_nul	my_project/libgit2/src/util/str.c	/^int git_str_contains_nul(const git_str *buf)$/;"	f	typeref:typename:int
git_str_copy_cstr	my_project/libgit2/src/util/str.c	/^int git_str_copy_cstr(char *data, size_t datasize, const git_str *buf)$/;"	f	typeref:typename:int
git_str_crlf_to_lf	my_project/libgit2/src/util/str.c	/^int git_str_crlf_to_lf(git_str *tgt, const git_str *src)$/;"	f	typeref:typename:int
git_str_cstr	my_project/libgit2/src/util/str.h	/^GIT_INLINE(const char *) git_str_cstr(const git_str *str)$/;"	f	typeref:typename:const char *
git_str_decode_base64	my_project/libgit2/src/util/str.c	/^int git_str_decode_base64(git_str *buf, const char *base64, size_t len)$/;"	f	typeref:typename:int
git_str_decode_base85	my_project/libgit2/src/util/str.c	/^int git_str_decode_base85($/;"	f	typeref:typename:int
git_str_decode_percent	my_project/libgit2/src/util/str.c	/^int git_str_decode_percent($/;"	f	typeref:typename:int
git_str_detach	my_project/libgit2/src/util/str.c	/^char *git_str_detach(git_str *buf)$/;"	f	typeref:typename:char *
git_str_detect_bom	my_project/libgit2/src/util/str.c	/^int git_str_detect_bom(git_str_bom_t *bom, const git_str *buf)$/;"	f	typeref:typename:int
git_str_dispose	my_project/libgit2/src/util/str.c	/^void git_str_dispose(git_str *buf)$/;"	f	typeref:typename:void
git_str_encode_base64	my_project/libgit2/src/util/str.c	/^int git_str_encode_base64(git_str *buf, const char *data, size_t len)$/;"	f	typeref:typename:int
git_str_encode_base85	my_project/libgit2/src/util/str.c	/^int git_str_encode_base85(git_str *buf, const char *data, size_t len)$/;"	f	typeref:typename:int
git_str_encode_hexstr	my_project/libgit2/src/util/str.c	/^int git_str_encode_hexstr(git_str *str, const char *data, size_t len)$/;"	f	typeref:typename:int
git_str_find	my_project/libgit2/src/util/str.h	/^GIT_INLINE(ssize_t) git_str_find(const git_str *str, char ch)$/;"	f	typeref:typename:ssize_t
git_str_gather_text_stats	my_project/libgit2/src/util/str.c	/^bool git_str_gather_text_stats($/;"	f	typeref:typename:bool
git_str_grow	my_project/libgit2/src/util/str.c	/^int git_str_grow(git_str *buffer, size_t target_size)$/;"	f	typeref:typename:int
git_str_grow_by	my_project/libgit2/src/util/str.c	/^int git_str_grow_by(git_str *buffer, size_t additional_size)$/;"	f	typeref:typename:int
git_str_init	my_project/libgit2/src/util/str.c	/^int git_str_init(git_str *buf, size_t initial_size)$/;"	f	typeref:typename:int
git_str_is_allocated	my_project/libgit2/src/util/str.h	/^GIT_INLINE(bool) git_str_is_allocated(const git_str *str)$/;"	f	typeref:typename:bool
git_str_is_binary	my_project/libgit2/src/util/str.c	/^int git_str_is_binary(const git_str *buf)$/;"	f	typeref:typename:int
git_str_join	my_project/libgit2/src/util/str.c	/^int git_str_join($/;"	f	typeref:typename:int
git_str_join3	my_project/libgit2/src/util/str.c	/^int git_str_join3($/;"	f	typeref:typename:int
git_str_join_n	my_project/libgit2/src/util/str.c	/^int git_str_join_n(git_str *buf, char separator, int nbuf, ...)$/;"	f	typeref:typename:int
git_str_joinpath	my_project/libgit2/src/util/str.h	/^GIT_INLINE(int) git_str_joinpath(git_str *str, const char *a, const char *b)$/;"	f	typeref:typename:int
git_str_len	my_project/libgit2/src/util/str.h	/^GIT_INLINE(size_t) git_str_len(const git_str *str)$/;"	f	typeref:typename:size_t
git_str_lf_to_crlf	my_project/libgit2/src/util/str.c	/^int git_str_lf_to_crlf(git_str *tgt, const git_str *src)$/;"	f	typeref:typename:int
git_str_oom	my_project/libgit2/src/util/str.h	/^GIT_INLINE(bool) git_str_oom(const git_str *str)$/;"	f	typeref:typename:bool
git_str_printf	my_project/libgit2/src/util/str.c	/^int git_str_printf(git_str *buf, const char *format, ...)$/;"	f	typeref:typename:int
git_str_put	my_project/libgit2/src/util/str.c	/^int git_str_put(git_str *buf, const char *data, size_t len)$/;"	f	typeref:typename:int
git_str_put_w	my_project/libgit2/src/util/win32/w32_buffer.c	/^int git_str_put_w(git_str *buf, const wchar_t *string_w, size_t len_w)$/;"	f	typeref:typename:int
git_str_putc	my_project/libgit2/src/util/str.c	/^int git_str_putc(git_str *buf, char c)$/;"	f	typeref:typename:int
git_str_putcn	my_project/libgit2/src/util/str.c	/^int git_str_putcn(git_str *buf, char c, size_t len)$/;"	f	typeref:typename:int
git_str_puts	my_project/libgit2/src/util/str.c	/^int git_str_puts(git_str *buf, const char *string)$/;"	f	typeref:typename:int
git_str_puts_escape_regex	my_project/libgit2/src/util/str.h	/^GIT_INLINE(int) git_str_puts_escape_regex(git_str *str, const char *string)$/;"	f	typeref:typename:int
git_str_puts_escaped	my_project/libgit2/src/util/str.c	/^int git_str_puts_escaped($/;"	f	typeref:typename:int
git_str_quote	my_project/libgit2/src/util/str.c	/^int git_str_quote(git_str *buf)$/;"	f	typeref:typename:int
git_str_rfind	my_project/libgit2/src/util/str.h	/^GIT_INLINE(ssize_t) git_str_rfind(const git_str *str, char ch)$/;"	f	typeref:typename:ssize_t
git_str_rfind_next	my_project/libgit2/src/util/str.h	/^GIT_INLINE(ssize_t) git_str_rfind_next(const git_str *str, char ch)$/;"	f	typeref:typename:ssize_t
git_str_rtrim	my_project/libgit2/src/util/str.c	/^void git_str_rtrim(git_str *buf)$/;"	f	typeref:typename:void
git_str_rtruncate_at_char	my_project/libgit2/src/util/str.c	/^void git_str_rtruncate_at_char(git_str *buf, char separator)$/;"	f	typeref:typename:void
git_str_set	my_project/libgit2/src/util/str.c	/^int git_str_set(git_str *buf, const void *data, size_t len)$/;"	f	typeref:typename:int
git_str_sets	my_project/libgit2/src/util/str.c	/^int git_str_sets(git_str *buf, const char *string)$/;"	f	typeref:typename:int
git_str_shorten	my_project/libgit2/src/util/str.c	/^void git_str_shorten(git_str *buf, size_t amount)$/;"	f	typeref:typename:void
git_str_splice	my_project/libgit2/src/util/str.c	/^int git_str_splice($/;"	f	typeref:typename:int
git_str_swap	my_project/libgit2/src/util/str.c	/^void git_str_swap(git_str *str_a, git_str *str_b)$/;"	f	typeref:typename:void
git_str_text_stats	my_project/libgit2/src/util/str.h	/^} git_str_text_stats;$/;"	t	typeref:struct:__anon85703a5f0208
git_str_truncate	my_project/libgit2/src/util/str.c	/^void git_str_truncate(git_str *buf, size_t len)$/;"	f	typeref:typename:void
git_str_truncate_at_char	my_project/libgit2/src/util/str.c	/^void git_str_truncate_at_char(git_str *buf, char separator)$/;"	f	typeref:typename:void
git_str_try_grow	my_project/libgit2/src/util/str.c	/^int git_str_try_grow($/;"	f	typeref:typename:int
git_str_unescape	my_project/libgit2/src/util/str.c	/^void git_str_unescape(git_str *buf)$/;"	f	typeref:typename:void
git_str_unquote	my_project/libgit2/src/util/str.c	/^int git_str_unquote(git_str *buf)$/;"	f	typeref:typename:int
git_str_vec	my_project/libgit2/src/util/hash.h	/^} git_str_vec;$/;"	t	typeref:struct:__anon187871ca0108
git_str_vprintf	my_project/libgit2/src/util/str.c	/^int git_str_vprintf(git_str *buf, const char *format, va_list ap)$/;"	f	typeref:typename:int
git_stransport_stream_new	my_project/libgit2/src/libgit2/streams/stransport.c	/^int git_stransport_stream_new(git_stream **out, const char *host, const char *port)$/;"	f	typeref:typename:int
git_stransport_stream_wrap	my_project/libgit2/src/libgit2/streams/stransport.c	/^int git_stransport_stream_wrap($/;"	f	typeref:typename:int
git_strarray	my_project/libgit2/include/git2/strarray.h	/^typedef struct git_strarray {$/;"	s
git_strarray	my_project/libgit2/include/git2/strarray.h	/^} git_strarray;$/;"	t	typeref:struct:git_strarray
git_strarray_copy	my_project/libgit2/src/libgit2/strarray.c	/^int git_strarray_copy(git_strarray *tgt, const git_strarray *src)$/;"	f	typeref:typename:int
git_strarray_dispose	my_project/libgit2/src/libgit2/strarray.c	/^void git_strarray_dispose(git_strarray *array)$/;"	f	typeref:typename:void
git_strarray_free	my_project/libgit2/src/libgit2/strarray.c	/^void git_strarray_free(git_strarray *array)$/;"	f	typeref:typename:void
git_stream	my_project/libgit2/include/git2/sys/stream.h	/^typedef struct git_stream {$/;"	s
git_stream	my_project/libgit2/include/git2/sys/stream.h	/^} git_stream;$/;"	t	typeref:struct:git_stream
git_stream__write_full	my_project/libgit2/src/libgit2/stream.h	/^GIT_INLINE(int) git_stream__write_full(git_stream *st, const char *data, size_t len, int flags)$/;"	f	typeref:typename:int
git_stream_bio_method	my_project/libgit2/src/libgit2/streams/openssl.c	/^static BIO_METHOD *git_stream_bio_method;$/;"	v	typeref:typename:BIO_METHOD *	file:
git_stream_cb	my_project/libgit2/include/git2/sys/stream.h	/^typedef int GIT_CALLBACK(git_stream_cb)(git_stream **out, const char *host, const char *port);$/;"	t	typeref:typename:int GIT_CALLBACK ()(git_stream ** out,const char * host,const char * port)
git_stream_certificate	my_project/libgit2/src/libgit2/stream.h	/^GIT_INLINE(int) git_stream_certificate(git_cert **out, git_stream *st)$/;"	f	typeref:typename:int
git_stream_close	my_project/libgit2/src/libgit2/stream.h	/^GIT_INLINE(int) git_stream_close(git_stream *st)$/;"	f	typeref:typename:int
git_stream_connect	my_project/libgit2/src/libgit2/stream.h	/^GIT_INLINE(int) git_stream_connect(git_stream *st)$/;"	f	typeref:typename:int
git_stream_free	my_project/libgit2/src/libgit2/stream.h	/^GIT_INLINE(void) git_stream_free(git_stream *st)$/;"	f	typeref:typename:void
git_stream_is_encrypted	my_project/libgit2/src/libgit2/stream.h	/^GIT_INLINE(int) git_stream_is_encrypted(git_stream *st)$/;"	f	typeref:typename:int
git_stream_read	my_project/libgit2/src/libgit2/stream.h	/^GIT_INLINE(ssize_t) git_stream_read(git_stream *st, void *data, size_t len)$/;"	f	typeref:typename:ssize_t
git_stream_register	my_project/libgit2/src/libgit2/streams/registry.c	/^int git_stream_register(git_stream_t type, git_stream_registration *registration)$/;"	f	typeref:typename:int
git_stream_register_tls	my_project/libgit2/src/libgit2/streams/registry.c	/^int git_stream_register_tls($/;"	f	typeref:typename:int
git_stream_registration	my_project/libgit2/include/git2/sys/stream.h	/^} git_stream_registration;$/;"	t	typeref:struct:__anon3a3bd7540108
git_stream_registry_global_init	my_project/libgit2/src/libgit2/streams/registry.c	/^int git_stream_registry_global_init(void)$/;"	f	typeref:typename:int
git_stream_registry_lookup	my_project/libgit2/src/libgit2/streams/registry.c	/^int git_stream_registry_lookup(git_stream_registration *out, git_stream_t type)$/;"	f	typeref:typename:int
git_stream_set_proxy	my_project/libgit2/src/libgit2/stream.h	/^GIT_INLINE(int) git_stream_set_proxy(git_stream *st, const git_proxy_options *proxy_opts)$/;"	f	typeref:typename:int
git_stream_supports_proxy	my_project/libgit2/src/libgit2/stream.h	/^GIT_INLINE(int) git_stream_supports_proxy(git_stream *st)$/;"	f	typeref:typename:int
git_stream_t	my_project/libgit2/include/git2/sys/stream.h	/^} git_stream_t;$/;"	t	typeref:enum:__anon3a3bd7540203
git_stream_write	my_project/libgit2/src/libgit2/stream.h	/^GIT_INLINE(ssize_t) git_stream_write(git_stream *st, const char *data, size_t len, int flags)$/;"	f	typeref:typename:ssize_t
git_strlist_contains_key	my_project/libgit2/src/util/strlist.c	/^bool git_strlist_contains_key($/;"	f	typeref:typename:bool
git_strlist_contains_prefix	my_project/libgit2/src/util/strlist.c	/^bool git_strlist_contains_prefix($/;"	f	typeref:typename:bool
git_strlist_copy	my_project/libgit2/src/util/strlist.c	/^int git_strlist_copy(char ***out, const char **in, size_t len)$/;"	f	typeref:typename:int
git_strlist_copy_with_null	my_project/libgit2/src/util/strlist.c	/^int git_strlist_copy_with_null(char ***out, const char **in, size_t len)$/;"	f	typeref:typename:int
git_strlist_free	my_project/libgit2/src/util/strlist.c	/^void git_strlist_free(char **strings, size_t len)$/;"	f	typeref:typename:void
git_strlist_free_with_null	my_project/libgit2/src/util/strlist.c	/^void git_strlist_free_with_null(char **strings)$/;"	f	typeref:typename:void
git_strmap	my_project/libgit2/src/util/strmap.h	/^typedef struct kh_str_s git_strmap;$/;"	t	typeref:struct:kh_str_s
git_strmap_clear	my_project/libgit2/src/util/strmap.c	/^void git_strmap_clear(git_strmap *map)$/;"	f	typeref:typename:void
git_strmap_delete	my_project/libgit2/src/util/strmap.c	/^int git_strmap_delete(git_strmap *map, const char *key)$/;"	f	typeref:typename:int
git_strmap_exists	my_project/libgit2/src/util/strmap.c	/^int git_strmap_exists(git_strmap *map, const char *key)$/;"	f	typeref:typename:int
git_strmap_foreach	my_project/libgit2/src/util/strmap.h	/^#define git_strmap_foreach(/;"	d
git_strmap_foreach_value	my_project/libgit2/src/util/strmap.h	/^#define git_strmap_foreach_value(/;"	d
git_strmap_free	my_project/libgit2/src/util/strmap.c	/^void git_strmap_free(git_strmap *map)$/;"	f	typeref:typename:void
git_strmap_get	my_project/libgit2/src/util/strmap.c	/^void *git_strmap_get(git_strmap *map, const char *key)$/;"	f	typeref:typename:void *
git_strmap_iterate	my_project/libgit2/src/util/strmap.c	/^int git_strmap_iterate(void **value, git_strmap *map, size_t *iter, const char **key)$/;"	f	typeref:typename:int
git_strmap_set	my_project/libgit2/src/util/strmap.c	/^int git_strmap_set(git_strmap *map, const char *key, void *value)$/;"	f	typeref:typename:int
git_strmap_size	my_project/libgit2/src/util/strmap.c	/^size_t git_strmap_size(git_strmap *map)$/;"	f	typeref:typename:size_t
git_style_unc_path	my_project/libgit2/tests/libgit2/clone/local.c	/^static int git_style_unc_path(git_str *buf, const char *host, const char *path)$/;"	f	typeref:typename:int	file:
git_submodule	my_project/libgit2/include/git2/types.h	/^typedef struct git_submodule git_submodule;$/;"	t	typeref:struct:git_submodule
git_submodule	my_project/libgit2/src/libgit2/submodule.h	/^struct git_submodule {$/;"	s
git_submodule__lookup_with_cache	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule__lookup_with_cache($/;"	f	typeref:typename:int
git_submodule__map	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule__map(git_repository *repo, git_strmap *map)$/;"	f	typeref:typename:int
git_submodule__open	my_project/libgit2/src/libgit2/submodule.c	/^static int git_submodule__open($/;"	f	typeref:typename:int	file:
git_submodule__resolve_url	my_project/libgit2/src/libgit2/submodule.c	/^static int git_submodule__resolve_url($/;"	f	typeref:typename:int	file:
git_submodule__status	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule__status($/;"	f	typeref:typename:int
git_submodule_add_finalize	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_add_finalize(git_submodule *sm)$/;"	f	typeref:typename:int
git_submodule_add_setup	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_add_setup($/;"	f	typeref:typename:int
git_submodule_add_to_index	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_add_to_index(git_submodule *sm, int write_index)$/;"	f	typeref:typename:int
git_submodule_branch	my_project/libgit2/src/libgit2/submodule.c	/^const char *git_submodule_branch(git_submodule *submodule)$/;"	f	typeref:typename:const char *
git_submodule_cache_free	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_cache_free(git_strmap *cache)$/;"	f	typeref:typename:int
git_submodule_cache_init	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_cache_init(git_strmap **out, git_repository *repo)$/;"	f	typeref:typename:int
git_submodule_cb	my_project/libgit2/include/git2/submodule.h	/^typedef int GIT_CALLBACK(git_submodule_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(git_submodule * sm,const char * name,void * payload)
git_submodule_clone	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_clone(git_repository **out, git_submodule *submodule, const git_submodule_upda/;"	f	typeref:typename:int
git_submodule_dup	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_dup(git_submodule **out, git_submodule *source)$/;"	f	typeref:typename:int
git_submodule_fetch_recurse_submodules	my_project/libgit2/src/libgit2/submodule.c	/^git_submodule_recurse_t git_submodule_fetch_recurse_submodules($/;"	f	typeref:typename:git_submodule_recurse_t
git_submodule_foreach	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_foreach($/;"	f	typeref:typename:int
git_submodule_free	my_project/libgit2/src/libgit2/submodule.c	/^void git_submodule_free(git_submodule *sm)$/;"	f	typeref:typename:void
git_submodule_head_id	my_project/libgit2/src/libgit2/submodule.c	/^const git_oid *git_submodule_head_id(git_submodule *submodule)$/;"	f	typeref:typename:const git_oid *
git_submodule_ignore	my_project/libgit2/src/libgit2/submodule.c	/^git_submodule_ignore_t git_submodule_ignore(git_submodule *submodule)$/;"	f	typeref:typename:git_submodule_ignore_t
git_submodule_ignore_t	my_project/libgit2/include/git2/types.h	/^} git_submodule_ignore_t;$/;"	t	typeref:enum:__anon5cceb56f0603
git_submodule_index_id	my_project/libgit2/src/libgit2/submodule.c	/^const git_oid *git_submodule_index_id(git_submodule *submodule)$/;"	f	typeref:typename:const git_oid *
git_submodule_init	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_init(git_submodule *sm, int overwrite)$/;"	f	typeref:typename:int
git_submodule_location	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_location(unsigned int *location, git_submodule *sm)$/;"	f	typeref:typename:int
git_submodule_lookup	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_lookup($/;"	f	typeref:typename:int
git_submodule_name	my_project/libgit2/src/libgit2/submodule.c	/^const char *git_submodule_name(git_submodule *submodule)$/;"	f	typeref:typename:const char *
git_submodule_name_is_valid	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_name_is_valid(git_repository *repo, const char *name, int flags)$/;"	f	typeref:typename:int
git_submodule_open	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_open(git_repository **subrepo, git_submodule *sm)$/;"	f	typeref:typename:int
git_submodule_open_bare	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_open_bare(git_repository **subrepo, git_submodule *sm)$/;"	f	typeref:typename:int
git_submodule_owner	my_project/libgit2/src/libgit2/submodule.c	/^git_repository *git_submodule_owner(git_submodule *submodule)$/;"	f	typeref:typename:git_repository *
git_submodule_parse_ignore	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_parse_ignore(git_submodule_ignore_t *out, const char *value)$/;"	f	typeref:typename:int
git_submodule_parse_update	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_parse_update(git_submodule_update_t *out, const char *value)$/;"	f	typeref:typename:int
git_submodule_path	my_project/libgit2/src/libgit2/submodule.c	/^const char *git_submodule_path(git_submodule *submodule)$/;"	f	typeref:typename:const char *
git_submodule_recurse_t	my_project/libgit2/include/git2/types.h	/^} git_submodule_recurse_t;$/;"	t	typeref:enum:__anon5cceb56f0703
git_submodule_reload	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_reload(git_submodule *sm, int force)$/;"	f	typeref:typename:int
git_submodule_repo_init	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_repo_init($/;"	f	typeref:typename:int
git_submodule_resolve_url	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_resolve_url($/;"	f	typeref:typename:int
git_submodule_set_branch	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_set_branch(git_repository *repo, const char *name, const char *branch)$/;"	f	typeref:typename:int
git_submodule_set_fetch_recurse_submodules	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_set_fetch_recurse_submodules(git_repository *repo, const char *name, git_submo/;"	f	typeref:typename:int
git_submodule_set_ignore	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_set_ignore(git_repository *repo, const char *name, git_submodule_ignore_t igno/;"	f	typeref:typename:int
git_submodule_set_update	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_set_update(git_repository *repo, const char *name, git_submodule_update_t upda/;"	f	typeref:typename:int
git_submodule_set_url	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_set_url(git_repository *repo, const char *name, const char *url)$/;"	f	typeref:typename:int
git_submodule_status	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_status(unsigned int *status, git_repository *repo, const char *name, git_submo/;"	f	typeref:typename:int
git_submodule_status_t	my_project/libgit2/include/git2/submodule.h	/^} git_submodule_status_t;$/;"	t	typeref:enum:__anon9fe91e8a0103
git_submodule_sync	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_sync(git_submodule *sm)$/;"	f	typeref:typename:int
git_submodule_update	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_update(git_submodule *sm, int init, git_submodule_update_options *_update_opti/;"	f	typeref:typename:int
git_submodule_update_init_options	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_update_init_options(git_submodule_update_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_submodule_update_options	my_project/libgit2/include/git2/submodule.h	/^typedef struct git_submodule_update_options {$/;"	s
git_submodule_update_options	my_project/libgit2/include/git2/submodule.h	/^} git_submodule_update_options;$/;"	t	typeref:struct:git_submodule_update_options
git_submodule_update_options_init	my_project/libgit2/src/libgit2/submodule.c	/^int git_submodule_update_options_init(git_submodule_update_options *opts, unsigned int version)$/;"	f	typeref:typename:int
git_submodule_update_repo_init_cb	my_project/libgit2/src/libgit2/submodule.c	/^static int git_submodule_update_repo_init_cb($/;"	f	typeref:typename:int	file:
git_submodule_update_strategy	my_project/libgit2/src/libgit2/submodule.c	/^git_submodule_update_t git_submodule_update_strategy(git_submodule *submodule)$/;"	f	typeref:typename:git_submodule_update_t
git_submodule_update_t	my_project/libgit2/include/git2/types.h	/^} git_submodule_update_t;$/;"	t	typeref:enum:__anon5cceb56f0503
git_submodule_url	my_project/libgit2/src/libgit2/submodule.c	/^const char *git_submodule_url(git_submodule *submodule)$/;"	f	typeref:typename:const char *
git_submodule_wd_id	my_project/libgit2/src/libgit2/submodule.c	/^const git_oid *git_submodule_wd_id(git_submodule *submodule)$/;"	f	typeref:typename:const git_oid *
git_subtransport	my_project/libgit2/src/libgit2/transports/git.c	/^} git_subtransport;$/;"	t	typeref:struct:__anoneb1923e30208	file:
git_subtransport_definition	my_project/libgit2/src/libgit2/transport.c	/^static git_smart_subtransport_definition git_subtransport_definition = { git_smart_subtransport_/;"	v	typeref:typename:git_smart_subtransport_definition	file:
git_sysdir__dir	my_project/libgit2/src/libgit2/sysdir.c	/^struct git_sysdir__dir {$/;"	s	file:
git_sysdir__dirs	my_project/libgit2/src/libgit2/sysdir.c	/^static struct git_sysdir__dir git_sysdir__dirs[] = {$/;"	v	typeref:struct:git_sysdir__dir[]	file:
git_sysdir_check_selector	my_project/libgit2/src/libgit2/sysdir.c	/^static int git_sysdir_check_selector(git_sysdir_t which)$/;"	f	typeref:typename:int	file:
git_sysdir_expand_global_file	my_project/libgit2/src/libgit2/sysdir.c	/^int git_sysdir_expand_global_file(git_str *path, const char *filename)$/;"	f	typeref:typename:int
git_sysdir_expand_homedir_file	my_project/libgit2/src/libgit2/sysdir.c	/^int git_sysdir_expand_homedir_file(git_str *path, const char *filename)$/;"	f	typeref:typename:int
git_sysdir_find_global_file	my_project/libgit2/src/libgit2/sysdir.c	/^int git_sysdir_find_global_file(git_str *path, const char *filename)$/;"	f	typeref:typename:int
git_sysdir_find_homedir	my_project/libgit2/src/libgit2/sysdir.c	/^int git_sysdir_find_homedir(git_str *path)$/;"	f	typeref:typename:int
git_sysdir_find_in_dirlist	my_project/libgit2/src/libgit2/sysdir.c	/^static int git_sysdir_find_in_dirlist($/;"	f	typeref:typename:int	file:
git_sysdir_find_programdata_file	my_project/libgit2/src/libgit2/sysdir.c	/^int git_sysdir_find_programdata_file(git_str *path, const char *filename)$/;"	f	typeref:typename:int
git_sysdir_find_system_file	my_project/libgit2/src/libgit2/sysdir.c	/^int git_sysdir_find_system_file(git_str *path, const char *filename)$/;"	f	typeref:typename:int
git_sysdir_find_template_dir	my_project/libgit2/src/libgit2/sysdir.c	/^int git_sysdir_find_template_dir(git_str *path)$/;"	f	typeref:typename:int
git_sysdir_find_xdg_file	my_project/libgit2/src/libgit2/sysdir.c	/^int git_sysdir_find_xdg_file(git_str *path, const char *filename)$/;"	f	typeref:typename:int
git_sysdir_get	my_project/libgit2/src/libgit2/sysdir.c	/^int git_sysdir_get(const git_str **out, git_sysdir_t which)$/;"	f	typeref:typename:int
git_sysdir_global_init	my_project/libgit2/src/libgit2/sysdir.c	/^int git_sysdir_global_init(void)$/;"	f	typeref:typename:int
git_sysdir_global_shutdown	my_project/libgit2/src/libgit2/sysdir.c	/^static void git_sysdir_global_shutdown(void)$/;"	f	typeref:typename:void	file:
git_sysdir_guess_global_dirs	my_project/libgit2/src/libgit2/sysdir.c	/^static int git_sysdir_guess_global_dirs(git_str *out)$/;"	f	typeref:typename:int	file:
git_sysdir_guess_home_dirs	my_project/libgit2/src/libgit2/sysdir.c	/^static int git_sysdir_guess_home_dirs(git_str *out)$/;"	f	typeref:typename:int	file:
git_sysdir_guess_programdata_dirs	my_project/libgit2/src/libgit2/sysdir.c	/^static int git_sysdir_guess_programdata_dirs(git_str *out)$/;"	f	typeref:typename:int	file:
git_sysdir_guess_system_dirs	my_project/libgit2/src/libgit2/sysdir.c	/^static int git_sysdir_guess_system_dirs(git_str *out)$/;"	f	typeref:typename:int	file:
git_sysdir_guess_template_dirs	my_project/libgit2/src/libgit2/sysdir.c	/^static int git_sysdir_guess_template_dirs(git_str *out)$/;"	f	typeref:typename:int	file:
git_sysdir_guess_xdg_dirs	my_project/libgit2/src/libgit2/sysdir.c	/^static int git_sysdir_guess_xdg_dirs(git_str *out)$/;"	f	typeref:typename:int	file:
git_sysdir_reset	my_project/libgit2/src/libgit2/sysdir.c	/^int git_sysdir_reset(void)$/;"	f	typeref:typename:int
git_sysdir_set	my_project/libgit2/src/libgit2/sysdir.c	/^int git_sysdir_set(git_sysdir_t which, const char *search_path)$/;"	f	typeref:typename:int
git_sysdir_t	my_project/libgit2/src/libgit2/sysdir.h	/^} git_sysdir_t;$/;"	t	typeref:enum:__anon71a311330103
git_tag	my_project/libgit2/include/git2/types.h	/^typedef struct git_tag git_tag;$/;"	t	typeref:struct:git_tag
git_tag	my_project/libgit2/src/libgit2/tag.h	/^struct git_tag {$/;"	s
git_tag__free	my_project/libgit2/src/libgit2/tag.c	/^void git_tag__free(void *_tag)$/;"	f	typeref:typename:void
git_tag__parse	my_project/libgit2/src/libgit2/tag.c	/^int git_tag__parse($/;"	f	typeref:typename:int
git_tag__parse_raw	my_project/libgit2/src/libgit2/tag.c	/^int git_tag__parse_raw($/;"	f	typeref:typename:int
git_tag_annotation_create	my_project/libgit2/src/libgit2/tag.c	/^int git_tag_annotation_create($/;"	f	typeref:typename:int
git_tag_create	my_project/libgit2/src/libgit2/tag.c	/^int git_tag_create($/;"	f	typeref:typename:int
git_tag_create__internal	my_project/libgit2/src/libgit2/tag.c	/^static int git_tag_create__internal($/;"	f	typeref:typename:int	file:
git_tag_create_from_buffer	my_project/libgit2/src/libgit2/tag.c	/^int git_tag_create_from_buffer(git_oid *oid, git_repository *repo, const char *buffer, int allow/;"	f	typeref:typename:int
git_tag_create_frombuffer	my_project/libgit2/src/libgit2/tag.c	/^int git_tag_create_frombuffer(git_oid *oid, git_repository *repo, const char *buffer, int allow_/;"	f	typeref:typename:int
git_tag_create_lightweight	my_project/libgit2/src/libgit2/tag.c	/^int git_tag_create_lightweight($/;"	f	typeref:typename:int
git_tag_delete	my_project/libgit2/src/libgit2/tag.c	/^int git_tag_delete(git_repository *repo, const char *tag_name)$/;"	f	typeref:typename:int
git_tag_dup	my_project/libgit2/src/libgit2/object_api.c	/^int git_tag_dup(git_tag **out, git_tag *obj)$/;"	f	typeref:typename:int
git_tag_foreach	my_project/libgit2/src/libgit2/tag.c	/^int git_tag_foreach(git_repository *repo, git_tag_foreach_cb cb, void *cb_data)$/;"	f	typeref:typename:int
git_tag_foreach_cb	my_project/libgit2/include/git2/tag.h	/^typedef int GIT_CALLBACK(git_tag_foreach_cb)(const char *name, git_oid *oid, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * name,git_oid * oid,void * payload)
git_tag_free	my_project/libgit2/src/libgit2/object_api.c	/^void git_tag_free(git_tag *obj)$/;"	f	typeref:typename:void
git_tag_id	my_project/libgit2/src/libgit2/object_api.c	/^const git_oid *git_tag_id(const git_tag *obj)$/;"	f	typeref:typename:const git_oid *
git_tag_list	my_project/libgit2/src/libgit2/tag.c	/^int git_tag_list(git_strarray *tag_names, git_repository *repo)$/;"	f	typeref:typename:int
git_tag_list_match	my_project/libgit2/src/libgit2/tag.c	/^int git_tag_list_match(git_strarray *tag_names, const char *pattern, git_repository *repo)$/;"	f	typeref:typename:int
git_tag_lookup	my_project/libgit2/src/libgit2/object_api.c	/^int git_tag_lookup(git_tag **out, git_repository *repo, const git_oid *id)$/;"	f	typeref:typename:int
git_tag_lookup_prefix	my_project/libgit2/src/libgit2/object_api.c	/^int git_tag_lookup_prefix(git_tag **out, git_repository *repo, const git_oid *id, size_t len)$/;"	f	typeref:typename:int
git_tag_message	my_project/libgit2/src/libgit2/tag.c	/^const char *git_tag_message(const git_tag *t)$/;"	f	typeref:typename:const char *
git_tag_name	my_project/libgit2/src/libgit2/tag.c	/^const char *git_tag_name(const git_tag *t)$/;"	f	typeref:typename:const char *
git_tag_name_is_valid	my_project/libgit2/src/libgit2/tag.c	/^int git_tag_name_is_valid(int *valid, const char *name)$/;"	f	typeref:typename:int
git_tag_owner	my_project/libgit2/src/libgit2/object_api.c	/^git_repository *git_tag_owner(const git_tag *obj)$/;"	f	typeref:typename:git_repository *
git_tag_peel	my_project/libgit2/src/libgit2/tag.c	/^int git_tag_peel(git_object **tag_target, const git_tag *tag)$/;"	f	typeref:typename:int
git_tag_tagger	my_project/libgit2/src/libgit2/tag.c	/^const git_signature *git_tag_tagger(const git_tag *t)$/;"	f	typeref:typename:const git_signature *
git_tag_target	my_project/libgit2/src/libgit2/tag.c	/^int git_tag_target(git_object **target, const git_tag *t)$/;"	f	typeref:typename:int
git_tag_target_id	my_project/libgit2/src/libgit2/tag.c	/^const git_oid *git_tag_target_id(const git_tag *t)$/;"	f	typeref:typename:const git_oid *
git_tag_target_type	my_project/libgit2/src/libgit2/tag.c	/^git_object_t git_tag_target_type(const git_tag *t)$/;"	f	typeref:typename:git_object_t
git_thread	my_project/libgit2/src/util/thread.h	/^#define git_thread /;"	d
git_thread	my_project/libgit2/src/util/unix/pthread.h	/^} git_thread;$/;"	t	typeref:struct:__anon6b9c93610108
git_thread	my_project/libgit2/src/util/win32/thread.h	/^} git_thread;$/;"	t	typeref:struct:__anond08cd1a00108
git_thread_create	my_project/libgit2/src/util/thread.h	/^#define git_thread_create(/;"	d
git_thread_create	my_project/libgit2/src/util/unix/pthread.h	/^#define git_thread_create(/;"	d
git_thread_create	my_project/libgit2/src/util/win32/thread.c	/^int git_thread_create($/;"	f	typeref:typename:int
git_thread_currentid	my_project/libgit2/src/util/unix/pthread.h	/^#define git_thread_currentid(/;"	d
git_thread_currentid	my_project/libgit2/src/util/win32/thread.c	/^size_t git_thread_currentid(void)$/;"	f	typeref:typename:size_t
git_thread_exit	my_project/libgit2/src/util/unix/pthread.h	/^#define git_thread_exit(/;"	d
git_thread_exit	my_project/libgit2/src/util/win32/thread.c	/^void git_thread_exit(void *value)$/;"	f	typeref:typename:void
git_thread_join	my_project/libgit2/src/util/thread.h	/^#define git_thread_join(/;"	d
git_thread_join	my_project/libgit2/src/util/unix/pthread.h	/^#define git_thread_join(/;"	d
git_thread_join	my_project/libgit2/src/util/win32/thread.c	/^int git_thread_join($/;"	f	typeref:typename:int
git_thread_yield	my_project/libgit2/tests/libgit2/threads/diff.c	/^#  define git_thread_yield(/;"	d	file:
git_thread_yield	my_project/libgit2/tests/libgit2/threads/diff.c	/^# define git_thread_yield(/;"	d	file:
git_threads_global_init	my_project/libgit2/src/util/thread.h	/^#define git_threads_global_init	/;"	d
git_threads_global_init	my_project/libgit2/src/util/unix/pthread.h	/^GIT_INLINE(int) git_threads_global_init(void) { return 0; }$/;"	f	typeref:typename:int
git_threads_global_init	my_project/libgit2/src/util/win32/thread.c	/^int git_threads_global_init(void)$/;"	f	typeref:typename:int
git_threads_global_shutdown	my_project/libgit2/src/util/win32/thread.c	/^static void git_threads_global_shutdown(void)$/;"	f	typeref:typename:void	file:
git_time	my_project/libgit2/include/git2/types.h	/^typedef struct git_time {$/;"	s
git_time	my_project/libgit2/include/git2/types.h	/^} git_time;$/;"	t	typeref:struct:git_time
git_time_monotonic	my_project/libgit2/src/util/util.h	/^GIT_INLINE(uint64_t) git_time_monotonic(void)$/;"	f	typeref:typename:uint64_t
git_time_t	my_project/libgit2/include/git2/types.h	/^typedef __time64_t git_time_t;$/;"	t	typeref:typename:__time64_t
git_tls_stream_new	my_project/libgit2/src/libgit2/streams/tls.c	/^int git_tls_stream_new(git_stream **out, const char *host, const char *port)$/;"	f	typeref:typename:int
git_tls_stream_wrap	my_project/libgit2/src/libgit2/streams/tls.c	/^int git_tls_stream_wrap(git_stream **out, git_stream *in, const char *host)$/;"	f	typeref:typename:int
git_tlsdata_dispose	my_project/libgit2/src/util/thread.c	/^int git_tlsdata_dispose(git_tlsdata_key key)$/;"	f	typeref:typename:int
git_tlsdata_get	my_project/libgit2/src/util/thread.c	/^void *git_tlsdata_get(git_tlsdata_key key)$/;"	f	typeref:typename:void *
git_tlsdata_init	my_project/libgit2/src/util/thread.c	/^int git_tlsdata_init(git_tlsdata_key *key, void (GIT_SYSTEM_CALL *destroy_fn)(void *))$/;"	f	typeref:typename:int
git_tlsdata_key	my_project/libgit2/src/util/thread.h	/^# define git_tlsdata_key /;"	d
git_tlsdata_set	my_project/libgit2/src/util/thread.c	/^int git_tlsdata_set(git_tlsdata_key key, void *value)$/;"	f	typeref:typename:int
git_trace	my_project/libgit2/src/libgit2/trace.h	/^GIT_INLINE(void) git_trace(git_trace_level_t level, const char *fmt, ...)$/;"	f	typeref:typename:void
git_trace__data	my_project/libgit2/src/libgit2/trace.c	/^struct git_trace_data git_trace__data = {0};$/;"	v	typeref:struct:git_trace_data
git_trace__write_fmt	my_project/libgit2/src/libgit2/trace.h	/^GIT_INLINE(void) git_trace__write_fmt($/;"	f	typeref:typename:void
git_trace_callback	my_project/libgit2/include/git2/deprecated.h	/^typedef git_trace_cb git_trace_callback;$/;"	t	typeref:typename:git_trace_cb
git_trace_cb	my_project/libgit2/include/git2/trace.h	/^typedef void GIT_CALLBACK(git_trace_cb)(git_trace_level_t level, const char *msg);$/;"	t	typeref:typename:void GIT_CALLBACK ()(git_trace_level_t level,const char * msg)
git_trace_cb	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^	void (*git_trace_cb)(git_trace_level_t level, const char *msg);$/;"	m	struct:method	typeref:typename:void (*)(git_trace_level_t level,const char * msg)	file:
git_trace_data	my_project/libgit2/src/libgit2/trace.h	/^struct git_trace_data {$/;"	s
git_trace_level	my_project/libgit2/src/libgit2/trace.h	/^#define git_trace_level(/;"	d
git_trace_level_t	my_project/libgit2/include/git2/trace.h	/^} git_trace_level_t;$/;"	t	typeref:enum:__anon4b69d5290103
git_trace_set	my_project/libgit2/src/libgit2/trace.c	/^int git_trace_set(git_trace_level_t level, git_trace_cb callback)$/;"	f	typeref:typename:int
git_transaction	my_project/libgit2/include/git2/types.h	/^typedef struct git_transaction git_transaction;$/;"	t	typeref:struct:git_transaction
git_transaction	my_project/libgit2/src/libgit2/transaction.c	/^struct git_transaction {$/;"	s	file:
git_transaction_commit	my_project/libgit2/src/libgit2/transaction.c	/^int git_transaction_commit(git_transaction *tx)$/;"	f	typeref:typename:int
git_transaction_config_new	my_project/libgit2/src/libgit2/transaction.c	/^int git_transaction_config_new($/;"	f	typeref:typename:int
git_transaction_free	my_project/libgit2/src/libgit2/transaction.c	/^void git_transaction_free(git_transaction *tx)$/;"	f	typeref:typename:void
git_transaction_lock_ref	my_project/libgit2/src/libgit2/transaction.c	/^int git_transaction_lock_ref(git_transaction *tx, const char *refname)$/;"	f	typeref:typename:int
git_transaction_new	my_project/libgit2/src/libgit2/transaction.c	/^int git_transaction_new(git_transaction **out, git_repository *repo)$/;"	f	typeref:typename:int
git_transaction_remove	my_project/libgit2/src/libgit2/transaction.c	/^int git_transaction_remove(git_transaction *tx, const char *refname)$/;"	f	typeref:typename:int
git_transaction_set_reflog	my_project/libgit2/src/libgit2/transaction.c	/^int git_transaction_set_reflog(git_transaction *tx, const char *refname, const git_reflog *reflo/;"	f	typeref:typename:int
git_transaction_set_symbolic_target	my_project/libgit2/src/libgit2/transaction.c	/^int git_transaction_set_symbolic_target(git_transaction *tx, const char *refname, const char *ta/;"	f	typeref:typename:int
git_transaction_set_target	my_project/libgit2/src/libgit2/transaction.c	/^int git_transaction_set_target(git_transaction *tx, const char *refname, const git_oid *target, /;"	f	typeref:typename:int
git_transfer_progress	my_project/libgit2/include/git2/deprecated.h	/^typedef git_indexer_progress git_transfer_progress;$/;"	t	typeref:typename:git_indexer_progress
git_transfer_progress_cb	my_project/libgit2/include/git2/deprecated.h	/^typedef git_indexer_progress_cb git_transfer_progress_cb;$/;"	t	typeref:typename:git_indexer_progress_cb
git_transport	my_project/libgit2/include/git2/sys/transport.h	/^struct git_transport {$/;"	s
git_transport	my_project/libgit2/include/git2/types.h	/^typedef struct git_transport git_transport;$/;"	t	typeref:struct:git_transport
git_transport_cb	my_project/libgit2/include/git2/transport.h	/^typedef int GIT_CALLBACK(git_transport_cb)(git_transport **out, git_remote *owner, void *param);$/;"	t	typeref:typename:int GIT_CALLBACK ()(git_transport ** out,git_remote * owner,void * param)
git_transport_certificate_check_cb	my_project/libgit2/include/git2/cert.h	/^typedef int GIT_CALLBACK(git_transport_certificate_check_cb)(git_cert *cert, int valid, const ch/;"	t	typeref:typename:int GIT_CALLBACK ()(git_cert * cert,int valid,const char * host,void * payload)
git_transport_init	my_project/libgit2/src/libgit2/transport.c	/^int git_transport_init(git_transport *opts, unsigned int version)$/;"	f	typeref:typename:int
git_transport_local	my_project/libgit2/src/libgit2/transports/local.c	/^int git_transport_local(git_transport **out, git_remote *owner, void *param)$/;"	f	typeref:typename:int
git_transport_message_cb	my_project/libgit2/include/git2/transport.h	/^typedef int GIT_CALLBACK(git_transport_message_cb)(const char *str, int len, void *payload);$/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * str,int len,void * payload)
git_transport_new	my_project/libgit2/src/libgit2/transport.c	/^int git_transport_new(git_transport **out, git_remote *owner, const char *url)$/;"	f	typeref:typename:int
git_transport_register	my_project/libgit2/src/libgit2/transport.c	/^int git_transport_register($/;"	f	typeref:typename:int
git_transport_remote_connect_options	my_project/libgit2/src/libgit2/transports/smart.c	/^int git_transport_remote_connect_options($/;"	f	typeref:typename:int
git_transport_smart	my_project/libgit2/src/libgit2/transports/smart.c	/^int git_transport_smart(git_transport **out, git_remote *owner, void *param)$/;"	f	typeref:typename:int
git_transport_smart_certificate_check	my_project/libgit2/src/libgit2/transports/smart.c	/^int git_transport_smart_certificate_check(git_transport *transport, git_cert *cert, int valid, c/;"	f	typeref:typename:int
git_transport_smart_credentials	my_project/libgit2/src/libgit2/transports/smart.c	/^int git_transport_smart_credentials(git_credential **out, git_transport *transport, const char */;"	f	typeref:typename:int
git_transport_ssh_libssh2_global_init	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^int git_transport_ssh_libssh2_global_init(void)$/;"	f	typeref:typename:int
git_transport_ssh_with_paths	my_project/libgit2/src/libgit2/transports/ssh.c	/^int git_transport_ssh_with_paths($/;"	f	typeref:typename:int
git_transport_unregister	my_project/libgit2/src/libgit2/transport.c	/^int git_transport_unregister(const char *scheme)$/;"	f	typeref:typename:int
git_tree	my_project/libgit2/include/git2/types.h	/^typedef struct git_tree git_tree;$/;"	t	typeref:struct:git_tree
git_tree	my_project/libgit2/src/libgit2/tree.h	/^struct git_tree {$/;"	s
git_tree__free	my_project/libgit2/src/libgit2/tree.c	/^void git_tree__free(void *_tree)$/;"	f	typeref:typename:void
git_tree__parse	my_project/libgit2/src/libgit2/tree.c	/^int git_tree__parse(void *_tree, git_odb_object *odb_obj, git_oid_t oid_type)$/;"	f	typeref:typename:int
git_tree__parse_raw	my_project/libgit2/src/libgit2/tree.c	/^int git_tree__parse_raw(void *_tree, const char *data, size_t size, git_oid_t oid_type)$/;"	f	typeref:typename:int
git_tree__write_index	my_project/libgit2/src/libgit2/tree.c	/^int git_tree__write_index($/;"	f	typeref:typename:int
git_tree_cache	my_project/libgit2/src/libgit2/tree-cache.h	/^typedef struct git_tree_cache {$/;"	s
git_tree_cache	my_project/libgit2/src/libgit2/tree-cache.h	/^} git_tree_cache;$/;"	t	typeref:struct:git_tree_cache
git_tree_cache_get	my_project/libgit2/src/libgit2/tree-cache.c	/^const git_tree_cache *git_tree_cache_get(const git_tree_cache *tree, const char *path)$/;"	f	typeref:typename:const git_tree_cache *
git_tree_cache_invalidate_path	my_project/libgit2/src/libgit2/tree-cache.c	/^void git_tree_cache_invalidate_path(git_tree_cache *tree, const char *path)$/;"	f	typeref:typename:void
git_tree_cache_new	my_project/libgit2/src/libgit2/tree-cache.c	/^int git_tree_cache_new(git_tree_cache **out, const char *name, git_oid_t oid_type, git_pool *poo/;"	f	typeref:typename:int
git_tree_cache_read	my_project/libgit2/src/libgit2/tree-cache.c	/^int git_tree_cache_read($/;"	f	typeref:typename:int
git_tree_cache_read_tree	my_project/libgit2/src/libgit2/tree-cache.c	/^int git_tree_cache_read_tree(git_tree_cache **out, const git_tree *tree, git_oid_t oid_type, git/;"	f	typeref:typename:int
git_tree_cache_write	my_project/libgit2/src/libgit2/tree-cache.c	/^int git_tree_cache_write(git_str *out, git_tree_cache *tree)$/;"	f	typeref:typename:int
git_tree_create_updated	my_project/libgit2/src/libgit2/tree.c	/^int git_tree_create_updated(git_oid *out, git_repository *repo, git_tree *baseline, size_t nupda/;"	f	typeref:typename:int
git_tree_dup	my_project/libgit2/src/libgit2/object_api.c	/^int git_tree_dup(git_tree **out, git_tree *obj)$/;"	f	typeref:typename:int
git_tree_entry	my_project/libgit2/include/git2/types.h	/^typedef struct git_tree_entry git_tree_entry;$/;"	t	typeref:struct:git_tree_entry
git_tree_entry	my_project/libgit2/src/libgit2/tree.h	/^struct git_tree_entry {$/;"	s
git_tree_entry__is_tree	my_project/libgit2/src/libgit2/tree.h	/^GIT_INLINE(bool) git_tree_entry__is_tree(const struct git_tree_entry *e)$/;"	f	typeref:typename:bool
git_tree_entry_byid	my_project/libgit2/src/libgit2/tree.c	/^const git_tree_entry *git_tree_entry_byid($/;"	f	typeref:typename:const git_tree_entry *
git_tree_entry_byindex	my_project/libgit2/src/libgit2/tree.c	/^const git_tree_entry *git_tree_entry_byindex($/;"	f	typeref:typename:const git_tree_entry *
git_tree_entry_byname	my_project/libgit2/src/libgit2/tree.c	/^const git_tree_entry *git_tree_entry_byname($/;"	f	typeref:typename:const git_tree_entry *
git_tree_entry_bypath	my_project/libgit2/src/libgit2/tree.c	/^int git_tree_entry_bypath($/;"	f	typeref:typename:int
git_tree_entry_cmp	my_project/libgit2/src/libgit2/tree.c	/^int git_tree_entry_cmp(const git_tree_entry *e1, const git_tree_entry *e2)$/;"	f	typeref:typename:int
git_tree_entry_dup	my_project/libgit2/src/libgit2/tree.c	/^int git_tree_entry_dup(git_tree_entry **dest, const git_tree_entry *source)$/;"	f	typeref:typename:int
git_tree_entry_filemode	my_project/libgit2/src/libgit2/tree.c	/^git_filemode_t git_tree_entry_filemode(const git_tree_entry *entry)$/;"	f	typeref:typename:git_filemode_t
git_tree_entry_filemode_raw	my_project/libgit2/src/libgit2/tree.c	/^git_filemode_t git_tree_entry_filemode_raw(const git_tree_entry *entry)$/;"	f	typeref:typename:git_filemode_t
git_tree_entry_free	my_project/libgit2/src/libgit2/tree.c	/^void git_tree_entry_free(git_tree_entry *entry)$/;"	f	typeref:typename:void
git_tree_entry_id	my_project/libgit2/src/libgit2/tree.c	/^const git_oid *git_tree_entry_id(const git_tree_entry *entry)$/;"	f	typeref:typename:const git_oid *
git_tree_entry_name	my_project/libgit2/src/libgit2/tree.c	/^const char *git_tree_entry_name(const git_tree_entry *entry)$/;"	f	typeref:typename:const char *
git_tree_entry_to_object	my_project/libgit2/src/libgit2/tree.c	/^int git_tree_entry_to_object($/;"	f	typeref:typename:int
git_tree_entry_type	my_project/libgit2/src/libgit2/tree.c	/^git_object_t git_tree_entry_type(const git_tree_entry *entry)$/;"	f	typeref:typename:git_object_t
git_tree_entrycount	my_project/libgit2/src/libgit2/tree.c	/^size_t git_tree_entrycount(const git_tree *tree)$/;"	f	typeref:typename:size_t
git_tree_free	my_project/libgit2/src/libgit2/object_api.c	/^void git_tree_free(git_tree *obj)$/;"	f	typeref:typename:void
git_tree_id	my_project/libgit2/src/libgit2/object_api.c	/^const git_oid *git_tree_id(const git_tree *obj)$/;"	f	typeref:typename:const git_oid *
git_tree_lookup	my_project/libgit2/src/libgit2/object_api.c	/^int git_tree_lookup(git_tree **out, git_repository *repo, const git_oid *id)$/;"	f	typeref:typename:int
git_tree_lookup_prefix	my_project/libgit2/src/libgit2/object_api.c	/^int git_tree_lookup_prefix(git_tree **out, git_repository *repo, const git_oid *id, size_t len)$/;"	f	typeref:typename:int
git_tree_owner	my_project/libgit2/src/libgit2/object_api.c	/^git_repository *git_tree_owner(const git_tree *obj)$/;"	f	typeref:typename:git_repository *
git_tree_update	my_project/libgit2/include/git2/tree.h	/^} git_tree_update;$/;"	t	typeref:struct:__anona533f3ca0308
git_tree_update_t	my_project/libgit2/include/git2/tree.h	/^} git_tree_update_t;$/;"	t	typeref:enum:__anona533f3ca0203
git_tree_walk	my_project/libgit2/src/libgit2/tree.c	/^int git_tree_walk($/;"	f	typeref:typename:int
git_treebuilder	my_project/libgit2/include/git2/types.h	/^typedef struct git_treebuilder git_treebuilder;$/;"	t	typeref:struct:git_treebuilder
git_treebuilder	my_project/libgit2/src/libgit2/tree.h	/^struct git_treebuilder {$/;"	s
git_treebuilder__write_with_buffer	my_project/libgit2/src/libgit2/tree.c	/^static int git_treebuilder__write_with_buffer($/;"	f	typeref:typename:int	file:
git_treebuilder_clear	my_project/libgit2/src/libgit2/tree.c	/^int git_treebuilder_clear(git_treebuilder *bld)$/;"	f	typeref:typename:int
git_treebuilder_entrycount	my_project/libgit2/src/libgit2/tree.c	/^size_t git_treebuilder_entrycount(git_treebuilder *bld)$/;"	f	typeref:typename:size_t
git_treebuilder_filter	my_project/libgit2/src/libgit2/tree.c	/^int git_treebuilder_filter($/;"	f	typeref:typename:int
git_treebuilder_filter_cb	my_project/libgit2/include/git2/tree.h	/^typedef int GIT_CALLBACK(git_treebuilder_filter_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const git_tree_entry * entry,void * payload)
git_treebuilder_free	my_project/libgit2/src/libgit2/tree.c	/^void git_treebuilder_free(git_treebuilder *bld)$/;"	f	typeref:typename:void
git_treebuilder_get	my_project/libgit2/src/libgit2/tree.c	/^const git_tree_entry *git_treebuilder_get(git_treebuilder *bld, const char *filename)$/;"	f	typeref:typename:const git_tree_entry *
git_treebuilder_insert	my_project/libgit2/src/libgit2/tree.c	/^int git_treebuilder_insert($/;"	f	typeref:typename:int
git_treebuilder_new	my_project/libgit2/src/libgit2/tree.c	/^int git_treebuilder_new($/;"	f	typeref:typename:int
git_treebuilder_remove	my_project/libgit2/src/libgit2/tree.c	/^int git_treebuilder_remove(git_treebuilder *bld, const char *filename)$/;"	f	typeref:typename:int
git_treebuilder_write	my_project/libgit2/src/libgit2/tree.c	/^int git_treebuilder_write(git_oid *oid, git_treebuilder *bld)$/;"	f	typeref:typename:int
git_treebuilder_write_with_buffer	my_project/libgit2/src/libgit2/tree.c	/^int git_treebuilder_write_with_buffer(git_oid *oid, git_treebuilder *bld, git_buf *buf)$/;"	f	typeref:typename:int
git_treewalk_cb	my_project/libgit2/include/git2/tree.h	/^typedef int GIT_CALLBACK(git_treewalk_cb)($/;"	t	typeref:typename:int GIT_CALLBACK ()(const char * root,const git_tree_entry * entry,void * payload)
git_treewalk_mode	my_project/libgit2/include/git2/tree.h	/^} git_treewalk_mode;$/;"	t	typeref:enum:__anona533f3ca0103
git_url_resolve_cb	my_project/libgit2/include/git2/remote.h	/^typedef int GIT_CALLBACK(git_url_resolve_cb)(git_buf *url_resolved, const char *url, int directi/;"	t	typeref:typename:int GIT_CALLBACK ()(git_buf * url_resolved,const char * url,int direction,void * payload)
git_utf8_char_length	my_project/libgit2/src/util/utf8.c	/^size_t git_utf8_char_length(const char *_str, size_t str_len)$/;"	f	typeref:typename:size_t
git_utf8_from_16	my_project/libgit2/src/util/win32/utf-conv.c	/^int git_utf8_from_16(char *dest, size_t dest_size, const wchar_t *src)$/;"	f	typeref:typename:int
git_utf8_from_16_alloc	my_project/libgit2/src/util/win32/utf-conv.c	/^int git_utf8_from_16_alloc(char **dest, const wchar_t *src)$/;"	f	typeref:typename:int
git_utf8_from_16_alloc_with_len	my_project/libgit2/src/util/win32/utf-conv.c	/^int git_utf8_from_16_alloc_with_len(char **dest, const wchar_t *src, int src_len)$/;"	f	typeref:typename:int
git_utf8_from_16_with_len	my_project/libgit2/src/util/win32/utf-conv.c	/^int git_utf8_from_16_with_len($/;"	f	typeref:typename:int
git_utf8_iterate	my_project/libgit2/src/util/utf8.c	/^int git_utf8_iterate(uint32_t *out, const char *_str, size_t str_len)$/;"	f	typeref:typename:int
git_utf8_to_16	my_project/libgit2/src/util/win32/utf-conv.c	/^int git_utf8_to_16(wchar_t *dest, size_t dest_size, const char *src)$/;"	f	typeref:typename:int
git_utf8_to_16_alloc	my_project/libgit2/src/util/win32/utf-conv.c	/^int git_utf8_to_16_alloc(wchar_t **dest, const char *src)$/;"	f	typeref:typename:int
git_utf8_to_16_alloc_with_len	my_project/libgit2/src/util/win32/utf-conv.c	/^int git_utf8_to_16_alloc_with_len(wchar_t **dest, const char *src, int src_len)$/;"	f	typeref:typename:int
git_utf8_to_16_with_len	my_project/libgit2/src/util/win32/utf-conv.c	/^int git_utf8_to_16_with_len($/;"	f	typeref:typename:int
git_utf8_valid_buf_length	my_project/libgit2/src/util/utf8.c	/^size_t git_utf8_valid_buf_length(const char *_str, size_t str_len)$/;"	f	typeref:typename:size_t
git_vector	my_project/libgit2/script/user_model.c	/^typedef struct git_vector {$/;"	s	file:
git_vector	my_project/libgit2/script/user_model.c	/^} git_vector;$/;"	t	typeref:struct:git_vector	file:
git_vector	my_project/libgit2/src/util/vector.h	/^typedef struct git_vector {$/;"	s
git_vector	my_project/libgit2/src/util/vector.h	/^} git_vector;$/;"	t	typeref:struct:git_vector
git_vector_bsearch	my_project/libgit2/src/util/vector.h	/^GIT_INLINE(int) git_vector_bsearch(size_t *at_pos, git_vector *v, const void *key)$/;"	f	typeref:typename:int
git_vector_bsearch2	my_project/libgit2/src/util/vector.c	/^int git_vector_bsearch2($/;"	f	typeref:typename:int
git_vector_clear	my_project/libgit2/src/util/vector.c	/^void git_vector_clear(git_vector *v)$/;"	f	typeref:typename:void
git_vector_cmp	my_project/libgit2/src/util/vector.h	/^typedef int (*git_vector_cmp)(const void *, const void *);$/;"	t	typeref:typename:int (*)(const void *,const void *)
git_vector_detach	my_project/libgit2/src/util/vector.c	/^void **git_vector_detach(size_t *size, size_t *asize, git_vector *v)$/;"	f	typeref:typename:void **
git_vector_dup	my_project/libgit2/src/util/vector.c	/^int git_vector_dup(git_vector *v, const git_vector *src, git_vector_cmp cmp)$/;"	f	typeref:typename:int
git_vector_foreach	my_project/libgit2/src/util/vector.h	/^#define git_vector_foreach(/;"	d
git_vector_free	my_project/libgit2/src/util/vector.c	/^void git_vector_free(git_vector *v)$/;"	f	typeref:typename:void
git_vector_free_deep	my_project/libgit2/src/util/vector.c	/^void git_vector_free_deep(git_vector *v)$/;"	f	typeref:typename:void
git_vector_get	my_project/libgit2/src/util/vector.h	/^GIT_INLINE(void *) git_vector_get(const git_vector *v, size_t position)$/;"	f	typeref:typename:void *
git_vector_init	my_project/libgit2/src/util/vector.c	/^int git_vector_init(git_vector *v, size_t initial_size, git_vector_cmp cmp)$/;"	f	typeref:typename:int
git_vector_insert	my_project/libgit2/script/user_model.c	/^int git_vector_insert(git_vector *v, void *element)$/;"	f	typeref:typename:int
git_vector_insert	my_project/libgit2/src/util/vector.c	/^int git_vector_insert(git_vector *v, void *element)$/;"	f	typeref:typename:int
git_vector_insert_null	my_project/libgit2/src/util/vector.c	/^int git_vector_insert_null(git_vector *v, size_t idx, size_t insert_len)$/;"	f	typeref:typename:int
git_vector_insert_sorted	my_project/libgit2/src/util/vector.c	/^int git_vector_insert_sorted($/;"	f	typeref:typename:int
git_vector_is_sorted	my_project/libgit2/src/util/vector.h	/^#define git_vector_is_sorted(/;"	d
git_vector_last	my_project/libgit2/src/util/vector.h	/^GIT_INLINE(void *) git_vector_last(const git_vector *v)$/;"	f	typeref:typename:void *
git_vector_length	my_project/libgit2/src/util/vector.h	/^GIT_INLINE(size_t) git_vector_length(const git_vector *v)$/;"	f	typeref:typename:size_t
git_vector_pop	my_project/libgit2/src/util/vector.c	/^void git_vector_pop(git_vector *v)$/;"	f	typeref:typename:void
git_vector_remove	my_project/libgit2/src/util/vector.c	/^int git_vector_remove(git_vector *v, size_t idx)$/;"	f	typeref:typename:int
git_vector_remove_matching	my_project/libgit2/src/util/vector.c	/^void git_vector_remove_matching($/;"	f	typeref:typename:void
git_vector_remove_range	my_project/libgit2/src/util/vector.c	/^int git_vector_remove_range(git_vector *v, size_t idx, size_t remove_len)$/;"	f	typeref:typename:int
git_vector_resize_to	my_project/libgit2/src/util/vector.c	/^int git_vector_resize_to(git_vector *v, size_t new_length)$/;"	f	typeref:typename:int
git_vector_reverse	my_project/libgit2/src/util/vector.c	/^void git_vector_reverse(git_vector *v)$/;"	f	typeref:typename:void
git_vector_rforeach	my_project/libgit2/src/util/vector.h	/^#define git_vector_rforeach(/;"	d
git_vector_search	my_project/libgit2/src/util/vector.c	/^int git_vector_search(size_t *at_pos, const git_vector *v, const void *entry)$/;"	f	typeref:typename:int
git_vector_search2	my_project/libgit2/src/util/vector.c	/^int git_vector_search2($/;"	f	typeref:typename:int
git_vector_set	my_project/libgit2/src/util/vector.c	/^int git_vector_set(void **old, git_vector *v, size_t position, void *value)$/;"	f	typeref:typename:int
git_vector_set_cmp	my_project/libgit2/src/util/vector.h	/^GIT_INLINE(void) git_vector_set_cmp(git_vector *v, git_vector_cmp cmp)$/;"	f	typeref:typename:void
git_vector_set_sorted	my_project/libgit2/src/util/vector.h	/^#define git_vector_set_sorted(/;"	d
git_vector_size_hint	my_project/libgit2/src/util/vector.c	/^int git_vector_size_hint(git_vector *v, size_t size_hint)$/;"	f	typeref:typename:int
git_vector_sort	my_project/libgit2/src/util/vector.c	/^void git_vector_sort(git_vector *v)$/;"	f	typeref:typename:void
git_vector_swap	my_project/libgit2/src/util/vector.c	/^void git_vector_swap(git_vector *a, git_vector *b)$/;"	f	typeref:typename:void
git_vector_uniq	my_project/libgit2/src/util/vector.c	/^void git_vector_uniq(git_vector *v, void  (*git_free_cb)(void *))$/;"	f	typeref:typename:void
git_vector_verify_sorted	my_project/libgit2/src/util/vector.c	/^int git_vector_verify_sorted(const git_vector *v)$/;"	f	typeref:typename:int
git_win32__createfile_sharemode	my_project/libgit2/src/util/win32/posix_w32.c	/^unsigned long git_win32__createfile_sharemode =$/;"	v	typeref:typename:unsigned long
git_win32__file_attribute_to_stat	my_project/libgit2/src/util/win32/w32_util.c	/^int git_win32__file_attribute_to_stat($/;"	f	typeref:typename:int
git_win32__file_information_to_stat	my_project/libgit2/src/util/win32/w32_util.h	/^GIT_INLINE(void) git_win32__file_information_to_stat($/;"	f	typeref:typename:void
git_win32__filetime_to_timespec	my_project/libgit2/src/util/win32/w32_util.h	/^GIT_INLINE(void) git_win32__filetime_to_timespec($/;"	f	typeref:typename:void
git_win32__find_system_dirs	my_project/libgit2/src/libgit2/sysdir.c	/^int git_win32__find_system_dirs(git_str *out, const char *subdir)$/;"	f	typeref:typename:int
git_win32__findfirstfile_filter	my_project/libgit2/src/util/win32/w32_util.c	/^bool git_win32__findfirstfile_filter(git_win32_path dest, const char *src)$/;"	f	typeref:typename:bool
git_win32__hidden	my_project/libgit2/src/util/win32/w32_util.c	/^int git_win32__hidden(bool *out, const char *path)$/;"	f	typeref:typename:int
git_win32__isalpha	my_project/libgit2/src/util/win32/w32_util.h	/^GIT_INLINE(bool) git_win32__isalpha(wchar_t c)$/;"	f	typeref:typename:bool
git_win32__retries	my_project/libgit2/src/util/win32/posix_w32.c	/^int git_win32__retries = 10;$/;"	v	typeref:typename:int
git_win32__set_hidden	my_project/libgit2/src/util/win32/w32_util.c	/^int git_win32__set_hidden(const char *path, bool hidden)$/;"	f	typeref:typename:int
git_win32__set_registry_system_dir	my_project/libgit2/src/libgit2/sysdir.c	/^extern int git_win32__set_registry_system_dir(const wchar_t *mock_sysdir)$/;"	f	typeref:typename:int
git_win32__stat_init	my_project/libgit2/src/util/win32/w32_util.h	/^GIT_INLINE(void) git_win32__stat_init($/;"	f	typeref:typename:void
git_win32__threadproc	my_project/libgit2/src/util/win32/thread.c	/^static DWORD WINAPI git_win32__threadproc(LPVOID lpParameter)$/;"	f	typeref:typename:DWORD WINAPI	file:
git_win32__timeval_to_filetime	my_project/libgit2/src/util/win32/w32_util.h	/^GIT_INLINE(void) git_win32__timeval_to_filetime($/;"	f	typeref:typename:void
git_win32_get_error_message	my_project/libgit2/src/util/win32/error.c	/^char *git_win32_get_error_message(DWORD error_code)$/;"	f	typeref:typename:char *
git_win32_leakcheck_global_init	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^int git_win32_leakcheck_global_init(void)$/;"	f	typeref:typename:int
git_win32_leakcheck_global_shutdown	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static void git_win32_leakcheck_global_shutdown(void)$/;"	f	typeref:typename:void	file:
git_win32_leakcheck_has_leaks	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^bool git_win32_leakcheck_has_leaks(void)$/;"	f	typeref:typename:bool
git_win32_leakcheck_init_allocator	my_project/libgit2/src/util/allocators/win32_leakcheck.c	/^int git_win32_leakcheck_init_allocator(git_allocator *allocator)$/;"	f	typeref:typename:int
git_win32_leakcheck_stack	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^int git_win32_leakcheck_stack($/;"	f	typeref:typename:int
git_win32_leakcheck_stack_aux_cb_alloc	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^typedef void (*git_win32_leakcheck_stack_aux_cb_alloc)(unsigned int *aux_id);$/;"	t	typeref:typename:void (*)(unsigned int * aux_id)
git_win32_leakcheck_stack_aux_cb_lookup	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^typedef void (*git_win32_leakcheck_stack_aux_cb_lookup)(unsigned int aux_id, char *aux_msg, size/;"	t	typeref:typename:void (*)(unsigned int aux_id,char * aux_msg,size_t aux_msg_len)
git_win32_leakcheck_stack_capture	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^int git_win32_leakcheck_stack_capture(git_win32_leakcheck_stack_raw_data *pdata, int skip)$/;"	f	typeref:typename:int
git_win32_leakcheck_stack_cleanup	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^void git_win32_leakcheck_stack_cleanup(void)$/;"	f	typeref:typename:void
git_win32_leakcheck_stack_compare	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^int git_win32_leakcheck_stack_compare($/;"	f	typeref:typename:int
git_win32_leakcheck_stack_format	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^int git_win32_leakcheck_stack_format($/;"	f	typeref:typename:int
git_win32_leakcheck_stack_init	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^void git_win32_leakcheck_stack_init(void)$/;"	f	typeref:typename:void
git_win32_leakcheck_stack_raw_data	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^} git_win32_leakcheck_stack_raw_data;$/;"	t	typeref:struct:__anonc260a6be0108
git_win32_leakcheck_stack_set_aux_cb	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^int git_win32_leakcheck_stack_set_aux_cb($/;"	f	typeref:typename:int
git_win32_leakcheck_stacktrace	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^const char *git_win32_leakcheck_stacktrace(int skip, const char *file)$/;"	f	typeref:typename:const char *
git_win32_leakcheck_stacktrace_cleanup	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^void git_win32_leakcheck_stacktrace_cleanup(void)$/;"	f	typeref:typename:void
git_win32_leakcheck_stacktrace_dump	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^int git_win32_leakcheck_stacktrace_dump($/;"	f	typeref:typename:int
git_win32_leakcheck_stacktrace_init	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^void git_win32_leakcheck_stacktrace_init(void)$/;"	f	typeref:typename:void
git_win32_leakcheck_stacktrace_options	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^typedef enum git_win32_leakcheck_stacktrace_options {$/;"	g
git_win32_leakcheck_stacktrace_options	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^} git_win32_leakcheck_stacktrace_options;$/;"	t	typeref:enum:git_win32_leakcheck_stacktrace_options
git_win32_leakcheck_stacktrace_row	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^} git_win32_leakcheck_stacktrace_row;$/;"	t	typeref:struct:__anonc260a6b90308	file:
git_win32_leakcheck_stacktrace_uid	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^} git_win32_leakcheck_stacktrace_uid;$/;"	t	typeref:struct:__anonc260a6b90208	file:
git_win32_path	my_project/libgit2/src/util/win32/w32_common.h	/^typedef wchar_t git_win32_path[GIT_WIN_PATH_UTF16];$/;"	t	typeref:typename:wchar_t[GIT_WIN_PATH_UTF16]
git_win32_path_8dot3_name	my_project/libgit2/src/util/win32/path_w32.c	/^char *git_win32_path_8dot3_name(const char *path)$/;"	f	typeref:typename:char *
git_win32_path_canonicalize	my_project/libgit2/src/util/win32/path_w32.c	/^int git_win32_path_canonicalize(git_win32_path path)$/;"	f	typeref:typename:int
git_win32_path_find_executable	my_project/libgit2/src/util/win32/path_w32.c	/^int git_win32_path_find_executable(git_win32_path fullpath, wchar_t *exe)$/;"	f	typeref:typename:int
git_win32_path_from_utf8	my_project/libgit2/src/util/win32/path_w32.c	/^int git_win32_path_from_utf8(git_win32_path out, const char *src)$/;"	f	typeref:typename:int
git_win32_path_join	my_project/libgit2/src/util/win32/path_w32.c	/^static int git_win32_path_join($/;"	f	typeref:typename:int	file:
git_win32_path_readlink_w	my_project/libgit2/src/util/win32/path_w32.c	/^int git_win32_path_readlink_w(git_win32_path dest, const git_win32_path path)$/;"	f	typeref:typename:int
git_win32_path_relative_from_utf8	my_project/libgit2/src/util/win32/path_w32.c	/^int git_win32_path_relative_from_utf8(git_win32_path out, const char *src)$/;"	f	typeref:typename:int
git_win32_path_remove_namespace	my_project/libgit2/src/util/win32/path_w32.c	/^size_t git_win32_path_remove_namespace(wchar_t *str, size_t len)$/;"	f	typeref:typename:size_t
git_win32_path_to_utf8	my_project/libgit2/src/util/win32/path_w32.c	/^int git_win32_path_to_utf8(git_win32_utf8_path dest, const wchar_t *src)$/;"	f	typeref:typename:int
git_win32_path_trim_end	my_project/libgit2/src/util/win32/path_w32.c	/^size_t git_win32_path_trim_end(wchar_t *str, size_t len)$/;"	f	typeref:typename:size_t
git_win32_utf8_path	my_project/libgit2/src/util/win32/w32_common.h	/^typedef char git_win32_utf8_path[GIT_WIN_PATH_UTF8];$/;"	t	typeref:typename:char[GIT_WIN_PATH_UTF8]
git_worktree	my_project/libgit2/include/git2/types.h	/^typedef struct git_worktree git_worktree;$/;"	t	typeref:struct:git_worktree
git_worktree	my_project/libgit2/src/libgit2/worktree.h	/^struct git_worktree {$/;"	s
git_worktree__is_locked	my_project/libgit2/src/libgit2/worktree.c	/^static int git_worktree__is_locked(git_str *reason, const git_worktree *wt)$/;"	f	typeref:typename:int	file:
git_worktree__read_link	my_project/libgit2/src/libgit2/worktree.c	/^char *git_worktree__read_link(const char *base, const char *file)$/;"	f	typeref:typename:char *
git_worktree_add	my_project/libgit2/src/libgit2/worktree.c	/^int git_worktree_add(git_worktree **out, git_repository *repo,$/;"	f	typeref:typename:int
git_worktree_add_init_options	my_project/libgit2/src/libgit2/worktree.c	/^int git_worktree_add_init_options(git_worktree_add_options *opts,$/;"	f	typeref:typename:int
git_worktree_add_options	my_project/libgit2/include/git2/worktree.h	/^typedef struct git_worktree_add_options {$/;"	s
git_worktree_add_options	my_project/libgit2/include/git2/worktree.h	/^} git_worktree_add_options;$/;"	t	typeref:struct:git_worktree_add_options
git_worktree_add_options_init	my_project/libgit2/src/libgit2/worktree.c	/^int git_worktree_add_options_init(git_worktree_add_options *opts,$/;"	f	typeref:typename:int
git_worktree_free	my_project/libgit2/src/libgit2/worktree.c	/^void git_worktree_free(git_worktree *wt)$/;"	f	typeref:typename:void
git_worktree_is_locked	my_project/libgit2/src/libgit2/worktree.c	/^int git_worktree_is_locked(git_buf *reason, const git_worktree *wt)$/;"	f	typeref:typename:int
git_worktree_is_prunable	my_project/libgit2/src/libgit2/worktree.c	/^int git_worktree_is_prunable(git_worktree *wt,$/;"	f	typeref:typename:int
git_worktree_list	my_project/libgit2/src/libgit2/worktree.c	/^int git_worktree_list(git_strarray *wts, git_repository *repo)$/;"	f	typeref:typename:int
git_worktree_lock	my_project/libgit2/src/libgit2/worktree.c	/^int git_worktree_lock(git_worktree *wt, const char *reason)$/;"	f	typeref:typename:int
git_worktree_lookup	my_project/libgit2/src/libgit2/worktree.c	/^int git_worktree_lookup(git_worktree **out, git_repository *repo, const char *name)$/;"	f	typeref:typename:int
git_worktree_name	my_project/libgit2/src/libgit2/worktree.c	/^const char *git_worktree_name(const git_worktree *wt)$/;"	f	typeref:typename:const char *
git_worktree_open_from_repository	my_project/libgit2/src/libgit2/worktree.c	/^int git_worktree_open_from_repository(git_worktree **out, git_repository *repo)$/;"	f	typeref:typename:int
git_worktree_path	my_project/libgit2/src/libgit2/worktree.c	/^const char *git_worktree_path(const git_worktree *wt)$/;"	f	typeref:typename:const char *
git_worktree_prune	my_project/libgit2/src/libgit2/worktree.c	/^int git_worktree_prune(git_worktree *wt,$/;"	f	typeref:typename:int
git_worktree_prune_init_options	my_project/libgit2/src/libgit2/worktree.c	/^int git_worktree_prune_init_options(git_worktree_prune_options *opts,$/;"	f	typeref:typename:int
git_worktree_prune_options	my_project/libgit2/include/git2/worktree.h	/^typedef struct git_worktree_prune_options {$/;"	s
git_worktree_prune_options	my_project/libgit2/include/git2/worktree.h	/^} git_worktree_prune_options;$/;"	t	typeref:struct:git_worktree_prune_options
git_worktree_prune_options_init	my_project/libgit2/src/libgit2/worktree.c	/^int git_worktree_prune_options_init($/;"	f	typeref:typename:int
git_worktree_prune_t	my_project/libgit2/include/git2/worktree.h	/^} git_worktree_prune_t;$/;"	t	typeref:enum:__anon62538c6d0103
git_worktree_unlock	my_project/libgit2/src/libgit2/worktree.c	/^int git_worktree_unlock(git_worktree *wt)$/;"	f	typeref:typename:int
git_worktree_validate	my_project/libgit2/src/libgit2/worktree.c	/^int git_worktree_validate(const git_worktree *wt)$/;"	f	typeref:typename:int
git_writestream	my_project/libgit2/include/git2/types.h	/^struct git_writestream {$/;"	s
git_writestream	my_project/libgit2/include/git2/types.h	/^typedef struct git_writestream git_writestream;$/;"	t	typeref:struct:git_writestream
git_xdiff	my_project/libgit2/src/libgit2/diff_xdiff.c	/^static int git_xdiff(git_patch_generated_output *output, git_patch_generated *patch)$/;"	f	typeref:typename:int	file:
git_xdiff_cb	my_project/libgit2/src/libgit2/diff_xdiff.c	/^static int git_xdiff_cb(void *priv, mmbuffer_t *bufs, int len)$/;"	f	typeref:typename:int	file:
git_xdiff_info	my_project/libgit2/src/libgit2/diff_xdiff.c	/^} git_xdiff_info;$/;"	t	typeref:struct:__anon544d96590108	file:
git_xdiff_init	my_project/libgit2/src/libgit2/diff_xdiff.c	/^void git_xdiff_init(git_xdiff_output *xo, const git_diff_options *opts)$/;"	f	typeref:typename:void
git_xdiff_output	my_project/libgit2/src/libgit2/diff_xdiff.h	/^} git_xdiff_output;$/;"	t	typeref:struct:__anon544d965e0108
git_xdiff_parse_hunk	my_project/libgit2/src/libgit2/diff_xdiff.c	/^static int git_xdiff_parse_hunk(git_diff_hunk *hunk, const char *header)$/;"	f	typeref:typename:int	file:
git_xdiff_scan_int	my_project/libgit2/src/libgit2/diff_xdiff.c	/^static int git_xdiff_scan_int(const char **str, int *value)$/;"	f	typeref:typename:int	file:
git_zstream	my_project/libgit2/src/util/zstream.h	/^} git_zstream;$/;"	t	typeref:struct:__anon596d958c0208
git_zstream_deflatebuf	my_project/libgit2/src/util/zstream.c	/^int git_zstream_deflatebuf(git_str *out, const void *in, size_t in_len)$/;"	f	typeref:typename:int
git_zstream_done	my_project/libgit2/src/util/zstream.c	/^bool git_zstream_done(git_zstream *zstream)$/;"	f	typeref:typename:bool
git_zstream_eos	my_project/libgit2/src/util/zstream.c	/^bool git_zstream_eos(git_zstream *zstream)$/;"	f	typeref:typename:bool
git_zstream_free	my_project/libgit2/src/util/zstream.c	/^void git_zstream_free(git_zstream *zstream)$/;"	f	typeref:typename:void
git_zstream_get_output	my_project/libgit2/src/util/zstream.c	/^int git_zstream_get_output(void *out, size_t *out_len, git_zstream *zstream)$/;"	f	typeref:typename:int
git_zstream_get_output_chunk	my_project/libgit2/src/util/zstream.c	/^int git_zstream_get_output_chunk($/;"	f	typeref:typename:int
git_zstream_inflatebuf	my_project/libgit2/src/util/zstream.c	/^int git_zstream_inflatebuf(git_str *out, const void *in, size_t in_len)$/;"	f	typeref:typename:int
git_zstream_init	my_project/libgit2/src/util/zstream.c	/^int git_zstream_init(git_zstream *zstream, git_zstream_t type)$/;"	f	typeref:typename:int
git_zstream_reset	my_project/libgit2/src/util/zstream.c	/^void git_zstream_reset(git_zstream *zstream)$/;"	f	typeref:typename:void
git_zstream_set_input	my_project/libgit2/src/util/zstream.c	/^int git_zstream_set_input(git_zstream *zstream, const void *in, size_t in_len)$/;"	f	typeref:typename:int
git_zstream_suggest_output_len	my_project/libgit2/src/util/zstream.c	/^size_t git_zstream_suggest_output_len(git_zstream *zstream)$/;"	f	typeref:typename:size_t
git_zstream_t	my_project/libgit2/src/util/zstream.h	/^} git_zstream_t;$/;"	t	typeref:enum:__anon596d958c0103
gitbench	my_project/libgit2/tests/benchmarks/benchmark_helpers.sh	/^gitbench() {$/;"	f
gitbench_usage	my_project/libgit2/tests/benchmarks/benchmark_helpers.sh	/^gitbench_usage() { echo "usage: gitbench command..."; }$/;"	f
gitdir	my_project/libgit2/examples/init.c	/^	const char *gitdir;$/;"	m	struct:init_opts	typeref:typename:const char *	file:
gitdir	my_project/libgit2/src/libgit2/repository.c	/^	git_str gitdir;$/;"	m	struct:repo_paths	typeref:typename:git_str	file:
gitdir	my_project/libgit2/src/libgit2/repository.h	/^	char *gitdir;$/;"	m	struct:git_repository	typeref:typename:char *
gitdir_path	my_project/libgit2/src/libgit2/worktree.h	/^	char *gitdir_path;$/;"	m	struct:git_worktree	typeref:typename:char *
giterr_clear	my_project/libgit2/src/util/errors.c	/^void giterr_clear(void)$/;"	f	typeref:typename:void
giterr_last	my_project/libgit2/src/util/errors.c	/^const git_error *giterr_last(void)$/;"	f	typeref:typename:const git_error *
giterr_set_oom	my_project/libgit2/src/util/errors.c	/^void giterr_set_oom(void)$/;"	f	typeref:typename:void
giterr_set_str	my_project/libgit2/src/util/errors.c	/^void giterr_set_str(int error_class, const char *string)$/;"	f	typeref:typename:void
gitfiles	my_project/libgit2/src/libgit2/path.c	/^} gitfiles[] = {$/;"	v	typeref:typename:const struct __anon58077f5d0208[]
github_credentials	my_project/libgit2/tests/libgit2/online/clone.c	/^static int github_credentials($/;"	f	typeref:typename:int	file:
gitlink	my_project/libgit2/src/libgit2/repository.c	/^	git_str gitlink;$/;"	m	struct:repo_paths	typeref:typename:git_str	file:
gitlink	my_project/libgit2/src/libgit2/repository.h	/^	char *gitlink;$/;"	m	struct:git_repository	typeref:typename:char *
gitlink_path	my_project/libgit2/src/libgit2/worktree.h	/^	char *gitlink_path;$/;"	m	struct:git_worktree	typeref:typename:char *
gitmodules_snapshot	my_project/libgit2/src/libgit2/submodule.c	/^static int gitmodules_snapshot(git_config **snap, git_repository *repo)$/;"	f	typeref:typename:int	file:
gitpath	my_project/libgit2/src/libgit2/refdb_fs.c	/^	char *gitpath;$/;"	m	struct:refdb_fs_backend	typeref:typename:char *	file:
glob	my_project/libgit2/src/libgit2/refdb_fs.c	/^	char *glob;$/;"	m	struct:__anon3803f1ab0308	typeref:typename:char *	file:
good_length	my_project/libgit2/deps/zlib/deflate.c	/^   ush good_length; \/* reduce lazy search above this match length *\/$/;"	m	struct:config_s	typeref:typename:ush	file:
good_match	my_project/libgit2/deps/zlib/deflate.h	/^    uInt good_match;$/;"	m	struct:internal_state	typeref:typename:uInt
grafts	my_project/libgit2/src/libgit2/repository.h	/^	git_grafts *grafts;$/;"	m	struct:git_repository	typeref:typename:git_grafts *
grafts	my_project/libgit2/tests/libgit2/grafts/parse.c	/^static git_grafts *grafts;$/;"	v	typeref:typename:git_grafts *	file:
graph_map	my_project/libgit2/src/libgit2/commit_graph.h	/^	git_map graph_map;$/;"	m	struct:git_commit_graph_file	typeref:typename:git_map
grep	my_project/libgit2/examples/log.c	/^	const char *grep;$/;"	m	struct:log_options	typeref:typename:const char *	file:
group	my_project/libgit2/.vscode/tasks.json	/^        "group": "build",$/;"	s	object:tasks.0
group	my_project/libgit2/.vscode/tasks.json	/^        "group": "test",$/;"	s	object:tasks.1
group	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *group;$/;"	m	struct:recurse_check	typeref:typename:const pcre_uchar *
group_init	my_project/libgit2/deps/xdiff/xdiffi.c	/^static void group_init(xdfile_t *xdf, struct xdlgroup *g)$/;"	f	typeref:typename:void	file:
group_next	my_project/libgit2/deps/xdiff/xdiffi.c	/^static inline int group_next(xdfile_t *xdf, struct xdlgroup *g)$/;"	f	typeref:typename:int	file:
group_num	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int group_num;$/;"	m	struct:dfa_recursion_info	typeref:typename:int
group_num	my_project/libgit2/deps/pcre/pcre_internal.h	/^  unsigned int group_num;         \/* Number of group that was called *\/$/;"	m	struct:recursion_info	typeref:typename:unsigned int
group_previous	my_project/libgit2/deps/xdiff/xdiffi.c	/^static inline int group_previous(xdfile_t *xdf, struct xdlgroup *g)$/;"	f	typeref:typename:int	file:
group_slide_down	my_project/libgit2/deps/xdiff/xdiffi.c	/^static int group_slide_down(xdfile_t *xdf, struct xdlgroup *g)$/;"	f	typeref:typename:int	file:
group_slide_up	my_project/libgit2/deps/xdiff/xdiffi.c	/^static int group_slide_up(xdfile_t *xdf, struct xdlgroup *g)$/;"	f	typeref:typename:int	file:
gss_context	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^	gss_ctx_id_t gss_context;$/;"	m	struct:__anon7fc745b70108	typeref:typename:gss_ctx_id_t	file:
gssapi_context_dispose	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^static void gssapi_context_dispose(http_auth_gssapi_context *ctx)$/;"	f	typeref:typename:void	file:
gssapi_context_free	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^static void gssapi_context_free(git_http_auth_context *c)$/;"	f	typeref:typename:void	file:
gssapi_err_set	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^static void gssapi_err_set($/;"	f	typeref:typename:void	file:
gssapi_init_context	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^static int gssapi_init_context($/;"	f	typeref:typename:int	file:
gssapi_is_complete	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^static int gssapi_is_complete(git_http_auth_context *c)$/;"	f	typeref:typename:int	file:
gssapi_next_token	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^static int gssapi_next_token($/;"	f	typeref:typename:int	file:
gssapi_oid_krb5	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^static gss_OID_desc gssapi_oid_krb5 =$/;"	v	typeref:typename:gss_OID_desc	file:
gssapi_oid_spnego	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^static gss_OID_desc gssapi_oid_spnego =$/;"	v	typeref:typename:gss_OID_desc	file:
gssapi_oids	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^static gss_OID gssapi_oids[] =$/;"	v	typeref:typename:gss_OID[]	file:
gssapi_set_challenge	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^static int gssapi_set_challenge($/;"	f	typeref:typename:int	file:
guess	my_project/libgit2/src/libgit2/sysdir.c	/^	int (*guess)(git_str *out);$/;"	m	struct:git_sysdir__dir	typeref:typename:int (*)(git_str * out)	file:
guess_refish	my_project/libgit2/examples/checkout.c	/^static int guess_refish(git_annotated_commit **out, git_repository *repo, const char *ref)$/;"	f	typeref:typename:int	file:
guilty	my_project/libgit2/src/libgit2/blame.h	/^	bool guilty;$/;"	m	struct:git_blame__entry	typeref:typename:bool
gzFile	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzFile /;"	d
gzFile	my_project/libgit2/deps/zlib/zlib.h	/^typedef struct gzFile_s *gzFile;    \/* semi-opaque gzip file descriptor *\/$/;"	t	typeref:struct:gzFile_s *
gzFile_s	my_project/libgit2/deps/zlib/zlib.h	/^struct gzFile_s {$/;"	s
gz_error	my_project/libgit2/deps/zlib/zconf.h	/^#    define gz_error /;"	d
gz_header	my_project/libgit2/deps/zlib/zconf.h	/^#  define gz_header /;"	d
gz_header	my_project/libgit2/deps/zlib/zlib.h	/^} gz_header;$/;"	t	typeref:struct:gz_header_s
gz_header_s	my_project/libgit2/deps/zlib/zconf.h	/^#  define gz_header_s /;"	d
gz_header_s	my_project/libgit2/deps/zlib/zlib.h	/^typedef struct gz_header_s {$/;"	s
gz_headerp	my_project/libgit2/deps/zlib/zconf.h	/^#  define gz_headerp /;"	d
gz_headerp	my_project/libgit2/deps/zlib/zlib.h	/^typedef gz_header FAR *gz_headerp;$/;"	t	typeref:typename:gz_header FAR *
gz_intmax	my_project/libgit2/deps/zlib/zconf.h	/^#    define gz_intmax /;"	d
gz_state	my_project/libgit2/deps/zlib/gzguts.h	/^} gz_state;$/;"	t	typeref:struct:__anonea1c2cc10108
gz_statep	my_project/libgit2/deps/zlib/gzguts.h	/^typedef gz_state FAR *gz_statep;$/;"	t	typeref:typename:gz_state FAR *
gz_strwinerror	my_project/libgit2/deps/zlib/zconf.h	/^#    define gz_strwinerror /;"	d
gzbuffer	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzbuffer /;"	d
gzclearerr	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzclearerr /;"	d
gzclose	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzclose /;"	d
gzclose_r	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzclose_r /;"	d
gzclose_w	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzclose_w /;"	d
gzdirect	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzdirect /;"	d
gzdopen	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzdopen /;"	d
gzeof	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzeof /;"	d
gzerror	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzerror /;"	d
gzflush	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzflush /;"	d
gzfread	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzfread /;"	d
gzfwrite	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzfwrite /;"	d
gzgetc	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzgetc /;"	d
gzgetc	my_project/libgit2/deps/zlib/zlib.h	/^#  define gzgetc(/;"	d
gzgetc_	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzgetc_ /;"	d
gzgets	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzgets /;"	d
gzhead	my_project/libgit2/deps/zlib/deflate.h	/^    gz_headerp  gzhead;  \/* gzip header information to write *\/$/;"	m	struct:internal_state	typeref:typename:gz_headerp
gzindex	my_project/libgit2/deps/zlib/deflate.h	/^    ulg   gzindex;       \/* where in extra, name, or comment *\/$/;"	m	struct:internal_state	typeref:typename:ulg
gzoffset	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzoffset /;"	d
gzoffset	my_project/libgit2/deps/zlib/zlib.h	/^#    define gzoffset /;"	d
gzoffset64	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzoffset64 /;"	d
gzopen	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzopen /;"	d
gzopen	my_project/libgit2/deps/zlib/zlib.h	/^#    define gzopen /;"	d
gzopen64	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzopen64 /;"	d
gzopen_w	my_project/libgit2/deps/zlib/zconf.h	/^#      define gzopen_w /;"	d
gzprintf	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzprintf /;"	d
gzputc	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzputc /;"	d
gzputs	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzputs /;"	d
gzread	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzread /;"	d
gzrewind	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzrewind /;"	d
gzseek	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzseek /;"	d
gzseek	my_project/libgit2/deps/zlib/zlib.h	/^#    define gzseek /;"	d
gzseek64	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzseek64 /;"	d
gzsetparams	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzsetparams /;"	d
gztell	my_project/libgit2/deps/zlib/zconf.h	/^#    define gztell /;"	d
gztell	my_project/libgit2/deps/zlib/zlib.h	/^#    define gztell /;"	d
gztell64	my_project/libgit2/deps/zlib/zconf.h	/^#    define gztell64 /;"	d
gzungetc	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzungetc /;"	d
gzvprintf	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzvprintf /;"	d
gzwrite	my_project/libgit2/deps/zlib/zconf.h	/^#    define gzwrite /;"	d
h	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int h[8];$/;"	m	struct:__anone07cb6fd0208	typeref:typename:unsigned int[8]
h	my_project/libgit2/src/util/win32/dir.h	/^	HANDLE h;$/;"	m	struct:__anon088cf8e70108	typeref:typename:HANDLE
h0	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int h0, h1, h2, h3, h4;$/;"	m	struct:__anone07cb6fd0108	typeref:typename:unsigned int
h1	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int h0, h1, h2, h3, h4;$/;"	m	struct:__anone07cb6fd0108	typeref:typename:unsigned int
h2	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int h0, h1, h2, h3, h4;$/;"	m	struct:__anone07cb6fd0108	typeref:typename:unsigned int
h3	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int h0, h1, h2, h3, h4;$/;"	m	struct:__anone07cb6fd0108	typeref:typename:unsigned int
h4	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int h0, h1, h2, h3, h4;$/;"	m	struct:__anone07cb6fd0108	typeref:typename:unsigned int
ha	my_project/libgit2/deps/xdiff/xdiffi.h	/^	unsigned long const *ha;$/;"	m	struct:s_diffdata	typeref:typename:unsigned long const *
ha	my_project/libgit2/deps/xdiff/xprepare.c	/^	unsigned long ha;$/;"	m	struct:s_xdlclass	typeref:typename:unsigned long	file:
ha	my_project/libgit2/deps/xdiff/xtypes.h	/^	unsigned long *ha;$/;"	m	struct:s_xdfile	typeref:typename:unsigned long *
ha	my_project/libgit2/deps/xdiff/xtypes.h	/^	unsigned long ha;$/;"	m	struct:s_xrecord	typeref:typename:unsigned long
hack_index	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^static void hack_index(char *files[])$/;"	f	typeref:typename:void	file:
had_accept	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL had_accept;                  \/* (*ACCEPT) encountered *\/$/;"	m	struct:compile_data	typeref:typename:BOOL
had_pruneorskip	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL had_pruneorskip;             \/* (*PRUNE) or (*SKIP) encountered *\/$/;"	m	struct:compile_data	typeref:typename:BOOL
halfBase	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^static const UTF32 halfBase = 0x0010000UL;$/;"	v	typeref:typename:const UTF32	file:
halfMask	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^static const UTF32 halfMask = 0x3FFUL;$/;"	v	typeref:typename:const UTF32	file:
halfShift	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^static const int halfShift  = 10; \/* used for shifting by 10 bits *\/$/;"	v	typeref:typename:const int	file:
handle	my_project/libgit2/src/util/fs_path.h	/^	HANDLE handle;$/;"	m	struct:git_fs_path_diriter	typeref:typename:HANDLE
handle	my_project/libgit2/src/util/hash/win32.c	/^	HCRYPTPROV handle;$/;"	m	struct:cryptoapi_provider	typeref:typename:HCRYPTPROV	file:
handle_at_syntax	my_project/libgit2/src/libgit2/revparse.c	/^static int handle_at_syntax(git_object **out, git_reference **ref, const char *spec, size_t iden/;"	f	typeref:typename:int	file:
handle_auth	my_project/libgit2/src/libgit2/transports/http.c	/^static int handle_auth($/;"	f	typeref:typename:int	file:
handle_caret_curly_syntax	my_project/libgit2/src/libgit2/revparse.c	/^static int handle_caret_curly_syntax(git_object **out, git_object *obj, const char *curly_braces/;"	f	typeref:typename:int	file:
handle_caret_parent_syntax	my_project/libgit2/src/libgit2/revparse.c	/^static int handle_caret_parent_syntax(git_object **out, git_object *obj, int n)$/;"	f	typeref:typename:int	file:
handle_colon_syntax	my_project/libgit2/src/libgit2/revparse.c	/^static int handle_colon_syntax($/;"	f	typeref:typename:int	file:
handle_count	my_project/libgit2/src/util/hash/openssl.c	/^static int handle_count;$/;"	v	typeref:typename:int	file:
handle_grep_syntax	my_project/libgit2/src/libgit2/revparse.c	/^static int handle_grep_syntax(git_object **out, git_repository *repo, const git_oid *spec_oid, c/;"	f	typeref:typename:int	file:
handle_linear_syntax	my_project/libgit2/src/libgit2/revparse.c	/^static int handle_linear_syntax(git_object **out, git_object *obj, int n)$/;"	f	typeref:typename:int	file:
handle_matched_item	my_project/libgit2/src/libgit2/diff_generate.c	/^static int handle_matched_item($/;"	f	typeref:typename:int	file:
handle_next	my_project/libgit2/tests/util/dirent.c	/^static void handle_next(git_fs_path_diriter *diriter, walk_data *walk)$/;"	f	typeref:typename:void	file:
handle_non_blob	my_project/libgit2/src/libgit2/diff_tform.c	/^static void handle_non_blob($/;"	f	typeref:typename:void	file:
handle_proxy_auth	my_project/libgit2/src/libgit2/transports/http.c	/^GIT_INLINE(int) handle_proxy_auth($/;"	f	typeref:typename:int
handle_remote_auth	my_project/libgit2/src/libgit2/transports/http.c	/^GIT_INLINE(int) handle_remote_auth($/;"	f	typeref:typename:int
handle_response	my_project/libgit2/src/libgit2/transports/http.c	/^static int handle_response($/;"	f	typeref:typename:int	file:
handle_sockerr	my_project/libgit2/src/libgit2/streams/socket.c	/^static int handle_sockerr(GIT_SOCKET socket)$/;"	f	typeref:typename:int	file:
handle_unmatched_new_item	my_project/libgit2/src/libgit2/diff_generate.c	/^static int handle_unmatched_new_item($/;"	f	typeref:typename:int	file:
handle_unmatched_old_item	my_project/libgit2/src/libgit2/diff_generate.c	/^static int handle_unmatched_old_item($/;"	f	typeref:typename:int	file:
handle_wc_error	my_project/libgit2/src/util/win32/w32_buffer.c	/^GIT_INLINE(int) handle_wc_error(void)$/;"	f	typeref:typename:int
handler	sdb.c	/^  int (*handler) (char *);$/;"	m	struct:__anon10587f2f0108	typeref:typename:int (*)(char *)	file:
has_at	my_project/libgit2/src/util/net.c	/^static bool has_at(const char *str)$/;"	f	typeref:typename:bool	file:
has_ca_chain	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static bool has_ca_chain = false;$/;"	v	typeref:typename:bool	file:
has_cache	my_project/libgit2/src/libgit2/pack.h	/^		 has_cache:1;$/;"	m	struct:git_pack_file	typeref:typename:unsigned:1
has_changes_cb	my_project/libgit2/src/libgit2/stash.c	/^static int has_changes_cb($/;"	f	typeref:typename:int	file:
has_cleanup	my_project/libgit2/tests/util/assert.c	/^static int has_cleanup(void)$/;"	f	typeref:typename:int	file:
has_common	my_project/libgit2/deps/xdiff/xhistogram.c	/^		     has_common;$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
has_config_worktree	my_project/libgit2/src/libgit2/repository.c	/^static int has_config_worktree(bool *out, git_config *cfg)$/;"	f	typeref:typename:int	file:
has_context	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^	    has_context : 1,$/;"	m	struct:__anon0a0089cf0108	typeref:typename:int:1	file:
has_cr_in_index	my_project/libgit2/src/libgit2/crlf.c	/^static int has_cr_in_index(const git_filter_source *src)$/;"	f	typeref:typename:int	file:
has_credentials	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^	    has_credentials : 1,$/;"	m	struct:__anon0a0089cf0108	typeref:typename:int:1	file:
has_dir_name	my_project/libgit2/src/libgit2/index.c	/^static int has_dir_name(git_index *index,$/;"	f	typeref:typename:int	file:
has_entry	my_project/libgit2/src/libgit2/indexer.c	/^GIT_INLINE(bool) has_entry(git_indexer *idx, git_oid *id)$/;"	f	typeref:typename:bool
has_file_name	my_project/libgit2/src/libgit2/index.c	/^static int has_file_name(git_index *index,$/;"	f	typeref:typename:int	file:
has_identity	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^	int has_identity : 1,$/;"	m	struct:__anon0a0089cf0108	typeref:typename:int:1	file:
has_matches	my_project/libgit2/deps/xdiff/xpatience.c	/^	unsigned long has_matches;$/;"	m	struct:hashmap	typeref:typename:unsigned long	file:
has_nsecs	my_project/libgit2/tests/libgit2/index/nsec.c	/^static bool has_nsecs(void)$/;"	f	typeref:typename:bool	file:
has_reflog	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int has_reflog(git_repository *repo, const char *name)$/;"	f	typeref:typename:int	file:
has_set_som	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL has_set_som;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
has_skip_arg	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL has_skip_arg;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
has_skip_in_assert_back	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL has_skip_in_assert_back;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
has_then	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL has_then;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
hash	my_project/libgit2/deps/xdiff/xpatience.c	/^		unsigned long hash;$/;"	m	struct:hashmap::entry	typeref:typename:unsigned long	file:
hash	my_project/libgit2/src/libgit2/delta.c	/^	struct index_entry *hash[GIT_FLEX_ARRAY];$/;"	m	struct:git_delta_index	typeref:struct:index_entry * []	file:
hash	my_project/libgit2/src/libgit2/pack-objects.h	/^	unsigned int hash; \/* name hint hash *\/$/;"	m	struct:git_pobject	typeref:typename:unsigned int
hash	my_project/libgit2/src/libgit2/path.c	/^	const char *hash;$/;"	m	struct:__anon58077f5d0208	typeref:typename:const char *	file:
hash_and_save	my_project/libgit2/src/libgit2/indexer.c	/^static int hash_and_save(git_indexer *idx, git_rawobj *obj, off64_t entry_start)$/;"	f	typeref:typename:int	file:
hash_bits	my_project/libgit2/deps/zlib/deflate.h	/^    uInt  hash_bits;      \/* log2(hash_size) *\/$/;"	m	struct:internal_state	typeref:typename:uInt
hash_buf	my_project/libgit2/src/cli/cmd_hash_object.c	/^static int hash_buf($/;"	f	typeref:typename:int	file:
hash_cng_final	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_cng_final(unsigned char *out, git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:int
hash_cng_init	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_cng_init(git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:int
hash_cng_update	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_cng_update(git_hash_win32_ctx *ctx, const void *_data, size_t len)$/;"	f	typeref:typename:int
hash_cryptoapi_final	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_cryptoapi_final(unsigned char *out, git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:int
hash_cryptoapi_init	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_cryptoapi_init(git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:int
hash_cryptoapi_update	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_cryptoapi_update(git_hash_win32_ctx *ctx, const void *_data, size_t len)$/;"	f	typeref:typename:int
hash_ctx	my_project/libgit2/include/git2/odb_backend.h	/^	void *hash_ctx;$/;"	m	struct:git_odb_stream	typeref:typename:void *
hash_ctx	my_project/libgit2/src/libgit2/indexer.c	/^	git_hash_ctx hash_ctx;$/;"	m	struct:git_indexer	typeref:typename:git_hash_ctx	file:
hash_ctx_cng_cleanup	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(void) hash_ctx_cng_cleanup(git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:void
hash_ctx_cryptoapi_cleanup	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(void) hash_ctx_cryptoapi_cleanup(git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:void
hash_data	my_project/libgit2/src/util/hash/win32.c	/^	cng_hash_data_fn hash_data;$/;"	m	struct:cng_provider	typeref:typename:cng_hash_data_fn	file:
hash_handle	my_project/libgit2/src/util/hash/win32.h	/^	HANDLE \/* BCRYPT_HASH_HANDLE *\/ hash_handle;$/;"	m	struct:git_hash_win32_cng_ctx	typeref:typename:HANDLE
hash_handle	my_project/libgit2/src/util/hash/win32.h	/^	HCRYPTHASH hash_handle;$/;"	m	struct:git_hash_win32_cryptoapi_ctx	typeref:typename:HCRYPTHASH
hash_header	my_project/libgit2/src/libgit2/indexer.c	/^static int hash_header(git_hash_ctx *ctx, off64_t len, git_object_t type)$/;"	f	typeref:typename:int	file:
hash_header	my_project/libgit2/src/libgit2/odb.c	/^static int hash_header(git_hash_ctx *ctx, git_object_size_t size, git_object_t type)$/;"	f	typeref:typename:int	file:
hash_mask	my_project/libgit2/deps/zlib/deflate.h	/^    uInt  hash_mask;      \/* hash_size-1 *\/$/;"	m	struct:internal_state	typeref:typename:uInt
hash_mask	my_project/libgit2/src/libgit2/delta.c	/^	unsigned int hash_mask;$/;"	m	struct:git_delta_index	typeref:typename:unsigned int	file:
hash_md5	my_project/libgit2/include/git2/cert.h	/^	unsigned char hash_md5[16];$/;"	m	struct:__anon7ca863480308	typeref:typename:unsigned char[16]
hash_object	my_project/libgit2/src/util/hash/win32.h	/^	PBYTE hash_object;$/;"	m	struct:git_hash_win32_cng_ctx	typeref:typename:PBYTE
hash_object_fail	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^static void hash_object_fail(git_oid *oid, git_rawobj *obj)$/;"	f	typeref:typename:void	file:
hash_object_pass	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^static void hash_object_pass(git_oid *oid, git_rawobj *obj)$/;"	f	typeref:typename:void	file:
hash_object_stream	my_project/libgit2/src/libgit2/indexer.c	/^static int hash_object_stream(git_indexer*idx, git_packfile_stream *stream)$/;"	f	typeref:typename:int	file:
hash_partially	my_project/libgit2/src/libgit2/indexer.c	/^static void hash_partially(git_indexer *idx, const uint8_t *data, size_t size)$/;"	f	typeref:typename:void	file:
hash_provider	my_project/libgit2/src/util/hash/win32.c	/^static hash_win32_provider hash_provider = {0};$/;"	v	typeref:typename:hash_win32_provider	file:
hash_provider_init	my_project/libgit2/src/util/hash/win32.c	/^static int hash_provider_init(void)$/;"	f	typeref:typename:int	file:
hash_provider_shutdown	my_project/libgit2/src/util/hash/win32.c	/^static void hash_provider_shutdown(void)$/;"	f	typeref:typename:void	file:
hash_sha1	my_project/libgit2/include/git2/cert.h	/^	unsigned char hash_sha1[20];$/;"	m	struct:__anon7ca863480308	typeref:typename:unsigned char[20]
hash_sha1_cng_ctx_init	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_sha1_cng_ctx_init(git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:int
hash_sha1_cryptoapi_ctx_init_init	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_sha1_cryptoapi_ctx_init_init(git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:int
hash_sha1_win32_ctx_init	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_sha1_win32_ctx_init(git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:int
hash_sha256	my_project/libgit2/include/git2/cert.h	/^	unsigned char hash_sha256[32];$/;"	m	struct:__anon7ca863480308	typeref:typename:unsigned char[32]
hash_sha256_cng_ctx_init	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_sha256_cng_ctx_init(git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:int
hash_sha256_cryptoapi_ctx_init	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_sha256_cryptoapi_ctx_init(git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:int
hash_sha256_win32_ctx_init	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_sha256_win32_ctx_init(git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:int
hash_shift	my_project/libgit2/deps/zlib/deflate.h	/^    uInt  hash_shift;$/;"	m	struct:internal_state	typeref:typename:uInt
hash_size	my_project/libgit2/deps/zlib/deflate.h	/^    uInt  hash_size;      \/* number of elements in hash table *\/$/;"	m	struct:internal_state	typeref:typename:uInt
hash_win32_cleanup	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(void) hash_win32_cleanup(git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:void
hash_win32_final	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_win32_final(unsigned char *out, git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:int
hash_win32_init	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_win32_init(git_hash_win32_ctx *ctx)$/;"	f	typeref:typename:int
hash_win32_provider	my_project/libgit2/src/util/hash/win32.c	/^} hash_win32_provider;$/;"	t	typeref:struct:__anon307989470108	file:
hash_win32_update	my_project/libgit2/src/util/hash/win32.c	/^GIT_INLINE(int) hash_win32_update(git_hash_win32_ctx *ctx, const void *data, size_t len)$/;"	f	typeref:typename:int
hashmap	my_project/libgit2/deps/xdiff/xpatience.c	/^struct hashmap {$/;"	s	file:
hashsig_add_hashes	my_project/libgit2/src/libgit2/hashsig.c	/^static int hashsig_add_hashes($/;"	f	typeref:typename:int	file:
hashsig_alloc	my_project/libgit2/src/libgit2/hashsig.c	/^static git_hashsig *hashsig_alloc(git_hashsig_option_t opts)$/;"	f	typeref:typename:git_hashsig *	file:
hashsig_cmp	my_project/libgit2/src/libgit2/hashsig.c	/^typedef int (*hashsig_cmp)(const void *a, const void *b, void *);$/;"	t	typeref:typename:int (*)(const void * a,const void * b,void *)	file:
hashsig_cmp_max	my_project/libgit2/src/libgit2/hashsig.c	/^static int hashsig_cmp_max(const void *a, const void *b, void *payload)$/;"	f	typeref:typename:int	file:
hashsig_cmp_min	my_project/libgit2/src/libgit2/hashsig.c	/^static int hashsig_cmp_min(const void *a, const void *b, void *payload)$/;"	f	typeref:typename:int	file:
hashsig_finalize_hashes	my_project/libgit2/src/libgit2/hashsig.c	/^static int hashsig_finalize_hashes(git_hashsig *sig)$/;"	f	typeref:typename:int	file:
hashsig_heap	my_project/libgit2/src/libgit2/hashsig.c	/^} hashsig_heap;$/;"	t	typeref:struct:__anon8885faf70108	file:
hashsig_heap_compare	my_project/libgit2/src/libgit2/hashsig.c	/^static int hashsig_heap_compare(const hashsig_heap *a, const hashsig_heap *b)$/;"	f	typeref:typename:int	file:
hashsig_heap_down	my_project/libgit2/src/libgit2/hashsig.c	/^static void hashsig_heap_down(hashsig_heap *h, int el)$/;"	f	typeref:typename:void	file:
hashsig_heap_init	my_project/libgit2/src/libgit2/hashsig.c	/^static void hashsig_heap_init(hashsig_heap *h, hashsig_cmp cmp)$/;"	f	typeref:typename:void	file:
hashsig_heap_insert	my_project/libgit2/src/libgit2/hashsig.c	/^static void hashsig_heap_insert(hashsig_heap *h, hashsig_t val)$/;"	f	typeref:typename:void	file:
hashsig_heap_sort	my_project/libgit2/src/libgit2/hashsig.c	/^static void hashsig_heap_sort(hashsig_heap *h)$/;"	f	typeref:typename:void	file:
hashsig_heap_up	my_project/libgit2/src/libgit2/hashsig.c	/^static void hashsig_heap_up(hashsig_heap *h, int el)$/;"	f	typeref:typename:void	file:
hashsig_in_progress	my_project/libgit2/src/libgit2/hashsig.c	/^} hashsig_in_progress;$/;"	t	typeref:struct:__anon8885faf70208	file:
hashsig_in_progress_init	my_project/libgit2/src/libgit2/hashsig.c	/^static int hashsig_in_progress_init($/;"	f	typeref:typename:int	file:
hashsig_state	my_project/libgit2/src/libgit2/hashsig.c	/^typedef uint64_t hashsig_state;$/;"	t	typeref:typename:uint64_t	file:
hashsig_t	my_project/libgit2/src/libgit2/hashsig.c	/^typedef uint32_t hashsig_t;$/;"	t	typeref:typename:uint32_t	file:
hasthen	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   hasthen;                 \/* Pattern contains (*THEN) *\/$/;"	m	struct:match_data	typeref:typename:BOOL
have	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned have;              \/* number of code lengths in lens[] *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
have	my_project/libgit2/deps/zlib/zlib.h	/^    unsigned have;$/;"	m	struct:gzFile_s	typeref:typename:unsigned
have_delta	my_project/libgit2/src/libgit2/indexer.c	/^		have_delta :1,$/;"	m	struct:git_indexer	typeref:typename:unsigned int:1	file:
have_refs	my_project/libgit2/src/libgit2/transports/local.c	/^		have_refs : 1;$/;"	m	struct:__anona3bc4f8a0108	typeref:typename:unsigned:1	file:
have_refs	my_project/libgit2/src/libgit2/transports/smart.h	/^	         have_refs : 1,$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:unsigned:1
have_regex	my_project/libgit2/src/libgit2/config.c	/^	int have_regex;$/;"	m	struct:__anona0399aa60508	typeref:typename:int	file:
have_stream	my_project/libgit2/src/libgit2/indexer.c	/^		have_stream :1,$/;"	m	struct:git_indexer	typeref:typename:unsigned int:1	file:
havedict	my_project/libgit2/deps/zlib/inflate.h	/^    int havedict;               \/* true if dictionary provided *\/$/;"	m	struct:inflate_state	typeref:typename:int
hbits	my_project/libgit2/deps/xdiff/xprepare.c	/^	unsigned int hbits;$/;"	m	struct:s_xdlclassifier	typeref:typename:unsigned int	file:
hbits	my_project/libgit2/deps/xdiff/xtypes.h	/^	unsigned int hbits;$/;"	m	struct:s_xdfile	typeref:typename:unsigned int
hcrc	my_project/libgit2/deps/zlib/zlib.h	/^    int     hcrc;       \/* true if there was or will be a header crc *\/$/;"	m	struct:gz_header_s	typeref:typename:int
hdr	my_project/libgit2/src/libgit2/indexer.c	/^	struct git_pack_header hdr;$/;"	m	struct:git_indexer	typeref:struct:git_pack_header	file:
hdr_entries	my_project/libgit2/src/libgit2/pack.h	/^	uint32_t hdr_entries;$/;"	m	struct:git_pack_header	typeref:typename:uint32_t
hdr_signature	my_project/libgit2/src/libgit2/pack.h	/^	uint32_t hdr_signature;$/;"	m	struct:git_pack_header	typeref:typename:uint32_t
hdr_sz	my_project/libgit2/src/libgit2/delta.c	/^static int hdr_sz($/;"	f	typeref:typename:int	file:
hdr_version	my_project/libgit2/src/libgit2/pack.h	/^	uint32_t hdr_version;$/;"	m	struct:git_pack_header	typeref:typename:uint32_t
head	my_project/libgit2/deps/xdiff/xtypes.h	/^	chanode_t *head, *tail;$/;"	m	struct:s_chastore	typeref:typename:chanode_t *
head	my_project/libgit2/deps/zlib/deflate.h	/^    Posf *head; \/* Heads of the hash chains or NIL. *\/$/;"	m	struct:internal_state	typeref:typename:Posf *
head	my_project/libgit2/deps/zlib/inflate.h	/^    gz_headerp head;            \/* where to save gzip header information *\/$/;"	m	struct:inflate_state	typeref:typename:gz_headerp
head	my_project/libgit2/src/libgit2/config_list.c	/^	config_entry_list *head;$/;"	m	struct:config_list_iterator	typeref:typename:config_entry_list *	file:
head	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_remote_head head;$/;"	m	struct:__anonb9ceeb0b0308	typeref:typename:git_remote_head
head	my_project/libgit2/tests/libgit2/commit/write.c	/^static git_reference *head, *branch;$/;"	v	typeref:typename:git_reference *	file:
head2idx	my_project/libgit2/src/libgit2/status.h	/^	git_diff *head2idx;$/;"	m	struct:git_status_list	typeref:typename:git_diff *
head_detached	my_project/libgit2/src/libgit2/rebase.c	/^	unsigned int head_detached:1,$/;"	m	struct:git_rebase	typeref:typename:unsigned int:1	file:
head_oid	my_project/libgit2/src/libgit2/submodule.h	/^	git_oid head_oid;$/;"	m	struct:git_submodule	typeref:typename:git_oid
head_old	my_project/libgit2/tests/libgit2/commit/write.c	/^static char *head_old;$/;"	v	typeref:typename:char *	file:
head_to_index	my_project/libgit2/include/git2/status.h	/^	git_diff_delta *head_to_index;$/;"	m	struct:__anon6794a3fe0508	typeref:typename:git_diff_delta *
head_tracker_sym_ref_name	my_project/libgit2/tests/libgit2/refs/read.c	/^static const char *head_tracker_sym_ref_name = "HEAD_TRACKER";$/;"	v	typeref:typename:const char *	file:
header	my_project/libgit2/include/git2/diff.h	/^	char   header[GIT_DIFF_HUNK_HEADER_SIZE];   \/**< Header text, NUL-byte terminated *\/$/;"	m	struct:__anon7f3f1dd30a08	typeref:typename:char[]
header	my_project/libgit2/tests/libgit2/commit/parse.c	/^	const char *header;$/;"	m	struct:__anon39d5c3ee0108	typeref:typename:const char *	file:
header	my_project/libgit2/tests/libgit2/commit/parse.c	/^	const char *header;$/;"	m	struct:__anon39d5c3ee0208	typeref:typename:const char *	file:
header	my_project/libgit2/tests/libgit2/commit/parse.c	/^	const char *header;$/;"	m	struct:__anon39d5c3ee0308	typeref:typename:const char *	file:
header_len	my_project/libgit2/include/git2/diff.h	/^	size_t header_len;    \/**< Number of bytes in header text *\/$/;"	m	struct:__anon7f3f1dd30a08	typeref:typename:size_t
header_new_path	my_project/libgit2/src/libgit2/patch_parse.c	/^	char *header_old_path, *header_new_path;$/;"	m	struct:__anonddb10c3a0108	typeref:typename:char *	file:
header_old_path	my_project/libgit2/src/libgit2/patch_parse.c	/^	char *header_old_path, *header_new_path;$/;"	m	struct:__anonddb10c3a0108	typeref:typename:char *	file:
header_path_len	my_project/libgit2/src/libgit2/patch_parse.c	/^static size_t header_path_len(git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:size_t	file:
header_size	my_project/libgit2/src/libgit2/patch.h	/^	size_t header_size;$/;"	m	struct:git_patch	typeref:typename:size_t
header_state	my_project/libgit2/deps/llhttp/llhttp.h	/^  uint8_t header_state;$/;"	m	struct:llhttp__internal_s	typeref:typename:uint8_t
headertest	my_project/libgit2/tests/headertest/CMakeLists.txt	/^add_executable(headertest headertest.c)$/;"	t
heads	my_project/libgit2/examples/merge.c	/^	const char **heads;$/;"	m	struct:merge_options	typeref:typename:const char **	file:
heads	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_vector heads;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:git_vector
heads_count	my_project/libgit2/examples/merge.c	/^	size_t heads_count;$/;"	m	struct:merge_options	typeref:typename:size_t	file:
heap	my_project/libgit2/deps/zlib/deflate.h	/^    int heap[2*L_CODES+1];      \/* heap used to build the Huffman trees *\/$/;"	m	struct:internal_state	typeref:typename:int[]
heap_len	my_project/libgit2/deps/zlib/deflate.h	/^    int heap_len;               \/* number of elements in the heap *\/$/;"	m	struct:internal_state	typeref:typename:int
heap_max	my_project/libgit2/deps/zlib/deflate.h	/^    int heap_max;               \/* element of largest frequency *\/$/;"	m	struct:internal_state	typeref:typename:int
heapframe	my_project/libgit2/deps/pcre/pcre_exec.c	/^typedef struct heapframe {$/;"	s	file:
heapframe	my_project/libgit2/deps/pcre/pcre_exec.c	/^} heapframe;$/;"	t	typeref:struct:heapframe	file:
hello_id	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^static char *hello_id = "22596363b3de40b06f981fb85d82312e8c0ed511";$/;"	v	typeref:typename:char *	file:
hello_text	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^static char *hello_text = "hello world\\n";$/;"	v	typeref:typename:char *	file:
hello_world	my_project/libgit2/tests/util/assert.c	/^static const char *hello_world = "hello, world";$/;"	v	typeref:typename:const char *	file:
helloworld_cmd	my_project/libgit2/tests/util/process/start.c	/^static git_str helloworld_cmd = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
help	my_project/libgit2/src/cli/opt.h	/^	const char *help;$/;"	m	struct:cli_opt_spec	typeref:typename:const char *
heur_min	my_project/libgit2/deps/xdiff/xdiffi.h	/^	long heur_min;$/;"	m	struct:s_xdalgoenv	typeref:typename:long
hex_encode	my_project/libgit2/src/util/str.c	/^static char hex_encode[] = "0123456789abcdef";$/;"	v	typeref:typename:char[]	file:
hide	my_project/libgit2/examples/log.c	/^	int hide;$/;"	m	struct:log_state	typeref:typename:int	file:
hide_cb	my_project/libgit2/src/libgit2/revwalk.h	/^	git_revwalk_hide_cb hide_cb;$/;"	m	struct:git_revwalk	typeref:typename:git_revwalk_hide_cb
hide_cb_payload	my_project/libgit2/src/libgit2/revwalk.h	/^	void *hide_cb_payload;$/;"	m	struct:git_revwalk	typeref:typename:void *
hide_commit_cb	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^static int hide_commit_cb(const git_oid *commit_id, void *data)$/;"	f	typeref:typename:int	file:
hide_commit_use_payload_cb	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^static int hide_commit_use_payload_cb(const git_oid *commit_id, void *data)$/;"	f	typeref:typename:int	file:
hide_every_commit_cb	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^static int hide_every_commit_cb(const git_oid *commit_id, void *data)$/;"	f	typeref:typename:int	file:
hide_none_cb	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^static int hide_none_cb(const git_oid *commit_id, void *data)$/;"	f	typeref:typename:int	file:
hierarchical	my_project/libgit2/src/util/net.c	/^	unsigned int hierarchical : 1;$/;"	m	struct:__anon850d8ea80108	typeref:typename:unsigned int:1	file:
high_water	my_project/libgit2/deps/zlib/deflate.h	/^    ulg high_water;$/;"	m	struct:internal_state	typeref:typename:ulg
hintpath	my_project/libgit2/src/libgit2/blob.c	/^	char *hintpath;$/;"	m	struct:__anon38237caf0108	typeref:typename:char *	file:
histindex	my_project/libgit2/deps/xdiff/xhistogram.c	/^struct histindex {$/;"	s	file:
histogram_diff	my_project/libgit2/deps/xdiff/xhistogram.c	/^static int histogram_diff(xpparam_t const *xpp, xdfenv_t *env,$/;"	f	typeref:typename:int	file:
hit_start	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 hit_start;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
hitend	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   hitend;                  \/* Hit the end of the subject at some point *\/$/;"	m	struct:match_data	typeref:typename:BOOL
hmac	my_project/libgit2/deps/ntlmclient/crypt_commoncrypto.h	/^	CCHmacContext hmac;$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:CCHmacContext
hmac	my_project/libgit2/deps/ntlmclient/crypt_mbedtls.h	/^	mbedtls_md_context_t hmac;$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:mbedtls_md_context_t
hmac	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	HMAC_CTX *hmac;$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:HMAC_CTX *
hmac_ctx_cleanup_fn	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	void (*hmac_ctx_cleanup_fn)(HMAC_CTX *ctx);$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:void (*)(HMAC_CTX * ctx)
hmac_ctx_free_fn	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	void (*hmac_ctx_free_fn)(HMAC_CTX *ctx);$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:void (*)(HMAC_CTX * ctx)
hmac_ctx_new_fn	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	HMAC_CTX *(*hmac_ctx_new_fn)(void);$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:HMAC_CTX * (*)(void)
hmac_ctx_reset_fn	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	int (*hmac_ctx_reset_fn)(HMAC_CTX *ctx);$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:int (*)(HMAC_CTX * ctx)
hmac_ctx_st	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^typedef struct hmac_ctx_st {$/;"	s
hmac_final_fn	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	int (*hmac_final_fn)(HMAC_CTX *ctx, unsigned char *md, unsigned int *len);$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:int (*)(HMAC_CTX * ctx,unsigned char * md,unsigned int * len)
hmac_init_ex_fn	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	int (*hmac_init_ex_fn)(HMAC_CTX *ctx, const void *key, int key_len, const EVP_MD *md, ENGINE *i/;"	m	struct:ntlm_crypt_ctx	typeref:typename:int (*)(HMAC_CTX * ctx,const void * key,int key_len,const EVP_MD * md,ENGINE * impl)
hmac_initialized	my_project/libgit2/deps/ntlmclient/crypt_mbedtls.h	/^	unsigned int hmac_initialized : 1;$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:unsigned int:1
hmac_update_fn	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	int (*hmac_update_fn)(HMAC_CTX *ctx, const unsigned char *data, size_t len);$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:int (*)(HMAC_CTX * ctx,const unsigned char * data,size_t len)
hold	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned long hold;         \/* input bit accumulator *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned long
home_values	my_project/libgit2/tests/libgit2/core/env.c	/^static char *home_values[] = {$/;"	v	typeref:typename:char * []	file:
homing_search_cmp	my_project/libgit2/src/libgit2/tree.c	/^static int homing_search_cmp(const void *key, const void *array_member)$/;"	f	typeref:typename:int	file:
host	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^	char *host;$/;"	m	struct:__anoncc3749c90108	typeref:typename:char *	file:
host	my_project/libgit2/src/libgit2/streams/openssl.c	/^	char *host;$/;"	m	struct:__anonb80f06c20108	typeref:typename:char *	file:
host	my_project/libgit2/src/libgit2/streams/socket.h	/^	char *host;$/;"	m	struct:__anon362d01ac0108	typeref:typename:char *
host	my_project/libgit2/src/libgit2/transports/smart.h	/^	char *host;$/;"	m	struct:git_pkt_cmd	typeref:typename:char *
host	my_project/libgit2/src/util/net.c	/^	const char *host;$/;"	m	struct:__anon850d8ea80108	typeref:typename:const char *	file:
host	my_project/libgit2/src/util/net.h	/^	char *host;$/;"	m	struct:git_net_url	typeref:typename:char *
host_len	my_project/libgit2/src/util/net.c	/^	size_t host_len;$/;"	m	struct:__anon850d8ea80108	typeref:typename:size_t	file:
host_version	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_version host_version;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_version
host_w	my_project/libgit2/src/libgit2/streams/schannel.c	/^	wchar_t *host_w;$/;"	m	struct:__anonafd1b44a0208	typeref:typename:wchar_t *	file:
hostdomain	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *hostdomain;$/;"	m	struct:ntlm_client	typeref:typename:char *
hostkey	my_project/libgit2/include/git2/cert.h	/^	const char *hostkey;$/;"	m	struct:__anon7ca863480308	typeref:typename:const char *
hostkey_len	my_project/libgit2/include/git2/cert.h	/^	size_t hostkey_len;$/;"	m	struct:__anon7ca863480308	typeref:typename:size_t
hostname	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *hostname;$/;"	m	struct:ntlm_client	typeref:typename:char *
hostname_utf16	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *hostname_utf16;$/;"	m	struct:ntlm_client	typeref:typename:char *
hostname_utf16_len	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	size_t hostname_utf16_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
how	my_project/libgit2/deps/zlib/gzguts.h	/^    int how;                \/* 0: get header, 1: copy, 2: decompress *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:int
how	my_project/libgit2/tests/libgit2/stash/apply.c	/^	bool how;$/;"	m	struct:seen_paths	typeref:typename:bool	file:
hsize	my_project/libgit2/deps/xdiff/xprepare.c	/^	long hsize;$/;"	m	struct:s_xdlclassifier	typeref:typename:long	file:
hspace	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *hspace;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
hspace_list	my_project/libgit2/deps/pcre/pcre_tables.c	/^const pcre_uint32 PRIV(hspace_list)[] = { HSPACE_LIST };$/;"	v	typeref:typename:const pcre_uint32 PRIV ()[]
http_action	my_project/libgit2/src/libgit2/transports/http.c	/^static int http_action($/;"	f	typeref:typename:int	file:
http_auth_gssapi_context	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^} http_auth_gssapi_context;$/;"	t	typeref:struct:__anon7fc745b70108	file:
http_auth_ntlm_context	my_project/libgit2/src/libgit2/transports/auth_ntlmclient.c	/^} http_auth_ntlm_context;$/;"	t	typeref:struct:__anon9ffa9aaa0108	file:
http_auth_sspi_context	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^} http_auth_sspi_context;$/;"	t	typeref:struct:__anon0a0089cf0108	file:
http_client	my_project/libgit2/src/libgit2/transports/http.c	/^	git_http_client *http_client;$/;"	m	struct:__anon515ae8bf0508	typeref:typename:git_http_client *	file:
http_client_close	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static void http_client_close(git_http_client *client)$/;"	f	typeref:typename:void	file:
http_client_connect	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int http_client_connect($/;"	f	typeref:typename:int	file:
http_client_parser_settings	my_project/libgit2/src/libgit2/transports/httpclient.c	/^GIT_INLINE(git_http_parser_settings *) http_client_parser_settings(void)$/;"	f	typeref:typename:git_http_parser_settings *
http_client_state	my_project/libgit2/src/libgit2/transports/httpclient.c	/^} http_client_state;$/;"	t	typeref:enum:__anon3d590bbe0303	file:
http_close	my_project/libgit2/src/libgit2/transports/http.c	/^static int http_close(git_smart_subtransport *t)$/;"	f	typeref:typename:int	file:
http_free	my_project/libgit2/src/libgit2/transports/http.c	/^static void http_free(git_smart_subtransport *t)$/;"	f	typeref:typename:void	file:
http_header_name_length	my_project/libgit2/src/libgit2/remote.c	/^static size_t http_header_name_length(const char *http_header)$/;"	f	typeref:typename:size_t	file:
http_major	my_project/libgit2/deps/llhttp/llhttp.h	/^  uint8_t http_major;$/;"	m	struct:llhttp__internal_s	typeref:typename:uint8_t
http_minor	my_project/libgit2/deps/llhttp/llhttp.h	/^  uint8_t http_minor;$/;"	m	struct:llhttp__internal_s	typeref:typename:uint8_t
http_parser_context	my_project/libgit2/src/libgit2/transports/httpclient.c	/^} http_parser_context;$/;"	t	typeref:struct:__anon3d590bbe0608	file:
http_proxy_config	my_project/libgit2/src/libgit2/remote.c	/^static int http_proxy_config(char **out, git_remote *remote, git_net_url *url)$/;"	f	typeref:typename:int	file:
http_proxy_env	my_project/libgit2/src/libgit2/remote.c	/^static int http_proxy_env(char **out, git_remote *remote, git_net_url *url)$/;"	f	typeref:typename:int	file:
http_server	my_project/libgit2/src/libgit2/transports/http.c	/^} http_server;$/;"	t	typeref:struct:__anon515ae8bf0408	file:
http_server_close	my_project/libgit2/src/libgit2/transports/httpclient.c	/^GIT_INLINE(void) http_server_close(git_http_server *server)$/;"	f	typeref:typename:void
http_service	my_project/libgit2/src/libgit2/transports/http.c	/^} http_service;$/;"	t	typeref:struct:__anon515ae8bf0208	file:
http_state	my_project/libgit2/src/libgit2/transports/http.c	/^} http_state;$/;"	t	typeref:enum:__anon515ae8bf0103	file:
http_stream	my_project/libgit2/src/libgit2/transports/http.c	/^} http_stream;$/;"	t	typeref:struct:__anon515ae8bf0308	file:
http_stream_free	my_project/libgit2/src/libgit2/transports/http.c	/^static void http_stream_free(git_smart_subtransport_stream *stream)$/;"	f	typeref:typename:void	file:
http_stream_read	my_project/libgit2/src/libgit2/transports/http.c	/^static int http_stream_read($/;"	f	typeref:typename:int	file:
http_stream_read_response	my_project/libgit2/src/libgit2/transports/http.c	/^static int http_stream_read_response($/;"	f	typeref:typename:int	file:
http_stream_write	my_project/libgit2/src/libgit2/transports/http.c	/^static int http_stream_write($/;"	f	typeref:typename:int	file:
http_subtransport	my_project/libgit2/src/libgit2/transports/http.c	/^} http_subtransport;$/;"	t	typeref:struct:__anon515ae8bf0508	file:
http_subtransport_definition	my_project/libgit2/src/libgit2/transport.c	/^static git_smart_subtransport_definition http_subtransport_definition = { git_smart_subtransport/;"	v	typeref:typename:git_smart_subtransport_definition	file:
humanize_secs	my_project/libgit2/tests/benchmarks/benchmark.sh	/^humanize_secs() {$/;"	f
hunk	my_project/libgit2/src/libgit2/diff_xdiff.c	/^	git_diff_hunk hunk;$/;"	m	struct:__anon544d96590108	typeref:typename:git_diff_hunk	file:
hunk	my_project/libgit2/src/libgit2/patch.h	/^	git_diff_hunk hunk;$/;"	m	struct:git_patch_hunk	typeref:typename:git_diff_hunk
hunk_byfinalline_search_cmp	my_project/libgit2/src/libgit2/blame.c	/^static int hunk_byfinalline_search_cmp(const void *key, const void *entry)$/;"	f	typeref:typename:int	file:
hunk_cb	my_project/libgit2/include/git2/apply.h	/^	git_apply_hunk_cb hunk_cb;$/;"	m	struct:__anon9141b5a00208	typeref:typename:git_apply_hunk_cb
hunk_cb	my_project/libgit2/src/libgit2/patch_generate.h	/^	git_diff_hunk_cb hunk_cb;$/;"	m	struct:git_patch_generated_output	typeref:typename:git_diff_hunk_cb
hunk_cb	my_project/libgit2/tests/libgit2/diff/binary.c	/^static int hunk_cb($/;"	f	typeref:typename:int	file:
hunk_cmp	my_project/libgit2/src/libgit2/blame.c	/^static int hunk_cmp(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
hunk_ends_at_or_before_line	my_project/libgit2/src/libgit2/blame.c	/^static bool hunk_ends_at_or_before_line(git_blame_hunk *hunk, size_t line)$/;"	f	typeref:typename:bool	file:
hunk_from_entry	my_project/libgit2/src/libgit2/blame.c	/^static git_blame_hunk *hunk_from_entry(git_blame__entry *e, git_blame *blame)$/;"	f	typeref:typename:git_blame_hunk *	file:
hunk_func	my_project/libgit2/deps/xdiff/xdiff.h	/^	xdl_emit_hunk_consume_func_t hunk_func;$/;"	m	struct:s_xdemitconf	typeref:typename:xdl_emit_hunk_consume_func_t
hunk_is_bufferblame	my_project/libgit2/src/libgit2/blame.c	/^static bool hunk_is_bufferblame(git_blame_hunk *hunk)$/;"	f	typeref:typename:bool	file:
hunk_message	my_project/libgit2/tests/libgit2/blame/blame_helpers.c	/^void hunk_message(size_t idx, const git_blame_hunk *hunk, const char *fmt, ...)$/;"	f	typeref:typename:void
hunk_new_lines	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	int hunk_new_lines;$/;"	m	struct:__anone9d3a2f30108	typeref:typename:int
hunk_old_lines	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	int hunk_old_lines;$/;"	m	struct:__anone9d3a2f30108	typeref:typename:int
hunk_skip_odds_cb	my_project/libgit2/tests/libgit2/apply/callbacks.c	/^static int hunk_skip_odds_cb(const git_diff_hunk *hunk, void *payload)$/;"	f	typeref:typename:int	file:
hunk_starts_at_or_after_line	my_project/libgit2/src/libgit2/blame.c	/^static bool hunk_starts_at_or_after_line(git_blame_hunk *hunk, size_t line)$/;"	f	typeref:typename:bool	file:
hunks	my_project/libgit2/src/libgit2/blame.h	/^	git_vector hunks;$/;"	m	struct:git_blame	typeref:typename:git_vector
hunks	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	int hunks;$/;"	m	struct:__anone9d3a2f30108	typeref:typename:int
hwm	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uchar *hwm;                  \/* High watermark of workspace *\/$/;"	m	struct:compile_data	typeref:typename:pcre_uchar *
i	my_project/libgit2/deps/ntlmclient/util.c	/^		uint32_t i;$/;"	m	union:ntlm_htonll::__anoneca72adf010a	typeref:typename:uint32_t	file:
i	my_project/libgit2/src/libgit2/config.c	/^	size_t i;$/;"	m	struct:__anona0399aa60308	typeref:typename:size_t	file:
i	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^	unsigned int i;$/;"	m	struct:annotated_commit_cb_data	typeref:typename:unsigned int	file:
i0	my_project/libgit2/deps/xdiff/xmerge.c	/^	long i0;$/;"	m	struct:s_xdmerge	typeref:typename:long	file:
i1	my_project/libgit2/deps/xdiff/xdiffi.c	/^	long i1, i2;$/;"	m	struct:s_xdpsplit	typeref:typename:long	file:
i1	my_project/libgit2/deps/xdiff/xdiffi.h	/^	long i1, i2;$/;"	m	struct:s_xdchange	typeref:typename:long
i1	my_project/libgit2/deps/xdiff/xmerge.c	/^	long i1, i2;$/;"	m	struct:s_xdmerge	typeref:typename:long	file:
i2	my_project/libgit2/deps/xdiff/xdiffi.c	/^	long i1, i2;$/;"	m	struct:s_xdpsplit	typeref:typename:long	file:
i2	my_project/libgit2/deps/xdiff/xdiffi.h	/^	long i1, i2;$/;"	m	struct:s_xdchange	typeref:typename:long
i2	my_project/libgit2/deps/xdiff/xmerge.c	/^	long i1, i2;$/;"	m	struct:s_xdmerge	typeref:typename:long	file:
i2d_X509	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*i2d_X509)(X509 *a, unsigned char **ppout);$/;"	v	typeref:typename:int (*)(X509 * a,unsigned char ** ppout)
i_ctx	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^    EVP_MD_CTX i_ctx;$/;"	m	struct:hmac_ctx_st	typeref:typename:EVP_MD_CTX
ia5	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^        ASN1_STRING *ia5;$/;"	m	union:__anon6b5cad8b0208::__anon6b5cad8b030a	typeref:typename:ASN1_STRING *
ic	my_project/libgit2/src/util/fs_path.h	/^	git_fs_path_iconv_t ic;$/;"	m	struct:git_fs_path_diriter	typeref:typename:git_fs_path_iconv_t
ic	my_project/libgit2/tests/util/iconv.c	/^static git_fs_path_iconv_t ic;$/;"	v	typeref:typename:git_fs_path_iconv_t	file:
icase_paths	my_project/libgit2/tests/libgit2/status/worktree.c	/^static const char *icase_paths[] = { "B", "c", "g", "H" };$/;"	v	typeref:typename:const char * []	file:
icase_statuses	my_project/libgit2/tests/libgit2/status/worktree.c	/^static unsigned int icase_statuses[] = {$/;"	v	typeref:typename:unsigned int[]	file:
icurr	my_project/libgit2/deps/xdiff/xtypes.h	/^	long icurr;$/;"	m	struct:s_chanode	typeref:typename:long
id	my_project/libgit2/include/git2/deprecated.h	/^	const git_oid *id;$/;"	m	struct:__anon325f306b0208	typeref:typename:const git_oid *
id	my_project/libgit2/include/git2/diff.h	/^	git_oid            id;$/;"	m	struct:__anon7f3f1dd30408	typeref:typename:git_oid
id	my_project/libgit2/include/git2/index.h	/^	git_oid id;$/;"	m	struct:git_index_entry	typeref:typename:git_oid
id	my_project/libgit2/include/git2/odb.h	/^	git_oid id;$/;"	m	struct:git_odb_expand_id	typeref:typename:git_oid
id	my_project/libgit2/include/git2/oid.h	/^	unsigned char id[GIT_OID_MAX_SIZE];$/;"	m	struct:git_oid	typeref:typename:unsigned char[]
id	my_project/libgit2/include/git2/rebase.h	/^	const git_oid id;$/;"	m	struct:__anonf9a5428c0308	typeref:typename:const git_oid
id	my_project/libgit2/include/git2/tree.h	/^	git_oid id;$/;"	m	struct:__anona533f3ca0308	typeref:typename:git_oid
id	my_project/libgit2/src/libgit2/iterator.c	/^	git_oid id;$/;"	m	struct:__anon2f88b95a0608	typeref:typename:git_oid	file:
id	my_project/libgit2/src/libgit2/notes.h	/^	git_oid id;$/;"	m	struct:git_note	typeref:typename:git_oid
id	my_project/libgit2/src/libgit2/pack-objects.c	/^	git_oid id;$/;"	m	struct:walk_object	typeref:typename:git_oid	file:
id	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_oid id;$/;"	m	struct:git_pobject	typeref:typename:git_oid
id	my_project/libgit2/src/libgit2/pack.h	/^	git_oid id;$/;"	m	struct:git_pack_entry	typeref:typename:git_oid
id	my_project/libgit2/src/libgit2/transaction.c	/^		git_oid id;$/;"	m	union:__anonbebdb9760208::__anonbebdb976030a	typeref:typename:git_oid	file:
id	my_project/libgit2/tests/libgit2/object/raw/write.c	/^    char *id;     \/* object id (sha1)                          *\/$/;"	m	struct:object_data	typeref:typename:char *	file:
id	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^    char          *id;     \/* object id (hex chars)                     *\/$/;"	m	struct:object_data	typeref:typename:char *
id	my_project/libgit2/tests/libgit2/threads/refdb.c	/^	int id;$/;"	m	struct:th_data	typeref:typename:int	file:
id_abbrev	my_project/libgit2/include/git2/diff.h	/^	uint16_t           id_abbrev;$/;"	m	struct:__anon7f3f1dd30408	typeref:typename:uint16_t
id_abbrev	my_project/libgit2/include/git2/diff.h	/^	uint16_t    id_abbrev;$/;"	m	struct:__anon7f3f1dd30608	typeref:typename:uint16_t
id_commit_id_cmp	my_project/libgit2/tests/libgit2/graph/reachable_from_any.c	/^static int id_commit_id_cmp(const void *key, const void *commit)$/;"	f	typeref:typename:int	file:
id_sha1	my_project/libgit2/tests/libgit2/core/oid.c	/^static git_oid id_sha1;$/;"	v	typeref:typename:git_oid	file:
id_sha256	my_project/libgit2/tests/libgit2/core/oid.c	/^static git_oid id_sha256;$/;"	v	typeref:typename:git_oid	file:
id_str	my_project/libgit2/src/libgit2/annotated_commit.h	/^	char id_str[GIT_OID_MAX_HEXSIZE + 1];$/;"	m	struct:git_annotated_commit	typeref:typename:char[]
id_strlen	my_project/libgit2/src/libgit2/diff_print.c	/^	int id_strlen;$/;"	m	struct:__anon0d2887b50108	typeref:typename:int	file:
id_type	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^    git_oid_t     id_type; \/* type of object id (sha1 or sha256)        *\/$/;"	m	struct:object_data	typeref:typename:git_oid_t
ident_apply	my_project/libgit2/src/libgit2/ident.c	/^static int ident_apply($/;"	f	typeref:typename:int	file:
ident_email	my_project/libgit2/src/libgit2/repository.h	/^	char *ident_email;$/;"	m	struct:git_repository	typeref:typename:char *
ident_find_id	my_project/libgit2/src/libgit2/ident.c	/^static int ident_find_id($/;"	f	typeref:typename:int	file:
ident_insert_id	my_project/libgit2/src/libgit2/ident.c	/^static int ident_insert_id($/;"	f	typeref:typename:int	file:
ident_name	my_project/libgit2/src/libgit2/repository.h	/^	char *ident_name;$/;"	m	struct:git_repository	typeref:typename:char *
ident_remove_id	my_project/libgit2/src/libgit2/ident.c	/^static int ident_remove_id($/;"	f	typeref:typename:int	file:
ident_stream	my_project/libgit2/src/libgit2/ident.c	/^static int ident_stream($/;"	f	typeref:typename:int	file:
identity	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^	SEC_WINNT_AUTH_IDENTITY_W identity;$/;"	m	struct:__anon0a0089cf0108	typeref:typename:SEC_WINNT_AUTH_IDENTITY_W	file:
idm_sha1	my_project/libgit2/tests/libgit2/core/oid.c	/^static git_oid idm_sha1;$/;"	v	typeref:typename:git_oid	file:
idm_sha256	my_project/libgit2/tests/libgit2/core/oid.c	/^static git_oid idm_sha256;$/;"	v	typeref:typename:git_oid	file:
idp_sha1	my_project/libgit2/tests/libgit2/core/oid.c	/^static git_oid idp_sha1;$/;"	v	typeref:typename:git_oid	file:
idp_sha256	my_project/libgit2/tests/libgit2/core/oid.c	/^static git_oid idp_sha256;$/;"	v	typeref:typename:git_oid	file:
ids	my_project/libgit2/include/git2/oidarray.h	/^	git_oid *ids;$/;"	m	struct:git_oidarray	typeref:typename:git_oid *
ids	my_project/libgit2/src/libgit2/pack.h	/^	unsigned char **ids;$/;"	m	struct:git_pack_file	typeref:typename:unsigned char **
idx	my_project/libgit2/deps/xdiff/xprepare.c	/^	long idx;$/;"	m	struct:s_xdlclass	typeref:typename:long	file:
idx	my_project/libgit2/src/cli/opt.h	/^	size_t idx;$/;"	m	struct:cli_opt_parser	typeref:typename:size_t
idx	my_project/libgit2/src/libgit2/diff_tform.c	/^	size_t   idx;$/;"	m	struct:__anon258239f00208	typeref:typename:size_t	file:
idx	my_project/libgit2/src/libgit2/diff_tform.c	/^	size_t idx;$/;"	m	struct:__anon258239f00108	typeref:typename:size_t	file:
idx	my_project/libgit2/tests/libgit2/apply/apply_helpers.c	/^	size_t idx;$/;"	m	struct:iterator_compare_data	typeref:typename:size_t	file:
idx	my_project/libgit2/tests/libgit2/diff/rename.c	/^	size_t idx;$/;"	m	struct:rename_expected	typeref:typename:size_t	file:
idx	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^	size_t idx;$/;"	m	struct:__anonfaf9122d0108	typeref:typename:size_t	file:
idx2wd	my_project/libgit2/src/libgit2/status.h	/^	git_diff *idx2wd;$/;"	m	struct:git_status_list	typeref:typename:git_diff *
idx_cache	my_project/libgit2/src/libgit2/pack.h	/^	git_oidmap *idx_cache;$/;"	m	struct:git_pack_file	typeref:typename:git_oidmap *
idx_signature	my_project/libgit2/src/libgit2/pack.h	/^	uint32_t idx_signature;$/;"	m	struct:git_pack_idx_header	typeref:typename:uint32_t
idx_version	my_project/libgit2/src/libgit2/pack.h	/^	uint32_t idx_version;$/;"	m	struct:git_pack_idx_header	typeref:typename:uint32_t
idxentry_equal	my_project/libgit2/src/libgit2/idxmap.c	/^#define idxentry_equal(/;"	d	file:
idxentry_icase_equal	my_project/libgit2/src/libgit2/idxmap.c	/^#define idxentry_icase_equal(/;"	d	file:
ign_global	my_project/libgit2/src/libgit2/ignore.h	/^	git_vector ign_global;$/;"	m	struct:__anonc29a75590108	typeref:typename:git_vector
ign_internal	my_project/libgit2/src/libgit2/ignore.h	/^	git_attr_file *ign_internal;$/;"	m	struct:__anonc29a75590108	typeref:typename:git_attr_file *
ign_path	my_project/libgit2/src/libgit2/ignore.h	/^	git_vector ign_path;$/;"	m	struct:__anonc29a75590108	typeref:typename:git_vector
ignore	my_project/libgit2/deps/xdiff/xdiffi.h	/^	int ignore;$/;"	m	struct:s_xdchange	typeref:typename:int
ignore	my_project/libgit2/src/libgit2/submodule.h	/^	git_submodule_ignore_t ignore;$/;"	m	struct:git_submodule	typeref:typename:git_submodule_ignore_t
ignoreFailures	my_project/libgit2/.vscode/launch.json	/^                    "ignoreFailures": true$/;"	b	object:configurations.0.setupCommands.0
ignore_case	my_project/libgit2/src/libgit2/ignore.h	/^	int ignore_case;$/;"	m	struct:__anonc29a75590108	typeref:typename:int
ignore_case	my_project/libgit2/src/libgit2/index.h	/^	unsigned int ignore_case:1;$/;"	m	struct:git_index	typeref:typename:unsigned int:1
ignore_ch	my_project/libgit2/src/libgit2/hashsig.c	/^	uint8_t ignore_ch[256];$/;"	m	struct:__anon8885faf70208	typeref:typename:uint8_t[256]	file:
ignore_default	my_project/libgit2/src/libgit2/submodule.h	/^	git_submodule_ignore_t ignore_default;$/;"	m	struct:git_submodule	typeref:typename:git_submodule_ignore_t
ignore_lookup_in_rules	my_project/libgit2/src/libgit2/ignore.c	/^static bool ignore_lookup_in_rules($/;"	f	typeref:typename:bool	file:
ignore_non_trailer	my_project/libgit2/src/libgit2/trailer.c	/^static size_t ignore_non_trailer(const char *buf, size_t len)$/;"	f	typeref:typename:size_t	file:
ignore_regex	my_project/libgit2/deps/xdiff/xdiff.h	/^	xdl_regex_t **ignore_regex;$/;"	m	struct:s_xpparam	typeref:typename:xdl_regex_t **
ignore_regex_nr	my_project/libgit2/deps/xdiff/xdiff.h	/^	size_t ignore_regex_nr;$/;"	m	struct:s_xpparam	typeref:typename:size_t
ignore_skip_arg	my_project/libgit2/deps/pcre/pcre_internal.h	/^  unsigned int ignore_skip_arg;   \/* For re-run when SKIP arg name not found *\/$/;"	m	struct:match_data	typeref:typename:unsigned int
ignore_submodules	my_project/libgit2/include/git2/diff.h	/^	git_submodule_ignore_t ignore_submodules;$/;"	m	struct:__anon7f3f1dd30608	typeref:typename:git_submodule_ignore_t
ignored	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^	int ignored;$/;"	m	struct:__anon79a1dca80108	typeref:typename:int	file:
ignored	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^		bool ignored;$/;"	m	struct:test_iterator_workdir__builtin_ignores::__anone78711f60108	typeref:typename:bool	file:
ignores	my_project/libgit2/src/libgit2/iterator.c	/^	git_ignores ignores;$/;"	m	struct:__anon2f88b95a0808	typeref:typename:git_ignores	file:
ignores	my_project/libgit2/tests/libgit2/index/addall.c	/^	size_t ignores;$/;"	m	struct:__anond08108c40108	typeref:typename:size_t	file:
ihv	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^	uint32_t ihv[5];$/;"	m	struct:__anon09d552690108	typeref:typename:uint32_t[5]
ihv1	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^	uint32_t ihv1[5];$/;"	m	struct:__anon09d552690108	typeref:typename:uint32_t[5]
ihv2	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^	uint32_t ihv2[5];$/;"	m	struct:__anon09d552690108	typeref:typename:uint32_t[5]
impl__exists	my_project/libgit2/src/libgit2/odb_mempack.c	/^static int impl__exists(git_odb_backend *backend, const git_oid *oid)$/;"	f	typeref:typename:int	file:
impl__free	my_project/libgit2/src/libgit2/odb_mempack.c	/^static void impl__free(git_odb_backend *_backend)$/;"	f	typeref:typename:void	file:
impl__read	my_project/libgit2/src/libgit2/odb_mempack.c	/^static int impl__read(void **buffer_p, size_t *len_p, git_object_t *type_p, git_odb_backend *bac/;"	f	typeref:typename:int	file:
impl__read_header	my_project/libgit2/src/libgit2/odb_mempack.c	/^static int impl__read_header(size_t *len_p, git_object_t *type_p, git_odb_backend *backend, cons/;"	f	typeref:typename:int	file:
impl__write	my_project/libgit2/src/libgit2/odb_mempack.c	/^static int impl__write(git_odb_backend *_backend, const git_oid *oid, const void *data, size_t l/;"	f	typeref:typename:int	file:
in	my_project/libgit2/deps/zlib/gzguts.h	/^    unsigned char *in;      \/* input buffer (double-sized when writing) *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:unsigned char *
in	my_project/libgit2/src/util/zstream.h	/^	const char *in;$/;"	m	struct:__anon596d958c0208	typeref:typename:const char *
in6_addr_data	my_project/libgit2/tests/util/posix.c	/^	struct in6_addr_data {$/;"	s	function:test_posix__inet_pton	file:
in_addr_data	my_project/libgit2/tests/util/posix.c	/^	struct in_addr_data {$/;"	s	function:test_posix__inet_pton	file:
in_args	my_project/libgit2/src/cli/opt.h	/^	size_t in_args;$/;"	m	struct:cli_opt_parser	typeref:typename:size_t
in_degree	my_project/libgit2/src/libgit2/commit_list.h	/^	uint16_t in_degree;$/;"	m	struct:git_commit_list_node	typeref:typename:uint16_t
in_func	my_project/libgit2/deps/zlib/zconf.h	/^#  define in_func /;"	d
in_func	my_project/libgit2/deps/zlib/zlib.h	/^typedef unsigned (*in_func)(void FAR *,$/;"	t	typeref:typename:unsigned (*)(void FAR *,z_const unsigned char FAR * FAR *)
in_len	my_project/libgit2/src/util/zstream.h	/^	size_t in_len;$/;"	m	struct:__anon596d958c0208	typeref:typename:size_t
in_literal	my_project/libgit2/src/cli/opt.h	/^	             in_literal : 1;$/;"	m	struct:cli_opt_parser	typeref:typename:unsigned int:1
in_section	my_project/libgit2/src/libgit2/config_file.c	/^	unsigned int in_section : 1,$/;"	m	struct:write_data	typeref:typename:unsigned int:1	file:
in_short	my_project/libgit2/src/cli/opt.h	/^	size_t in_short;$/;"	m	struct:cli_opt_parser	typeref:typename:size_t
inbuf	my_project/libgit2/src/libgit2/indexer.c	/^	char inbuf[GIT_HASH_MAX_SIZE];$/;"	m	struct:git_indexer	typeref:typename:char[]	file:
inbuf_len	my_project/libgit2/src/libgit2/indexer.c	/^	size_t inbuf_len;$/;"	m	struct:git_indexer	typeref:typename:size_t	file:
include_changed	my_project/libgit2/src/libgit2/stash.c	/^	bool include_changed;$/;"	m	struct:stash_update_rules	typeref:typename:bool	file:
include_depth	my_project/libgit2/include/git2/config.h	/^	unsigned int include_depth;$/;"	m	struct:git_config_entry	typeref:typename:unsigned int
include_ignored	my_project/libgit2/src/libgit2/stash.c	/^	bool include_ignored;$/;"	m	struct:stash_update_rules	typeref:typename:bool	file:
include_prefix	my_project/libgit2/src/libgit2/email.c	/^GIT_INLINE(int) include_prefix($/;"	f	typeref:typename:int
include_tag	my_project/libgit2/src/libgit2/transports/smart.h	/^	             include_tag:1,$/;"	m	struct:transport_smart_caps	typeref:typename:unsigned int:1
include_untracked	my_project/libgit2/src/libgit2/stash.c	/^	bool include_untracked;$/;"	m	struct:stash_update_rules	typeref:typename:bool	file:
included_path	my_project/libgit2/src/libgit2/config_file.c	/^static int included_path(git_str *out, const char *dir, const char *path)$/;"	f	typeref:typename:int	file:
incomplete_pack	my_project/libgit2/tests/libgit2/pack/indexer.c	/^unsigned char incomplete_pack[] = {$/;"	v	typeref:typename:unsigned char[]
incomplete_pack_len	my_project/libgit2/tests/libgit2/pack/indexer.c	/^unsigned int incomplete_pack_len = 115;$/;"	v	typeref:typename:unsigned int
increment_size	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool increment_size(size_t *out, size_t incr)$/;"	f	typeref:typename:bool	file:
indent	my_project/libgit2/ci/build.sh	/^indent() { sed "s\/^\/    \/"; }$/;"	f
indent	my_project/libgit2/ci/test.sh	/^indent() { sed "s\/^\/    \/"; }$/;"	f
indent	my_project/libgit2/deps/xdiff/xdiffi.c	/^	int indent;$/;"	m	struct:split_measurement	typeref:typename:int	file:
indent	my_project/libgit2/tests/benchmarks/benchmark.sh	/^indent() { sed "s\/^\/  \/"; }$/;"	f
index	my_project/libgit2/src/libgit2/annotated_commit.h	/^	git_index *index;$/;"	m	struct:git_annotated_commit	typeref:typename:git_index *
index	my_project/libgit2/src/libgit2/attr.c	/^	git_index *index;$/;"	m	struct:__anon36621a0b0208	typeref:typename:git_index *	file:
index	my_project/libgit2/src/libgit2/checkout.c	/^	git_index *index;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_index *	file:
index	my_project/libgit2/src/libgit2/commit_graph.c	/^	size_t index;$/;"	m	struct:packed_commit	typeref:typename:size_t	file:
index	my_project/libgit2/src/libgit2/index.c	/^	git_index *index;$/;"	m	struct:foreach_diff_data	typeref:typename:git_index *	file:
index	my_project/libgit2/src/libgit2/index.c	/^	git_index *index;$/;"	m	struct:read_tree_data	typeref:typename:git_index *	file:
index	my_project/libgit2/src/libgit2/index.h	/^	git_index *index;$/;"	m	struct:__anon5b50d90d0108	typeref:typename:git_index *
index	my_project/libgit2/src/libgit2/index.h	/^	git_index *index;$/;"	m	struct:git_index_conflict_iterator	typeref:typename:git_index *
index	my_project/libgit2/src/libgit2/index.h	/^	git_index *index;$/;"	m	struct:git_index_iterator	typeref:typename:git_index *
index	my_project/libgit2/src/libgit2/iterator.c	/^	git_index *index;$/;"	m	struct:__anon2f88b95a0808	typeref:typename:git_index *	file:
index	my_project/libgit2/src/libgit2/iterator.h	/^	git_index *index;$/;"	m	struct:git_iterator	typeref:typename:git_index *
index	my_project/libgit2/src/libgit2/pack-objects.c	/^	struct git_delta_index *index;$/;"	m	struct:unpacked	typeref:struct:git_delta_index *	file:
index	my_project/libgit2/src/libgit2/reader.c	/^	git_index *index;$/;"	m	struct:__anon57d570630208	typeref:typename:git_index *	file:
index	my_project/libgit2/src/libgit2/reader.c	/^	git_index *index;$/;"	m	struct:__anon57d570630308	typeref:typename:git_index *	file:
index	my_project/libgit2/src/libgit2/rebase.c	/^	git_index *index;$/;"	m	struct:git_rebase	typeref:typename:git_index *	file:
index	my_project/libgit2/tests/libgit2/index/tests.c	/^   size_t index;$/;"	m	struct:test_entry	typeref:typename:size_t	file:
index	my_project/libgit2/tests/libgit2/index/tests256.c	/^   size_t index;$/;"	m	struct:test_entry	typeref:typename:size_t	file:
index_add_conflicts	my_project/libgit2/tests/libgit2/index/names.c	/^static void index_add_conflicts(void)$/;"	f	typeref:typename:void	file:
index_adds	my_project/libgit2/tests/libgit2/index/addall.c	/^	size_t index_adds;$/;"	m	struct:__anond08108c40108	typeref:typename:size_t	file:
index_apply_to_all	my_project/libgit2/src/libgit2/index.c	/^static int index_apply_to_all($/;"	f	typeref:typename:int	file:
index_apply_to_wd_diff	my_project/libgit2/src/libgit2/index.c	/^static int index_apply_to_wd_diff(git_index *index, int action, const git_strarray *paths,$/;"	f	typeref:typename:int	file:
index_blob_lines	my_project/libgit2/src/libgit2/blame.c	/^static int index_blob_lines(git_blame *blame)$/;"	f	typeref:typename:int	file:
index_cb	my_project/libgit2/examples/index-pack.c	/^static int index_cb(const git_indexer_progress *stats, void *data)$/;"	f	typeref:typename:int	file:
index_conflict__get_byindex	my_project/libgit2/src/libgit2/index.c	/^static int index_conflict__get_byindex($/;"	f	typeref:typename:int	file:
index_conflict_data_eq_merge_diff	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^static int index_conflict_data_eq_merge_diff(const struct merge_index_conflict_data *expected, g/;"	f	typeref:typename:int	file:
index_conflict_remove	my_project/libgit2/src/libgit2/index.c	/^static int index_conflict_remove(git_index *index, const char *path)$/;"	f	typeref:typename:int	file:
index_conflict_to_reuc	my_project/libgit2/src/libgit2/index.c	/^static int index_conflict_to_reuc(git_index *index, const char *path)$/;"	f	typeref:typename:int	file:
index_dels	my_project/libgit2/tests/libgit2/index/addall.c	/^	size_t index_dels;$/;"	m	struct:__anond08108c40108	typeref:typename:size_t	file:
index_delta2status	my_project/libgit2/src/libgit2/status.c	/^static unsigned int index_delta2status(const git_diff_delta *head2idx)$/;"	f	typeref:typename:unsigned int	file:
index_entry	my_project/libgit2/src/libgit2/delta.c	/^struct index_entry {$/;"	s	file:
index_entry_adjust_namemask	my_project/libgit2/src/libgit2/index.c	/^static void index_entry_adjust_namemask($/;"	f	typeref:typename:void	file:
index_entry_cmp	my_project/libgit2/src/libgit2/merge.c	/^GIT_INLINE(int) index_entry_cmp(const git_index_entry *a, const git_index_entry *b)$/;"	f	typeref:typename:int
index_entry_count	my_project/libgit2/tests/libgit2/index/tests.c	/^static const size_t index_entry_count = 109;$/;"	v	typeref:typename:const size_t	file:
index_entry_count	my_project/libgit2/tests/libgit2/index/tests256.c	/^static const size_t index_entry_count = 4344;$/;"	v	typeref:typename:const size_t	file:
index_entry_count_2	my_project/libgit2/tests/libgit2/index/tests.c	/^static const size_t index_entry_count_2 = 1437;$/;"	v	typeref:typename:const size_t	file:
index_entry_cpy	my_project/libgit2/src/libgit2/index.c	/^static void index_entry_cpy($/;"	f	typeref:typename:void	file:
index_entry_cpy_nocache	my_project/libgit2/src/libgit2/index.c	/^static void index_entry_cpy_nocache($/;"	f	typeref:typename:void	file:
index_entry_create	my_project/libgit2/src/libgit2/index.c	/^static int index_entry_create($/;"	f	typeref:typename:int	file:
index_entry_dup	my_project/libgit2/src/libgit2/index.c	/^static int index_entry_dup($/;"	f	typeref:typename:int	file:
index_entry_dup_nocache	my_project/libgit2/src/libgit2/index.c	/^static int index_entry_dup_nocache($/;"	f	typeref:typename:int	file:
index_entry_dup_pool	my_project/libgit2/src/libgit2/merge.c	/^GIT_INLINE(int) index_entry_dup_pool($/;"	f	typeref:typename:int
index_entry_eq_merge_index_entry	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^static int index_entry_eq_merge_index_entry(const struct merge_index_entry *expected, const git_/;"	f	typeref:typename:int	file:
index_entry_flags_offset	my_project/libgit2/src/libgit2/index.c	/^GIT_INLINE(size_t) index_entry_flags_offset(git_oid_t oid_type)$/;"	f	typeref:typename:size_t
index_entry_free	my_project/libgit2/src/libgit2/index.c	/^static void index_entry_free(git_index_entry *entry)$/;"	f	typeref:typename:void	file:
index_entry_init	my_project/libgit2/src/libgit2/index.c	/^static int index_entry_init($/;"	f	typeref:typename:int	file:
index_entry_init	my_project/libgit2/tests/libgit2/reset/hard.c	/^static void index_entry_init(git_index *index, int side, git_oid *oid)$/;"	f	typeref:typename:void	file:
index_entry_isrch_path	my_project/libgit2/src/libgit2/index.c	/^static int index_entry_isrch_path(const void *path, const void *array_member)$/;"	f	typeref:typename:int	file:
index_entry_long_sha1	my_project/libgit2/src/libgit2/index.c	/^typedef entry_long(GIT_OID_SHA1_SIZE) index_entry_long_sha1;$/;"	t	file:
index_entry_long_sha256	my_project/libgit2/src/libgit2/index.c	/^typedef entry_long(GIT_OID_SHA256_SIZE) index_entry_long_sha256;$/;"	t	file:
index_entry_path_offset	my_project/libgit2/src/libgit2/index.c	/^GIT_INLINE(size_t) index_entry_path_offset($/;"	f	typeref:typename:size_t
index_entry_reuc_free	my_project/libgit2/src/libgit2/index.c	/^static void index_entry_reuc_free(git_index_reuc_entry *reuc)$/;"	f	typeref:typename:void	file:
index_entry_reuc_init	my_project/libgit2/src/libgit2/index.c	/^static int index_entry_reuc_init(git_index_reuc_entry **reuc_out,$/;"	f	typeref:typename:int	file:
index_entry_short_sha1	my_project/libgit2/src/libgit2/index.c	/^typedef entry_short(GIT_OID_SHA1_SIZE) index_entry_short_sha1;$/;"	t	file:
index_entry_short_sha256	my_project/libgit2/src/libgit2/index.c	/^typedef entry_short(GIT_OID_SHA256_SIZE) index_entry_short_sha256;$/;"	t	file:
index_entry_similarity_calc	my_project/libgit2/src/libgit2/merge.c	/^static int index_entry_similarity_calc($/;"	f	typeref:typename:int	file:
index_entry_similarity_inexact	my_project/libgit2/src/libgit2/merge.c	/^static int index_entry_similarity_inexact($/;"	f	typeref:typename:int	file:
index_entry_size	my_project/libgit2/src/libgit2/index.c	/^static size_t index_entry_size($/;"	f	typeref:typename:size_t	file:
index_entry_srch_path	my_project/libgit2/src/libgit2/index.c	/^static int index_entry_srch_path(const void *path, const void *array_member)$/;"	f	typeref:typename:int	file:
index_error_invalid	my_project/libgit2/src/libgit2/index.c	/^static int index_error_invalid(const char *message)$/;"	f	typeref:typename:int	file:
index_existing_and_best	my_project/libgit2/src/libgit2/index.c	/^static void index_existing_and_best($/;"	f	typeref:typename:void	file:
index_extension	my_project/libgit2/src/libgit2/index.c	/^struct index_extension {$/;"	s	file:
index_file_path	my_project/libgit2/src/libgit2/index.h	/^	char *index_file_path;$/;"	m	struct:git_index	typeref:typename:char *
index_find	my_project/libgit2/src/libgit2/index.c	/^GIT_INLINE(int) index_find($/;"	f	typeref:typename:int
index_find_in_entries	my_project/libgit2/src/libgit2/index.c	/^GIT_INLINE(int) index_find_in_entries($/;"	f	typeref:typename:int
index_free	my_project/libgit2/src/libgit2/index.c	/^static void index_free(git_index *index)$/;"	f	typeref:typename:void	file:
index_free_deleted	my_project/libgit2/src/libgit2/index.c	/^static void index_free_deleted(git_index *index)$/;"	f	typeref:typename:void	file:
index_from_diff_list	my_project/libgit2/src/libgit2/merge.c	/^static int index_from_diff_list($/;"	f	typeref:typename:int	file:
index_header	my_project/libgit2/src/libgit2/index.c	/^struct index_header {$/;"	s	file:
index_insert	my_project/libgit2/src/libgit2/index.c	/^static int index_insert($/;"	f	typeref:typename:int	file:
index_iterator	my_project/libgit2/src/libgit2/iterator.c	/^} index_iterator;$/;"	t	typeref:struct:__anon2f88b95a0908	file:
index_iterator_advance	my_project/libgit2/src/libgit2/iterator.c	/^static int index_iterator_advance($/;"	f	typeref:typename:int	file:
index_iterator_advance_into	my_project/libgit2/src/libgit2/iterator.c	/^static int index_iterator_advance_into($/;"	f	typeref:typename:int	file:
index_iterator_advance_over	my_project/libgit2/src/libgit2/iterator.c	/^static int index_iterator_advance_over($/;"	f	typeref:typename:int	file:
index_iterator_clear	my_project/libgit2/src/libgit2/iterator.c	/^static void index_iterator_clear(index_iterator *iter)$/;"	f	typeref:typename:void	file:
index_iterator_create_pseudotree	my_project/libgit2/src/libgit2/iterator.c	/^static bool index_iterator_create_pseudotree($/;"	f	typeref:typename:bool	file:
index_iterator_current	my_project/libgit2/src/libgit2/iterator.c	/^static int index_iterator_current($/;"	f	typeref:typename:int	file:
index_iterator_free	my_project/libgit2/src/libgit2/iterator.c	/^static void index_iterator_free(git_iterator *i)$/;"	f	typeref:typename:void	file:
index_iterator_init	my_project/libgit2/src/libgit2/iterator.c	/^static int index_iterator_init(index_iterator *iter)$/;"	f	typeref:typename:int	file:
index_iterator_reset	my_project/libgit2/src/libgit2/iterator.c	/^static int index_iterator_reset(git_iterator *i)$/;"	f	typeref:typename:int	file:
index_iterator_skip_pseudotree	my_project/libgit2/src/libgit2/iterator.c	/^static int index_iterator_skip_pseudotree(index_iterator *iter)$/;"	f	typeref:typename:int	file:
index_iterator_test	my_project/libgit2/tests/libgit2/iterator/index.c	/^static void index_iterator_test($/;"	f	typeref:typename:void	file:
index_map	my_project/libgit2/src/libgit2/midx.h	/^	git_map index_map;$/;"	m	struct:git_midx_file	typeref:typename:git_map
index_map	my_project/libgit2/src/libgit2/pack.h	/^	git_map index_map;$/;"	m	struct:git_pack_file	typeref:typename:git_map
index_map_delete	my_project/libgit2/src/libgit2/index.c	/^GIT_INLINE(int) index_map_delete(git_idxmap *map, git_index_entry *e, bool ignore_case)$/;"	f	typeref:typename:int
index_map_resize	my_project/libgit2/src/libgit2/index.c	/^GIT_INLINE(int) index_map_resize(git_idxmap *map, size_t count, bool ignore_case)$/;"	f	typeref:typename:int
index_map_set	my_project/libgit2/src/libgit2/index.c	/^GIT_INLINE(int) index_map_set(git_idxmap *map, git_index_entry *e, bool ignore_case)$/;"	f	typeref:typename:int
index_merge_mode	my_project/libgit2/src/libgit2/index.c	/^static unsigned int index_merge_mode($/;"	f	typeref:typename:unsigned int	file:
index_mode	my_project/libgit2/examples/add.c	/^enum index_mode {$/;"	g	file:
index_mods	my_project/libgit2/tests/libgit2/index/addall.c	/^	size_t index_mods;$/;"	m	struct:__anond08108c40108	typeref:typename:size_t	file:
index_name_entry_free	my_project/libgit2/src/libgit2/index.c	/^static void index_name_entry_free(git_index_name_entry *ne)$/;"	f	typeref:typename:void	file:
index_no_dups	my_project/libgit2/src/libgit2/index.c	/^static int index_no_dups(void **old, void *new)$/;"	f	typeref:typename:int	file:
index_oid	my_project/libgit2/src/libgit2/submodule.h	/^	git_oid index_oid;$/;"	m	struct:git_submodule	typeref:typename:git_oid
index_options	my_project/libgit2/examples/add.c	/^struct index_options {$/;"	s	file:
index_path	my_project/libgit2/src/libgit2/indexer.c	/^static int index_path(git_str *path, git_indexer *idx, const char *suffix)$/;"	f	typeref:typename:int	file:
index_reader	my_project/libgit2/src/libgit2/reader.c	/^} index_reader;$/;"	t	typeref:struct:__anon57d570630308	file:
index_reader_read	my_project/libgit2/src/libgit2/reader.c	/^static int index_reader_read($/;"	f	typeref:typename:int	file:
index_remove_entry	my_project/libgit2/src/libgit2/index.c	/^static int index_remove_entry(git_index *index, size_t pos)$/;"	f	typeref:typename:int	file:
index_reuc_insert	my_project/libgit2/src/libgit2/index.c	/^static int index_reuc_insert($/;"	f	typeref:typename:int	file:
index_reuc_on_dup	my_project/libgit2/src/libgit2/index.c	/^static int index_reuc_on_dup(void **old, void *new)$/;"	f	typeref:typename:int	file:
index_snapshot	my_project/libgit2/src/libgit2/iterator.c	/^	git_vector index_snapshot;$/;"	m	struct:__anon2f88b95a0808	typeref:typename:git_vector	file:
index_status_cb	my_project/libgit2/tests/libgit2/index/addall.c	/^static int index_status_cb($/;"	f	typeref:typename:int	file:
index_status_counts	my_project/libgit2/tests/libgit2/index/addall.c	/^} index_status_counts;$/;"	t	typeref:struct:__anond08108c40108	file:
index_to_workdir	my_project/libgit2/include/git2/status.h	/^	git_diff_delta *index_to_workdir;$/;"	m	struct:__anon6794a3fe0508	typeref:typename:git_diff_delta *
index_update_reuc	my_project/libgit2/src/libgit2/merge.c	/^static int index_update_reuc(git_index *index, git_merge_diff_list *diff_list)$/;"	f	typeref:typename:int	file:
index_updated	my_project/libgit2/src/libgit2/diff_generate.c	/^	bool index_updated;$/;"	m	struct:__anonff5a2cd30108	typeref:typename:bool	file:
index_version	my_project/libgit2/src/libgit2/pack.h	/^	int index_version;$/;"	m	struct:git_pack_file	typeref:typename:int
index_walking	my_project/libgit2/examples/general.c	/^static void index_walking(git_repository *repo)$/;"	f	typeref:typename:void	file:
indexed_deltas	my_project/libgit2/include/git2/indexer.h	/^	unsigned int indexed_deltas;$/;"	m	struct:git_indexer_progress	typeref:typename:unsigned int
indexed_objects	my_project/libgit2/include/git2/indexer.h	/^	unsigned int indexed_objects;$/;"	m	struct:git_indexer_progress	typeref:typename:unsigned int
indexer	my_project/libgit2/src/libgit2/odb_pack.c	/^	git_indexer *indexer;$/;"	m	struct:pack_writepack	typeref:typename:git_indexer *	file:
indexer	my_project/libgit2/src/libgit2/pack-objects.c	/^	git_indexer *indexer;$/;"	m	struct:pack_write_context	typeref:typename:git_indexer *	file:
indexer_hash_algorithm	my_project/libgit2/src/libgit2/indexer.c	/^GIT_INLINE(git_hash_algorithm_t) indexer_hash_algorithm(git_indexer *idx)$/;"	f	typeref:typename:git_hash_algorithm_t
indexer_indexing	my_project/libgit2/src/cli/progress.c	/^static int indexer_indexing($/;"	f	typeref:typename:int	file:
indexer_new	my_project/libgit2/src/libgit2/indexer.c	/^static int indexer_new($/;"	f	typeref:typename:int	file:
indexer_resolving	my_project/libgit2/src/cli/progress.c	/^static int indexer_resolving($/;"	f	typeref:typename:int	file:
inflate	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflate(z_streamp strm, int flush) {$/;"	f	typeref:typename:int ZEXPORT
inflate	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflate /;"	d
inflateBack	my_project/libgit2/deps/zlib/infback.c	/^int ZEXPORT inflateBack(z_streamp strm, in_func in, void FAR *in_desc,$/;"	f	typeref:typename:int ZEXPORT
inflateBack	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateBack /;"	d
inflateBackEnd	my_project/libgit2/deps/zlib/infback.c	/^int ZEXPORT inflateBackEnd(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
inflateBackEnd	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateBackEnd /;"	d
inflateBackInit	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateBackInit /;"	d
inflateBackInit	my_project/libgit2/deps/zlib/zlib.h	/^#  define inflateBackInit(/;"	d
inflateBackInit_	my_project/libgit2/deps/zlib/infback.c	/^int ZEXPORT inflateBackInit_(z_streamp strm, int windowBits,$/;"	f	typeref:typename:int ZEXPORT
inflateBackInit_	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateBackInit_ /;"	d
inflateCodesUsed	my_project/libgit2/deps/zlib/inflate.c	/^unsigned long ZEXPORT inflateCodesUsed(z_streamp strm) {$/;"	f	typeref:typename:unsigned long ZEXPORT
inflateCodesUsed	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateCodesUsed /;"	d
inflateCopy	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateCopy(z_streamp dest, z_streamp source) {$/;"	f	typeref:typename:int ZEXPORT
inflateCopy	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateCopy /;"	d
inflateEnd	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateEnd(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
inflateEnd	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateEnd /;"	d
inflateGetDictionary	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateGetDictionary(z_streamp strm, Bytef *dictionary,$/;"	f	typeref:typename:int ZEXPORT
inflateGetDictionary	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateGetDictionary /;"	d
inflateGetHeader	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateGetHeader(z_streamp strm, gz_headerp head) {$/;"	f	typeref:typename:int ZEXPORT
inflateGetHeader	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateGetHeader /;"	d
inflateInit	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateInit /;"	d
inflateInit	my_project/libgit2/deps/zlib/zlib.h	/^#  define inflateInit(/;"	d
inflateInit2	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateInit2 /;"	d
inflateInit2	my_project/libgit2/deps/zlib/zlib.h	/^#  define inflateInit2(/;"	d
inflateInit2_	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateInit2_(z_streamp strm, int windowBits,$/;"	f	typeref:typename:int ZEXPORT
inflateInit2_	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateInit2_ /;"	d
inflateInit_	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateInit_(z_streamp strm, const char *version,$/;"	f	typeref:typename:int ZEXPORT
inflateInit_	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateInit_ /;"	d
inflateMark	my_project/libgit2/deps/zlib/inflate.c	/^long ZEXPORT inflateMark(z_streamp strm) {$/;"	f	typeref:typename:long ZEXPORT
inflateMark	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateMark /;"	d
inflatePrime	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflatePrime(z_streamp strm, int bits, int value) {$/;"	f	typeref:typename:int ZEXPORT
inflatePrime	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflatePrime /;"	d
inflateReset	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateReset(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
inflateReset	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateReset /;"	d
inflateReset2	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateReset2(z_streamp strm, int windowBits) {$/;"	f	typeref:typename:int ZEXPORT
inflateReset2	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateReset2 /;"	d
inflateResetKeep	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateResetKeep(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
inflateResetKeep	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateResetKeep /;"	d
inflateSetDictionary	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateSetDictionary(z_streamp strm, const Bytef *dictionary,$/;"	f	typeref:typename:int ZEXPORT
inflateSetDictionary	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateSetDictionary /;"	d
inflateStateCheck	my_project/libgit2/deps/zlib/inflate.c	/^local int inflateStateCheck(z_streamp strm) {$/;"	f	typeref:typename:local int
inflateSync	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateSync(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
inflateSync	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateSync /;"	d
inflateSyncPoint	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateSyncPoint(z_streamp strm) {$/;"	f	typeref:typename:int ZEXPORT
inflateSyncPoint	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateSyncPoint /;"	d
inflateUndermine	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateUndermine(z_streamp strm, int subvert) {$/;"	f	typeref:typename:int ZEXPORT
inflateUndermine	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateUndermine /;"	d
inflateValidate	my_project/libgit2/deps/zlib/inflate.c	/^int ZEXPORT inflateValidate(z_streamp strm, int check) {$/;"	f	typeref:typename:int ZEXPORT
inflateValidate	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflateValidate /;"	d
inflate_copyright	my_project/libgit2/deps/zlib/inftrees.c	/^const char inflate_copyright[] =$/;"	v	typeref:typename:const char[]
inflate_copyright	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflate_copyright /;"	d
inflate_fast	my_project/libgit2/deps/zlib/inffast.c	/^void ZLIB_INTERNAL inflate_fast(z_streamp strm, unsigned start) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
inflate_fast	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflate_fast /;"	d
inflate_mode	my_project/libgit2/deps/zlib/inflate.h	/^} inflate_mode;$/;"	t	typeref:enum:__anona0359fa00103
inflate_state	my_project/libgit2/deps/zlib/inflate.h	/^struct inflate_state {$/;"	s
inflate_table	my_project/libgit2/deps/zlib/inftrees.c	/^int ZLIB_INTERNAL inflate_table(codetype type, unsigned short FAR *lens,$/;"	f	typeref:typename:int ZLIB_INTERNAL
inflate_table	my_project/libgit2/deps/zlib/zconf.h	/^#  define inflate_table /;"	d
inflatedlen	my_project/libgit2/include/git2/diff.h	/^	size_t inflatedlen;$/;"	m	struct:__anon7f3f1dd30808	typeref:typename:size_t
init	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int init;$/;"	m	struct:bio_st	typeref:typename:int
init_auth_context	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static const char *init_auth_context($/;"	f	typeref:typename:const char *	file:
init_bio_method	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int init_bio_method(void)$/;"	f	typeref:typename:int	file:
init_block	my_project/libgit2/deps/zlib/trees.c	/^local void init_block(deflate_state *s) {$/;"	f	typeref:typename:local void
init_common	my_project/libgit2/src/util/runtime.c	/^static int init_common(git_runtime_init_fn init_fns[], size_t cnt)$/;"	f	typeref:typename:int	file:
init_context	my_project/libgit2/src/libgit2/transports/auth.h	/^	int (*init_context)($/;"	m	struct:__anon4118c2d60208	typeref:typename:int (*)(git_http_auth_context ** out,const git_net_url * url)
init_count	my_project/libgit2/src/util/runtime.c	/^static git_atomic32 init_count;$/;"	v	typeref:typename:git_atomic32	file:
init_fake_wstream	my_project/libgit2/src/libgit2/odb.c	/^static int init_fake_wstream(git_odb_stream **stream_p, git_odb_backend *backend, git_object_siz/;"	f	typeref:typename:int	file:
init_frame	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void init_frame(compiler_common *common, pcre_uchar *cc, pcre_uchar *ccend, int stackpos,/;"	f	typeref:typename:void	file:
init_linked_repo	my_project/libgit2/tests/libgit2/odb/alternates.c	/^static void init_linked_repo(const char *path, const char *alternate)$/;"	f	typeref:typename:void	file:
init_lock	my_project/libgit2/src/util/runtime.c	/^# define init_lock(/;"	d	file:
init_lock	my_project/libgit2/src/util/runtime.c	/^GIT_INLINE(int) init_lock(void)$/;"	f	typeref:typename:int
init_mutex	my_project/libgit2/src/util/runtime.c	/^static pthread_mutex_t init_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t	file:
init_one_submodule	my_project/libgit2/tests/libgit2/submodule/modify.c	/^static int init_one_submodule($/;"	f	typeref:typename:int	file:
init_opts	my_project/libgit2/examples/init.c	/^struct init_opts {$/;"	s	file:
init_sdb	sdb.c	/^void init_sdb() {$/;"	f	typeref:typename:void
init_setup	my_project/libgit2/src/libgit2/attr_file.h	/^	unsigned int init_setup:1,$/;"	m	struct:__anon0df92d8f0a08	typeref:typename:unsigned int:1
init_spinlock	my_project/libgit2/src/util/runtime.c	/^static volatile LONG init_spinlock = 0;$/;"	v	typeref:typename:volatile LONG	file:
init_sysdir	my_project/libgit2/src/libgit2/attr_file.h	/^		init_sysdir:1;$/;"	m	struct:__anon0df92d8f0a08	typeref:typename:unsigned int:1
init_unlock	my_project/libgit2/src/util/runtime.c	/^# define init_unlock(/;"	d	file:
init_unlock	my_project/libgit2/src/util/runtime.c	/^GIT_INLINE(int) init_unlock(void)$/;"	f	typeref:typename:int
initial	my_project/libgit2/src/libgit2/transports/http.c	/^	unsigned int initial : 1,$/;"	m	struct:__anon515ae8bf0208	typeref:typename:unsigned int:1	file:
initial_commit	my_project/libgit2/examples/init.c	/^	int initial_commit;$/;"	m	struct:init_opts	typeref:typename:int	file:
initial_head	my_project/libgit2/include/git2/repository.h	/^	const char *initial_head;$/;"	m	struct:__anon67af0d3a0408	typeref:typename:const char *
initial_message_completed	my_project/libgit2/deps/llhttp/llhttp.h	/^  uint8_t initial_message_completed;$/;"	m	struct:llhttp__internal_s	typeref:typename:uint8_t
initialize	my_project/libgit2/include/git2/sys/filter.h	/^	git_filter_init_fn     initialize;$/;"	m	struct:git_filter	typeref:typename:git_filter_init_fn
initialize	my_project/libgit2/include/git2/sys/merge.h	/^	git_merge_driver_init_fn     initialize;$/;"	m	struct:git_merge_driver	typeref:typename:git_merge_driver_init_fn
initialize	my_project/libgit2/tests/clar/clar.c	/^	struct clar_func initialize;$/;"	m	struct:clar_suite	typeref:struct:clar_func	file:
initialize	my_project/libgit2/tests/libgit2/reset/default.c	/^static void initialize(const char *repo_name)$/;"	f	typeref:typename:void	file:
initialize	my_project/simplegit-progit/lib/simplegit.rb	/^  def initialize(git_dir = '.')$/;"	f	class:SimpleGit
initialized	my_project/libgit2/src/libgit2/filter.c	/^	int initialized;$/;"	m	struct:__anon9372afd60208	typeref:typename:int	file:
initialized	my_project/libgit2/src/libgit2/merge_driver.c	/^	int initialized;$/;"	m	struct:__anonbbbb786b0108	typeref:typename:int	file:
initialized	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static bool initialized = false;$/;"	v	typeref:typename:bool	file:
initialized	my_project/libgit2/tests/libgit2/merge/driver.c	/^	int initialized;$/;"	m	struct:test_merge_driver	typeref:typename:int	file:
initialized	my_project/libgit2/tests/libgit2/online/customcert.c	/^static int initialized = false;$/;"	v	typeref:typename:int	file:
inject_object	my_project/libgit2/src/libgit2/indexer.c	/^static int inject_object(git_indexer *idx, git_oid *id)$/;"	f	typeref:typename:int	file:
inline	my_project/libgit2/deps/xdiff/git-xdiff.h	/^#  define inline /;"	d
inline	my_project/libgit2/deps/xdiff/git-xdiff.h	/^#  define inline$/;"	d
inline	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^#  define inline /;"	d	file:
inline	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^#  define inline$/;"	d	file:
inlined_pattern	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL inlined_pattern;$/;"	m	struct:recurse_backtrack	typeref:typename:BOOL	file:
inmemory	my_project/libgit2/include/git2/rebase.h	/^	int inmemory;$/;"	m	struct:__anonf9a5428c0108	typeref:typename:int
inmemory	my_project/libgit2/src/libgit2/rebase.c	/^	             inmemory:1,$/;"	m	struct:git_rebase	typeref:typename:unsigned int:1	file:
ino	my_project/libgit2/include/git2/index.h	/^	uint32_t ino;$/;"	m	struct:git_index_entry	typeref:typename:uint32_t
ino	my_project/libgit2/src/libgit2/index.c	/^	uint32_t ino;$/;"	m	struct:entry_common	typeref:typename:uint32_t	file:
ino	my_project/libgit2/src/util/futils.h	/^	unsigned int ino;$/;"	m	struct:__anon45ee975d0408	typeref:typename:unsigned int
input	my_project/libgit2/src/libgit2/filter.c	/^	git_str input;$/;"	m	struct:buffered_stream	typeref:typename:git_str	file:
input	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^static unsigned char input[] = {$/;"	v	typeref:typename:unsigned char[]	file:
ins_h	my_project/libgit2/deps/zlib/deflate.h	/^    uInt  ins_h;          \/* hash index of string to be inserted *\/$/;"	m	struct:internal_state	typeref:typename:uInt
insert	my_project/libgit2/deps/zlib/deflate.h	/^    uInt insert;        \/* bytes at end of window left to insert *\/$/;"	m	struct:internal_state	typeref:typename:uInt
insert_by_date	my_project/libgit2/src/libgit2/revwalk.h	/^	int insert_by_date;$/;"	m	struct:__anoncf11cd510108	typeref:typename:int
insert_delete_side_of_split	my_project/libgit2/src/libgit2/diff_tform.c	/^static int insert_delete_side_of_split($/;"	f	typeref:typename:int	file:
insert_head_ids	my_project/libgit2/src/libgit2/merge.c	/^GIT_INLINE(int) insert_head_ids($/;"	f	typeref:typename:int
insert_mergehead	my_project/libgit2/src/libgit2/repository.c	/^static int insert_mergehead(const git_oid *oid, void *payload)$/;"	f	typeref:typename:int	file:
insert_note_in_tree_eexists_cb	my_project/libgit2/src/libgit2/notes.c	/^static int insert_note_in_tree_eexists_cb(git_tree **out,$/;"	f	typeref:typename:int	file:
insert_note_in_tree_enotfound_cb	my_project/libgit2/src/libgit2/notes.c	/^static int insert_note_in_tree_enotfound_cb(git_tree **out,$/;"	f	typeref:typename:int	file:
insert_record	my_project/libgit2/deps/xdiff/xpatience.c	/^static void insert_record(xpparam_t const *xpp, int line, struct hashmap *map,$/;"	f	typeref:typename:void	file:
insert_sequential_oids	my_project/libgit2/tests/libgit2/object/raw/short.c	/^static int insert_sequential_oids($/;"	f	typeref:typename:int	file:
insert_strings	my_project/libgit2/tests/util/strmap.c	/^static void insert_strings(git_strmap *table, size_t count)$/;"	f	typeref:typename:void	file:
insert_unique	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static git_win32_leakcheck_stacktrace_row * insert_unique($/;"	f	typeref:typename:git_win32_leakcheck_stacktrace_row *	file:
insertions	my_project/libgit2/src/libgit2/diff_stats.c	/^	size_t insertions;$/;"	m	struct:__anonf83411370108	typeref:typename:size_t	file:
insertions	my_project/libgit2/src/libgit2/diff_stats.c	/^	size_t insertions;$/;"	m	struct:git_diff_stats	typeref:typename:size_t	file:
insertsort	my_project/libgit2/src/util/util.c	/^static void insertsort($/;"	f	typeref:typename:void	file:
install	my_project/libgit2/package.json	/^  "install": "mkdir build && cd build && cmake .. && cmake --build ."$/;"	s
instance	my_project/libgit2/src/libgit2/config.c	/^	backend_instance *instance;$/;"	m	struct:__anona0399aa60208	typeref:typename:backend_instance *	file:
int16_t	my_project/libgit2/include/git2/stdint.h	/^   typedef signed __int16    int16_t;$/;"	t	typeref:typename:signed __int16
int16_t	my_project/libgit2/include/git2/stdint.h	/^   typedef signed short      int16_t;$/;"	t	typeref:typename:signed short
int32_t	my_project/libgit2/include/git2/stdint.h	/^   typedef signed __int32    int32_t;$/;"	t	typeref:typename:signed __int32
int32_t	my_project/libgit2/include/git2/stdint.h	/^   typedef signed int        int32_t;$/;"	t	typeref:typename:signed int
int64_t	my_project/libgit2/include/git2/stdint.h	/^typedef signed __int64       int64_t;$/;"	t	typeref:typename:signed __int64
int8_t	my_project/libgit2/include/git2/stdint.h	/^   typedef signed __int8     int8_t;$/;"	t	typeref:typename:signed __int8
int8_t	my_project/libgit2/include/git2/stdint.h	/^   typedef signed char       int8_t;$/;"	t	typeref:typename:signed char
int_fast16_t	my_project/libgit2/include/git2/stdint.h	/^typedef int16_t   int_fast16_t;$/;"	t	typeref:typename:int16_t
int_fast32_t	my_project/libgit2/include/git2/stdint.h	/^typedef int32_t   int_fast32_t;$/;"	t	typeref:typename:int32_t
int_fast64_t	my_project/libgit2/include/git2/stdint.h	/^typedef int64_t   int_fast64_t;$/;"	t	typeref:typename:int64_t
int_fast8_t	my_project/libgit2/include/git2/stdint.h	/^typedef int8_t    int_fast8_t;$/;"	t	typeref:typename:int8_t
int_least16_t	my_project/libgit2/include/git2/stdint.h	/^typedef int16_t   int_least16_t;$/;"	t	typeref:typename:int16_t
int_least32_t	my_project/libgit2/include/git2/stdint.h	/^typedef int32_t   int_least32_t;$/;"	t	typeref:typename:int32_t
int_least64_t	my_project/libgit2/include/git2/stdint.h	/^typedef int64_t   int_least64_t;$/;"	t	typeref:typename:int64_t
int_least8_t	my_project/libgit2/include/git2/stdint.h	/^typedef int8_t    int_least8_t;$/;"	t	typeref:typename:int8_t
int_lookup	my_project/libgit2/tests/util/array.c	/^static int int_lookup(const void *k, const void *a)$/;"	f	typeref:typename:int	file:
interesting	my_project/libgit2/src/libgit2/graph.c	/^static int interesting(git_pqueue *list, git_commit_list *roots)$/;"	f	typeref:typename:int	file:
interesting	my_project/libgit2/src/libgit2/merge.c	/^static int interesting(git_pqueue *list)$/;"	f	typeref:typename:int	file:
interhunk_lines	my_project/libgit2/include/git2/diff.h	/^	uint32_t    interhunk_lines;$/;"	m	struct:__anon7f3f1dd30608	typeref:typename:uint32_t
interhunkctxlen	my_project/libgit2/deps/xdiff/xdiff.h	/^	long interhunkctxlen;$/;"	m	struct:s_xdemitconf	typeref:typename:long
internal_dfa_exec	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^internal_dfa_exec($/;"	f	typeref:typename:int	file:
internal_state	my_project/libgit2/deps/zlib/deflate.h	/^typedef struct internal_state {$/;"	s
internal_state	my_project/libgit2/deps/zlib/zconf.h	/^#  define internal_state /;"	d
interrupt_cb	my_project/libgit2/tests/libgit2/refs/foreachglob.c	/^static int interrupt_cb(const char *reference_name, void *payload)$/;"	f	typeref:typename:int	file:
interrupt_cleanup	my_project/libgit2/src/cli/cmd_clone.c	/^static void interrupt_cleanup(void)$/;"	f	typeref:typename:void	file:
interrupt_handler	my_project/libgit2/src/cli/unix/sighandler.c	/^static void (*interrupt_handler)(void) = NULL;$/;"	v	typeref:typename:void (*)(void)	file:
interrupt_handler	my_project/libgit2/src/cli/win32/sighandler.c	/^static void (*interrupt_handler)(void) = NULL;$/;"	v	typeref:typename:void (*)(void)	file:
interrupt_proxy	my_project/libgit2/src/cli/unix/sighandler.c	/^static void interrupt_proxy(int signal)$/;"	f	typeref:typename:void	file:
interrupt_proxy	my_project/libgit2/src/cli/win32/sighandler.c	/^static BOOL WINAPI interrupt_proxy(DWORD signal)$/;"	f	typeref:typename:BOOL WINAPI	file:
intf	my_project/libgit2/deps/zlib/zconf.h	/^#  define intf /;"	d
intf	my_project/libgit2/deps/zlib/zconf.h	/^typedef int   FAR intf;$/;"	t	typeref:typename:int FAR
intmax_t	my_project/libgit2/include/git2/stdint.h	/^typedef int64_t   intmax_t;$/;"	t	typeref:typename:int64_t
intptr_t	my_project/libgit2/include/git2/stdint.h	/^   typedef _W64 signed int   intptr_t;$/;"	t	typeref:typename:_W64 signed int
intptr_t	my_project/libgit2/include/git2/stdint.h	/^   typedef signed __int64    intptr_t;$/;"	t	typeref:typename:signed __int64
inuse_cnt	my_project/libgit2/src/libgit2/mwindow.h	/^	size_t inuse_cnt;$/;"	m	struct:git_mwindow	typeref:typename:size_t
invalid_id	my_project/libgit2/tests/libgit2/index/add.c	/^static const char *invalid_id = "1234567890123456789012345678901234567890";$/;"	v	typeref:typename:const char *	file:
invokes	my_project/libgit2/tests/libgit2/stash/foreach.c	/^	int invokes;$/;"	m	struct:callback_data	typeref:typename:int	file:
io	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^	git_stream *io;$/;"	m	struct:__anoncc3749c90108	typeref:typename:git_stream *	file:
io	my_project/libgit2/src/libgit2/streams/openssl.c	/^	git_stream *io;$/;"	m	struct:__anonb80f06c20108	typeref:typename:git_stream *	file:
io	my_project/libgit2/src/libgit2/streams/schannel.c	/^	git_stream *io;$/;"	m	struct:__anonafd1b44a0208	typeref:typename:git_stream *	file:
io	my_project/libgit2/src/libgit2/streams/stransport.c	/^	git_stream *io;$/;"	m	struct:__anon898973fe0108	typeref:typename:git_stream *	file:
io	my_project/libgit2/src/libgit2/transports/git.c	/^	git_stream *io;$/;"	m	struct:__anoneb1923e30108	typeref:typename:git_stream *	file:
io	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^	git_stream *io;$/;"	m	struct:__anonf54f66e30108	typeref:typename:git_stream *	file:
isLegalUTF8	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^static inline bool isLegalUTF8(const UTF8 *source, int length) {$/;"	f	typeref:typename:bool	file:
is_accelerated_repeat	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static BOOL is_accelerated_repeat(pcre_uchar *cc)$/;"	f	typeref:typename:BOOL	file:
is_all_caps_and_underscore	my_project/libgit2/src/libgit2/refs.c	/^static bool is_all_caps_and_underscore(const char *name, size_t len)$/;"	f	typeref:typename:bool	file:
is_alternate	my_project/libgit2/src/libgit2/odb.c	/^	bool is_alternate;$/;"	m	struct:__anon3125c0850108	typeref:typename:bool	file:
is_anchor	my_project/libgit2/deps/xdiff/xpatience.c	/^static int is_anchor(xpparam_t const *xpp, const char *line)$/;"	f	typeref:typename:int	file:
is_anchored	my_project/libgit2/deps/pcre/pcre_compile.c	/^is_anchored(register const pcre_uchar *code, unsigned int bracket_map,$/;"	f	typeref:typename:BOOL	file:
is_bare	my_project/libgit2/src/libgit2/repository.h	/^	         is_bare:1,$/;"	m	struct:git_repository	typeref:typename:unsigned:1
is_batch_mode	sdb.c	/^static int is_batch_mode = false;$/;"	v	typeref:typename:int	file:
is_blank_line	my_project/libgit2/src/libgit2/trailer.c	/^static int is_blank_line(const char *str)$/;"	f	typeref:typename:int	file:
is_boundary	my_project/libgit2/src/libgit2/blame.h	/^	bool is_boundary;$/;"	m	struct:git_blame__entry	typeref:typename:bool
is_char7_bitset	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static BOOL is_char7_bitset(const sljit_u8 *bitset, BOOL nclass)$/;"	f	typeref:typename:BOOL	file:
is_chmod_supported	my_project/libgit2/src/libgit2/repository.c	/^static bool is_chmod_supported(const char *file_path)$/;"	f	typeref:typename:bool	file:
is_complete	my_project/libgit2/src/libgit2/transports/auth.h	/^	int (*is_complete)(git_http_auth_context *ctx);$/;"	m	struct:git_http_auth_context	typeref:typename:int (*)(git_http_auth_context * ctx)
is_counted_repeat	my_project/libgit2/deps/pcre/pcre_compile.c	/^is_counted_repeat(const pcre_uchar *p)$/;"	f	typeref:typename:BOOL	file:
is_cr_needed	my_project/libgit2/deps/xdiff/xmerge.c	/^static int is_cr_needed(xdfenv_t *xe1, xdfenv_t *xe2, xdmerge_t *m)$/;"	f	typeref:typename:int	file:
is_crud	my_project/libgit2/src/libgit2/signature.c	/^static bool is_crud(unsigned char c)$/;"	f	typeref:typename:bool	file:
is_date	my_project/libgit2/src/util/date.c	/^static int is_date(int year, int month, int day, struct tm *now_tm, time_t now, struct tm *tm)$/;"	f	typeref:typename:int	file:
is_delete_env	my_project/libgit2/src/util/unix/process.c	/^GIT_INLINE(bool) is_delete_env(const char *env)$/;"	f	typeref:typename:bool
is_delete_env	my_project/libgit2/src/util/win32/process.c	/^GIT_INLINE(bool) is_delete_env(const char *env)$/;"	f	typeref:typename:bool
is_dir	my_project/libgit2/src/libgit2/attr_file.h	/^	int      is_dir;$/;"	m	struct:__anon0df92d8f0908	typeref:typename:int
is_dirty_cb	my_project/libgit2/src/libgit2/stash.c	/^static int is_dirty_cb(const char *path, unsigned int status, void *payload)$/;"	f	typeref:typename:int	file:
is_empty_rec	my_project/libgit2/deps/xdiff/xemit.c	/^static int is_empty_rec(xdfile_t *xdf, long ri)$/;"	f	typeref:typename:int	file:
is_eol	my_project/libgit2/src/libgit2/mailmap.c	/^static bool is_eol(git_parse_ctx *ctx)$/;"	f	typeref:typename:bool	file:
is_eol_crlf	my_project/libgit2/deps/xdiff/xmerge.c	/^static int is_eol_crlf(xdfile_t *file, int i)$/;"	f	typeref:typename:int	file:
is_file_or_link	my_project/libgit2/src/libgit2/index.c	/^GIT_INLINE(bool) is_file_or_link(const int filemode)$/;"	f	typeref:typename:bool
is_filemode_changed	my_project/libgit2/src/libgit2/checkout.c	/^GIT_INLINE(bool) is_filemode_changed(git_filemode_t a, git_filemode_t b, int respect_filemode)$/;"	f	typeref:typename:bool
is_filesystem_case_insensitive	my_project/libgit2/src/libgit2/repository.c	/^static bool is_filesystem_case_insensitive(const char *gitdir_path)$/;"	f	typeref:typename:bool	file:
is_forbidden_custom_header	my_project/libgit2/src/libgit2/remote.c	/^static bool is_forbidden_custom_header(const char *custom_header)$/;"	f	typeref:typename:bool	file:
is_func_rec	my_project/libgit2/deps/xdiff/xemit.c	/^static int is_func_rec(xdfile_t *xdf, xdemitconf_t const *xecfg, long ri)$/;"	f	typeref:typename:int	file:
is_glob_special	my_project/libgit2/src/util/wildmatch.c	/^#define is_glob_special(/;"	d	file:
is_ignored	my_project/libgit2/src/libgit2/iterator.c	/^	int is_ignored;$/;"	m	struct:__anon2f88b95a0708	typeref:typename:int	file:
is_index_extended	my_project/libgit2/src/libgit2/index.c	/^static bool is_index_extended(git_index *index)$/;"	f	typeref:typename:bool	file:
is_integer	my_project/libgit2/examples/args.c	/^int is_integer(int *out, const char *str, int allow_negative)$/;"	f	typeref:typename:int
is_ipv6	my_project/libgit2/src/util/net.c	/^static bool is_ipv6(const char *str)$/;"	f	typeref:typename:bool	file:
is_malformed_http_header	my_project/libgit2/src/libgit2/remote.c	/^static bool is_malformed_http_header(const char *http_header)$/;"	f	typeref:typename:bool	file:
is_merge	my_project/libgit2/src/libgit2/fetchhead.h	/^	unsigned int is_merge;$/;"	m	struct:git_fetchhead_ref	typeref:typename:unsigned int
is_namechar	my_project/libgit2/src/libgit2/config_parse.c	/^GIT_INLINE(bool) is_namechar(char c)$/;"	f	typeref:typename:bool
is_nl	my_project/libgit2/src/cli/progress.c	/^#define is_nl(/;"	d	file:
is_path_occupied	my_project/libgit2/src/libgit2/submodule.c	/^static int is_path_occupied(bool *occupied, git_repository *repo, const char *path)$/;"	f	typeref:typename:int	file:
is_per_worktree_ref	my_project/libgit2/src/libgit2/refdb_fs.c	/^static bool is_per_worktree_ref(const char *ref_name)$/;"	f	typeref:typename:bool	file:
is_powerof2	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE BOOL is_powerof2(unsigned int value)$/;"	f	typeref:typename:SLJIT_INLINE BOOL	file:
is_prefixed	my_project/libgit2/examples/args.c	/^size_t is_prefixed(const char *str, const char *pfx)$/;"	f	typeref:typename:size_t
is_racy_entry	my_project/libgit2/src/libgit2/index.c	/^static bool is_racy_entry(git_index *index, const git_index_entry *entry)$/;"	f	typeref:typename:bool	file:
is_readonly	my_project/libgit2/src/libgit2/config.c	/^static int is_readonly(const git_config *config)$/;"	f	typeref:typename:int	file:
is_rename_source	my_project/libgit2/src/libgit2/diff_tform.c	/^static bool is_rename_source($/;"	f	typeref:typename:bool	file:
is_rename_target	my_project/libgit2/src/libgit2/diff_tform.c	/^static bool is_rename_target($/;"	f	typeref:typename:bool	file:
is_safe	my_project/libgit2/src/libgit2/repository.c	/^	bool *is_safe;$/;"	m	struct:__anon453495b00208	typeref:typename:bool *	file:
is_ssh_scheme	my_project/libgit2/src/util/net.c	/^static bool is_ssh_scheme(const char *scheme, size_t scheme_len)$/;"	f	typeref:typename:bool	file:
is_startline	my_project/libgit2/deps/pcre/pcre_compile.c	/^is_startline(const pcre_uchar *code, unsigned int bracket_map,$/;"	f	typeref:typename:BOOL	file:
is_valid_name	my_project/libgit2/tests/libgit2/network/remote/isvalidname.c	/^static int is_valid_name(const char *name)$/;"	f	typeref:typename:int	file:
is_valid_name	my_project/libgit2/tests/libgit2/refs/isvalidname.c	/^static bool is_valid_name(const char *name)$/;"	f	typeref:typename:bool	file:
is_valid_ref_char	my_project/libgit2/src/libgit2/refs.c	/^static int is_valid_ref_char(char ch)$/;"	f	typeref:typename:int	file:
is_valid_repository_path	my_project/libgit2/src/libgit2/repository.c	/^static int is_valid_repository_path($/;"	f	typeref:typename:int	file:
is_valid_scheme_char	my_project/libgit2/src/util/net.c	/^#define is_valid_scheme_char(/;"	d	file:
is_valid_tmp_path	my_project/libgit2/tests/clar/clar/sandbox.h	/^is_valid_tmp_path(const char *path)$/;"	f	typeref:typename:int
is_work_tree_watched	my_project.git/hooks/fsmonitor-watchman.sample	/^sub is_work_tree_watched {$/;"	s
is_work_tree_watched	my_project/libgit2/tests/resources/testrepo_256.git/hooks/fsmonitor-watchman.sample	/^sub is_work_tree_watched {$/;"	s
is_workdir_base_or_new	my_project/libgit2/src/libgit2/checkout.c	/^GIT_INLINE(bool) is_workdir_base_or_new($/;"	f	typeref:typename:bool
is_worktree	my_project/libgit2/src/libgit2/repository.h	/^	         is_worktree:1;$/;"	m	struct:git_repository	typeref:typename:unsigned:1
is_worktree_dir	my_project/libgit2/src/libgit2/worktree.c	/^static bool is_worktree_dir(const char *dir)$/;"	f	typeref:typename:bool	file:
is_zlib_compressed_data	my_project/libgit2/src/libgit2/odb_loose.c	/^static int is_zlib_compressed_data(unsigned char *data, size_t data_len)$/;"	f	typeref:typename:int	file:
iscondassert	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL iscondassert;                \/* Next assert is a condition *\/$/;"	m	struct:compile_data	typeref:typename:BOOL
isize	my_project/libgit2/deps/xdiff/xtypes.h	/^	long isize, nsize;$/;"	m	struct:s_chastore	typeref:typename:long
item	my_project/libgit2/src/libgit2/commit_list.h	/^	git_commit_list_node *item;$/;"	m	struct:git_commit_list	typeref:typename:git_commit_list_node *
item	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^	struct item {$/;"	s	function:test_refs_branches_create__name_vs_namespace	file:
item	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^	struct item {$/;"	s	function:test_refs_branches_create__name_vs_namespace_fail	file:
item 1.1 item 1.2 changed item 1.3 changed item 1.4 item 1.5 item 1.6 item 1.7 item 1.8 item 1.9 item 1.10 added	my_project/libgit2/tests/resources/userdiff/after/file.html	/^  <\/h1>$/;"	h
item 1.1 item 1.2 changed item 1.3 changed item 1.4 item 1.5 item 1.6 item 1.7 item 1.8 item 1.9 item 1.10 added	my_project/libgit2/tests/resources/userdiff/files/file.html	/^  <\/h1>$/;"	h
item 1.1 item 1.2 item 1.3 item 1.4 item 1.5 item 1.6 item 1.7 item 1.8 item 1.9	my_project/libgit2/tests/resources/userdiff/before/file.html	/^  <\/h1>$/;"	h
item 2.1 item 2.2 item 2.3 item 2.4 item 2.5 item 2.6 item 2.7 changed item 2.7.1 added item 2.8	my_project/libgit2/tests/resources/userdiff/after/file.html	/^  <\/h1>$/;"	h
item 2.1 item 2.2 item 2.3 item 2.4 item 2.5 item 2.6 item 2.7 changed item 2.7.1 added item 2.8	my_project/libgit2/tests/resources/userdiff/files/file.html	/^  <\/h1>$/;"	h
item 2.1 item 2.2 item 2.3 item 2.4 item 2.5 item 2.6 item 2.7 item 2.8	my_project/libgit2/tests/resources/userdiff/before/file.html	/^  <\/h1>$/;"	h
item 3.1 item 3.2 item 3.3 item 3.4 item 3.5 item 3.6	my_project/libgit2/tests/resources/userdiff/after/file.html	/^  <\/h1>$/;"	h
item 3.1 item 3.2 item 3.3 item 3.4 item 3.5 item 3.6	my_project/libgit2/tests/resources/userdiff/files/file.html	/^  <\/h1>$/;"	h
item 3.1 item 3.2 item 3.3 item 3.4 item 3.5 item 3.6 item 3.7 item 3.8	my_project/libgit2/tests/resources/userdiff/before/file.html	/^  <\/h1>$/;"	h
item_path_offset	my_project/libgit2/src/util/sortedcache.h	/^	size_t       item_path_offset;$/;"	m	struct:__anon21e0f34b0108	typeref:typename:size_t
item_size	my_project/libgit2/src/util/pool.h	/^	size_t item_size;  \/* size of single alloc unit in bytes *\/$/;"	m	struct:__anon2c1ced600108	typeref:typename:size_t
item_size	my_project/libgit2/src/util/pool.h	/^	size_t item_size;$/;"	m	struct:__anon2c1ced600208	typeref:typename:size_t
items	my_project/libgit2/src/libgit2/repository.c	/^} items[] = {$/;"	v	typeref:typename:const struct __anon453495b00108[]
items	my_project/libgit2/src/util/sortedcache.h	/^	git_vector   items;$/;"	m	struct:__anon21e0f34b0108	typeref:typename:git_vector
iter	my_project/libgit2/src/libgit2/branch.c	/^	git_reference_iterator *iter;$/;"	m	struct:__anon7d20e9de0108	typeref:typename:git_reference_iterator *	file:
iter	my_project/libgit2/src/libgit2/config.c	/^	git_config_iterator *iter;$/;"	m	struct:__anona0399aa60508	typeref:typename:git_config_iterator *	file:
iter	my_project/libgit2/src/libgit2/refdb_fs.c	/^	refdb_fs_iter *iter;$/;"	m	struct:iter_load_context	typeref:typename:refdb_fs_iter *	file:
iter_load_context	my_project/libgit2/src/libgit2/refdb_fs.c	/^struct iter_load_context {$/;"	s	file:
iter_load_context_dispose	my_project/libgit2/src/libgit2/refdb_fs.c	/^#define iter_load_context_dispose(/;"	d	file:
iter_load_context_init	my_project/libgit2/src/libgit2/refdb_fs.c	/^#define iter_load_context_init(/;"	d	file:
iter_load_loose_paths	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int iter_load_loose_paths($/;"	f	typeref:typename:int	file:
iter_load_optimize_prefix	my_project/libgit2/src/libgit2/refdb_fs.c	/^static void iter_load_optimize_prefix(struct iter_load_context *ctx)$/;"	f	typeref:typename:void	file:
iter_load_paths	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int iter_load_paths($/;"	f	typeref:typename:int	file:
iterate_over_patch	my_project/libgit2/tests/libgit2/diff/diffiter.c	/^static void iterate_over_patch(git_patch *patch, diff_expects *exp)$/;"	f	typeref:typename:void	file:
iterate_refs	my_project/libgit2/tests/libgit2/threads/refdb.c	/^static void *iterate_refs(void *arg)$/;"	f	typeref:typename:void *	file:
iterator__descend_symlinks	my_project/libgit2/src/libgit2/iterator.c	/^#define iterator__descend_symlinks(/;"	d	file:
iterator__do_autoexpand	my_project/libgit2/src/libgit2/iterator.c	/^#define iterator__do_autoexpand(/;"	d	file:
iterator__dont_autoexpand	my_project/libgit2/src/libgit2/iterator.c	/^#define iterator__dont_autoexpand(/;"	d	file:
iterator__flag	my_project/libgit2/src/libgit2/iterator.c	/^#define iterator__flag(/;"	d	file:
iterator__has_been_accessed	my_project/libgit2/src/libgit2/iterator.c	/^#define iterator__has_been_accessed(/;"	d	file:
iterator__honor_ignores	my_project/libgit2/src/libgit2/iterator.c	/^#define iterator__honor_ignores(/;"	d	file:
iterator__ignore_case	my_project/libgit2/src/libgit2/iterator.c	/^#define iterator__ignore_case(/;"	d	file:
iterator__ignore_dot_git	my_project/libgit2/src/libgit2/iterator.c	/^#define iterator__ignore_dot_git(/;"	d	file:
iterator__include_conflicts	my_project/libgit2/src/libgit2/iterator.c	/^#define iterator__include_conflicts(/;"	d	file:
iterator__include_trees	my_project/libgit2/src/libgit2/iterator.c	/^#define iterator__include_trees(/;"	d	file:
iterator_advance	my_project/libgit2/src/libgit2/diff_generate.c	/^static int iterator_advance($/;"	f	typeref:typename:int	file:
iterator_advance_into	my_project/libgit2/src/libgit2/diff_generate.c	/^static int iterator_advance_into($/;"	f	typeref:typename:int	file:
iterator_advance_over	my_project/libgit2/src/libgit2/diff_generate.c	/^static int iterator_advance_over($/;"	f	typeref:typename:int	file:
iterator_clear	my_project/libgit2/src/libgit2/iterator.c	/^static void iterator_clear(git_iterator *iter)$/;"	f	typeref:typename:void	file:
iterator_compare	my_project/libgit2/tests/libgit2/apply/apply_helpers.c	/^static int iterator_compare(const git_index_entry *entry, void *_data)$/;"	f	typeref:typename:int	file:
iterator_compare_data	my_project/libgit2/tests/libgit2/apply/apply_helpers.c	/^struct iterator_compare_data {$/;"	s	file:
iterator_current	my_project/libgit2/src/libgit2/diff_generate.c	/^static int iterator_current($/;"	f	typeref:typename:int	file:
iterator_eq	my_project/libgit2/tests/libgit2/apply/apply_helpers.c	/^static int iterator_eq(const git_index_entry **entry, void *_data)$/;"	f	typeref:typename:int	file:
iterator_flags	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_iterator_flag_t iterator_flags;$/;"	m	struct:refdb_fs_backend	typeref:typename:git_iterator_flag_t	file:
iterator_for_annotated_commit	my_project/libgit2/src/libgit2/merge.c	/^static int iterator_for_annotated_commit($/;"	f	typeref:typename:int	file:
iterator_for_filesystem	my_project/libgit2/src/libgit2/iterator.c	/^static int iterator_for_filesystem($/;"	f	typeref:typename:int	file:
iterator_given_or_empty	my_project/libgit2/src/libgit2/merge.c	/^static git_iterator *iterator_given_or_empty(git_iterator **empty, git_iterator *given)$/;"	f	typeref:typename:git_iterator *	file:
iterator_has_ended	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(bool) iterator_has_ended(git_iterator *iter, const char *path)$/;"	f	typeref:typename:bool
iterator_has_started	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(bool) iterator_has_started($/;"	f	typeref:typename:bool
iterator_init_common	my_project/libgit2/src/libgit2/iterator.c	/^static int iterator_init_common($/;"	f	typeref:typename:int	file:
iterator_pathlist_init	my_project/libgit2/src/libgit2/iterator.c	/^static int iterator_pathlist_init(git_iterator *iter, git_strarray *pathlist)$/;"	f	typeref:typename:int	file:
iterator_pathlist_next_is	my_project/libgit2/src/libgit2/iterator.c	/^static bool iterator_pathlist_next_is(git_iterator *iter, const char *path)$/;"	f	typeref:typename:bool	file:
iterator_pathlist_search	my_project/libgit2/src/libgit2/iterator.c	/^static iterator_pathlist_search_t iterator_pathlist_search($/;"	f	typeref:typename:iterator_pathlist_search_t	file:
iterator_pathlist_search_t	my_project/libgit2/src/libgit2/iterator.c	/^} iterator_pathlist_search_t;$/;"	t	typeref:enum:__anon2f88b95a0103	file:
iterator_rand	my_project/libgit2/src/libgit2/revwalk.h	/^	git_commit_list *iterator_rand;$/;"	m	struct:git_revwalk	typeref:typename:git_commit_list *
iterator_range_free	my_project/libgit2/src/libgit2/iterator.c	/^static void iterator_range_free(git_iterator *iter)$/;"	f	typeref:typename:void	file:
iterator_range_init	my_project/libgit2/src/libgit2/iterator.c	/^static int iterator_range_init($/;"	f	typeref:typename:int	file:
iterator_reset_range	my_project/libgit2/src/libgit2/iterator.c	/^static int iterator_reset_range($/;"	f	typeref:typename:int	file:
iterator_reverse	my_project/libgit2/src/libgit2/revwalk.h	/^	git_commit_list *iterator_reverse;$/;"	m	struct:git_revwalk	typeref:typename:git_commit_list *
iterator_set_ignore_case	my_project/libgit2/src/libgit2/iterator.c	/^static void iterator_set_ignore_case(git_iterator *iter, bool ignore_case)$/;"	f	typeref:typename:void	file:
iterator_time	my_project/libgit2/src/libgit2/revwalk.h	/^	git_pqueue iterator_time;$/;"	m	struct:git_revwalk	typeref:typename:git_pqueue
iterator_topo	my_project/libgit2/src/libgit2/revwalk.h	/^	git_commit_list *iterator_topo;$/;"	m	struct:git_revwalk	typeref:typename:git_commit_list *
jit_arguments	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct jit_arguments {$/;"	s	file:
jit_arguments	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} jit_arguments;$/;"	t	typeref:struct:jit_arguments	file:
jit_function	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef int (SLJIT_FUNC *jit_function)(jit_arguments *args);$/;"	t	typeref:typename:int (SLJIT_FUNC *)(jit_arguments * args)	file:
jit_machine_stack_exec	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_NOINLINE int jit_machine_stack_exec(jit_arguments *arguments, void *executable_func/;"	f	typeref:typename:SLJIT_NOINLINE int	file:
joinpath	my_project/libgit2/tests/clar/clar/fs.h	/^static char *joinpath(const char *dir, const char *base, int base_len)$/;"	f	typeref:typename:char *
jscript_compat	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   jscript_compat;          \/* JAVASCRIPT_COMPAT flag *\/$/;"	m	struct:match_data	typeref:typename:BOOL
jscript_compat	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL jscript_compat;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
jump	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_jump *jump;$/;"	m	struct:jump_list	typeref:struct:sljit_jump *	file:
jump_list	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct jump_list {$/;"	s	file:
jump_list	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} jump_list;$/;"	t	typeref:struct:jump_list	file:
junk_obj	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static git_rawobj junk_obj = {$/;"	v	typeref:typename:git_rawobj
kMatchComplete	my_project/libgit2/deps/llhttp/llhttp.c	/^  kMatchComplete,$/;"	e	enum:llparse_match_status_e	file:
kMatchMismatch	my_project/libgit2/deps/llhttp/llhttp.c	/^  kMatchMismatch$/;"	e	enum:llparse_match_status_e	file:
kMatchPause	my_project/libgit2/deps/llhttp/llhttp.c	/^  kMatchPause,$/;"	e	enum:llparse_match_status_e	file:
kcalloc	my_project/libgit2/src/libgit2/idxmap.c	/^#define kcalloc /;"	d	file:
kcalloc	my_project/libgit2/src/libgit2/offmap.c	/^#define kcalloc /;"	d	file:
kcalloc	my_project/libgit2/src/libgit2/oidmap.c	/^#define kcalloc /;"	d	file:
kcalloc	my_project/libgit2/src/util/khash.h	/^#define kcalloc(/;"	d
kcalloc	my_project/libgit2/src/util/strmap.c	/^#define kcalloc /;"	d	file:
keepalive	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	         keepalive : 1,$/;"	m	struct:git_http_client	typeref:typename:unsigned:1	file:
key	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^    unsigned char key[HMAC_MAX_MD_CBLOCK];$/;"	m	struct:hmac_ctx_st	typeref:typename:unsigned char[]
key	my_project/libgit2/include/git2/message.h	/^  const char *key;$/;"	m	struct:__anon2d3685bf0108	typeref:typename:const char *
key	my_project/libgit2/src/libgit2/attr_file.h	/^	int key;$/;"	m	struct:__anon0df92d8f0a08	typeref:typename:int
key	my_project/libgit2/src/util/sortedcache.c	/^	const char *key;$/;"	m	struct:sortedcache_magic_key	typeref:typename:const char *	file:
key	my_project/libgit2/tests/util/strmap.c	/^		char *key;$/;"	m	struct:test_strmap__iteration::__anon7435b5230108	typeref:typename:char *	file:
key_length	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^    unsigned int key_length;$/;"	m	struct:hmac_ctx_st	typeref:typename:unsigned int
key_shift	my_project/libgit2/deps/xdiff/xhistogram.c	/^		     key_shift,$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
kfree	my_project/libgit2/src/libgit2/idxmap.c	/^#define kfree /;"	d	file:
kfree	my_project/libgit2/src/libgit2/offmap.c	/^#define kfree /;"	d	file:
kfree	my_project/libgit2/src/libgit2/oidmap.c	/^#define kfree /;"	d	file:
kfree	my_project/libgit2/src/util/khash.h	/^#define kfree(/;"	d
kfree	my_project/libgit2/src/util/strmap.c	/^#define kfree /;"	d	file:
kh_begin	my_project/libgit2/src/util/khash.h	/^#define kh_begin(/;"	d
kh_clear	my_project/libgit2/src/util/khash.h	/^#define kh_clear(/;"	d
kh_cstr_t	my_project/libgit2/src/util/khash.h	/^typedef const char *kh_cstr_t;$/;"	t	typeref:typename:const char *
kh_del	my_project/libgit2/src/util/khash.h	/^#define kh_del(/;"	d
kh_destroy	my_project/libgit2/src/util/khash.h	/^#define kh_destroy(/;"	d
kh_end	my_project/libgit2/src/util/khash.h	/^#define kh_end(/;"	d
kh_exist	my_project/libgit2/src/util/khash.h	/^#define kh_exist(/;"	d
kh_foreach	my_project/libgit2/src/util/khash.h	/^#define kh_foreach(/;"	d
kh_foreach_value	my_project/libgit2/src/util/khash.h	/^#define kh_foreach_value(/;"	d
kh_get	my_project/libgit2/src/util/khash.h	/^#define kh_get(/;"	d
kh_init	my_project/libgit2/src/util/khash.h	/^#define kh_init(/;"	d
kh_inline	my_project/libgit2/src/util/khash.h	/^#define kh_inline /;"	d
kh_inline	my_project/libgit2/src/util/khash.h	/^#define kh_inline$/;"	d
kh_int64_hash_equal	my_project/libgit2/src/util/khash.h	/^#define kh_int64_hash_equal(/;"	d
kh_int64_hash_func	my_project/libgit2/src/util/khash.h	/^#define kh_int64_hash_func(/;"	d
kh_int_hash_equal	my_project/libgit2/src/util/khash.h	/^#define kh_int_hash_equal(/;"	d
kh_int_hash_func	my_project/libgit2/src/util/khash.h	/^#define kh_int_hash_func(/;"	d
kh_int_hash_func2	my_project/libgit2/src/util/khash.h	/^#define kh_int_hash_func2(/;"	d
kh_key	my_project/libgit2/src/util/khash.h	/^#define kh_key(/;"	d
kh_n_buckets	my_project/libgit2/src/util/khash.h	/^#define kh_n_buckets(/;"	d
kh_put	my_project/libgit2/src/util/khash.h	/^#define kh_put(/;"	d
kh_resize	my_project/libgit2/src/util/khash.h	/^#define kh_resize(/;"	d
kh_size	my_project/libgit2/src/util/khash.h	/^#define kh_size(/;"	d
kh_str_hash_equal	my_project/libgit2/src/util/khash.h	/^#define kh_str_hash_equal(/;"	d
kh_str_hash_func	my_project/libgit2/src/util/khash.h	/^#define kh_str_hash_func(/;"	d
kh_val	my_project/libgit2/src/util/khash.h	/^#define kh_val(/;"	d
kh_value	my_project/libgit2/src/util/khash.h	/^#define kh_value(/;"	d
khash_t	my_project/libgit2/src/util/khash.h	/^#define khash_t(/;"	d
khint32_t	my_project/libgit2/src/util/khash.h	/^typedef uint32_t khint32_t;$/;"	t	typeref:typename:uint32_t
khint64_t	my_project/libgit2/src/util/khash.h	/^typedef uint64_t khint64_t;$/;"	t	typeref:typename:uint64_t
khint_t	my_project/libgit2/src/util/khash.h	/^typedef khint32_t khint_t;$/;"	t	typeref:typename:khint32_t
khiter_t	my_project/libgit2/src/util/khash.h	/^typedef khint_t khiter_t;$/;"	t	typeref:typename:khint_t
klass	my_project/libgit2/include/git2/errors.h	/^	int klass;$/;"	m	struct:__anon095219370208	typeref:typename:int
kmalloc	my_project/libgit2/src/libgit2/idxmap.c	/^#define kmalloc /;"	d	file:
kmalloc	my_project/libgit2/src/libgit2/offmap.c	/^#define kmalloc /;"	d	file:
kmalloc	my_project/libgit2/src/libgit2/oidmap.c	/^#define kmalloc /;"	d	file:
kmalloc	my_project/libgit2/src/util/khash.h	/^#define kmalloc(/;"	d
kmalloc	my_project/libgit2/src/util/strmap.c	/^#define kmalloc /;"	d	file:
krealloc	my_project/libgit2/src/libgit2/idxmap.c	/^#define krealloc /;"	d	file:
krealloc	my_project/libgit2/src/libgit2/offmap.c	/^#define krealloc /;"	d	file:
krealloc	my_project/libgit2/src/libgit2/oidmap.c	/^#define krealloc /;"	d	file:
krealloc	my_project/libgit2/src/util/khash.h	/^#define krealloc(/;"	d
krealloc	my_project/libgit2/src/util/strmap.c	/^#define krealloc /;"	d	file:
kreallocarray	my_project/libgit2/src/libgit2/idxmap.c	/^#define kreallocarray /;"	d	file:
kreallocarray	my_project/libgit2/src/libgit2/offmap.c	/^#define kreallocarray /;"	d	file:
kreallocarray	my_project/libgit2/src/libgit2/oidmap.c	/^#define kreallocarray /;"	d	file:
kreallocarray	my_project/libgit2/src/util/khash.h	/^#define kreallocarray(/;"	d
kreallocarray	my_project/libgit2/src/util/strmap.c	/^#define kreallocarray /;"	d	file:
kroundup32	my_project/libgit2/src/util/khash.h	/^#define kroundup32(/;"	d
ks	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^    } ks[16];$/;"	m	struct:DES_ks	typeref:union:DES_ks::__anoncf67763b010a[16]
l_desc	my_project/libgit2/deps/zlib/deflate.h	/^    struct tree_desc_s l_desc;               \/* desc. for literal tree *\/$/;"	m	struct:internal_state	typeref:struct:tree_desc_s
label	my_project/libgit2/.vscode/tasks.json	/^        "label": "Build",$/;"	s	object:tasks.0
label	my_project/libgit2/.vscode/tasks.json	/^        "label": "Run Tests",$/;"	s	object:tasks.1
label	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *label;$/;"	m	struct:label_addr_list	typeref:struct:sljit_label *	file:
label_addr_list	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct label_addr_list {$/;"	s	file:
label_addr_list	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} label_addr_list;$/;"	t	typeref:struct:label_addr_list	file:
label_addrs	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  label_addr_list *label_addrs;$/;"	m	struct:compiler_common	typeref:typename:label_addr_list *	file:
last	my_project/libgit2/deps/xdiff/xpatience.c	/^	} *entries, *first, *last;$/;"	m	struct:hashmap	typeref:struct:hashmap::entry *	file:
last	my_project/libgit2/deps/zlib/inflate.h	/^    int last;                   \/* true if processing last block *\/$/;"	m	struct:inflate_state	typeref:typename:int
last	my_project/libgit2/src/libgit2/config_list.c	/^	struct config_entry_list *last;$/;"	m	struct:config_entry_list	typeref:struct:config_entry_list *	file:
last	my_project/libgit2/src/util/errors.c	/^	git_error *last;$/;"	m	struct:error_threadstate	typeref:typename:git_error *	file:
last	my_project/libgit2/tests/clar/clar_libgit2_timer.h	/^	uint64_t last;$/;"	m	struct:cl_perf_timer	typeref:typename:uint64_t
last_bytes	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^	size_t last_bytes;$/;"	m	struct:push_packbuilder_payload	typeref:typename:size_t	file:
last_commit	my_project/libgit2/src/libgit2/rebase.c	/^	git_commit *last_commit;$/;"	m	struct:git_rebase	typeref:typename:git_commit *	file:
last_error	my_project/libgit2/src/util/filebuf.h	/^	int last_error;$/;"	m	struct:git_filebuf	typeref:typename:int
last_error	my_project/libgit2/tests/clar/clar.c	/^	struct clar_error *last_error;$/;"	m	struct:clar_report	typeref:struct:clar_error *	file:
last_error_retryable	my_project/libgit2/src/util/win32/posix_w32.c	/^GIT_INLINE(bool) last_error_retryable(void)$/;"	f	typeref:typename:bool
last_explicit	my_project/libgit2/tests/clar/clar.c	/^	struct clar_explicit *last_explicit;$/;"	m	struct:__anon15d96e120108	typeref:struct:clar_explicit *	file:
last_fired_bytes	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^	size_t last_fired_bytes;$/;"	m	struct:network_packetsize_payload	typeref:typename:size_t	file:
last_flush	my_project/libgit2/deps/zlib/deflate.h	/^    int   last_flush;    \/* value of flush param for previous deflate call *\/$/;"	m	struct:internal_state	typeref:typename:int
last_found	my_project/libgit2/src/libgit2/odb_pack.c	/^	struct git_pack_file *last_found;$/;"	m	struct:pack_backend	typeref:struct:git_pack_file *	file:
last_freshen	my_project/libgit2/src/libgit2/pack.h	/^	time_t last_freshen; \/* last time the packfile was freshened *\/$/;"	m	struct:git_pack_file	typeref:typename:time_t
last_line	my_project/libgit2/src/libgit2/trailer.c	/^static bool last_line(size_t *out, const char *buf, size_t len)$/;"	f	typeref:typename:bool	file:
last_progress_report_time	my_project/libgit2/src/libgit2/pack-objects.h	/^	uint64_t last_progress_report_time;$/;"	m	struct:git_packbuilder	typeref:typename:uint64_t
last_progress_report_time	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^	uint64_t last_progress_report_time;$/;"	m	struct:push_packbuilder_payload	typeref:typename:uint64_t	file:
last_report	my_project/libgit2/tests/clar/clar.c	/^	struct clar_report *last_report;$/;"	m	struct:__anon15d96e120108	typeref:struct:clar_report *	file:
last_update	my_project/libgit2/src/cli/progress.h	/^	uint64_t last_update;$/;"	m	struct:__anonb5f2ec150208	typeref:typename:uint64_t
last_usage	my_project/libgit2/src/libgit2/pack.h	/^	size_t last_usage; \/* enough? *\/$/;"	m	struct:git_pack_cache_entry	typeref:typename:size_t
last_used	my_project/libgit2/src/libgit2/mwindow.h	/^	size_t last_used;$/;"	m	struct:git_mwindow	typeref:typename:size_t
launch_watchman	my_project.git/hooks/fsmonitor-watchman.sample	/^sub launch_watchman {$/;"	s
launch_watchman	my_project/libgit2/tests/resources/testrepo_256.git/hooks/fsmonitor-watchman.sample	/^sub launch_watchman {$/;"	s
lcc	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const  pcre_uint8 *lcc;         \/* Points to lower casing table *\/$/;"	m	struct:match_data	typeref:typename:const pcre_uint8 *
lcc	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uint8 *lcc;            \/* Points to lower casing table *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uint8 *
lcc	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_sw lcc;$/;"	m	struct:compiler_common	typeref:typename:sljit_sw	file:
lcc_offset	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define lcc_offset /;"	d
leakcheck_free	my_project/libgit2/src/util/allocators/win32_leakcheck.c	/^static void leakcheck_free(void *ptr)$/;"	f	typeref:typename:void	file:
leakcheck_malloc	my_project/libgit2/src/util/allocators/win32_leakcheck.c	/^static void *leakcheck_malloc(size_t len, const char *file, int line)$/;"	f	typeref:typename:void *	file:
leakcheck_realloc	my_project/libgit2/src/util/allocators/win32_leakcheck.c	/^static void *leakcheck_realloc(void *ptr, size_t size, const char *file, int line)$/;"	f	typeref:typename:void *	file:
leaky_pack	my_project/libgit2/tests/libgit2/pack/indexer.c	/^static const unsigned char leaky_pack[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
leaky_pack_len	my_project/libgit2/tests/libgit2/pack/indexer.c	/^static const unsigned int leaky_pack_len = 33;$/;"	v	typeref:typename:const unsigned int	file:
legacy_write_fn	my_project/libgit2/src/libgit2/filter.c	/^	int (*legacy_write_fn)(git_filter *, void **, git_buf *, const git_buf *, const git_filter_sour/;"	m	struct:buffered_stream	typeref:typename:int (*)(git_filter *,void **,git_buf *,const git_buf *,const git_filter_source *)	file:
len	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	size_t len;$/;"	m	struct:__anondc54b7e10208	typeref:typename:size_t
len	my_project/libgit2/deps/pcre/pcre_compile.c	/^  int   len;                 \/* Length of verb name *\/$/;"	m	struct:verbitem	typeref:typename:int	file:
len	my_project/libgit2/deps/xdiff/xemit.c	/^	long len;$/;"	m	struct:func_line	typeref:typename:long	file:
len	my_project/libgit2/deps/zlib/deflate.h	/^        ush  len;        \/* length of bit string *\/$/;"	m	union:ct_data_s::__anon0b76eeb2020a	typeref:typename:ush
len	my_project/libgit2/include/git2/cert.h	/^	size_t len;$/;"	m	struct:__anon7ca863480408	typeref:typename:size_t
len	my_project/libgit2/include/git2/merge.h	/^	size_t len;$/;"	m	struct:__anon1374edca0608	typeref:typename:size_t
len	my_project/libgit2/src/libgit2/odb.h	/^	size_t len;			\/**< Total number of bytes in data. *\/$/;"	m	struct:__anon3125c08a0108	typeref:typename:size_t
len	my_project/libgit2/src/libgit2/odb_mempack.c	/^	size_t len;$/;"	m	struct:memobject	typeref:typename:size_t	file:
len	my_project/libgit2/src/libgit2/transports/smart.h	/^	size_t len;$/;"	m	struct:__anonb9ceeb0b0608	typeref:typename:size_t
len	my_project/libgit2/src/libgit2/transports/smart.h	/^	size_t len;$/;"	m	struct:__anonb9ceeb0b0708	typeref:typename:size_t
len	my_project/libgit2/src/util/hash.h	/^	size_t len;$/;"	m	struct:__anon187871ca0108	typeref:typename:size_t
len	my_project/libgit2/src/util/map.h	/^	size_t len; \/* data length			*\/$/;"	m	struct:__anon84f933a40108	typeref:typename:size_t
len	my_project/libgit2/src/util/staticstr.h	/^	size_t len;$/;"	m	struct:__anon361876470108	typeref:typename:size_t
len	my_project/libgit2/tests/libgit2/diff/rename.c	/^	size_t len;$/;"	m	struct:rename_expected	typeref:typename:size_t	file:
len	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^	unsigned int len;$/;"	m	struct:annotated_commit_cb_data	typeref:typename:unsigned int	file:
len1	my_project/libgit2/deps/xdiff/xprepare.c	/^	long len1, len2;$/;"	m	struct:s_xdlclass	typeref:typename:long	file:
len2	my_project/libgit2/deps/xdiff/xprepare.c	/^	long len1, len2;$/;"	m	struct:s_xdlclass	typeref:typename:long	file:
lenbits	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned lenbits;           \/* index bits for lencode *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
lencode	my_project/libgit2/deps/zlib/inflate.h	/^    code const FAR *lencode;    \/* starting table for length\/literal codes *\/$/;"	m	struct:inflate_state	typeref:typename:code const FAR *
lenfix	my_project/libgit2/deps/zlib/inffixed.h	/^    static const code lenfix[512] = {$/;"	v	typeref:typename:const code[512]
length	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define length /;"	d	file:
length	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int                length;        \/* Length of the name *\/$/;"	m	struct:named_group	typeref:typename:int
length	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int length;$/;"	m	struct:compare_context	typeref:typename:int	file:
length	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned length;            \/* literal or length of data to copy *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
length	my_project/libgit2/include/git2/odb.h	/^	unsigned short length;$/;"	m	struct:git_odb_expand_id	typeref:typename:unsigned short
length	my_project/libgit2/script/user_model.c	/^	size_t length;$/;"	m	struct:git_vector	typeref:typename:size_t	file:
length	my_project/libgit2/src/libgit2/attr_file.h	/^	size_t length;$/;"	m	struct:__anon0df92d8f0308	typeref:typename:size_t
length	my_project/libgit2/src/libgit2/commit_graph.c	/^	size_t length;$/;"	m	struct:git_commit_graph_chunk	typeref:typename:size_t	file:
length	my_project/libgit2/src/libgit2/midx.c	/^	size_t length;$/;"	m	struct:git_midx_chunk	typeref:typename:size_t	file:
length	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int length;$/;"	m	struct:__anon6b5cad8b0108	typeref:typename:int
length	my_project/libgit2/src/util/bitvec.h	/^	size_t length;$/;"	m	struct:__anonfa138ea30108	typeref:typename:size_t
length	my_project/libgit2/src/util/date.c	/^	int length;$/;"	m	struct:typelen	typeref:typename:int	file:
length	my_project/libgit2/src/util/tsort.c	/^	ssize_t length;$/;"	m	struct:tsort_run	typeref:typename:ssize_t	file:
length	my_project/libgit2/src/util/vector.h	/^	size_t length;$/;"	m	struct:git_vector	typeref:typename:size_t
length_flags	my_project/libgit2/src/libgit2/path.c	/^GIT_INLINE(unsigned int) length_flags($/;"	f	typeref:typename:unsigned int
lenientConversion	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^	lenientConversion$/;"	e	enum:__anon2762a15e0203	file:
lenient_flags	my_project/libgit2/deps/llhttp/llhttp.h	/^  uint16_t lenient_flags;$/;"	m	struct:llhttp__internal_s	typeref:typename:uint16_t
lens	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned short lens[320];   \/* temporary storage for code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned short[320]
level	my_project/libgit2/deps/xdiff/xdiff.h	/^	int level;$/;"	m	struct:s_xmparam	typeref:typename:int
level	my_project/libgit2/deps/zlib/deflate.h	/^    int level;    \/* compression level (1..9) *\/$/;"	m	struct:internal_state	typeref:typename:int
level	my_project/libgit2/deps/zlib/gzguts.h	/^    int level;              \/* compression level *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:int
level	my_project/libgit2/include/git2/config.h	/^	git_config_level_t level;$/;"	m	struct:git_config_entry	typeref:typename:git_config_level_t
level	my_project/libgit2/src/libgit2/config.c	/^	git_config_level_t level;$/;"	m	struct:__anona0399aa60208	typeref:typename:git_config_level_t	file:
level	my_project/libgit2/src/libgit2/config_file.c	/^	git_config_level_t level;$/;"	m	struct:__anon341047050108	typeref:typename:git_config_level_t	file:
level	my_project/libgit2/src/libgit2/config_file.c	/^	git_config_level_t level;$/;"	m	struct:__anon341047050208	typeref:typename:git_config_level_t	file:
level	my_project/libgit2/src/libgit2/config_mem.c	/^	git_config_level_t level;$/;"	m	struct:__anon766d71c40208	typeref:typename:git_config_level_t	file:
level	my_project/libgit2/src/libgit2/trace.h	/^	git_trace_level_t level;$/;"	m	struct:git_trace_data	typeref:typename:git_trace_level_t
level_name	my_project/libgit2/src/cli/cmd_config.c	/^static const char *level_name(git_config_level_t level)$/;"	f	typeref:typename:const char *	file:
lf	my_project/libgit2/src/util/str.h	/^	unsigned int nul, cr, lf, crlf; \/* NUL, CR, LF and CRLF counts *\/$/;"	m	struct:__anon85703a5f0208	typeref:typename:unsigned int
lfc_data	my_project/libgit2/src/libgit2/submodule.c	/^} lfc_data;$/;"	t	typeref:struct:__anon705203a00408	file:
lg2	my_project/libgit2/examples/CMakeLists.txt	/^add_executable(lg2 ${SRC_EXAMPLES})$/;"	t
lg2_add	my_project/libgit2/examples/add.c	/^int lg2_add(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_blame	my_project/libgit2/examples/blame.c	/^int lg2_blame(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_cat_file	my_project/libgit2/examples/cat-file.c	/^int lg2_cat_file(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_checkout	my_project/libgit2/examples/checkout.c	/^int lg2_checkout(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_clone	my_project/libgit2/examples/clone.c	/^int lg2_clone(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_commit	my_project/libgit2/examples/commit.c	/^int lg2_commit(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_config	my_project/libgit2/examples/config.c	/^int lg2_config(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_describe	my_project/libgit2/examples/describe.c	/^int lg2_describe(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_diff	my_project/libgit2/examples/diff.c	/^int lg2_diff(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_fetch	my_project/libgit2/examples/fetch.c	/^int lg2_fetch(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_for_each_ref	my_project/libgit2/examples/for-each-ref.c	/^int lg2_for_each_ref(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_general	my_project/libgit2/examples/general.c	/^int lg2_general(git_repository *repo, int argc, char** argv)$/;"	f	typeref:typename:int
lg2_index_pack	my_project/libgit2/examples/index-pack.c	/^int lg2_index_pack(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_init	my_project/libgit2/examples/init.c	/^int lg2_init(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_log	my_project/libgit2/examples/log.c	/^int lg2_log(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_ls_files	my_project/libgit2/examples/ls-files.c	/^int lg2_ls_files(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_ls_remote	my_project/libgit2/examples/ls-remote.c	/^int lg2_ls_remote(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_merge	my_project/libgit2/examples/merge.c	/^int lg2_merge(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_push	my_project/libgit2/examples/push.c	/^int lg2_push(git_repository *repo, int argc, char **argv) {$/;"	f	typeref:typename:int
lg2_remote	my_project/libgit2/examples/remote.c	/^int lg2_remote(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_rev_list	my_project/libgit2/examples/rev-list.c	/^int lg2_rev_list(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_rev_parse	my_project/libgit2/examples/rev-parse.c	/^int lg2_rev_parse(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_show_index	my_project/libgit2/examples/show-index.c	/^int lg2_show_index(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
lg2_stash	my_project/libgit2/examples/stash.c	/^int lg2_stash(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_status	my_project/libgit2/examples/status.c	/^int lg2_status(git_repository *repo, int argc, char *argv[])$/;"	f	typeref:typename:int
lg2_tag	my_project/libgit2/examples/tag.c	/^int lg2_tag(git_repository *repo, int argc, char **argv)$/;"	f	typeref:typename:int
libgit2	my_project/libgit2/CMakeLists.txt	/^project(libgit2 VERSION "1.8.2" LANGUAGES C)$/;"	p
libgit2	my_project/libgit2/src/libgit2/CMakeLists.txt	/^add_library(libgit2 OBJECT)$/;"	t
libgit2 - the Git linkable library	my_project/libgit2/README.md	/^libgit2 - the Git linkable library$/;"	c
libgit2 Coding Style	my_project/libgit2/docs/coding-style.md	/^# libgit2 Coding Style$/;"	c
libgit2 benchmarks	my_project/libgit2/tests/benchmarks/README.md	/^# libgit2 benchmarks$/;"	c
libgit2 examples	my_project/libgit2/examples/README.md	/^libgit2 examples$/;"	c
libgit2 sources	my_project/libgit2/src/README.md	/^# libgit2 sources$/;"	c
libgit2 tests	my_project/libgit2/tests/README.md	/^# libgit2 tests$/;"	c
libgit2_tests	my_project/libgit2/tests/libgit2/CMakeLists.txt	/^add_executable(libgit2_tests ${SRC_CLAR} ${SRC_TEST} ${LIBGIT2_OBJECTS})$/;"	t
libgit2package	my_project/libgit2/src/libgit2/CMakeLists.txt	/^add_library(libgit2package ${SRC_RC} ${LIBGIT2_OBJECTS})$/;"	t
limit	my_project/libgit2/examples/log.c	/^	int skip, limit;$/;"	m	struct:log_options	typeref:typename:int	file:
limit_list	my_project/libgit2/src/libgit2/revwalk.c	/^static int limit_list(git_commit_list **out, git_revwalk *walk, git_commit_list *commits)$/;"	f	typeref:typename:int	file:
limit_match	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 limit_match;        \/* Limit set from regex *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
limit_match	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 limit_match;        \/* Limit set from regex *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint32
limit_match	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u32 limit_match;$/;"	m	struct:executable_functions	typeref:typename:sljit_u32	file:
limit_match	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u32 limit_match;$/;"	m	struct:jit_arguments	typeref:typename:sljit_u32	file:
limit_recursion	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 limit_recursion;    \/* Limit set from regex *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
limit_recursion	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 limit_recursion;    \/* Limit set from regex *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint32
limited	my_project/libgit2/src/libgit2/revwalk.h	/^		limited: 1;$/;"	m	struct:git_revwalk	typeref:typename:unsigned:1
line	my_project/libgit2/deps/xdiff/xprepare.c	/^	char const *line;$/;"	m	struct:s_xdlclass	typeref:typename:char const *	file:
line	my_project/libgit2/src/libgit2/diff_driver.h	/^	git_str line;$/;"	m	struct:__anon9fad28f90108	typeref:typename:git_str
line	my_project/libgit2/src/libgit2/diff_print.c	/^	git_diff_line line;$/;"	m	struct:__anon0d2887b50108	typeref:typename:git_diff_line	file:
line	my_project/libgit2/src/libgit2/parse.h	/^	const char *line;$/;"	m	struct:__anon58da25b00108	typeref:typename:const char *
line	my_project/libgit2/tests/clar/clar_libgit2.h	/^	int line;$/;"	m	struct:__anonbd488f430108	typeref:typename:int
line	my_project/libgit2/tests/libgit2/commit/parse.c	/^	const char *line;$/;"	m	struct:__anon39d5c3ee0108	typeref:typename:const char *	file:
line	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^	int line;$/;"	m	struct:__anon6ff743e90108	typeref:typename:int
line1	my_project/libgit2/deps/xdiff/xpatience.c	/^		unsigned long line1, line2;$/;"	m	struct:hashmap::entry	typeref:typename:unsigned long	file:
line2	my_project/libgit2/deps/xdiff/xpatience.c	/^		unsigned long line1, line2;$/;"	m	struct:hashmap::entry	typeref:typename:unsigned long	file:
line_adds	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	int line_adds;$/;"	m	struct:__anone9d3a2f30108	typeref:typename:int
line_cb	my_project/libgit2/tests/libgit2/diff/binary.c	/^static int line_cb($/;"	f	typeref:typename:int	file:
line_contains_alnum	my_project/libgit2/deps/xdiff/xmerge.c	/^static int line_contains_alnum(const char *ptr, long size)$/;"	f	typeref:typename:int	file:
line_count	my_project/libgit2/src/libgit2/patch.h	/^	size_t line_count;$/;"	m	struct:git_patch_hunk	typeref:typename:size_t
line_ctxt	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	int line_ctxt;$/;"	m	struct:__anone9d3a2f30108	typeref:typename:int
line_dels	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	int line_dels;$/;"	m	struct:__anone9d3a2f30108	typeref:typename:int
line_len	my_project/libgit2/src/libgit2/parse.h	/^	size_t line_len;$/;"	m	struct:__anon58da25b00108	typeref:typename:size_t
line_length_without_trailing_spaces	my_project/libgit2/src/libgit2/message.c	/^static size_t line_length_without_trailing_spaces(const char *line, size_t len)$/;"	f	typeref:typename:size_t	file:
line_map	my_project/libgit2/deps/xdiff/xhistogram.c	/^	  **line_map; \/* map of line to record chain *\/$/;"	m	struct:histindex	typeref:struct:histindex::record **	file:
line_map_size	my_project/libgit2/deps/xdiff/xhistogram.c	/^		     line_map_size;$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
line_num	my_project/libgit2/src/libgit2/parse.h	/^	size_t line_num;$/;"	m	struct:__anon58da25b00108	typeref:typename:size_t
line_number	my_project/libgit2/tests/clar/clar.c	/^	size_t line_number;$/;"	m	struct:clar_error	typeref:typename:size_t	file:
line_start	my_project/libgit2/src/libgit2/patch.h	/^	size_t line_start;$/;"	m	struct:git_patch_hunk	typeref:typename:size_t
lines	my_project/libgit2/src/libgit2/apply.c	/^	git_vector lines;$/;"	m	struct:__anonf90645360108	typeref:typename:git_vector	file:
lines	my_project/libgit2/src/libgit2/hashsig.c	/^	size_t lines;$/;"	m	struct:git_hashsig	typeref:typename:size_t	file:
lines	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	int lines;$/;"	m	struct:__anone9d3a2f30108	typeref:typename:int
lines_contain_alnum	my_project/libgit2/deps/xdiff/xmerge.c	/^static int lines_contain_alnum(xdfenv_t *xe, int i, int chg)$/;"	f	typeref:typename:int	file:
lines_in_hunk	my_project/libgit2/include/git2/blame.h	/^	size_t lines_in_hunk;$/;"	m	struct:git_blame_hunk	typeref:typename:size_t
list	my_project/libgit2/src/libgit2/config_list.c	/^	git_config_list *list;$/;"	m	struct:config_list_iterator	typeref:typename:git_config_list *	file:
list	my_project/libgit2/src/libgit2/pack-objects.c	/^	git_pobject **list;$/;"	m	struct:thread_params	typeref:typename:git_pobject **	file:
list_auth_methods	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int list_auth_methods(int *out, LIBSSH2_SESSION *session, const char *username)$/;"	f	typeref:typename:int	file:
list_config	my_project/libgit2/src/cli/cmd_config.c	/^static int list_config(git_config *config)$/;"	f	typeref:typename:int	file:
list_expectations	my_project/libgit2/tests/libgit2/notes/notes.c	/^list_expectations[] = {$/;"	v	typeref:struct:__anon150e507c0108[]
list_size	my_project/libgit2/src/libgit2/pack-objects.c	/^	size_t list_size;$/;"	m	struct:thread_params	typeref:typename:size_t	file:
list_stash_cb	my_project/libgit2/examples/stash.c	/^static int list_stash_cb(size_t index, const char *message,$/;"	f	typeref:typename:int	file:
lit_bufsize	my_project/libgit2/deps/zlib/deflate.h	/^    uInt  lit_bufsize;$/;"	m	struct:internal_state	typeref:typename:uInt
literally	my_project/libgit2/src/cli/cmd_hash_object.c	/^static int write_object, read_stdin, literally;$/;"	v	typeref:typename:int	file:
ll_find_deltas	my_project/libgit2/src/libgit2/pack-objects.c	/^#define ll_find_deltas(/;"	d	file:
ll_find_deltas	my_project/libgit2/src/libgit2/pack-objects.c	/^static int ll_find_deltas(git_packbuilder *pb, git_pobject **list,$/;"	f	typeref:typename:int	file:
llhttp	my_project/libgit2/deps/llhttp/CMakeLists.txt	/^add_library(llhttp OBJECT ${SRC_LLHTTP})$/;"	t
llhttp__after_headers_complete	my_project/libgit2/deps/llhttp/http.c	/^int llhttp__after_headers_complete(llhttp_t* parser, const char* p,$/;"	f	typeref:typename:int
llhttp__after_message_complete	my_project/libgit2/deps/llhttp/http.c	/^int llhttp__after_message_complete(llhttp_t* parser, const char* p,$/;"	f	typeref:typename:int
llhttp__before_headers_complete	my_project/libgit2/deps/llhttp/http.c	/^int llhttp__before_headers_complete(llhttp_t* parser, const char* p,$/;"	f	typeref:typename:int
llhttp__debug	my_project/libgit2/deps/llhttp/api.c	/^void llhttp__debug(llhttp_t* s, const char* p, const char* endp,$/;"	f	typeref:typename:void
llhttp__internal__c_and_flags	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_and_flags($/;"	f	typeref:typename:int
llhttp__internal__c_is_equal_content_length	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_is_equal_content_length($/;"	f	typeref:typename:int
llhttp__internal__c_is_equal_method	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_is_equal_method($/;"	f	typeref:typename:int
llhttp__internal__c_is_equal_upgrade	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_is_equal_upgrade($/;"	f	typeref:typename:int
llhttp__internal__c_load_header_state	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_load_header_state($/;"	f	typeref:typename:int
llhttp__internal__c_load_http_major	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_load_http_major($/;"	f	typeref:typename:int
llhttp__internal__c_load_http_minor	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_load_http_minor($/;"	f	typeref:typename:int
llhttp__internal__c_load_initial_message_completed	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_load_initial_message_completed($/;"	f	typeref:typename:int
llhttp__internal__c_load_method	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_load_method($/;"	f	typeref:typename:int
llhttp__internal__c_load_type	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_load_type($/;"	f	typeref:typename:int
llhttp__internal__c_mul_add_content_length	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_mul_add_content_length($/;"	f	typeref:typename:int
llhttp__internal__c_mul_add_content_length_1	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_mul_add_content_length_1($/;"	f	typeref:typename:int
llhttp__internal__c_mul_add_status_code	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_mul_add_status_code($/;"	f	typeref:typename:int
llhttp__internal__c_or_flags	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_or_flags($/;"	f	typeref:typename:int
llhttp__internal__c_or_flags_1	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_or_flags_1($/;"	f	typeref:typename:int
llhttp__internal__c_or_flags_17	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_or_flags_17($/;"	f	typeref:typename:int
llhttp__internal__c_or_flags_18	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_or_flags_18($/;"	f	typeref:typename:int
llhttp__internal__c_or_flags_20	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_or_flags_20($/;"	f	typeref:typename:int
llhttp__internal__c_or_flags_5	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_or_flags_5($/;"	f	typeref:typename:int
llhttp__internal__c_or_flags_6	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_or_flags_6($/;"	f	typeref:typename:int
llhttp__internal__c_or_flags_7	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_or_flags_7($/;"	f	typeref:typename:int
llhttp__internal__c_or_flags_8	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_or_flags_8($/;"	f	typeref:typename:int
llhttp__internal__c_store_header_state	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_store_header_state($/;"	f	typeref:typename:int
llhttp__internal__c_store_http_major	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_store_http_major($/;"	f	typeref:typename:int
llhttp__internal__c_store_http_minor	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_store_http_minor($/;"	f	typeref:typename:int
llhttp__internal__c_store_method	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_store_method($/;"	f	typeref:typename:int
llhttp__internal__c_test_flags	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_test_flags($/;"	f	typeref:typename:int
llhttp__internal__c_test_flags_2	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_test_flags_2($/;"	f	typeref:typename:int
llhttp__internal__c_test_flags_3	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_test_flags_3($/;"	f	typeref:typename:int
llhttp__internal__c_test_flags_4	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_test_flags_4($/;"	f	typeref:typename:int
llhttp__internal__c_test_lenient_flags	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_test_lenient_flags($/;"	f	typeref:typename:int
llhttp__internal__c_test_lenient_flags_1	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_test_lenient_flags_1($/;"	f	typeref:typename:int
llhttp__internal__c_test_lenient_flags_2	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_test_lenient_flags_2($/;"	f	typeref:typename:int
llhttp__internal__c_test_lenient_flags_20	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_test_lenient_flags_20($/;"	f	typeref:typename:int
llhttp__internal__c_test_lenient_flags_22	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_test_lenient_flags_22($/;"	f	typeref:typename:int
llhttp__internal__c_test_lenient_flags_24	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_test_lenient_flags_24($/;"	f	typeref:typename:int
llhttp__internal__c_test_lenient_flags_3	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_test_lenient_flags_3($/;"	f	typeref:typename:int
llhttp__internal__c_test_lenient_flags_4	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_test_lenient_flags_4($/;"	f	typeref:typename:int
llhttp__internal__c_test_lenient_flags_7	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_test_lenient_flags_7($/;"	f	typeref:typename:int
llhttp__internal__c_test_lenient_flags_8	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_test_lenient_flags_8($/;"	f	typeref:typename:int
llhttp__internal__c_update_content_length	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_content_length($/;"	f	typeref:typename:int
llhttp__internal__c_update_finish	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_finish($/;"	f	typeref:typename:int
llhttp__internal__c_update_finish_1	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_finish_1($/;"	f	typeref:typename:int
llhttp__internal__c_update_finish_3	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_finish_3($/;"	f	typeref:typename:int
llhttp__internal__c_update_header_state	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_header_state($/;"	f	typeref:typename:int
llhttp__internal__c_update_header_state_1	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_header_state_1($/;"	f	typeref:typename:int
llhttp__internal__c_update_header_state_3	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_header_state_3($/;"	f	typeref:typename:int
llhttp__internal__c_update_header_state_6	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_header_state_6($/;"	f	typeref:typename:int
llhttp__internal__c_update_header_state_7	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_header_state_7($/;"	f	typeref:typename:int
llhttp__internal__c_update_header_state_8	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_header_state_8($/;"	f	typeref:typename:int
llhttp__internal__c_update_http_major	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_http_major($/;"	f	typeref:typename:int
llhttp__internal__c_update_http_minor	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_http_minor($/;"	f	typeref:typename:int
llhttp__internal__c_update_initial_message_completed	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_initial_message_completed($/;"	f	typeref:typename:int
llhttp__internal__c_update_status_code	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_status_code($/;"	f	typeref:typename:int
llhttp__internal__c_update_type	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_type($/;"	f	typeref:typename:int
llhttp__internal__c_update_type_1	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_type_1($/;"	f	typeref:typename:int
llhttp__internal__c_update_upgrade	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal__c_update_upgrade($/;"	f	typeref:typename:int
llhttp__internal__run	my_project/libgit2/deps/llhttp/llhttp.c	/^static llparse_state_t llhttp__internal__run($/;"	f	typeref:typename:llparse_state_t	file:
llhttp__internal__span_cb	my_project/libgit2/deps/llhttp/llhttp.c	/^typedef int (*llhttp__internal__span_cb)($/;"	t	typeref:typename:int (*)(llhttp__internal_t *,const char *,const char *)	file:
llhttp__internal_execute	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal_execute(llhttp__internal_t* state, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__internal_init	my_project/libgit2/deps/llhttp/llhttp.c	/^int llhttp__internal_init(llhttp__internal_t* state) {$/;"	f	typeref:typename:int
llhttp__internal_s	my_project/libgit2/deps/llhttp/llhttp.h	/^struct llhttp__internal_s {$/;"	s
llhttp__internal_t	my_project/libgit2/deps/llhttp/llhttp.h	/^typedef struct llhttp__internal_s llhttp__internal_t;$/;"	t	typeref:struct:llhttp__internal_s
llhttp__on_body	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_body(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_chunk_complete	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_chunk_complete(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_chunk_extension_name	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_chunk_extension_name(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_chunk_extension_name_complete	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_chunk_extension_name_complete(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_chunk_extension_value	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_chunk_extension_value(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_chunk_extension_value_complete	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_chunk_extension_value_complete(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_chunk_header	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_chunk_header(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_header_field	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_header_field(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_header_field_complete	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_header_field_complete(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_header_value	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_header_value(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_header_value_complete	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_header_value_complete(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_headers_complete	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_headers_complete(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_message_begin	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_message_begin(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_message_complete	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_message_complete(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_method	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_method(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_method_complete	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_method_complete(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_reset	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_reset(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_status	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_status(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_status_complete	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_status_complete(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_url	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_url(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_url_complete	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_url_complete(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_version	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_version(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp__on_version_complete	my_project/libgit2/deps/llhttp/api.c	/^int llhttp__on_version_complete(llhttp_t* s, const char* p, const char* endp) {$/;"	f	typeref:typename:int
llhttp_alloc	my_project/libgit2/deps/llhttp/api.c	/^llhttp_t* llhttp_alloc(llhttp_type_t type) {$/;"	f	typeref:typename:llhttp_t *
llhttp_cb	my_project/libgit2/deps/llhttp/llhttp.h	/^typedef int (*llhttp_cb)(llhttp_t*);$/;"	t	typeref:typename:int (*)(llhttp_t *)
llhttp_data_cb	my_project/libgit2/deps/llhttp/llhttp.h	/^typedef int (*llhttp_data_cb)(llhttp_t*, const char *at, size_t length);$/;"	t	typeref:typename:int (*)(llhttp_t *,const char * at,size_t length)
llhttp_errno	my_project/libgit2/deps/llhttp/llhttp.h	/^enum llhttp_errno {$/;"	g
llhttp_errno_name	my_project/libgit2/deps/llhttp/api.c	/^const char* llhttp_errno_name(llhttp_errno_t err) {$/;"	f	typeref:typename:const char *
llhttp_errno_t	my_project/libgit2/deps/llhttp/llhttp.h	/^typedef enum llhttp_errno llhttp_errno_t;$/;"	t	typeref:enum:llhttp_errno
llhttp_execute	my_project/libgit2/deps/llhttp/api.c	/^llhttp_errno_t llhttp_execute(llhttp_t* parser, const char* data, size_t len) {$/;"	f	typeref:typename:llhttp_errno_t
llhttp_finish	my_project/libgit2/deps/llhttp/api.c	/^llhttp_errno_t llhttp_finish(llhttp_t* parser) {$/;"	f	typeref:typename:llhttp_errno_t
llhttp_finish	my_project/libgit2/deps/llhttp/llhttp.h	/^enum llhttp_finish {$/;"	g
llhttp_finish_t	my_project/libgit2/deps/llhttp/llhttp.h	/^typedef enum llhttp_finish llhttp_finish_t;$/;"	t	typeref:enum:llhttp_finish
llhttp_flags	my_project/libgit2/deps/llhttp/llhttp.h	/^enum llhttp_flags {$/;"	g
llhttp_flags_t	my_project/libgit2/deps/llhttp/llhttp.h	/^typedef enum llhttp_flags llhttp_flags_t;$/;"	t	typeref:enum:llhttp_flags
llhttp_free	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_free(llhttp_t* parser) {$/;"	f	typeref:typename:void
llhttp_get_errno	my_project/libgit2/deps/llhttp/api.c	/^llhttp_errno_t llhttp_get_errno(const llhttp_t* parser) {$/;"	f	typeref:typename:llhttp_errno_t
llhttp_get_error_pos	my_project/libgit2/deps/llhttp/api.c	/^const char* llhttp_get_error_pos(const llhttp_t* parser) {$/;"	f	typeref:typename:const char *
llhttp_get_error_reason	my_project/libgit2/deps/llhttp/api.c	/^const char* llhttp_get_error_reason(const llhttp_t* parser) {$/;"	f	typeref:typename:const char *
llhttp_get_http_major	my_project/libgit2/deps/llhttp/api.c	/^uint8_t llhttp_get_http_major(llhttp_t* parser) {$/;"	f	typeref:typename:uint8_t
llhttp_get_http_minor	my_project/libgit2/deps/llhttp/api.c	/^uint8_t llhttp_get_http_minor(llhttp_t* parser) {$/;"	f	typeref:typename:uint8_t
llhttp_get_method	my_project/libgit2/deps/llhttp/api.c	/^uint8_t llhttp_get_method(llhttp_t* parser) {$/;"	f	typeref:typename:uint8_t
llhttp_get_status_code	my_project/libgit2/deps/llhttp/api.c	/^int llhttp_get_status_code(llhttp_t* parser) {$/;"	f	typeref:typename:int
llhttp_get_type	my_project/libgit2/deps/llhttp/api.c	/^uint8_t llhttp_get_type(llhttp_t* parser) {$/;"	f	typeref:typename:uint8_t
llhttp_get_upgrade	my_project/libgit2/deps/llhttp/api.c	/^uint8_t llhttp_get_upgrade(llhttp_t* parser) {$/;"	f	typeref:typename:uint8_t
llhttp_init	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_init(llhttp_t* parser, llhttp_type_t type,$/;"	f	typeref:typename:void
llhttp_lenient_flags	my_project/libgit2/deps/llhttp/llhttp.h	/^enum llhttp_lenient_flags {$/;"	g
llhttp_lenient_flags_t	my_project/libgit2/deps/llhttp/llhttp.h	/^typedef enum llhttp_lenient_flags llhttp_lenient_flags_t;$/;"	t	typeref:enum:llhttp_lenient_flags
llhttp_message_needs_eof	my_project/libgit2/deps/llhttp/http.c	/^int llhttp_message_needs_eof(const llhttp_t* parser) {$/;"	f	typeref:typename:int
llhttp_method	my_project/libgit2/deps/llhttp/llhttp.h	/^enum llhttp_method {$/;"	g
llhttp_method_name	my_project/libgit2/deps/llhttp/api.c	/^const char* llhttp_method_name(llhttp_method_t method) {$/;"	f	typeref:typename:const char *
llhttp_method_t	my_project/libgit2/deps/llhttp/llhttp.h	/^typedef enum llhttp_method llhttp_method_t;$/;"	t	typeref:enum:llhttp_method
llhttp_pause	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_pause(llhttp_t* parser) {$/;"	f	typeref:typename:void
llhttp_reset	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_reset(llhttp_t* parser) {$/;"	f	typeref:typename:void
llhttp_resume	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_resume(llhttp_t* parser) {$/;"	f	typeref:typename:void
llhttp_resume_after_upgrade	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_resume_after_upgrade(llhttp_t* parser) {$/;"	f	typeref:typename:void
llhttp_set_error_reason	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_set_error_reason(llhttp_t* parser, const char* reason) {$/;"	f	typeref:typename:void
llhttp_set_lenient_chunked_length	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_set_lenient_chunked_length(llhttp_t* parser, int enabled) {$/;"	f	typeref:typename:void
llhttp_set_lenient_data_after_close	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_set_lenient_data_after_close(llhttp_t* parser, int enabled) {$/;"	f	typeref:typename:void
llhttp_set_lenient_headers	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_set_lenient_headers(llhttp_t* parser, int enabled) {$/;"	f	typeref:typename:void
llhttp_set_lenient_keep_alive	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_set_lenient_keep_alive(llhttp_t* parser, int enabled) {$/;"	f	typeref:typename:void
llhttp_set_lenient_optional_cr_before_lf	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_set_lenient_optional_cr_before_lf(llhttp_t* parser, int enabled) {$/;"	f	typeref:typename:void
llhttp_set_lenient_optional_crlf_after_chunk	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_set_lenient_optional_crlf_after_chunk(llhttp_t* parser, int enabled) {$/;"	f	typeref:typename:void
llhttp_set_lenient_optional_lf_after_cr	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_set_lenient_optional_lf_after_cr(llhttp_t* parser, int enabled) {$/;"	f	typeref:typename:void
llhttp_set_lenient_spaces_after_chunk_size	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_set_lenient_spaces_after_chunk_size(llhttp_t* parser, int enabled) {$/;"	f	typeref:typename:void
llhttp_set_lenient_transfer_encoding	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_set_lenient_transfer_encoding(llhttp_t* parser, int enabled) {$/;"	f	typeref:typename:void
llhttp_set_lenient_version	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_set_lenient_version(llhttp_t* parser, int enabled) {$/;"	f	typeref:typename:void
llhttp_settings_init	my_project/libgit2/deps/llhttp/api.c	/^void llhttp_settings_init(llhttp_settings_t* settings) {$/;"	f	typeref:typename:void
llhttp_settings_s	my_project/libgit2/deps/llhttp/llhttp.h	/^struct llhttp_settings_s {$/;"	s
llhttp_settings_t	my_project/libgit2/deps/llhttp/llhttp.h	/^typedef struct llhttp_settings_s llhttp_settings_t;$/;"	t	typeref:struct:llhttp_settings_s
llhttp_should_keep_alive	my_project/libgit2/deps/llhttp/http.c	/^int llhttp_should_keep_alive(const llhttp_t* parser) {$/;"	f	typeref:typename:int
llhttp_status	my_project/libgit2/deps/llhttp/llhttp.h	/^enum llhttp_status {$/;"	g
llhttp_status_name	my_project/libgit2/deps/llhttp/api.c	/^const char* llhttp_status_name(llhttp_status_t status) {$/;"	f	typeref:typename:const char *
llhttp_status_t	my_project/libgit2/deps/llhttp/llhttp.h	/^typedef enum llhttp_status llhttp_status_t;$/;"	t	typeref:enum:llhttp_status
llhttp_t	my_project/libgit2/deps/llhttp/http.c	/^# define llhttp_t /;"	d	file:
llhttp_t	my_project/libgit2/deps/llhttp/llhttp.h	/^typedef llhttp__internal_t llhttp_t;$/;"	t	typeref:typename:llhttp__internal_t
llhttp_type	my_project/libgit2/deps/llhttp/llhttp.h	/^enum llhttp_type {$/;"	g
llhttp_type_t	my_project/libgit2/deps/llhttp/llhttp.h	/^typedef enum llhttp_type llhttp_type_t;$/;"	t	typeref:enum:llhttp_type
llparse__match_sequence_id	my_project/libgit2/deps/llhttp/llhttp.c	/^static llparse_match_t llparse__match_sequence_id($/;"	f	typeref:typename:llparse_match_t	file:
llparse__match_sequence_to_lower	my_project/libgit2/deps/llhttp/llhttp.c	/^static llparse_match_t llparse__match_sequence_to_lower($/;"	f	typeref:typename:llparse_match_t	file:
llparse__match_sequence_to_lower_unsafe	my_project/libgit2/deps/llhttp/llhttp.c	/^static llparse_match_t llparse__match_sequence_to_lower_unsafe($/;"	f	typeref:typename:llparse_match_t	file:
llparse_blob0	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob0[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob1	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob1[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob10	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob10[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob11	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob11[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob12	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob12[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob13	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob13[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob14	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob14[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob15	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob15[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob16	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob16[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob17	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob17[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob18	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob18[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob19	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob19[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob2	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob2[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob20	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob20[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob21	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob21[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob22	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob22[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob23	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob23[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob24	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob24[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob25	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob25[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob26	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob26[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob27	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob27[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob28	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob28[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob29	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob29[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob3	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob3[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob30	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob30[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob31	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob31[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob32	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob32[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob33	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob33[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob34	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob34[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob35	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob35[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob36	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob36[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob37	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob37[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob38	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob38[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob39	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob39[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob4	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob4[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob40	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob40[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob41	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob41[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob42	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob42[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob43	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob43[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob44	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob44[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob45	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob45[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob46	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob46[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob47	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob47[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob48	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob48[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob49	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob49[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob5	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob5[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob50	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob50[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob51	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob51[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob52	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob52[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob53	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob53[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob54	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob54[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob55	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob55[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob56	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob56[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob57	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob57[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob58	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob58[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob59	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob59[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob60	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob60[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_blob9	my_project/libgit2/deps/llhttp/llhttp.c	/^static const unsigned char llparse_blob9[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
llparse_match_s	my_project/libgit2/deps/llhttp/llhttp.c	/^struct llparse_match_s {$/;"	s	file:
llparse_match_status_e	my_project/libgit2/deps/llhttp/llhttp.c	/^enum llparse_match_status_e {$/;"	g	file:
llparse_match_status_t	my_project/libgit2/deps/llhttp/llhttp.c	/^typedef enum llparse_match_status_e llparse_match_status_t;$/;"	t	typeref:enum:llparse_match_status_e	file:
llparse_match_t	my_project/libgit2/deps/llhttp/llhttp.c	/^typedef struct llparse_match_s llparse_match_t;$/;"	t	typeref:struct:llparse_match_s	file:
llparse_state_e	my_project/libgit2/deps/llhttp/llhttp.c	/^enum llparse_state_e {$/;"	g	file:
llparse_state_t	my_project/libgit2/deps/llhttp/llhttp.c	/^typedef enum llparse_state_e llparse_state_t;$/;"	t	typeref:enum:llparse_state_e	file:
lm_init	my_project/libgit2/deps/zlib/deflate.c	/^local void lm_init(deflate_state *s) {$/;"	f	typeref:typename:local void
lm_response	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	unsigned char lm_response[NTLM_LM_RESPONSE_LEN];$/;"	m	struct:ntlm_client	typeref:typename:unsigned char[]
lm_response_len	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	size_t lm_response_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
lno	my_project/libgit2/src/libgit2/blame.h	/^	size_t lno;$/;"	m	struct:git_blame__entry	typeref:typename:size_t
load	my_project/libgit2/tests/clar/generate.py	/^    def load(self, force = False):$/;"	m	class:TestSuite
load_alternates	my_project/libgit2/src/libgit2/odb.c	/^static int load_alternates(git_odb *odb, const char *objects_dir, int alternate_depth)$/;"	f	typeref:typename:int	file:
load_blob	my_project/libgit2/src/libgit2/blame.c	/^static int load_blob(git_blame *blame)$/;"	f	typeref:typename:int	file:
load_cache	my_project/libgit2/tests/clar/generate.py	/^    def load_cache(self):$/;"	m	class:TestSuite
load_config	my_project/libgit2/src/libgit2/repository.c	/^static int load_config($/;"	f	typeref:typename:int	file:
load_config_data	my_project/libgit2/src/libgit2/repository.c	/^static int load_config_data(git_repository *repo, const git_config *config)$/;"	f	typeref:typename:int	file:
load_global_config	my_project/libgit2/src/libgit2/repository.c	/^static int load_global_config(git_config **config, bool use_env)$/;"	f	typeref:typename:int	file:
load_grafts	my_project/libgit2/src/libgit2/repository.c	/^static int load_grafts(git_repository *repo)$/;"	f	typeref:typename:int	file:
load_known_hosts	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int load_known_hosts(LIBSSH2_KNOWNHOSTS **hosts, LIBSSH2_SESSION *session)$/;"	f	typeref:typename:int	file:
load_objectformat	my_project/libgit2/src/libgit2/repository.c	/^static int load_objectformat(git_repository *repo, git_config *config)$/;"	f	typeref:typename:int	file:
load_submodule_names	my_project/libgit2/src/libgit2/submodule.c	/^static int load_submodule_names(git_strmap **out, git_repository *repo, git_config *cfg)$/;"	f	typeref:typename:int	file:
load_workdir	my_project/libgit2/src/libgit2/repository.c	/^static int load_workdir($/;"	f	typeref:typename:int	file:
local	my_project/libgit2/deps/zlib/gzguts.h	/^#  define local /;"	d
local	my_project/libgit2/deps/zlib/zutil.h	/^#  define local /;"	d
local	my_project/libgit2/include/git2/clone.h	/^	git_clone_local_t local;$/;"	m	struct:git_clone_options	typeref:typename:git_clone_local_t
local	my_project/libgit2/include/git2/net.h	/^	int local; \/* available locally *\/$/;"	m	struct:git_remote_head	typeref:typename:int
local_cancel	my_project/libgit2/src/libgit2/transports/local.c	/^static void local_cancel(git_transport *transport)$/;"	f	typeref:typename:void	file:
local_capabilities	my_project/libgit2/src/libgit2/transports/local.c	/^static int local_capabilities(unsigned int *capabilities, git_transport *transport)$/;"	f	typeref:typename:int	file:
local_cleanup	my_project/libgit2/tests/clar/clar.c	/^	void (*local_cleanup)(void *);$/;"	m	struct:__anon15d96e120108	typeref:typename:void (*)(void *)	file:
local_cleanup_payload	my_project/libgit2/tests/clar/clar.c	/^	void *local_cleanup_payload;$/;"	m	struct:__anon15d96e120108	typeref:typename:void *	file:
local_close	my_project/libgit2/src/libgit2/transports/local.c	/^static int local_close(git_transport *transport)$/;"	f	typeref:typename:int	file:
local_connect	my_project/libgit2/src/libgit2/transports/local.c	/^static int local_connect($/;"	f	typeref:typename:int	file:
local_counting	my_project/libgit2/src/libgit2/transports/local.c	/^static int local_counting(int stage, unsigned int current, unsigned int total, void *payload)$/;"	f	typeref:typename:int	file:
local_download_pack	my_project/libgit2/src/libgit2/transports/local.c	/^static int local_download_pack($/;"	f	typeref:typename:int	file:
local_exit	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL local_exit;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
local_file_url_prefixlen	my_project/libgit2/src/util/fs_path.c	/^static int local_file_url_prefixlen(const char *file_url)$/;"	f	typeref:typename:int	file:
local_free	my_project/libgit2/src/libgit2/transports/local.c	/^static void local_free(git_transport *transport)$/;"	f	typeref:typename:void	file:
local_heads	my_project/libgit2/src/libgit2/remote.h	/^	git_vector local_heads;$/;"	m	struct:git_remote	typeref:typename:git_vector
local_is_connected	my_project/libgit2/src/libgit2/transports/local.c	/^static int local_is_connected(git_transport *transport)$/;"	f	typeref:typename:int	file:
local_ls	my_project/libgit2/src/libgit2/transports/local.c	/^static int local_ls(const git_remote_head ***out, size_t *size, git_transport *transport)$/;"	f	typeref:typename:int	file:
local_negotiate_fetch	my_project/libgit2/src/libgit2/transports/local.c	/^static int local_negotiate_fetch($/;"	f	typeref:typename:int	file:
local_objects	my_project/libgit2/include/git2/indexer.h	/^	unsigned int local_objects;$/;"	m	struct:git_indexer_progress	typeref:typename:unsigned int
local_oid_type	my_project/libgit2/src/libgit2/transports/local.c	/^static int local_oid_type(git_oid_t *out, git_transport *transport)$/;"	f	typeref:typename:int	file:
local_path	my_project/libgit2/src/cli/cmd_clone.c	/^static char *branch, *remote_path, *local_path, *depth;$/;"	v	typeref:typename:char *	file:
local_path_exists	my_project/libgit2/src/cli/cmd_clone.c	/^static bool local_path_exists;$/;"	v	typeref:typename:bool	file:
local_push	my_project/libgit2/src/libgit2/transports/local.c	/^static int local_push($/;"	f	typeref:typename:int	file:
local_push_update_remote_ref	my_project/libgit2/src/libgit2/transports/local.c	/^static int local_push_update_remote_ref($/;"	f	typeref:typename:int	file:
local_set_connect_opts	my_project/libgit2/src/libgit2/transports/local.c	/^static int local_set_connect_opts($/;"	f	typeref:typename:int	file:
local_shallow_roots	my_project/libgit2/src/libgit2/transports/local.c	/^static int local_shallow_roots($/;"	f	typeref:typename:int	file:
local_transport_definition	my_project/libgit2/src/libgit2/transport.c	/^static transport_definition local_transport_definition = { "file:\/\/", git_transport_local, NUL/;"	v	typeref:typename:transport_definition	file:
locate_object	my_project/libgit2/src/libgit2/odb_loose.c	/^static int locate_object($/;"	f	typeref:typename:int	file:
locate_object_short_oid	my_project/libgit2/src/libgit2/odb_loose.c	/^static int locate_object_short_oid($/;"	f	typeref:typename:int	file:
location	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	char *location;$/;"	m	struct:__anon3d590bc30308	typeref:typename:char *
lock	my_project/libgit2/include/git2/worktree.h	/^	int lock;		\/**< lock newly created worktree *\/$/;"	m	struct:git_worktree_add_options	typeref:typename:int
lock	my_project/libgit2/src/libgit2/attr_file.h	/^	git_mutex lock;$/;"	m	struct:__anon0df92d8f0708	typeref:typename:git_mutex
lock	my_project/libgit2/src/libgit2/attrcache.h	/^	git_mutex lock;$/;"	m	struct:__anon35c990e40108	typeref:typename:git_mutex
lock	my_project/libgit2/src/libgit2/cache.h	/^	git_rwlock  lock;$/;"	m	struct:__anon6f0f98290308	typeref:typename:git_rwlock
lock	my_project/libgit2/src/libgit2/filter.c	/^	git_rwlock lock;$/;"	m	struct:git_filter_registry	typeref:typename:git_rwlock	file:
lock	my_project/libgit2/src/libgit2/merge_driver.c	/^	git_rwlock lock;$/;"	m	struct:merge_driver_registry	typeref:typename:git_rwlock	file:
lock	my_project/libgit2/src/libgit2/mwindow.h	/^	git_mutex lock; \/* protects updates to fd *\/$/;"	m	struct:git_mwindow_file	typeref:typename:git_mutex
lock	my_project/libgit2/src/libgit2/odb.h	/^	git_mutex lock;  \/* protects backends *\/$/;"	m	struct:git_odb	typeref:typename:git_mutex
lock	my_project/libgit2/src/libgit2/pack.h	/^	git_mutex lock; \/* protect updates to index_map *\/$/;"	m	struct:git_pack_file	typeref:typename:git_mutex
lock	my_project/libgit2/src/libgit2/pack.h	/^	git_mutex lock;$/;"	m	struct:__anon57fe39b40108	typeref:typename:git_mutex
lock	my_project/libgit2/src/libgit2/streams/registry.c	/^	git_rwlock lock;$/;"	m	struct:stream_registry	typeref:typename:git_rwlock	file:
lock	my_project/libgit2/src/util/sortedcache.h	/^	git_rwlock   lock;$/;"	m	struct:__anon21e0f34b0108	typeref:typename:git_rwlock
lock_file	my_project/libgit2/src/util/filebuf.c	/^static int lock_file(git_filebuf *file, int flags, mode_t mode)$/;"	f	typeref:typename:int	file:
lock_reflog	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int lock_reflog(git_filebuf *file, refdb_fs_backend *backend, const char *refname)$/;"	f	typeref:typename:int	file:
locked	my_project/libgit2/src/libgit2/config_file.c	/^	bool locked;$/;"	m	struct:__anon341047050108	typeref:typename:bool	file:
locked	my_project/libgit2/src/libgit2/worktree.h	/^	unsigned int locked:1;$/;"	m	struct:git_worktree	typeref:typename:unsigned int:1
locked_buf	my_project/libgit2/src/libgit2/config_file.c	/^	git_filebuf locked_buf;$/;"	m	struct:__anon341047050108	typeref:typename:git_filebuf	file:
locked_content	my_project/libgit2/src/libgit2/config_file.c	/^	git_str locked_content;$/;"	m	struct:__anon341047050108	typeref:typename:git_str	file:
locks	my_project/libgit2/src/libgit2/transaction.c	/^	git_strmap *locks;$/;"	m	struct:git_transaction	typeref:typename:git_strmap *	file:
log_message_matches	my_project/libgit2/examples/log.c	/^static int log_message_matches(const git_commit *commit, const char *filter) {$/;"	f	typeref:typename:int	file:
log_options	my_project/libgit2/examples/log.c	/^struct log_options {$/;"	s	file:
log_state	my_project/libgit2/examples/log.c	/^struct log_state {$/;"	s	file:
loid	my_project/libgit2/include/git2/net.h	/^	git_oid loid;$/;"	m	struct:git_remote_head	typeref:typename:git_oid
loid	my_project/libgit2/src/libgit2/push.h	/^	git_oid loid;$/;"	m	struct:push_spec	typeref:typename:git_oid
longest_match	my_project/libgit2/deps/zlib/deflate.c	/^local uInt longest_match(deflate_state *s, IPos cur_match) {$/;"	f	typeref:typename:local uInt
longname	my_project/libgit2/tests/libgit2/status/status_data.h	/^static const char *longname = "\\xe5\\x8f\\x97\\xe5\\x8f\\x97\\xe5\\x8f\\x97\\xe5\\x8f\\x97\\xe5/;"	v	typeref:typename:const char *
lookahead	my_project/libgit2/deps/zlib/deflate.h	/^    uInt lookahead;              \/* number of valid bytes ahead in window *\/$/;"	m	struct:internal_state	typeref:typename:uInt
looks_like_command_line_option	my_project/libgit2/src/libgit2/submodule.c	/^static bool looks_like_command_line_option(const char *s)$/;"	f	typeref:typename:bool	file:
looks_like_network_computer_name	my_project/libgit2/src/util/fs_path.c	/^static bool looks_like_network_computer_name(const char *path, int pos)$/;"	f	typeref:typename:bool	file:
lookup_commondir	my_project/libgit2/src/libgit2/repository.c	/^static int lookup_commondir($/;"	f	typeref:typename:int	file:
lookup_config	my_project/libgit2/src/libgit2/remote.c	/^static int lookup_config(char **out, git_config *cfg, const char *name)$/;"	f	typeref:typename:int	file:
lookup_default_remote	my_project/libgit2/src/libgit2/submodule.c	/^static int lookup_default_remote(git_remote **remote, git_repository *repo)$/;"	f	typeref:typename:int	file:
lookup_head_remote	my_project/libgit2/src/libgit2/submodule.c	/^static int lookup_head_remote(git_remote **remote, git_repository *repo)$/;"	f	typeref:typename:int	file:
lookup_head_remote_key	my_project/libgit2/src/libgit2/submodule.c	/^static int lookup_head_remote_key(git_str *remote_name, git_repository *repo)$/;"	f	typeref:typename:int	file:
lookup_id	my_project/libgit2/tests/libgit2/odb/mixed.c	/^	char *lookup_id;$/;"	m	struct:expand_id_test_data	typeref:typename:char *	file:
lookup_index_alloc	my_project/libgit2/src/libgit2/delta.c	/^static int lookup_index_alloc($/;"	f	typeref:typename:int	file:
lookup_proxy	my_project/libgit2/src/libgit2/transports/http.c	/^static int lookup_proxy($/;"	f	typeref:typename:int	file:
lookup_redirect_config	my_project/libgit2/src/libgit2/remote.c	/^static int lookup_redirect_config($/;"	f	typeref:typename:int	file:
lookup_registry_key	my_project/libgit2/src/libgit2/sysdir.c	/^static int lookup_registry_key($/;"	f	typeref:typename:int	file:
lookup_remote_prune_config	my_project/libgit2/src/libgit2/remote.c	/^static int lookup_remote_prune_config(git_remote *remote, git_config *config, const char *name)$/;"	f	typeref:typename:int	file:
lookup_walk_object	my_project/libgit2/src/libgit2/pack-objects.c	/^static int lookup_walk_object(struct walk_object **out, git_packbuilder *pb, const git_oid *id)$/;"	f	typeref:typename:int	file:
loop	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  loop,$/;"	e	enum:copy_private_data::__anon4bd171690603	file:
loose	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_vector loose;$/;"	m	struct:__anon3803f1ab0308	typeref:typename:git_vector	file:
loose_backend	my_project/libgit2/src/libgit2/odb_loose.c	/^typedef struct loose_backend {$/;"	s	file:
loose_backend	my_project/libgit2/src/libgit2/odb_loose.c	/^} loose_backend;$/;"	t	typeref:struct:loose_backend	file:
loose_backend__exists	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__exists(git_odb_backend *backend, const git_oid *oid)$/;"	f	typeref:typename:int	file:
loose_backend__exists_prefix	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__exists_prefix($/;"	f	typeref:typename:int	file:
loose_backend__foreach	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__foreach(git_odb_backend *_backend, git_odb_foreach_cb cb, void *data)$/;"	f	typeref:typename:int	file:
loose_backend__free	my_project/libgit2/src/libgit2/odb_loose.c	/^static void loose_backend__free(git_odb_backend *_backend)$/;"	f	typeref:typename:void	file:
loose_backend__freshen	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__freshen($/;"	f	typeref:typename:int	file:
loose_backend__read	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__read(void **buffer_p, size_t *len_p, git_object_t *type_p, git_odb_bac/;"	f	typeref:typename:int	file:
loose_backend__read_header	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__read_header(size_t *len_p, git_object_t *type_p, git_odb_backend *back/;"	f	typeref:typename:int	file:
loose_backend__read_prefix	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__read_prefix($/;"	f	typeref:typename:int	file:
loose_backend__readstream	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__readstream($/;"	f	typeref:typename:int	file:
loose_backend__readstream_free	my_project/libgit2/src/libgit2/odb_loose.c	/^static void loose_backend__readstream_free(git_odb_stream *_stream)$/;"	f	typeref:typename:void	file:
loose_backend__readstream_packlike	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__readstream_packlike($/;"	f	typeref:typename:int	file:
loose_backend__readstream_read	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__readstream_read($/;"	f	typeref:typename:int	file:
loose_backend__readstream_standard	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__readstream_standard($/;"	f	typeref:typename:int	file:
loose_backend__write	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__write(git_odb_backend *_backend, const git_oid *oid, const void *data,/;"	f	typeref:typename:int	file:
loose_backend__writestream	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__writestream(git_odb_stream **stream_out, git_odb_backend *_backend, gi/;"	f	typeref:typename:int	file:
loose_backend__writestream_finalize	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__writestream_finalize(git_odb_stream *_stream, const git_oid *oid)$/;"	f	typeref:typename:int	file:
loose_backend__writestream_free	my_project/libgit2/src/libgit2/odb_loose.c	/^static void loose_backend__writestream_free(git_odb_stream *_stream)$/;"	f	typeref:typename:void	file:
loose_backend__writestream_write	my_project/libgit2/src/libgit2/odb_loose.c	/^static int loose_backend__writestream_write(git_odb_stream *_stream, const char *data, size_t le/;"	f	typeref:typename:int	file:
loose_commit	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int loose_commit(git_filebuf *file, const git_reference *ref)$/;"	f	typeref:typename:int	file:
loose_delete	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int loose_delete(refdb_fs_backend *backend, const char *ref_name)$/;"	f	typeref:typename:int	file:
loose_locate_object_state	my_project/libgit2/src/libgit2/odb_loose.c	/^} loose_locate_object_state;$/;"	t	typeref:struct:__anon5ce333660408	file:
loose_lock	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int loose_lock(git_filebuf *file, refdb_fs_backend *backend, const char *name)$/;"	f	typeref:typename:int	file:
loose_lookup	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int loose_lookup($/;"	f	typeref:typename:int	file:
loose_lookup_to_packfile	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int loose_lookup_to_packfile(refdb_fs_backend *backend, const char *name)$/;"	f	typeref:typename:int	file:
loose_objects	my_project/libgit2/tests/libgit2/odb/pack_data.h	/^static const char *loose_objects[] = {$/;"	v	typeref:typename:const char * []
loose_objects_256	my_project/libgit2/tests/libgit2/odb/pack_data_256.h	/^static const char *loose_objects_256[] = {$/;"	v	typeref:typename:const char * []
loose_parse_oid	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int loose_parse_oid($/;"	f	typeref:typename:int	file:
loose_parse_symbolic	my_project/libgit2/src/libgit2/refdb_fs.c	/^static const char *loose_parse_symbolic(git_str *file_content)$/;"	f	typeref:typename:const char *	file:
loose_path	my_project/libgit2/src/libgit2/refdb_fs.c	/^GIT_INLINE(int) loose_path($/;"	f	typeref:typename:int
loose_pos	my_project/libgit2/src/libgit2/refdb_fs.c	/^	size_t loose_pos;$/;"	m	struct:__anon3803f1ab0308	typeref:typename:size_t	file:
loose_readbuffer	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int loose_readbuffer(git_str *buf, const char *base, const char *path)$/;"	f	typeref:typename:int	file:
loose_readstream	my_project/libgit2/src/libgit2/odb_loose.c	/^} loose_readstream;$/;"	t	typeref:struct:__anon5ce333660308	file:
loose_tag_ref_name	my_project/libgit2/tests/libgit2/refs/basic.c	/^static const char *loose_tag_ref_name = "refs\/tags\/e90810b";$/;"	v	typeref:typename:const char *	file:
loose_tag_ref_name	my_project/libgit2/tests/libgit2/refs/pack.c	/^static const char *loose_tag_ref_name = "refs\/tags\/e90810b";$/;"	v	typeref:typename:const char *	file:
loose_tag_ref_name	my_project/libgit2/tests/libgit2/refs/read.c	/^static const char *loose_tag_ref_name = "refs\/tags\/e90810b";$/;"	v	typeref:typename:const char *	file:
loose_tag_ref_name	my_project/libgit2/tests/libgit2/refs/rename.c	/^static const char *loose_tag_ref_name = "refs\/tags\/e90810b";$/;"	v	typeref:typename:const char *	file:
loose_writestream	my_project/libgit2/src/libgit2/odb_loose.c	/^} loose_writestream;$/;"	t	typeref:struct:__anon5ce333660208	file:
lpVtbl	my_project/libgit2/deps/winhttp/urlmon.h	/^	CONST_VTBL struct IInternetSecurityManagerVtbl *lpVtbl;$/;"	m	struct:IInternetSecurityManager	typeref:struct:IInternetSecurityManagerVtbl *
lpszAutoConfigUrl	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPCWSTR lpszAutoConfigUrl;$/;"	m	struct:__anon0b61ebe80608	typeref:typename:LPCWSTR
lpszAutoConfigUrl	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszAutoConfigUrl;$/;"	m	struct:__anon0b61ebe80508	typeref:typename:LPWSTR
lpszEncryptionAlgName	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszEncryptionAlgName;$/;"	m	struct:__anon0b61ebe80308	typeref:typename:LPWSTR
lpszExtraInfo	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR  lpszExtraInfo;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:LPWSTR
lpszHostName	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR  lpszHostName;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:LPWSTR
lpszIssuerInfo	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszIssuerInfo;$/;"	m	struct:__anon0b61ebe80308	typeref:typename:LPWSTR
lpszPassword	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR  lpszPassword;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:LPWSTR
lpszProtocolName	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszProtocolName;$/;"	m	struct:__anon0b61ebe80308	typeref:typename:LPWSTR
lpszProxy	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszProxy;$/;"	m	struct:__anon0b61ebe80408	typeref:typename:LPWSTR
lpszProxy	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszProxy;$/;"	m	struct:__anon0b61ebe80508	typeref:typename:LPWSTR
lpszProxyBypass	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszProxyBypass;$/;"	m	struct:__anon0b61ebe80408	typeref:typename:LPWSTR
lpszProxyBypass	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszProxyBypass;$/;"	m	struct:__anon0b61ebe80508	typeref:typename:LPWSTR
lpszScheme	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR  lpszScheme;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:LPWSTR
lpszSignatureAlgName	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszSignatureAlgName;$/;"	m	struct:__anon0b61ebe80308	typeref:typename:LPWSTR
lpszSubjectInfo	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR lpszSubjectInfo;$/;"	m	struct:__anon0b61ebe80308	typeref:typename:LPWSTR
lpszUrlPath	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR  lpszUrlPath;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:LPWSTR
lpszUserName	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPWSTR  lpszUserName;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:LPWSTR
lpvReserved	my_project/libgit2/deps/winhttp/winhttp.h	/^    LPVOID lpvReserved;$/;"	m	struct:__anon0b61ebe80608	typeref:typename:LPVOID
lru_counter	my_project/libgit2/src/libgit2/repository.h	/^	unsigned int lru_counter;$/;"	m	struct:git_repository	typeref:typename:unsigned int
ls_options	my_project/libgit2/examples/ls-files.c	/^struct ls_options {$/;"	s	file:
ls_to_vector	my_project/libgit2/src/libgit2/remote.c	/^static int ls_to_vector(git_vector *out, git_remote *remote)$/;"	f	typeref:typename:int	file:
lstat_w	my_project/libgit2/src/util/win32/posix_w32.c	/^static int lstat_w($/;"	f	typeref:typename:int	file:
m1	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^	uint32_t m1[80];$/;"	m	struct:__anon09d552690108	typeref:typename:uint32_t[80]
m2	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^	uint32_t m2[80];$/;"	m	struct:__anon09d552690108	typeref:typename:uint32_t[80]
macOS	my_project/libgit2/tests/README.md	/^### macOS$/;"	S	section:libgit2 tests""Memory leak checking
macros	my_project/libgit2/src/libgit2/attrcache.h	/^	git_strmap *macros;	 \/* hash name to vector<git_attr_assignment> *\/$/;"	m	struct:__anon35c990e40108	typeref:typename:git_strmap *
made	my_project/libgit2/deps/zlib/crc32.c	/^local once_t made = ONCE_INIT;$/;"	v	typeref:typename:local once_t
magic_number	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 magic_number;$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
magic_number	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 magic_number;$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint32
mailmap	my_project/libgit2/src/libgit2/blame.h	/^	git_mailmap *mailmap;$/;"	m	struct:git_blame	typeref:typename:git_mailmap *
mailmap	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^static git_mailmap *mailmap = NULL;$/;"	v	typeref:typename:git_mailmap *	file:
mailmap_add_blob	my_project/libgit2/src/libgit2/mailmap.c	/^static int mailmap_add_blob($/;"	f	typeref:typename:int	file:
mailmap_add_buffer	my_project/libgit2/src/libgit2/mailmap.c	/^static int mailmap_add_buffer(git_mailmap *mm, const char *buf, size_t len)$/;"	f	typeref:typename:int	file:
mailmap_add_entry_unterminated	my_project/libgit2/src/libgit2/mailmap.c	/^static int mailmap_add_entry_unterminated($/;"	f	typeref:typename:int	file:
mailmap_add_file_ondisk	my_project/libgit2/src/libgit2/mailmap.c	/^static int mailmap_add_file_ondisk($/;"	f	typeref:typename:int	file:
mailmap_add_from_repository	my_project/libgit2/src/libgit2/mailmap.c	/^static void mailmap_add_from_repository(git_mailmap *mm, git_repository *repo)$/;"	f	typeref:typename:void	file:
mailmap_entry	my_project/libgit2/tests/libgit2/mailmap/mailmap_testdata.h	/^typedef struct mailmap_entry {$/;"	s
mailmap_entry	my_project/libgit2/tests/libgit2/mailmap/mailmap_testdata.h	/^} mailmap_entry;$/;"	t	typeref:struct:mailmap_entry
mailmap_entry_cmp	my_project/libgit2/src/libgit2/mailmap.c	/^static int mailmap_entry_cmp(const void *a_raw, const void *b_raw)$/;"	f	typeref:typename:int	file:
mailmap_entry_free	my_project/libgit2/src/libgit2/mailmap.c	/^static void mailmap_entry_free(git_mailmap_entry *entry)$/;"	f	typeref:typename:void	file:
mailmap_entry_replace	my_project/libgit2/src/libgit2/mailmap.c	/^static int mailmap_entry_replace(void **old_raw, void *new_raw)$/;"	f	typeref:typename:int	file:
main	my_project/libgit2/deps/zlib/crc32.c	/^int main(void) {$/;"	f	typeref:typename:int
main	my_project/libgit2/examples/lg2.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	my_project/libgit2/fuzzers/standalone_driver.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	my_project/libgit2/script/release.py	/^def main():$/;"	f
main	my_project/libgit2/src/cli/main.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	my_project/libgit2/tests/clar/main.c	/^int __cdecl main(int argc, char *argv[])$/;"	f	typeref:typename:int __cdecl
main	my_project/libgit2/tests/headertest/headertest.c	/^int main(void)$/;"	f	typeref:typename:int
mainline	my_project/libgit2/include/git2/cherrypick.h	/^	unsigned int mainline;$/;"	m	struct:__anon241c174e0108	typeref:typename:unsigned int
mainline	my_project/libgit2/include/git2/revert.h	/^	unsigned int mainline;$/;"	m	struct:__anon289484920108	typeref:typename:unsigned int
mainloop_entry	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE struct sljit_label *mainloop_entry(compiler_common *common, BOOL hascrorlf)$/;"	f	typeref:typename:SLJIT_INLINE struct sljit_label *	file:
major	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	uint8_t major;$/;"	m	struct:__anondc54b7e10308	typeref:typename:uint8_t
make_crc_table	my_project/libgit2/deps/zlib/crc32.c	/^local void make_crc_table(void) {$/;"	f	typeref:typename:local void
make_gitlink_dir	my_project/libgit2/tests/libgit2/repo/open.c	/^static void make_gitlink_dir(const char *dir, const char *linktext)$/;"	f	typeref:typename:void	file:
make_head_unborn	my_project/libgit2/tests/libgit2/repo/repo_helpers.c	/^void make_head_unborn(git_repository* repo, const char *target)$/;"	f	typeref:typename:void
make_odb_dir	my_project/libgit2/tests/libgit2/object/raw/write.c	/^static void make_odb_dir(void)$/;"	f	typeref:typename:void	file:
make_origin	my_project/libgit2/src/libgit2/blame_git.c	/^static int make_origin(git_blame__origin **out, git_commit *commit, const char *path)$/;"	f	typeref:typename:int	file:
make_submodule_dirty	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^static int make_submodule_dirty(git_submodule *sm, const char *name, void *payload)$/;"	f	typeref:typename:int	file:
make_test_data	my_project/libgit2/tests/libgit2/ignore/status.c	/^static void make_test_data(const char *reponame, const char **files)$/;"	f	typeref:typename:void	file:
makefixed	my_project/libgit2/deps/zlib/inflate.c	/^void makefixed(void)$/;"	f	typeref:typename:void
manipulate_note_in_tree_r	my_project/libgit2/src/libgit2/notes.c	/^static int manipulate_note_in_tree_r($/;"	f	typeref:typename:int	file:
map	my_project/libgit2/src/libgit2/cache.h	/^	git_oidmap *map;$/;"	m	struct:__anon6f0f98290308	typeref:typename:git_oidmap *
map	my_project/libgit2/src/libgit2/config_list.c	/^	git_strmap *map;$/;"	m	struct:git_config_list	typeref:typename:git_strmap *	file:
map	my_project/libgit2/src/libgit2/diff_file.h	/^	git_map map;$/;"	m	struct:__anonffb6e84d0108	typeref:typename:git_map
map	my_project/libgit2/src/libgit2/odb_loose.c	/^	git_map map;$/;"	m	struct:__anon5ce333660308	typeref:typename:git_map	file:
map	my_project/libgit2/src/libgit2/submodule.c	/^	git_strmap *map;$/;"	m	struct:__anon705203a00408	typeref:typename:git_strmap *	file:
map	my_project/libgit2/src/libgit2/tree.h	/^	git_strmap *map;$/;"	m	struct:git_treebuilder	typeref:typename:git_strmap *
map	my_project/libgit2/src/util/fs_path.h	/^	iconv_t map;$/;"	m	struct:__anonea45684b0308	typeref:typename:iconv_t
map	my_project/libgit2/src/util/sortedcache.h	/^	git_strmap   *map;$/;"	m	struct:__anon21e0f34b0108	typeref:typename:git_strmap *
map_count	my_project/libgit2/src/libgit2/config_cache.c	/^	size_t map_count;$/;"	m	struct:map_data	typeref:typename:size_t	file:
map_data	my_project/libgit2/src/libgit2/config_cache.c	/^struct map_data {$/;"	s	file:
map_value	my_project/libgit2/include/git2/config.h	/^	int map_value;$/;"	m	struct:__anon3fe317b00308	typeref:typename:int
mapped	my_project/libgit2/src/libgit2/mwindow.h	/^	size_t mapped;$/;"	m	struct:git_mwindow_ctl	typeref:typename:size_t
maps	my_project/libgit2/src/libgit2/config_cache.c	/^	git_configmap *maps;$/;"	m	struct:map_data	typeref:typename:git_configmap *	file:
mark	my_project/libgit2/deps/pcre/pcre.h	/^  PCRE_UCHAR16 **mark;            \/* For passing back a mark pointer *\/$/;"	m	struct:pcre16_extra	typeref:typename:PCRE_UCHAR16 **
mark	my_project/libgit2/deps/pcre/pcre.h	/^  PCRE_UCHAR32 **mark;            \/* For passing back a mark pointer *\/$/;"	m	struct:pcre32_extra	typeref:typename:PCRE_UCHAR32 **
mark	my_project/libgit2/deps/pcre/pcre.h	/^  const PCRE_UCHAR16 *mark;       \/* Pointer to current mark or NULL    *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:const PCRE_UCHAR16 *
mark	my_project/libgit2/deps/pcre/pcre.h	/^  const PCRE_UCHAR32 *mark;       \/* Pointer to current mark or NULL    *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:const PCRE_UCHAR32 *
mark	my_project/libgit2/deps/pcre/pcre.h	/^  const unsigned char *mark;      \/* Pointer to current mark or NULL    *\/$/;"	m	struct:pcre_callout_block	typeref:typename:const unsigned char *
mark	my_project/libgit2/deps/pcre/pcre.h	/^  unsigned char **mark;           \/* For passing back a mark pointer *\/$/;"	m	struct:pcre_extra	typeref:typename:unsigned char **
mark	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const  pcre_uchar *mark;        \/* Mark pointer to pass back on success *\/$/;"	m	struct:match_data	typeref:typename:const pcre_uchar *
mark_blob_uninteresting	my_project/libgit2/src/libgit2/pack-objects.c	/^static int mark_blob_uninteresting(git_packbuilder *pb, const git_oid *id)$/;"	f	typeref:typename:int	file:
mark_edges_uninteresting	my_project/libgit2/src/libgit2/pack-objects.c	/^static int mark_edges_uninteresting(git_packbuilder *pb, git_commit_list *commits)$/;"	f	typeref:typename:int	file:
mark_local	my_project/libgit2/src/libgit2/fetch.c	/^static int mark_local(git_remote *remote)$/;"	f	typeref:typename:int	file:
mark_parents	my_project/libgit2/src/libgit2/graph.c	/^static int mark_parents(git_revwalk *walk, git_commit_list_node *one,$/;"	f	typeref:typename:int	file:
mark_parents_uninteresting	my_project/libgit2/src/libgit2/revwalk.c	/^static void mark_parents_uninteresting(git_commit_list_node *commit)$/;"	f	typeref:typename:void	file:
mark_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  pcre_uchar *mark_ptr;$/;"	m	struct:jit_arguments	typeref:typename:pcre_uchar *	file:
mark_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 mark_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
mark_tree_uninteresting	my_project/libgit2/src/libgit2/pack-objects.c	/^static int mark_tree_uninteresting(git_packbuilder *pb, const git_oid *id)$/;"	f	typeref:typename:int	file:
marker_size	my_project/libgit2/deps/xdiff/xdiff.h	/^	int marker_size;$/;"	m	struct:s_xmparam	typeref:typename:int
marker_size	my_project/libgit2/include/git2/merge.h	/^	unsigned short marker_size;$/;"	m	struct:__anon1374edca0508	typeref:typename:unsigned short
maskb	my_project/libgit2/src/util/hash/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	m	struct:__anonf957b8130108	typeref:typename:int
maski	my_project/libgit2/src/util/hash/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	m	struct:__anonf957b8130108	typeref:typename:int
match	my_project/libgit2/deps/pcre/pcre_exec.c	/^match(REGISTER PCRE_PUCHAR eptr, REGISTER const pcre_uchar *ecode,$/;"	f	typeref:typename:int	file:
match	my_project/libgit2/deps/xdiff/xpatience.c	/^static int match(struct hashmap *map, int line1, int line2)$/;"	f	typeref:typename:int	file:
match	my_project/libgit2/src/libgit2/attr_file.h	/^	git_attr_fnmatch match;$/;"	m	struct:__anon0df92d8f0408	typeref:typename:git_attr_fnmatch
match	my_project/libgit2/src/libgit2/iterator.c	/^	iterator_pathlist_search_t match;$/;"	m	struct:__anon2f88b95a0608	typeref:typename:iterator_pathlist_search_t	file:
match_alpha	my_project/libgit2/src/util/date.c	/^static size_t match_alpha(const char *date, struct tm *tm, int *offset)$/;"	f	typeref:typename:size_t	file:
match_arg_separator	my_project/libgit2/examples/args.c	/^int match_arg_separator(struct args_info *args)$/;"	f	typeref:typename:int
match_available	my_project/libgit2/deps/zlib/deflate.h	/^    int match_available;         \/* set if previous match exists *\/$/;"	m	struct:internal_state	typeref:typename:int
match_bool_arg	my_project/libgit2/examples/args.c	/^int match_bool_arg(int *out, struct args_info *args, const char *opt)$/;"	f	typeref:typename:int
match_call_count	my_project/libgit2/deps/pcre/pcre_internal.h	/^  unsigned long int match_call_count;      \/* As it says *\/$/;"	m	struct:match_data	typeref:typename:unsigned long int
match_capture_common	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE int match_capture_common(compiler_common *common, int stacksize, int offset,/;"	f	typeref:typename:SLJIT_INLINE int	file:
match_data	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct match_data {$/;"	s
match_data	my_project/libgit2/deps/pcre/pcre_internal.h	/^} match_data;$/;"	t	typeref:struct:match_data
match_digit	my_project/libgit2/src/util/date.c	/^static size_t match_digit(const char *date, struct tm *tm, int *offset, int *tm_gmt)$/;"	f	typeref:typename:size_t	file:
match_end_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 match_end_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
match_frames_base	my_project/libgit2/deps/pcre/pcre_internal.h	/^  void  *match_frames_base;       \/* For remembering malloc'd frames *\/$/;"	m	struct:match_data	typeref:typename:void *
match_func_rec	my_project/libgit2/deps/xdiff/xemit.c	/^static long match_func_rec(xdfile_t *xdf, xdemitconf_t const *xecfg, long ri,$/;"	f	typeref:typename:long	file:
match_function_type	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int    match_function_type;     \/* Set for certain special calls of MATCH() *\/$/;"	m	struct:match_data	typeref:typename:int
match_hunk	my_project/libgit2/src/libgit2/apply.c	/^static bool match_hunk($/;"	f	typeref:typename:bool	file:
match_int_arg	my_project/libgit2/examples/args.c	/^int match_int_arg($/;"	f	typeref:typename:int
match_int_internal	my_project/libgit2/examples/args.c	/^static int match_int_internal($/;"	f	typeref:typename:int	file:
match_length	my_project/libgit2/deps/zlib/deflate.h	/^    uInt match_length;           \/* length of best match *\/$/;"	m	struct:internal_state	typeref:typename:uInt
match_limit	my_project/libgit2/deps/pcre/pcre.h	/^  unsigned long int match_limit;  \/* Maximum number of calls to match() *\/$/;"	m	struct:pcre16_extra	typeref:typename:unsigned long int
match_limit	my_project/libgit2/deps/pcre/pcre.h	/^  unsigned long int match_limit;  \/* Maximum number of calls to match() *\/$/;"	m	struct:pcre32_extra	typeref:typename:unsigned long int
match_limit	my_project/libgit2/deps/pcre/pcre.h	/^  unsigned long int match_limit;  \/* Maximum number of calls to match() *\/$/;"	m	struct:pcre_extra	typeref:typename:unsigned long int
match_limit	my_project/libgit2/deps/pcre/pcre_internal.h	/^  unsigned long int match_limit;           \/* As it says *\/$/;"	m	struct:match_data	typeref:typename:unsigned long int
match_limit_recursion	my_project/libgit2/deps/pcre/pcre.h	/^  unsigned long int match_limit_recursion; \/* Max recursive calls to match() *\/$/;"	m	struct:pcre16_extra	typeref:typename:unsigned long int
match_limit_recursion	my_project/libgit2/deps/pcre/pcre.h	/^  unsigned long int match_limit_recursion; \/* Max recursive calls to match() *\/$/;"	m	struct:pcre32_extra	typeref:typename:unsigned long int
match_limit_recursion	my_project/libgit2/deps/pcre/pcre.h	/^  unsigned long int match_limit_recursion; \/* Max recursive calls to match() *\/$/;"	m	struct:pcre_extra	typeref:typename:unsigned long int
match_limit_recursion	my_project/libgit2/deps/pcre/pcre_internal.h	/^  unsigned long int match_limit_recursion; \/* As it says *\/$/;"	m	struct:match_data	typeref:typename:unsigned long int
match_line	my_project/libgit2/src/libgit2/diff_driver.h	/^	git_diff_find_context_line match_line;$/;"	m	struct:__anon9fad28f90108	typeref:typename:git_diff_find_context_line
match_multi_number	my_project/libgit2/src/util/date.c	/^static size_t match_multi_number(unsigned long num, char c, const char *date, char *end, struct /;"	f	typeref:typename:size_t	file:
match_numeric_arg	my_project/libgit2/examples/args.c	/^static const char *match_numeric_arg(struct args_info *args, const char *opt)$/;"	f	typeref:typename:const char *	file:
match_object_header_date	my_project/libgit2/src/util/date.c	/^static int match_object_header_date(const char *date, git_time_t *timestamp, int *offset)$/;"	f	typeref:typename:int	file:
match_once_common	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void match_once_common(compiler_common *common, pcre_uchar ket, int framesiz/;"	f	typeref:typename:SLJIT_INLINE void	file:
match_ref	my_project/libgit2/deps/pcre/pcre_exec.c	/^match_ref(int offset, register PCRE_PUCHAR eptr, int length, match_data *md,$/;"	f	typeref:typename:int	file:
match_start	my_project/libgit2/deps/zlib/deflate.h	/^    uInt match_start;            \/* start of matching string *\/$/;"	m	struct:internal_state	typeref:typename:uInt
match_str_arg	my_project/libgit2/examples/args.c	/^int match_str_arg($/;"	f	typeref:typename:int
match_string	my_project/libgit2/src/util/date.c	/^static size_t match_string(const char *date, const char *str)$/;"	f	typeref:typename:size_t	file:
match_tz	my_project/libgit2/src/util/date.c	/^static size_t match_tz(const char *date, int *offp)$/;"	f	typeref:typename:size_t	file:
match_uint16_arg	my_project/libgit2/examples/args.c	/^int match_uint16_arg($/;"	f	typeref:typename:int
match_uint32_arg	my_project/libgit2/examples/args.c	/^int match_uint32_arg($/;"	f	typeref:typename:int
match_with_parent	my_project/libgit2/examples/log.c	/^static int match_with_parent(git_commit *commit, int i, git_diff_options *opts)$/;"	f	typeref:typename:int	file:
matched_once	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define matched_once /;"	d	file:
matched_pathspec	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	const char *matched_pathspec;$/;"	m	struct:__anone9d3a2f30208	typeref:typename:const char *
matches	my_project/libgit2/deps/zlib/deflate.h	/^    uInt matches;       \/* number of string matches in current block *\/$/;"	m	struct:internal_state	typeref:typename:uInt
matches	my_project/libgit2/src/libgit2/config_file.c	/^	int (*matches)(int *matches, const git_repository *repo, const char *cfg, const char *value);$/;"	m	struct:__anon341047050308	typeref:typename:int (*)(int * matches,const git_repository * repo,const char * cfg,const char * value)	file:
matches	my_project/libgit2/tests/libgit2/object/tag/list.c	/^static const struct pattern_match_t matches[] = {$/;"	v	typeref:typename:const struct pattern_match_t[]	file:
matches	my_project/libgit2/tests/util/url/pattern.c	/^	bool matches;$/;"	m	struct:url_pattern	typeref:typename:bool	file:
matches_pattern	my_project/libgit2/src/util/net.c	/^static bool matches_pattern($/;"	f	typeref:typename:bool	file:
matching	my_project/libgit2/src/libgit2/refspec.h	/^		matching :1;$/;"	m	struct:git_refspec	typeref:typename:unsigned int:1
matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *matchingpath;$/;"	m	struct:assert_backtrack	typeref:struct:sljit_label *	file:
matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *matchingpath;$/;"	m	struct:braminzero_backtrack	typeref:struct:sljit_label *	file:
matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *matchingpath;$/;"	m	struct:char_iterator_backtrack	typeref:struct:sljit_label *	file:
matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *matchingpath;$/;"	m	struct:ref_iterator_backtrack	typeref:struct:sljit_label *	file:
max	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define max /;"	d	file:
max	my_project/libgit2/src/util/util.h	/^# define max(/;"	d
maxRetries	my_project/libgit2/tests/resources/userdiff/after/file.php	/^    protected $maxRetries;$/;"	v	class:Faker\\UniqueGenerator
maxRetries	my_project/libgit2/tests/resources/userdiff/before/file.php	/^    protected $maxRetries;$/;"	v	class:Faker\\UniqueGenerator
maxRetries	my_project/libgit2/tests/resources/userdiff/files/file.php	/^    protected $maxRetries;$/;"	v	class:Faker\\UniqueGenerator
max_candidates_tags	my_project/libgit2/include/git2/describe.h	/^	unsigned int max_candidates_tags; \/**< default: 10 *\/$/;"	m	struct:git_describe_options	typeref:typename:unsigned int
max_chain	my_project/libgit2/deps/zlib/deflate.c	/^   ush max_chain;$/;"	m	struct:config_s	typeref:typename:ush	file:
max_chain_length	my_project/libgit2/deps/xdiff/xhistogram.c	/^	unsigned int max_chain_length,$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
max_chain_length	my_project/libgit2/deps/zlib/deflate.h	/^    uInt max_chain_length;$/;"	m	struct:internal_state	typeref:typename:uInt
max_code	my_project/libgit2/deps/zlib/deflate.h	/^    int     max_code;            \/* largest code with non zero frequency *\/$/;"	m	struct:tree_desc_s	typeref:typename:int
max_commits	my_project/libgit2/include/git2/sys/commit_graph.h	/^	size_t max_commits;$/;"	m	struct:__anon6744c2020208	typeref:typename:size_t
max_delta_cache_size	my_project/libgit2/src/libgit2/pack-objects.h	/^	size_t max_delta_cache_size;$/;"	m	struct:git_packbuilder	typeref:typename:size_t
max_digits	my_project/libgit2/src/libgit2/diff_stats.c	/^	int max_digits;$/;"	m	struct:git_diff_stats	typeref:typename:int	file:
max_filestat	my_project/libgit2/src/libgit2/diff_stats.c	/^	size_t max_filestat;$/;"	m	struct:git_diff_stats	typeref:typename:size_t	file:
max_insert_length	my_project/libgit2/deps/zlib/deflate.h	/^#   define max_insert_length /;"	d
max_lazy	my_project/libgit2/deps/zlib/deflate.c	/^   ush max_lazy;    \/* do not perform lazy search above this match length *\/$/;"	m	struct:config_s	typeref:typename:ush	file:
max_lazy_match	my_project/libgit2/deps/zlib/deflate.h	/^    uInt max_lazy_match;$/;"	m	struct:internal_state	typeref:typename:uInt
max_length	my_project/libgit2/deps/zlib/trees.c	/^    int     max_length;          \/* max bit length for the codes *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:int	file:
max_line	my_project/libgit2/include/git2/blame.h	/^	size_t max_line;$/;"	m	struct:git_blame_options	typeref:typename:size_t
max_lookbehind	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int  max_lookbehind;              \/* Maximum lookbehind (characters) *\/$/;"	m	struct:compile_data	typeref:typename:int
max_lookbehind	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 max_lookbehind;     \/* Longest lookbehind (characters) *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
max_lookbehind	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 max_lookbehind;     \/* Longest lookbehind (characters) *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
max_name	my_project/libgit2/src/libgit2/diff_stats.c	/^	size_t max_name;$/;"	m	struct:git_diff_stats	typeref:typename:size_t	file:
max_parents	my_project/libgit2/examples/log.c	/^	int min_parents, max_parents;$/;"	m	struct:log_options	typeref:typename:int	file:
max_size	my_project/libgit2/include/git2/diff.h	/^	git_off_t   max_size;$/;"	m	struct:__anon7f3f1dd30608	typeref:typename:git_off_t
maxs	my_project/libgit2/src/libgit2/hashsig.c	/^	hashsig_heap maxs;$/;"	m	struct:git_hashsig	typeref:typename:hashsig_heap	file:
maybe_abbrev	my_project/libgit2/src/libgit2/revparse.c	/^static int maybe_abbrev(git_object **out, git_repository *repo, const char *spec)$/;"	f	typeref:typename:int	file:
maybe_append_head	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int maybe_append_head(refdb_fs_backend *backend, const git_reference *ref, const git_sign/;"	f	typeref:typename:int	file:
maybe_describe	my_project/libgit2/src/libgit2/revparse.c	/^static int maybe_describe(git_object**out, git_repository *repo, const char *spec)$/;"	f	typeref:typename:int	file:
maybe_generate	my_project/libgit2/tests/clar/generate.py	/^    def maybe_generate(self, path):$/;"	m	class:TestSuite
maybe_modified	my_project/libgit2/src/libgit2/diff_generate.c	/^static int maybe_modified($/;"	f	typeref:typename:int	file:
maybe_modified_submodule	my_project/libgit2/src/libgit2/diff_generate.c	/^static int maybe_modified_submodule($/;"	f	typeref:typename:int	file:
maybe_sha	my_project/libgit2/src/libgit2/revparse.c	/^static int maybe_sha($/;"	f	typeref:typename:int	file:
maybe_sha_or_abbrev	my_project/libgit2/src/libgit2/revparse.c	/^static int maybe_sha_or_abbrev($/;"	f	typeref:typename:int	file:
maybe_want	my_project/libgit2/src/libgit2/fetch.c	/^static int maybe_want(git_remote *remote, git_remote_head *head, git_refspec *tagspec, git_remot/;"	f	typeref:typename:int	file:
maybe_want_oid	my_project/libgit2/src/libgit2/fetch.c	/^static int maybe_want_oid(git_remote *remote, git_refspec *spec)$/;"	f	typeref:typename:int	file:
mbedtls_ca_chain	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static mbedtls_x509_crt mbedtls_ca_chain;$/;"	v	typeref:typename:mbedtls_x509_crt	file:
mbedtls_certificate	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static int mbedtls_certificate(git_cert **out, git_stream *stream)$/;"	f	typeref:typename:int	file:
mbedtls_config	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static mbedtls_ssl_config mbedtls_config;$/;"	v	typeref:typename:mbedtls_ssl_config	file:
mbedtls_connect	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static int mbedtls_connect(git_stream *stream)$/;"	f	typeref:typename:int	file:
mbedtls_entropy	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static mbedtls_entropy_context mbedtls_entropy;$/;"	v	typeref:typename:mbedtls_entropy_context	file:
mbedtls_rng	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static mbedtls_ctr_drbg_context mbedtls_rng;$/;"	v	typeref:typename:mbedtls_ctr_drbg_context	file:
mbedtls_set_proxy	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static int mbedtls_set_proxy(git_stream *stream, const git_proxy_options *proxy_options)$/;"	f	typeref:typename:int	file:
mbedtls_stream	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^} mbedtls_stream;$/;"	t	typeref:struct:__anoncc3749c90108	file:
mbedtls_stream_close	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static int mbedtls_stream_close(git_stream *stream)$/;"	f	typeref:typename:int	file:
mbedtls_stream_free	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static void mbedtls_stream_free(git_stream *stream)$/;"	f	typeref:typename:void	file:
mbedtls_stream_read	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static ssize_t mbedtls_stream_read(git_stream *stream, void *data, size_t len)$/;"	f	typeref:typename:ssize_t	file:
mbedtls_stream_wrap	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static int mbedtls_stream_wrap($/;"	f	typeref:typename:int	file:
mbedtls_stream_write	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static ssize_t mbedtls_stream_write(git_stream *stream, const char *data, size_t len, int flags)$/;"	f	typeref:typename:ssize_t	file:
md	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^    const EVP_MD *md;$/;"	m	struct:hmac_ctx_st	typeref:typename:const EVP_MD *
md4_fn	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	unsigned char *(*md4_fn)(const unsigned char *d, size_t n, unsigned char *md);$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:unsigned char * (*)(const unsigned char * d,size_t n,unsigned char * md)
md_ctx	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^    EVP_MD_CTX md_ctx;$/;"	m	struct:hmac_ctx_st	typeref:typename:EVP_MD_CTX
md_data	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^    void *md_data;$/;"	m	struct:env_md_ctx_st	typeref:typename:void *
md_len	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int num, md_len;$/;"	m	struct:__anone07cb6fd0208	typeref:typename:unsigned int
measure_split	my_project/libgit2/deps/xdiff/xdiffi.c	/^static void measure_split(const xdfile_t *xdf, long split,$/;"	f	typeref:typename:void	file:
memcmp	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define memcmp(/;"	d
memcpy	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define memcpy(/;"	d
memmove	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define memmove(/;"	d
memobject	my_project/libgit2/src/libgit2/odb_mempack.c	/^struct memobject {$/;"	s	file:
memory_limit	my_project/libgit2/src/libgit2/pack.h	/^	size_t memory_limit;$/;"	m	struct:__anon57fe39b40108	typeref:typename:size_t
memory_packer_db	my_project/libgit2/src/libgit2/odb_mempack.c	/^struct memory_packer_db {$/;"	s	file:
memory_used	my_project/libgit2/src/libgit2/pack.h	/^	size_t memory_used;$/;"	m	struct:__anon57fe39b40108	typeref:typename:size_t
mempack	my_project/libgit2/fuzzers/packfile_fuzzer.c	/^static git_odb_backend *mempack = NULL;$/;"	v	typeref:typename:git_odb_backend *	file:
memset	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define memset(/;"	d
memsize	my_project/libgit2/src/libgit2/delta.c	/^	unsigned long memsize;$/;"	m	struct:git_delta_index	typeref:typename:unsigned long	file:
merge	my_project/libgit2/src/util/tsort.c	/^static void merge(void **dst, const struct tsort_run *stack, ssize_t stack_curr, struct tsort_st/;"	f	typeref:typename:void	file:
merge__dump_index_entries	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^void merge__dump_index_entries(git_vector *index_entries)$/;"	f	typeref:typename:void
merge__dump_names	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^void merge__dump_names(git_index *index)$/;"	f	typeref:typename:void
merge__dump_reuc	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^void merge__dump_reuc(git_index *index)$/;"	f	typeref:typename:void
merge_ancestor_head	my_project/libgit2/src/libgit2/merge.c	/^static int merge_ancestor_head($/;"	f	typeref:typename:int	file:
merge_annotated_commits	my_project/libgit2/src/libgit2/merge.c	/^static int merge_annotated_commits($/;"	f	typeref:typename:int	file:
merge_assignments	my_project/libgit2/src/libgit2/attr_file.c	/^static int merge_assignments(void **old_raw, void *new_raw)$/;"	f	typeref:typename:int	file:
merge_bases	my_project/libgit2/src/libgit2/merge.c	/^static int merge_bases(git_commit_list **out, git_revwalk **walk_out, git_repository *repo, cons/;"	f	typeref:typename:int	file:
merge_bases_many	my_project/libgit2/src/libgit2/merge.c	/^static int merge_bases_many(git_commit_list **out, git_revwalk **walk_out, git_repository *repo,/;"	f	typeref:typename:int	file:
merge_branch	my_project/libgit2/tests/libgit2/merge/driver.c	/^static void merge_branch(void)$/;"	f	typeref:typename:void	file:
merge_branch	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^static int merge_branch(void)$/;"	f	typeref:typename:int	file:
merge_branches	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^int merge_branches(git_repository *repo,$/;"	f	typeref:typename:int
merge_check_index	my_project/libgit2/src/libgit2/merge.c	/^static int merge_check_index(size_t *conflicts, git_repository *repo, git_index *index_new, git_/;"	f	typeref:typename:int	file:
merge_check_workdir	my_project/libgit2/src/libgit2/merge.c	/^static int merge_check_workdir(size_t *conflicts, git_repository *repo, git_index *index_new, gi/;"	f	typeref:typename:int	file:
merge_commits_from_branches	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^int merge_commits_from_branches($/;"	f	typeref:typename:int
merge_conflict_can_resolve_contents	my_project/libgit2/src/libgit2/merge.c	/^static bool merge_conflict_can_resolve_contents($/;"	f	typeref:typename:bool	file:
merge_conflict_invoke_driver	my_project/libgit2/src/libgit2/merge.c	/^static int merge_conflict_invoke_driver($/;"	f	typeref:typename:int	file:
merge_conflict_resolve	my_project/libgit2/src/libgit2/merge.c	/^static int merge_conflict_resolve($/;"	f	typeref:typename:int	file:
merge_conflict_resolve_contents	my_project/libgit2/src/libgit2/merge.c	/^static int merge_conflict_resolve_contents($/;"	f	typeref:typename:int	file:
merge_conflict_resolve_one_removed	my_project/libgit2/src/libgit2/merge.c	/^static int merge_conflict_resolve_one_removed($/;"	f	typeref:typename:int	file:
merge_conflict_resolve_one_renamed	my_project/libgit2/src/libgit2/merge.c	/^static int merge_conflict_resolve_one_renamed($/;"	f	typeref:typename:int	file:
merge_conflict_resolve_trivial	my_project/libgit2/src/libgit2/merge.c	/^static int merge_conflict_resolve_trivial($/;"	f	typeref:typename:int	file:
merge_delta_type_from_index_entries	my_project/libgit2/src/libgit2/merge.c	/^GIT_INLINE(int) merge_delta_type_from_index_entries($/;"	f	typeref:typename:int
merge_diff_any_side_added_or_modified	my_project/libgit2/src/libgit2/merge.c	/^GIT_INLINE(bool) merge_diff_any_side_added_or_modified($/;"	f	typeref:typename:bool
merge_diff_coalesce_rename	my_project/libgit2/src/libgit2/merge.c	/^GIT_INLINE(void) merge_diff_coalesce_rename($/;"	f	typeref:typename:void
merge_diff_detect_df_conflict	my_project/libgit2/src/libgit2/merge.c	/^GIT_INLINE(int) merge_diff_detect_df_conflict($/;"	f	typeref:typename:int
merge_diff_detect_type	my_project/libgit2/src/libgit2/merge.c	/^GIT_INLINE(int) merge_diff_detect_type($/;"	f	typeref:typename:int
merge_diff_df_data	my_project/libgit2/src/libgit2/merge.c	/^struct merge_diff_df_data {$/;"	s	file:
merge_diff_empty	my_project/libgit2/src/libgit2/merge.c	/^static int merge_diff_empty(const git_vector *conflicts, size_t idx, void *p)$/;"	f	typeref:typename:int	file:
merge_diff_find_data	my_project/libgit2/src/libgit2/merge.c	/^struct merge_diff_find_data {$/;"	s	file:
merge_diff_from_index_entries	my_project/libgit2/src/libgit2/merge.c	/^static git_merge_diff *merge_diff_from_index_entries($/;"	f	typeref:typename:git_merge_diff *	file:
merge_diff_list_coalesce_renames	my_project/libgit2/src/libgit2/merge.c	/^static void merge_diff_list_coalesce_renames($/;"	f	typeref:typename:void	file:
merge_diff_list_count_candidates	my_project/libgit2/src/libgit2/merge.c	/^static void merge_diff_list_count_candidates($/;"	f	typeref:typename:void	file:
merge_diff_list_insert_conflict	my_project/libgit2/src/libgit2/merge.c	/^static int merge_diff_list_insert_conflict($/;"	f	typeref:typename:int	file:
merge_diff_list_insert_unmodified	my_project/libgit2/src/libgit2/merge.c	/^static int merge_diff_list_insert_unmodified($/;"	f	typeref:typename:int	file:
merge_diff_mark_rename_conflict	my_project/libgit2/src/libgit2/merge.c	/^static void merge_diff_mark_rename_conflict($/;"	f	typeref:typename:void	file:
merge_diff_mark_similarity_exact	my_project/libgit2/src/libgit2/merge.c	/^static int merge_diff_mark_similarity_exact($/;"	f	typeref:typename:int	file:
merge_diff_mark_similarity_inexact	my_project/libgit2/src/libgit2/merge.c	/^static int merge_diff_mark_similarity_inexact($/;"	f	typeref:typename:int	file:
merge_diff_path	my_project/libgit2/src/libgit2/merge.c	/^GIT_INLINE(const char *) merge_diff_path($/;"	f	typeref:typename:const char *
merge_diff_similarity	my_project/libgit2/src/libgit2/merge.c	/^struct merge_diff_similarity {$/;"	s	file:
merge_differently_filtered_files	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^static int merge_differently_filtered_files(char *files[])$/;"	f	typeref:typename:int	file:
merge_dirty_files	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^static int merge_dirty_files(char *dirty_files[])$/;"	f	typeref:typename:int	file:
merge_driver_binary_apply	my_project/libgit2/src/libgit2/merge_driver.c	/^static int merge_driver_binary_apply($/;"	f	typeref:typename:int	file:
merge_driver_entry_cmp	my_project/libgit2/src/libgit2/merge_driver.c	/^static int merge_driver_entry_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
merge_driver_entry_search	my_project/libgit2/src/libgit2/merge_driver.c	/^static int merge_driver_entry_search(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
merge_driver_lookup_with_wildcard	my_project/libgit2/src/libgit2/merge_driver.c	/^GIT_INLINE(git_merge_driver *) merge_driver_lookup_with_wildcard($/;"	f	typeref:typename:git_merge_driver *
merge_driver_name__binary	my_project/libgit2/src/libgit2/merge_driver.c	/^static const char *merge_driver_name__binary = "binary";$/;"	v	typeref:typename:const char *	file:
merge_driver_name__text	my_project/libgit2/src/libgit2/merge_driver.c	/^static const char *merge_driver_name__text = "text";$/;"	v	typeref:typename:const char *	file:
merge_driver_name__union	my_project/libgit2/src/libgit2/merge_driver.c	/^static const char *merge_driver_name__union = "union";$/;"	v	typeref:typename:const char *	file:
merge_driver_name_for_path	my_project/libgit2/src/libgit2/merge_driver.c	/^static int merge_driver_name_for_path($/;"	f	typeref:typename:int	file:
merge_driver_registry	my_project/libgit2/src/libgit2/merge_driver.c	/^static struct merge_driver_registry merge_driver_registry;$/;"	v	typeref:struct:merge_driver_registry	file:
merge_driver_registry	my_project/libgit2/src/libgit2/merge_driver.c	/^struct merge_driver_registry {$/;"	s	file:
merge_driver_registry_find	my_project/libgit2/src/libgit2/merge_driver.c	/^static int merge_driver_registry_find(size_t *pos, const char *name)$/;"	f	typeref:typename:int	file:
merge_driver_registry_insert	my_project/libgit2/src/libgit2/merge_driver.c	/^static int merge_driver_registry_insert($/;"	f	typeref:typename:int	file:
merge_driver_registry_lookup	my_project/libgit2/src/libgit2/merge_driver.c	/^static git_merge_driver_entry *merge_driver_registry_lookup($/;"	f	typeref:typename:git_merge_driver_entry *	file:
merge_env	my_project/libgit2/src/util/unix/process.c	/^static int merge_env($/;"	f	typeref:typename:int	file:
merge_env	my_project/libgit2/src/util/win32/process.c	/^static int merge_env(wchar_t **out, const char **in, size_t in_len, bool exclude_env)$/;"	f	typeref:typename:int	file:
merge_file__binary	my_project/libgit2/src/libgit2/merge_file.c	/^static int merge_file__binary($/;"	f	typeref:typename:int	file:
merge_file__from_inputs	my_project/libgit2/src/libgit2/merge_file.c	/^static int merge_file__from_inputs($/;"	f	typeref:typename:int	file:
merge_file__is_binary	my_project/libgit2/src/libgit2/merge_file.c	/^static bool merge_file__is_binary(const git_merge_file_input *file)$/;"	f	typeref:typename:bool	file:
merge_file__xdiff	my_project/libgit2/src/libgit2/merge_file.c	/^static int merge_file__xdiff($/;"	f	typeref:typename:int	file:
merge_file_input_from_index	my_project/libgit2/src/libgit2/merge_file.c	/^static int merge_file_input_from_index($/;"	f	typeref:typename:int	file:
merge_file_normalize_opts	my_project/libgit2/src/libgit2/merge_file.c	/^static void merge_file_normalize_opts($/;"	f	typeref:typename:void	file:
merge_files	my_project/libgit2/tests/libgit2/worktree/merge.c	/^static const char *merge_files[] = {$/;"	v	typeref:typename:const char * []	file:
merge_head	my_project/libgit2/src/libgit2/merge.c	/^	const git_annotated_commit *merge_head;$/;"	m	struct:merge_msg_entry	typeref:typename:const git_annotated_commit *	file:
merge_heads	my_project/libgit2/src/libgit2/merge.c	/^static int merge_heads($/;"	f	typeref:typename:int	file:
merge_index_and_tree	my_project/libgit2/src/libgit2/stash.c	/^static int merge_index_and_tree($/;"	f	typeref:typename:int	file:
merge_index_conflict_data	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^struct merge_index_conflict_data {$/;"	s
merge_index_entry	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^struct merge_index_entry {$/;"	s
merge_index_insert_reuc	my_project/libgit2/src/libgit2/merge.c	/^static int merge_index_insert_reuc($/;"	f	typeref:typename:int	file:
merge_index_with_status	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^struct merge_index_with_status {$/;"	s
merge_indexes	my_project/libgit2/src/libgit2/stash.c	/^static int merge_indexes($/;"	f	typeref:typename:int	file:
merge_msg_entries	my_project/libgit2/src/libgit2/merge.c	/^static int merge_msg_entries($/;"	f	typeref:typename:int	file:
merge_msg_entry	my_project/libgit2/src/libgit2/merge.c	/^struct merge_msg_entry {$/;"	s	file:
merge_msg_entry_written	my_project/libgit2/src/libgit2/merge.c	/^static int merge_msg_entry_written($/;"	f	typeref:typename:int	file:
merge_msg_write_branches	my_project/libgit2/src/libgit2/merge.c	/^static int merge_msg_write_branches($/;"	f	typeref:typename:int	file:
merge_msg_write_entries	my_project/libgit2/src/libgit2/merge.c	/^static int merge_msg_write_entries($/;"	f	typeref:typename:int	file:
merge_msg_write_remotes	my_project/libgit2/src/libgit2/merge.c	/^static int merge_msg_write_remotes($/;"	f	typeref:typename:int	file:
merge_msg_write_tags	my_project/libgit2/src/libgit2/merge.c	/^static int merge_msg_write_tags($/;"	f	typeref:typename:int	file:
merge_msg_write_tracking	my_project/libgit2/src/libgit2/merge.c	/^static int merge_msg_write_tracking($/;"	f	typeref:typename:int	file:
merge_name_entry	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^struct merge_name_entry {$/;"	s
merge_normalize_checkout_opts	my_project/libgit2/src/libgit2/merge.c	/^static int merge_normalize_checkout_opts($/;"	f	typeref:typename:int	file:
merge_normalize_opts	my_project/libgit2/src/libgit2/merge.c	/^static int merge_normalize_opts($/;"	f	typeref:typename:int	file:
merge_options	my_project/libgit2/examples/merge.c	/^struct merge_options {$/;"	s	file:
merge_options	my_project/libgit2/include/git2/rebase.h	/^	git_merge_options merge_options;$/;"	m	struct:__anonf9a5428c0108	typeref:typename:git_merge_options
merge_options_init	my_project/libgit2/examples/merge.c	/^static void merge_options_init(struct merge_options *opts)$/;"	f	typeref:typename:void	file:
merge_opts	my_project/libgit2/include/git2/cherrypick.h	/^	git_merge_options merge_opts; \/**< Options for the merging *\/$/;"	m	struct:__anon241c174e0108	typeref:typename:git_merge_options
merge_opts	my_project/libgit2/include/git2/revert.h	/^	git_merge_options merge_opts; \/**< Options for the merging *\/$/;"	m	struct:__anon289484920108	typeref:typename:git_merge_options
merge_preference	my_project/libgit2/src/libgit2/merge.c	/^static int merge_preference(git_merge_preference_t *out, git_repository *repo)$/;"	f	typeref:typename:int	file:
merge_reuc_entry	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^struct merge_reuc_entry {$/;"	s
merge_simple_branch	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^static void merge_simple_branch(int merge_file_favor, int addl_checkout_strategy)$/;"	f	typeref:typename:void	file:
merge_staged_files	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^static int merge_staged_files(char *staged_files[])$/;"	f	typeref:typename:int	file:
merge_state_cleanup	my_project/libgit2/src/libgit2/merge.c	/^static int merge_state_cleanup(git_repository *repo)$/;"	f	typeref:typename:int	file:
merge_structs	my_project/libgit2/tests/util/vector.c	/^static int merge_structs(void **old_raw, void *new)$/;"	f	typeref:typename:int	file:
merge_test_index	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^int merge_test_index(git_index *index, const struct merge_index_entry expected[], size_t expecte/;"	f	typeref:typename:int
merge_test_merge_conflicts	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^int merge_test_merge_conflicts(git_vector *conflicts, const struct merge_index_conflict_data exp/;"	f	typeref:typename:int
merge_test_names	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^int merge_test_names(git_index *index, const struct merge_name_entry expected[], size_t expected/;"	f	typeref:typename:int
merge_test_reuc	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^int merge_test_reuc(git_index *index, const struct merge_reuc_entry expected[], size_t expected_/;"	f	typeref:typename:int
merge_test_workdir	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^int merge_test_workdir(git_repository *repo, const struct merge_index_entry expected[], size_t e/;"	f	typeref:typename:int
merge_their_label	my_project/libgit2/src/libgit2/merge.c	/^static const char *merge_their_label(const char *branchname)$/;"	f	typeref:typename:const char *	file:
merge_tree_index_t	my_project/libgit2/src/libgit2/merge.c	/^} merge_tree_index_t;$/;"	t	typeref:enum:__anon7b397d600103	file:
merge_trees_from_branches	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^int merge_trees_from_branches($/;"	f	typeref:typename:int
merge_trivial	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^static int merge_trivial(git_index **index, const char *ours, const char *theirs)$/;"	f	typeref:typename:int	file:
merge_trivial	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^static int merge_trivial(const char *ours, const char *theirs)$/;"	f	typeref:typename:int	file:
merge_trivial_conflict_entrycount	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^static int merge_trivial_conflict_entrycount(git_index *index)$/;"	f	typeref:typename:int	file:
merge_trivial_conflict_entrycount	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^static size_t merge_trivial_conflict_entrycount(void)$/;"	f	typeref:typename:size_t	file:
mergehead_data	my_project/libgit2/src/libgit2/repository.c	/^struct mergehead_data {$/;"	s	file:
message	my_project/libgit2/examples/tag.c	/^	const char *message;$/;"	m	struct:tag_options	typeref:typename:const char *	file:
message	my_project/libgit2/include/git2/errors.h	/^	char *message;$/;"	m	struct:__anon095219370208	typeref:typename:char *
message	my_project/libgit2/include/git2/stash.h	/^	const char *message;$/;"	m	struct:git_stash_save_options	typeref:typename:const char *
message	my_project/libgit2/src/libgit2/notes.h	/^	char *message;$/;"	m	struct:git_note	typeref:typename:char *
message	my_project/libgit2/src/libgit2/tag.h	/^	char *message;$/;"	m	struct:git_tag	typeref:typename:char *
message	my_project/libgit2/src/libgit2/transaction.c	/^	const char *message;$/;"	m	struct:__anonbebdb9760208	typeref:typename:const char *	file:
message	my_project/libgit2/src/util/errors.c	/^	git_str message;$/;"	m	struct:error_threadstate	typeref:typename:git_str	file:
message_encoding	my_project/libgit2/include/git2/commit.h	/^	const char *message_encoding;$/;"	m	struct:__anon3e0cd1e30108	typeref:typename:const char *
message_encoding	my_project/libgit2/src/libgit2/commit.h	/^	char *message_encoding;$/;"	m	struct:git_commit	typeref:typename:char *
message_prefix	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^static const char *message_prefix(git_trace_level_t level)$/;"	f	typeref:typename:const char *	file:
messages	my_project/libgit2/tests/libgit2/notes/notes.c	/^static char *messages[] = {$/;"	v	typeref:typename:char * []	file:
method	my_project/libgit2/deps/llhttp/llhttp.h	/^  uint8_t method;$/;"	m	struct:llhttp__internal_s	typeref:typename:uint8_t
method	my_project/libgit2/deps/zlib/deflate.h	/^    Byte  method;        \/* can only be DEFLATED *\/$/;"	m	struct:internal_state	typeref:typename:Byte
method	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    BIO_METHOD *method;$/;"	m	struct:bio_st	typeref:typename:BIO_METHOD *
method	my_project/libgit2/src/libgit2/transports/http.c	/^	git_http_method method;$/;"	m	struct:__anon515ae8bf0208	typeref:typename:git_http_method	file:
method	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	git_http_method method;            \/**< Method for the request *\/$/;"	m	struct:__anon3d590bc30208	typeref:typename:git_http_method
method	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^struct method {$/;"	s	file:
metric	my_project/libgit2/include/git2/diff.h	/^	git_diff_similarity_metric *metric;$/;"	m	struct:__anon7f3f1dd30f08	typeref:typename:git_diff_similarity_metric *
metric	my_project/libgit2/include/git2/merge.h	/^	git_diff_similarity_metric *metric;$/;"	m	struct:__anon1374edca0708	typeref:typename:git_diff_similarity_metric *
midx	my_project/libgit2/src/libgit2/odb_pack.c	/^	git_midx_file *midx;$/;"	m	struct:pack_backend	typeref:typename:git_midx_file *	file:
midx_error	my_project/libgit2/src/libgit2/midx.c	/^static int midx_error(const char *message)$/;"	f	typeref:typename:int	file:
midx_packs	my_project/libgit2/src/libgit2/odb_pack.c	/^	git_vector midx_packs;$/;"	m	struct:pack_backend	typeref:typename:git_vector	file:
midx_parse_object_large_offsets	my_project/libgit2/src/libgit2/midx.c	/^static int midx_parse_object_large_offsets($/;"	f	typeref:typename:int	file:
midx_parse_object_offsets	my_project/libgit2/src/libgit2/midx.c	/^static int midx_parse_object_offsets($/;"	f	typeref:typename:int	file:
midx_parse_oid_fanout	my_project/libgit2/src/libgit2/midx.c	/^static int midx_parse_oid_fanout($/;"	f	typeref:typename:int	file:
midx_parse_oid_lookup	my_project/libgit2/src/libgit2/midx.c	/^static int midx_parse_oid_lookup($/;"	f	typeref:typename:int	file:
midx_parse_packfile_names	my_project/libgit2/src/libgit2/midx.c	/^static int midx_parse_packfile_names($/;"	f	typeref:typename:int	file:
midx_write	my_project/libgit2/src/libgit2/midx.c	/^static int midx_write($/;"	f	typeref:typename:int	file:
midx_write_buf	my_project/libgit2/src/libgit2/midx.c	/^static int midx_write_buf(const char *buf, size_t size, void *data)$/;"	f	typeref:typename:int	file:
midx_write_cb	my_project/libgit2/src/libgit2/midx.c	/^typedef int (*midx_write_cb)(const char *buf, size_t size, void *cb_data);$/;"	t	typeref:typename:int (*)(const char * buf,size_t size,void * cb_data)	file:
midx_write_filebuf	my_project/libgit2/src/libgit2/midx.c	/^static int midx_write_filebuf(const char *buf, size_t size, void *data)$/;"	f	typeref:typename:int	file:
midx_write_hash	my_project/libgit2/src/libgit2/midx.c	/^static int midx_write_hash(const char *buf, size_t size, void *data)$/;"	f	typeref:typename:int	file:
midx_write_hash_context	my_project/libgit2/src/libgit2/midx.c	/^struct midx_write_hash_context {$/;"	s	file:
might_be_empty	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL might_be_empty;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
min	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define min /;"	d	file:
min	my_project/libgit2/src/util/util.h	/^# define min(/;"	d
min_hi	my_project/libgit2/deps/xdiff/xdiffi.c	/^	int min_lo, min_hi;$/;"	m	struct:s_xdpsplit	typeref:typename:int	file:
min_length	my_project/libgit2/src/libgit2/oid.c	/^	int min_length, full;$/;"	m	struct:git_oid_shorten	typeref:typename:int	file:
min_line	my_project/libgit2/include/git2/blame.h	/^	size_t min_line;$/;"	m	struct:git_blame_options	typeref:typename:size_t
min_lo	my_project/libgit2/deps/xdiff/xdiffi.c	/^	int min_lo, min_hi;$/;"	m	struct:s_xdpsplit	typeref:typename:int	file:
min_match_characters	my_project/libgit2/include/git2/blame.h	/^	uint16_t min_match_characters;$/;"	m	struct:git_blame_options	typeref:typename:uint16_t
min_parents	my_project/libgit2/examples/log.c	/^	int min_parents, max_parents;$/;"	m	struct:log_options	typeref:typename:int	file:
minlength	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 minlength;          \/* Minimum subject length *\/$/;"	m	struct:pcre_study_data	typeref:typename:pcre_uint32
minor	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	uint8_t minor;$/;"	m	struct:__anondc54b7e10308	typeref:typename:uint8_t
mins	my_project/libgit2/src/libgit2/hashsig.c	/^	hashsig_heap mins;$/;"	m	struct:git_hashsig	typeref:typename:hashsig_heap	file:
missing_trailer_pack	my_project/libgit2/tests/libgit2/pack/indexer.c	/^static const unsigned char missing_trailer_pack[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
missing_trailer_pack_len	my_project/libgit2/tests/libgit2/pack/indexer.c	/^static const unsigned int missing_trailer_pack_len = 12;$/;"	v	typeref:typename:const unsigned int	file:
mkdir	my_project/libgit2/tests/clar/clar.c	/^#		define mkdir(/;"	d	file:
mkdir_calls	my_project/libgit2/include/git2/checkout.h	/^	size_t mkdir_calls;$/;"	m	struct:__anon65c3b8100308	typeref:typename:size_t
mkdir_calls	my_project/libgit2/src/util/futils.h	/^	size_t mkdir_calls;$/;"	m	struct:git_futils_mkdir_perfdata	typeref:typename:size_t
mkdir_canonicalize	my_project/libgit2/src/util/futils.c	/^GIT_INLINE(int) mkdir_canonicalize($/;"	f	typeref:typename:int
mkdir_flags	my_project/libgit2/src/util/futils.c	/^	uint32_t mkdir_flags;$/;"	m	struct:__anon45ee97580208	typeref:typename:uint32_t	file:
mkdir_map	my_project/libgit2/src/libgit2/checkout.c	/^	git_strmap *mkdir_map;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_strmap *	file:
mkdir_parent	my_project/libgit2/src/libgit2/repository.c	/^static int mkdir_parent(git_str *buf, uint32_t mode, bool skip2)$/;"	f	typeref:typename:int	file:
mkdir_validate_dir	my_project/libgit2/src/util/futils.c	/^GIT_INLINE(int) mkdir_validate_dir($/;"	f	typeref:typename:int
mkdir_validate_mode	my_project/libgit2/src/util/futils.c	/^GIT_INLINE(int) mkdir_validate_mode($/;"	f	typeref:typename:int
mkpath2file	my_project/libgit2/src/libgit2/checkout.c	/^static int mkpath2file($/;"	f	typeref:typename:int	file:
mmap_calls	my_project/libgit2/src/libgit2/mwindow.h	/^	unsigned int mmap_calls;$/;"	m	struct:git_mwindow_ctl	typeref:typename:unsigned int
mmbuffer_t	my_project/libgit2/deps/xdiff/xdiff.h	/^} mmbuffer_t;$/;"	t	typeref:struct:s_mmbuffer
mmfile_t	my_project/libgit2/deps/xdiff/xdiff.h	/^} mmfile_t;$/;"	t	typeref:struct:s_mmfile
mock_owner	my_project/libgit2/src/util/fs_path.c	/^static git_fs_path_owner_t mock_owner = GIT_FS_PATH_OWNER_NONE;$/;"	v	typeref:typename:git_fs_path_owner_t	file:
mock_registry	my_project/libgit2/src/libgit2/sysdir.c	/^static git_win32_path mock_registry;$/;"	v	typeref:typename:git_win32_path	file:
mock_registry_set	my_project/libgit2/src/libgit2/sysdir.c	/^static bool mock_registry_set;$/;"	v	typeref:typename:bool	file:
mode	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int mode;$/;"	m	struct:compiler_common	typeref:typename:int	file:
mode	my_project/libgit2/deps/xdiff/xmerge.c	/^	int mode;$/;"	m	struct:s_xdmerge	typeref:typename:int	file:
mode	my_project/libgit2/deps/zlib/gzguts.h	/^    int mode;               \/* see gzip modes above *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:int
mode	my_project/libgit2/deps/zlib/inflate.h	/^    inflate_mode mode;          \/* current inflate mode *\/$/;"	m	struct:inflate_state	typeref:typename:inflate_mode
mode	my_project/libgit2/examples/add.c	/^	enum index_mode mode;$/;"	m	struct:index_options	typeref:enum:index_mode	file:
mode	my_project/libgit2/include/git2/diff.h	/^	uint16_t           mode;$/;"	m	struct:__anon7f3f1dd30408	typeref:typename:uint16_t
mode	my_project/libgit2/include/git2/index.h	/^	uint32_t mode;$/;"	m	struct:git_index_entry	typeref:typename:uint32_t
mode	my_project/libgit2/include/git2/indexer.h	/^	unsigned int mode;$/;"	m	struct:git_indexer_options	typeref:typename:unsigned int
mode	my_project/libgit2/include/git2/merge.h	/^	unsigned int mode;$/;"	m	struct:__anon1374edca0108	typeref:typename:unsigned int
mode	my_project/libgit2/include/git2/merge.h	/^	unsigned int mode;$/;"	m	struct:__anon1374edca0608	typeref:typename:unsigned int
mode	my_project/libgit2/include/git2/odb_backend.h	/^	unsigned int mode;$/;"	m	struct:git_odb_stream	typeref:typename:unsigned int
mode	my_project/libgit2/include/git2/repository.h	/^	uint32_t    mode;$/;"	m	struct:__anon67af0d3a0408	typeref:typename:uint32_t
mode	my_project/libgit2/include/git2/sys/index.h	/^	uint32_t mode[3];$/;"	m	struct:git_index_reuc_entry	typeref:typename:uint32_t[3]
mode	my_project/libgit2/src/libgit2/filter.c	/^	git_filter_mode_t  mode;$/;"	m	struct:git_filter_source	typeref:typename:git_filter_mode_t	file:
mode	my_project/libgit2/src/libgit2/index.c	/^	uint32_t mode;$/;"	m	struct:entry_common	typeref:typename:uint32_t	file:
mode	my_project/libgit2/src/libgit2/indexer.c	/^	unsigned int mode;$/;"	m	struct:git_indexer	typeref:typename:unsigned int	file:
mode	my_project/libgit2/src/libgit2/repo_template.h	/^	mode_t mode;$/;"	m	struct:__anon5b8f20a60108	typeref:typename:mode_t
mode	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^	uint16_t mode;$/;"	m	struct:checkout_index_entry	typeref:typename:uint16_t	file:
mode	my_project/libgit2/tests/libgit2/filter/stream.c	/^	git_filter_mode_t mode;$/;"	m	struct:compress_stream	typeref:typename:git_filter_mode_t	file:
mode	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	uint16_t mode;$/;"	m	struct:merge_index_entry	typeref:typename:uint16_t
mode_t	my_project/libgit2/src/util/win32/msvc-compat.h	/^typedef unsigned short mode_t;$/;"	t	typeref:typename:unsigned short
modify_index_and_checkout_tree	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static void modify_index_and_checkout_tree(git_checkout_options *opts)$/;"	f	typeref:typename:void	file:
modify_index_ondisk	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static void modify_index_ondisk(void)$/;"	f	typeref:typename:void	file:
mods	my_project/libgit2/src/libgit2/submodule.c	/^	git_config *mods;$/;"	m	struct:__anon705203a00408	typeref:typename:git_config *	file:
month_names	my_project/libgit2/src/util/date.c	/^static const char *month_names[] = {$/;"	v	typeref:typename:const char * []	file:
moptions	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int   moptions;                   \/* Match options *\/$/;"	m	struct:dfa_match_data	typeref:typename:int
moreStuff	my_project/libgit2/tests/resources/userdiff/after/file.php	/^	protected $moreStuff;$/;"	v	class:Faker\\UniqueGenerator
moreStuff	my_project/libgit2/tests/resources/userdiff/files/file.php	/^	protected $moreStuff;$/;"	v	class:Faker\\UniqueGenerator
msg	my_project/libgit2/deps/zlib/gzguts.h	/^    char *msg;              \/* error message *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:char *
msg	my_project/libgit2/deps/zlib/zlib.h	/^    z_const char *msg;  \/* last error message, NULL if no error *\/$/;"	m	struct:z_stream_s	typeref:typename:z_const char *
msg	my_project/libgit2/src/libgit2/push.h	/^	char *msg;$/;"	m	struct:push_status	typeref:typename:char *
msg	my_project/libgit2/src/libgit2/reflog.h	/^	char *msg;$/;"	m	struct:git_reflog_entry	typeref:typename:char *
msg	my_project/libgit2/src/libgit2/transports/smart.h	/^	char *msg;$/;"	m	struct:__anonb9ceeb0b0908	typeref:typename:char *
msg	my_project/libgit2/tests/libgit2/online/push_util.h	/^	char *msg;$/;"	m	struct:__anonec09f7510408	typeref:typename:char *
msg_entry_is_branch	my_project/libgit2/src/libgit2/merge.c	/^static int msg_entry_is_branch($/;"	f	typeref:typename:int	file:
msg_entry_is_oid	my_project/libgit2/src/libgit2/merge.c	/^static int msg_entry_is_oid($/;"	f	typeref:typename:int	file:
msg_entry_is_remote	my_project/libgit2/src/libgit2/merge.c	/^static int msg_entry_is_remote($/;"	f	typeref:typename:int	file:
msg_entry_is_tag	my_project/libgit2/src/libgit2/merge.c	/^static int msg_entry_is_tag($/;"	f	typeref:typename:int	file:
msg_entry_is_tracking	my_project/libgit2/src/libgit2/merge.c	/^static int msg_entry_is_tracking($/;"	f	typeref:typename:int	file:
mstart	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define mstart /;"	d	file:
mtime	my_project/libgit2/include/git2/index.h	/^	git_index_time mtime;$/;"	m	struct:git_index_entry	typeref:typename:git_index_time
mtime	my_project/libgit2/src/libgit2/index.c	/^	struct entry_time mtime;$/;"	m	struct:entry_common	typeref:struct:entry_time	file:
mtime	my_project/libgit2/src/libgit2/pack.h	/^	git_time_t mtime;$/;"	m	struct:git_pack_file	typeref:typename:git_time_t
mtime	my_project/libgit2/src/util/futils.h	/^	struct timespec mtime;$/;"	m	struct:__anon45ee975d0408	typeref:struct:timespec
mtime	my_project/libgit2/tests/libgit2/index/tests.c	/^   git_time_t mtime;$/;"	m	struct:test_entry	typeref:typename:git_time_t	file:
mtime	my_project/libgit2/tests/libgit2/index/tests256.c	/^   git_time_t mtime;$/;"	m	struct:test_entry	typeref:typename:git_time_t	file:
multiValueArgs	my_project/libgit2/cmake/PkgBuildConfig.cmake	/^	set(multiValueArgs LIBS PRIVATE_LIBS REQUIRES CFLAGS)$/;"	v	function:pkg_build_config
multi_ack	my_project/libgit2/src/libgit2/transports/smart.h	/^	             multi_ack:1,$/;"	m	struct:transport_smart_caps	typeref:typename:unsigned int:1
multi_ack_detailed	my_project/libgit2/src/libgit2/transports/smart.h	/^	             multi_ack_detailed:1,$/;"	m	struct:transport_smart_caps	typeref:typename:unsigned int:1
multivar	my_project/libgit2/src/libgit2/config_list.c	/^	bool multivar;$/;"	m	struct:__anon421351410108	typeref:typename:bool	file:
multivar_cb	my_project/libgit2/tests/libgit2/config/write.c	/^static int multivar_cb(const git_config_entry *entry, void *data)$/;"	f	typeref:typename:int	file:
multivar_iter	my_project/libgit2/src/libgit2/config.c	/^} multivar_iter;$/;"	t	typeref:struct:__anona0399aa60508	file:
multivar_iter_free	my_project/libgit2/src/libgit2/config.c	/^static void multivar_iter_free(git_config_iterator *_iter)$/;"	f	typeref:typename:void	file:
multivar_iter_next	my_project/libgit2/src/libgit2/config.c	/^static int multivar_iter_next(git_config_entry **entry, git_config_iterator *_iter)$/;"	f	typeref:typename:int	file:
multmodp	my_project/libgit2/deps/zlib/crc32.c	/^local z_crc_t multmodp(z_crc_t a, z_crc_t b) {$/;"	f	typeref:typename:local z_crc_t
mutex	my_project/libgit2/src/libgit2/pack-objects.c	/^	git_mutex mutex;$/;"	m	struct:thread_params	typeref:typename:git_mutex	file:
mv_read_cb	my_project/libgit2/tests/libgit2/config/multivar.c	/^static int mv_read_cb(const git_config_entry *entry, void *data)$/;"	f	typeref:typename:int	file:
mw	my_project/libgit2/src/libgit2/pack.h	/^	git_mwindow *mw;$/;"	m	struct:git_packfile_stream	typeref:typename:git_mwindow *
mwf	my_project/libgit2/src/libgit2/pack.h	/^	git_mwindow_file mwf;$/;"	m	struct:git_pack_file	typeref:typename:git_mwindow_file
mxcost	my_project/libgit2/deps/xdiff/xdiffi.h	/^	long mxcost;$/;"	m	struct:s_xdalgoenv	typeref:typename:long
my_emit	my_project/libgit2/src/libgit2/blame_git.c	/^static int my_emit($/;"	f	typeref:typename:int	file:
my_output	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static void my_output(const char *buf)$/;"	f	typeref:typename:void	file:
my_struct	my_project/libgit2/tests/util/vector.c	/^} my_struct;$/;"	t	typeref:struct:__anon93daa45f0108	file:
n	my_project/libgit2/tests/util/posix.c	/^		const uint8_t n[16];$/;"	m	struct:test_posix__inet_pton::in6_addr_data	typeref:typename:const uint8_t[16]	file:
n	my_project/libgit2/tests/util/posix.c	/^		const uint8_t n[4];$/;"	m	struct:test_posix__inet_pton::in_addr_data	typeref:typename:const uint8_t[4]	file:
nPort	my_project/libgit2/deps/winhttp/winhttp.h	/^    INTERNET_PORT nPort;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:INTERNET_PORT
nScheme	my_project/libgit2/deps/winhttp/winhttp.h	/^    INTERNET_SCHEME nScheme;$/;"	m	struct:__anon0b61ebe80108	typeref:typename:INTERNET_SCHEME
n_conflicts	my_project/libgit2/tests/libgit2/checkout/checkout_helpers.h	/^	int n_conflicts;$/;"	m	struct:__anon5b89200d0108	typeref:typename:int
n_dirty	my_project/libgit2/tests/libgit2/checkout/checkout_helpers.h	/^	int n_dirty;$/;"	m	struct:__anon5b89200d0108	typeref:typename:int
n_ignored	my_project/libgit2/tests/libgit2/checkout/checkout_helpers.h	/^	int n_ignored;$/;"	m	struct:__anon5b89200d0108	typeref:typename:int
n_untracked	my_project/libgit2/tests/libgit2/checkout/checkout_helpers.h	/^	int n_untracked;$/;"	m	struct:__anon5b89200d0108	typeref:typename:int
n_updates	my_project/libgit2/tests/libgit2/checkout/checkout_helpers.h	/^	int n_updates;$/;"	m	struct:__anon5b89200d0108	typeref:typename:int
nak_pkt	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int nak_pkt(git_pkt **out)$/;"	f	typeref:typename:int	file:
name	my_project/libgit2/.vscode/launch.json	/^            "name": "(gdb) Launch",$/;"	s	object:configurations.0
name	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar  *name;          \/* Points to the name in the pattern *\/$/;"	m	struct:named_group	typeref:typename:const pcre_uchar *
name	my_project/libgit2/deps/zlib/zlib.h	/^    Bytef   *name;      \/* pointer to zero-terminated file name or Z_NULL *\/$/;"	m	struct:gz_header_s	typeref:typename:Bytef *
name	my_project/libgit2/examples/lg2.c	/^	char *name;$/;"	m	struct:__anonbfe592f00108	typeref:typename:char *	file:
name	my_project/libgit2/include/git2/config.h	/^	const char *name;$/;"	m	struct:git_config_entry	typeref:typename:const char *
name	my_project/libgit2/include/git2/net.h	/^	char *name;$/;"	m	struct:git_remote_head	typeref:typename:char *
name	my_project/libgit2/include/git2/remote.h	/^	const char *name;$/;"	m	struct:git_remote_create_options	typeref:typename:const char *
name	my_project/libgit2/include/git2/types.h	/^	char *name; \/**< full name of the author *\/$/;"	m	struct:git_signature	typeref:typename:char *
name	my_project/libgit2/package.json	/^  "name": "libgit2",$/;"	s
name	my_project/libgit2/src/cli/cmd.h	/^	const char *name;$/;"	m	struct:__anoncf5572f40108	typeref:typename:const char *
name	my_project/libgit2/src/cli/cmd_config.c	/^static char *name, *value, *value_pattern;$/;"	v	typeref:typename:char *	file:
name	my_project/libgit2/src/cli/opt.h	/^	const char *name;$/;"	m	struct:cli_opt_spec	typeref:typename:const char *
name	my_project/libgit2/src/libgit2/attr.c	/^	git_attr_name name;$/;"	m	struct:__anon36621a0b0108	typeref:typename:git_attr_name	file:
name	my_project/libgit2/src/libgit2/attr_file.h	/^	char *name;$/;"	m	struct:__anon0df92d8f0608	typeref:typename:char *
name	my_project/libgit2/src/libgit2/attr_file.h	/^	const char *name;$/;"	m	struct:__anon0df92d8f0508	typeref:typename:const char *
name	my_project/libgit2/src/libgit2/config.c	/^	char *name;$/;"	m	struct:__anona0399aa60508	typeref:typename:char *	file:
name	my_project/libgit2/src/libgit2/config.c	/^	git_str *name;$/;"	m	struct:rename_data	typeref:typename:git_str *	file:
name	my_project/libgit2/src/libgit2/config_cache.c	/^	const char *name;$/;"	m	struct:map_data	typeref:typename:const char *	file:
name	my_project/libgit2/src/libgit2/config_file.c	/^	const char *name;$/;"	m	struct:write_data	typeref:typename:const char *	file:
name	my_project/libgit2/src/libgit2/describe.c	/^	struct commit_name *name;$/;"	m	struct:git_describe_result	typeref:struct:commit_name *	file:
name	my_project/libgit2/src/libgit2/describe.c	/^	struct commit_name *name;$/;"	m	struct:possible_tag	typeref:struct:commit_name *	file:
name	my_project/libgit2/src/libgit2/diff_driver.c	/^	char name[GIT_FLEX_ARRAY];$/;"	m	struct:git_diff_driver	typeref:typename:char[]	file:
name	my_project/libgit2/src/libgit2/indexer.c	/^	char name[(GIT_HASH_MAX_SIZE * 2) + 1];$/;"	m	struct:git_indexer	typeref:typename:char[]	file:
name	my_project/libgit2/src/libgit2/merge_driver.c	/^	char name[GIT_FLEX_ARRAY];$/;"	m	struct:__anonbbbb786b0108	typeref:typename:char[]	file:
name	my_project/libgit2/src/libgit2/refdb_fs.c	/^	char name[GIT_FLEX_ARRAY];$/;"	m	struct:packref	typeref:typename:char[]	file:
name	my_project/libgit2/src/libgit2/refs.h	/^	char name[GIT_FLEX_ARRAY];$/;"	m	struct:git_reference	typeref:typename:char[]
name	my_project/libgit2/src/libgit2/remote.h	/^	char *name;$/;"	m	struct:git_remote	typeref:typename:char *
name	my_project/libgit2/src/libgit2/repository.c	/^    const char *name;$/;"	m	struct:__anon453495b00108	typeref:typename:const char *	file:
name	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    const char *name;$/;"	m	struct:bio_method_st	typeref:typename:const char *
name	my_project/libgit2/src/libgit2/submodule.c	/^	char *name;$/;"	m	struct:__anon705203a00308	typeref:typename:char *	file:
name	my_project/libgit2/src/libgit2/submodule.h	/^	char *name;$/;"	m	struct:git_submodule	typeref:typename:char *
name	my_project/libgit2/src/libgit2/transaction.c	/^	const char *name;$/;"	m	struct:__anonbebdb9760208	typeref:typename:const char *	file:
name	my_project/libgit2/src/libgit2/transports/auth.h	/^	const char *name;$/;"	m	struct:__anon4118c2d60208	typeref:typename:const char *
name	my_project/libgit2/src/libgit2/tree-cache.h	/^	char name[GIT_FLEX_ARRAY];$/;"	m	struct:git_tree_cache	typeref:typename:char[]
name	my_project/libgit2/src/libgit2/tree.c	/^	char *name;$/;"	m	struct:__anon62877c000108	typeref:typename:char *	file:
name	my_project/libgit2/src/libgit2/userdiff.h	/^	const char *name;$/;"	m	struct:__anonf1be5fcd0108	typeref:typename:const char *
name	my_project/libgit2/src/libgit2/worktree.h	/^	char *name;$/;"	m	struct:git_worktree	typeref:typename:char *
name	my_project/libgit2/src/util/date.c	/^	const char *name;$/;"	m	struct:__anon0f244edf0208	typeref:typename:const char *	file:
name	my_project/libgit2/src/util/date.c	/^	const char *name;$/;"	m	struct:special	typeref:typename:const char *	file:
name	my_project/libgit2/tests/clar/clar.c	/^	const char *name;$/;"	m	struct:clar_func	typeref:typename:const char *	file:
name	my_project/libgit2/tests/clar/clar.c	/^	const char *name;$/;"	m	struct:clar_suite	typeref:typename:const char *	file:
name	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^	const char *name;$/;"	m	struct:method	typeref:typename:const char *	file:
name	my_project/libgit2/tests/libgit2/commit/parse.c	/^	const char *name;$/;"	m	struct:__anon39d5c3ee0208	typeref:typename:const char *	file:
name	my_project/libgit2/tests/libgit2/config/memory.c	/^	const char *name;$/;"	m	struct:expected_entry	typeref:typename:const char *	file:
name	my_project/libgit2/tests/libgit2/online/push_util.h	/^	char *name;$/;"	m	struct:__anonec09f7510108	typeref:typename:char *
name	my_project/libgit2/tests/libgit2/online/push_util.h	/^	const char *name;$/;"	m	struct:__anonec09f7510308	typeref:typename:const char *
name	my_project/libgit2/tests/util/dirent.c	/^	char *name; \/* filename		*\/$/;"	m	struct:name_data	typeref:typename:char *	file:
name	sdb.c	/^  const char *name;$/;"	m	struct:__anon10587f2f0108	typeref:typename:const char *	file:
name_checked	my_project/libgit2/src/libgit2/describe.c	/^	unsigned name_checked:1;$/;"	m	struct:commit_name	typeref:typename:unsigned:1	file:
name_collision	my_project/libgit2/src/libgit2/checkout.c	/^	unsigned int name_collision:1,$/;"	m	struct:__anon35c6e5c60308	typeref:typename:unsigned int:1	file:
name_count	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int    name_count;              \/* Number of names in name table *\/$/;"	m	struct:match_data	typeref:typename:int
name_count	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 name_count;         \/* Number of name items *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
name_count	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 name_count;         \/* Number of name items *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
name_count	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_sw name_count;$/;"	m	struct:compiler_common	typeref:typename:sljit_sw	file:
name_data	my_project/libgit2/tests/util/dirent.c	/^typedef struct name_data {$/;"	s	file:
name_data	my_project/libgit2/tests/util/dirent.c	/^} name_data;$/;"	t	typeref:struct:name_data	file:
name_entry_eq	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^static int name_entry_eq(const char *expected, const char *actual)$/;"	f	typeref:typename:int	file:
name_entry_eq_merge_name_entry	my_project/libgit2/tests/libgit2/merge/merge_helpers.c	/^static int name_entry_eq_merge_name_entry(const struct merge_name_entry *expected, const git_ind/;"	f	typeref:typename:int	file:
name_entry_size	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int    name_entry_size;         \/* Size of entry in names table *\/$/;"	m	struct:match_data	typeref:typename:int
name_entry_size	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int  name_entry_size;             \/* Size of each entry *\/$/;"	m	struct:compile_data	typeref:typename:int
name_entry_size	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 name_entry_size;    \/* Size of any name items *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
name_entry_size	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 name_entry_size;    \/* Size of any name items *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
name_entry_size	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_sw name_entry_size;$/;"	m	struct:compiler_common	typeref:typename:sljit_sw	file:
name_for_method	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static const char *name_for_method(git_http_method method)$/;"	f	typeref:typename:const char *	file:
name_hash	my_project/libgit2/src/libgit2/attr_file.h	/^	uint32_t name_hash;$/;"	m	struct:__anon0df92d8f0508	typeref:typename:uint32_t
name_hash	my_project/libgit2/src/libgit2/attr_file.h	/^	uint32_t name_hash;$/;"	m	struct:__anon0df92d8f0608	typeref:typename:uint32_t
name_hash	my_project/libgit2/src/libgit2/pack-objects.c	/^static unsigned name_hash(const char *name)$/;"	f	typeref:typename:unsigned	file:
name_is_valid	my_project/libgit2/tests/libgit2/refs/branches/name.c	/^static int name_is_valid(const char *name)$/;"	f	typeref:typename:int	file:
name_is_valid	my_project/libgit2/tests/libgit2/refs/tags/name.c	/^static int name_is_valid(const char *name)$/;"	f	typeref:typename:int	file:
name_max	my_project/libgit2/deps/zlib/zlib.h	/^    uInt    name_max;   \/* space at name (only when reading header) *\/$/;"	m	struct:gz_header_s	typeref:typename:uInt
name_offset	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 name_offset;$/;"	m	struct:__anon9562267c0508	typeref:typename:pcre_uint16
name_offset	my_project/libgit2/src/libgit2/remote.c	/^static const char *name_offset(size_t *len_out, const char *name)$/;"	f	typeref:typename:const char *	file:
name_only_cmp	my_project/libgit2/tests/util/sortedcache.c	/^static int name_only_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
name_table	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uchar *name_table;           \/* The name\/number table *\/$/;"	m	struct:compile_data	typeref:typename:pcre_uchar *
name_table	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uchar *name_table;         \/* Table of names *\/$/;"	m	struct:match_data	typeref:typename:pcre_uchar *
name_table	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  pcre_uchar *name_table;$/;"	m	struct:compiler_common	typeref:typename:pcre_uchar *	file:
name_table_offset	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 name_table_offset;  \/* Offset to name table that follows *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
name_table_offset	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 name_table_offset;  \/* Offset to name table that follows *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
named_group	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct named_group {$/;"	s
named_group	my_project/libgit2/deps/pcre/pcre_internal.h	/^} named_group;$/;"	t	typeref:struct:named_group
named_group_list_size	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int  named_group_list_size;       \/* Number of entries in the list *\/$/;"	m	struct:compile_data	typeref:typename:int
named_groups	my_project/libgit2/deps/pcre/pcre_internal.h	/^  named_group *named_groups;        \/* Points to vector in pre-compile *\/$/;"	m	struct:compile_data	typeref:typename:named_group *
namedrefcount	my_project/libgit2/deps/pcre/pcre_internal.h	/^  unsigned int namedrefcount;       \/* Number of backreferences by name *\/$/;"	m	struct:compile_data	typeref:typename:unsigned int
namelen	my_project/libgit2/src/libgit2/tree-cache.h	/^	size_t namelen;$/;"	m	struct:git_tree_cache	typeref:typename:size_t
names	my_project/libgit2/src/libgit2/describe.c	/^	git_oidmap *names;$/;"	m	struct:get_name_data	typeref:typename:git_oidmap *	file:
names	my_project/libgit2/src/libgit2/index.h	/^	git_vector names;$/;"	m	struct:git_index	typeref:typename:git_vector
names	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	const char **names;$/;"	m	struct:__anone9d3a2f30108	typeref:typename:const char **
names	my_project/libgit2/tests/util/dirent.c	/^	name_data *names; \/* name state data	*\/$/;"	m	struct:walk_data	typeref:typename:name_data *	file:
names_found	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int  names_found;                 \/* Number of entries so far *\/$/;"	m	struct:compile_data	typeref:typename:int
namespace	my_project/libgit2/src/libgit2/repository.h	/^	char *namespace;$/;"	m	struct:git_repository	typeref:typename:char *
nanoseconds	my_project/libgit2/include/git2/index.h	/^	uint32_t nanoseconds;$/;"	m	struct:__anonf38c49720108	typeref:typename:uint32_t
nanoseconds	my_project/libgit2/src/libgit2/index.c	/^	uint32_t nanoseconds;$/;"	m	struct:entry_time	typeref:typename:uint32_t	file:
native	my_project/libgit2/src/util/win32/thread.h	/^	} native;$/;"	m	struct:__anond08cd1a00308	typeref:union:__anond08cd1a00308::__anond08cd1a0040a
nattrs	my_project/libgit2/src/libgit2/filter.c	/^	size_t nattrs, nmatches;$/;"	m	struct:__anon9372afd60208	typeref:typename:size_t	file:
ncha	my_project/libgit2/deps/xdiff/xprepare.c	/^	chastore_t ncha;$/;"	m	struct:s_xdlclassifier	typeref:typename:chastore_t	file:
ncode	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned ncode;             \/* number of code length code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
ndist	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned ndist;             \/* number of distance code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
need_more	my_project/libgit2/deps/zlib/deflate.c	/^    need_more,      \/* block not completed, need more input or more output *\/$/;"	e	enum:__anon0b76eead0103	file:
need_pack	my_project/libgit2/src/libgit2/remote.h	/^	unsigned int need_pack;$/;"	m	struct:git_remote	typeref:typename:unsigned int
needs_next	my_project/libgit2/src/util/fs_path.h	/^	unsigned int needs_next;$/;"	m	struct:git_fs_path_diriter	typeref:typename:unsigned int
needs_probe	my_project/libgit2/src/libgit2/transports/http.c	/^static bool needs_probe(http_stream *stream)$/;"	f	typeref:typename:bool	file:
needs_sort	my_project/libgit2/src/cli/opt.h	/^	unsigned int needs_sort : 1,$/;"	m	struct:cli_opt_parser	typeref:typename:unsigned int:1
nego	my_project/libgit2/src/libgit2/remote.h	/^	git_fetch_negotiation nego;$/;"	m	struct:git_remote	typeref:typename:git_fetch_negotiation
negotiate	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_buf negotiate;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_buf
negotiation_cb	my_project/libgit2/tests/libgit2/network/remote/push.c	/^static int negotiation_cb(const git_push_update **updates, size_t len, void *payload)$/;"	f	typeref:typename:int	file:
net_set_error	my_project/libgit2/src/libgit2/streams/socket.c	/^static void net_set_error(const char *str)$/;"	f	typeref:typename:void	file:
network_packetsize	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int network_packetsize(size_t received, void *payload)$/;"	f	typeref:typename:int	file:
network_packetsize_payload	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^struct network_packetsize_payload$/;"	s	file:
new_backend	my_project/libgit2/tests/libgit2/odb/sorting.c	/^static git_odb_backend *new_backend(size_t position)$/;"	f	typeref:typename:git_odb_backend *	file:
new_binary_base85	my_project/libgit2/tests/libgit2/diff/binary.c	/^	git_str new_binary_base85;$/;"	m	struct:diff_data	typeref:typename:git_str	file:
new_binary_inflatedlen	my_project/libgit2/tests/libgit2/diff/binary.c	/^	size_t new_binary_inflatedlen;$/;"	m	struct:diff_data	typeref:typename:size_t	file:
new_binary_type	my_project/libgit2/tests/libgit2/diff/binary.c	/^	git_diff_binary_t new_binary_type;$/;"	m	struct:diff_data	typeref:typename:git_diff_binary_t	file:
new_cache_object	my_project/libgit2/src/libgit2/pack.c	/^static git_pack_cache_entry *new_cache_object(git_rawobj *source)$/;"	f	typeref:typename:git_pack_cache_entry *	file:
new_entries	my_project/libgit2/src/libgit2/index.c	/^	git_vector *new_entries;$/;"	m	struct:read_tree_data	typeref:typename:git_vector *	file:
new_file	my_project/libgit2/include/git2/diff.h	/^	git_diff_binary_file new_file; \/**< The contents of the new file. *\/$/;"	m	struct:__anon7f3f1dd30908	typeref:typename:git_diff_binary_file
new_file	my_project/libgit2/include/git2/diff.h	/^	git_diff_file new_file;$/;"	m	struct:__anon7f3f1dd30508	typeref:typename:git_diff_file
new_hunk	my_project/libgit2/src/libgit2/blame.c	/^static git_blame_hunk *new_hunk($/;"	f	typeref:typename:git_blame_hunk *	file:
new_id	my_project/libgit2/tests/libgit2/diff/binary.c	/^	git_oid new_id;$/;"	m	struct:diff_data	typeref:typename:git_oid	file:
new_iter	my_project/libgit2/src/libgit2/diff_generate.c	/^	git_iterator *new_iter;$/;"	m	struct:__anonff5a2cd30208	typeref:typename:git_iterator *	file:
new_lineno	my_project/libgit2/include/git2/diff.h	/^	int    new_lineno;   \/**< Line number in new file or -1 for deleted line *\/$/;"	m	struct:__anon7f3f1dd30c08	typeref:typename:int
new_lineno	my_project/libgit2/src/libgit2/diff_xdiff.c	/^	int old_lineno, new_lineno;$/;"	m	struct:__anon544d96590108	typeref:typename:int	file:
new_lines	my_project/libgit2/include/git2/diff.h	/^	int    new_lines;     \/**< Number of lines in new_file *\/$/;"	m	struct:__anon7f3f1dd30a08	typeref:typename:int
new_name	my_project/libgit2/src/libgit2/refs.c	/^    git_refname_t new_name;$/;"	m	struct:__anon5cf2b4200208	typeref:typename:git_refname_t	file:
new_oid	my_project/libgit2/tests/libgit2/online/push_util.h	/^	git_oid new_oid;$/;"	m	struct:__anonec09f7510108	typeref:typename:git_oid
new_path	my_project/libgit2/src/libgit2/patch_parse.c	/^	char *old_path, *new_path;$/;"	m	struct:__anonddb10c3a0108	typeref:typename:char *	file:
new_path	my_project/libgit2/tests/libgit2/diff/binary.c	/^	char *new_path;$/;"	m	struct:diff_data	typeref:typename:char *	file:
new_prefix	my_project/libgit2/include/git2/diff.h	/^	const char *new_prefix;$/;"	m	struct:__anon7f3f1dd30608	typeref:typename:const char *
new_prefix	my_project/libgit2/src/libgit2/diff_print.c	/^	const char *new_prefix;$/;"	m	struct:__anon0d2887b50108	typeref:typename:const char *	file:
new_prefix	my_project/libgit2/src/libgit2/patch_parse.c	/^	char *old_prefix, *new_prefix;$/;"	m	struct:__anonddb10c3a0108	typeref:typename:char *	file:
new_ptr	my_project/libgit2/deps/zlib/zutil.c	/^    voidpf new_ptr;$/;"	m	struct:ptr_table_s	typeref:typename:voidpf	file:
new_recursive	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define new_recursive /;"	d	file:
new_ref	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^static const char *new_ref = "refs\/heads\/test-reflog";$/;"	v	typeref:typename:const char *	file:
new_remote_name	my_project/libgit2/src/libgit2/remote.c	/^	const char *new_remote_name;$/;"	m	struct:update_data	typeref:typename:const char *	file:
new_src	my_project/libgit2/src/libgit2/diff.h	/^	git_iterator_t    new_src;$/;"	m	struct:git_diff	typeref:typename:git_iterator_t
new_start	my_project/libgit2/include/git2/diff.h	/^	int    new_start;     \/**< Starting line number in new_file *\/$/;"	m	struct:__anon7f3f1dd30a08	typeref:typename:int
new_window_locked	my_project/libgit2/src/libgit2/mwindow.c	/^static git_mwindow *new_window_locked($/;"	f	typeref:typename:git_mwindow *	file:
newest_commit	my_project/libgit2/include/git2/blame.h	/^	git_oid newest_commit;$/;"	m	struct:git_blame_options	typeref:typename:git_oid
newline	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int newline;$/;"	m	struct:compiler_common	typeref:typename:int	file:
newname	my_project/libgit2/tests/libgit2/status/renames.c	/^	const char *newname;$/;"	m	struct:status_entry	typeref:typename:const char *	file:
newptrb	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define newptrb /;"	d	file:
next	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define next /;"	d	file:
next	my_project/libgit2/deps/pcre/pcre_internal.h	/^  struct open_capitem *next;    \/* Chain link *\/$/;"	m	struct:open_capitem	typeref:struct:open_capitem *
next	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct jump_list *next;$/;"	m	struct:jump_list	typeref:struct:jump_list *	file:
next	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct label_addr_list *next;$/;"	m	struct:label_addr_list	typeref:struct:label_addr_list *	file:
next	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct recurse_entry *next;$/;"	m	struct:recurse_entry	typeref:struct:recurse_entry *	file:
next	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct stub_list *next;$/;"	m	struct:stub_list	typeref:struct:stub_list *	file:
next	my_project/libgit2/deps/xdiff/xdiffi.h	/^	struct s_xdchange *next;$/;"	m	struct:s_xdchange	typeref:struct:s_xdchange *
next	my_project/libgit2/deps/xdiff/xhistogram.c	/^		struct record *next;$/;"	m	struct:histindex::record	typeref:struct:record *	file:
next	my_project/libgit2/deps/xdiff/xmerge.c	/^	struct s_xdmerge *next;$/;"	m	struct:s_xdmerge	typeref:struct:s_xdmerge *	file:
next	my_project/libgit2/deps/xdiff/xpatience.c	/^		struct entry *next, *previous;$/;"	m	struct:hashmap::entry	typeref:struct:entry *	file:
next	my_project/libgit2/deps/xdiff/xprepare.c	/^	struct s_xdlclass *next;$/;"	m	struct:s_xdlclass	typeref:struct:s_xdlclass *	file:
next	my_project/libgit2/deps/xdiff/xtypes.h	/^	struct s_chanode *next;$/;"	m	struct:s_chanode	typeref:struct:s_chanode *
next	my_project/libgit2/deps/xdiff/xtypes.h	/^	struct s_xrecord *next;$/;"	m	struct:s_xrecord	typeref:struct:s_xrecord *
next	my_project/libgit2/deps/zlib/inflate.h	/^    code FAR *next;             \/* next available space in codes[] *\/$/;"	m	struct:inflate_state	typeref:typename:code FAR *
next	my_project/libgit2/deps/zlib/zlib.h	/^    unsigned char *next;$/;"	m	struct:gzFile_s	typeref:typename:unsigned char *
next	my_project/libgit2/src/libgit2/blame.h	/^	struct git_blame__entry *next;$/;"	m	struct:git_blame__entry	typeref:struct:git_blame__entry *
next	my_project/libgit2/src/libgit2/commit_list.h	/^	struct git_commit_list *next;$/;"	m	struct:git_commit_list	typeref:struct:git_commit_list *
next	my_project/libgit2/src/libgit2/config_list.c	/^	struct config_entry_list *next;$/;"	m	struct:config_entry_list	typeref:struct:config_entry_list *	file:
next	my_project/libgit2/src/libgit2/delta.c	/^	struct index_entry *next;$/;"	m	struct:index_entry	typeref:struct:index_entry *	file:
next	my_project/libgit2/src/libgit2/mwindow.h	/^	struct git_mwindow *next;$/;"	m	struct:git_mwindow	typeref:struct:git_mwindow *
next	my_project/libgit2/src/util/pool.c	/^	git_pool_page *next;$/;"	m	struct:git_pool_page	typeref:typename:git_pool_page *	file:
next	my_project/libgit2/tests/clar/clar.c	/^	struct clar_error *next;$/;"	m	struct:clar_error	typeref:struct:clar_error *	file:
next	my_project/libgit2/tests/clar/clar.c	/^	struct clar_explicit *next;$/;"	m	struct:clar_explicit	typeref:struct:clar_explicit *	file:
next	my_project/libgit2/tests/clar/clar.c	/^	struct clar_report *next;$/;"	m	struct:clar_report	typeref:struct:clar_report *	file:
next	my_project/libgit2/tests/libgit2/filter/stream.c	/^	git_writestream *next;$/;"	m	struct:compress_stream	typeref:typename:git_writestream *	file:
next_bio	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    struct bio_st *next_bio;    \/* used by filter BIOs *\/$/;"	m	struct:bio_st	typeref:struct:bio_st *
next_component	my_project/libgit2/src/libgit2/tree.c	/^static bool next_component(git_str *out, const char *in)$/;"	f	typeref:typename:bool	file:
next_head	my_project/libgit2/src/libgit2/remote.c	/^static int next_head(const git_remote *remote, git_vector *refs,$/;"	f	typeref:typename:int	file:
next_hfs_char	my_project/libgit2/src/libgit2/path.c	/^static int32_t next_hfs_char(const char **in, size_t *len)$/;"	f	typeref:typename:int32_t	file:
next_idx	my_project/libgit2/src/libgit2/iterator.c	/^	size_t next_idx;$/;"	m	struct:__anon2f88b95a0408	typeref:typename:size_t	file:
next_idx	my_project/libgit2/src/libgit2/iterator.c	/^	size_t next_idx;$/;"	m	struct:__anon2f88b95a0708	typeref:typename:size_t	file:
next_idx	my_project/libgit2/src/libgit2/iterator.c	/^	size_t next_idx;$/;"	m	struct:__anon2f88b95a0908	typeref:typename:size_t	file:
next_in	my_project/libgit2/deps/zlib/zlib.h	/^    z_const Bytef *next_in;     \/* next input byte *\/$/;"	m	struct:z_stream_s	typeref:typename:z_const Bytef *
next_item_length	my_project/libgit2/deps/pcre/pcre.h	/^  int          next_item_length;  \/* Length of next item in the pattern *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
next_item_length	my_project/libgit2/deps/pcre/pcre.h	/^  int          next_item_length;  \/* Length of next item in the pattern *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
next_item_length	my_project/libgit2/deps/pcre/pcre.h	/^  int          next_item_length;  \/* Length of next item in the pattern *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
next_line	my_project/libgit2/src/libgit2/trailer.c	/^static const char *next_line(const char *str)$/;"	f	typeref:typename:const char *	file:
next_opcode	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar *next_opcode(compiler_common *common, pcre_uchar *cc)$/;"	f	typeref:typename:pcre_uchar *	file:
next_out	my_project/libgit2/deps/zlib/zlib.h	/^    Bytef    *next_out; \/* next output byte will go here *\/$/;"	m	struct:z_stream_s	typeref:typename:Bytef *
next_pos	my_project/libgit2/src/libgit2/merge.c	/^	size_t next_pos;$/;"	m	struct:__anon7b397d600208	typeref:typename:size_t	file:
next_ptr	my_project/libgit2/deps/zlib/zutil.c	/^local int next_ptr = 0;$/;"	v	typeref:typename:local int
next_ptrs	my_project/libgit2/deps/xdiff/xhistogram.c	/^	unsigned int *next_ptrs;$/;"	m	struct:histindex	typeref:typename:unsigned int *	file:
next_state	my_project/libgit2/src/libgit2/patch_parse.c	/^	parse_header_state next_state;$/;"	m	struct:__anonddb10c3a0308	typeref:typename:parse_header_state	file:
next_token	my_project/libgit2/src/libgit2/transports/auth.h	/^	int (*next_token)(git_str *out, git_http_auth_context *ctx, git_credential *cred);$/;"	m	struct:git_http_auth_context	typeref:typename:int (*)(git_str * out,git_http_auth_context * ctx,git_credential * cred)
nextbacktracks	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *nextbacktracks;$/;"	m	struct:backtrack_common	typeref:typename:jump_list *	file:
nfc	my_project/libgit2/tests/libgit2/status/renames.c	/^static char *nfc = "\\xC3\\x85\\x73\\x74\\x72\\xC3\\xB6\\x6D";$/;"	v	typeref:typename:char *	file:
nfc	my_project/libgit2/tests/util/iconv.c	/^static char *nfc = "\\xC3\\x85\\x73\\x74\\x72\\xC3\\xB6\\x6D";$/;"	v	typeref:typename:char *	file:
nfc_file	my_project/libgit2/src/util/fs_path.c	/^static const char *nfc_file = "\\xC3\\x85\\x73\\x74\\x72\\xC3\\xB6\\x6D";$/;"	v	typeref:typename:const char *	file:
nfd	my_project/libgit2/tests/libgit2/status/renames.c	/^static char *nfd = "\\x41\\xCC\\x8A\\x73\\x74\\x72\\x6F\\xCC\\x88\\x6D";$/;"	v	typeref:typename:char *	file:
nfd	my_project/libgit2/tests/util/iconv.c	/^static char *nfd = "\\x41\\xCC\\x8A\\x73\\x74\\x72\\x6F\\xCC\\x88\\x6D";$/;"	v	typeref:typename:char *	file:
nfd_file	my_project/libgit2/src/util/fs_path.c	/^static const char *nfd_file = "\\x41\\xCC\\x8A\\x73\\x74\\x72\\x6F\\xCC\\x88\\x6D";$/;"	v	typeref:typename:const char *	file:
nfile	my_project/libgit2/src/libgit2/patch_generate.h	/^	git_diff_file_content nfile;$/;"	m	struct:git_patch_generated	typeref:typename:git_diff_file_content
nfiles	my_project/libgit2/include/git2/diff.h	/^	uint16_t      nfiles;	   \/**< number of files in this delta *\/$/;"	m	struct:__anon7f3f1dd30508	typeref:typename:uint16_t
ng_pkt	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int ng_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
nice_length	my_project/libgit2/deps/zlib/deflate.c	/^   ush nice_length; \/* quit search above this match length *\/$/;"	m	struct:config_s	typeref:typename:ush	file:
nice_match	my_project/libgit2/deps/zlib/deflate.h	/^    int nice_match; \/* Stop searching when current match exceeds this *\/$/;"	m	struct:internal_state	typeref:typename:int
nitem	my_project/libgit2/src/libgit2/diff_generate.c	/^	const git_index_entry *nitem;$/;"	m	struct:__anonff5a2cd30208	typeref:typename:const git_index_entry *	file:
nl	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uchar nl[4];                 \/* Newline string when fixed *\/$/;"	m	struct:dfa_match_data	typeref:typename:pcre_uchar[4]
nl	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uchar nl[4];                 \/* Newline string when fixed length *\/$/;"	m	struct:compile_data	typeref:typename:pcre_uchar[4]
nl	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uchar nl[4];               \/* Newline string when fixed *\/$/;"	m	struct:match_data	typeref:typename:pcre_uchar[4]
nl_len	my_project/libgit2/src/cli/progress.c	/^GIT_INLINE(size_t) nl_len(bool *has_nl, const char *str, size_t len)$/;"	f	typeref:typename:size_t
nlen	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned nlen;              \/* number of length code lengths *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
nllen	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int    nllen;                   \/* Newline string length *\/$/;"	m	struct:match_data	typeref:typename:int
nllen	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int   nllen;                      \/* Newline string length *\/$/;"	m	struct:dfa_match_data	typeref:typename:int
nllen	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int  nllen;                       \/* Newline string length *\/$/;"	m	struct:compile_data	typeref:typename:int
nlmax	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u32 nlmax;$/;"	m	struct:compiler_common	typeref:typename:sljit_u32	file:
nlmin	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u32 nlmin;$/;"	m	struct:compiler_common	typeref:typename:sljit_u32	file:
nltype	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int    nltype;                  \/* Newline type *\/$/;"	m	struct:match_data	typeref:typename:int
nltype	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int   nltype;                     \/* Newline type *\/$/;"	m	struct:dfa_match_data	typeref:typename:int
nltype	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int  nltype;                      \/* Newline type *\/$/;"	m	struct:compile_data	typeref:typename:int
nltype	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int nltype;$/;"	m	struct:compiler_common	typeref:typename:int	file:
nmatches	my_project/libgit2/src/libgit2/filter.c	/^	size_t nattrs, nmatches;$/;"	m	struct:__anon9372afd60208	typeref:typename:size_t	file:
no_alternatives	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static int no_alternatives(pcre_uchar *cc)$/;"	f	typeref:typename:int	file:
no_check_cert_flags	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static const int no_check_cert_flags = SECURITY_FLAG_IGNORE_CERT_CN_INVALID |$/;"	v	typeref:typename:const int	file:
no_commit	my_project/libgit2/examples/merge.c	/^	unsigned int no_commit : 1;$/;"	m	struct:merge_options	typeref:typename:unsigned int:1	file:
no_error	my_project/libgit2/src/util/errors.c	/^static git_error no_error = {$/;"	v	typeref:typename:git_error	file:
no_frame	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  no_frame = -1,$/;"	e	enum:frame_types	file:
no_index	my_project/libgit2/examples/diff.c	/^	int no_index;$/;"	m	struct:diff_options	typeref:typename:int	file:
no_nl_len	my_project/libgit2/src/cli/progress.c	/^GIT_INLINE(size_t) no_nl_len(const char *str, size_t len)$/;"	f	typeref:typename:size_t
no_options	my_project/libgit2/examples/init.c	/^	int no_options;$/;"	m	struct:init_opts	typeref:typename:int	file:
no_sideband	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int no_sideband($/;"	f	typeref:typename:int	file:
no_stack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  no_stack = -2$/;"	e	enum:frame_types	file:
no_symlinks	my_project/libgit2/src/libgit2/index.h	/^	unsigned int no_symlinks:1;$/;"	m	struct:git_index	typeref:typename:unsigned int:1
nodate	my_project/libgit2/src/util/date.c	/^static int nodate(struct tm *tm)$/;"	f	typeref:typename:int	file:
node_count	my_project/libgit2/src/libgit2/oid.c	/^	size_t node_count, size;$/;"	m	struct:git_oid_shorten	typeref:typename:size_t	file:
node_index	my_project/libgit2/src/libgit2/oid.c	/^typedef short node_index;$/;"	t	typeref:typename:short	file:
nodes	my_project/libgit2/src/libgit2/oid.c	/^	trie_node *nodes;$/;"	m	struct:git_oid_shorten	typeref:typename:trie_node *	file:
nomatch_mark	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const  pcre_uchar *nomatch_mark;\/* Mark pointer to pass back on failure *\/$/;"	m	struct:match_data	typeref:typename:const pcre_uchar *
non_existing_tag_ref_name	my_project/libgit2/tests/libgit2/refs/read.c	/^static const char *non_existing_tag_ref_name = "refs\/tags\/i-do-not-exist";$/;"	v	typeref:typename:const char *	file:
nonce	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	uint64_t nonce;$/;"	m	struct:__anondc54b7e10408	typeref:typename:uint64_t
nonce	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	uint64_t nonce;$/;"	m	struct:ntlm_client	typeref:typename:uint64_t
nonexistent	my_project/libgit2/src/libgit2/attr_file.h	/^	unsigned int nonexistent:1;$/;"	m	struct:__anon0df92d8f0708	typeref:typename:unsigned int:1
nonprintable	my_project/libgit2/src/util/str.h	/^	unsigned int printable, nonprintable; \/* These are just approximations! *\/$/;"	m	struct:__anon85703a5f0208	typeref:typename:unsigned int
normalize_apply_options	my_project/libgit2/src/libgit2/stash.c	/^static void normalize_apply_options($/;"	f	typeref:typename:void	file:
normalize_checkout_options_for_apply	my_project/libgit2/src/libgit2/rebase.c	/^static void normalize_checkout_options_for_apply($/;"	f	typeref:typename:void	file:
normalize_filemode	my_project/libgit2/src/libgit2/tree.c	/^GIT_INLINE(git_filemode_t) normalize_filemode(git_filemode_t filemode)$/;"	f	typeref:typename:git_filemode_t
normalize_find_opts	my_project/libgit2/src/libgit2/diff_tform.c	/^static int normalize_find_opts($/;"	f	typeref:typename:int	file:
normalize_format_options	my_project/libgit2/src/libgit2/describe.c	/^static int normalize_format_options($/;"	f	typeref:typename:int	file:
normalize_namespace	my_project/libgit2/src/libgit2/notes.c	/^static int normalize_namespace(git_str *out, git_repository *repo, const char *notes_ref)$/;"	f	typeref:typename:int	file:
normalize_options	my_project/libgit2/src/libgit2/blame.c	/^static int normalize_options($/;"	f	typeref:typename:int	file:
normalize_options	my_project/libgit2/src/libgit2/describe.c	/^static int normalize_options($/;"	f	typeref:typename:int	file:
normalize_options	my_project/libgit2/src/libgit2/odb.c	/^static void normalize_options($/;"	f	typeref:typename:void	file:
normalize_options	my_project/libgit2/src/libgit2/odb_loose.c	/^static void normalize_options($/;"	f	typeref:typename:void	file:
normalize_section	my_project/libgit2/src/libgit2/config.c	/^static int normalize_section(char *start, char *end)$/;"	f	typeref:typename:int	file:
not	my_project/libgit2/examples/rev-parse.c	/^	int not;$/;"	m	struct:parse_state	typeref:typename:int	file:
not_a_local_branch	my_project/libgit2/src/libgit2/branch.c	/^static int not_a_local_branch(const char *reference_name)$/;"	f	typeref:typename:int	file:
notbol	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   notbol;                  \/* NOTBOL flag *\/$/;"	m	struct:match_data	typeref:typename:BOOL
notbol	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u8 notbol;$/;"	m	struct:jit_arguments	typeref:typename:sljit_u8	file:
note_cancel_cb	my_project/libgit2/tests/libgit2/notes/notes.c	/^static int note_cancel_cb($/;"	f	typeref:typename:int	file:
note_create_payload	my_project/libgit2/tests/libgit2/notes/notes.c	/^struct note_create_payload {$/;"	s	file:
note_error_notfound	my_project/libgit2/src/libgit2/notes.c	/^static int note_error_notfound(void)$/;"	f	typeref:typename:int	file:
note_get_default_ref	my_project/libgit2/src/libgit2/notes.c	/^static int note_get_default_ref(git_str *out, git_repository *repo)$/;"	f	typeref:typename:int	file:
note_list_cb	my_project/libgit2/tests/libgit2/notes/notes.c	/^static int note_list_cb($/;"	f	typeref:typename:int	file:
note_list_create_cb	my_project/libgit2/tests/libgit2/notes/notes.c	/^static int note_list_create_cb($/;"	f	typeref:typename:int	file:
note_lookup	my_project/libgit2/src/libgit2/notes.c	/^static int note_lookup($/;"	f	typeref:typename:int	file:
note_new	my_project/libgit2/src/libgit2/notes.c	/^static int note_new($/;"	f	typeref:typename:int	file:
note_oid	my_project/libgit2/tests/libgit2/notes/notes.c	/^	const char *note_oid;$/;"	m	struct:note_create_payload	typeref:typename:const char *	file:
note_remove	my_project/libgit2/src/libgit2/notes.c	/^static int note_remove($/;"	f	typeref:typename:int	file:
note_sha	my_project/libgit2/tests/libgit2/notes/notes.c	/^	const char *note_sha;$/;"	m	struct:__anon150e507c0108	typeref:typename:const char *	file:
note_write	my_project/libgit2/src/libgit2/notes.c	/^static int note_write($/;"	f	typeref:typename:int	file:
notempty	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   notempty;                \/* Empty string match not wanted *\/$/;"	m	struct:match_data	typeref:typename:BOOL
notempty	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u8 notempty;$/;"	m	struct:jit_arguments	typeref:typename:sljit_u8	file:
notempty_atstart	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   notempty_atstart;        \/* Empty string match at start not wanted *\/$/;"	m	struct:match_data	typeref:typename:BOOL
notempty_atstart	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u8 notempty_atstart;$/;"	m	struct:jit_arguments	typeref:typename:sljit_u8	file:
noteol	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   noteol;                  \/* NOTEOL flag *\/$/;"	m	struct:match_data	typeref:typename:BOOL
noteol	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u8 noteol;$/;"	m	struct:jit_arguments	typeref:typename:sljit_u8	file:
notes_ref_lookup	my_project/libgit2/src/libgit2/rebase.c	/^static int notes_ref_lookup(git_str *out, git_rebase *rebase)$/;"	f	typeref:typename:int	file:
notify_cb	my_project/libgit2/include/git2/checkout.h	/^	git_checkout_notify_cb notify_cb;$/;"	m	struct:git_checkout_options	typeref:typename:git_checkout_notify_cb
notify_cb	my_project/libgit2/include/git2/diff.h	/^	git_diff_notify_cb   notify_cb;$/;"	m	struct:__anon7f3f1dd30608	typeref:typename:git_diff_notify_cb
notify_cb__basic	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^static int notify_cb__basic($/;"	f	typeref:typename:int	file:
notify_cb__racy_rmdir	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^static int notify_cb__racy_rmdir($/;"	f	typeref:typename:int	file:
notify_counter	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^static int notify_counter($/;"	f	typeref:typename:int	file:
notify_counts	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^} notify_counts;$/;"	t	typeref:struct:__anon79a1dca80108	file:
notify_data	my_project/libgit2/tests/libgit2/checkout/index.c	/^struct notify_data {$/;"	s	file:
notify_expected	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^} notify_expected;$/;"	t	typeref:struct:__anone9d3a2f30208
notify_flags	my_project/libgit2/include/git2/checkout.h	/^	unsigned int notify_flags; \/**< see `git_checkout_notify_t` above *\/$/;"	m	struct:git_checkout_options	typeref:typename:unsigned int
notify_payload	my_project/libgit2/include/git2/checkout.h	/^	void *notify_payload;$/;"	m	struct:git_checkout_options	typeref:typename:void *
now_in_ms	my_project/libgit2/tests/libgit2/perf/helper__perf__timer.c	/^static uint32_t now_in_ms(void)$/;"	f	typeref:typename:uint32_t	file:
npaths	my_project/libgit2/examples/status.c	/^	int npaths;$/;"	m	struct:status_opts	typeref:typename:int	file:
nr	my_project/libgit2/deps/xdiff/xpatience.c	/^	int nr, alloc;$/;"	m	struct:hashmap	typeref:typename:int	file:
nr_alloc	my_project/libgit2/src/libgit2/pack-objects.h	/^	size_t nr_alloc;$/;"	m	struct:git_packbuilder	typeref:typename:size_t
nr_deltified	my_project/libgit2/src/libgit2/pack-objects.h	/^		nr_deltified,$/;"	m	struct:git_packbuilder	typeref:typename:uint32_t
nr_frames	my_project/libgit2/src/util/win32/w32_leakcheck.h	/^	unsigned int nr_frames;$/;"	m	struct:__anonc260a6be0108	typeref:typename:unsigned int
nr_objects	my_project/libgit2/src/libgit2/indexer.c	/^	size_t nr_objects;$/;"	m	struct:git_indexer	typeref:typename:size_t	file:
nr_objects	my_project/libgit2/src/libgit2/pack-objects.h	/^	uint32_t nr_objects,$/;"	m	struct:git_packbuilder	typeref:typename:uint32_t
nr_remaining	my_project/libgit2/src/libgit2/pack-objects.h	/^		nr_remaining;$/;"	m	struct:git_packbuilder	typeref:typename:uint32_t
nr_threads	my_project/libgit2/src/libgit2/pack-objects.h	/^	unsigned int nr_threads; \/* nr of threads to use *\/$/;"	m	struct:git_packbuilder	typeref:typename:unsigned int
nr_written	my_project/libgit2/src/libgit2/pack-objects.h	/^		nr_written,$/;"	m	struct:git_packbuilder	typeref:typename:uint32_t
nrec	my_project/libgit2/deps/xdiff/xdiffi.h	/^	long nrec;$/;"	m	struct:s_diffdata	typeref:typename:long
nrec	my_project/libgit2/deps/xdiff/xtypes.h	/^	long nrec;$/;"	m	struct:s_xdfile	typeref:typename:long
nreff	my_project/libgit2/deps/xdiff/xtypes.h	/^	long nreff;$/;"	m	struct:s_xdfile	typeref:typename:long
nsize	my_project/libgit2/deps/xdiff/xtypes.h	/^	long isize, nsize;$/;"	m	struct:s_chastore	typeref:typename:long
ntfs_end_of_filename	my_project/libgit2/src/libgit2/path.c	/^GIT_INLINE(bool) ntfs_end_of_filename(const char *path)$/;"	f	typeref:typename:bool
nth_packed_object_offset_locked	my_project/libgit2/src/libgit2/pack.c	/^static off64_t nth_packed_object_offset_locked(struct git_pack_file *p, uint32_t n)$/;"	f	typeref:typename:off64_t	file:
ntlm	my_project/libgit2/src/libgit2/transports/auth_ntlmclient.c	/^	ntlm_client *ntlm;$/;"	m	struct:__anon9ffa9aaa0108	typeref:typename:ntlm_client *	file:
ntlm2_response	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	unsigned char *ntlm2_response;$/;"	m	struct:ntlm_client	typeref:typename:unsigned char *
ntlm2_response_len	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	size_t ntlm2_response_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
ntlm_buf	my_project/libgit2/deps/ntlmclient/ntlm.h	/^} ntlm_buf;$/;"	t	typeref:struct:__anondc54b7e10208
ntlm_challenge	my_project/libgit2/deps/ntlmclient/ntlm.h	/^} ntlm_challenge;$/;"	t	typeref:struct:__anondc54b7e10408
ntlm_client	my_project/libgit2/deps/ntlmclient/ntlm.h	/^struct ntlm_client {$/;"	s
ntlm_client	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^typedef struct ntlm_client ntlm_client;$/;"	t	typeref:struct:ntlm_client
ntlm_client_challenge_nonce	my_project/libgit2/deps/ntlmclient/ntlm.c	/^uint64_t ntlm_client_challenge_nonce(ntlm_client *ntlm)$/;"	f	typeref:typename:uint64_t
ntlm_client_errmsg	my_project/libgit2/deps/ntlmclient/ntlm.c	/^const char *ntlm_client_errmsg(ntlm_client *ntlm)$/;"	f	typeref:typename:const char *
ntlm_client_flags	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^} ntlm_client_flags;$/;"	t	typeref:enum:__anon6e8afca00203
ntlm_client_free	my_project/libgit2/deps/ntlmclient/ntlm.c	/^void ntlm_client_free(ntlm_client *ntlm)$/;"	f	typeref:typename:void
ntlm_client_init	my_project/libgit2/deps/ntlmclient/ntlm.c	/^ntlm_client *ntlm_client_init(ntlm_client_flags flags)$/;"	f	typeref:typename:ntlm_client *
ntlm_client_internal_flags	my_project/libgit2/deps/ntlmclient/ntlm.h	/^} ntlm_client_internal_flags;$/;"	t	typeref:enum:__anondc54b7e10503
ntlm_client_negotiate	my_project/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_negotiate($/;"	f	typeref:typename:int
ntlm_client_reset	my_project/libgit2/deps/ntlmclient/ntlm.c	/^void ntlm_client_reset(ntlm_client *ntlm)$/;"	f	typeref:typename:void
ntlm_client_response	my_project/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_response($/;"	f	typeref:typename:int
ntlm_client_set_challenge	my_project/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_set_challenge($/;"	f	typeref:typename:int
ntlm_client_set_credentials	my_project/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_set_credentials($/;"	f	typeref:typename:int
ntlm_client_set_errmsg	my_project/libgit2/deps/ntlmclient/ntlm.c	/^void ntlm_client_set_errmsg(ntlm_client *ntlm, const char *errmsg)$/;"	f	typeref:typename:void
ntlm_client_set_hostname	my_project/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_set_hostname($/;"	f	typeref:typename:int
ntlm_client_set_nonce	my_project/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_set_nonce(ntlm_client *ntlm, uint64_t nonce)$/;"	f	typeref:typename:int
ntlm_client_set_target	my_project/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_set_target(ntlm_client *ntlm, const char *target)$/;"	f	typeref:typename:int
ntlm_client_set_timestamp	my_project/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_set_timestamp(ntlm_client *ntlm, uint64_t timestamp)$/;"	f	typeref:typename:int
ntlm_client_set_version	my_project/libgit2/deps/ntlmclient/ntlm.c	/^int ntlm_client_set_version($/;"	f	typeref:typename:int
ntlm_client_signature	my_project/libgit2/deps/ntlmclient/ntlm.c	/^unsigned char ntlm_client_signature[] = NTLM_SIGNATURE;$/;"	v	typeref:typename:unsigned char[]
ntlm_client_target	my_project/libgit2/deps/ntlmclient/ntlm.c	/^const char *ntlm_client_target(ntlm_client *ntlm)$/;"	f	typeref:typename:const char *
ntlm_client_target_domain	my_project/libgit2/deps/ntlmclient/ntlm.c	/^const char *ntlm_client_target_domain(ntlm_client *ntlm)$/;"	f	typeref:typename:const char *
ntlm_client_target_domain_dns	my_project/libgit2/deps/ntlmclient/ntlm.c	/^const char *ntlm_client_target_domain_dns(ntlm_client *ntlm)$/;"	f	typeref:typename:const char *
ntlm_client_target_server	my_project/libgit2/deps/ntlmclient/ntlm.c	/^const char *ntlm_client_target_server(ntlm_client *ntlm)$/;"	f	typeref:typename:const char *
ntlm_client_target_server_dns	my_project/libgit2/deps/ntlmclient/ntlm.c	/^const char *ntlm_client_target_server_dns(ntlm_client *ntlm)$/;"	f	typeref:typename:const char *
ntlm_crypt_ctx	my_project/libgit2/deps/ntlmclient/crypt.h	/^typedef struct ntlm_crypt_ctx ntlm_crypt_ctx;$/;"	t	typeref:struct:ntlm_crypt_ctx
ntlm_crypt_ctx	my_project/libgit2/deps/ntlmclient/crypt_commoncrypto.h	/^struct ntlm_crypt_ctx {$/;"	s
ntlm_crypt_ctx	my_project/libgit2/deps/ntlmclient/crypt_mbedtls.h	/^struct ntlm_crypt_ctx {$/;"	s
ntlm_crypt_ctx	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^struct ntlm_crypt_ctx {$/;"	s
ntlm_crypt_init	my_project/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^bool ntlm_crypt_init(ntlm_client *ntlm)$/;"	f	typeref:typename:bool
ntlm_crypt_init	my_project/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^bool ntlm_crypt_init(ntlm_client *ntlm)$/;"	f	typeref:typename:bool
ntlm_crypt_init	my_project/libgit2/deps/ntlmclient/crypt_openssl.c	/^bool ntlm_crypt_init(ntlm_client *ntlm)$/;"	f	typeref:typename:bool
ntlm_crypt_init_functions	my_project/libgit2/deps/ntlmclient/crypt_openssl.c	/^static bool ntlm_crypt_init_functions(ntlm_client *ntlm)$/;"	f	typeref:typename:bool	file:
ntlm_crypt_shutdown	my_project/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^void ntlm_crypt_shutdown(ntlm_client *ntlm)$/;"	f	typeref:typename:void
ntlm_crypt_shutdown	my_project/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^void ntlm_crypt_shutdown(ntlm_client *ntlm)$/;"	f	typeref:typename:void
ntlm_crypt_shutdown	my_project/libgit2/deps/ntlmclient/crypt_openssl.c	/^void ntlm_crypt_shutdown(ntlm_client *ntlm)$/;"	f	typeref:typename:void
ntlm_des_block	my_project/libgit2/deps/ntlmclient/crypt.h	/^typedef unsigned char ntlm_des_block[CRYPT_DES_BLOCKSIZE];$/;"	t	typeref:typename:unsigned char[CRYPT_DES_BLOCKSIZE]
ntlm_des_encrypt	my_project/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^bool ntlm_des_encrypt($/;"	f	typeref:typename:bool
ntlm_des_encrypt	my_project/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^bool ntlm_des_encrypt($/;"	f	typeref:typename:bool
ntlm_des_encrypt	my_project/libgit2/deps/ntlmclient/crypt_openssl.c	/^bool ntlm_des_encrypt($/;"	f	typeref:typename:bool
ntlm_error_code	my_project/libgit2/deps/ntlmclient/ntlmclient.h	/^} ntlm_error_code;$/;"	t	typeref:enum:__anon6e8afca00103
ntlm_hmac_md5_final	my_project/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^bool ntlm_hmac_md5_final($/;"	f	typeref:typename:bool
ntlm_hmac_md5_final	my_project/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^bool ntlm_hmac_md5_final($/;"	f	typeref:typename:bool
ntlm_hmac_md5_final	my_project/libgit2/deps/ntlmclient/crypt_openssl.c	/^bool ntlm_hmac_md5_final($/;"	f	typeref:typename:bool
ntlm_hmac_md5_init	my_project/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^bool ntlm_hmac_md5_init($/;"	f	typeref:typename:bool
ntlm_hmac_md5_init	my_project/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^bool ntlm_hmac_md5_init($/;"	f	typeref:typename:bool
ntlm_hmac_md5_init	my_project/libgit2/deps/ntlmclient/crypt_openssl.c	/^bool ntlm_hmac_md5_init($/;"	f	typeref:typename:bool
ntlm_hmac_md5_update	my_project/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^bool ntlm_hmac_md5_update($/;"	f	typeref:typename:bool
ntlm_hmac_md5_update	my_project/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^bool ntlm_hmac_md5_update($/;"	f	typeref:typename:bool
ntlm_hmac_md5_update	my_project/libgit2/deps/ntlmclient/crypt_openssl.c	/^bool ntlm_hmac_md5_update($/;"	f	typeref:typename:bool
ntlm_htonll	my_project/libgit2/deps/ntlmclient/util.c	/^uint64_t ntlm_htonll(uint64_t value)$/;"	f	typeref:typename:uint64_t
ntlm_md4_digest	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^bool ntlm_md4_digest($/;"	f	typeref:typename:bool
ntlm_md4_digest	my_project/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^bool ntlm_md4_digest($/;"	f	typeref:typename:bool
ntlm_md4_digest	my_project/libgit2/deps/ntlmclient/crypt_openssl.c	/^bool ntlm_md4_digest($/;"	f	typeref:typename:bool
ntlm_memzero	my_project/libgit2/deps/ntlmclient/util.c	/^void ntlm_memzero(void *data, size_t size)$/;"	f	typeref:typename:void
ntlm_negotiate_t	my_project/libgit2/deps/ntlmclient/ntlm.h	/^} ntlm_negotiate_t;$/;"	t	typeref:enum:__anondc54b7e10703
ntlm_random_bytes	my_project/libgit2/deps/ntlmclient/crypt_commoncrypto.c	/^bool ntlm_random_bytes($/;"	f	typeref:typename:bool
ntlm_random_bytes	my_project/libgit2/deps/ntlmclient/crypt_mbedtls.c	/^bool ntlm_random_bytes($/;"	f	typeref:typename:bool
ntlm_random_bytes	my_project/libgit2/deps/ntlmclient/crypt_openssl.c	/^bool ntlm_random_bytes($/;"	f	typeref:typename:bool
ntlm_response	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	unsigned char ntlm_response[NTLM_NTLM_RESPONSE_LEN];$/;"	m	struct:ntlm_client	typeref:typename:unsigned char[]
ntlm_response_len	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	size_t ntlm_response_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
ntlm_state	my_project/libgit2/deps/ntlmclient/ntlm.h	/^} ntlm_state;$/;"	t	typeref:enum:__anondc54b7e10103
ntlm_target_info_type_t	my_project/libgit2/deps/ntlmclient/ntlm.h	/^} ntlm_target_info_type_t;$/;"	t	typeref:enum:__anondc54b7e10603
ntlm_unicode_ctx	my_project/libgit2/deps/ntlmclient/unicode.h	/^typedef struct ntlm_unicode_ctx ntlm_unicode_ctx;$/;"	t	typeref:struct:ntlm_unicode_ctx
ntlm_unicode_ctx	my_project/libgit2/deps/ntlmclient/unicode_builtin.h	/^struct ntlm_unicode_ctx {$/;"	s
ntlm_unicode_ctx	my_project/libgit2/deps/ntlmclient/unicode_iconv.h	/^struct ntlm_unicode_ctx {$/;"	s
ntlm_unicode_init	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^bool ntlm_unicode_init(ntlm_client *ntlm)$/;"	f	typeref:typename:bool
ntlm_unicode_init	my_project/libgit2/deps/ntlmclient/unicode_iconv.c	/^bool ntlm_unicode_init(ntlm_client *ntlm)$/;"	f	typeref:typename:bool
ntlm_unicode_shutdown	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^void ntlm_unicode_shutdown(ntlm_client *ntlm)$/;"	f	typeref:typename:void
ntlm_unicode_shutdown	my_project/libgit2/deps/ntlmclient/unicode_iconv.c	/^void ntlm_unicode_shutdown(ntlm_client *ntlm)$/;"	f	typeref:typename:void
ntlm_unicode_utf16_to_8	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^bool ntlm_unicode_utf16_to_8($/;"	f	typeref:typename:bool
ntlm_unicode_utf16_to_8	my_project/libgit2/deps/ntlmclient/unicode_iconv.c	/^bool ntlm_unicode_utf16_to_8($/;"	f	typeref:typename:bool
ntlm_unicode_utf8_to_16	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^bool ntlm_unicode_utf8_to_16($/;"	f	typeref:typename:bool
ntlm_unicode_utf8_to_16	my_project/libgit2/deps/ntlmclient/unicode_iconv.c	/^bool ntlm_unicode_utf8_to_16($/;"	f	typeref:typename:bool
ntlm_version	my_project/libgit2/deps/ntlmclient/ntlm.h	/^} ntlm_version;$/;"	t	typeref:struct:__anondc54b7e10308
ntlmclient	my_project/libgit2/deps/ntlmclient/CMakeLists.txt	/^add_library(ntlmclient OBJECT ${SRC_NTLMCLIENT} ${SRC_NTLMCLIENT_UNICODE} ${SRC_NTLMCLIENT_CRYPT/;"	t
ntlmclient_context_free	my_project/libgit2/src/libgit2/transports/auth_ntlmclient.c	/^static void ntlmclient_context_free(git_http_auth_context *c)$/;"	f	typeref:typename:void	file:
ntlmclient_init_context	my_project/libgit2/src/libgit2/transports/auth_ntlmclient.c	/^static int ntlmclient_init_context($/;"	f	typeref:typename:int	file:
ntlmclient_is_complete	my_project/libgit2/src/libgit2/transports/auth_ntlmclient.c	/^static int ntlmclient_is_complete(git_http_auth_context *c)$/;"	f	typeref:typename:int	file:
ntlmclient_next_token	my_project/libgit2/src/libgit2/transports/auth_ntlmclient.c	/^static int ntlmclient_next_token($/;"	f	typeref:typename:int	file:
ntlmclient_set_challenge	my_project/libgit2/src/libgit2/transports/auth_ntlmclient.c	/^static int ntlmclient_set_challenge($/;"	f	typeref:typename:int	file:
ntlmclient_set_credentials	my_project/libgit2/src/libgit2/transports/auth_ntlmclient.c	/^static int ntlmclient_set_credentials(http_auth_ntlm_context *ctx, git_credential *_cred)$/;"	f	typeref:typename:int	file:
nul	my_project/libgit2/src/util/str.h	/^	unsigned int nul, cr, lf, crlf; \/* NUL, CR, LF and CRLF counts *\/$/;"	m	struct:__anon85703a5f0208	typeref:typename:unsigned int
null_separator	my_project/libgit2/src/cli/cmd_config.c	/^static int null_separator;$/;"	v	typeref:typename:int	file:
nullpad	my_project/libgit2/deps/pcre/pcre_internal.h	/^  void             *nullpad;      \/* NULL padding *\/$/;"	m	struct:real_pcre32	typeref:typename:void *
nullpad	my_project/libgit2/deps/pcre/pcre_internal.h	/^  void             *nullpad;      \/* NULL padding *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:void *
num	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int num;$/;"	m	struct:bio_st	typeref:typename:int
num	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int num, md_len;$/;"	m	struct:__anone07cb6fd0208	typeref:typename:unsigned int
num	my_project/libgit2/src/util/hash/openssl.h	/^	unsigned int num;$/;"	m	struct:__anone07cb6fd0108	typeref:typename:unsigned int
num_bad_objects	my_project/libgit2/src/libgit2/pack.h	/^	uint32_t num_bad_objects;$/;"	m	struct:git_pack_file	typeref:typename:uint32_t
num_commits	my_project/libgit2/src/libgit2/commit_graph.h	/^	uint32_t num_commits;$/;"	m	struct:git_commit_graph_file	typeref:typename:uint32_t
num_extra_edge_list	my_project/libgit2/src/libgit2/commit_graph.h	/^	size_t num_extra_edge_list;$/;"	m	struct:git_commit_graph_file	typeref:typename:size_t
num_lines	my_project/libgit2/examples/tag.c	/^	int num_lines;$/;"	m	struct:tag_options	typeref:typename:int	file:
num_lines	my_project/libgit2/include/git2/diff.h	/^	int    num_lines;    \/**< Number of newline characters in content *\/$/;"	m	struct:__anon7f3f1dd30c08	typeref:typename:int
num_lines	my_project/libgit2/src/libgit2/blame.h	/^	int num_lines;$/;"	m	struct:git_blame	typeref:typename:int
num_lines	my_project/libgit2/src/libgit2/blame.h	/^	size_t num_lines;$/;"	m	struct:git_blame__entry	typeref:typename:size_t
num_modified_deltas	my_project/libgit2/tests/libgit2/diff/diff_helpers.c	/^static size_t num_modified_deltas(git_diff *diff)$/;"	f	typeref:typename:size_t	file:
num_object_large_offsets	my_project/libgit2/src/libgit2/midx.h	/^	size_t num_object_large_offsets;$/;"	m	struct:git_midx_file	typeref:typename:size_t
num_objects	my_project/libgit2/src/libgit2/midx.h	/^	uint32_t num_objects;$/;"	m	struct:git_midx_file	typeref:typename:uint32_t
num_objects	my_project/libgit2/src/libgit2/pack.h	/^	uint32_t num_objects;$/;"	m	struct:git_pack_file	typeref:typename:uint32_t
num_read	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    unsigned long num_read;$/;"	m	struct:bio_st	typeref:typename:unsigned long
num_write	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    unsigned long num_write;$/;"	m	struct:bio_st	typeref:typename:unsigned long
number	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define number /;"	d	file:
number	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 number;           \/* Capture number *\/$/;"	m	struct:open_capitem	typeref:typename:pcre_uint16
number	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32        number;        \/* Group number *\/$/;"	m	struct:named_group	typeref:typename:pcre_uint32
number_name	my_project/libgit2/src/util/date.c	/^static const char *number_name[] = {$/;"	v	typeref:typename:const char * []	file:
o_ctx	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^    EVP_MD_CTX o_ctx;$/;"	m	struct:hmac_ctx_st	typeref:typename:EVP_MD_CTX
obj	my_project/libgit2/tests/libgit2/checkout/icase.c	/^static git_object *obj;$/;"	v	typeref:typename:git_object *	file:
obj_hdr	my_project/libgit2/src/libgit2/odb_loose.c	/^} obj_hdr;$/;"	t	typeref:struct:__anon5ce333660108	file:
objbuf	my_project/libgit2/src/libgit2/indexer.c	/^	char objbuf[8*1024];$/;"	m	struct:git_indexer	typeref:typename:char[]	file:
object	my_project/libgit2/src/libgit2/blob.h	/^	git_object object;$/;"	m	struct:git_blob	typeref:typename:git_object
object	my_project/libgit2/src/libgit2/commit.h	/^	git_object object;$/;"	m	struct:git_commit	typeref:typename:git_object
object	my_project/libgit2/src/libgit2/pack-objects.c	/^	git_pobject *object;$/;"	m	struct:unpacked	typeref:typename:git_pobject *	file:
object	my_project/libgit2/src/libgit2/tag.h	/^	git_object object;$/;"	m	struct:git_tag	typeref:typename:git_object
object	my_project/libgit2/src/libgit2/tree.h	/^	git_object object;$/;"	m	struct:git_tree	typeref:typename:git_object
object_data	my_project/libgit2/tests/libgit2/object/raw/write.c	/^typedef struct object_data {$/;"	s	file:
object_data	my_project/libgit2/tests/libgit2/object/raw/write.c	/^} object_data;$/;"	t	typeref:struct:object_data	file:
object_data	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^typedef struct object_data {$/;"	s
object_data	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^} object_data;$/;"	t	typeref:struct:object_data
object_database	my_project/libgit2/examples/general.c	/^static void object_database(git_repository *repo, git_oid *oid)$/;"	f	typeref:typename:void	file:
object_entries_array	my_project/libgit2/src/libgit2/midx.c	/^	object_entry_array_t *object_entries_array;$/;"	m	struct:object_entry_cb_state	typeref:typename:object_entry_array_t *	file:
object_entry__cb	my_project/libgit2/src/libgit2/commit_graph.c	/^static int object_entry__cb(const git_oid *id, void *data)$/;"	f	typeref:typename:int	file:
object_entry__cb	my_project/libgit2/src/libgit2/midx.c	/^static int object_entry__cb(const git_oid *oid, off64_t offset, void *data)$/;"	f	typeref:typename:int	file:
object_entry__cmp	my_project/libgit2/src/libgit2/midx.c	/^static int object_entry__cmp(const void *a_, const void *b_)$/;"	f	typeref:typename:int	file:
object_entry_array_t	my_project/libgit2/src/libgit2/midx.c	/^typedef git_array_t(git_midx_entry) object_entry_array_t;$/;"	t	file:
object_entry_cb_state	my_project/libgit2/src/libgit2/commit_graph.c	/^struct object_entry_cb_state {$/;"	s	file:
object_entry_cb_state	my_project/libgit2/src/libgit2/midx.c	/^struct object_entry_cb_state {$/;"	s	file:
object_file_name	my_project/libgit2/src/libgit2/odb_loose.c	/^static int object_file_name($/;"	f	typeref:typename:int	file:
object_format	my_project/libgit2/src/libgit2/transports/smart.h	/^	char *object_format;$/;"	m	struct:transport_smart_caps	typeref:typename:char *
object_from_reference	my_project/libgit2/src/libgit2/revparse.c	/^static int object_from_reference(git_object **object, git_reference *reference)$/;"	f	typeref:typename:int	file:
object_id_version	my_project/libgit2/src/libgit2/commit_graph.c	/^	uint8_t object_id_version;$/;"	m	struct:git_commit_graph_header	typeref:typename:uint8_t	file:
object_id_version	my_project/libgit2/src/libgit2/midx.c	/^	uint8_t object_id_version;$/;"	m	struct:git_midx_header	typeref:typename:uint8_t	file:
object_ix	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_oidmap *object_ix;$/;"	m	struct:git_packbuilder	typeref:typename:git_oidmap *
object_large_offsets	my_project/libgit2/src/libgit2/midx.h	/^	const unsigned char *object_large_offsets;$/;"	m	struct:git_midx_file	typeref:typename:const unsigned char *
object_list	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_pobject *object_list;$/;"	m	struct:git_packbuilder	typeref:typename:git_pobject *
object_mkdir	my_project/libgit2/src/libgit2/odb_loose.c	/^static int object_mkdir(const git_str *name, const loose_backend *be)$/;"	f	typeref:typename:int	file:
object_offsets	my_project/libgit2/src/libgit2/midx.h	/^	const unsigned char *object_offsets;$/;"	m	struct:git_midx_file	typeref:typename:const unsigned char *
object_oid	my_project/libgit2/tests/libgit2/notes/notes.c	/^	const char *object_oid;$/;"	m	struct:note_create_payload	typeref:typename:const char *	file:
object_pool	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_pool object_pool;$/;"	m	struct:git_packbuilder	typeref:typename:git_pool
object_spec	my_project/libgit2/src/cli/cmd_cat_file.c	/^static char *type_name, *object_spec;$/;"	v	typeref:typename:char *	file:
object_type	my_project/libgit2/tests/libgit2/object/cache.c	/^static int object_type;$/;"	v	typeref:typename:int	file:
objects	my_project/libgit2/src/libgit2/indexer.c	/^	git_vector objects;$/;"	m	struct:git_indexer	typeref:typename:git_vector	file:
objects	my_project/libgit2/src/libgit2/odb_mempack.c	/^	git_oidmap *objects;$/;"	m	struct:memory_packer_db	typeref:typename:git_oidmap *	file:
objects	my_project/libgit2/src/libgit2/repository.h	/^	git_cache objects;$/;"	m	struct:git_repository	typeref:typename:git_cache
objects	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.h	/^	const fake_object *objects;$/;"	m	struct:__anon1e6212950208	typeref:typename:const fake_object *
objects_cmp	my_project/libgit2/src/libgit2/indexer.c	/^static int objects_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
objects_dir	my_project/libgit2/src/libgit2/odb_loose.c	/^	char objects_dir[GIT_FLEX_ARRAY];$/;"	m	struct:loose_backend	typeref:typename:char[]	file:
objects_dirlen	my_project/libgit2/src/libgit2/odb_loose.c	/^	size_t objects_dirlen;$/;"	m	struct:loose_backend	typeref:typename:size_t	file:
objects_info_dir	my_project/libgit2/src/libgit2/commit_graph.h	/^	git_str objects_info_dir;$/;"	m	struct:git_commit_graph_writer	typeref:typename:git_str
obtain_config_and_set_oid_type	my_project/libgit2/src/libgit2/repository.c	/^static int obtain_config_and_set_oid_type($/;"	f	typeref:typename:int	file:
oc	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  } oc;$/;"	m	struct:compare_context	typeref:union:compare_context::__anon4bd17169050a	file:
occhars	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define occhars /;"	d	file:
oclength	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define oclength /;"	d	file:
odb	my_project/libgit2/fuzzers/packfile_fuzzer.c	/^static git_odb *odb = NULL;$/;"	v	typeref:typename:git_odb *	file:
odb	my_project/libgit2/include/git2/indexer.h	/^	git_odb *odb;$/;"	m	struct:git_indexer_options	typeref:typename:git_odb *
odb	my_project/libgit2/include/git2/sys/odb_backend.h	/^	git_odb *odb;$/;"	m	struct:git_odb_backend	typeref:typename:git_odb *
odb	my_project/libgit2/src/libgit2/blob.h	/^		git_odb_object *odb;$/;"	m	union:git_blob::__anon38237cb4010a	typeref:typename:git_odb_object *
odb	my_project/libgit2/src/libgit2/indexer.c	/^	git_odb *odb;$/;"	m	struct:git_indexer	typeref:typename:git_odb *	file:
odb	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_odb *odb; \/* associated object database *\/$/;"	m	struct:git_packbuilder	typeref:typename:git_odb *
odb	my_project/libgit2/src/libgit2/revwalk.h	/^	git_odb *odb;$/;"	m	struct:git_revwalk	typeref:typename:git_odb *
odb	my_project/libgit2/tests/libgit2/odb/freshen.c	/^static git_odb *odb;$/;"	v	typeref:typename:git_odb *	file:
odb	my_project/libgit2/tests/libgit2/odb/largefiles.c	/^static git_odb *odb;$/;"	v	typeref:typename:git_odb *	file:
odb	my_project/libgit2/tests/libgit2/odb/streamwrite.c	/^static git_odb *odb;$/;"	v	typeref:typename:git_odb *	file:
odb_backend_free	my_project/libgit2/tests/libgit2/odb/sorting.c	/^static void odb_backend_free(git_odb_backend *odb)$/;"	f	typeref:typename:void	file:
odb_cache	my_project/libgit2/src/libgit2/odb.c	/^static git_cache *odb_cache(git_odb *odb)$/;"	f	typeref:typename:git_cache *	file:
odb_dir	my_project/libgit2/tests/libgit2/object/raw/write.c	/^static const char *odb_dir = "test-objects";$/;"	v	typeref:typename:const char *	file:
odb_exists_1	my_project/libgit2/src/libgit2/odb.c	/^static int odb_exists_1($/;"	f	typeref:typename:int	file:
odb_exists_prefix_1	my_project/libgit2/src/libgit2/odb.c	/^static int odb_exists_prefix_1(git_oid *out, git_odb *db,$/;"	f	typeref:typename:int	file:
odb_free	my_project/libgit2/src/libgit2/odb.c	/^static void odb_free(git_odb *db)$/;"	f	typeref:typename:void	file:
odb_freshen_1	my_project/libgit2/src/libgit2/odb.c	/^static int odb_freshen_1($/;"	f	typeref:typename:int	file:
odb_hardcoded_type	my_project/libgit2/src/libgit2/odb.c	/^static git_object_t odb_hardcoded_type(const git_oid *id)$/;"	f	typeref:typename:git_object_t	file:
odb_obj	my_project/libgit2/src/libgit2/diff_tform.c	/^	git_odb_object *odb_obj;$/;"	m	struct:__anon258239f00108	typeref:typename:git_odb_object *	file:
odb_obj	my_project/libgit2/src/libgit2/tree.h	/^	git_odb_object *odb_obj;$/;"	m	struct:git_tree	typeref:typename:git_odb_object *
odb_object__alloc	my_project/libgit2/src/libgit2/odb.c	/^static git_odb_object *odb_object__alloc(const git_oid *oid, git_rawobj *source)$/;"	f	typeref:typename:git_odb_object *	file:
odb_otype_fast	my_project/libgit2/src/libgit2/odb.c	/^static int odb_otype_fast(git_object_t *type_p, git_odb *db, const git_oid *id)$/;"	f	typeref:typename:int	file:
odb_read_1	my_project/libgit2/src/libgit2/odb.c	/^static int odb_read_1($/;"	f	typeref:typename:int	file:
odb_read_hardcoded	my_project/libgit2/src/libgit2/odb.c	/^static int odb_read_hardcoded(bool *found, git_rawobj *raw, const git_oid *id)$/;"	f	typeref:typename:int	file:
odb_read_header_1	my_project/libgit2/src/libgit2/odb.c	/^static int odb_read_header_1($/;"	f	typeref:typename:int	file:
odd	my_project/libgit2/tests/util/dirent.c	/^static walk_data odd = {$/;"	v	typeref:typename:walk_data	file:
odd_names	my_project/libgit2/tests/util/dirent.c	/^static name_data odd_names[] = {$/;"	v	typeref:typename:name_data[]	file:
off	my_project/libgit2/src/libgit2/indexer.c	/^	off64_t off;$/;"	m	struct:git_indexer	typeref:typename:off64_t	file:
off64_t	my_project/libgit2/src/util/posix.h	/^typedef __haiku_std_int64 off64_t;$/;"	t	typeref:typename:__haiku_std_int64
off64_t	my_project/libgit2/src/util/posix.h	/^typedef __int64 off64_t;$/;"	t	typeref:typename:__int64
off64_t	my_project/libgit2/src/util/posix.h	/^typedef __int64_t off64_t;$/;"	t	typeref:typename:__int64_t
off64_t	my_project/libgit2/src/util/posix.h	/^typedef int64_t off64_t;$/;"	t	typeref:typename:int64_t
off64_t	my_project/libgit2/src/util/posix.h	/^typedef long long off64_t;$/;"	t	typeref:typename:long long
offset	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^  int offset;                     \/* Offset to opcode *\/$/;"	m	struct:stateblock	typeref:typename:int	file:
offset	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define offset /;"	d	file:
offset	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned offset;            \/* distance back to copy string from *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
offset	my_project/libgit2/include/git2/types.h	/^	int offset; \/**< timezone offset, in minutes *\/$/;"	m	struct:git_time	typeref:typename:int
offset	my_project/libgit2/src/libgit2/commit_graph.c	/^	off64_t offset;$/;"	m	struct:git_commit_graph_chunk	typeref:typename:off64_t	file:
offset	my_project/libgit2/src/libgit2/indexer.c	/^	uint32_t offset;$/;"	m	struct:entry	typeref:typename:uint32_t	file:
offset	my_project/libgit2/src/libgit2/midx.c	/^	off64_t offset;$/;"	m	struct:git_midx_chunk	typeref:typename:off64_t	file:
offset	my_project/libgit2/src/libgit2/midx.h	/^	off64_t offset;$/;"	m	struct:git_midx_entry	typeref:typename:off64_t
offset	my_project/libgit2/src/libgit2/mwindow.h	/^	off64_t offset;$/;"	m	struct:git_mwindow	typeref:typename:off64_t
offset	my_project/libgit2/src/libgit2/pack-objects.h	/^	off64_t offset;$/;"	m	struct:git_pobject	typeref:typename:off64_t
offset	my_project/libgit2/src/libgit2/pack.h	/^	off64_t offset;$/;"	m	struct:git_pack_entry	typeref:typename:off64_t
offset	my_project/libgit2/src/libgit2/pack.h	/^	off64_t offset;$/;"	m	struct:pack_chain_elem	typeref:typename:off64_t
offset	my_project/libgit2/src/util/date.c	/^	int offset;$/;"	m	struct:__anon0f244edf0208	typeref:typename:int	file:
offset	my_project/libgit2/src/util/sortedcache.c	/^	size_t offset;$/;"	m	struct:sortedcache_magic_key	typeref:typename:size_t	file:
offset	my_project/libgit2/tests/libgit2/commit/parse.c	/^	int offset;$/;"	m	struct:__anon39d5c3ee0208	typeref:typename:int	file:
offset_count	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int offset_count;$/;"	m	struct:jit_arguments	typeref:typename:int	file:
offset_end	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int    offset_end;              \/* One past the end *\/$/;"	m	struct:match_data	typeref:typename:int
offset_long	my_project/libgit2/src/libgit2/indexer.c	/^	uint64_t offset_long;$/;"	m	struct:entry	typeref:typename:uint64_t	file:
offset_max	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int    offset_max;              \/* The maximum usable for return data *\/$/;"	m	struct:match_data	typeref:typename:int
offset_save	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int *offset_save;               \/* Pointer to start of saved offsets *\/$/;"	m	struct:recursion_info	typeref:typename:int *
offset_top	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define offset_top /;"	d	file:
offset_vector	my_project/libgit2/deps/pcre/pcre.h	/^  int         *offset_vector;     \/* The offset vector *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int *
offset_vector	my_project/libgit2/deps/pcre/pcre.h	/^  int         *offset_vector;     \/* The offset vector *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int *
offset_vector	my_project/libgit2/deps/pcre/pcre.h	/^  int         *offset_vector;     \/* The offset vector *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int *
offset_vector	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int   *offset_vector;           \/* Offset vector *\/$/;"	m	struct:match_data	typeref:typename:int *
offsets	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int *offsets;$/;"	m	struct:jit_arguments	typeref:typename:int *	file:
offsetsFromUTF8	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^static const UTF32 offsetsFromUTF8[6] = {$/;"	v	typeref:typename:const UTF32[6]	file:
ofile	my_project/libgit2/src/libgit2/patch_generate.h	/^	git_diff_file_content ofile;$/;"	m	struct:git_patch_generated	typeref:typename:git_diff_file_content
ofs_delta	my_project/libgit2/src/libgit2/transports/smart.h	/^	             ofs_delta:1,$/;"	m	struct:transport_smart_caps	typeref:typename:unsigned int:1
oid	my_project/libgit2/include/git2/net.h	/^	git_oid oid;$/;"	m	struct:git_remote_head	typeref:typename:git_oid
oid	my_project/libgit2/include/git2/sys/index.h	/^	git_oid oid[3];$/;"	m	struct:git_index_reuc_entry	typeref:typename:git_oid[3]
oid	my_project/libgit2/src/libgit2/attr_file.h	/^		git_oid oid;$/;"	m	union:__anon0df92d8f0708::__anon0df92d8f080a	typeref:typename:git_oid
oid	my_project/libgit2/src/libgit2/cache.h	/^	git_oid      oid;$/;"	m	struct:__anon6f0f98290208	typeref:typename:git_oid
oid	my_project/libgit2/src/libgit2/commit_list.h	/^	git_oid oid;$/;"	m	struct:git_commit_list_node	typeref:typename:git_oid
oid	my_project/libgit2/src/libgit2/fetchhead.h	/^	git_oid oid;$/;"	m	struct:git_fetchhead_ref	typeref:typename:git_oid
oid	my_project/libgit2/src/libgit2/filter.c	/^	git_oid            oid;  \/* zero if unknown (which is likely) *\/$/;"	m	struct:git_filter_source	typeref:typename:git_oid	file:
oid	my_project/libgit2/src/libgit2/grafts.h	/^	git_oid oid;$/;"	m	struct:__anon19e2cf7c0108	typeref:typename:git_oid
oid	my_project/libgit2/src/libgit2/indexer.c	/^	git_oid oid;$/;"	m	struct:entry	typeref:typename:git_oid	file:
oid	my_project/libgit2/src/libgit2/odb_mempack.c	/^	git_oid oid;$/;"	m	struct:memobject	typeref:typename:git_oid	file:
oid	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_oid oid;$/;"	m	struct:packref	typeref:typename:git_oid	file:
oid	my_project/libgit2/src/libgit2/refs.h	/^		git_oid oid;$/;"	m	union:git_reference::__anon5cf2b425010a	typeref:typename:git_oid
oid	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^	gss_OID oid;$/;"	m	struct:__anon7fc745b70108	typeref:typename:gss_OID	file:
oid	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_oid oid;$/;"	m	struct:__anonb9ceeb0b0408	typeref:typename:git_oid
oid	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_oid oid;$/;"	m	struct:__anonb9ceeb0b0b08	typeref:typename:git_oid
oid	my_project/libgit2/src/libgit2/tree-cache.h	/^	git_oid oid;$/;"	m	struct:git_tree_cache	typeref:typename:git_oid
oid	my_project/libgit2/src/libgit2/tree.h	/^	git_oid oid;$/;"	m	struct:git_tree_entry	typeref:typename:git_oid
oid	my_project/libgit2/tests/libgit2/core/oidmap.c	/^	git_oid oid;$/;"	m	struct:__anon2599d8ed0108	typeref:typename:git_oid	file:
oid	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^	const char *oid;$/;"	m	struct:__anon0731209b0108	typeref:typename:const char *	file:
oid	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.h	/^	const char *oid;$/;"	m	struct:__anon1e6212950108	typeref:typename:const char *
oid	my_project/libgit2/tests/libgit2/online/push_util.h	/^	const git_oid *oid;$/;"	m	struct:__anonec09f7510308	typeref:typename:const git_oid *
oid_0	my_project/libgit2/tests/libgit2/core/oidarray.c	/^#define oid_0 /;"	d	file:
oid_1	my_project/libgit2/tests/libgit2/core/oidarray.c	/^#define oid_1 /;"	d	file:
oid_2	my_project/libgit2/tests/libgit2/core/oidarray.c	/^#define oid_2 /;"	d	file:
oid_3	my_project/libgit2/tests/libgit2/core/oidarray.c	/^#define oid_3 /;"	d	file:
oid_calculations	my_project/libgit2/include/git2/sys/diff.h	/^	size_t oid_calculations; \/**< Number of ID calculations *\/$/;"	m	struct:__anon9aac73a10108	typeref:typename:size_t
oid_cur	my_project/libgit2/src/libgit2/reflog.h	/^	git_oid oid_cur;$/;"	m	struct:git_reflog_entry	typeref:typename:git_oid
oid_error_invalid	my_project/libgit2/src/libgit2/oid.c	/^static int oid_error_invalid(const char *msg)$/;"	f	typeref:typename:int	file:
oid_fanout	my_project/libgit2/src/libgit2/commit_graph.h	/^	const uint32_t *oid_fanout;$/;"	m	struct:git_commit_graph_file	typeref:typename:const uint32_t *
oid_fanout	my_project/libgit2/src/libgit2/midx.h	/^	const uint32_t *oid_fanout;$/;"	m	struct:git_midx_file	typeref:typename:const uint32_t *
oid_hexsize	my_project/libgit2/src/libgit2/odb_loose.c	/^	size_t oid_hexsize;$/;"	m	struct:loose_backend	typeref:typename:size_t	file:
oid_hexsize	my_project/libgit2/src/libgit2/pack.h	/^	unsigned oid_hexsize:7,$/;"	m	struct:git_pack_file	typeref:typename:unsigned:7
oid_lookup	my_project/libgit2/src/libgit2/commit_graph.h	/^	unsigned char *oid_lookup;$/;"	m	struct:git_commit_graph_file	typeref:typename:unsigned char *
oid_lookup	my_project/libgit2/src/libgit2/midx.h	/^	unsigned char *oid_lookup;$/;"	m	struct:git_midx_file	typeref:typename:unsigned char *
oid_old	my_project/libgit2/src/libgit2/reflog.h	/^	git_oid oid_old;$/;"	m	struct:git_reflog_entry	typeref:typename:git_oid
oid_parsing	my_project/libgit2/examples/general.c	/^static void oid_parsing(git_oid *oid)$/;"	f	typeref:typename:void	file:
oid_size	my_project/libgit2/src/libgit2/pack.h	/^	         oid_size:6,$/;"	m	struct:git_pack_file	typeref:typename:unsigned:6
oid_str	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^	char oid_str[GIT_OID_SHA1_HEXSIZE+1];$/;"	m	struct:checkout_index_entry	typeref:typename:char[]	file:
oid_str	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	char oid_str[GIT_OID_SHA1_HEXSIZE+1];$/;"	m	struct:merge_index_entry	typeref:typename:char[]
oid_str	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^	const char **oid_str;$/;"	m	struct:annotated_commit_cb_data	typeref:typename:const char **	file:
oid_type	my_project/libgit2/include/git2/diff.h	/^	git_oid_t   oid_type;$/;"	m	struct:__anon7f3f1dd30608	typeref:typename:git_oid_t
oid_type	my_project/libgit2/include/git2/diff.h	/^	git_oid_t oid_type;$/;"	m	struct:__anon7f3f1dd31108	typeref:typename:git_oid_t
oid_type	my_project/libgit2/include/git2/odb.h	/^	git_oid_t oid_type;$/;"	m	struct:__anonc68fd3af0208	typeref:typename:git_oid_t
oid_type	my_project/libgit2/include/git2/odb_backend.h	/^	git_oid_t oid_type;$/;"	m	struct:__anon6d9003760108	typeref:typename:git_oid_t
oid_type	my_project/libgit2/include/git2/odb_backend.h	/^	git_oid_t oid_type;$/;"	m	struct:__anon6d9003760308	typeref:typename:git_oid_t
oid_type	my_project/libgit2/include/git2/odb_backend.h	/^	git_oid_t oid_type;$/;"	m	struct:git_odb_stream	typeref:typename:git_oid_t
oid_type	my_project/libgit2/include/git2/repository.h	/^	git_oid_t oid_type;$/;"	m	struct:__anon67af0d3a0408	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/commit.h	/^	git_oid_t oid_type;$/;"	m	struct:__anon9e6354de0108	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/commit_graph.h	/^	git_oid_t oid_type;$/;"	m	struct:git_commit_graph	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/commit_graph.h	/^	git_oid_t oid_type;$/;"	m	struct:git_commit_graph_file	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/commit_graph.h	/^	git_oid_t oid_type;$/;"	m	struct:git_commit_graph_writer	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/diff.c	/^	git_oid_t oid_type;$/;"	m	struct:patch_id_args	typeref:typename:git_oid_t	file:
oid_type	my_project/libgit2/src/libgit2/diff_print.c	/^	git_oid_t oid_type;$/;"	m	struct:__anon0d2887b50108	typeref:typename:git_oid_t	file:
oid_type	my_project/libgit2/src/libgit2/grafts.c	/^	git_oid_t oid_type;$/;"	m	struct:git_grafts	typeref:typename:git_oid_t	file:
oid_type	my_project/libgit2/src/libgit2/index.h	/^	git_oid_t oid_type;$/;"	m	struct:git_index	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/indexer.c	/^	git_oid_t oid_type;$/;"	m	struct:git_indexer	typeref:typename:git_oid_t	file:
oid_type	my_project/libgit2/src/libgit2/iterator.c	/^	git_oid_t oid_type;$/;"	m	struct:__anon2f88b95a0808	typeref:typename:git_oid_t	file:
oid_type	my_project/libgit2/src/libgit2/iterator.h	/^	git_oid_t oid_type;$/;"	m	struct:__anon2f88b95f0408	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/midx.h	/^	git_oid_t oid_type;$/;"	m	struct:git_midx_file	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/midx.h	/^	git_oid_t oid_type;$/;"	m	struct:git_midx_writer	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_oid_t oid_type;$/;"	m	struct:git_packbuilder	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/pack.h	/^	git_oid_t oid_type;$/;"	m	struct:git_pack_file	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/patch.h	/^	git_oid_t oid_type;$/;"	m	struct:__anon58f59d650108	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_oid_t oid_type;$/;"	m	struct:refdb_fs_backend	typeref:typename:git_oid_t	file:
oid_type	my_project/libgit2/src/libgit2/reflog.h	/^	git_oid_t oid_type;$/;"	m	struct:git_reflog	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/repository.h	/^	git_oid_t oid_type;$/;"	m	struct:git_repository	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_oid_t oid_type;$/;"	m	struct:__anonb9ceeb0b0d08	typeref:typename:git_oid_t
oid_type	my_project/libgit2/src/libgit2/tree-cache.h	/^	git_oid_t oid_type;$/;"	m	struct:git_tree_cache	typeref:typename:git_oid_t
oidmap_value_bykey	my_project/libgit2/src/libgit2/describe.c	/^static void *oidmap_value_bykey(git_oidmap *map, const git_oid *key)$/;"	f	typeref:typename:void *	file:
oids	my_project/libgit2/tests/libgit2/stash/foreach.c	/^	char **oids;$/;"	m	struct:callback_data	typeref:typename:char **	file:
oitem	my_project/libgit2/src/libgit2/diff_generate.c	/^	const git_index_entry *oitem;$/;"	m	struct:__anonff5a2cd30208	typeref:typename:const git_index_entry *	file:
ok	my_project/libgit2/src/libgit2/push.h	/^	bool ok;$/;"	m	struct:push_status	typeref:typename:bool
ok_pkt	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int ok_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
old_binary_base85	my_project/libgit2/tests/libgit2/diff/binary.c	/^	git_str old_binary_base85;$/;"	m	struct:diff_data	typeref:typename:git_str	file:
old_binary_inflatedlen	my_project/libgit2/tests/libgit2/diff/binary.c	/^	size_t old_binary_inflatedlen;$/;"	m	struct:diff_data	typeref:typename:size_t	file:
old_binary_type	my_project/libgit2/tests/libgit2/diff/binary.c	/^	git_diff_binary_t old_binary_type;$/;"	m	struct:diff_data	typeref:typename:git_diff_binary_t	file:
old_entries	my_project/libgit2/src/libgit2/index.c	/^	git_vector *old_entries;$/;"	m	struct:read_tree_data	typeref:typename:git_vector *	file:
old_file	my_project/libgit2/include/git2/diff.h	/^	git_diff_binary_file old_file; \/**< The contents of the old file. *\/$/;"	m	struct:__anon7f3f1dd30908	typeref:typename:git_diff_binary_file
old_file	my_project/libgit2/include/git2/diff.h	/^	git_diff_file old_file;$/;"	m	struct:__anon7f3f1dd30508	typeref:typename:git_diff_file
old_id	my_project/libgit2/tests/libgit2/diff/binary.c	/^	git_oid old_id;$/;"	m	struct:diff_data	typeref:typename:git_oid	file:
old_iter	my_project/libgit2/src/libgit2/diff_generate.c	/^	git_iterator *old_iter;$/;"	m	struct:__anonff5a2cd30208	typeref:typename:git_iterator *	file:
old_len	my_project/libgit2/src/libgit2/config.c	/^	size_t old_len;$/;"	m	struct:rename_data	typeref:typename:size_t	file:
old_lineno	my_project/libgit2/include/git2/diff.h	/^	int    old_lineno;   \/**< Line number in old file or -1 for added line *\/$/;"	m	struct:__anon7f3f1dd30c08	typeref:typename:int
old_lineno	my_project/libgit2/src/libgit2/diff_xdiff.c	/^	int old_lineno, new_lineno;$/;"	m	struct:__anon544d96590108	typeref:typename:int	file:
old_lines	my_project/libgit2/include/git2/diff.h	/^	int    old_lines;     \/**< Number of lines in old_file *\/$/;"	m	struct:__anon7f3f1dd30a08	typeref:typename:int
old_locales	my_project/libgit2/tests/util/regexp.c	/^static const char *old_locales[LC_ALL];$/;"	v	typeref:typename:const char * []	file:
old_name	my_project/libgit2/src/libgit2/refs.c	/^    const char *old_name;$/;"	m	struct:__anon5cf2b4200208	typeref:typename:const char *	file:
old_oid	my_project/libgit2/tests/libgit2/online/push_util.h	/^	git_oid old_oid;$/;"	m	struct:__anonec09f7510108	typeref:typename:git_oid
old_path	my_project/libgit2/src/libgit2/patch_parse.c	/^	char *old_path, *new_path;$/;"	m	struct:__anonddb10c3a0108	typeref:typename:char *	file:
old_path	my_project/libgit2/tests/libgit2/diff/binary.c	/^	char *old_path;$/;"	m	struct:diff_data	typeref:typename:char *	file:
old_prefix	my_project/libgit2/include/git2/diff.h	/^	const char *old_prefix;$/;"	m	struct:__anon7f3f1dd30608	typeref:typename:const char *
old_prefix	my_project/libgit2/src/libgit2/diff_print.c	/^	const char *old_prefix;$/;"	m	struct:__anon0d2887b50108	typeref:typename:const char *	file:
old_prefix	my_project/libgit2/src/libgit2/patch_parse.c	/^	char *old_prefix, *new_prefix;$/;"	m	struct:__anonddb10c3a0108	typeref:typename:char *	file:
old_remote_name	my_project/libgit2/src/libgit2/remote.c	/^	const char *old_remote_name;$/;"	m	struct:update_data	typeref:typename:const char *	file:
old_src	my_project/libgit2/src/libgit2/diff.h	/^	git_iterator_t    old_src;$/;"	m	struct:git_diff	typeref:typename:git_iterator_t
old_start	my_project/libgit2/include/git2/diff.h	/^	int    old_start;     \/**< Starting line number in old_file *\/$/;"	m	struct:__anon7f3f1dd30a08	typeref:typename:int
oldest_commit	my_project/libgit2/include/git2/blame.h	/^	git_oid oldest_commit;$/;"	m	struct:git_blame_options	typeref:typename:git_oid
oldname	my_project/libgit2/tests/libgit2/status/renames.c	/^	const char *oldname;$/;"	m	struct:status_entry	typeref:typename:const char *	file:
on_body	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_data_cb on_body;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_data_cb
on_body	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int on_body(git_http_parser *parser, const char *buf, size_t len)$/;"	f	typeref:typename:int	file:
on_body	my_project/libgit2/src/libgit2/transports/httpparser.c	/^static int on_body(http_parser *p, const char *buf, size_t len)$/;"	f	typeref:typename:int	file:
on_body	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	int (*on_body)(git_http_parser *, const char *, size_t);$/;"	m	struct:__anon03e70bb10308	typeref:typename:int (*)(git_http_parser *,const char *,size_t)
on_chunk_complete	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_cb      on_chunk_complete;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_cb
on_chunk_extension_name	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_data_cb      on_chunk_extension_name;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_data_cb
on_chunk_extension_name_complete	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_cb      on_chunk_extension_name_complete;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_cb
on_chunk_extension_value	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_data_cb      on_chunk_extension_value;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_data_cb
on_chunk_extension_value_complete	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_cb      on_chunk_extension_value_complete;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_cb
on_chunk_header	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_cb      on_chunk_header;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_cb
on_disk	my_project/libgit2/src/libgit2/index.h	/^	unsigned int on_disk:1;$/;"	m	struct:git_index	typeref:typename:unsigned int:1
on_dup_entry	my_project/libgit2/src/libgit2/tree.c	/^static int on_dup_entry(void **old, void *new)$/;"	f	typeref:typename:int	file:
on_header_complete	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int on_header_complete(git_http_parser *parser)$/;"	f	typeref:typename:int	file:
on_header_field	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_data_cb on_header_field;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_data_cb
on_header_field	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int on_header_field(git_http_parser *parser, const char *str, size_t len)$/;"	f	typeref:typename:int	file:
on_header_field	my_project/libgit2/src/libgit2/transports/httpparser.c	/^static int on_header_field(http_parser *p, const char *str, size_t len)$/;"	f	typeref:typename:int	file:
on_header_field	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	int (*on_header_field)(git_http_parser *, const char *, size_t);$/;"	m	struct:__anon03e70bb10308	typeref:typename:int (*)(git_http_parser *,const char *,size_t)
on_header_field_complete	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_cb      on_header_field_complete;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_cb
on_header_value	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_data_cb on_header_value;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_data_cb
on_header_value	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int on_header_value(git_http_parser *parser, const char *str, size_t len)$/;"	f	typeref:typename:int	file:
on_header_value	my_project/libgit2/src/libgit2/transports/httpparser.c	/^static int on_header_value(http_parser *p, const char *str, size_t len)$/;"	f	typeref:typename:int	file:
on_header_value	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	int (*on_header_value)(git_http_parser *, const char *, size_t);$/;"	m	struct:__anon03e70bb10308	typeref:typename:int (*)(git_http_parser *,const char *,size_t)
on_header_value_complete	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_cb      on_header_value_complete;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_cb
on_headers_complete	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_cb      on_headers_complete;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_cb
on_headers_complete	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int on_headers_complete(git_http_parser *parser)$/;"	f	typeref:typename:int	file:
on_headers_complete	my_project/libgit2/src/libgit2/transports/httpparser.c	/^static int on_headers_complete(http_parser *p)$/;"	f	typeref:typename:int	file:
on_headers_complete	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	int (*on_headers_complete)(git_http_parser *);$/;"	m	struct:__anon03e70bb10308	typeref:typename:int (*)(git_http_parser *)
on_message_begin	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_cb      on_message_begin;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_cb
on_message_begin	my_project/libgit2/src/libgit2/transports/httpparser.c	/^static int on_message_begin(http_parser *p)$/;"	f	typeref:typename:int	file:
on_message_begin	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	int (*on_message_begin)(git_http_parser *);$/;"	m	struct:__anon03e70bb10308	typeref:typename:int (*)(git_http_parser *)
on_message_complete	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_cb      on_message_complete;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_cb
on_message_complete	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int on_message_complete(git_http_parser *parser)$/;"	f	typeref:typename:int	file:
on_message_complete	my_project/libgit2/src/libgit2/transports/httpparser.c	/^static int on_message_complete(http_parser *p)$/;"	f	typeref:typename:int	file:
on_message_complete	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	int (*on_message_complete)(git_http_parser *);$/;"	m	struct:__anon03e70bb10308	typeref:typename:int (*)(git_http_parser *)
on_method	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_data_cb on_method;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_data_cb
on_method_complete	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_cb      on_method_complete;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_cb
on_reset	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_cb      on_reset;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_cb
on_status	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_data_cb on_status;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_data_cb
on_status_complete	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_cb      on_status_complete;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_cb
on_url	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_data_cb on_url;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_data_cb
on_url	my_project/libgit2/src/libgit2/transports/httpparser.c	/^static int on_url(http_parser *p, const char *str, size_t len)$/;"	f	typeref:typename:int	file:
on_url	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	int (*on_url)(git_http_parser *, const char *, size_t);$/;"	m	struct:__anon03e70bb10308	typeref:typename:int (*)(git_http_parser *,const char *,size_t)
on_url_complete	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_cb      on_url_complete;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_cb
on_version	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_data_cb on_version;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_data_cb
on_version_complete	my_project/libgit2/deps/llhttp/llhttp.h	/^  llhttp_cb      on_version_complete;$/;"	m	struct:llhttp_settings_s	typeref:typename:llhttp_cb
once	my_project/libgit2/deps/zlib/crc32.c	/^local void once(once_t *state, void (*init)(void)) {$/;"	f	typeref:typename:local void
once_s	my_project/libgit2/deps/zlib/crc32.c	/^struct once_s {$/;"	s	file:
once_t	my_project/libgit2/deps/zlib/crc32.c	/^typedef struct once_s once_t;$/;"	t	typeref:struct:once_s	file:
once_target	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const  pcre_uchar *once_target; \/* Where to back up to for atomic groups *\/$/;"	m	struct:match_data	typeref:typename:const pcre_uchar *
one	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static object_data one = {$/;"	v	typeref:typename:object_data
oneValueArgs	my_project/libgit2/cmake/PkgBuildConfig.cmake	/^	set(oneValueArgs NAME DESCRIPTION VERSION FILENAME LIBS_SELF)$/;"	v	function:pkg_build_config
one_blob_and_one_tree	my_project/libgit2/tests/libgit2/object/tree/duplicateentries.c	/^static void one_blob_and_one_tree(git_treebuilder *bld)$/;"	f	typeref:typename:void	file:
one_bytes	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char one_bytes[] = {$/;"	v	typeref:typename:unsigned char[]
one_data	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static unsigned char one_data[] = {$/;"	v	typeref:typename:unsigned char[]
one_data	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char one_data[] = {$/;"	v	typeref:typename:unsigned char[]
one_entry	my_project/libgit2/tests/util/dirent.c	/^static int one_entry(void *state, git_str *path)$/;"	f	typeref:typename:int	file:
one_id	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static char *one_id = "8b137891791fe96927ad78e64b0aad7bded08bdc";$/;"	v	typeref:typename:char *
one_obj	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static git_rawobj one_obj = {$/;"	v	typeref:typename:git_rawobj
one_sha256	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static object_data one_sha256 = {$/;"	v	typeref:typename:object_data
one_to_two	my_project/libgit2/src/libgit2/checkout.c	/^	             one_to_two:1,$/;"	m	struct:__anon35c6e5c60308	typeref:typename:unsigned int:1	file:
only_follow_first_parent	my_project/libgit2/include/git2/describe.h	/^	int only_follow_first_parent;$/;"	m	struct:git_describe_options	typeref:typename:int
onscreen	my_project/libgit2/src/cli/progress.h	/^	git_str onscreen;$/;"	m	struct:__anonb5f2ec150208	typeref:typename:git_str
onto_id	my_project/libgit2/src/libgit2/rebase.c	/^	git_oid onto_id;$/;"	m	struct:git_rebase	typeref:typename:git_oid	file:
onto_name	my_project/libgit2/src/libgit2/rebase.c	/^	char *onto_name;$/;"	m	struct:git_rebase	typeref:typename:char *	file:
oom_alloc	my_project/libgit2/tests/util/str/oom.c	/^static git_allocator oom_alloc;$/;"	v	typeref:typename:git_allocator	file:
oom_error	my_project/libgit2/src/util/errors.c	/^static git_error oom_error = {$/;"	v	typeref:typename:git_error	file:
oom_malloc	my_project/libgit2/tests/util/str/oom.c	/^static void *oom_malloc(size_t n, const char *file, int line)$/;"	f	typeref:typename:void *	file:
oom_realloc	my_project/libgit2/tests/util/str/oom.c	/^static void *oom_realloc(void *p, size_t n, const char *file, int line)$/;"	f	typeref:typename:void *	file:
op	my_project/libgit2/deps/pcre/pcre_compile.c	/^  int   op;                  \/* Op when no arg, or -1 if arg mandatory *\/$/;"	m	struct:verbitem	typeref:typename:int	file:
op	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define op /;"	d	file:
op	my_project/libgit2/deps/zlib/inftrees.h	/^    unsigned char op;           \/* operation, extra bits, table bits *\/$/;"	m	struct:__anon3554db3d0108	typeref:typename:unsigned char
op_arg	my_project/libgit2/deps/pcre/pcre_compile.c	/^  int   op_arg;              \/* Op when arg present, or -1 if not allowed *\/$/;"	m	struct:verbitem	typeref:typename:int	file:
opaque	my_project/libgit2/deps/zlib/zlib.h	/^    voidpf     opaque;  \/* private data object passed to zalloc and zfree *\/$/;"	m	struct:z_stream_s	typeref:typename:voidpf
opcode_possessify	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 opcode_possessify[] = {$/;"	v	typeref:typename:const pcre_uint8[]	file:
open	my_project/libgit2/deps/zlib/gzguts.h	/^#  define open /;"	d
open	my_project/libgit2/examples/common.h	/^# define open /;"	d
open	my_project/libgit2/src/libgit2/checkout.c	/^	int open;$/;"	m	struct:checkout_stream	typeref:typename:int	file:
open_algorithm_provider	my_project/libgit2/src/util/hash/win32.c	/^	cng_open_algorithm_provider_fn open_algorithm_provider;$/;"	m	struct:cng_provider	typeref:typename:cng_open_algorithm_provider_fn	file:
open_capitem	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct open_capitem {$/;"	s
open_capitem	my_project/libgit2/deps/pcre/pcre_internal.h	/^} open_capitem;$/;"	t	typeref:struct:open_capitem
open_caps	my_project/libgit2/deps/pcre/pcre_internal.h	/^  open_capitem *open_caps;          \/* Chain of open capture items *\/$/;"	m	struct:compile_data	typeref:typename:open_capitem *
open_gitmodules	my_project/libgit2/src/libgit2/submodule.c	/^static git_config_backend *open_gitmodules($/;"	f	typeref:typename:git_config_backend *	file:
open_once	my_project/libgit2/src/util/win32/posix_w32.c	/^GIT_INLINE(int) open_once($/;"	f	typeref:typename:int
open_opts	my_project/libgit2/src/util/win32/posix_w32.c	/^struct open_opts {$/;"	s	file:
open_opts_from_posix	my_project/libgit2/src/util/win32/posix_w32.c	/^GIT_INLINE(void) open_opts_from_posix(struct open_opts *opts, int flags, mode_t mode)$/;"	f	typeref:typename:void
open_windows	my_project/libgit2/src/libgit2/mwindow.h	/^	unsigned int open_windows;$/;"	m	struct:git_mwindow_ctl	typeref:typename:unsigned int
open_worktree_dir	my_project/libgit2/src/libgit2/worktree.c	/^static int open_worktree_dir(git_worktree **out, const char *parent, const char *dir, const char/;"	f	typeref:typename:int	file:
opendir	my_project/libgit2/src/util/win32/dir.h	/^#	define opendir	/;"	d
openssl_certificate	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int openssl_certificate(git_cert **out, git_stream *stream)$/;"	f	typeref:typename:int	file:
openssl_close	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int openssl_close(git_stream *stream)$/;"	f	typeref:typename:int	file:
openssl_connect	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int openssl_connect(git_stream *stream)$/;"	f	typeref:typename:int	file:
openssl_ensure_initialized	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int openssl_ensure_initialized(void)$/;"	f	typeref:typename:int	file:
openssl_free	my_project/libgit2/src/libgit2/streams/openssl.c	/^static void openssl_free(git_stream *stream)$/;"	f	typeref:typename:void	file:
openssl_handle	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	void *openssl_handle;$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:void *
openssl_handle	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^static void *openssl_handle;$/;"	v	typeref:typename:void *	file:
openssl_handle	my_project/libgit2/src/util/hash/openssl.c	/^static void *openssl_handle;$/;"	v	typeref:typename:void *	file:
openssl_init	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int openssl_init(void)$/;"	f	typeref:typename:int	file:
openssl_initialized	my_project/libgit2/src/libgit2/streams/openssl.c	/^bool openssl_initialized;$/;"	v	typeref:typename:bool
openssl_locking_function	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^static void openssl_locking_function(int mode, int n, const char *file, int line)$/;"	f	typeref:typename:void	file:
openssl_locks	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^static git_mutex *openssl_locks;$/;"	v	typeref:typename:git_mutex *	file:
openssl_mutex	my_project/libgit2/src/libgit2/streams/openssl.c	/^git_mutex openssl_mutex;$/;"	v	typeref:typename:git_mutex
openssl_read	my_project/libgit2/src/libgit2/streams/openssl.c	/^static ssize_t openssl_read(git_stream *stream, void *data, size_t len)$/;"	f	typeref:typename:ssize_t	file:
openssl_set_proxy	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int openssl_set_proxy(git_stream *stream, const git_proxy_options *proxy_opts)$/;"	f	typeref:typename:int	file:
openssl_stream	my_project/libgit2/src/libgit2/streams/openssl.c	/^} openssl_stream;$/;"	t	typeref:struct:__anonb80f06c20108	file:
openssl_stream_wrap	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int openssl_stream_wrap($/;"	f	typeref:typename:int	file:
openssl_sym	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^GIT_INLINE(void *) openssl_sym(int *err, const char *name, bool required)$/;"	f	typeref:typename:void *
openssl_write	my_project/libgit2/src/libgit2/streams/openssl.c	/^static ssize_t openssl_write(git_stream *stream, const char *data, size_t data_len, int flags)$/;"	f	typeref:typename:ssize_t	file:
opportunistic_updates	my_project/libgit2/src/libgit2/remote.c	/^static int opportunistic_updates($/;"	f	typeref:typename:int	file:
opt	my_project/libgit2/src/libgit2/hashsig.c	/^	git_hashsig_option_t opt;$/;"	m	struct:git_hashsig	typeref:typename:git_hashsig_option_t	file:
opt_len	my_project/libgit2/deps/zlib/deflate.h	/^    ulg opt_len;        \/* bit length of current block with optimal trees *\/$/;"	m	struct:internal_state	typeref:typename:ulg
optimized_cbracket	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u8 *optimized_cbracket;$/;"	m	struct:compiler_common	typeref:typename:sljit_u8 *	file:
optional_str_arg	my_project/libgit2/examples/args.c	/^int optional_str_arg($/;"	f	typeref:typename:int
options	my_project/libgit2/cmake/PkgBuildConfig.cmake	/^	set(options)$/;"	v	function:pkg_build_config
options	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 options;            \/* Public options *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
options	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 options;            \/* Public options *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint32
options	my_project/libgit2/src/libgit2/blame.h	/^	git_blame_options options;$/;"	m	struct:git_blame	typeref:typename:git_blame_options
options	my_project/libgit2/src/libgit2/filter.c	/^	git_filter_options options;$/;"	m	struct:git_filter_source	typeref:typename:git_filter_options	file:
options	my_project/libgit2/src/libgit2/filter.h	/^	git_filter_options options;$/;"	m	struct:__anon9372afdb0108	typeref:typename:git_filter_options
options	my_project/libgit2/src/libgit2/odb.h	/^	git_odb_options options;$/;"	m	struct:git_odb	typeref:typename:git_odb_options
options	my_project/libgit2/src/libgit2/odb_loose.c	/^	git_odb_backend_loose_options options;$/;"	m	struct:loose_backend	typeref:typename:git_odb_backend_loose_options	file:
options	my_project/libgit2/src/libgit2/rebase.c	/^	git_rebase_options options;$/;"	m	struct:git_rebase	typeref:typename:git_rebase_options	file:
options	my_project/libgit2/tests/clar/generate.py	/^    options, args = parser.parse_args()$/;"	v
options_cmp	my_project/libgit2/tests/libgit2/core/structinit.c	/^static void options_cmp(void *one, void *two, size_t size, const char *name)$/;"	f	typeref:typename:void	file:
opts	my_project/libgit2/examples/stash.c	/^struct opts {$/;"	s	file:
opts	my_project/libgit2/examples/tag.c	/^	struct tag_options *opts;$/;"	m	struct:__anonc073ee270108	typeref:struct:tag_options *	file:
opts	my_project/libgit2/src/cli/cmd_cat_file.c	/^static const cli_opt_spec opts[] = {$/;"	v	typeref:typename:const cli_opt_spec[]	file:
opts	my_project/libgit2/src/cli/cmd_clone.c	/^static const cli_opt_spec opts[] = {$/;"	v	typeref:typename:const cli_opt_spec[]	file:
opts	my_project/libgit2/src/cli/cmd_config.c	/^static const cli_opt_spec opts[] = {$/;"	v	typeref:typename:const cli_opt_spec[]	file:
opts	my_project/libgit2/src/cli/cmd_hash_object.c	/^static const cli_opt_spec opts[] = {$/;"	v	typeref:typename:const cli_opt_spec[]	file:
opts	my_project/libgit2/src/cli/cmd_help.c	/^static const cli_opt_spec opts[] = {$/;"	v	typeref:typename:const cli_opt_spec[]	file:
opts	my_project/libgit2/src/cli/cmd_index_pack.c	/^static const cli_opt_spec opts[] = {$/;"	v	typeref:typename:const cli_opt_spec[]	file:
opts	my_project/libgit2/src/libgit2/apply.c	/^	git_apply_options opts;$/;"	m	struct:__anonf90645360208	typeref:typename:git_apply_options	file:
opts	my_project/libgit2/src/libgit2/attr.c	/^	git_attr_options *opts;$/;"	m	struct:__anon36621a0b0208	typeref:typename:git_attr_options *	file:
opts	my_project/libgit2/src/libgit2/checkout.c	/^	git_checkout_options opts;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_checkout_options	file:
opts	my_project/libgit2/src/libgit2/describe.c	/^	git_describe_options *opts;$/;"	m	struct:get_name_data	typeref:typename:git_describe_options *	file:
opts	my_project/libgit2/src/libgit2/diff.h	/^	git_diff_options  opts;$/;"	m	struct:git_diff	typeref:typename:git_diff_options
opts	my_project/libgit2/src/libgit2/odb_pack.c	/^	git_odb_backend_pack_options opts;$/;"	m	struct:pack_backend	typeref:typename:git_odb_backend_pack_options	file:
opts	my_project/libgit2/src/libgit2/patch_parse.h	/^	git_patch_options opts;$/;"	m	struct:__anonddb10c3f0108	typeref:typename:git_patch_options
opts	my_project/libgit2/src/libgit2/status.h	/^	git_status_options opts;$/;"	m	struct:git_status_list	typeref:typename:git_status_options
opts	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_http_client_options opts;$/;"	m	struct:git_http_client	typeref:typename:git_http_client_options	file:
opts	my_project/libgit2/tests/libgit2/diff/blob.c	/^static git_diff_options opts;$/;"	v	typeref:typename:git_diff_options	file:
opts	my_project/libgit2/tests/libgit2/diff/tree.c	/^static git_diff_options opts;$/;"	v	typeref:typename:git_diff_options	file:
opts_add_commit	my_project/libgit2/examples/describe.c	/^static void opts_add_commit(struct describe_options *opts, const char *commit)$/;"	f	typeref:typename:void	file:
opts_add_refish	my_project/libgit2/examples/merge.c	/^static void opts_add_refish(struct merge_options *opts, const char *refish)$/;"	f	typeref:typename:void	file:
opts_done	my_project/libgit2/examples/args.h	/^	unsigned int opts_done : 1; \/**< Did we see a -- separator *\/$/;"	m	struct:args_info	typeref:typename:unsigned int:1
opts_flags	my_project/libgit2/src/libgit2/diff_file.h	/^	uint32_t opts_flags;$/;"	m	struct:__anonffb6e84d0108	typeref:typename:uint32_t
opts_free_baseline	my_project/libgit2/src/libgit2/checkout.c	/^	bool opts_free_baseline;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:bool	file:
opts_max_size	my_project/libgit2/src/libgit2/diff_file.h	/^	git_object_size_t opts_max_size;$/;"	m	struct:__anonffb6e84d0108	typeref:typename:git_object_size_t
org_ptr	my_project/libgit2/deps/zlib/zutil.c	/^    voidpf org_ptr;$/;"	m	struct:ptr_table_s	typeref:typename:voidpf	file:
orig_commit_id	my_project/libgit2/include/git2/blame.h	/^	git_oid orig_commit_id;$/;"	m	struct:git_blame_hunk	typeref:typename:git_oid
orig_head_id	my_project/libgit2/src/libgit2/rebase.c	/^	git_oid orig_head_id;$/;"	m	struct:git_rebase	typeref:typename:git_oid	file:
orig_head_name	my_project/libgit2/src/libgit2/rebase.c	/^	char *orig_head_name;$/;"	m	struct:git_rebase	typeref:typename:char *	file:
orig_http_proxy	my_project/libgit2/tests/libgit2/remote/httpproxy.c	/^static char *orig_http_proxy = NULL;$/;"	v	typeref:typename:char *	file:
orig_https_proxy	my_project/libgit2/tests/libgit2/remote/httpproxy.c	/^static char *orig_https_proxy = NULL;$/;"	v	typeref:typename:char *	file:
orig_name	my_project/libgit2/src/libgit2/config_file.c	/^	const char *orig_name;$/;"	m	struct:write_data	typeref:typename:const char *	file:
orig_no_proxy	my_project/libgit2/tests/libgit2/remote/httpproxy.c	/^static char *orig_no_proxy = NULL;$/;"	v	typeref:typename:char *	file:
orig_path	my_project/libgit2/include/git2/blame.h	/^	const char *orig_path;$/;"	m	struct:git_blame_hunk	typeref:typename:const char *
orig_provider	my_project/libgit2/tests/util/sha1.c	/^static git_hash_win32_provider_t orig_provider;$/;"	v	typeref:typename:git_hash_win32_provider_t	file:
orig_provider	my_project/libgit2/tests/util/sha256.c	/^static git_hash_win32_provider_t orig_provider;$/;"	v	typeref:typename:git_hash_win32_provider_t	file:
orig_section	my_project/libgit2/src/libgit2/config_file.c	/^	const char *orig_section;$/;"	m	struct:write_data	typeref:typename:const char *	file:
orig_signature	my_project/libgit2/include/git2/blame.h	/^	git_signature *orig_signature;$/;"	m	struct:git_blame_hunk	typeref:typename:git_signature *
orig_start_line_number	my_project/libgit2/include/git2/blame.h	/^	size_t orig_start_line_number;$/;"	m	struct:git_blame_hunk	typeref:typename:size_t
origin	my_project/libgit2/include/git2/diff.h	/^	char   origin;       \/**< A git_diff_line_t value *\/$/;"	m	struct:__anon7f3f1dd30c08	typeref:typename:char
origin_decref	my_project/libgit2/src/libgit2/blame_git.c	/^static void origin_decref(git_blame__origin *o)$/;"	f	typeref:typename:void	file:
origin_incref	my_project/libgit2/src/libgit2/blame_git.c	/^static git_blame__origin *origin_incref(git_blame__origin *o)$/;"	f	typeref:typename:git_blame__origin *	file:
origin_path	my_project/libgit2/include/git2/config.h	/^	const char *origin_path;$/;"	m	struct:git_config_entry	typeref:typename:const char *
origin_path	my_project/libgit2/include/git2/sys/config.h	/^	const char *origin_path;$/;"	m	struct:__anonebfd18fe0108	typeref:typename:const char *
origin_path	my_project/libgit2/src/libgit2/config_mem.c	/^	char *origin_path;$/;"	m	struct:__anon766d71c40108	typeref:typename:char *	file:
origin_path	my_project/libgit2/src/libgit2/config_mem.c	/^	const char *origin_path;$/;"	m	struct:__anon766d71c40208	typeref:typename:const char *	file:
origin_url	my_project/libgit2/include/git2/repository.h	/^	const char *origin_url;$/;"	m	struct:__anon67af0d3a0408	typeref:typename:const char *
original_mwindow_file_limit	my_project/libgit2/tests/libgit2/pack/filelimit.c	/^static size_t original_mwindow_file_limit = 0;$/;"	v	typeref:typename:size_t	file:
original_mwindow_file_limit	my_project/libgit2/tests/libgit2/pack/threadsafety.c	/^static size_t original_mwindow_file_limit = 0;$/;"	v	typeref:typename:size_t	file:
os	my_project/libgit2/deps/zlib/zlib.h	/^    int     os;         \/* operating system *\/$/;"	m	struct:gz_header_s	typeref:typename:int
osf_flags	my_project/libgit2/src/util/win32/posix_w32.c	/^	int osf_flags;$/;"	m	struct:open_opts	typeref:typename:int	file:
other_case	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_int32 other_case; \/* offset to other case, or zero if none *\/$/;"	m	struct:__anon9562267c0608	typeref:typename:pcre_int32
other_commit_id	my_project/libgit2/tests/libgit2/refs/races.c	/^static const char *other_commit_id = "a65fedf39aefe402d3bb6e24df4d4f5fe4547750";$/;"	v	typeref:typename:const char *	file:
other_flags	my_project/libgit2/src/libgit2/diff_driver.c	/^	uint32_t other_flags;$/;"	m	struct:git_diff_driver	typeref:typename:uint32_t	file:
other_idx	my_project/libgit2/src/libgit2/merge.c	/^	size_t other_idx;$/;"	m	struct:merge_diff_similarity	typeref:typename:size_t	file:
other_refname	my_project/libgit2/tests/libgit2/refs/races.c	/^static const char *other_refname = "refs\/heads\/foo";$/;"	v	typeref:typename:const char *	file:
othercasebit	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^      unsigned int othercasebit;$/;"	m	struct:char_iterator_backtrack::__anon4bd17169020a::__anon4bd171690308	typeref:typename:unsigned int	file:
otype_from_mode	my_project/libgit2/src/libgit2/tree.c	/^static git_object_t otype_from_mode(git_filemode_t filemode)$/;"	f	typeref:typename:git_object_t	file:
our_entry	my_project/libgit2/src/libgit2/merge.h	/^	git_index_entry our_entry;$/;"	m	struct:__anon7b397d650308	typeref:typename:git_index_entry
our_label	my_project/libgit2/include/git2/checkout.h	/^	const char *our_label; \/**< the name of the "our" side of conflicts *\/$/;"	m	struct:git_checkout_options	typeref:typename:const char *
our_label	my_project/libgit2/include/git2/merge.h	/^	const char *our_label;$/;"	m	struct:__anon1374edca0508	typeref:typename:const char *
our_mode	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	unsigned int our_mode;$/;"	m	struct:merge_reuc_entry	typeref:typename:unsigned int
our_oid_str	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	char our_oid_str[GIT_OID_SHA1_HEXSIZE+1];$/;"	m	struct:merge_reuc_entry	typeref:typename:char[]
our_path	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	char our_path[128];$/;"	m	struct:merge_name_entry	typeref:typename:char[128]
our_status	my_project/libgit2/src/libgit2/merge.h	/^	git_delta_t our_status;$/;"	m	struct:__anon7b397d650308	typeref:typename:git_delta_t
ours	my_project/libgit2/include/git2/sys/index.h	/^	char *ours;$/;"	m	struct:git_index_name_entry	typeref:typename:char *
ours	my_project/libgit2/src/libgit2/checkout.c	/^	const git_index_entry *ours;$/;"	m	struct:__anon35c6e5c60308	typeref:typename:const git_index_entry *	file:
ours	my_project/libgit2/src/libgit2/merge_driver.h	/^	const git_index_entry *ours;$/;"	m	struct:git_merge_driver_source	typeref:typename:const git_index_entry *
ours	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^	char ours[64];$/;"	m	struct:checkout_name_entry	typeref:typename:char[64]	file:
ours	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	struct merge_index_with_status ours;$/;"	m	struct:merge_index_conflict_data	typeref:struct:merge_index_with_status
out	my_project/libgit2/deps/zlib/gzguts.h	/^    unsigned char *out;     \/* output buffer (double-sized when reading) *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:unsigned char *
out_degree	my_project/libgit2/src/libgit2/commit_list.h	/^	uint16_t out_degree;$/;"	m	struct:git_commit_list_node	typeref:typename:uint16_t
out_func	my_project/libgit2/deps/zlib/zconf.h	/^#  define out_func /;"	d
out_func	my_project/libgit2/deps/zlib/zlib.h	/^typedef int (*out_func)(void FAR *, unsigned char FAR *, unsigned);$/;"	t	typeref:typename:int (*)(void FAR *,unsigned char FAR *,unsigned)
out_hunk	my_project/libgit2/deps/xdiff/xdiff.h	/^	int (*out_hunk)(void *,$/;"	m	struct:s_xdemitcb	typeref:typename:int (*)(void *,long old_begin,long old_nr,long new_begin,long new_nr,const char * func,long funclen)
out_line	my_project/libgit2/deps/xdiff/xdiff.h	/^	int (*out_line)(void *, mmbuffer_t *, int);$/;"	m	struct:s_xdemitcb	typeref:typename:int (*)(void *,mmbuffer_t *,int)
out_of_order_pack	my_project/libgit2/tests/libgit2/pack/indexer.c	/^static const unsigned char out_of_order_pack[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
out_of_order_pack_len	my_project/libgit2/tests/libgit2/pack/indexer.c	/^static const unsigned int out_of_order_pack_len = 112;$/;"	v	typeref:typename:const unsigned int	file:
outer	my_project/libgit2/deps/pcre/pcre_internal.h	/^  struct branch_chain *outer;$/;"	m	struct:branch_chain	typeref:struct:branch_chain *
output	my_project/libgit2/examples/diff.c	/^	int output;$/;"	m	struct:diff_options	typeref:typename:int	file:
output	my_project/libgit2/src/libgit2/diff_xdiff.h	/^	git_patch_generated_output output;$/;"	m	struct:__anon544d965e0108	typeref:typename:git_patch_generated_output
output	my_project/libgit2/src/libgit2/filter.c	/^	git_str *output;$/;"	m	struct:buffered_stream	typeref:typename:git_str *	file:
output	my_project/libgit2/tests/clar/generate.py	/^    output = options.output or path$/;"	v
output_buf	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	char *output_buf;       \/* Caller's output buffer *\/$/;"	m	struct:__anon3d590bbe0608	typeref:typename:char *	file:
output_conflicts	my_project/libgit2/examples/merge.c	/^static void output_conflicts(git_index *index)$/;"	f	typeref:typename:void	file:
output_eol	my_project/libgit2/src/libgit2/crlf.c	/^static git_configmap_value output_eol(struct crlf_attrs *ca)$/;"	f	typeref:typename:git_configmap_value	file:
output_format	my_project/libgit2/tests/clar/clar.c	/^	enum cl_output_format output_format;$/;"	m	struct:__anon15d96e120108	typeref:enum:cl_output_format	file:
output_result	my_project.git/hooks/fsmonitor-watchman.sample	/^sub output_result {$/;"	s
output_result	my_project/libgit2/tests/resources/testrepo_256.git/hooks/fsmonitor-watchman.sample	/^sub output_result {$/;"	s
output_size	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	size_t output_size;     \/* Size of caller's output buffer *\/$/;"	m	struct:__anon3d590bbe0608	typeref:typename:size_t	file:
output_written	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	size_t output_written;  \/* Bytes we've written to output buffer *\/$/;"	m	struct:__anon3d590bbe0608	typeref:typename:size_t	file:
ovector_start	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 ovector_start;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
overwrite_filemode	my_project/libgit2/tests/libgit2/diff/drivers.c	/^static void overwrite_filemode(const char *expected, git_buf *actual)$/;"	f	typeref:typename:void	file:
own_cache	my_project/libgit2/src/libgit2/odb.h	/^	git_cache own_cache;$/;"	m	struct:git_odb	typeref:typename:git_cache
owned	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^	int owned;$/;"	m	struct:__anoncc3749c90108	typeref:typename:int	file:
owned	my_project/libgit2/src/libgit2/streams/openssl.c	/^	int owned;$/;"	m	struct:__anonb80f06c20108	typeref:typename:int	file:
owned	my_project/libgit2/src/libgit2/streams/schannel.c	/^	int owned;$/;"	m	struct:__anonafd1b44a0208	typeref:typename:int	file:
owned	my_project/libgit2/src/libgit2/streams/stransport.c	/^	int owned;$/;"	m	struct:__anon898973fe0108	typeref:typename:int	file:
ownedBy	my_project/libgit2/FUNDING.json	/^      "ownedBy": "0x939121dD13f796C69d0Ac4185787285518081f8D"$/;"	s	object:drips.ethereum
owner	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^	git_transport *owner;$/;"	m	struct:fuzzer_subtransport	typeref:typename:git_transport *	file:
owner	my_project/libgit2/src/libgit2/transports/git.c	/^	git_transport *owner;$/;"	m	struct:__anoneb1923e30208	typeref:typename:git_transport *	file:
owner	my_project/libgit2/src/libgit2/transports/http.c	/^	transport_smart *owner;$/;"	m	struct:__anon515ae8bf0508	typeref:typename:transport_smart *	file:
owner	my_project/libgit2/src/libgit2/transports/local.c	/^	git_remote *owner;$/;"	m	struct:__anona3bc4f8a0108	typeref:typename:git_remote *	file:
owner	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_remote *owner;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:git_remote *
owner	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^	git_transport *owner;$/;"	m	struct:__anonec53c3310208	typeref:typename:git_transport *	file:
owner	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^	transport_smart *owner;$/;"	m	struct:__anonf54f66e30208	typeref:typename:transport_smart *	file:
owner	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	transport_smart *owner;$/;"	m	struct:__anon5ba854ad0408	typeref:typename:transport_smart *	file:
owner	my_project/libgit2/src/util/util.h	/^	void *owner;$/;"	m	struct:__anon381de8c40108	typeref:typename:void *
owner	my_project/libgit2/tests/libgit2/transport/register.c	/^	git_transport *owner;$/;"	m	struct:custom_subtransport	typeref:typename:git_transport *	file:
p	my_project/libgit2/src/libgit2/pack.h	/^	struct git_pack_file *p;$/;"	m	struct:git_pack_entry	typeref:struct:git_pack_file *
p	my_project/libgit2/src/libgit2/pack.h	/^	struct git_pack_file *p;$/;"	m	struct:git_packfile_stream	typeref:struct:git_pack_file *
p	my_project/libgit2/tests/util/posix.c	/^		const char *p;$/;"	m	struct:test_posix__inet_pton::in6_addr_data	typeref:typename:const char *	file:
p	my_project/libgit2/tests/util/posix.c	/^		const char *p;$/;"	m	struct:test_posix__inet_pton::in_addr_data	typeref:typename:const char *	file:
p_access	my_project/libgit2/src/util/unix/posix.h	/^#define p_access(/;"	d
p_access	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_access(const char *path, mode_t mode)$/;"	f	typeref:typename:int
p_chdir	my_project/libgit2/src/util/unix/posix.h	/^#define p_chdir(/;"	d
p_chdir	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_chdir(const char *path)$/;"	f	typeref:typename:int
p_chmod	my_project/libgit2/src/util/unix/posix.h	/^# define p_chmod(/;"	d
p_chmod	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_chmod(const char *path, mode_t mode)$/;"	f	typeref:typename:int
p_close	my_project/libgit2/src/util/posix.h	/^#define p_close(/;"	d
p_creat	my_project/libgit2/src/util/posix.c	/^int p_creat(const char *path, mode_t mode)$/;"	f	typeref:typename:int
p_creat	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_creat(const char *path, mode_t mode)$/;"	f	typeref:typename:int
p_freeaddrinfo	my_project/libgit2/src/util/posix.c	/^void p_freeaddrinfo(struct addrinfo *info)$/;"	f	typeref:typename:void
p_freeaddrinfo	my_project/libgit2/src/util/posix.h	/^#	define p_freeaddrinfo(/;"	d
p_fstat	my_project/libgit2/src/util/unix/posix.h	/^#define p_fstat(/;"	d
p_fstat	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_fstat(int fd, struct stat *buf)$/;"	f	typeref:typename:int
p_fsync	my_project/libgit2/src/util/unix/posix.h	/^GIT_INLINE(int) p_fsync(int fd)$/;"	f	typeref:typename:int
p_fsync	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_fsync(int fd)$/;"	f	typeref:typename:int
p_fsync__cnt	my_project/libgit2/src/util/posix.c	/^size_t p_fsync__cnt = 0;$/;"	v	typeref:typename:size_t
p_ftruncate	my_project/libgit2/src/util/unix/posix.h	/^#define p_ftruncate(/;"	d
p_ftruncate	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_ftruncate(int fd, off64_t size)$/;"	f	typeref:typename:int
p_futimes	my_project/libgit2/src/util/unix/posix.h	/^# define p_futimes /;"	d
p_futimes	my_project/libgit2/src/util/unix/posix.h	/^GIT_INLINE(int) p_futimes(int f, const struct p_timeval t[2])$/;"	f	typeref:typename:int
p_futimes	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_futimes(int fd, const struct p_timeval times[2])$/;"	f	typeref:typename:int
p_gai_strerror	my_project/libgit2/src/util/posix.c	/^const char *p_gai_strerror(int ret)$/;"	f	typeref:typename:const char *
p_gai_strerror	my_project/libgit2/src/util/posix.h	/^#	define p_gai_strerror(/;"	d
p_getaddrinfo	my_project/libgit2/src/util/posix.c	/^int p_getaddrinfo($/;"	f	typeref:typename:int
p_getaddrinfo	my_project/libgit2/src/util/posix.h	/^#	define p_getaddrinfo(/;"	d
p_getcwd	my_project/libgit2/src/util/posix.c	/^int p_getcwd(char *buffer_out, size_t size)$/;"	f	typeref:typename:int
p_getcwd	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_getcwd(char *buffer_out, size_t size)$/;"	f	typeref:typename:int
p_gmtime_r	my_project/libgit2/src/util/unix/posix.h	/^#define p_gmtime_r(/;"	d
p_gmtime_r	my_project/libgit2/src/util/win32/posix_w32.c	/^p_gmtime_r (const time_t *timer, struct tm *result)$/;"	f	typeref:struct:tm *
p_inet_pton	my_project/libgit2/src/util/unix/posix.h	/^#define p_inet_pton(/;"	d
p_inet_pton	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_inet_pton(int af, const char *src, void *dst)$/;"	f	typeref:typename:int
p_link	my_project/libgit2/src/util/unix/posix.h	/^#define p_link(/;"	d
p_link	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_link(const char *old, const char *new)$/;"	f	typeref:typename:int
p_localtime_r	my_project/libgit2/src/util/unix/posix.h	/^#define p_localtime_r(/;"	d
p_localtime_r	my_project/libgit2/src/util/win32/posix_w32.c	/^p_localtime_r (const time_t *timer, struct tm *result)$/;"	f	typeref:struct:tm *
p_lseek	my_project/libgit2/src/util/unix/posix.h	/^#define p_lseek(/;"	d
p_lseek	my_project/libgit2/src/util/win32/posix.h	/^#define p_lseek(/;"	d
p_lstat	my_project/libgit2/src/util/unix/posix.h	/^#define p_lstat(/;"	d
p_lstat	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_lstat(const char *filename, struct stat *buf)$/;"	f	typeref:typename:int
p_lstat_posixly	my_project/libgit2/src/util/unix/posix.h	/^#define p_lstat_posixly(/;"	d
p_lstat_posixly	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_lstat_posixly(const char *filename, struct stat *buf)$/;"	f	typeref:typename:int
p_mkdir	my_project/libgit2/src/util/unix/posix.h	/^#define p_mkdir(/;"	d
p_mkdir	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_mkdir(const char *path, mode_t mode)$/;"	f	typeref:typename:int
p_mmap	my_project/libgit2/src/util/posix.c	/^int p_mmap(git_map *out, size_t len, int prot, int flags, int fd, off64_t offset)$/;"	f	typeref:typename:int
p_mmap	my_project/libgit2/src/util/unix/map.c	/^int p_mmap(git_map *out, size_t len, int prot, int flags, int fd, off64_t offset)$/;"	f	typeref:typename:int
p_mmap	my_project/libgit2/src/util/win32/map.c	/^int p_mmap(git_map *out, size_t len, int prot, int flags, int fd, off64_t offset)$/;"	f	typeref:typename:int
p_munmap	my_project/libgit2/src/util/posix.c	/^int p_munmap(git_map *map)$/;"	f	typeref:typename:int
p_munmap	my_project/libgit2/src/util/unix/map.c	/^int p_munmap(git_map *map)$/;"	f	typeref:typename:int
p_munmap	my_project/libgit2/src/util/win32/map.c	/^int p_munmap(git_map *map)$/;"	f	typeref:typename:int
p_open	my_project/libgit2/src/util/posix.c	/^int p_open(const char *path, volatile int flags, ...)$/;"	f	typeref:typename:int
p_open	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_open(const char *path, int flags, ...)$/;"	f	typeref:typename:int
p_pid_t	my_project/libgit2/src/util/process.h	/^# define p_pid_t /;"	d
p_poll	my_project/libgit2/src/util/posix.c	/^int p_poll(struct pollfd *fds, unsigned int nfds, int timeout_ms)$/;"	f	typeref:typename:int
p_poll	my_project/libgit2/src/util/posix.h	/^# define p_poll /;"	d
p_pread	my_project/libgit2/src/util/unix/posix.h	/^#define p_pread(/;"	d
p_pread	my_project/libgit2/src/util/win32/posix_w32.c	/^ssize_t p_pread(int fd, void *data, size_t size, off64_t offset)$/;"	f	typeref:typename:ssize_t
p_pwrite	my_project/libgit2/src/util/unix/posix.h	/^#define p_pwrite(/;"	d
p_pwrite	my_project/libgit2/src/util/win32/posix_w32.c	/^ssize_t p_pwrite(int fd, const void *data, size_t size, off64_t offset)$/;"	f	typeref:typename:ssize_t
p_read	my_project/libgit2/src/util/posix.c	/^ssize_t p_read(git_file fd, void *buf, size_t cnt)$/;"	f	typeref:typename:ssize_t
p_readdir_r	my_project/libgit2/src/util/posix.h	/^#	define p_readdir_r(/;"	d
p_readdir_r	my_project/libgit2/src/util/posix.h	/^GIT_INLINE(int) p_readdir_r(DIR *dirp, struct dirent *entry, struct dirent **result)$/;"	f	typeref:typename:int
p_readlink	my_project/libgit2/src/util/unix/posix.h	/^#define p_readlink(/;"	d
p_readlink	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_readlink(const char *path, char *buf, size_t bufsiz)$/;"	f	typeref:typename:int
p_realpath	my_project/libgit2/src/util/unix/realpath.c	/^char *p_realpath(const char *pathname, char *resolved)$/;"	f	typeref:typename:char *
p_realpath	my_project/libgit2/src/util/win32/posix_w32.c	/^char *p_realpath(const char *orig_path, char *buffer)$/;"	f	typeref:typename:char *
p_recv	my_project/libgit2/src/util/unix/posix.h	/^#define p_recv(/;"	d
p_recv	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_recv(GIT_SOCKET socket, void *buffer, size_t length, int flags)$/;"	f	typeref:typename:int
p_rename	my_project/libgit2/src/util/posix.c	/^int p_rename(const char *from, const char *to)$/;"	f	typeref:typename:int
p_rename	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_rename(const char *from, const char *to)$/;"	f	typeref:typename:int
p_rmdir	my_project/libgit2/src/util/unix/posix.h	/^#define p_rmdir(/;"	d
p_rmdir	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_rmdir(const char *path)$/;"	f	typeref:typename:int
p_send	my_project/libgit2/src/util/unix/posix.h	/^#define p_send(/;"	d
p_send	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_send(GIT_SOCKET socket, const void *buffer, size_t length, int flags)$/;"	f	typeref:typename:int
p_snprintf	my_project/libgit2/src/util/unix/posix.h	/^#define p_snprintf /;"	d
p_snprintf	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_snprintf(char *buffer, size_t count, const char *format, ...)$/;"	f	typeref:typename:int
p_snprintf	my_project/libgit2/tests/clar/clar.c	/^#		define p_snprintf /;"	d	file:
p_snprintf	my_project/libgit2/tests/clar/clar.c	/^#		define p_snprintf(/;"	d	file:
p_snprintf	my_project/libgit2/tests/clar/clar.c	/^#	define p_snprintf /;"	d	file:
p_stat	my_project/libgit2/src/util/unix/posix.h	/^#define p_stat(/;"	d
p_stat	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_stat(const char *path, struct stat *buf)$/;"	f	typeref:typename:int
p_stat	my_project/libgit2/src/util/win32/win32-compat.h	/^struct p_stat {$/;"	s
p_strnlen	my_project/libgit2/src/util/strnlen.h	/^#   define p_strnlen /;"	d
p_strnlen	my_project/libgit2/src/util/strnlen.h	/^GIT_INLINE(size_t) p_strnlen(const char *s, size_t maxlen) {$/;"	f	typeref:typename:size_t
p_symlink	my_project/libgit2/src/util/unix/posix.h	/^#define p_symlink(/;"	d
p_symlink	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_symlink(const char *target, const char *path)$/;"	f	typeref:typename:int
p_timespec	my_project/libgit2/src/util/win32/win32-compat.h	/^struct p_timespec {$/;"	s
p_timeval	my_project/libgit2/src/util/unix/posix.h	/^#define p_timeval /;"	d
p_timeval	my_project/libgit2/src/util/win32/win32-compat.h	/^struct p_timeval {$/;"	s
p_umask	my_project/libgit2/src/util/posix.h	/^#define p_umask(/;"	d
p_unlink	my_project/libgit2/src/util/unix/posix.h	/^#define p_unlink(/;"	d
p_unlink	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_unlink(const char *path)$/;"	f	typeref:typename:int
p_utimes	my_project/libgit2/src/util/unix/posix.h	/^#define p_utimes(/;"	d
p_utimes	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_utimes(const char *path, const struct p_timeval times[2])$/;"	f	typeref:typename:int
p_vsnprintf	my_project/libgit2/src/util/unix/posix.h	/^#define p_vsnprintf(/;"	d
p_vsnprintf	my_project/libgit2/src/util/win32/posix_w32.c	/^int p_vsnprintf(char *buffer, size_t count, const char *format, va_list argptr)$/;"	f	typeref:typename:int
p_write	my_project/libgit2/src/util/posix.c	/^int p_write(git_file fd, const void *buf, size_t cnt)$/;"	f	typeref:typename:int
pack	my_project/libgit2/src/libgit2/indexer.c	/^	struct git_pack_file *pack;$/;"	m	struct:git_indexer	typeref:struct:git_pack_file *	file:
pack_backend	my_project/libgit2/src/libgit2/odb_pack.c	/^struct pack_backend {$/;"	s	file:
pack_backend__alloc	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_backend__alloc($/;"	f	typeref:typename:int	file:
pack_backend__exists	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_backend__exists(git_odb_backend *backend, const git_oid *oid)$/;"	f	typeref:typename:int	file:
pack_backend__exists_prefix	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_backend__exists_prefix($/;"	f	typeref:typename:int	file:
pack_backend__foreach	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_backend__foreach(git_odb_backend *_backend, git_odb_foreach_cb cb, void *data)$/;"	f	typeref:typename:int	file:
pack_backend__free	my_project/libgit2/src/libgit2/odb_pack.c	/^static void pack_backend__free(git_odb_backend *_backend)$/;"	f	typeref:typename:void	file:
pack_backend__freshen	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_backend__freshen($/;"	f	typeref:typename:int	file:
pack_backend__read	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_backend__read($/;"	f	typeref:typename:int	file:
pack_backend__read_header	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_backend__read_header($/;"	f	typeref:typename:int	file:
pack_backend__read_prefix	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_backend__read_prefix($/;"	f	typeref:typename:int	file:
pack_backend__refresh	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_backend__refresh(git_odb_backend *backend_)$/;"	f	typeref:typename:int	file:
pack_backend__writemidx	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_backend__writemidx(git_odb_backend *_backend)$/;"	f	typeref:typename:int	file:
pack_backend__writepack	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_backend__writepack(struct git_odb_writepack **out,$/;"	f	typeref:typename:int	file:
pack_backend__writepack_append	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_backend__writepack_append(struct git_odb_writepack *_writepack, const void *data/;"	f	typeref:typename:int	file:
pack_backend__writepack_commit	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_backend__writepack_commit(struct git_odb_writepack *_writepack, git_indexer_prog/;"	f	typeref:typename:int	file:
pack_backend__writepack_free	my_project/libgit2/src/libgit2/odb_pack.c	/^static void pack_backend__writepack_free(struct git_odb_writepack *_writepack)$/;"	f	typeref:typename:void	file:
pack_chain_elem	my_project/libgit2/src/libgit2/pack.h	/^struct pack_chain_elem {$/;"	s
pack_committed	my_project/libgit2/src/libgit2/indexer.c	/^		pack_committed :1,$/;"	m	struct:git_indexer	typeref:typename:unsigned int:1	file:
pack_dependency_chain	my_project/libgit2/src/libgit2/pack.c	/^static int pack_dependency_chain(git_dependency_chain *chain_out,$/;"	f	typeref:typename:int	file:
pack_dir	my_project/libgit2/src/libgit2/midx.h	/^	git_str pack_dir;$/;"	m	struct:git_midx_writer	typeref:typename:git_str
pack_entry_find	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_entry_find(struct git_pack_entry *e, struct pack_backend *backend, const git_oid/;"	f	typeref:typename:int	file:
pack_entry_find_offset	my_project/libgit2/src/libgit2/pack.c	/^static int pack_entry_find_offset($/;"	f	typeref:typename:int	file:
pack_entry_find_prefix	my_project/libgit2/src/libgit2/odb_pack.c	/^static int pack_entry_find_prefix($/;"	f	typeref:typename:int	file:
pack_folder	my_project/libgit2/src/libgit2/odb_pack.c	/^	char *pack_folder;$/;"	m	struct:pack_backend	typeref:typename:char *	file:
pack_index	my_project/libgit2/src/libgit2/midx.c	/^	uint32_t pack_index;$/;"	m	struct:object_entry_cb_state	typeref:typename:uint32_t	file:
pack_index	my_project/libgit2/src/libgit2/midx.h	/^	size_t pack_index;$/;"	m	struct:git_midx_entry	typeref:typename:size_t
pack_index_check_locked	my_project/libgit2/src/libgit2/pack.c	/^static int pack_index_check_locked(const char *path, struct git_pack_file *p)$/;"	f	typeref:typename:int	file:
pack_index_free	my_project/libgit2/src/libgit2/pack.c	/^static void pack_index_free(struct git_pack_file *p)$/;"	f	typeref:typename:void	file:
pack_index_open_locked	my_project/libgit2/src/libgit2/pack.c	/^static int pack_index_open_locked(struct git_pack_file *p)$/;"	f	typeref:typename:int	file:
pack_keep	my_project/libgit2/src/libgit2/pack.h	/^	         pack_keep:1,$/;"	m	struct:git_pack_file	typeref:typename:unsigned:1
pack_local	my_project/libgit2/src/libgit2/pack.h	/^	         pack_local:1,$/;"	m	struct:git_pack_file	typeref:typename:unsigned:1
pack_name	my_project/libgit2/src/libgit2/pack-objects.h	/^	char *pack_name; \/* name of written pack *\/$/;"	m	struct:git_packbuilder	typeref:typename:char *
pack_name	my_project/libgit2/src/libgit2/pack.h	/^	char pack_name[GIT_FLEX_ARRAY]; \/* more *\/$/;"	m	struct:git_pack_file	typeref:typename:char[]
pack_objects_insert_commit	my_project/libgit2/src/libgit2/pack-objects.c	/^static int pack_objects_insert_commit(git_packbuilder *pb, struct walk_object *obj)$/;"	f	typeref:typename:int	file:
pack_objects_insert_tree	my_project/libgit2/src/libgit2/pack-objects.c	/^static int pack_objects_insert_tree(git_packbuilder *pb, git_tree *tree)$/;"	f	typeref:typename:int	file:
pack_oid	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_oid pack_oid; \/* hash of written pack *\/$/;"	m	struct:git_packbuilder	typeref:typename:git_oid
pack_progress	my_project/libgit2/include/git2/remote.h	/^	git_packbuilder_progress pack_progress;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_packbuilder_progress
pack_progress_calls	my_project/libgit2/tests/libgit2/online/push_util.h	/^	int pack_progress_calls;$/;"	m	struct:__anonec09f7510208	typeref:typename:int
pack_version_ok	my_project/libgit2/src/libgit2/pack.h	/^#define pack_version_ok(/;"	d
pack_window_open	my_project/libgit2/src/libgit2/pack.c	/^static unsigned char *pack_window_open($/;"	f	typeref:typename:unsigned char *	file:
pack_write_context	my_project/libgit2/src/libgit2/pack-objects.c	/^struct pack_write_context {$/;"	s	file:
pack_writepack	my_project/libgit2/src/libgit2/odb_pack.c	/^struct pack_writepack {$/;"	s	file:
package_info	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^	SecPkgInfoW *package_info;$/;"	m	struct:__anon0a0089cf0108	typeref:typename:SecPkgInfoW *	file:
package_name	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^	const char *package_name;$/;"	m	struct:__anon0a0089cf0108	typeref:typename:const char *	file:
package_name_len	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^	size_t package_name_len;$/;"	m	struct:__anon0a0089cf0108	typeref:typename:size_t	file:
package_name_w	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^	wchar_t *package_name_w;$/;"	m	struct:__anon0a0089cf0108	typeref:typename:wchar_t *	file:
packall	my_project/libgit2/tests/libgit2/refs/pack.c	/^static void packall(void)$/;"	f	typeref:typename:void	file:
packbuilder_config	my_project/libgit2/src/libgit2/pack-objects.c	/^static int packbuilder_config(git_packbuilder *pb)$/;"	f	typeref:typename:int	file:
packed_commit	my_project/libgit2/src/libgit2/commit_graph.c	/^struct packed_commit {$/;"	s	file:
packed_commit__cmp	my_project/libgit2/src/libgit2/commit_graph.c	/^static int packed_commit__cmp(const void *a_, const void *b_)$/;"	f	typeref:typename:int	file:
packed_commit_free	my_project/libgit2/src/libgit2/commit_graph.c	/^static void packed_commit_free(struct packed_commit *p)$/;"	f	typeref:typename:void	file:
packed_commit_free_dup	my_project/libgit2/src/libgit2/commit_graph.c	/^static void packed_commit_free_dup(void *packed_commit)$/;"	f	typeref:typename:void	file:
packed_commit_new	my_project/libgit2/src/libgit2/commit_graph.c	/^static struct packed_commit *packed_commit_new(git_commit *commit)$/;"	f	typeref:struct:packed_commit *	file:
packed_delete	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int packed_delete(refdb_fs_backend *backend, const char *ref_name)$/;"	f	typeref:typename:int	file:
packed_find_peel	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int packed_find_peel(refdb_fs_backend *backend, struct packref *ref)$/;"	f	typeref:typename:int	file:
packed_head_name	my_project/libgit2/tests/libgit2/refs/read.c	/^static const char *packed_head_name = "refs\/heads\/packed";$/;"	v	typeref:typename:const char *	file:
packed_head_name	my_project/libgit2/tests/libgit2/refs/rename.c	/^static const char *packed_head_name = "refs\/heads\/packed";$/;"	v	typeref:typename:const char *	file:
packed_loadloose	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int packed_loadloose(refdb_fs_backend *backend)$/;"	f	typeref:typename:int	file:
packed_lookup	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int packed_lookup($/;"	f	typeref:typename:int	file:
packed_map_check	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int packed_map_check(refdb_fs_backend *backend)$/;"	f	typeref:typename:int	file:
packed_map_free	my_project/libgit2/src/libgit2/refdb_fs.c	/^static void packed_map_free(refdb_fs_backend *backend)$/;"	f	typeref:typename:void	file:
packed_objects	my_project/libgit2/tests/libgit2/odb/pack_data.h	/^static const char *packed_objects[] = {$/;"	v	typeref:typename:const char * []
packed_objects_256	my_project/libgit2/tests/libgit2/odb/pack_data_256.h	/^static const char *packed_objects_256[] = {$/;"	v	typeref:typename:const char * []
packed_objects_one	my_project/libgit2/tests/libgit2/odb/pack_data_one.h	/^static const char *packed_objects_one[] = {$/;"	v	typeref:typename:const char * []
packed_objects_one256	my_project/libgit2/tests/libgit2/odb/pack_data_one256.h	/^static const char *packed_objects_one256[] = {$/;"	v	typeref:typename:const char * []
packed_pos	my_project/libgit2/src/libgit2/refdb_fs.c	/^	size_t packed_pos;$/;"	m	struct:__anon3803f1ab0308	typeref:typename:size_t	file:
packed_refs_map	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_map packed_refs_map;$/;"	m	struct:refdb_fs_backend	typeref:typename:git_map	file:
packed_refs_stamp	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_futils_filestamp packed_refs_stamp;$/;"	m	struct:refdb_fs_backend	typeref:typename:git_futils_filestamp	file:
packed_reload	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int packed_reload(refdb_fs_backend *backend)$/;"	f	typeref:typename:int	file:
packed_remove_loose	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int packed_remove_loose(refdb_fs_backend *backend)$/;"	f	typeref:typename:int	file:
packed_set_peeling_mode	my_project/libgit2/src/libgit2/refdb_fs.c	/^static char *packed_set_peeling_mode($/;"	f	typeref:typename:char *	file:
packed_test_head_name	my_project/libgit2/tests/libgit2/refs/delete.c	/^static const char *packed_test_head_name = "refs\/heads\/packed-test";$/;"	v	typeref:typename:const char *	file:
packed_test_head_name	my_project/libgit2/tests/libgit2/refs/read.c	/^static const char *packed_test_head_name = "refs\/heads\/packed-test";$/;"	v	typeref:typename:const char *	file:
packed_test_head_name	my_project/libgit2/tests/libgit2/refs/rename.c	/^static const char *packed_test_head_name = "refs\/heads\/packed-test";$/;"	v	typeref:typename:const char *	file:
packed_unsorted_lookup	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int packed_unsorted_lookup($/;"	f	typeref:typename:int	file:
packed_write	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int packed_write(refdb_fs_backend *backend)$/;"	f	typeref:typename:int	file:
packed_write_ref	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int packed_write_ref(struct packref *ref, git_filebuf *file)$/;"	f	typeref:typename:int	file:
packetsize_cb	my_project/libgit2/src/libgit2/transports/smart.h	/^	packetsize_cb packetsize_cb;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:packetsize_cb
packetsize_cb	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef int (*packetsize_cb)(size_t received, void *payload);$/;"	t	typeref:typename:int (*)(size_t received,void * payload)
packetsize_payload	my_project/libgit2/src/libgit2/transports/smart.h	/^	void *packetsize_payload;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:void *
packfile__cmp	my_project/libgit2/src/libgit2/midx.c	/^static int packfile__cmp(const void *a_, const void *b_)$/;"	f	typeref:typename:int	file:
packfile_byname_search_cmp	my_project/libgit2/src/libgit2/odb_pack.c	/^static int packfile_byname_search_cmp(const void *path_, const void *p_)$/;"	f	typeref:typename:int	file:
packfile_error	my_project/libgit2/src/libgit2/pack.c	/^static int packfile_error(const char *message)$/;"	f	typeref:typename:int	file:
packfile_load__cb	my_project/libgit2/src/libgit2/odb_pack.c	/^static int packfile_load__cb(void *data, git_str *path)$/;"	f	typeref:typename:int	file:
packfile_names	my_project/libgit2/src/libgit2/midx.h	/^	git_vector packfile_names;$/;"	m	struct:git_midx_file	typeref:typename:git_vector
packfile_open_locked	my_project/libgit2/src/libgit2/pack.c	/^static int packfile_open_locked(struct git_pack_file *p)$/;"	f	typeref:typename:int	file:
packfile_sort__cb	my_project/libgit2/src/libgit2/odb_pack.c	/^static int packfile_sort__cb(const void *a_, const void *b_)$/;"	f	typeref:typename:int	file:
packfile_unpack_compressed	my_project/libgit2/src/libgit2/pack.c	/^static int packfile_unpack_compressed($/;"	f	typeref:typename:int	file:
packfile_unpack_header1	my_project/libgit2/src/libgit2/pack.c	/^static int packfile_unpack_header1($/;"	f	typeref:typename:int	file:
packfiles	my_project/libgit2/src/libgit2/midx.c	/^	uint32_t packfiles;$/;"	m	struct:git_midx_header	typeref:typename:uint32_t	file:
packref	my_project/libgit2/src/libgit2/refdb_fs.c	/^struct packref {$/;"	s	file:
packref_cmp	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int packref_cmp(const void *a_, const void *b_)$/;"	f	typeref:typename:int	file:
packs	my_project/libgit2/src/libgit2/midx.h	/^	git_vector packs;$/;"	m	struct:git_midx_writer	typeref:typename:git_vector
packs	my_project/libgit2/src/libgit2/odb_pack.c	/^	git_vector packs;$/;"	m	struct:pack_backend	typeref:typename:git_vector	file:
page_size	my_project/libgit2/src/util/pool.h	/^	size_t page_size;  \/* size of page in bytes *\/$/;"	m	struct:__anon2c1ced600108	typeref:typename:size_t
page_size	my_project/libgit2/src/util/pool.h	/^	size_t page_size;$/;"	m	struct:__anon2c1ced600208	typeref:typename:size_t
pages	my_project/libgit2/src/util/pool.h	/^	git_pool_page *pages; \/* allocated pages *\/$/;"	m	struct:__anon2c1ced600108	typeref:typename:git_pool_page *
paint_down_to_common	my_project/libgit2/src/libgit2/merge.c	/^static int paint_down_to_common($/;"	f	typeref:typename:int	file:
paired	my_project/libgit2/src/libgit2/status.h	/^	git_vector paired;$/;"	m	struct:git_status_list	typeref:typename:git_vector
panel	my_project/libgit2/.vscode/tasks.json	/^          "panel": "new"$/;"	s	object:tasks.0.presentation
panel	my_project/libgit2/.vscode/tasks.json	/^          "panel": "new"$/;"	s	object:tasks.1.presentation
param	my_project/libgit2/include/git2/sys/transport.h	/^	void *param;$/;"	m	struct:git_smart_subtransport_definition	typeref:typename:void *
param	my_project/libgit2/src/libgit2/transport.c	/^	void *param;$/;"	m	struct:transport_definition	typeref:typename:void *	file:
param	my_project/libgit2/src/util/win32/thread.h	/^	void *param;$/;"	m	struct:__anond08cd1a00108	typeref:typename:void *
params	my_project/libgit2/src/libgit2/diff_xdiff.h	/^	xpparam_t    params;$/;"	m	struct:__anon544d965e0108	typeref:typename:xpparam_t
parens_depth	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int  parens_depth;                \/* Depth of nested parentheses *\/$/;"	m	struct:compile_data	typeref:typename:int
parent	my_project/libgit2/include/git2/cert.h	/^	git_cert parent; \/**< The parent cert *\/$/;"	m	struct:__anon7ca863480308	typeref:typename:git_cert
parent	my_project/libgit2/include/git2/cert.h	/^	git_cert parent; \/**< The parent cert *\/$/;"	m	struct:__anon7ca863480408	typeref:typename:git_cert
parent	my_project/libgit2/include/git2/sys/credential.h	/^	git_credential parent; \/**< The parent credential *\/$/;"	m	struct:git_credential_ssh_custom	typeref:typename:git_credential
parent	my_project/libgit2/include/git2/sys/credential.h	/^	git_credential parent; \/**< The parent credential *\/$/;"	m	struct:git_credential_ssh_interactive	typeref:typename:git_credential
parent	my_project/libgit2/include/git2/sys/credential.h	/^	git_credential parent; \/**< The parent credential *\/$/;"	m	struct:git_credential_ssh_key	typeref:typename:git_credential
parent	my_project/libgit2/include/git2/sys/credential.h	/^	git_credential parent; \/**< The parent credential *\/$/;"	m	struct:git_credential_username	typeref:typename:git_credential
parent	my_project/libgit2/include/git2/sys/credential.h	/^	git_credential parent; \/**< The parent credential *\/$/;"	m	struct:git_credential_userpass_plaintext	typeref:typename:git_credential
parent	my_project/libgit2/src/libgit2/blame_git.c	/^	git_blame__origin *parent;$/;"	m	struct:blame_chunk_cb_data	typeref:typename:git_blame__origin *	file:
parent	my_project/libgit2/src/libgit2/blob.c	/^	git_writestream parent;$/;"	m	struct:__anon38237caf0108	typeref:typename:git_writestream	file:
parent	my_project/libgit2/src/libgit2/config.c	/^	git_config_iterator parent;$/;"	m	struct:__anona0399aa60308	typeref:typename:git_config_iterator	file:
parent	my_project/libgit2/src/libgit2/config.c	/^	git_config_iterator parent;$/;"	m	struct:__anona0399aa60508	typeref:typename:git_config_iterator	file:
parent	my_project/libgit2/src/libgit2/config_file.c	/^	git_config_backend parent;$/;"	m	struct:__anon341047050108	typeref:typename:git_config_backend	file:
parent	my_project/libgit2/src/libgit2/config_list.c	/^	git_config_iterator parent;$/;"	m	struct:config_list_iterator	typeref:typename:git_config_iterator	file:
parent	my_project/libgit2/src/libgit2/config_mem.c	/^	git_config_backend parent;$/;"	m	struct:__anon766d71c40108	typeref:typename:git_config_backend	file:
parent	my_project/libgit2/src/libgit2/config_snapshot.c	/^	git_config_backend parent;$/;"	m	struct:__anon05a78b950108	typeref:typename:git_config_backend	file:
parent	my_project/libgit2/src/libgit2/filter.c	/^	git_writestream parent;$/;"	m	struct:buf_stream	typeref:typename:git_writestream	file:
parent	my_project/libgit2/src/libgit2/filter.c	/^	git_writestream parent;$/;"	m	struct:buffered_stream	typeref:typename:git_writestream	file:
parent	my_project/libgit2/src/libgit2/odb_loose.c	/^	git_odb_backend parent;$/;"	m	struct:loose_backend	typeref:typename:git_odb_backend	file:
parent	my_project/libgit2/src/libgit2/odb_mempack.c	/^	git_odb_backend parent;$/;"	m	struct:memory_packer_db	typeref:typename:git_odb_backend	file:
parent	my_project/libgit2/src/libgit2/odb_pack.c	/^	git_odb_backend parent;$/;"	m	struct:pack_backend	typeref:typename:git_odb_backend	file:
parent	my_project/libgit2/src/libgit2/odb_pack.c	/^	struct git_odb_writepack parent;$/;"	m	struct:pack_writepack	typeref:struct:git_odb_writepack	file:
parent	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_refdb_backend parent;$/;"	m	struct:refdb_fs_backend	typeref:typename:git_refdb_backend	file:
parent	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_reference_iterator parent;$/;"	m	struct:__anon3803f1ab0308	typeref:typename:git_reference_iterator	file:
parent	my_project/libgit2/src/libgit2/repository.c	/^    git_repository_item_t parent;$/;"	m	struct:__anon453495b00108	typeref:typename:git_repository_item_t	file:
parent	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^	git_stream parent;$/;"	m	struct:__anoncc3749c90108	typeref:typename:git_stream	file:
parent	my_project/libgit2/src/libgit2/streams/openssl.c	/^	git_stream parent;$/;"	m	struct:__anonb80f06c20108	typeref:typename:git_stream	file:
parent	my_project/libgit2/src/libgit2/streams/schannel.c	/^	git_stream parent;$/;"	m	struct:__anonafd1b44a0208	typeref:typename:git_stream	file:
parent	my_project/libgit2/src/libgit2/streams/socket.h	/^	git_stream parent;$/;"	m	struct:__anon362d01ac0108	typeref:typename:git_stream
parent	my_project/libgit2/src/libgit2/streams/stransport.c	/^	git_stream parent;$/;"	m	struct:__anon898973fe0108	typeref:typename:git_stream	file:
parent	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^	git_http_auth_context parent;$/;"	m	struct:__anon7fc745b70108	typeref:typename:git_http_auth_context	file:
parent	my_project/libgit2/src/libgit2/transports/auth_ntlmclient.c	/^	git_http_auth_context parent;$/;"	m	struct:__anon9ffa9aaa0108	typeref:typename:git_http_auth_context	file:
parent	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^	git_http_auth_context parent;$/;"	m	struct:__anon0a0089cf0108	typeref:typename:git_http_auth_context	file:
parent	my_project/libgit2/src/libgit2/transports/git.c	/^	git_smart_subtransport parent;$/;"	m	struct:__anoneb1923e30208	typeref:typename:git_smart_subtransport	file:
parent	my_project/libgit2/src/libgit2/transports/git.c	/^	git_smart_subtransport_stream parent;$/;"	m	struct:__anoneb1923e30108	typeref:typename:git_smart_subtransport_stream	file:
parent	my_project/libgit2/src/libgit2/transports/http.c	/^	git_smart_subtransport parent;$/;"	m	struct:__anon515ae8bf0508	typeref:typename:git_smart_subtransport	file:
parent	my_project/libgit2/src/libgit2/transports/http.c	/^	git_smart_subtransport_stream parent;$/;"	m	struct:__anon515ae8bf0308	typeref:typename:git_smart_subtransport_stream	file:
parent	my_project/libgit2/src/libgit2/transports/local.c	/^	git_transport parent;$/;"	m	struct:__anona3bc4f8a0108	typeref:typename:git_transport	file:
parent	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_transport parent;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:git_transport
parent	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^	git_smart_subtransport parent;$/;"	m	struct:__anonec53c3310208	typeref:typename:git_smart_subtransport	file:
parent	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^	git_smart_subtransport_stream parent;$/;"	m	struct:__anonec53c3310108	typeref:typename:git_smart_subtransport_stream	file:
parent	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^	git_smart_subtransport parent;$/;"	m	struct:__anonf54f66e30208	typeref:typename:git_smart_subtransport	file:
parent	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^	git_smart_subtransport_stream parent;$/;"	m	struct:__anonf54f66e30108	typeref:typename:git_smart_subtransport_stream	file:
parent	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	git_smart_subtransport parent;$/;"	m	struct:__anon5ba854ad0408	typeref:typename:git_smart_subtransport	file:
parent	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	git_smart_subtransport_stream parent;$/;"	m	struct:__anon5ba854ad0208	typeref:typename:git_smart_subtransport_stream	file:
parent	my_project/libgit2/tests/libgit2/filter/stream.c	/^	git_writestream parent;$/;"	m	struct:compress_stream	typeref:typename:git_writestream	file:
parent	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.h	/^	git_odb_backend parent;$/;"	m	struct:__anon1e6212950208	typeref:typename:git_odb_backend
parent	my_project/libgit2/tests/libgit2/worktree/submodule.c	/^static worktree_fixture parent$/;"	v	typeref:typename:worktree_fixture	file:
parent_count	my_project/libgit2/src/libgit2/commit_graph.h	/^	size_t parent_count;$/;"	m	struct:git_commit_graph_entry	typeref:typename:size_t
parent_id_str	my_project/libgit2/tests/libgit2/commit/write.c	/^static const char *parent_id_str = "8496071c1b46c854b31185ea97743be6a8774479";$/;"	v	typeref:typename:const char *	file:
parent_index_array_t	my_project/libgit2/src/libgit2/commit_graph.c	/^typedef git_array_t(size_t) parent_index_array_t;$/;"	t	file:
parent_indices	my_project/libgit2/src/libgit2/commit_graph.c	/^	parent_index_array_t parent_indices;$/;"	m	struct:packed_commit	typeref:typename:parent_index_array_t	file:
parent_indices	my_project/libgit2/src/libgit2/commit_graph.h	/^	size_t parent_indices[2];$/;"	m	struct:git_commit_graph_entry	typeref:typename:size_t[2]
parent_len	my_project/libgit2/src/util/fs_path.h	/^	size_t parent_len;$/;"	m	struct:git_fs_path_diriter	typeref:typename:size_t
parent_path	my_project/libgit2/src/libgit2/iterator.c	/^	const char *parent_path;$/;"	m	struct:__anon2f88b95a0308	typeref:typename:const char *	file:
parent_path	my_project/libgit2/src/libgit2/worktree.h	/^	char *parent_path;$/;"	m	struct:git_worktree	typeref:typename:char *
parent_utf8_len	my_project/libgit2/src/util/fs_path.h	/^	size_t parent_utf8_len;$/;"	m	struct:git_fs_path_diriter	typeref:typename:size_t
parents	my_project/libgit2/src/libgit2/annotated_commit.h	/^	git_array_oid_t parents;$/;"	m	struct:git_annotated_commit	typeref:typename:git_array_oid_t
parents	my_project/libgit2/src/libgit2/commit.c	/^	const git_commit **parents;$/;"	m	struct:__anon9e6354d90308	typeref:typename:const git_commit **	file:
parents	my_project/libgit2/src/libgit2/commit.c	/^	const git_oid **parents;$/;"	m	struct:__anon9e6354d90208	typeref:typename:const git_oid **	file:
parents	my_project/libgit2/src/libgit2/commit_graph.c	/^	git_array_oid_t parents;$/;"	m	struct:packed_commit	typeref:typename:git_array_oid_t	file:
parents	my_project/libgit2/src/libgit2/commit_list.h	/^	struct git_commit_list_node **parents;$/;"	m	struct:git_commit_list_node	typeref:struct:git_commit_list_node **
parents	my_project/libgit2/src/libgit2/grafts.h	/^	git_array_oid_t parents;$/;"	m	struct:__anon19e2cf7c0108	typeref:typename:git_array_oid_t
parents	my_project/libgit2/src/libgit2/repository.c	/^	git_vector *parents;$/;"	m	struct:mergehead_data	typeref:typename:git_vector *	file:
parse	my_project/libgit2/src/libgit2/object.c	/^	int  (*parse)(void *self, git_odb_object *obj, git_oid_t oid_type);$/;"	m	struct:__anonc130b1670108	typeref:typename:int (*)(void * self,git_odb_object * obj,git_oid_t oid_type)	file:
parse	my_project/libgit2/tests/clar/generate.py	/^    def parse(self, contents):$/;"	m	class:Module
parse_arg	my_project/libgit2/src/cli/opt.c	/^static cli_opt_status_t parse_arg(cli_opt *opt, cli_opt_parser *parser)$/;"	f	typeref:typename:cli_opt_status_t	file:
parse_commit	my_project/libgit2/tests/libgit2/commit/parse.c	/^static int parse_commit(git_commit **out, const char *buffer)$/;"	f	typeref:typename:int	file:
parse_common_options	my_project/libgit2/src/cli/common.c	/^static int parse_common_options($/;"	f	typeref:typename:int	file:
parse_conditional_include	my_project/libgit2/src/libgit2/config_file.c	/^static int parse_conditional_include(config_file_parse_data *parse_data, const char *section, co/;"	f	typeref:typename:int	file:
parse_config	my_project/libgit2/src/libgit2/config_mem.c	/^static int parse_config($/;"	f	typeref:typename:int	file:
parse_ctx	my_project/libgit2/src/libgit2/patch_parse.h	/^	git_parse_ctx parse_ctx;$/;"	m	struct:__anonddb10c3f0108	typeref:typename:git_parse_ctx
parse_date_basic	my_project/libgit2/src/util/date.c	/^static int parse_date_basic(const char *date, git_time_t *timestamp, int *offset)$/;"	f	typeref:typename:int	file:
parse_header	my_project/libgit2/src/libgit2/indexer.c	/^static int parse_header(struct git_pack_header *hdr, struct git_pack_file *pack)$/;"	f	typeref:typename:int	file:
parse_header	my_project/libgit2/src/libgit2/odb_loose.c	/^static int parse_header($/;"	f	typeref:typename:int	file:
parse_header_copyfrom	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_copyfrom($/;"	f	typeref:typename:int	file:
parse_header_copyto	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_copyto($/;"	f	typeref:typename:int	file:
parse_header_dissimilarity	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_dissimilarity($/;"	f	typeref:typename:int	file:
parse_header_git	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_git($/;"	f	typeref:typename:int	file:
parse_header_git_deletedfilemode	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_git_deletedfilemode($/;"	f	typeref:typename:int	file:
parse_header_git_index	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_git_index($/;"	f	typeref:typename:int	file:
parse_header_git_newfilemode	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_git_newfilemode($/;"	f	typeref:typename:int	file:
parse_header_git_newmode	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_git_newmode($/;"	f	typeref:typename:int	file:
parse_header_git_newpath	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_git_newpath($/;"	f	typeref:typename:int	file:
parse_header_git_oldmode	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_git_oldmode($/;"	f	typeref:typename:int	file:
parse_header_git_oldpath	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_git_oldpath($/;"	f	typeref:typename:int	file:
parse_header_mode	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_mode(uint16_t *mode, git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:int	file:
parse_header_name	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_str parse_header_name;$/;"	m	struct:__anon3d590bbe0608	typeref:typename:git_str	file:
parse_header_oid	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_oid($/;"	f	typeref:typename:int	file:
parse_header_packlike	my_project/libgit2/src/libgit2/odb_loose.c	/^static int parse_header_packlike($/;"	f	typeref:typename:int	file:
parse_header_path	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_path(char **out, git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:int	file:
parse_header_path_buf	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_path_buf(git_str *path, git_patch_parse_ctx *ctx, size_t path_len)$/;"	f	typeref:typename:int	file:
parse_header_percent	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_percent(uint16_t *out, git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:int	file:
parse_header_rename	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_rename($/;"	f	typeref:typename:int	file:
parse_header_renamefrom	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_renamefrom($/;"	f	typeref:typename:int	file:
parse_header_renameto	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_renameto($/;"	f	typeref:typename:int	file:
parse_header_similarity	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_similarity($/;"	f	typeref:typename:int	file:
parse_header_start	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_header_start(git_patch_parsed *patch, git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:int	file:
parse_header_state	my_project/libgit2/src/libgit2/patch_parse.c	/^} parse_header_state;$/;"	t	typeref:enum:__anonddb10c3a0203	file:
parse_header_state	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	parse_header_state parse_header_state;$/;"	m	struct:__anon3d590bbe0608	typeref:typename:parse_header_state	file:
parse_header_state	my_project/libgit2/src/libgit2/transports/httpclient.c	/^} parse_header_state;$/;"	t	typeref:enum:__anon3d590bbe0403	file:
parse_header_transition	my_project/libgit2/src/libgit2/patch_parse.c	/^} parse_header_transition;$/;"	t	typeref:struct:__anonddb10c3a0308	file:
parse_header_value	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_str parse_header_value;$/;"	m	struct:__anon3d590bbe0608	typeref:typename:git_str	file:
parse_hunk_body	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_hunk_body($/;"	f	typeref:typename:int	file:
parse_hunk_header	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_hunk_header($/;"	f	typeref:typename:int	file:
parse_ignore_file	my_project/libgit2/src/libgit2/ignore.c	/^static int parse_ignore_file($/;"	f	typeref:typename:int	file:
parse_include	my_project/libgit2/src/libgit2/config_file.c	/^static int parse_include(config_file_parse_data *parse_data, const char *file)$/;"	f	typeref:typename:int	file:
parse_index	my_project/libgit2/src/libgit2/index.c	/^static int parse_index(git_index *index, const char *buffer, size_t buffer_size)$/;"	f	typeref:typename:int	file:
parse_int	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_int(int *out, git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:int	file:
parse_len	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int parse_len(size_t *out, const char *line, size_t linelen)$/;"	f	typeref:typename:int	file:
parse_long	my_project/libgit2/src/cli/opt.c	/^static cli_opt_status_t parse_long(cli_opt *opt, cli_opt_parser *parser)$/;"	f	typeref:typename:cli_opt_status_t	file:
parse_mailmap_entry	my_project/libgit2/src/libgit2/mailmap.c	/^static int parse_mailmap_entry($/;"	f	typeref:typename:int	file:
parse_mode	my_project/libgit2/src/libgit2/tree.c	/^static int parse_mode(uint16_t *mode_out, const char *buffer, size_t buffer_len, const char **bu/;"	f	typeref:typename:int	file:
parse_multiline_variable	my_project/libgit2/src/libgit2/config_parse.c	/^static int parse_multiline_variable(git_config_parser *reader, git_str *value, int in_quotes, si/;"	f	typeref:typename:int	file:
parse_name	my_project/libgit2/src/libgit2/config_parse.c	/^static int parse_name($/;"	f	typeref:typename:int	file:
parse_obj_type	my_project/libgit2/src/libgit2/revparse.c	/^static git_object_t parse_obj_type(const char *str)$/;"	f	typeref:typename:git_object_t	file:
parse_optimized_patterns	my_project/libgit2/src/libgit2/attr_file.c	/^static bool parse_optimized_patterns($/;"	f	typeref:typename:bool	file:
parse_option	my_project/libgit2/src/cli/common.c	/^static int parse_option(cli_opt *opt, void *data)$/;"	f	typeref:typename:int	file:
parse_options	my_project/libgit2/examples/checkout.c	/^static void parse_options(const char **repo_path, checkout_options *opts, struct args_info *args/;"	f	typeref:typename:void	file:
parse_options	my_project/libgit2/examples/describe.c	/^static void parse_options(struct describe_options *opts, int argc, char **argv)$/;"	f	typeref:typename:void	file:
parse_options	my_project/libgit2/examples/log.c	/^static int parse_options($/;"	f	typeref:typename:int	file:
parse_options	my_project/libgit2/examples/ls-files.c	/^static int parse_options(struct ls_options *opts, int argc, char *argv[])$/;"	f	typeref:typename:int	file:
parse_options	my_project/libgit2/examples/merge.c	/^static void parse_options(const char **repo_path, struct merge_options *opts, int argc, char **a/;"	f	typeref:typename:void	file:
parse_options	my_project/libgit2/examples/tag.c	/^static void parse_options(tag_action *action, struct tag_options *opts, int argc, char **argv)$/;"	f	typeref:typename:void	file:
parse_opts	my_project/libgit2/examples/add.c	/^static void parse_opts(const char **repo_path, struct index_options *opts, struct args_info *arg/;"	f	typeref:typename:void	file:
parse_opts	my_project/libgit2/examples/blame.c	/^static void parse_opts(struct blame_opts *o, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_opts	my_project/libgit2/examples/cat-file.c	/^static void parse_opts(struct catfile_options *o, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_opts	my_project/libgit2/examples/diff.c	/^static void parse_opts(struct diff_options *o, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_opts	my_project/libgit2/examples/init.c	/^static void parse_opts(struct init_opts *o, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_opts	my_project/libgit2/examples/rev-parse.c	/^static void parse_opts(struct parse_state *ps, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_opts	my_project/libgit2/examples/status.c	/^static void parse_opts(struct status_opts *o, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_patch_binary	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_patch_binary($/;"	f	typeref:typename:int	file:
parse_patch_binary_nodata	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_patch_binary_nodata($/;"	f	typeref:typename:int	file:
parse_patch_binary_side	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_patch_binary_side($/;"	f	typeref:typename:int	file:
parse_patch_body	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_patch_body($/;"	f	typeref:typename:int	file:
parse_patch_header	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_patch_header($/;"	f	typeref:typename:int	file:
parse_patch_hunks	my_project/libgit2/src/libgit2/patch_parse.c	/^static int parse_patch_hunks($/;"	f	typeref:typename:int	file:
parse_raw	my_project/libgit2/src/libgit2/object.c	/^	int  (*parse_raw)(void *self, const char *data, size_t size, git_oid_t oid_type);$/;"	m	struct:__anonc130b1670108	typeref:typename:int (*)(void * self,const char * data,size_t size,git_oid_t oid_type)	file:
parse_refspec	my_project/libgit2/src/libgit2/push.c	/^static int parse_refspec(git_push *push, push_spec **spec, const char *str)$/;"	f	typeref:typename:int	file:
parse_report	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int parse_report(transport_smart *transport, git_push *push)$/;"	f	typeref:typename:int	file:
parse_revision	my_project/libgit2/examples/rev-parse.c	/^static int parse_revision(git_repository *repo, struct parse_state *ps)$/;"	f	typeref:typename:int	file:
parse_section_header	my_project/libgit2/src/libgit2/config_parse.c	/^static int parse_section_header(git_config_parser *reader, char **section_out)$/;"	f	typeref:typename:int	file:
parse_shared	my_project/libgit2/examples/init.c	/^static uint32_t parse_shared(const char *shared)$/;"	f	typeref:typename:uint32_t	file:
parse_short	my_project/libgit2/src/cli/opt.c	/^static cli_opt_status_t parse_short(cli_opt *opt, cli_opt_parser *parser)$/;"	f	typeref:typename:cli_opt_status_t	file:
parse_state	my_project/libgit2/examples/rev-parse.c	/^struct parse_state {$/;"	s	file:
parse_status	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	parse_status parse_status;$/;"	m	struct:__anon3d590bbe0608	typeref:typename:parse_status	file:
parse_status	my_project/libgit2/src/libgit2/transports/httpclient.c	/^} parse_status;$/;"	t	typeref:enum:__anon3d590bbe0503	file:
parse_subcmd	my_project/libgit2/examples/remote.c	/^static void parse_subcmd($/;"	f	typeref:typename:void	file:
parse_subcommand	my_project/libgit2/examples/stash.c	/^static void parse_subcommand(struct opts *opts, int argc, char *argv[])$/;"	f	typeref:typename:void	file:
parse_subsection_header	my_project/libgit2/src/libgit2/config_parse.c	/^static int parse_subsection_header(git_config_parser *reader, const char *line, size_t pos, cons/;"	f	typeref:typename:int	file:
parse_test_case	my_project/libgit2/tests/libgit2/commit/parse.c	/^} parse_test_case;$/;"	t	typeref:struct:__anon39d5c3ee0108	file:
parse_unauthorized_response	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int parse_unauthorized_response($/;"	f	typeref:typename:int	file:
parse_values	my_project/libgit2/src/libgit2/config_mem.c	/^static int parse_values($/;"	f	typeref:typename:int	file:
parse_variable	my_project/libgit2/src/libgit2/config_parse.c	/^static int parse_variable(git_config_parser *reader, char **var_name, char **var_value, size_t */;"	f	typeref:typename:int	file:
parsed	my_project/libgit2/src/libgit2/commit_list.h	/^			 parsed:1,$/;"	m	struct:git_commit_list_node	typeref:typename:unsigned int:1
parsed_header	my_project/libgit2/src/libgit2/indexer.c	/^	unsigned int parsed_header :1,$/;"	m	struct:git_indexer	typeref:typename:unsigned int:1	file:
parser	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_http_parser parser;$/;"	m	struct:git_http_client	typeref:typename:git_http_parser	file:
parser	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	http_parser parser;$/;"	m	struct:git_http_parser	typeref:typename:http_parser
parser	my_project/libgit2/tests/clar/generate.py	/^    parser = OptionParser()$/;"	v
parser_settings	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static git_http_parser_settings parser_settings;$/;"	v	typeref:typename:git_http_parser_settings	file:
parser_settings_initialized	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static bool parser_settings_initialized;$/;"	v	typeref:typename:bool	file:
partial	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int    partial;                 \/* PARTIAL options *\/$/;"	m	struct:match_data	typeref:typename:int
partialmatch	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *partialmatch;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
partialmatchlabel	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *partialmatchlabel;$/;"	m	struct:compiler_common	typeref:struct:sljit_label *	file:
pass_blame	my_project/libgit2/src/libgit2/blame_git.c	/^static int pass_blame(git_blame *blame, git_blame__origin *origin, uint32_t opt)$/;"	f	typeref:typename:int	file:
pass_blame_to_parent	my_project/libgit2/src/libgit2/blame_git.c	/^static int pass_blame_to_parent($/;"	f	typeref:typename:int	file:
pass_whole_blame	my_project/libgit2/src/libgit2/blame_git.c	/^static int pass_whole_blame(git_blame *blame,$/;"	f	typeref:typename:int	file:
passed_refspecs	my_project/libgit2/src/libgit2/remote.h	/^	int passed_refspecs;$/;"	m	struct:git_remote	typeref:typename:int
passing_commit_cases	my_project/libgit2/tests/libgit2/commit/parse.c	/^static char *passing_commit_cases[] = {$/;"	v	typeref:typename:char * []	file:
passing_header_cases	my_project/libgit2/tests/libgit2/commit/parse.c	/^static parse_test_case passing_header_cases[] = {$/;"	v	typeref:typename:parse_test_case[]	file:
passing_signature_cases	my_project/libgit2/tests/libgit2/commit/parse.c	/^passing_signature_test_case passing_signature_cases[] = {$/;"	v	typeref:typename:passing_signature_test_case[]
passing_signature_test_case	my_project/libgit2/tests/libgit2/commit/parse.c	/^} passing_signature_test_case;$/;"	t	typeref:struct:__anon39d5c3ee0208	file:
passive_refspecs	my_project/libgit2/src/libgit2/remote.h	/^	git_vector passive_refspecs;$/;"	m	struct:git_remote	typeref:typename:git_vector
passphrase	my_project/libgit2/include/git2/sys/credential.h	/^	char *passphrase;      \/**< Passphrase to decrypt the private key *\/$/;"	m	struct:git_credential_ssh_key	typeref:typename:char *
password	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *password;$/;"	m	struct:ntlm_client	typeref:typename:char *
password	my_project/libgit2/include/git2/credential_helpers.h	/^	const char *password;$/;"	m	struct:git_credential_userpass_payload	typeref:typename:const char *
password	my_project/libgit2/include/git2/sys/credential.h	/^	char *password;        \/**< The password to use *\/$/;"	m	struct:git_credential_userpass_plaintext	typeref:typename:char *
password	my_project/libgit2/src/util/net.c	/^	const char *password;$/;"	m	struct:__anon850d8ea80108	typeref:typename:const char *	file:
password	my_project/libgit2/src/util/net.h	/^	char *password;$/;"	m	struct:git_net_url	typeref:typename:char *
password_len	my_project/libgit2/src/util/net.c	/^	size_t password_len;$/;"	m	struct:__anon850d8ea80108	typeref:typename:size_t	file:
password_utf16	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *password_utf16;$/;"	m	struct:ntlm_client	typeref:typename:char *
password_utf16_len	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	size_t password_utf16_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
past	my_project/libgit2/deps/zlib/gzguts.h	/^    int past;               \/* true if read requested past end *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:int
patch	my_project/libgit2/src/libgit2/diff_xdiff.c	/^	git_patch_generated *patch;$/;"	m	struct:__anon544d96590108	typeref:typename:git_patch_generated *	file:
patch	my_project/libgit2/src/libgit2/patch_generate.c	/^	git_patch_generated patch;$/;"	m	struct:__anonbb9a560a0108	typeref:typename:git_patch_generated	file:
patch_error_outofrange	my_project/libgit2/src/libgit2/patch.c	/^static int patch_error_outofrange(const char *thing)$/;"	f	typeref:typename:int	file:
patch_fn	my_project/libgit2/src/libgit2/diff.h	/^	int (*patch_fn)(git_patch **out, git_diff *diff, size_t idx);$/;"	m	struct:git_diff	typeref:typename:int (*)(git_patch ** out,git_diff * diff,size_t idx)
patch_from_sources	my_project/libgit2/src/libgit2/patch_generate.c	/^static int patch_from_sources($/;"	f	typeref:typename:int	file:
patch_generated_alloc_from_diff	my_project/libgit2/src/libgit2/patch_generate.c	/^static int patch_generated_alloc_from_diff($/;"	f	typeref:typename:int	file:
patch_generated_binary_cb	my_project/libgit2/src/libgit2/patch_generate.c	/^static int patch_generated_binary_cb($/;"	f	typeref:typename:int	file:
patch_generated_create	my_project/libgit2/src/libgit2/patch_generate.c	/^static int patch_generated_create($/;"	f	typeref:typename:int	file:
patch_generated_diffable	my_project/libgit2/src/libgit2/patch_generate.c	/^static bool patch_generated_diffable(git_patch_generated *patch)$/;"	f	typeref:typename:bool	file:
patch_generated_file_cb	my_project/libgit2/src/libgit2/patch_generate.c	/^static int patch_generated_file_cb($/;"	f	typeref:typename:int	file:
patch_generated_free	my_project/libgit2/src/libgit2/patch_generate.c	/^static void patch_generated_free(git_patch *p)$/;"	f	typeref:typename:void	file:
patch_generated_from_sources	my_project/libgit2/src/libgit2/patch_generate.c	/^static int patch_generated_from_sources($/;"	f	typeref:typename:int	file:
patch_generated_init	my_project/libgit2/src/libgit2/patch_generate.c	/^static int patch_generated_init($/;"	f	typeref:typename:int	file:
patch_generated_init_common	my_project/libgit2/src/libgit2/patch_generate.c	/^static void patch_generated_init_common(git_patch_generated *patch)$/;"	f	typeref:typename:void	file:
patch_generated_invoke_file_callback	my_project/libgit2/src/libgit2/patch_generate.c	/^static int patch_generated_invoke_file_callback($/;"	f	typeref:typename:int	file:
patch_generated_line_cb	my_project/libgit2/src/libgit2/patch_generate.c	/^static int patch_generated_line_cb($/;"	f	typeref:typename:int	file:
patch_generated_load	my_project/libgit2/src/libgit2/patch_generate.c	/^static int patch_generated_load(git_patch_generated *patch, git_patch_generated_output *output)$/;"	f	typeref:typename:int	file:
patch_generated_normalize_options	my_project/libgit2/src/libgit2/patch_generate.c	/^static int patch_generated_normalize_options($/;"	f	typeref:typename:int	file:
patch_generated_update_binary	my_project/libgit2/src/libgit2/patch_generate.c	/^static void patch_generated_update_binary(git_patch_generated *patch)$/;"	f	typeref:typename:void	file:
patch_generated_with_delta	my_project/libgit2/src/libgit2/patch_generate.c	/^} patch_generated_with_delta;$/;"	t	typeref:struct:__anonbb9a560a0108	file:
patch_generated_with_delta_alloc	my_project/libgit2/src/libgit2/patch_generate.c	/^static int patch_generated_with_delta_alloc($/;"	f	typeref:typename:int	file:
patch_id_args	my_project/libgit2/src/libgit2/diff.c	/^struct patch_id_args {$/;"	s	file:
patch_image	my_project/libgit2/src/libgit2/apply.c	/^} patch_image;$/;"	t	typeref:struct:__anonf90645360108	file:
patch_image_free	my_project/libgit2/src/libgit2/apply.c	/^static void patch_image_free(patch_image *image)$/;"	f	typeref:typename:void	file:
patch_image_init_fromstr	my_project/libgit2/src/libgit2/apply.c	/^static int patch_image_init_fromstr($/;"	f	typeref:typename:int	file:
patch_line_init	my_project/libgit2/src/libgit2/apply.c	/^static void patch_line_init($/;"	f	typeref:typename:void	file:
patch_no	my_project/libgit2/include/git2/deprecated.h	/^	size_t patch_no;$/;"	m	struct:__anon325f306b0208	typeref:typename:size_t
patch_parse_ctx_free	my_project/libgit2/src/libgit2/patch_parse.c	/^static void patch_parse_ctx_free(git_patch_parse_ctx *ctx)$/;"	f	typeref:typename:void	file:
patch_parsed__free	my_project/libgit2/src/libgit2/patch_parse.c	/^static void patch_parsed__free(git_patch *p)$/;"	f	typeref:typename:void	file:
patch_print_from_patchfile	my_project/libgit2/tests/libgit2/patch/print.c	/^static void patch_print_from_patchfile(const char *data, size_t len)$/;"	f	typeref:typename:void	file:
patches	my_project/libgit2/src/libgit2/diff_parse.h	/^	git_vector patches;$/;"	m	struct:__anone6262fa80108	typeref:typename:git_vector
path	my_project/libgit2/deps/zlib/gzguts.h	/^    char *path;             \/* path or fd for error messages *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:char *
path	my_project/libgit2/examples/blame.c	/^	char *path;$/;"	m	struct:blame_opts	typeref:typename:char *	file:
path	my_project/libgit2/examples/clone.c	/^	const char *path;$/;"	m	struct:progress_data	typeref:typename:const char *	file:
path	my_project/libgit2/include/git2/diff.h	/^	const char        *path;$/;"	m	struct:__anon7f3f1dd30408	typeref:typename:const char *
path	my_project/libgit2/include/git2/index.h	/^	const char *path;$/;"	m	struct:git_index_entry	typeref:typename:const char *
path	my_project/libgit2/include/git2/merge.h	/^	const char *path;$/;"	m	struct:__anon1374edca0108	typeref:typename:const char *
path	my_project/libgit2/include/git2/merge.h	/^	const char *path;$/;"	m	struct:__anon1374edca0608	typeref:typename:const char *
path	my_project/libgit2/include/git2/sys/index.h	/^	char *path;$/;"	m	struct:git_index_reuc_entry	typeref:typename:char *
path	my_project/libgit2/include/git2/tree.h	/^	const char *path;$/;"	m	struct:__anona533f3ca0308	typeref:typename:const char *
path	my_project/libgit2/src/libgit2/attr_file.h	/^	char    *path;$/;"	m	struct:__anon0df92d8f0908	typeref:typename:char *
path	my_project/libgit2/src/libgit2/attr_file.h	/^	const char *path; \/* points into fullpath *\/$/;"	m	struct:git_attr_file_entry	typeref:typename:const char *
path	my_project/libgit2/src/libgit2/blame.h	/^	char *path;$/;"	m	struct:git_blame	typeref:typename:char *
path	my_project/libgit2/src/libgit2/blame.h	/^	char path[GIT_FLEX_ARRAY];$/;"	m	struct:git_blame__origin	typeref:typename:char[]
path	my_project/libgit2/src/libgit2/checkout.c	/^	const char *path;$/;"	m	struct:checkout_stream	typeref:typename:const char *	file:
path	my_project/libgit2/src/libgit2/config_file.c	/^	char *path;$/;"	m	struct:config_file	typeref:typename:char *	file:
path	my_project/libgit2/src/libgit2/config_parse.h	/^	const char *path;$/;"	m	struct:__anona5ab66050108	typeref:typename:const char *
path	my_project/libgit2/src/libgit2/describe.c	/^	char *path;$/;"	m	struct:commit_name	typeref:typename:char *	file:
path	my_project/libgit2/src/libgit2/filter.c	/^	char path[GIT_FLEX_ARRAY];$/;"	m	struct:git_filter_list	typeref:typename:char[]	file:
path	my_project/libgit2/src/libgit2/filter.c	/^	const char        *path;$/;"	m	struct:git_filter_source	typeref:typename:const char *	file:
path	my_project/libgit2/src/libgit2/grafts.c	/^	char *path;$/;"	m	struct:git_grafts	typeref:typename:char *	file:
path	my_project/libgit2/src/libgit2/index.c	/^	char path[GIT_FLEX_ARRAY];$/;"	m	struct:entry_internal	typeref:typename:char[]	file:
path	my_project/libgit2/src/libgit2/index.c	/^	char path[GIT_FLEX_ARRAY];$/;"	m	struct:reuc_entry_internal	typeref:typename:char[]	file:
path	my_project/libgit2/src/libgit2/index.c	/^	const char *path;$/;"	m	struct:entry_srch_key	typeref:typename:const char *	file:
path	my_project/libgit2/src/libgit2/iterator.c	/^	char path[GIT_FLEX_ARRAY];$/;"	m	struct:__anon2f88b95a0608	typeref:typename:char[]	file:
path	my_project/libgit2/src/libgit2/iterator.c	/^	git_str path;$/;"	m	struct:__anon2f88b95a0408	typeref:typename:git_str	file:
path	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_str path;$/;"	m	struct:iter_load_context	typeref:typename:git_str	file:
path	my_project/libgit2/src/libgit2/repo_template.h	/^	const char *path;$/;"	m	struct:__anon5b8f20a60108	typeref:typename:const char *
path	my_project/libgit2/src/libgit2/submodule.c	/^	const char *path;$/;"	m	struct:__anon705203a00308	typeref:typename:const char *	file:
path	my_project/libgit2/src/libgit2/submodule.h	/^	char *path; \/* important: may just point to "name" string *\/$/;"	m	struct:git_submodule	typeref:typename:char *
path	my_project/libgit2/src/libgit2/transports/smart.h	/^	char *path;$/;"	m	struct:git_pkt_cmd	typeref:typename:char *
path	my_project/libgit2/src/util/fs_path.h	/^	git_str path;$/;"	m	struct:git_fs_path_diriter	typeref:typename:git_str
path	my_project/libgit2/src/util/fs_path.h	/^	git_win32_path path;$/;"	m	struct:git_fs_path_diriter	typeref:typename:git_win32_path
path	my_project/libgit2/src/util/net.c	/^	const char *path;$/;"	m	struct:__anon850d8ea80108	typeref:typename:const char *	file:
path	my_project/libgit2/src/util/net.h	/^	char *path;$/;"	m	struct:git_net_url	typeref:typename:char *
path	my_project/libgit2/src/util/sortedcache.h	/^	char         path[GIT_FLEX_ARRAY];$/;"	m	struct:__anon21e0f34b0108	typeref:typename:char[]
path	my_project/libgit2/tests/clar/generate.py	/^    path = args.pop() if args else '.'$/;"	v
path	my_project/libgit2/tests/libgit2/attr/attr_expect.h	/^	const char *path;$/;"	m	struct:attr_expected	typeref:typename:const char *
path	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^	char path[128];$/;"	m	struct:checkout_index_entry	typeref:typename:char[128]	file:
path	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	const char *path;$/;"	m	struct:__anone9d3a2f30208	typeref:typename:const char *
path	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^	const char *path;$/;"	m	struct:__anon2bf18d4b0108	typeref:typename:const char *	file:
path	my_project/libgit2/tests/libgit2/ignore/status.c	/^		const char *path;$/;"	m	struct:test_ignore_status__0::__anone6eef5b20108	typeref:typename:const char *	file:
path	my_project/libgit2/tests/libgit2/index/tests.c	/^   char path[128];$/;"	m	struct:test_entry	typeref:typename:char[128]	file:
path	my_project/libgit2/tests/libgit2/index/tests256.c	/^   char path[128];$/;"	m	struct:test_entry	typeref:typename:char[128]	file:
path	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^		const char *path;$/;"	m	struct:test_iterator_workdir__builtin_ignores::__anone78711f60108	typeref:typename:const char *	file:
path	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	char path[128];$/;"	m	struct:merge_index_entry	typeref:typename:char[128]
path	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	char path[128];$/;"	m	struct:merge_reuc_entry	typeref:typename:char[128]
path	my_project/libgit2/tests/libgit2/repo/config.c	/^static git_str path = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
path	my_project/libgit2/tests/libgit2/threads/refdb.c	/^	const char *path;$/;"	m	struct:th_data	typeref:typename:const char *	file:
path	my_project/libgit2/tests/libgit2/win32/longpath.c	/^static git_str path = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
path	my_project/libgit2/tests/util/dirent.c	/^	git_str path;$/;"	m	struct:walk_data	typeref:typename:git_str	file:
path	my_project/libgit2/tests/util/sortedcache.c	/^	char path[GIT_FLEX_ARRAY];$/;"	m	struct:__anonbd76c9710108	typeref:typename:char[]	file:
path__cwd	my_project/libgit2/src/util/win32/path_w32.c	/^GIT_INLINE(int) path__cwd(wchar_t *path, int size)$/;"	f	typeref:typename:int
path__is_nt_namespace	my_project/libgit2/src/util/win32/path_w32.c	/^#define path__is_nt_namespace(/;"	d	file:
path__is_unc	my_project/libgit2/src/util/win32/path_w32.c	/^#define path__is_unc(/;"	d	file:
path__skip_prefix	my_project/libgit2/src/util/win32/path_w32.c	/^static wchar_t *path__skip_prefix(wchar_t *path)$/;"	f	typeref:typename:wchar_t *	file:
path__skip_server	my_project/libgit2/src/util/win32/path_w32.c	/^static wchar_t *path__skip_server(wchar_t *path)$/;"	f	typeref:typename:wchar_t *	file:
path__startswith_slash	my_project/libgit2/src/util/win32/path_w32.c	/^#define path__startswith_slash(/;"	d	file:
path_checksum	my_project/libgit2/src/libgit2/grafts.c	/^	unsigned char path_checksum[GIT_HASH_SHA256_SIZE];$/;"	m	struct:git_grafts	typeref:typename:unsigned char[]	file:
path_dirent_data	my_project/libgit2/src/util/fs_path.c	/^typedef char path_dirent_data[sizeof(struct dirent) + FILENAME_MAX + 1];$/;"	t	typeref:typename:char[sizeof (struct dirent)+FILENAME_MAX+1]	file:
path_dirent_data	my_project/libgit2/src/util/fs_path.c	/^typedef struct dirent path_dirent_data;$/;"	t	typeref:struct:dirent	file:
path_found_entry	my_project/libgit2/src/util/fs_path.c	/^static int path_found_entry(void *payload, git_str *path)$/;"	f	typeref:typename:int	file:
path_is_prefixed	my_project/libgit2/src/libgit2/merge.c	/^GIT_INLINE(bool) path_is_prefixed(const char *parent, const char *child)$/;"	f	typeref:typename:bool
path_is_volume	my_project/libgit2/src/util/win32/path_w32.c	/^static bool path_is_volume(wchar_t *target, size_t target_len)$/;"	f	typeref:typename:bool	file:
path_len	my_project/libgit2/src/libgit2/iterator.c	/^	size_t path_len;$/;"	m	struct:__anon2f88b95a0608	typeref:typename:size_t	file:
path_len	my_project/libgit2/src/libgit2/iterator.c	/^	size_t path_len;$/;"	m	struct:__anon2f88b95a0708	typeref:typename:size_t	file:
path_len	my_project/libgit2/src/util/net.c	/^	size_t path_len;$/;"	m	struct:__anon850d8ea80108	typeref:typename:size_t	file:
path_lock	my_project/libgit2/src/util/filebuf.h	/^	char *path_lock;$/;"	m	struct:git_filebuf	typeref:typename:char *
path_original	my_project/libgit2/src/util/filebuf.h	/^	char *path_original;$/;"	m	struct:git_filebuf	typeref:typename:char *
path_save	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^static char *path_save;$/;"	v	typeref:typename:char *	file:
path_save	my_project/libgit2/tests/util/path/core.c	/^static char *path_save;$/;"	v	typeref:typename:char *	file:
path_trim_slashes	my_project/libgit2/src/util/fs_path.c	/^static void path_trim_slashes(git_str *path)$/;"	f	typeref:typename:void	file:
path_unless_empty	my_project/libgit2/src/libgit2/repository.c	/^static const char *path_unless_empty(git_str *buf)$/;"	f	typeref:typename:const char *	file:
path_utf8	my_project/libgit2/src/util/fs_path.h	/^	git_str path_utf8;$/;"	m	struct:git_fs_path_diriter	typeref:typename:git_str
pathlen	my_project/libgit2/src/libgit2/index.c	/^	size_t pathlen;$/;"	m	struct:entry_internal	typeref:typename:size_t	file:
pathlen	my_project/libgit2/src/libgit2/index.c	/^	size_t pathlen;$/;"	m	struct:entry_srch_key	typeref:typename:size_t	file:
pathlen	my_project/libgit2/src/libgit2/index.c	/^	size_t pathlen;$/;"	m	struct:reuc_entry_internal	typeref:typename:size_t	file:
pathlist	my_project/libgit2/src/libgit2/iterator.h	/^	git_strarray pathlist;$/;"	m	struct:__anon2f88b95f0408	typeref:typename:git_strarray
pathlist	my_project/libgit2/src/libgit2/iterator.h	/^	git_vector pathlist;$/;"	m	struct:git_iterator	typeref:typename:git_vector
pathlist_walk_idx	my_project/libgit2/src/libgit2/iterator.h	/^	size_t pathlist_walk_idx;$/;"	m	struct:git_iterator	typeref:typename:size_t
paths	my_project/libgit2/include/git2/checkout.h	/^	git_strarray paths;$/;"	m	struct:git_checkout_options	typeref:typename:git_strarray
paths	my_project/libgit2/include/git2/stash.h	/^	git_strarray paths;$/;"	m	struct:git_stash_save_options	typeref:typename:git_strarray
paths	my_project/libgit2/src/libgit2/blame.h	/^	git_vector paths;$/;"	m	struct:git_blame	typeref:typename:git_vector
paths	my_project/libgit2/src/libgit2/patch_generate.c	/^	char paths[GIT_FLEX_ARRAY];$/;"	m	struct:__anonbb9a560a0108	typeref:typename:char[]	file:
paths	my_project/libgit2/tests/libgit2/odb/alternates.c	/^static const char *paths[] = {$/;"	v	typeref:typename:const char * []	file:
paths	my_project/libgit2/tests/libgit2/submodule/status.c	/^	const char **paths;$/;"	m	struct:__anon0b5f5e9e0108	typeref:typename:const char **	file:
paths_cmp	my_project/libgit2/src/libgit2/blame.c	/^static int paths_cmp(const void *a, const void *b) { return git__strcmp((char*)a, (char*)b); }$/;"	f	typeref:typename:int	file:
paths_on_dup	my_project/libgit2/src/libgit2/blame_git.c	/^static int paths_on_dup(void **old, void *new)$/;"	f	typeref:typename:int	file:
pathspec	my_project/libgit2/examples/status.c	/^	char *pathspec[MAX_PATHSPEC];$/;"	m	struct:status_opts	typeref:typename:char * []	file:
pathspec	my_project/libgit2/include/git2/diff.h	/^	git_strarray       pathspec;$/;"	m	struct:__anon7f3f1dd30608	typeref:typename:git_strarray
pathspec	my_project/libgit2/include/git2/status.h	/^	git_strarray      pathspec;$/;"	m	struct:__anon6794a3fe0408	typeref:typename:git_strarray
pathspec	my_project/libgit2/src/libgit2/diff_generate.c	/^	git_vector pathspec;$/;"	m	struct:__anonff5a2cd30108	typeref:typename:git_vector	file:
pathspec	my_project/libgit2/src/libgit2/index.c	/^	const git_pathspec *pathspec;$/;"	m	struct:foreach_diff_data	typeref:typename:const git_pathspec *	file:
pathspec	my_project/libgit2/src/libgit2/pathspec.h	/^	git_pathspec *pathspec;$/;"	m	struct:git_pathspec_match_list	typeref:typename:git_pathspec *
pathspec	my_project/libgit2/src/libgit2/pathspec.h	/^	git_vector pathspec;$/;"	m	struct:git_pathspec	typeref:typename:git_vector
pathspec_build_failure_array	my_project/libgit2/src/libgit2/pathspec.c	/^static int pathspec_build_failure_array($/;"	f	typeref:typename:int	file:
pathspec_free	my_project/libgit2/src/libgit2/pathspec.c	/^static void pathspec_free(git_pathspec *ps)$/;"	f	typeref:typename:void	file:
pathspec_mark_pattern	my_project/libgit2/src/libgit2/pathspec.c	/^GIT_INLINE(size_t) pathspec_mark_pattern(git_bitvec *used, size_t pos)$/;"	f	typeref:typename:size_t
pathspec_mark_remaining	my_project/libgit2/src/libgit2/pathspec.c	/^static size_t pathspec_mark_remaining($/;"	f	typeref:typename:size_t	file:
pathspec_match_alloc	my_project/libgit2/src/libgit2/pathspec.c	/^static git_pathspec_match_list *pathspec_match_alloc($/;"	f	typeref:typename:git_pathspec_match_list *	file:
pathspec_match_context	my_project/libgit2/src/libgit2/pathspec.c	/^struct pathspec_match_context {$/;"	s	file:
pathspec_match_context_init	my_project/libgit2/src/libgit2/pathspec.c	/^static void pathspec_match_context_init($/;"	f	typeref:typename:void	file:
pathspec_match_free	my_project/libgit2/src/libgit2/pathspec.c	/^static void pathspec_match_free(git_pathspec_match_list *m)$/;"	f	typeref:typename:void	file:
pathspec_match_from_iterator	my_project/libgit2/src/libgit2/pathspec.c	/^static int pathspec_match_from_iterator($/;"	f	typeref:typename:int	file:
pathspec_match_iter_flags	my_project/libgit2/src/libgit2/pathspec.c	/^static git_iterator_flag_t pathspec_match_iter_flags(uint32_t flags)$/;"	f	typeref:typename:git_iterator_flag_t	file:
pathspec_match_one	my_project/libgit2/src/libgit2/pathspec.c	/^static int pathspec_match_one($/;"	f	typeref:typename:int	file:
patience_diff	my_project/libgit2/deps/xdiff/xpatience.c	/^static int patience_diff(xpparam_t const *xpp, xdfenv_t *env,$/;"	f	typeref:typename:int	file:
pattern	my_project/libgit2/examples/tag.c	/^	const char *pattern;$/;"	m	struct:tag_options	typeref:typename:const char *	file:
pattern	my_project/libgit2/include/git2/describe.h	/^	const char *pattern;$/;"	m	struct:git_describe_options	typeref:typename:const char *
pattern	my_project/libgit2/src/libgit2/attr_file.h	/^	char *pattern;$/;"	m	struct:__anon0df92d8f0308	typeref:typename:char *
pattern	my_project/libgit2/src/libgit2/refspec.h	/^		pattern :1,$/;"	m	struct:git_refspec	typeref:typename:unsigned int:1
pattern	my_project/libgit2/src/libgit2/tag.c	/^	const char *pattern;$/;"	m	struct:__anon317eab2c0208	typeref:typename:const char *	file:
pattern	my_project/libgit2/tests/libgit2/object/tag/list.c	/^	const char* pattern;$/;"	m	struct:pattern_match_t	typeref:typename:const char *	file:
pattern	my_project/libgit2/tests/util/url/pattern.c	/^	const char *pattern;$/;"	m	struct:url_pattern	typeref:typename:const char *	file:
pattern_match_t	my_project/libgit2/tests/libgit2/object/tag/list.c	/^struct pattern_match_t$/;"	s	file:
pattern_position	my_project/libgit2/deps/pcre/pcre.h	/^  int          pattern_position;  \/* Offset to next item in the pattern *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
pattern_position	my_project/libgit2/deps/pcre/pcre.h	/^  int          pattern_position;  \/* Offset to next item in the pattern *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
pattern_position	my_project/libgit2/deps/pcre/pcre.h	/^  int          pattern_position;  \/* Offset to next item in the pattern *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
payload	my_project/libgit2/include/git2/apply.h	/^	void *payload;$/;"	m	struct:__anon9141b5a00208	typeref:typename:void *
payload	my_project/libgit2/include/git2/diff.h	/^	void                *payload;$/;"	m	struct:__anon7f3f1dd30608	typeref:typename:void *
payload	my_project/libgit2/include/git2/diff.h	/^	void *payload;$/;"	m	struct:__anon7f3f1dd30e08	typeref:typename:void *
payload	my_project/libgit2/include/git2/proxy.h	/^	void *payload;$/;"	m	struct:__anon188a123c0208	typeref:typename:void *
payload	my_project/libgit2/include/git2/rebase.h	/^	void *payload;$/;"	m	struct:__anonf9a5428c0108	typeref:typename:void *
payload	my_project/libgit2/include/git2/remote.h	/^	void *payload;$/;"	m	struct:git_remote_callbacks	typeref:typename:void *
payload	my_project/libgit2/include/git2/sys/credential.h	/^	void *payload;         \/**< Payload passed to prompt_callback *\/$/;"	m	struct:git_credential_ssh_custom	typeref:typename:void *
payload	my_project/libgit2/include/git2/sys/credential.h	/^	void *payload;         \/**< Payload passed to prompt_callback *\/$/;"	m	struct:git_credential_ssh_interactive	typeref:typename:void *
payload	my_project/libgit2/src/libgit2/diff_print.c	/^	void *payload;$/;"	m	struct:__anon0d2887b50108	typeref:typename:void *	file:
payload	my_project/libgit2/src/libgit2/filter.c	/^	void **payload;$/;"	m	struct:buffered_stream	typeref:typename:void **	file:
payload	my_project/libgit2/src/libgit2/filter.c	/^	void *payload;$/;"	m	struct:__anon9372afd60108	typeref:typename:void *	file:
payload	my_project/libgit2/src/libgit2/index.c	/^	void *payload;$/;"	m	struct:foreach_diff_data	typeref:typename:void *	file:
payload	my_project/libgit2/src/libgit2/patch_generate.h	/^	void *payload;$/;"	m	struct:git_patch_generated_output	typeref:typename:void *
payload	my_project/libgit2/src/libgit2/transaction.c	/^	void *payload;$/;"	m	struct:__anonbebdb9760208	typeref:typename:void *	file:
payload	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^	void *payload;$/;"	m	struct:network_packetsize_payload	typeref:typename:void *	file:
payload	my_project/libgit2/src/util/tsort.c	/^	void *payload;$/;"	m	struct:tsort_store	typeref:typename:void *	file:
payload	my_project/libgit2/src/util/util.c	/^	void *payload;$/;"	m	struct:__anon381de8bf0108	typeref:typename:void *	file:
pb	my_project/libgit2/src/libgit2/pack-objects.c	/^	git_packbuilder *pb;$/;"	m	struct:thread_params	typeref:typename:git_packbuilder *	file:
pb	my_project/libgit2/src/libgit2/pack-objects.c	/^	git_packbuilder *pb;$/;"	m	struct:tree_walk_context	typeref:typename:git_packbuilder *	file:
pb	my_project/libgit2/src/libgit2/push.h	/^	git_packbuilder *pb;$/;"	m	struct:git_push	typeref:typename:git_packbuilder *
pb	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^	git_packbuilder *pb;$/;"	m	struct:push_packbuilder_payload	typeref:typename:git_packbuilder *	file:
pb_parallelism	my_project/libgit2/include/git2/remote.h	/^	unsigned int pb_parallelism;$/;"	m	struct:__anon144be4e60908	typeref:typename:unsigned int
pb_parallelism	my_project/libgit2/src/libgit2/push.h	/^	unsigned pb_parallelism;$/;"	m	struct:git_push	typeref:typename:unsigned
pchars	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^pchars(const pcre_uchar *p, int length, FILE *f)$/;"	f	typeref:typename:void	file:
pchars	my_project/libgit2/deps/pcre/pcre_exec.c	/^pchars(const pcre_uchar *p, int length, BOOL is_subject, match_data *md)$/;"	f	typeref:typename:void	file:
pcre	my_project/libgit2/deps/pcre/CMakeLists.txt	/^add_library(pcre OBJECT ${PCRE_HEADERS} ${PCRE_SOURCES} ${PCREPOSIX_SOURCES})$/;"	t
pcre	my_project/libgit2/deps/pcre/pcre.h	/^typedef struct real_pcre8_or_16 pcre;$/;"	t	typeref:struct:real_pcre8_or_16
pcre16	my_project/libgit2/deps/pcre/pcre.h	/^typedef struct real_pcre8_or_16 pcre16;$/;"	t	typeref:struct:real_pcre8_or_16
pcre16_callout	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL int   (*pcre16_callout)(pcre16_callout_block *);$/;"	v	typeref:typename:PCRE_EXP_DECL int (*)(pcre16_callout_block *)
pcre16_callout_block	my_project/libgit2/deps/pcre/pcre.h	/^typedef struct pcre16_callout_block {$/;"	s
pcre16_callout_block	my_project/libgit2/deps/pcre/pcre.h	/^} pcre16_callout_block;$/;"	t	typeref:struct:pcre16_callout_block
pcre16_extra	my_project/libgit2/deps/pcre/pcre.h	/^typedef struct pcre16_extra {$/;"	s
pcre16_extra	my_project/libgit2/deps/pcre/pcre.h	/^} pcre16_extra;$/;"	t	typeref:struct:pcre16_extra
pcre16_free	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void  (*pcre16_free)(void *);$/;"	v	typeref:typename:PCRE_EXP_DECL void (*)(void *)
pcre16_jit_callback	my_project/libgit2/deps/pcre/pcre.h	/^typedef pcre16_jit_stack *(*pcre16_jit_callback)(void *);$/;"	t	typeref:typename:pcre16_jit_stack * (*)(void *)
pcre16_jit_stack	my_project/libgit2/deps/pcre/pcre.h	/^typedef struct real_pcre16_jit_stack pcre16_jit_stack;$/;"	t	typeref:struct:real_pcre16_jit_stack
pcre16_malloc	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void *(*pcre16_malloc)(size_t);$/;"	v	typeref:typename:PCRE_EXP_DECL void * (*)(size_t)
pcre16_stack_free	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void  (*pcre16_stack_free)(void *);$/;"	v	typeref:typename:PCRE_EXP_DECL void (*)(void *)
pcre16_stack_guard	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL int   (*pcre16_stack_guard)(void);$/;"	v	typeref:typename:PCRE_EXP_DECL int (*)(void)
pcre16_stack_malloc	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void *(*pcre16_stack_malloc)(size_t);$/;"	v	typeref:typename:PCRE_EXP_DECL void * (*)(size_t)
pcre32	my_project/libgit2/deps/pcre/pcre.h	/^typedef struct real_pcre32 pcre32;$/;"	t	typeref:struct:real_pcre32
pcre32_callout	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL int   (*pcre32_callout)(pcre32_callout_block *);$/;"	v	typeref:typename:PCRE_EXP_DECL int (*)(pcre32_callout_block *)
pcre32_callout_block	my_project/libgit2/deps/pcre/pcre.h	/^typedef struct pcre32_callout_block {$/;"	s
pcre32_callout_block	my_project/libgit2/deps/pcre/pcre.h	/^} pcre32_callout_block;$/;"	t	typeref:struct:pcre32_callout_block
pcre32_extra	my_project/libgit2/deps/pcre/pcre.h	/^typedef struct pcre32_extra {$/;"	s
pcre32_extra	my_project/libgit2/deps/pcre/pcre.h	/^} pcre32_extra;$/;"	t	typeref:struct:pcre32_extra
pcre32_free	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void  (*pcre32_free)(void *);$/;"	v	typeref:typename:PCRE_EXP_DECL void (*)(void *)
pcre32_jit_callback	my_project/libgit2/deps/pcre/pcre.h	/^typedef pcre32_jit_stack *(*pcre32_jit_callback)(void *);$/;"	t	typeref:typename:pcre32_jit_stack * (*)(void *)
pcre32_jit_stack	my_project/libgit2/deps/pcre/pcre.h	/^typedef struct real_pcre32_jit_stack pcre32_jit_stack;$/;"	t	typeref:struct:real_pcre32_jit_stack
pcre32_malloc	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void *(*pcre32_malloc)(size_t);$/;"	v	typeref:typename:PCRE_EXP_DECL void * (*)(size_t)
pcre32_stack_free	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void  (*pcre32_stack_free)(void *);$/;"	v	typeref:typename:PCRE_EXP_DECL void (*)(void *)
pcre32_stack_guard	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL int   (*pcre32_stack_guard)(void);$/;"	v	typeref:typename:PCRE_EXP_DECL int (*)(void)
pcre32_stack_malloc	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void *(*pcre32_stack_malloc)(size_t);$/;"	v	typeref:typename:PCRE_EXP_DECL void * (*)(size_t)
pcre_assign_jit_stack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^pcre_assign_jit_stack(pcre_extra *extra, pcre_jit_callback callback, void *userdata)$/;"	f	typeref:typename:PCRE_EXP_DECL void
pcre_callout	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL int   (*pcre_callout)(pcre_callout_block *);$/;"	v	typeref:typename:PCRE_EXP_DECL int (*)(pcre_callout_block *)
pcre_callout_block	my_project/libgit2/deps/pcre/pcre.h	/^typedef struct pcre_callout_block {$/;"	s
pcre_callout_block	my_project/libgit2/deps/pcre/pcre.h	/^} pcre_callout_block;$/;"	t	typeref:struct:pcre_callout_block
pcre_compile	my_project/libgit2/deps/pcre/pcre_compile.c	/^pcre_compile(const char *pattern, int options, const char **errorptr,$/;"	f	typeref:typename:PCRE_EXP_DEFN pcre * PCRE_CALL_CONVENTION
pcre_compile2	my_project/libgit2/deps/pcre/pcre_compile.c	/^pcre_compile2(const char *pattern, int options, int *errorcodeptr,$/;"	f	typeref:typename:PCRE_EXP_DEFN pcre * PCRE_CALL_CONVENTION
pcre_config	my_project/libgit2/deps/pcre/pcre_config.c	/^pcre_config(int what, void *where)$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_copy_named_substring	my_project/libgit2/deps/pcre/pcre_get.c	/^pcre_copy_named_substring(const pcre *code, const char *subject,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_copy_substring	my_project/libgit2/deps/pcre/pcre_get.c	/^pcre_copy_substring(const char *subject, int *ovector, int stringcount,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_dfa_exec	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^pcre_dfa_exec(const pcre *argument_re, const pcre_extra *extra_data,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_exec	my_project/libgit2/deps/pcre/pcre_exec.c	/^pcre_exec(const pcre *argument_re, const pcre_extra *extra_data,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_extra	my_project/libgit2/deps/pcre/pcre.h	/^typedef struct pcre_extra {$/;"	s
pcre_extra	my_project/libgit2/deps/pcre/pcre.h	/^} pcre_extra;$/;"	t	typeref:struct:pcre_extra
pcre_free	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void  (*pcre_free)(void *);$/;"	v	typeref:typename:PCRE_EXP_DECL void (*)(void *)
pcre_free_study	my_project/libgit2/deps/pcre/pcre_study.c	/^pcre_free_study(pcre_extra *extra)$/;"	f	typeref:typename:PCRE_EXP_DEFN void
pcre_free_substring	my_project/libgit2/deps/pcre/pcre_get.c	/^pcre_free_substring(const char *pointer)$/;"	f	typeref:typename:PCRE_EXP_DEFN void PCRE_CALL_CONVENTION
pcre_free_substring_list	my_project/libgit2/deps/pcre/pcre_get.c	/^pcre_free_substring_list(const char **pointer)$/;"	f	typeref:typename:PCRE_EXP_DEFN void PCRE_CALL_CONVENTION
pcre_fullinfo	my_project/libgit2/deps/pcre/pcre_fullinfo.c	/^pcre_fullinfo(const pcre *argument_re, const pcre_extra *extra_data,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_get_named_substring	my_project/libgit2/deps/pcre/pcre_get.c	/^pcre_get_named_substring(const pcre *code, const char *subject,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_get_stringnumber	my_project/libgit2/deps/pcre/pcre_get.c	/^pcre_get_stringnumber(const pcre *code, const char *stringname)$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_get_stringtable_entries	my_project/libgit2/deps/pcre/pcre_get.c	/^pcre_get_stringtable_entries(const pcre *code, const char *stringname,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_get_substring	my_project/libgit2/deps/pcre/pcre_get.c	/^pcre_get_substring(const char *subject, int *ovector, int stringcount,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_get_substring_list	my_project/libgit2/deps/pcre/pcre_get.c	/^pcre_get_substring_list(const char *subject, int *ovector, int stringcount,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_have_long_long	my_project/libgit2/deps/pcre/CMakeLists.txt	/^        set(pcre_have_long_long 1)$/;"	v
pcre_have_long_long	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(pcre_have_long_long 0)$/;"	v
pcre_have_ulong_long	my_project/libgit2/deps/pcre/CMakeLists.txt	/^        set(pcre_have_ulong_long 1)$/;"	v
pcre_have_ulong_long	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(pcre_have_ulong_long 0)$/;"	v
pcre_int16	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef int pcre_int16;$/;"	t	typeref:typename:int
pcre_int16	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef short pcre_int16;$/;"	t	typeref:typename:short
pcre_int32	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef int pcre_int32;$/;"	t	typeref:typename:int
pcre_int32	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef long int pcre_int32;$/;"	t	typeref:typename:long int
pcre_jit_callback	my_project/libgit2/deps/pcre/pcre.h	/^typedef pcre_jit_stack *(*pcre_jit_callback)(void *);$/;"	t	typeref:typename:pcre_jit_stack * (*)(void *)
pcre_jit_exec	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^pcre_jit_exec(const pcre *argument_re, const pcre_extra *extra_data,$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_jit_free_unused_memory	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^pcre_jit_free_unused_memory(void)$/;"	f	typeref:typename:PCRE_EXP_DECL void
pcre_jit_stack	my_project/libgit2/deps/pcre/pcre.h	/^typedef struct real_pcre_jit_stack pcre_jit_stack;$/;"	t	typeref:struct:real_pcre_jit_stack
pcre_jit_stack_alloc	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^pcre_jit_stack_alloc(int startsize, int maxsize)$/;"	f	typeref:typename:PCRE_EXP_DECL pcre_jit_stack *
pcre_jit_stack_free	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^pcre_jit_stack_free(pcre_jit_stack *stack)$/;"	f	typeref:typename:PCRE_EXP_DECL void
pcre_maketables	my_project/libgit2/deps/pcre/pcre_maketables.c	/^pcre_maketables(void)$/;"	f	typeref:typename:const unsigned char *
pcre_malloc	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void *(*pcre_malloc)(size_t);$/;"	v	typeref:typename:PCRE_EXP_DECL void * (*)(size_t)
pcre_memmove	my_project/libgit2/deps/pcre/pcre_internal.h	/^pcre_memmove(void *d, const void *s, size_t n)$/;"	f	typeref:typename:void *
pcre_pattern_to_host_byte_order	my_project/libgit2/deps/pcre/pcre_byte_order.c	/^PCRE_EXP_DECL int pcre_pattern_to_host_byte_order(pcre *argument_re,$/;"	f	typeref:typename:PCRE_EXP_DECL int
pcre_printint	my_project/libgit2/deps/pcre/pcre_printint.c	/^pcre_printint(pcre *external_re, FILE *f, BOOL print_lengths)$/;"	f	typeref:typename:void	file:
pcre_refcount	my_project/libgit2/deps/pcre/pcre_refcount.c	/^pcre_refcount(pcre *argument_re, int adjust)$/;"	f	typeref:typename:PCRE_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_regcomp	my_project/libgit2/deps/pcre/pcreposix.c	/^pcre_regcomp(pcre_regex_t *preg, const char *pattern, int cflags)$/;"	f	typeref:typename:PCREPOSIX_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_regerror	my_project/libgit2/deps/pcre/pcreposix.c	/^pcre_regerror(int errcode, const pcre_regex_t *preg, char *errbuf, size_t errbuf_size)$/;"	f	typeref:typename:PCREPOSIX_EXP_DEFN size_t PCRE_CALL_CONVENTION
pcre_regex_t	my_project/libgit2/deps/pcre/pcreposix.h	/^} pcre_regex_t;$/;"	t	typeref:struct:__anon411fc6730208
pcre_regexec	my_project/libgit2/deps/pcre/pcreposix.c	/^pcre_regexec(const pcre_regex_t *preg, const char *string, size_t nmatch,$/;"	f	typeref:typename:PCREPOSIX_EXP_DEFN int PCRE_CALL_CONVENTION
pcre_regfree	my_project/libgit2/deps/pcre/pcreposix.c	/^pcre_regfree(pcre_regex_t *preg)$/;"	f	typeref:typename:PCREPOSIX_EXP_DEFN void PCRE_CALL_CONVENTION
pcre_regmatch_t	my_project/libgit2/deps/pcre/pcreposix.h	/^} pcre_regmatch_t;$/;"	t	typeref:struct:__anon411fc6730308
pcre_regoff_t	my_project/libgit2/deps/pcre/pcreposix.h	/^typedef int pcre_regoff_t;$/;"	t	typeref:typename:int
pcre_stack_free	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void  (*pcre_stack_free)(void *);$/;"	v	typeref:typename:PCRE_EXP_DECL void (*)(void *)
pcre_stack_guard	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL int   (*pcre_stack_guard)(void);$/;"	v	typeref:typename:PCRE_EXP_DECL int (*)(void)
pcre_stack_malloc	my_project/libgit2/deps/pcre/pcre.h	/^PCRE_EXP_DECL void *(*pcre_stack_malloc)(size_t);$/;"	v	typeref:typename:PCRE_EXP_DECL void * (*)(size_t)
pcre_study	my_project/libgit2/deps/pcre/pcre_study.c	/^pcre_study(const pcre *external_re, int options, const char **errorptr)$/;"	f	typeref:typename:PCRE_EXP_DEFN pcre_extra * PCRE_CALL_CONVENTION
pcre_study_data	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct pcre_study_data {$/;"	s
pcre_study_data	my_project/libgit2/deps/pcre/pcre_internal.h	/^} pcre_study_data;$/;"	t	typeref:struct:pcre_study_data
pcre_uchar	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef pcre_uint16 pcre_uchar;$/;"	t	typeref:typename:pcre_uint16
pcre_uchar	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef pcre_uint32 pcre_uchar;$/;"	t	typeref:typename:pcre_uint32
pcre_uchar	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef unsigned char pcre_uchar;$/;"	t	typeref:typename:unsigned char
pcre_uint16	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef unsigned int pcre_uint16;$/;"	t	typeref:typename:unsigned int
pcre_uint16	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef unsigned short pcre_uint16;$/;"	t	typeref:typename:unsigned short
pcre_uint32	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef unsigned int pcre_uint32;$/;"	t	typeref:typename:unsigned int
pcre_uint32	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef unsigned long int pcre_uint32;$/;"	t	typeref:typename:unsigned long int
pcre_uint8	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef unsigned char pcre_uint8;$/;"	t	typeref:typename:unsigned char
pcre_version	my_project/libgit2/deps/pcre/pcre_version.c	/^pcre_version(void)$/;"	f	typeref:typename:PCRE_EXP_DEFN const char * PCRE_CALL_CONVENTION
pctx	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^    EVP_PKEY_CTX *pctx;$/;"	m	struct:env_md_ctx_st	typeref:typename:EVP_PKEY_CTX *
peak_mapped	my_project/libgit2/src/libgit2/mwindow.h	/^	size_t peak_mapped;$/;"	m	struct:git_mwindow_ctl	typeref:typename:size_t
peak_open_windows	my_project/libgit2/src/libgit2/mwindow.h	/^	unsigned int peak_open_windows;$/;"	m	struct:git_mwindow_ctl	typeref:typename:unsigned int
peek_char	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void peek_char(compiler_common *common, sljit_u32 max)$/;"	f	typeref:typename:void	file:
peel	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_oid peel;$/;"	m	struct:packref	typeref:typename:git_oid	file:
peel	my_project/libgit2/src/libgit2/refs.h	/^	git_oid peel;$/;"	m	struct:git_reference	typeref:typename:git_oid
peel_error	my_project/libgit2/src/libgit2/object.c	/^static int peel_error(int error, const git_oid *oid, git_object_t type)$/;"	f	typeref:typename:int	file:
peel_error	my_project/libgit2/src/libgit2/refs.c	/^static int peel_error(int error, const git_reference *ref, const char *msg)$/;"	f	typeref:typename:int	file:
peeled	my_project/libgit2/src/libgit2/describe.c	/^	git_oid peeled;$/;"	m	struct:commit_name	typeref:typename:git_oid	file:
peeling_mode	my_project/libgit2/src/libgit2/refdb_fs.c	/^	int peeling_mode;$/;"	m	struct:refdb_fs_backend	typeref:typename:int	file:
penalty	my_project/libgit2/deps/xdiff/xdiffi.c	/^	int penalty;$/;"	m	struct:split_score	typeref:typename:int	file:
pending	my_project/libgit2/deps/zlib/deflate.h	/^    ulg   pending;       \/* nb of bytes in the pending buffer *\/$/;"	m	struct:internal_state	typeref:typename:ulg
pending_buf	my_project/libgit2/deps/zlib/deflate.h	/^    Bytef *pending_buf;  \/* output still pending *\/$/;"	m	struct:internal_state	typeref:typename:Bytef *
pending_buf_size	my_project/libgit2/deps/zlib/deflate.h	/^    ulg   pending_buf_size; \/* size of pending_buf *\/$/;"	m	struct:internal_state	typeref:typename:ulg
pending_number	my_project/libgit2/src/util/date.c	/^static void pending_number(struct tm *tm, int *num)$/;"	f	typeref:typename:void	file:
pending_out	my_project/libgit2/deps/zlib/deflate.h	/^    Bytef *pending_out;  \/* next pending byte to output to the stream *\/$/;"	m	struct:internal_state	typeref:typename:Bytef *
percent	my_project/libgit2/src/cli/progress.c	/^GIT_INLINE(int) percent(size_t completed, size_t total)$/;"	f	typeref:typename:int
perf	my_project/libgit2/examples/checkout.c	/^	unsigned int perf : 1;$/;"	m	struct:__anona3d43da10108	typeref:typename:unsigned int:1	file:
perf	my_project/libgit2/src/libgit2/diff.h	/^	git_diff_perfdata perf;$/;"	m	struct:git_diff	typeref:typename:git_diff_perfdata
perf__do_merge	my_project/libgit2/tests/libgit2/perf/helper__perf__do_merge.c	/^void perf__do_merge(const char *fixture,$/;"	f	typeref:typename:void
perf__timer	my_project/libgit2/tests/libgit2/perf/helper__perf__timer.h	/^struct perf__timer$/;"	s
perf__timer__report	my_project/libgit2/tests/libgit2/perf/helper__perf__timer.c	/^void perf__timer__report(perf_timer *t, const char *fmt, ...)$/;"	f	typeref:typename:void
perf__timer__start	my_project/libgit2/tests/libgit2/perf/helper__perf__timer.c	/^void perf__timer__start(perf_timer *t)$/;"	f	typeref:typename:void
perf__timer__stop	my_project/libgit2/tests/libgit2/perf/helper__perf__timer.c	/^void perf__timer__stop(perf_timer *t)$/;"	f	typeref:typename:void
perf_timer	my_project/libgit2/tests/libgit2/perf/helper__perf__timer.h	/^typedef struct perf__timer perf_timer;$/;"	t	typeref:struct:perf__timer
perfdata	my_project/libgit2/src/libgit2/checkout.c	/^	git_checkout_perfdata perfdata;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_checkout_perfdata	file:
perfdata	my_project/libgit2/src/util/futils.h	/^	struct git_futils_mkdir_perfdata perfdata;$/;"	m	struct:git_futils_mkdir_options	typeref:struct:git_futils_mkdir_perfdata
perfdata_cb	my_project/libgit2/include/git2/checkout.h	/^	git_checkout_perfdata_cb perfdata_cb;$/;"	m	struct:git_checkout_options	typeref:typename:git_checkout_perfdata_cb
perfdata_cb	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static void perfdata_cb(const git_checkout_perfdata *in, void *payload)$/;"	f	typeref:typename:void	file:
perfdata_payload	my_project/libgit2/include/git2/checkout.h	/^	void *perfdata_payload;$/;"	m	struct:git_checkout_options	typeref:typename:void *
perform_checkout_ref	my_project/libgit2/examples/checkout.c	/^static int perform_checkout_ref(git_repository *repo, git_annotated_commit *target, const char */;"	f	typeref:typename:int	file:
perform_fastforward	my_project/libgit2/examples/merge.c	/^static int perform_fastforward(git_repository *repo, const git_oid *target_oid, int is_unborn)$/;"	f	typeref:typename:int	file:
pfn_trace_cb	my_project/libgit2/tests/clar/clar.c	/^	cl_trace_cb *pfn_trace_cb;$/;"	m	struct:__anon15d96e120108	typeref:typename:cl_trace_cb *	file:
pfx	my_project/libgit2/src/libgit2/checkout.c	/^	char *pfx;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:char *	file:
pfxcomp	my_project/libgit2/src/libgit2/diff.h	/^	int (*pfxcomp)(const char *str, const char *pfx);$/;"	m	struct:git_diff	typeref:typename:int (*)(const char * str,const char * pfx)
pick_dir_mode	my_project/libgit2/src/libgit2/repository.c	/^static mode_t pick_dir_mode(git_repository_init_options *opts)$/;"	f	typeref:typename:mode_t	file:
pid	my_project/libgit2/src/util/unix/process.c	/^	pid_t pid;$/;"	m	struct:git_process	typeref:typename:pid_t	file:
pkg_build_config	my_project/libgit2/cmake/PkgBuildConfig.cmake	/^function(pkg_build_config)$/;"	f
plaintext_free	my_project/libgit2/src/libgit2/transports/credential.c	/^static void plaintext_free(struct git_credential *cred)$/;"	f	typeref:typename:void	file:
plaintext_in	my_project/libgit2/src/libgit2/streams/schannel.c	/^	git_str plaintext_in;$/;"	m	struct:__anonafd1b44a0208	typeref:typename:git_str	file:
plno	my_project/libgit2/src/libgit2/blame_git.c	/^	long plno;$/;"	m	struct:blame_chunk_cb_data	typeref:typename:long	file:
pollfd	my_project/libgit2/src/util/posix.h	/^struct pollfd {$/;"	s
pool	my_project/libgit2/src/libgit2/apply.c	/^	git_pool pool;$/;"	m	struct:__anonf90645360108	typeref:typename:git_pool	file:
pool	my_project/libgit2/src/libgit2/attr_file.h	/^	git_pool pool;$/;"	m	struct:__anon0df92d8f0708	typeref:typename:git_pool
pool	my_project/libgit2/src/libgit2/attrcache.h	/^	git_pool  pool;$/;"	m	struct:__anon35c990e40108	typeref:typename:git_pool
pool	my_project/libgit2/src/libgit2/checkout.c	/^	git_pool pool;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_pool	file:
pool	my_project/libgit2/src/libgit2/diff.h	/^	git_pool pool;$/;"	m	struct:git_diff	typeref:typename:git_pool
pool	my_project/libgit2/src/libgit2/merge.h	/^	git_pool pool;$/;"	m	struct:__anon7b397d650208	typeref:typename:git_pool
pool	my_project/libgit2/src/libgit2/pathspec.h	/^	git_pool pool;$/;"	m	struct:git_pathspec	typeref:typename:git_pool
pool	my_project/libgit2/src/libgit2/pathspec.h	/^	git_pool pool;$/;"	m	struct:git_pathspec_match_list	typeref:typename:git_pool
pool	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_pool pool;$/;"	m	struct:__anon3803f1ab0308	typeref:typename:git_pool	file:
pool	my_project/libgit2/src/libgit2/transaction.c	/^	git_pool pool;$/;"	m	struct:git_transaction	typeref:typename:git_pool	file:
pool	my_project/libgit2/src/util/futils.h	/^	git_pool *pool;$/;"	m	struct:git_futils_mkdir_options	typeref:typename:git_pool *
pool	my_project/libgit2/src/util/sortedcache.h	/^	git_pool     pool;$/;"	m	struct:__anon21e0f34b0108	typeref:typename:git_pool
pool_alloc	my_project/libgit2/src/util/pool.c	/^static void *pool_alloc(git_pool *pool, size_t size) {$/;"	f	typeref:typename:void *	file:
pool_alloc	my_project/libgit2/src/util/pool.c	/^static void *pool_alloc(git_pool *pool, size_t size)$/;"	f	typeref:typename:void *	file:
pool_alloc_page	my_project/libgit2/src/util/pool.c	/^static void *pool_alloc_page(git_pool *pool, size_t size)$/;"	f	typeref:typename:void *	file:
poptable	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^static const pcre_uint8 poptable[] = {$/;"	v	typeref:typename:const pcre_uint8[]	file:
poptions	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int   poptions;                   \/* Pattern options *\/$/;"	m	struct:dfa_match_data	typeref:typename:int
populate_fake_ecosystem	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^static void populate_fake_ecosystem($/;"	f	typeref:typename:void	file:
populate_fake_gfw	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^static void populate_fake_gfw($/;"	f	typeref:typename:void	file:
populate_fetchhead	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static void populate_fetchhead(git_vector *out, git_repository *repo)$/;"	f	typeref:typename:void	file:
populate_symlink_workdir	my_project/libgit2/tests/libgit2/checkout/index.c	/^static void populate_symlink_workdir(void)$/;"	f	typeref:typename:void	file:
port	my_project/libgit2/src/libgit2/streams/socket.h	/^	char *port;$/;"	m	struct:__anon362d01ac0108	typeref:typename:char *
port	my_project/libgit2/src/util/net.c	/^	const char *port;$/;"	m	struct:__anon850d8ea80108	typeref:typename:const char *	file:
port	my_project/libgit2/src/util/net.h	/^	char *port;$/;"	m	struct:git_net_url	typeref:typename:char *
port_len	my_project/libgit2/src/util/net.c	/^	size_t port_len;$/;"	m	struct:__anon850d8ea80108	typeref:typename:size_t	file:
port_specified	my_project/libgit2/src/util/net.h	/^	unsigned int port_specified;$/;"	m	struct:git_net_url	typeref:typename:unsigned int
pos	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	size_t pos;$/;"	m	struct:__anondc54b7e10208	typeref:typename:size_t
pos	my_project/libgit2/deps/zlib/zlib.h	/^    z_off64_t pos;$/;"	m	struct:gzFile_s	typeref:typename:z_off64_t
pos	my_project/libgit2/examples/args.h	/^	int    pos;$/;"	m	struct:args_info	typeref:typename:int
position	my_project/libgit2/tests/libgit2/odb/sorting.c	/^	size_t position;$/;"	m	struct:__anon5e7ea0850108	typeref:typename:size_t	file:
positive_assert	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL positive_assert;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
positive_assert_quit	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *positive_assert_quit;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
posix_class_maps	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const int posix_class_maps[] = {$/;"	v	typeref:typename:const int[]	file:
posix_name_lengths	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 posix_name_lengths[] = {$/;"	v	typeref:typename:const pcre_uint8[]	file:
posix_names	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const char posix_names[] =$/;"	v	typeref:typename:const char[]	file:
posix_substitutes	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar *posix_substitutes[] = {$/;"	v	typeref:typename:const pcre_uchar * []	file:
possible_tag	my_project/libgit2/src/libgit2/describe.c	/^struct possible_tag {$/;"	s	file:
possible_tag_dup	my_project/libgit2/src/libgit2/describe.c	/^static int possible_tag_dup(struct possible_tag **out, struct possible_tag *in)$/;"	f	typeref:typename:int	file:
posspropstab	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 posspropstab[3][4] = {$/;"	v	typeref:typename:const pcre_uint8[3][4]	file:
post	my_project/libgit2/script/release.py	/^def post(url, data, contenttype, user, password):$/;"	f
postCreateCommand	my_project/libgit2/.devcontainer/devcontainer.json	/^  "postCreateCommand": "bash .devcontainer\/setup.sh"$/;"	s
post_blank	my_project/libgit2/deps/xdiff/xdiffi.c	/^	int post_blank;$/;"	m	struct:split_measurement	typeref:typename:int	file:
post_body	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	HANDLE post_body;$/;"	m	struct:__anon5ba854ad0208	typeref:typename:HANDLE	file:
post_body_len	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	DWORD post_body_len;$/;"	m	struct:__anon5ba854ad0208	typeref:typename:DWORD	file:
post_indent	my_project/libgit2/deps/xdiff/xdiffi.c	/^	int post_indent;$/;"	m	struct:split_measurement	typeref:typename:int	file:
post_verb	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static const wchar_t *post_verb = L"POST";$/;"	v	typeref:typename:const wchar_t *	file:
pp	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define pp /;"	d	file:
pqdownheap	my_project/libgit2/deps/zlib/trees.c	/^local void pqdownheap(deflate_state *s, ct_data *tree, int k) {$/;"	f	typeref:typename:local void
pqremove	my_project/libgit2/deps/zlib/trees.c	/^#define pqremove(/;"	d	file:
pqueue_down	my_project/libgit2/src/util/pqueue.c	/^static void pqueue_down(git_pqueue *pq, size_t el)$/;"	f	typeref:typename:void	file:
pqueue_up	my_project/libgit2/src/util/pqueue.c	/^static void pqueue_up(git_pqueue *pq, size_t el)$/;"	f	typeref:typename:void	file:
pragma_nocache	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static const wchar_t *pragma_nocache = L"Pragma: no-cache";$/;"	v	typeref:typename:const wchar_t *	file:
pre_blank	my_project/libgit2/deps/xdiff/xdiffi.c	/^	int pre_blank;$/;"	m	struct:split_measurement	typeref:typename:int	file:
pre_indent	my_project/libgit2/deps/xdiff/xdiffi.c	/^	int pre_indent;$/;"	m	struct:split_measurement	typeref:typename:int	file:
prefix	my_project/libgit2/src/libgit2/config_file.c	/^	const char *prefix;$/;"	m	struct:__anon341047050308	typeref:typename:const char *	file:
prefix	my_project/libgit2/src/libgit2/pathspec.h	/^	char *prefix;$/;"	m	struct:git_pathspec	typeref:typename:char *
prefix	my_project/libgit2/src/libgit2/transport.c	/^	char *prefix;$/;"	m	struct:transport_definition	typeref:typename:char *	file:
prefix	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^	const char *prefix;$/;"	m	struct:prefix_count	typeref:typename:const char *	file:
prefix_count	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^struct prefix_count {$/;"	s	file:
prefix_git	my_project/libgit2/src/libgit2/transports/git.c	/^static const char prefix_git[] = "git:\/\/";$/;"	v	typeref:typename:const char[]	file:
prefix_https	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static const char *prefix_https = "https:\/\/";$/;"	v	typeref:typename:const char *	file:
prefix_len	my_project/libgit2/src/libgit2/patch.h	/^	uint32_t prefix_len;$/;"	m	struct:__anon58f59d650108	typeref:typename:uint32_t
prefixcmp	my_project/libgit2/src/util/util.c	/^GIT_INLINE(int) prefixcmp(const char *str, size_t str_n, const char *prefix, bool icase)$/;"	f	typeref:typename:int
prefixcomp	my_project/libgit2/src/libgit2/iterator.h	/^	int (*prefixcomp)(const char *str, const char *prefix);$/;"	m	struct:git_iterator	typeref:typename:int (*)(const char * str,const char * prefix)
preg	my_project/libgit2/src/libgit2/config_file.c	/^	const git_regexp *preg;$/;"	m	struct:write_data	typeref:typename:const git_regexp *	file:
preg_replaced	my_project/libgit2/src/libgit2/config_file.c	/^		preg_replaced : 1;$/;"	m	struct:write_data	typeref:typename:unsigned int:1	file:
preload_attr_file	my_project/libgit2/src/libgit2/attr.c	/^GIT_INLINE(int) preload_attr_file($/;"	f	typeref:typename:int
preload_attr_source	my_project/libgit2/src/libgit2/attr.c	/^static int preload_attr_source($/;"	f	typeref:typename:int	file:
prepare_walk	my_project/libgit2/src/libgit2/revwalk.c	/^static int prepare_walk(git_revwalk *walk)$/;"	f	typeref:typename:int	file:
prepare_worktree_commit_message	my_project/libgit2/src/libgit2/stash.c	/^static int prepare_worktree_commit_message(git_str *out, const char *user_message)$/;"	f	typeref:typename:int	file:
presentation	my_project/libgit2/.vscode/tasks.json	/^        "presentation": {$/;"	o	object:tasks.0
presentation	my_project/libgit2/.vscode/tasks.json	/^        "presentation": {$/;"	o	object:tasks.1
prev	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define prev /;"	d	file:
prev	my_project/libgit2/deps/pcre/pcre_internal.h	/^  struct recurse_check *prev;$/;"	m	struct:recurse_check	typeref:struct:recurse_check *
prev	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct backtrack_common *prev;$/;"	m	struct:backtrack_common	typeref:struct:backtrack_common *	file:
prev	my_project/libgit2/deps/zlib/deflate.h	/^    Posf *prev;$/;"	m	struct:internal_state	typeref:typename:Posf *
prev	my_project/libgit2/src/libgit2/blame.h	/^	struct git_blame__entry *prev;$/;"	m	struct:git_blame__entry	typeref:struct:git_blame__entry *
prev_bio	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    struct bio_st *prev_bio;    \/* used by filter BIOs *\/$/;"	m	struct:bio_st	typeref:struct:bio_st *
prev_conflict	my_project/libgit2/src/libgit2/merge.c	/^	git_merge_diff *prev_conflict;$/;"	m	struct:merge_diff_df_data	typeref:typename:git_merge_diff *	file:
prev_is_word	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define prev_is_word /;"	d	file:
prev_length	my_project/libgit2/deps/zlib/deflate.h	/^    uInt prev_length;$/;"	m	struct:internal_state	typeref:typename:uInt
prev_match	my_project/libgit2/deps/zlib/deflate.h	/^    IPos prev_match;             \/* previous match *\/$/;"	m	struct:internal_state	typeref:typename:IPos
prev_path	my_project/libgit2/src/libgit2/merge.c	/^	const char *prev_path;$/;"	m	struct:merge_diff_df_data	typeref:typename:const char *	file:
previous	my_project/libgit2/deps/xdiff/xpatience.c	/^		struct entry *next, *previous;$/;"	m	struct:hashmap::entry	typeref:struct:entry *	file:
previous	my_project/libgit2/src/libgit2/blame.h	/^	struct git_blame__origin *previous;$/;"	m	struct:git_blame__origin	typeref:struct:git_blame__origin *
prevrec	my_project/libgit2/deps/pcre/pcre_internal.h	/^  struct dfa_recursion_info *prevrec;$/;"	m	struct:dfa_recursion_info	typeref:struct:dfa_recursion_info *
prevrec	my_project/libgit2/deps/pcre/pcre_internal.h	/^  struct recursion_info *prevrec; \/* Previous recursion record (or NULL) *\/$/;"	m	struct:recursion_info	typeref:struct:recursion_info *
print_cb	my_project/libgit2/src/libgit2/diff_print.c	/^	git_diff_line_cb print_cb;$/;"	m	struct:__anon0d2887b50108	typeref:typename:git_diff_line_cb	file:
print_cb	my_project/libgit2/tests/libgit2/diff/binary.c	/^static int print_cb($/;"	f	typeref:typename:int	file:
print_char	my_project/libgit2/deps/pcre/pcre_printint.c	/^print_char(FILE *f, pcre_uchar *ptr, BOOL utf)$/;"	f	typeref:typename:unsigned int	file:
print_checkout_progress	my_project/libgit2/examples/checkout.c	/^static void print_checkout_progress(const char *path, size_t completed_steps, size_t total_steps/;"	f	typeref:typename:void	file:
print_commands	my_project/libgit2/src/cli/cmd_help.c	/^static int print_commands(void)$/;"	f	typeref:typename:int	file:
print_commit	my_project/libgit2/examples/log.c	/^static void print_commit(git_commit *commit, struct log_options *opts)$/;"	f	typeref:typename:void	file:
print_commit	my_project/libgit2/examples/tag.c	/^static void print_commit(git_commit *commit, const char *name,$/;"	f	typeref:typename:void	file:
print_escaped	my_project/libgit2/tests/clar/clar/print.h	/^static void print_escaped(const char *str)$/;"	f	typeref:typename:void
print_help	my_project/libgit2/src/cli/cmd_cat_file.c	/^static void print_help(void)$/;"	f	typeref:typename:void	file:
print_help	my_project/libgit2/src/cli/cmd_clone.c	/^static void print_help(void)$/;"	f	typeref:typename:void	file:
print_help	my_project/libgit2/src/cli/cmd_config.c	/^static void print_help(void)$/;"	f	typeref:typename:void	file:
print_help	my_project/libgit2/src/cli/cmd_hash_object.c	/^static void print_help(void)$/;"	f	typeref:typename:void	file:
print_help	my_project/libgit2/src/cli/cmd_help.c	/^static int print_help(void)$/;"	f	typeref:typename:int	file:
print_help	my_project/libgit2/src/cli/cmd_index_pack.c	/^static void print_help(void)$/;"	f	typeref:typename:void	file:
print_list_lines	my_project/libgit2/examples/tag.c	/^static void print_list_lines(const char *message, const tag_state *state)$/;"	f	typeref:typename:void	file:
print_long	my_project/libgit2/examples/status.c	/^static void print_long(git_status_list *status)$/;"	f	typeref:typename:void	file:
print_matched_cb	my_project/libgit2/examples/add.c	/^int print_matched_cb(const char *path, const char *matched_pathspec, void *payload)$/;"	f	typeref:typename:int
print_name	my_project/libgit2/examples/tag.c	/^static void print_name(const char *name)$/;"	f	typeref:typename:void	file:
print_odb	my_project/libgit2/src/cli/cmd_cat_file.c	/^static int print_odb(git_object *object, display_t display)$/;"	f	typeref:typename:int	file:
print_paths	my_project/libgit2/examples/ls-files.c	/^static int print_paths(struct ls_options *opts, git_index *index)$/;"	f	typeref:typename:int	file:
print_perf_data	my_project/libgit2/examples/checkout.c	/^static void print_perf_data(const git_checkout_perfdata *perfdata, void *payload)$/;"	f	typeref:typename:void	file:
print_pretty	my_project/libgit2/src/cli/cmd_cat_file.c	/^static int print_pretty(git_object *object)$/;"	f	typeref:typename:int	file:
print_progress	my_project/libgit2/examples/clone.c	/^static void print_progress(const progress_data *pd)$/;"	f	typeref:typename:void	file:
print_prop	my_project/libgit2/deps/pcre/pcre_printint.c	/^print_prop(FILE *f, pcre_uchar *code, const char *before, const char *after)$/;"	f	typeref:typename:void	file:
print_puchar	my_project/libgit2/deps/pcre/pcre_printint.c	/^print_puchar(FILE *f, PCRE_PUCHAR ptr)$/;"	f	typeref:typename:void	file:
print_short	my_project/libgit2/examples/status.c	/^static void print_short(git_repository *repo, git_status_list *status)$/;"	f	typeref:typename:void	file:
print_signature	my_project/libgit2/examples/cat-file.c	/^static void print_signature(const char *header, const git_signature *sig)$/;"	f	typeref:typename:void	file:
print_spec_name	my_project/libgit2/src/cli/opt_usage.c	/^static int print_spec_name(git_str *out, const cli_opt_spec *spec)$/;"	f	typeref:typename:int	file:
print_submod	my_project/libgit2/examples/status.c	/^static int print_submod(git_submodule *sm, const char *name, void *payload)$/;"	f	typeref:typename:int	file:
print_submodules	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.c	/^static int print_submodules(git_submodule *sm, const char *name, void *p)$/;"	f	typeref:typename:int	file:
print_tag	my_project/libgit2/examples/tag.c	/^static void print_tag(git_tag *tag, const tag_state *state)$/;"	f	typeref:typename:void	file:
print_time	my_project/libgit2/examples/log.c	/^static void print_time(const git_time *intime, const char *prefix)$/;"	f	typeref:typename:void	file:
print_type	my_project/libgit2/src/cli/cmd_cat_file.c	/^static int print_type(git_object *object)$/;"	f	typeref:typename:int	file:
print_usage	my_project/libgit2/examples/add.c	/^static void print_usage(void)$/;"	f	typeref:typename:void	file:
print_usage	my_project/libgit2/examples/checkout.c	/^static void print_usage(void)$/;"	f	typeref:typename:void	file:
print_usage	my_project/libgit2/examples/describe.c	/^static void print_usage(void)$/;"	f	typeref:typename:void	file:
print_usage	my_project/libgit2/examples/merge.c	/^static void print_usage(void)$/;"	f	typeref:typename:void	file:
print_usage	my_project/libgit2/examples/rev-list.c	/^static void print_usage(void)$/;"	f	typeref:typename:void	file:
print_usage	my_project/libgit2/examples/tag.c	/^static void print_usage(void)$/;"	f	typeref:typename:void	file:
printable	my_project/libgit2/src/util/str.h	/^	unsigned int printable, nonprintable; \/* These are just approximations! *\/$/;"	m	struct:__anon85703a5f0208	typeref:typename:unsigned int
prio	my_project/libgit2/src/libgit2/describe.c	/^	unsigned prio:2; \/* annotated tag = 2, tag = 1, head = 0 *\/$/;"	m	struct:commit_name	typeref:typename:unsigned:2	file:
priority	my_project/libgit2/src/libgit2/filter.c	/^	int priority;$/;"	m	struct:__anon9372afd60208	typeref:typename:int	file:
priority	my_project/libgit2/src/libgit2/odb.c	/^	int priority;$/;"	m	struct:__anon3125c0850108	typeref:typename:int	file:
priv	my_project/libgit2/deps/xdiff/xdiff.h	/^	void *priv;$/;"	m	struct:s_xdemitcb	typeref:typename:void *
priv_OP_lengths	my_project/libgit2/deps/pcre/pcre_printint.c	/^static const pcre_uint8 priv_OP_lengths[] = { OP_LENGTHS };$/;"	v	typeref:typename:const pcre_uint8[]	file:
priv_OP_names	my_project/libgit2/deps/pcre/pcre_printint.c	/^static const char *priv_OP_names[] = { OP_NAME_LIST };$/;"	v	typeref:typename:const char * []	file:
private_data_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int private_data_ptr;$/;"	m	struct:assert_backtrack	typeref:typename:int	file:
private_data_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int private_data_ptr;$/;"	m	struct:bracket_backtrack	typeref:typename:int	file:
private_data_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int private_data_ptr;$/;"	m	struct:bracketpos_backtrack	typeref:typename:int	file:
private_data_ptrs	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 *private_data_ptrs;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32 *	file:
privatekey	my_project/libgit2/include/git2/sys/credential.h	/^	char *privatekey;      \/**< The path to a private key *\/$/;"	m	struct:git_credential_ssh_key	typeref:typename:char *
prlock	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_mutex prlock; \/* protect packed_refs_map *\/$/;"	m	struct:refdb_fs_backend	typeref:typename:git_mutex	file:
proc	my_project/libgit2/src/util/win32/thread.h	/^	void *(*proc)(void *);$/;"	m	struct:__anond08cd1a00108	typeref:typename:void * (*)(void *)
process	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^	git_process *process;$/;"	m	struct:__anonec53c3310208	typeref:typename:git_process *	file:
process_entry_path	my_project/libgit2/src/libgit2/notes.c	/^static int process_entry_path($/;"	f	typeref:typename:int	file:
process_info	my_project/libgit2/src/util/win32/process.c	/^	PROCESS_INFORMATION process_info;$/;"	m	struct:git_process	typeref:typename:PROCESS_INFORMATION	file:
process_multi_pack_index_pack	my_project/libgit2/src/libgit2/odb_pack.c	/^static int process_multi_pack_index_pack($/;"	f	typeref:typename:int	file:
process_new	my_project/libgit2/src/util/win32/process.c	/^static int process_new($/;"	f	typeref:typename:int	file:
process_read	my_project/libgit2/src/util/unix/process.c	/^static ssize_t process_read(int fd, void *buf, size_t count)$/;"	f	typeref:typename:ssize_t	file:
process_tree_to_tree_diffing	my_project/libgit2/tests/libgit2/diff/tree.c	/^static void process_tree_to_tree_diffing($/;"	f	typeref:typename:void	file:
program	my_project/libgit2/.vscode/launch.json	/^            "program": "${workspaceFolder}\/build\/libgit2_tests",$/;"	s	object:configurations.0
progress	my_project/libgit2/examples/checkout.c	/^	unsigned int progress : 1;$/;"	m	struct:__anona3d43da10108	typeref:typename:unsigned int:1	file:
progress	my_project/libgit2/src/cli/cmd_clone.c	/^static cli_progress progress = CLI_PROGRESS_INIT;$/;"	v	typeref:typename:cli_progress	file:
progress	my_project/libgit2/src/cli/cmd_index_pack.c	/^static cli_progress progress = CLI_PROGRESS_INIT;$/;"	v	typeref:typename:cli_progress	file:
progress	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static void progress(const char *path, size_t cur, size_t tot, void *payload)$/;"	f	typeref:typename:void	file:
progress	my_project/libgit2/tests/libgit2/online/fetch.c	/^static int progress(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
progress_abort_diff	my_project/libgit2/tests/libgit2/diff/notify.c	/^static int progress_abort_diff($/;"	f	typeref:typename:int	file:
progress_cb	my_project/libgit2/examples/fetch.c	/^static int progress_cb(const char *str, int len, void *data)$/;"	f	typeref:typename:int	file:
progress_cb	my_project/libgit2/include/git2/checkout.h	/^	git_checkout_progress_cb progress_cb;$/;"	m	struct:git_checkout_options	typeref:typename:git_checkout_progress_cb
progress_cb	my_project/libgit2/include/git2/diff.h	/^	git_diff_progress_cb progress_cb;$/;"	m	struct:__anon7f3f1dd30608	typeref:typename:git_diff_progress_cb
progress_cb	my_project/libgit2/include/git2/indexer.h	/^	git_indexer_progress_cb progress_cb;$/;"	m	struct:git_indexer_options	typeref:typename:git_indexer_progress_cb
progress_cb	my_project/libgit2/include/git2/stash.h	/^	git_stash_apply_progress_cb progress_cb;$/;"	m	struct:git_stash_apply_options	typeref:typename:git_stash_apply_progress_cb
progress_cb	my_project/libgit2/src/libgit2/indexer.c	/^	git_indexer_progress_cb progress_cb;$/;"	m	struct:git_indexer	typeref:typename:git_indexer_progress_cb	file:
progress_cb	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_packbuilder_progress progress_cb;$/;"	m	struct:git_packbuilder	typeref:typename:git_packbuilder_progress
progress_cb	my_project/libgit2/src/libgit2/transports/local.c	/^	git_indexer_progress_cb progress_cb;$/;"	m	struct:foreach_data	typeref:typename:git_indexer_progress_cb	file:
progress_cb	my_project/libgit2/tests/libgit2/stash/apply.c	/^static int progress_cb($/;"	f	typeref:typename:int	file:
progress_cb_payload	my_project/libgit2/include/git2/indexer.h	/^	void *progress_cb_payload;$/;"	m	struct:git_indexer_options	typeref:typename:void *
progress_cb_payload	my_project/libgit2/src/libgit2/pack-objects.h	/^	void *progress_cb_payload;$/;"	m	struct:git_packbuilder	typeref:typename:void *
progress_complete	my_project/libgit2/src/cli/progress.c	/^static int progress_complete(cli_progress *progress)$/;"	f	typeref:typename:int	file:
progress_cond	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_cond progress_cond;$/;"	m	struct:git_packbuilder	typeref:typename:git_cond
progress_data	my_project/libgit2/examples/clone.c	/^typedef struct progress_data {$/;"	s	file:
progress_data	my_project/libgit2/examples/clone.c	/^} progress_data;$/;"	t	typeref:struct:progress_data	file:
progress_mutex	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_mutex progress_mutex;$/;"	m	struct:git_packbuilder	typeref:typename:git_mutex
progress_payload	my_project/libgit2/include/git2/checkout.h	/^	void *progress_payload;$/;"	m	struct:git_checkout_options	typeref:typename:void *
progress_payload	my_project/libgit2/include/git2/stash.h	/^	void *progress_payload;$/;"	m	struct:git_stash_apply_options	typeref:typename:void *
progress_payload	my_project/libgit2/src/libgit2/indexer.c	/^	void *progress_payload;$/;"	m	struct:git_indexer	typeref:typename:void *	file:
progress_payload	my_project/libgit2/src/libgit2/transports/local.c	/^	void *progress_payload;$/;"	m	struct:foreach_data	typeref:typename:void *	file:
progress_printf	my_project/libgit2/src/cli/progress.c	/^int progress_printf(cli_progress *progress, bool force, const char *fmt, ...)$/;"	f	typeref:typename:int
progress_write	my_project/libgit2/src/cli/progress.c	/^static int progress_write(cli_progress *progress, bool force, git_str *line)$/;"	f	typeref:typename:int	file:
prompt_callback	my_project/libgit2/include/git2/sys/credential.h	/^	git_credential_ssh_interactive_cb prompt_callback;$/;"	m	struct:git_credential_ssh_interactive	typeref:typename:git_credential_ssh_interactive_cb
prop_fail_result	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define prop_fail_result /;"	d	file:
prop_type	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define prop_type /;"	d	file:
prop_value	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define prop_value /;"	d	file:
propposstab	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uint8 propposstab[PT_TABSIZE][PT_TABSIZE] = {$/;"	v	typeref:typename:const pcre_uint8[][]	file:
provider	my_project/libgit2/src/util/hash/win32.c	/^	} provider;$/;"	m	struct:__anon307989470108	typeref:union:__anon307989470108::__anon30798947020a	file:
proxy	my_project/libgit2/src/libgit2/transports/http.c	/^	http_server proxy;$/;"	m	struct:__anon515ae8bf0508	typeref:typename:http_server	file:
proxy	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_http_server proxy;$/;"	m	struct:git_http_client	typeref:typename:git_http_server	file:
proxy	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	git_net_url *proxy;                \/**< Proxy to use *\/$/;"	m	struct:__anon3d590bc30208	typeref:typename:git_net_url *
proxy	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	winhttp_server proxy;$/;"	m	struct:__anon5ba854ad0408	typeref:typename:winhttp_server	file:
proxy_auth_credtypes	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	unsigned proxy_auth_credtypes;    \/**< Supported cred types for proxy *\/$/;"	m	struct:__anon3d590bc30308	typeref:typename:unsigned
proxy_auth_schemetypes	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	unsigned proxy_auth_schemetypes;  \/**< Schemes requested by proxy *\/$/;"	m	struct:__anon3d590bc30308	typeref:typename:unsigned
proxy_cert_cb	my_project/libgit2/tests/libgit2/online/clone.c	/^static int proxy_cert_cb(git_cert *cert, int valid, const char *host, void *payload)$/;"	f	typeref:typename:int	file:
proxy_certificate_check_cb	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	git_transport_certificate_check_cb proxy_certificate_check_cb;$/;"	m	struct:__anon3d590bc30408	typeref:typename:git_transport_certificate_check_cb
proxy_certificate_check_payload	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	void *proxy_certificate_check_payload;$/;"	m	struct:__anon3d590bc30408	typeref:typename:void *
proxy_connect	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int proxy_connect($/;"	f	typeref:typename:int	file:
proxy_connected	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	         proxy_connected : 1,$/;"	m	struct:git_http_client	typeref:typename:unsigned:1	file:
proxy_cred_cb	my_project/libgit2/tests/libgit2/online/clone.c	/^static int proxy_cred_cb(git_credential **out, const char *url, const char *username, unsigned i/;"	f	typeref:typename:int	file:
proxy_credentials	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	git_credential *proxy_credentials; \/**< Credentials for proxy *\/$/;"	m	struct:__anon3d590bc30208	typeref:typename:git_credential *
proxy_opts	my_project/libgit2/include/git2/remote.h	/^	git_proxy_options proxy_opts;$/;"	m	struct:__anon144be4e60808	typeref:typename:git_proxy_options
proxy_opts	my_project/libgit2/include/git2/remote.h	/^	git_proxy_options proxy_opts;$/;"	m	struct:__anon144be4e60908	typeref:typename:git_proxy_options
proxy_opts	my_project/libgit2/include/git2/remote.h	/^	git_proxy_options proxy_opts;$/;"	m	struct:__anon144be4e60a08	typeref:typename:git_proxy_options
proxy_support	my_project/libgit2/include/git2/sys/stream.h	/^	             proxy_support : 1;$/;"	m	struct:git_stream	typeref:typename:unsigned int:1
proxy_url	my_project/libgit2/tests/libgit2/transport/register.c	/^static const char *proxy_url = "https:\/\/proxy";$/;"	v	typeref:typename:const char *	file:
prune	my_project/libgit2/include/git2/remote.h	/^	git_fetch_prune_t prune;$/;"	m	struct:__anon144be4e60808	typeref:typename:git_fetch_prune_t
prune_candidates	my_project/libgit2/src/libgit2/remote.c	/^static int prune_candidates(git_vector *candidates, git_remote *remote)$/;"	f	typeref:typename:int	file:
prune_refs	my_project/libgit2/src/libgit2/remote.h	/^	int prune_refs;$/;"	m	struct:git_remote	typeref:typename:int
pstring	my_project/libgit2/deps/pcre/pcreposix.c	/^static const char *const pstring[] = {$/;"	v	typeref:typename:const char * const[]	file:
ptr	my_project/libgit2/deps/xdiff/xdiff.h	/^	char *ptr;$/;"	m	struct:s_mmbuffer	typeref:typename:char *
ptr	my_project/libgit2/deps/xdiff/xdiff.h	/^	char *ptr;$/;"	m	struct:s_mmfile	typeref:typename:char *
ptr	my_project/libgit2/deps/xdiff/xhistogram.c	/^		unsigned int ptr, cnt;$/;"	m	struct:histindex::record	typeref:typename:unsigned int	file:
ptr	my_project/libgit2/deps/xdiff/xtypes.h	/^	char const *ptr;$/;"	m	struct:s_xrecord	typeref:typename:char const *
ptr	my_project/libgit2/include/git2/buffer.h	/^	char *ptr;$/;"	m	struct:__anon0ed367940108	typeref:typename:char *
ptr	my_project/libgit2/include/git2/merge.h	/^	const char *ptr;$/;"	m	struct:__anon1374edca0108	typeref:typename:const char *
ptr	my_project/libgit2/include/git2/merge.h	/^	const char *ptr;$/;"	m	struct:__anon1374edca0608	typeref:typename:const char *
ptr	my_project/libgit2/script/user_model.c	/^	char *ptr;$/;"	m	struct:git_buf	typeref:typename:char *	file:
ptr	my_project/libgit2/src/libgit2/delta.c	/^	const unsigned char *ptr;$/;"	m	struct:index_entry	typeref:typename:const unsigned char *	file:
ptr	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^        char *ptr;$/;"	m	union:__anon6b5cad8b0208::__anon6b5cad8b030a	typeref:typename:char *
ptr	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    void *ptr;$/;"	m	struct:bio_st	typeref:typename:void *
ptr	my_project/libgit2/src/util/str.h	/^	char *ptr;$/;"	m	struct:git_str	typeref:typename:char *
ptr	my_project/libgit2/tests/clar/clar.c	/^	void (*ptr)(void);$/;"	m	struct:clar_func	typeref:typename:void (*)(void)	file:
ptr_shift	my_project/libgit2/deps/xdiff/xhistogram.c	/^		     ptr_shift;$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
ptr_table	my_project/libgit2/deps/zlib/zutil.c	/^} ptr_table;$/;"	t	typeref:struct:ptr_table_s	file:
ptr_table_s	my_project/libgit2/deps/zlib/zutil.c	/^typedef struct ptr_table_s {$/;"	s	file:
ptrs_equal_cmp	my_project/libgit2/src/libgit2/blame.c	/^static int ptrs_equal_cmp(const void *a, const void *b) { return a<b ? -1 : a>b ? 1 : 0; }$/;"	f	typeref:typename:int	file:
publickey	my_project/libgit2/include/git2/sys/credential.h	/^	char *publickey;       \/**< The path to a public key *\/$/;"	m	struct:git_credential_ssh_key	typeref:typename:char *
publickey	my_project/libgit2/include/git2/sys/credential.h	/^	char *publickey;       \/**< The public key data *\/$/;"	m	struct:git_credential_ssh_custom	typeref:typename:char *
publickey_len	my_project/libgit2/include/git2/sys/credential.h	/^	size_t publickey_len;  \/**< Length of the public key *\/$/;"	m	struct:git_credential_ssh_custom	typeref:typename:size_t
push	my_project/libgit2/src/libgit2/refspec.h	/^		push : 1,$/;"	m	struct:git_refspec	typeref:typename:unsigned int:1
push	my_project/libgit2/src/libgit2/remote.h	/^	git_push *push;$/;"	m	struct:git_remote	typeref:typename:git_push *
push_array	my_project/libgit2/tests/libgit2/network/remote/local.c	/^static git_strarray push_array = {$/;"	v	typeref:typename:git_strarray	file:
push_attr_file	my_project/libgit2/src/libgit2/attr.c	/^GIT_INLINE(int) push_attr_file($/;"	f	typeref:typename:int
push_attr_source	my_project/libgit2/src/libgit2/attr.c	/^static int push_attr_source($/;"	f	typeref:typename:int	file:
push_commit	my_project/libgit2/examples/rev-list.c	/^static int push_commit(git_revwalk *walk, const git_oid *oid, int hide)$/;"	f	typeref:typename:int	file:
push_ignore_file	my_project/libgit2/src/libgit2/ignore.c	/^static int push_ignore_file($/;"	f	typeref:typename:int	file:
push_leaf	my_project/libgit2/src/libgit2/oid.c	/^static trie_node *push_leaf(git_oid_shorten *os, node_index idx, int push_at, const char *oid)$/;"	f	typeref:typename:trie_node *	file:
push_negotiation	my_project/libgit2/include/git2/remote.h	/^	git_push_negotiation push_negotiation;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_push_negotiation
push_one_attr	my_project/libgit2/src/libgit2/attr.c	/^static int push_one_attr(void *ref, const char *path)$/;"	f	typeref:typename:int	file:
push_one_ignore	my_project/libgit2/src/libgit2/ignore.c	/^static int push_one_ignore(void *payload, const char *path)$/;"	f	typeref:typename:int	file:
push_option_test	my_project/libgit2/tests/libgit2/online/push.c	/^static void push_option_test(git_strarray given_options, const char *expected_option)$/;"	f	typeref:typename:void	file:
push_options	my_project/libgit2/src/libgit2/transports/smart.h	/^	             push_options:1;$/;"	m	struct:transport_smart_caps	typeref:typename:unsigned int:1
push_pack_progress_cb	my_project/libgit2/tests/libgit2/online/push.c	/^static int push_pack_progress_cb($/;"	f	typeref:typename:int	file:
push_packbuilder_payload	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^struct push_packbuilder_payload$/;"	s	file:
push_range	my_project/libgit2/examples/rev-list.c	/^static int push_range(git_repository *repo, git_revwalk *walk, const char *range, int hide)$/;"	f	typeref:typename:int	file:
push_refspec_strings	my_project/libgit2/tests/libgit2/network/remote/local.c	/^static char *push_refspec_strings[] = {$/;"	v	typeref:typename:char * []	file:
push_refspecs	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^static const char *push_refspecs[] = {$/;"	v	typeref:typename:const char * []	file:
push_rev	my_project/libgit2/examples/log.c	/^static void push_rev(struct log_state *s, git_object *obj, int hide)$/;"	f	typeref:typename:void	file:
push_spec	my_project/libgit2/examples/rev-list.c	/^static int push_spec(git_repository *repo, git_revwalk *walk, const char *spec, int hide)$/;"	f	typeref:typename:int	file:
push_spec	my_project/libgit2/src/libgit2/push.h	/^typedef struct push_spec {$/;"	s
push_spec	my_project/libgit2/src/libgit2/push.h	/^} push_spec;$/;"	t	typeref:struct:push_spec
push_spec_rref_cmp	my_project/libgit2/src/libgit2/push.c	/^static int push_spec_rref_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
push_status	my_project/libgit2/src/libgit2/push.h	/^typedef struct push_status {$/;"	s
push_status	my_project/libgit2/src/libgit2/push.h	/^} push_status;$/;"	t	typeref:struct:push_status
push_status	my_project/libgit2/tests/libgit2/online/push_util.h	/^} push_status;$/;"	t	typeref:struct:__anonec09f7510408
push_status_free	my_project/libgit2/tests/libgit2/online/push_util.c	/^static void push_status_free(push_status *s)$/;"	f	typeref:typename:void	file:
push_status_ref_cmp	my_project/libgit2/src/libgit2/push.c	/^static int push_status_ref_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
push_three_states	my_project/libgit2/tests/libgit2/stash/drop.c	/^static void push_three_states(void)$/;"	f	typeref:typename:void	file:
push_transfer_progress	my_project/libgit2/include/git2/remote.h	/^	git_push_transfer_progress_cb push_transfer_progress;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_push_transfer_progress_cb
push_transfer_progress_cb	my_project/libgit2/tests/libgit2/online/push.c	/^static int push_transfer_progress_cb($/;"	f	typeref:typename:int	file:
push_update_reference	my_project/libgit2/include/git2/remote.h	/^	git_push_update_reference_cb push_update_reference;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_push_update_reference_cb
pushurl	my_project/libgit2/src/libgit2/remote.h	/^	char *pushurl;$/;"	m	struct:git_remote	typeref:typename:char *
putShortMSB	my_project/libgit2/deps/zlib/deflate.c	/^local void putShortMSB(deflate_state *s, uInt b) {$/;"	f	typeref:typename:local void
put_byte	my_project/libgit2/deps/zlib/deflate.h	/^#define put_byte(/;"	d
put_short	my_project/libgit2/deps/zlib/trees.c	/^#define put_short(/;"	d	file:
put_uuid_string	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int put_uuid_string(LPWSTR buffer, size_t buffer_len_cch)$/;"	f	typeref:typename:int	file:
puts_host_and_port	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int puts_host_and_port(git_str *buf, git_net_url *url, bool force_port)$/;"	f	typeref:typename:int	file:
pwd_cmd	my_project/libgit2/tests/util/process/start.c	/^static git_str pwd_cmd = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
query	my_project/libgit2/src/util/net.c	/^	const char *query;$/;"	m	struct:__anon850d8ea80108	typeref:typename:const char *	file:
query	my_project/libgit2/src/util/net.h	/^	char *query;$/;"	m	struct:git_net_url	typeref:typename:char *
query_len	my_project/libgit2/src/util/net.c	/^	size_t query_len;$/;"	m	struct:__anon850d8ea80108	typeref:typename:size_t	file:
queue_difference	my_project/libgit2/src/libgit2/merge.c	/^static int queue_difference(const git_index_entry **entries, void *data)$/;"	f	typeref:typename:int	file:
queue_objects	my_project/libgit2/src/libgit2/push.c	/^static int queue_objects(git_push *push)$/;"	f	typeref:typename:int	file:
quick_diff_blob_to_str	my_project/libgit2/tests/libgit2/diff/blob.c	/^static void quick_diff_blob_to_str($/;"	f	typeref:typename:void	file:
quiet	my_project/libgit2/examples/init.c	/^	int quiet;$/;"	m	struct:init_opts	typeref:typename:int	file:
quiet	my_project/libgit2/include/git2/rebase.h	/^	int quiet;$/;"	m	struct:__anonf9a5428c0108	typeref:typename:int
quiet	my_project/libgit2/src/cli/cmd_clone.c	/^static int show_help, quiet, checkout = 1, bare;$/;"	v	typeref:typename:int	file:
quiet	my_project/libgit2/src/libgit2/rebase.c	/^	             quiet:1,$/;"	m	struct:git_rebase	typeref:typename:unsigned int:1	file:
quit	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *quit;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
quit	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *quit;$/;"	m	struct:then_trap_backtrack	typeref:typename:jump_list *	file:
quit	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *quit;$/;"	m	struct:stub_list	typeref:struct:sljit_label *	file:
quit_label	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *quit_label;$/;"	m	struct:compiler_common	typeref:struct:sljit_label *	file:
quotes_for_value	my_project/libgit2/src/libgit2/config_file.c	/^static const char *quotes_for_value(const char *value)$/;"	f	typeref:typename:const char *	file:
racy_payload	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^} racy_payload;$/;"	t	typeref:struct:__anon2bf18d4b0208	file:
rand_bytes_fn	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^	int (*rand_bytes_fn)(unsigned char *buf, int num);$/;"	m	struct:ntlm_crypt_ctx	typeref:typename:int (*)(unsigned char * buf,int num)
raw	my_project/libgit2/src/libgit2/blob.h	/^		} raw;$/;"	m	union:git_blob::__anon38237cb4010a	typeref:struct:git_blob::__anon38237cb4010a::__anon38237cb40208
raw	my_project/libgit2/src/libgit2/blob.h	/^	unsigned int raw:1;$/;"	m	struct:git_blob	typeref:typename:unsigned int:1
raw	my_project/libgit2/src/libgit2/pack.h	/^	git_rawobj raw;$/;"	m	struct:git_pack_cache_entry	typeref:typename:git_rawobj
raw_data	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^	git_win32_leakcheck_stack_raw_data raw_data;$/;"	m	struct:__anonc260a6b90308	typeref:typename:git_win32_leakcheck_stack_raw_data	file:
raw_header	my_project/libgit2/src/libgit2/commit.h	/^	char *raw_header;$/;"	m	struct:git_commit	typeref:typename:char *
raw_message	my_project/libgit2/src/libgit2/commit.h	/^	char *raw_message;$/;"	m	struct:git_commit	typeref:typename:char *
raw_type	my_project/libgit2/include/git2/cert.h	/^	git_cert_ssh_raw_type_t raw_type;$/;"	m	struct:__anon7ca863480308	typeref:typename:git_cert_ssh_raw_type_t
rc	my_project/libgit2/src/libgit2/attr_file.h	/^	git_refcount rc;		\/* for macros *\/$/;"	m	struct:__anon0df92d8f0608	typeref:typename:git_refcount
rc	my_project/libgit2/src/libgit2/attr_file.h	/^	git_refcount rc;$/;"	m	struct:__anon0df92d8f0708	typeref:typename:git_refcount
rc	my_project/libgit2/src/libgit2/config.c	/^	git_refcount rc;$/;"	m	struct:__anona0399aa60108	typeref:typename:git_refcount	file:
rc	my_project/libgit2/src/libgit2/config.h	/^	git_refcount rc;$/;"	m	struct:git_config	typeref:typename:git_refcount
rc	my_project/libgit2/src/libgit2/config_list.c	/^	git_refcount rc;$/;"	m	struct:git_config_list	typeref:typename:git_refcount	file:
rc	my_project/libgit2/src/libgit2/diff.h	/^	git_refcount      rc;$/;"	m	struct:git_diff	typeref:typename:git_refcount
rc	my_project/libgit2/src/libgit2/index.h	/^	git_refcount rc;$/;"	m	struct:git_index	typeref:typename:git_refcount
rc	my_project/libgit2/src/libgit2/odb.h	/^	git_refcount rc;$/;"	m	struct:git_odb	typeref:typename:git_refcount
rc	my_project/libgit2/src/libgit2/patch.h	/^	git_refcount rc;$/;"	m	struct:git_patch	typeref:typename:git_refcount
rc	my_project/libgit2/src/libgit2/patch_parse.h	/^	git_refcount rc;$/;"	m	struct:__anonddb10c3f0108	typeref:typename:git_refcount
rc	my_project/libgit2/src/libgit2/pathspec.h	/^	git_refcount rc;$/;"	m	struct:git_pathspec	typeref:typename:git_refcount
rc	my_project/libgit2/src/libgit2/refdb.h	/^	git_refcount rc;$/;"	m	struct:git_refdb	typeref:typename:git_refcount
rc	my_project/libgit2/src/libgit2/submodule.h	/^	git_refcount rc;$/;"	m	struct:git_submodule	typeref:typename:git_refcount
rc	my_project/libgit2/src/util/sortedcache.h	/^	git_refcount rc;$/;"	m	struct:__anon21e0f34b0108	typeref:typename:git_refcount
rcha	my_project/libgit2/deps/xdiff/xhistogram.c	/^	chastore_t rcha;$/;"	m	struct:histindex	typeref:typename:chastore_t	file:
rcha	my_project/libgit2/deps/xdiff/xtypes.h	/^	chastore_t rcha;$/;"	m	struct:s_xdfile	typeref:typename:chastore_t
rchash	my_project/libgit2/deps/xdiff/xprepare.c	/^	xdlclass_t **rchash;$/;"	m	struct:s_xdlclassifier	typeref:typename:xdlclass_t **	file:
rchg	my_project/libgit2/deps/xdiff/xdiffi.h	/^	char *rchg;$/;"	m	struct:s_diffdata	typeref:typename:char *
rchg	my_project/libgit2/deps/xdiff/xtypes.h	/^	char *rchg;$/;"	m	struct:s_xdfile	typeref:typename:char *
rcrecs	my_project/libgit2/deps/xdiff/xprepare.c	/^	xdlclass_t **rcrecs;$/;"	m	struct:s_xdlclassifier	typeref:typename:xdlclass_t **	file:
rdepth	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define rdepth /;"	d	file:
re	my_project/libgit2/src/libgit2/diff_driver.c	/^	git_regexp re;$/;"	m	struct:__anon9fad28f40208	typeref:typename:git_regexp	file:
re_erroffset	my_project/libgit2/deps/pcre/pcreposix.h	/^  size_t re_erroffset;$/;"	m	struct:__anon411fc6730208	typeref:typename:size_t
re_nsub	my_project/libgit2/deps/pcre/pcreposix.h	/^  size_t re_nsub;$/;"	m	struct:__anon411fc6730208	typeref:typename:size_t
re_pcre	my_project/libgit2/deps/pcre/pcreposix.h	/^  void *re_pcre;$/;"	m	struct:__anon411fc6730208	typeref:typename:void *
read	my_project/libgit2/deps/zlib/gzguts.h	/^#  define read /;"	d
read	my_project/libgit2/examples/common.h	/^# define read /;"	d
read	my_project/libgit2/src/libgit2/reader.h	/^	int (*read)(git_str *out, git_oid *out_oid, git_filemode_t *mode, git_reader *reader, const cha/;"	m	struct:git_reader	typeref:typename:int (*)(git_str * out,git_oid * out_oid,git_filemode_t * mode,git_reader * reader,const char * filename)
read_all	my_project/libgit2/tests/util/process/start.c	/^static void read_all(git_str *out, git_process *process)$/;"	f	typeref:typename:void	file:
read_buf	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_buf($/;"	f	typeref:typename:bool	file:
read_buf	my_project/libgit2/deps/zlib/deflate.c	/^local unsigned read_buf(z_streamp strm, Bytef *buf, unsigned size) {$/;"	f	typeref:typename:local unsigned
read_buf	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_str read_buf;$/;"	m	struct:git_http_client	typeref:typename:git_str	file:
read_bufinfo	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_bufinfo($/;"	f	typeref:typename:bool	file:
read_byte	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_byte($/;"	f	typeref:typename:bool	file:
read_calls	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.h	/^	int read_calls;$/;"	m	struct:__anon1e6212950208	typeref:typename:int
read_cb	my_project/libgit2/src/libgit2/streams/stransport.c	/^static OSStatus read_cb(SSLConnectionRef conn, void *data, size_t *len)$/;"	f	typeref:typename:OSStatus	file:
read_char	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void read_char(compiler_common *common)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
read_char7_type	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void read_char7_type(compiler_common *common, BOOL full_read)$/;"	f	typeref:typename:void	file:
read_char8_type	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void read_char8_type(compiler_common *common, BOOL update_str_ptr)$/;"	f	typeref:typename:void	file:
read_char_range	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void read_char_range(compiler_common *common, sljit_u32 min, sljit_u32 max, BOOL update_s/;"	f	typeref:typename:void	file:
read_conflict_name	my_project/libgit2/src/libgit2/index.c	/^#define read_conflict_name(/;"	d	file:
read_conflict_names	my_project/libgit2/src/libgit2/index.c	/^static int read_conflict_names(git_index *index, const char *buffer, size_t size)$/;"	f	typeref:typename:int	file:
read_entry	my_project/libgit2/src/libgit2/index.c	/^static int read_entry($/;"	f	typeref:typename:int	file:
read_extension	my_project/libgit2/src/libgit2/index.c	/^static int read_extension(size_t *read_len, git_index *index, size_t checksum_size, const char */;"	f	typeref:typename:int	file:
read_file	my_project/libgit2/examples/common.c	/^char *read_file(const char *path)$/;"	f	typeref:typename:char *
read_filemode	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static mode_t read_filemode(const char *path)$/;"	f	typeref:typename:mode_t	file:
read_gitfile	my_project/libgit2/src/libgit2/repository.c	/^static int read_gitfile(git_str *path_out, const char *file_path)$/;"	f	typeref:typename:int	file:
read_header	my_project/libgit2/src/libgit2/index.c	/^static int read_header(struct index_header *dest, const void *buffer)$/;"	f	typeref:typename:int	file:
read_header_calls	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.h	/^	int read_header_calls;$/;"	m	struct:__anon1e6212950208	typeref:typename:int
read_header_loose	my_project/libgit2/src/libgit2/odb_loose.c	/^static int read_header_loose(git_rawobj *out, git_str *loc)$/;"	f	typeref:typename:int	file:
read_header_loose_packlike	my_project/libgit2/src/libgit2/odb_loose.c	/^static int read_header_loose_packlike($/;"	f	typeref:typename:int	file:
read_header_loose_standard	my_project/libgit2/src/libgit2/odb_loose.c	/^static int read_header_loose_standard($/;"	f	typeref:typename:int	file:
read_int16	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_int16($/;"	f	typeref:typename:bool	file:
read_int32	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_int32($/;"	f	typeref:typename:bool	file:
read_int64	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_int64($/;"	f	typeref:typename:bool	file:
read_key_file	my_project/libgit2/tests/libgit2/online/clone.c	/^static char *read_key_file(const char *path)$/;"	f	typeref:typename:char *	file:
read_loose	my_project/libgit2/src/libgit2/odb_loose.c	/^static int read_loose(git_rawobj *out, git_str *loc)$/;"	f	typeref:typename:int	file:
read_loose_packlike	my_project/libgit2/src/libgit2/odb_loose.c	/^static int read_loose_packlike(git_rawobj *out, git_str *obj)$/;"	f	typeref:typename:int	file:
read_loose_standard	my_project/libgit2/src/libgit2/odb_loose.c	/^static int read_loose_standard(git_rawobj *out, git_str *obj)$/;"	f	typeref:typename:int	file:
read_name_missing	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static int read_name_missing(const char *ref_name, const char *remote_url,$/;"	f	typeref:typename:int	file:
read_noop	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static int read_noop(const char *ref_name, const char *remote_url,$/;"	f	typeref:typename:int	file:
read_nosection_cb	my_project/libgit2/tests/libgit2/config/read.c	/^static int read_nosection_cb(const git_config_entry *entry, void *payload) {$/;"	f	typeref:typename:int	file:
read_object_stream	my_project/libgit2/src/libgit2/indexer.c	/^static int read_object_stream(git_indexer *idx, git_packfile_stream *stream)$/;"	f	typeref:typename:int	file:
read_old_style_cb	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static int read_old_style_cb(const char *name, const char *url,$/;"	f	typeref:typename:int	file:
read_on_variable	my_project/libgit2/src/libgit2/config_file.c	/^static int read_on_variable($/;"	f	typeref:typename:int	file:
read_only_data_head	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  void *read_only_data_head;$/;"	m	struct:compiler_common	typeref:typename:void *	file:
read_only_data_heads	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  void *read_only_data_heads[JIT_NUMBER_OF_COMPILE_MODES];$/;"	m	struct:executable_functions	typeref:typename:void * []	file:
read_prefix_1	my_project/libgit2/src/libgit2/odb.c	/^static int read_prefix_1(git_odb_object **out, git_odb *db,$/;"	f	typeref:typename:int	file:
read_prefix_calls	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.h	/^	int read_prefix_calls;$/;"	m	struct:__anon1e6212950208	typeref:typename:int
read_repeat_counts	my_project/libgit2/deps/pcre/pcre_compile.c	/^read_repeat_counts(const pcre_uchar *p, int *minp, int *maxp, int *errorcodeptr)$/;"	f	typeref:typename:const pcre_uchar *	file:
read_reuc	my_project/libgit2/src/libgit2/index.c	/^static int read_reuc(git_index *index, const char *buffer, size_t size)$/;"	f	typeref:typename:int	file:
read_status	my_project/libgit2/src/util/unix/process.c	/^static int read_status(int fd)$/;"	f	typeref:typename:int	file:
read_stdin	my_project/libgit2/src/cli/cmd_hash_object.c	/^static int write_object, read_stdin, literally;$/;"	v	typeref:typename:int	file:
read_stdin	my_project/libgit2/src/cli/cmd_index_pack.c	/^static int show_help, verbose, read_stdin;$/;"	v	typeref:typename:int	file:
read_stream_object	my_project/libgit2/src/libgit2/indexer.c	/^static int read_stream_object(git_indexer *idx, git_indexer_progress *stats)$/;"	f	typeref:typename:int	file:
read_string	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_string($/;"	f	typeref:typename:bool	file:
read_string_ascii	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_string_ascii($/;"	f	typeref:typename:bool	file:
read_string_unicode	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_string_unicode($/;"	f	typeref:typename:bool	file:
read_target_info	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_target_info($/;"	f	typeref:typename:bool	file:
read_tree_cb	my_project/libgit2/src/libgit2/index.c	/^static int read_tree_cb($/;"	f	typeref:typename:int	file:
read_tree_data	my_project/libgit2/src/libgit2/index.c	/^typedef struct read_tree_data {$/;"	s	file:
read_tree_data	my_project/libgit2/src/libgit2/index.c	/^} read_tree_data;$/;"	t	typeref:struct:read_tree_data	file:
read_tree_internal	my_project/libgit2/src/libgit2/tree-cache.c	/^static int read_tree_internal($/;"	f	typeref:typename:int	file:
read_tree_recursive	my_project/libgit2/src/libgit2/tree-cache.c	/^static int read_tree_recursive(git_tree_cache *cache, const git_tree *tree, git_pool *pool)$/;"	f	typeref:typename:int	file:
read_type_missing	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^static int read_type_missing(const char *ref_name, const char *remote_url,$/;"	f	typeref:typename:int	file:
read_variable_cb	my_project/libgit2/src/libgit2/config_mem.c	/^static int read_variable_cb($/;"	f	typeref:typename:int	file:
read_version	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool read_version($/;"	f	typeref:typename:bool	file:
readdir	my_project/libgit2/src/util/win32/dir.h	/^#	define readdir	/;"	d
readdir_r	my_project/libgit2/src/util/win32/dir.h	/^#   define readdir_r(/;"	d
reader	my_project/libgit2/src/libgit2/reader.c	/^	git_reader reader;$/;"	m	struct:__anon57d570630108	typeref:typename:git_reader	file:
reader	my_project/libgit2/src/libgit2/reader.c	/^	git_reader reader;$/;"	m	struct:__anon57d570630208	typeref:typename:git_reader	file:
reader	my_project/libgit2/src/libgit2/reader.c	/^	git_reader reader;$/;"	m	struct:__anon57d570630308	typeref:typename:git_reader	file:
reader_cmp	my_project/libgit2/src/libgit2/config.c	/^static int reader_cmp(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
readers	my_project/libgit2/src/libgit2/config.h	/^	git_vector readers;$/;"	m	struct:git_config	typeref:typename:git_vector
readers	my_project/libgit2/src/libgit2/index.h	/^	git_atomic32 readers; \/* number of active iterators *\/$/;"	m	struct:git_index	typeref:typename:git_atomic32
readline	my_project/libgit2/examples/common.c	/^static int readline(char **out)$/;"	f	typeref:typename:int	file:
readonly	my_project/libgit2/include/git2/sys/config.h	/^	int readonly;$/;"	m	struct:git_config_backend	typeref:typename:int
readp	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^	const unsigned char *readp;$/;"	m	struct:fuzzer_stream	typeref:typename:const unsigned char *	file:
real_email	my_project/libgit2/src/libgit2/mailmap.h	/^	char *real_email; \/**< the real email (may be NULL) *\/$/;"	m	struct:git_mailmap_entry	typeref:typename:char *
real_email	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^	const char *real_email;$/;"	m	struct:__anonae472b4d0108	typeref:typename:const char *	file:
real_email	my_project/libgit2/tests/libgit2/mailmap/mailmap_testdata.h	/^	const char *real_email;$/;"	m	struct:mailmap_entry	typeref:typename:const char *
real_link_size	my_project/libgit2/deps/pcre/pcre_config.c	/^static int real_link_size = LINK_SIZE;$/;"	v	typeref:typename:int	file:
real_name	my_project/libgit2/src/libgit2/mailmap.h	/^	char *real_name; \/**< the real name (may be NULL) *\/$/;"	m	struct:git_mailmap_entry	typeref:typename:char *
real_name	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^	const char *real_name;$/;"	m	struct:__anonae472b4d0108	typeref:typename:const char *	file:
real_name	my_project/libgit2/tests/libgit2/mailmap/mailmap_testdata.h	/^	const char *real_name;$/;"	m	struct:mailmap_entry	typeref:typename:const char *
real_offset_count	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int real_offset_count;$/;"	m	struct:jit_arguments	typeref:typename:int	file:
real_pcre	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct real_pcre8_or_16 real_pcre;$/;"	t	typeref:struct:real_pcre8_or_16
real_pcre16	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct real_pcre8_or_16 real_pcre16;$/;"	t	typeref:struct:real_pcre8_or_16
real_pcre32	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct real_pcre32 {$/;"	s
real_pcre32	my_project/libgit2/deps/pcre/pcre_internal.h	/^} real_pcre32;$/;"	t	typeref:struct:real_pcre32
real_pcre8_or_16	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct real_pcre8_or_16 {$/;"	s
real_pcre8_or_16	my_project/libgit2/deps/pcre/pcre_internal.h	/^} real_pcre8_or_16;$/;"	t	typeref:struct:real_pcre8_or_16
reason	my_project/libgit2/deps/llhttp/llhttp.h	/^  const char* reason;$/;"	m	struct:llhttp__internal_s	typeref:typename:const char *
rebase_alloc	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_alloc(git_rebase **out, const git_rebase_options *rebase_opts)$/;"	f	typeref:typename:int	file:
rebase_check_versions	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_check_versions(const git_rebase_options *given_opts)$/;"	f	typeref:typename:int	file:
rebase_checkout_progress_cb	my_project/libgit2/tests/libgit2/rebase/merge.c	/^static void rebase_checkout_progress_cb($/;"	f	typeref:typename:void	file:
rebase_cleanup	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_cleanup(git_rebase *rebase)$/;"	f	typeref:typename:int	file:
rebase_commit__create	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_commit__create($/;"	f	typeref:typename:int	file:
rebase_commit_inmemory	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_commit_inmemory($/;"	f	typeref:typename:int	file:
rebase_commit_merge	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_commit_merge($/;"	f	typeref:typename:int	file:
rebase_copy_note	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_copy_note($/;"	f	typeref:typename:int	file:
rebase_copy_notes	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_copy_notes($/;"	f	typeref:typename:int	file:
rebase_ensure_not_dirty	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_ensure_not_dirty($/;"	f	typeref:typename:int	file:
rebase_ensure_not_in_progress	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_ensure_not_in_progress(git_repository *repo)$/;"	f	typeref:typename:int	file:
rebase_init_inmemory	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_init_inmemory($/;"	f	typeref:typename:int	file:
rebase_init_merge	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_init_merge($/;"	f	typeref:typename:int	file:
rebase_init_operations	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_init_operations($/;"	f	typeref:typename:int	file:
rebase_is_blocked	my_project/libgit2/tests/libgit2/rebase/setup.c	/^static int rebase_is_blocked(void)$/;"	f	typeref:typename:int	file:
rebase_movenext	my_project/libgit2/src/libgit2/rebase.c	/^GIT_INLINE(int) rebase_movenext(git_rebase *rebase)$/;"	f	typeref:typename:int
rebase_next_inmemory	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_next_inmemory($/;"	f	typeref:typename:int	file:
rebase_next_merge	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_next_merge($/;"	f	typeref:typename:int	file:
rebase_onto_name	my_project/libgit2/src/libgit2/rebase.c	/^static const char *rebase_onto_name(const git_annotated_commit *onto)$/;"	f	typeref:typename:const char *	file:
rebase_open_merge	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_open_merge(git_rebase *rebase)$/;"	f	typeref:typename:int	file:
rebase_operation_alloc	my_project/libgit2/src/libgit2/rebase.c	/^static git_rebase_operation *rebase_operation_alloc($/;"	f	typeref:typename:git_rebase_operation *	file:
rebase_readfile	my_project/libgit2/src/libgit2/rebase.c	/^GIT_INLINE(int) rebase_readfile($/;"	f	typeref:typename:int
rebase_readint	my_project/libgit2/src/libgit2/rebase.c	/^GIT_INLINE(int) rebase_readint($/;"	f	typeref:typename:int
rebase_readoid	my_project/libgit2/src/libgit2/rebase.c	/^GIT_INLINE(int) rebase_readoid($/;"	f	typeref:typename:int
rebase_setupfile	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_setupfile(git_rebase *rebase, const char *filename, int flags, const char *fmt/;"	f	typeref:typename:int	file:
rebase_setupfiles	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_setupfiles(git_rebase *rebase)$/;"	f	typeref:typename:int	file:
rebase_setupfiles_merge	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_setupfiles_merge(git_rebase *rebase)$/;"	f	typeref:typename:int	file:
rebase_state_type	my_project/libgit2/src/libgit2/rebase.c	/^static int rebase_state_type($/;"	f	typeref:typename:int	file:
receive_pack_ls_service	my_project/libgit2/src/libgit2/transports/http.c	/^static const http_service receive_pack_ls_service = {$/;"	v	typeref:typename:const http_service	file:
receive_pack_ls_service_url	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static const char *receive_pack_ls_service_url = "\/info\/refs?service=git-receive-pack";$/;"	v	typeref:typename:const char *	file:
receive_pack_service	my_project/libgit2/src/libgit2/transports/http.c	/^static const http_service receive_pack_service = {$/;"	v	typeref:typename:const http_service	file:
receive_pack_service	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static const char *receive_pack_service = "receive-pack";$/;"	v	typeref:typename:const char *	file:
receive_pack_service_url	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static const char *receive_pack_service_url = "\/git-receive-pack";$/;"	v	typeref:typename:const char *	file:
received_bytes	my_project/libgit2/include/git2/indexer.h	/^	size_t received_bytes;$/;"	m	struct:git_indexer_progress	typeref:typename:size_t
received_bytes	my_project/libgit2/include/git2/odb_backend.h	/^	git_object_size_t received_bytes;$/;"	m	struct:git_odb_stream	typeref:typename:git_object_size_t
received_objects	my_project/libgit2/include/git2/indexer.h	/^	unsigned int received_objects;$/;"	m	struct:git_indexer_progress	typeref:typename:unsigned int
received_response	my_project/libgit2/src/libgit2/transports/winhttp.c	/^		received_response : 1,$/;"	m	struct:__anon5ba854ad0208	typeref:typename:unsigned:1	file:
recmatch	my_project/libgit2/deps/xdiff/xmerge.c	/^static int recmatch(xrecord_t *rec1, xrecord_t *rec2, unsigned long flags)$/;"	f	typeref:typename:int	file:
record	my_project/libgit2/deps/xdiff/xhistogram.c	/^	struct record {$/;"	s	struct:histindex	file:
record_callbacks_data	my_project/libgit2/tests/libgit2/online/push_util.h	/^} record_callbacks_data;$/;"	t	typeref:struct:__anonec09f7510208
record_callbacks_data_clear	my_project/libgit2/tests/libgit2/online/push_util.c	/^void record_callbacks_data_clear(record_callbacks_data *data)$/;"	f	typeref:typename:void
record_matches_regex	my_project/libgit2/deps/xdiff/xdiffi.c	/^static int record_matches_regex(xrecord_t *rec, xpparam_t const *xpp) {$/;"	f	typeref:typename:int	file:
record_push_status_cb	my_project/libgit2/tests/libgit2/online/push.c	/^static int record_push_status_cb(const char *ref, const char *msg, void *payload)$/;"	f	typeref:typename:int	file:
record_ref_cb	my_project/libgit2/tests/libgit2/online/push_util.c	/^int record_ref_cb(git_remote_head *head, void *payload)$/;"	f	typeref:typename:int
record_update_tips_cb	my_project/libgit2/tests/libgit2/online/push_util.c	/^int record_update_tips_cb(const char *refname, const git_oid *a, const git_oid *b, void *data)$/;"	f	typeref:typename:int
records	my_project/libgit2/deps/xdiff/xhistogram.c	/^	} **records, \/* an occurrence *\/$/;"	m	struct:histindex	typeref:struct:histindex::record **	file:
records_size	my_project/libgit2/deps/xdiff/xhistogram.c	/^		     records_size,$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
recs	my_project/libgit2/deps/xdiff/xtypes.h	/^	xrecord_t **recs;$/;"	m	struct:s_xdfile	typeref:typename:xrecord_t **
recs_match	my_project/libgit2/deps/xdiff/xdiffi.c	/^static int recs_match(xrecord_t *rec1, xrecord_t *rec2)$/;"	f	typeref:typename:int	file:
recurse_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct recurse_backtrack {$/;"	s	file:
recurse_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} recurse_backtrack;$/;"	t	typeref:struct:recurse_backtrack	file:
recurse_check	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct recurse_check {$/;"	s
recurse_check	my_project/libgit2/deps/pcre/pcre_internal.h	/^} recurse_check;$/;"	t	typeref:struct:recurse_check
recurse_entry	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct recurse_entry {$/;"	s	file:
recurse_entry	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} recurse_entry;$/;"	t	typeref:struct:recurse_entry	file:
recursing	my_project/libgit2/src/libgit2/pack-objects.h	/^	             recursing:1,$/;"	m	struct:git_pobject	typeref:typename:unsigned int:1
recursion_info	my_project/libgit2/deps/pcre/pcre_internal.h	/^typedef struct recursion_info {$/;"	s
recursion_info	my_project/libgit2/deps/pcre/pcre_internal.h	/^} recursion_info;$/;"	t	typeref:struct:recursion_info
recursion_limit	my_project/libgit2/include/git2/merge.h	/^	unsigned int recursion_limit;$/;"	m	struct:__anon1374edca0708	typeref:typename:unsigned int
recursive	my_project/libgit2/deps/pcre/pcre_internal.h	/^  dfa_recursion_info *recursive;    \/* Linked list of recursion data *\/$/;"	m	struct:dfa_match_data	typeref:typename:dfa_recursion_info *
recursive	my_project/libgit2/deps/pcre/pcre_internal.h	/^  recursion_info *recursive;      \/* Linked list of recursion data *\/$/;"	m	struct:match_data	typeref:typename:recursion_info *
recursive_head_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 recursive_head_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
recursive_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *recursive_matchingpath;$/;"	m	struct:bracket_backtrack	typeref:struct:sljit_label *	file:
recv_pkt	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int recv_pkt($/;"	f	typeref:typename:int	file:
reduced_round_coll	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^	int reduced_round_coll;$/;"	m	struct:__anon09d552690108	typeref:typename:int
ref	my_project/libgit2/include/git2/worktree.h	/^	git_reference *ref;	\/**< reference to use for the new worktree HEAD *\/$/;"	m	struct:git_worktree_add_options	typeref:typename:git_reference *
ref	my_project/libgit2/src/libgit2/push.h	/^	char *ref;$/;"	m	struct:push_status	typeref:typename:char *
ref	my_project/libgit2/src/libgit2/transports/smart.h	/^	char *ref;$/;"	m	struct:__anonb9ceeb0b0808	typeref:typename:char *
ref	my_project/libgit2/src/libgit2/transports/smart.h	/^	char *ref;$/;"	m	struct:__anonb9ceeb0b0908	typeref:typename:char *
ref	my_project/libgit2/tests/libgit2/online/push_util.h	/^	char *ref;$/;"	m	struct:__anonec09f7510408	typeref:typename:char *
ref	my_project/libgit2/tests/libgit2/refs/branches/name.c	/^static git_reference *ref;$/;"	v	typeref:typename:git_reference *	file:
ref_branch_name	my_project/libgit2/tests/libgit2/refs/overwrite.c	/^static const char *ref_branch_name = "refs\/heads\/branch";$/;"	v	typeref:typename:const char *	file:
ref_count	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 ref_count;          \/* Reference count *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
ref_count	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 ref_count;          \/* Reference count *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
ref_error_notfound	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int ref_error_notfound(const char *name)$/;"	f	typeref:typename:int	file:
ref_is_available	my_project/libgit2/src/libgit2/refdb_fs.c	/^static bool ref_is_available($/;"	f	typeref:typename:bool	file:
ref_iterator_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct ref_iterator_backtrack {$/;"	s	file:
ref_iterator_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} ref_iterator_backtrack;$/;"	t	typeref:struct:ref_iterator_backtrack	file:
ref_list	my_project/libgit2/tests/libgit2/refs/listall.c	/^static git_strarray ref_list;$/;"	v	typeref:typename:git_strarray	file:
ref_master_name	my_project/libgit2/tests/libgit2/refs/overwrite.c	/^static const char *ref_master_name = "refs\/heads\/master";$/;"	v	typeref:typename:const char *	file:
ref_master_name	my_project/libgit2/tests/libgit2/refs/rename.c	/^static const char *ref_master_name = "refs\/heads\/master";$/;"	v	typeref:typename:const char *	file:
ref_master_name	my_project/libgit2/tests/libgit2/refs/setter.c	/^static const char *ref_master_name = "refs\/heads\/master";$/;"	v	typeref:typename:const char *	file:
ref_name	my_project/libgit2/src/libgit2/annotated_commit.h	/^	const char *ref_name;$/;"	m	struct:git_annotated_commit	typeref:typename:const char *
ref_name	my_project/libgit2/src/libgit2/fetchhead.h	/^	char *ref_name;$/;"	m	struct:git_fetchhead_ref	typeref:typename:char *
ref_name	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_str ref_name;$/;"	m	struct:iter_load_context	typeref:typename:git_str	file:
ref_name	my_project/libgit2/src/libgit2/reflog.h	/^	char *ref_name;$/;"	m	struct:git_reflog	typeref:typename:char *
ref_name	my_project/libgit2/tests/libgit2/refs/overwrite.c	/^static const char *ref_name = "refs\/heads\/other";$/;"	v	typeref:typename:const char *	file:
ref_name	my_project/libgit2/tests/libgit2/refs/setter.c	/^static const char *ref_name = "refs\/heads\/other";$/;"	v	typeref:typename:const char *	file:
ref_name_cmp	my_project/libgit2/src/libgit2/transports/smart.c	/^static int ref_name_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
ref_one_name	my_project/libgit2/tests/libgit2/refs/rename.c	/^static const char *ref_one_name = "refs\/heads\/one\/branch";$/;"	v	typeref:typename:const char *	file:
ref_one_name_new	my_project/libgit2/tests/libgit2/refs/rename.c	/^static const char *ref_one_name_new = "refs\/heads\/two\/branch";$/;"	v	typeref:typename:const char *	file:
ref_pkt	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int ref_pkt($/;"	f	typeref:typename:int	file:
ref_prefix	my_project/libgit2/src/libgit2/refdb_fs.c	/^	const char *ref_prefix;$/;"	m	struct:iter_load_context	typeref:typename:const char *	file:
ref_prefix_len	my_project/libgit2/src/libgit2/refdb_fs.c	/^	size_t ref_prefix_len;$/;"	m	struct:iter_load_context	typeref:typename:size_t	file:
ref_test_name	my_project/libgit2/tests/libgit2/refs/overwrite.c	/^static const char *ref_test_name = "refs\/heads\/test";$/;"	v	typeref:typename:const char *	file:
ref_test_name	my_project/libgit2/tests/libgit2/refs/setter.c	/^static const char *ref_test_name = "refs\/heads\/test";$/;"	v	typeref:typename:const char *	file:
ref_to_update	my_project/libgit2/src/libgit2/remote.c	/^static int ref_to_update(int *update, git_str *remote_name, git_remote *remote, git_refspec *spe/;"	f	typeref:typename:int	file:
ref_two_name	my_project/libgit2/tests/libgit2/refs/rename.c	/^static const char *ref_two_name = "refs\/heads\/two";$/;"	v	typeref:typename:const char *	file:
ref_two_name_new	my_project/libgit2/tests/libgit2/refs/rename.c	/^static const char *ref_two_name_new = "refs\/heads\/two\/two";$/;"	v	typeref:typename:const char *	file:
ref_type	my_project/libgit2/src/libgit2/transaction.c	/^	git_reference_t ref_type;$/;"	m	struct:__anonbebdb9760208	typeref:typename:git_reference_t	file:
refcache	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_sortedcache *refcache;$/;"	m	struct:refdb_fs_backend	typeref:typename:git_sortedcache *	file:
refcmp_cb	my_project/libgit2/tests/libgit2/refs/iterator.c	/^static int refcmp_cb(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
refcnt	my_project/libgit2/src/libgit2/blame.h	/^	int refcnt;$/;"	m	struct:git_blame__origin	typeref:typename:int
refcount	my_project/libgit2/src/libgit2/cache.h	/^	git_atomic32 refcount;$/;"	m	struct:__anon6f0f98290208	typeref:typename:git_atomic32
refcount	my_project/libgit2/src/libgit2/pack.h	/^	git_atomic32 refcount;$/;"	m	struct:git_pack_cache_entry	typeref:typename:git_atomic32
refcount	my_project/libgit2/src/libgit2/pack.h	/^	git_atomic32 refcount;$/;"	m	struct:git_pack_file	typeref:typename:git_atomic32
refcount	my_project/libgit2/src/util/util.h	/^	git_atomic32 refcount;$/;"	m	struct:__anon381de8c40108	typeref:typename:git_atomic32
refdb_free_backend	my_project/libgit2/src/libgit2/refdb.c	/^static void refdb_free_backend(git_refdb *db)$/;"	f	typeref:typename:void	file:
refdb_fs_backend	my_project/libgit2/src/libgit2/refdb_fs.c	/^typedef struct refdb_fs_backend {$/;"	s	file:
refdb_fs_backend	my_project/libgit2/src/libgit2/refdb_fs.c	/^} refdb_fs_backend;$/;"	t	typeref:struct:refdb_fs_backend	file:
refdb_fs_backend__compress	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_fs_backend__compress(git_refdb_backend *_backend)$/;"	f	typeref:typename:int	file:
refdb_fs_backend__delete	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_fs_backend__delete($/;"	f	typeref:typename:int	file:
refdb_fs_backend__delete_tail	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_fs_backend__delete_tail($/;"	f	typeref:typename:int	file:
refdb_fs_backend__exists	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_fs_backend__exists($/;"	f	typeref:typename:int	file:
refdb_fs_backend__free	my_project/libgit2/src/libgit2/refdb_fs.c	/^static void refdb_fs_backend__free(git_refdb_backend *_backend)$/;"	f	typeref:typename:void	file:
refdb_fs_backend__iterator	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_fs_backend__iterator($/;"	f	typeref:typename:int	file:
refdb_fs_backend__iterator_free	my_project/libgit2/src/libgit2/refdb_fs.c	/^static void refdb_fs_backend__iterator_free(git_reference_iterator *_iter)$/;"	f	typeref:typename:void	file:
refdb_fs_backend__iterator_next	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_fs_backend__iterator_next($/;"	f	typeref:typename:int	file:
refdb_fs_backend__iterator_next_name	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_fs_backend__iterator_next_name($/;"	f	typeref:typename:int	file:
refdb_fs_backend__lock	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_fs_backend__lock(void **out, git_refdb_backend *_backend, const char *refname)$/;"	f	typeref:typename:int	file:
refdb_fs_backend__lookup	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_fs_backend__lookup($/;"	f	typeref:typename:int	file:
refdb_fs_backend__prune_refs	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_fs_backend__prune_refs($/;"	f	typeref:typename:int	file:
refdb_fs_backend__rename	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_fs_backend__rename($/;"	f	typeref:typename:int	file:
refdb_fs_backend__unlock	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_fs_backend__unlock(git_refdb_backend *backend, void *payload, int success, int /;"	f	typeref:typename:int	file:
refdb_fs_backend__write	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_fs_backend__write($/;"	f	typeref:typename:int	file:
refdb_fs_backend__write_tail	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_fs_backend__write_tail($/;"	f	typeref:typename:int	file:
refdb_fs_iter	my_project/libgit2/src/libgit2/refdb_fs.c	/^} refdb_fs_iter;$/;"	t	typeref:struct:__anon3803f1ab0308	file:
refdb_reflog_fs__delete	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_reflog_fs__delete(git_refdb_backend *_backend, const char *name)$/;"	f	typeref:typename:int	file:
refdb_reflog_fs__ensure_log	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_reflog_fs__ensure_log(git_refdb_backend *_backend, const char *name)$/;"	f	typeref:typename:int	file:
refdb_reflog_fs__has_log	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_reflog_fs__has_log(git_refdb_backend *_backend, const char *name)$/;"	f	typeref:typename:int	file:
refdb_reflog_fs__read	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_reflog_fs__read($/;"	f	typeref:typename:int	file:
refdb_reflog_fs__rename	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_reflog_fs__rename(git_refdb_backend *_backend, const char *old_name, const char/;"	f	typeref:typename:int	file:
refdb_reflog_fs__write	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int refdb_reflog_fs__write(git_refdb_backend *_backend, git_reflog *reflog)$/;"	f	typeref:typename:int	file:
reference__create	my_project/libgit2/src/libgit2/refs.c	/^static int reference__create($/;"	f	typeref:typename:int	file:
reference_is_packed	my_project/libgit2/tests/libgit2/refs/ref_helpers.c	/^int reference_is_packed(git_reference *ref)$/;"	f	typeref:typename:int
reference_listing	my_project/libgit2/examples/general.c	/^static void reference_listing(git_repository *repo)$/;"	f	typeref:typename:void	file:
reference_normalize_for_repo	my_project/libgit2/src/libgit2/refs.c	/^static int reference_normalize_for_repo($/;"	f	typeref:typename:int	file:
reference_path_available	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int reference_path_available($/;"	f	typeref:typename:int	file:
references	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int references;$/;"	m	struct:bio_st	typeref:typename:int
reflog	my_project/libgit2/src/libgit2/transaction.c	/^	git_reflog *reflog;$/;"	m	struct:__anonbebdb9760208	typeref:typename:git_reflog *	file:
reflog_alloc	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int reflog_alloc($/;"	f	typeref:typename:int	file:
reflog_append	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int reflog_append($/;"	f	typeref:typename:int	file:
reflog_check	my_project/libgit2/tests/libgit2/reset/reset_helpers.c	/^void reflog_check(git_repository *repo, const char *refname,$/;"	f	typeref:typename:void
reflog_entry_tostr	my_project/libgit2/tests/libgit2/refs/reflog/reflog_helpers.c	/^int reflog_entry_tostr(git_str *out, const git_reflog_entry *entry)$/;"	f	typeref:typename:int
reflog_entrycount	my_project/libgit2/tests/libgit2/refs/reflog/reflog_helpers.c	/^size_t reflog_entrycount(git_repository *repo, const char *name)$/;"	f	typeref:typename:size_t
reflog_inverse_index	my_project/libgit2/src/libgit2/reflog.h	/^GIT_INLINE(size_t) reflog_inverse_index(size_t idx, size_t total)$/;"	f	typeref:typename:size_t
reflog_parse	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int reflog_parse(git_reflog *log, const char *buf, size_t buf_size)$/;"	f	typeref:typename:int	file:
reflog_path	my_project/libgit2/src/libgit2/refdb_fs.c	/^GIT_INLINE(int) reflog_path($/;"	f	typeref:typename:int
reflog_print	my_project/libgit2/tests/libgit2/refs/reflog/reflog_helpers.c	/^void reflog_print(git_repository *repo, const char *reflog_name)$/;"	f	typeref:typename:void
refname	my_project/libgit2/tests/libgit2/refs/races.c	/^static const char *refname = "refs\/heads\/master";$/;"	v	typeref:typename:const char *	file:
refnames	my_project/libgit2/tests/libgit2/refs/iterator.c	/^static const char *refnames[] = {$/;"	v	typeref:typename:const char * []	file:
refnames_with_symlink	my_project/libgit2/tests/libgit2/refs/iterator.c	/^static const char *refnames_with_symlink[] = {$/;"	v	typeref:typename:const char * []	file:
refresh	my_project/libgit2/tests/clar/generate.py	/^    def refresh(self, path):$/;"	m	class:Module
refresh_calls	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.h	/^	int refresh_calls;$/;"	m	struct:__anon1e6212950208	typeref:typename:int
refresh_multi_pack_index	my_project/libgit2/src/libgit2/odb_pack.c	/^static int refresh_multi_pack_index(struct pack_backend *backend)$/;"	f	typeref:typename:int	file:
refs	my_project/libgit2/include/git2/sys/transport.h	/^	const git_remote_head * const *refs;$/;"	m	struct:__anon4efa7c750108	typeref:typename:const git_remote_head * const *
refs	my_project/libgit2/src/libgit2/remote.h	/^	git_vector refs;$/;"	m	struct:git_remote	typeref:typename:git_vector
refs	my_project/libgit2/src/libgit2/transports/local.c	/^	git_vector refs;$/;"	m	struct:__anona3bc4f8a0108	typeref:typename:git_vector	file:
refs	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_vector refs;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:git_vector
refs_configured_ident	my_project/libgit2/src/libgit2/refs.c	/^static int refs_configured_ident(git_signature **out, const git_repository *repo)$/;"	f	typeref:typename:int	file:
refs_foreach_cancel_cb	my_project/libgit2/tests/libgit2/refs/iterator.c	/^static int refs_foreach_cancel_cb(git_reference *reference, void *payload)$/;"	f	typeref:typename:int	file:
refs_foreach_cb	my_project/libgit2/tests/libgit2/refs/iterator.c	/^static int refs_foreach_cb(git_reference *reference, void *payload)$/;"	f	typeref:typename:int	file:
refs_foreach_name_cancel_cb	my_project/libgit2/tests/libgit2/refs/iterator.c	/^static int refs_foreach_name_cancel_cb(const char *name, void *payload)$/;"	f	typeref:typename:int	file:
refs_foreach_name_cb	my_project/libgit2/tests/libgit2/refs/iterator.c	/^static int refs_foreach_name_cb(const char *name, void *payload)$/;"	f	typeref:typename:int	file:
refs_len	my_project/libgit2/include/git2/sys/transport.h	/^	size_t refs_len;$/;"	m	struct:__anon4efa7c750108	typeref:typename:size_t
refs_update_head	my_project/libgit2/src/libgit2/refs.c	/^static int refs_update_head(git_repository *worktree, void *_payload)$/;"	f	typeref:typename:int	file:
refs_update_head_payload	my_project/libgit2/src/libgit2/refs.c	/^} refs_update_head_payload;$/;"	t	typeref:struct:__anon5cf2b4200208	file:
refspec	my_project/libgit2/src/libgit2/push.h	/^	struct git_refspec refspec;$/;"	m	struct:push_spec	typeref:struct:git_refspec
refspec_cb	my_project/libgit2/src/libgit2/remote.c	/^static int refspec_cb(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
refspec_cb_data	my_project/libgit2/src/libgit2/remote.c	/^struct refspec_cb_data {$/;"	s	file:
refspec_transform	my_project/libgit2/src/libgit2/refspec.c	/^static int refspec_transform($/;"	f	typeref:typename:int	file:
refspecs	my_project/libgit2/src/libgit2/remote.h	/^	git_vector refspecs;$/;"	m	struct:git_remote	typeref:typename:git_vector
refute__submodule_exists	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.c	/^void refute__submodule_exists($/;"	f	typeref:typename:void
refute_is_ignored	my_project/libgit2/tests/libgit2/ignore/status.c	/^#define refute_is_ignored(/;"	d	file:
refute_submodule_exists	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.h	/^#define refute_submodule_exists(/;"	d
regex	my_project/libgit2/src/libgit2/config.c	/^	git_regexp regex;$/;"	m	struct:__anona0399aa60308	typeref:typename:git_regexp	file:
regex	my_project/libgit2/src/libgit2/config.c	/^	git_regexp regex;$/;"	m	struct:__anona0399aa60508	typeref:typename:git_regexp	file:
regex	my_project/libgit2/tests/libgit2/diff/userdiff.c	/^static git_regexp regex;$/;"	v	typeref:typename:git_regexp	file:
regex	my_project/libgit2/tests/util/regexp.c	/^static git_regexp regex;$/;"	v	typeref:typename:git_regexp	file:
region	my_project/libgit2/deps/xdiff/xhistogram.c	/^struct region {$/;"	s	file:
register_custom_filters	my_project/libgit2/tests/libgit2/filter/custom.c	/^static void register_custom_filters(void)$/;"	f	typeref:typename:void	file:
rehash	my_project/libgit2/src/libgit2/pack-objects.c	/^static int rehash(git_packbuilder *pb)$/;"	f	typeref:typename:int	file:
reinit	my_project/libgit2/tests/util/init.c	/^static void *reinit(void *unused)$/;"	f	typeref:typename:void *	file:
release	my_project/libgit2/script/release.py	/^def release(args):$/;"	f
release_attr_files	my_project/libgit2/src/libgit2/attr.c	/^static void release_attr_files(git_vector *files)$/;"	f	typeref:typename:void	file:
release_match_heapframes	my_project/libgit2/deps/pcre/pcre_exec.c	/^release_match_heapframes (heapframe *frame_base)$/;"	f	typeref:typename:void	file:
reload_submodules	my_project/libgit2/src/libgit2/checkout.c	/^	bool reload_submodules;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:bool	file:
remain	my_project/libgit2/src/libgit2/parse.h	/^	const char *remain;$/;"	m	struct:__anon58da25b00108	typeref:typename:const char *
remain_len	my_project/libgit2/src/libgit2/parse.h	/^	size_t remain_len;$/;"	m	struct:__anon58da25b00108	typeref:typename:size_t
remaining	my_project/libgit2/src/libgit2/pack-objects.c	/^	size_t remaining;$/;"	m	struct:thread_params	typeref:typename:size_t	file:
remote	my_project/libgit2/src/libgit2/push.h	/^	git_remote *remote;$/;"	m	struct:git_push	typeref:typename:git_remote *
remote	my_project/libgit2/src/libgit2/remote.c	/^	git_remote *remote;$/;"	m	struct:refspec_cb_data	typeref:typename:git_remote *	file:
remote	my_project/libgit2/tests/libgit2/network/remote/local.c	/^static git_remote *remote;$/;"	v	typeref:typename:git_remote *	file:
remote_cb	my_project/libgit2/include/git2/clone.h	/^	git_remote_create_cb remote_cb;$/;"	m	struct:git_clone_options	typeref:typename:git_remote_create_cb
remote_cb_payload	my_project/libgit2/include/git2/clone.h	/^	void *remote_cb_payload;$/;"	m	struct:git_clone_options	typeref:typename:void *
remote_head_cmp	my_project/libgit2/src/libgit2/remote.c	/^static int remote_head_cmp(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
remote_head_for_fetchspec_src	my_project/libgit2/src/libgit2/remote.c	/^static int remote_head_for_fetchspec_src(git_remote_head **out, git_vector *update_heads, const /;"	f	typeref:typename:int	file:
remote_head_for_ref	my_project/libgit2/src/libgit2/remote.c	/^static int remote_head_for_ref(git_remote_head **out, git_remote *remote, git_refspec *spec, git/;"	f	typeref:typename:int	file:
remote_list_cb	my_project/libgit2/src/libgit2/remote.c	/^static int remote_list_cb(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
remote_mirror_cb	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^static int remote_mirror_cb(git_remote **out, git_repository *repo,$/;"	f	typeref:typename:int	file:
remote_mirror_cb	my_project/libgit2/tests/libgit2/online/clone.c	/^static int remote_mirror_cb(git_remote **out, git_repository *repo,$/;"	f	typeref:typename:int	file:
remote_opts	my_project/libgit2/examples/remote.c	/^struct remote_opts {$/;"	s	file:
remote_path	my_project/libgit2/src/cli/cmd_clone.c	/^static char *branch, *remote_path, *local_path, *depth;$/;"	v	typeref:typename:char *	file:
remote_push_options	my_project/libgit2/include/git2/remote.h	/^	git_strarray remote_push_options;$/;"	m	struct:__anon144be4e60908	typeref:typename:git_strarray
remote_push_options	my_project/libgit2/src/libgit2/push.h	/^	git_vector remote_push_options;$/;"	m	struct:git_push	typeref:typename:git_vector
remote_ready	my_project/libgit2/include/git2/remote.h	/^	git_remote_ready_cb remote_ready;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_remote_ready_cb
remote_ready_callback	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^static int remote_ready_callback(git_remote *remote, int direction, void *payload)$/;"	f	typeref:typename:int	file:
remote_single_branch	my_project/libgit2/tests/libgit2/online/remotes.c	/^static int remote_single_branch(git_remote **out, git_repository *repo, const char *name, const /;"	f	typeref:typename:int	file:
remote_single_branch	my_project/libgit2/tests/libgit2/online/shallow.c	/^static int remote_single_branch(git_remote **out, git_repository *repo, const char *name, const /;"	f	typeref:typename:int	file:
remote_tracking_branch_name	my_project/libgit2/tests/libgit2/refs/branches/remote.c	/^static const char *remote_tracking_branch_name = "refs\/remotes\/test\/master";$/;"	v	typeref:typename:const char *	file:
remote_url	my_project/libgit2/src/libgit2/annotated_commit.h	/^	const char *remote_url;$/;"	m	struct:git_annotated_commit	typeref:typename:const char *
remote_url	my_project/libgit2/src/libgit2/fetchhead.h	/^	char *remote_url;$/;"	m	struct:git_fetchhead_ref	typeref:typename:char *
remove	my_project/libgit2/src/libgit2/transaction.c	/^		remove :1;$/;"	m	struct:__anonbebdb9760208	typeref:typename:unsigned int:1	file:
remove_branch_config_related_entries	my_project/libgit2/src/libgit2/remote.c	/^static int remove_branch_config_related_entries($/;"	f	typeref:typename:int	file:
remove_conflicts	my_project/libgit2/src/libgit2/checkout.c	/^	git_vector remove_conflicts;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_vector	file:
remove_data	my_project/libgit2/tests/clar/clar_libgit2.c	/^} remove_data;$/;"	t	typeref:struct:__anonbd488f3e0108	file:
remove_file_cb	my_project/libgit2/tests/libgit2/status/worktree.c	/^static int remove_file_cb(void *data, git_str *file)$/;"	f	typeref:typename:int	file:
remove_multi_pack_index	my_project/libgit2/src/libgit2/odb_pack.c	/^static int remove_multi_pack_index(struct pack_backend *backend)$/;"	f	typeref:typename:int	file:
remove_note_in_tree_eexists_cb	my_project/libgit2/src/libgit2/notes.c	/^static int remove_note_in_tree_eexists_cb($/;"	f	typeref:typename:int	file:
remove_note_in_tree_enotfound_cb	my_project/libgit2/src/libgit2/notes.c	/^static int remove_note_in_tree_enotfound_cb($/;"	f	typeref:typename:int	file:
remove_object_files	my_project/libgit2/tests/libgit2/object/raw/write.c	/^static void remove_object_files(object_data *d)$/;"	f	typeref:typename:void	file:
remove_ones	my_project/libgit2/tests/util/vector.c	/^static int remove_ones(const git_vector *v, size_t idx, void *p)$/;"	f	typeref:typename:int	file:
remove_placeholders_recurs	my_project/libgit2/tests/clar/clar_libgit2.c	/^static int remove_placeholders_recurs(void *_data, git_str *path)$/;"	f	typeref:typename:int	file:
remove_redundant	my_project/libgit2/src/libgit2/merge.c	/^static int remove_redundant(git_revwalk *walk, git_vector *commits, uint32_t minimum_generation)$/;"	f	typeref:typename:int	file:
remove_refs	my_project/libgit2/src/libgit2/remote.c	/^static int remove_refs(git_repository *repo, const git_refspec *spec)$/;"	f	typeref:typename:int	file:
remove_remote_tracking	my_project/libgit2/src/libgit2/remote.c	/^static int remove_remote_tracking(git_repository *repo, const char *remote_name)$/;"	f	typeref:typename:int	file:
remove_service_suffix	my_project/libgit2/src/util/net.c	/^static void remove_service_suffix($/;"	f	typeref:typename:void	file:
removes	my_project/libgit2/src/libgit2/checkout.c	/^	git_vector removes;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_vector	file:
rename_and_edit_file	my_project/libgit2/tests/libgit2/status/renames.c	/^#define rename_and_edit_file(/;"	d	file:
rename_config_entries_cb	my_project/libgit2/src/libgit2/config.c	/^static int rename_config_entries_cb($/;"	f	typeref:typename:int	file:
rename_data	my_project/libgit2/src/libgit2/config.c	/^struct rename_data {$/;"	s	file:
rename_expected	my_project/libgit2/tests/libgit2/diff/rename.c	/^struct rename_expected$/;"	s	file:
rename_fetch_refspecs	my_project/libgit2/src/libgit2/remote.c	/^static int rename_fetch_refspecs(git_vector *problems, git_remote *remote, const char *new_name)$/;"	f	typeref:typename:int	file:
rename_file	my_project/libgit2/tests/libgit2/status/renames.c	/^#define rename_file(/;"	d	file:
rename_from_rewrite_threshold	my_project/libgit2/include/git2/diff.h	/^	uint16_t rename_from_rewrite_threshold;$/;"	m	struct:__anon7f3f1dd30f08	typeref:typename:uint16_t
rename_limit	my_project/libgit2/include/git2/diff.h	/^	size_t rename_limit;$/;"	m	struct:__anon7f3f1dd30f08	typeref:typename:size_t
rename_new_path	my_project/libgit2/src/libgit2/patch_parse.c	/^	char *rename_old_path, *rename_new_path;$/;"	m	struct:__anonddb10c3a0108	typeref:typename:char *	file:
rename_old_path	my_project/libgit2/src/libgit2/patch_parse.c	/^	char *rename_old_path, *rename_new_path;$/;"	m	struct:__anonddb10c3a0108	typeref:typename:char *	file:
rename_once	my_project/libgit2/src/util/win32/posix_w32.c	/^GIT_INLINE(int) rename_once(const wchar_t *from, const wchar_t *to)$/;"	f	typeref:typename:int
rename_one_remote_reference	my_project/libgit2/src/libgit2/remote.c	/^static int rename_one_remote_reference($/;"	f	typeref:typename:int	file:
rename_remote_config_section	my_project/libgit2/src/libgit2/remote.c	/^static int rename_remote_config_section($/;"	f	typeref:typename:int	file:
rename_remote_references	my_project/libgit2/src/libgit2/remote.c	/^static int rename_remote_references($/;"	f	typeref:typename:int	file:
rename_threshold	my_project/libgit2/include/git2/diff.h	/^	uint16_t rename_threshold;$/;"	m	struct:__anon7f3f1dd30f08	typeref:typename:uint16_t
rename_threshold	my_project/libgit2/include/git2/merge.h	/^	unsigned int rename_threshold;$/;"	m	struct:__anon1374edca0708	typeref:typename:unsigned int
rename_threshold	my_project/libgit2/include/git2/status.h	/^	uint16_t          rename_threshold;$/;"	m	struct:__anon6794a3fe0408	typeref:typename:uint16_t
renames	my_project/libgit2/src/libgit2/diff_stats.c	/^	size_t renames;$/;"	m	struct:git_diff_stats	typeref:typename:size_t	file:
render	my_project/libgit2/tests/clar/generate.py	/^        def render(self):$/;"	m	class:Module.CallbacksTemplate
render	my_project/libgit2/tests/clar/generate.py	/^        def render(self):$/;"	m	class:Module.DeclarationTemplate
render	my_project/libgit2/tests/clar/generate.py	/^        def render(self):$/;"	m	class:Module.InfoTemplate
reorder_args	my_project/libgit2/src/cli/main.c	/^static void reorder_args(char **argv, size_t first)$/;"	f	typeref:typename:void	file:
rep_max	my_project/libgit2/deps/pcre/pcre_exec.c	/^static const char rep_max[] = { 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, };$/;"	v	typeref:typename:const char[]	file:
rep_min	my_project/libgit2/deps/pcre/pcre_exec.c	/^static const char rep_min[] = { 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, };$/;"	v	typeref:typename:const char[]	file:
repeat	my_project/libgit2/examples/status.c	/^	int repeat;$/;"	m	struct:status_opts	typeref:typename:int	file:
replace_all_config	my_project/libgit2/src/cli/cmd_config.c	/^static int replace_all_config(git_config *config)$/;"	f	typeref:typename:int	file:
replace_char	my_project/libgit2/tests/libgit2/index/tests.c	/^static void replace_char(char *str, char in, char out)$/;"	f	typeref:typename:void	file:
replace_char	my_project/libgit2/tests/libgit2/index/tests256.c	/^static void replace_char(char *str, char in, char out)$/;"	f	typeref:typename:void	file:
replace_email	my_project/libgit2/src/libgit2/mailmap.h	/^	char *replace_email; \/**< the email to replace *\/$/;"	m	struct:git_mailmap_entry	typeref:typename:char *
replace_email	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^	const char *replace_email;$/;"	m	struct:__anonae472b4d0108	typeref:typename:const char *	file:
replace_email	my_project/libgit2/tests/libgit2/mailmap/mailmap_testdata.h	/^	const char *replace_email;$/;"	m	struct:mailmap_entry	typeref:typename:const char *
replace_file_with_mode	my_project/libgit2/tests/libgit2/index/filemodes.c	/^static void replace_file_with_mode($/;"	f	typeref:typename:void	file:
replace_name	my_project/libgit2/src/libgit2/describe.c	/^static int replace_name($/;"	f	typeref:typename:int	file:
replace_name	my_project/libgit2/src/libgit2/mailmap.h	/^	char *replace_name; \/**< the name to replace (may be NULL) *\/$/;"	m	struct:git_mailmap_entry	typeref:typename:char *
replace_name	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^	const char *replace_name;$/;"	m	struct:__anonae472b4d0108	typeref:typename:const char *	file:
replace_name	my_project/libgit2/tests/libgit2/mailmap/mailmap_testdata.h	/^	const char *replace_name;$/;"	m	struct:mailmap_entry	typeref:typename:const char *
replay_count	my_project/libgit2/src/libgit2/transports/http.c	/^	unsigned replay_count;$/;"	m	struct:__anon515ae8bf0308	typeref:typename:unsigned	file:
replicate10	my_project/libgit2/tests/libgit2/config/include.c	/^#define replicate10(/;"	d	file:
repo	my_project/libgit2/examples/add.c	/^	git_repository *repo;$/;"	m	struct:index_options	typeref:typename:git_repository *	file:
repo	my_project/libgit2/examples/log.c	/^	git_repository *repo;$/;"	m	struct:log_state	typeref:typename:git_repository *	file:
repo	my_project/libgit2/examples/tag.c	/^	git_repository *repo;$/;"	m	struct:__anonc073ee270108	typeref:typename:git_repository *	file:
repo	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/fuzzers/revparse_fuzzer.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/package.json	/^  "repo": "https:\/\/github.com\/libgit2\/libgit2",$/;"	s
repo	my_project/libgit2/src/libgit2/attr.c	/^	git_repository *repo;$/;"	m	struct:__anon36621a0b0208	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/blob.c	/^	git_repository *repo;$/;"	m	struct:__anon38237caf0108	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/checkout.c	/^	git_repository *repo;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/commit.c	/^	git_repository *repo;$/;"	m	struct:__anon9e6354d90308	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/commit_graph.c	/^	git_repository *repo;$/;"	m	struct:object_entry_cb_state	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/config_file.c	/^	const git_repository *repo;$/;"	m	struct:__anon341047050108	typeref:typename:const git_repository *	file:
repo	my_project/libgit2/src/libgit2/config_file.c	/^	const git_repository *repo;$/;"	m	struct:__anon341047050208	typeref:typename:const git_repository *	file:
repo	my_project/libgit2/src/libgit2/describe.c	/^	git_repository *repo;$/;"	m	struct:get_name_data	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/describe.c	/^	git_repository *repo;$/;"	m	struct:git_describe_result	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/diff.h	/^	git_repository   *repo;$/;"	m	struct:git_diff	typeref:typename:git_repository *
repo	my_project/libgit2/src/libgit2/diff_file.h	/^	git_repository *repo;$/;"	m	struct:__anonffb6e84d0108	typeref:typename:git_repository *
repo	my_project/libgit2/src/libgit2/diff_generate.c	/^	git_repository *repo;$/;"	m	struct:__anonff5a2cd30208	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/diff_tform.c	/^	git_repository *repo;$/;"	m	struct:__anon258239f00108	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/filter.c	/^	git_repository    *repo;$/;"	m	struct:git_filter_source	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/ignore.h	/^	git_repository *repo;$/;"	m	struct:__anonc29a75590108	typeref:typename:git_repository *
repo	my_project/libgit2/src/libgit2/iterator.h	/^	git_repository *repo;$/;"	m	struct:git_iterator	typeref:typename:git_repository *
repo	my_project/libgit2/src/libgit2/merge.h	/^	git_repository *repo;$/;"	m	struct:__anon7b397d650208	typeref:typename:git_repository *
repo	my_project/libgit2/src/libgit2/merge_driver.h	/^	git_repository *repo;$/;"	m	struct:git_merge_driver_source	typeref:typename:git_repository *
repo	my_project/libgit2/src/libgit2/object.h	/^	git_repository *repo;$/;"	m	struct:git_object	typeref:typename:git_repository *
repo	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_repository *repo; \/* associated repository *\/$/;"	m	struct:git_packbuilder	typeref:typename:git_repository *
repo	my_project/libgit2/src/libgit2/patch.h	/^	git_repository *repo; \/* may be null *\/$/;"	m	struct:git_patch	typeref:typename:git_repository *
repo	my_project/libgit2/src/libgit2/path.c	/^	git_repository *repo;$/;"	m	struct:__anon58077f5d0108	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/push.h	/^	git_repository *repo;$/;"	m	struct:git_push	typeref:typename:git_repository *
repo	my_project/libgit2/src/libgit2/reader.c	/^	git_repository *repo;$/;"	m	struct:__anon57d570630208	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/reader.c	/^	git_repository *repo;$/;"	m	struct:__anon57d570630308	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/rebase.c	/^	git_repository *repo;$/;"	m	struct:git_rebase	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/refdb.h	/^	git_repository *repo;$/;"	m	struct:git_refdb	typeref:typename:git_repository *
repo	my_project/libgit2/src/libgit2/refdb_fs.c	/^	git_repository *repo;$/;"	m	struct:refdb_fs_backend	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/remote.h	/^	git_repository *repo;$/;"	m	struct:git_remote	typeref:typename:git_repository *
repo	my_project/libgit2/src/libgit2/repository.c	/^	git_repository *repo;$/;"	m	struct:mergehead_data	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/revwalk.h	/^	git_repository *repo;$/;"	m	struct:git_revwalk	typeref:typename:git_repository *
repo	my_project/libgit2/src/libgit2/submodule.c	/^	git_repository *repo;$/;"	m	struct:__anon705203a00408	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/submodule.h	/^	git_repository *repo;$/;"	m	struct:git_submodule	typeref:typename:git_repository *
repo	my_project/libgit2/src/libgit2/tag.c	/^	git_repository *repo;$/;"	m	struct:__anon317eab2c0108	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/transaction.c	/^	git_repository *repo;$/;"	m	struct:git_transaction	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/transports/local.c	/^	git_repository *repo;$/;"	m	struct:__anona3bc4f8a0108	typeref:typename:git_repository *	file:
repo	my_project/libgit2/src/libgit2/tree.h	/^	git_repository *repo;$/;"	m	struct:git_treebuilder	typeref:typename:git_repository *
repo	my_project/libgit2/tests/libgit2/apply/both.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/apply/callbacks.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/apply/check.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^static git_repository *repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^static git_repository *repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/apply/index.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/apply/partial.c	/^static git_repository *repo = NULL;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/apply/tree.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/apply/workdir.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/checkout/icase.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/cherrypick/bare.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/describe/t6120.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/diff/binary.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/diff/format_email.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/email/create.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/fetch/local.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/graph/reachable_from_any.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/index/conflicts.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/index/names.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/index/nsec.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/index/reuc.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/index/stage.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/analysis.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/driver.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/files.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/trees/commits.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/trees/modeconflict.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/trees/renames.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/trees/whitespace.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/workdir/recursive.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/workdir/renames.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/workdir/submodules.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/network/remote/local.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/object/blob/fromstream.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/object/blob/write.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/object/commit/commitstagedfile.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/object/tag/peel.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/object/tree/attributes.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/object/tree/frompath.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/odb/alternates.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/odb/freshen.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/odb/largefiles.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/odb/streamwrite.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/rebase/abort.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/rebase/inmemory.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/rebase/iterator.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/rebase/merge.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/rebase/setup.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/rebase/sign.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/rebase/submodule.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/refs/branches/checkedout.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/refs/branches/delete.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/refs/branches/ishead.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/refs/branches/lookup.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/refs/branches/name.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/refs/branches/upstreamname.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/refs/foreachglob.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/refs/iterator.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/refs/listall.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/refs/unicode.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/remote/httpproxy.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/repo/extensions.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/repo/head.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/repo/headtree.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/repo/objectformat.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/repo/setters.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/reset/hard.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/reset/mixed.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/reset/soft.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/revert/bare.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/revert/rename.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/revert/workdir.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/stash/apply.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/stash/drop.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/stash/foreach.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/stash/save.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/stash/submodules.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^static git_repository *repo;$/;"	v	typeref:typename:git_repository *	file:
repo	my_project/libgit2/tests/libgit2/worktree/worktree_helpers.h	/^	git_repository *repo;$/;"	m	struct:__anon349ebb670108	typeref:typename:git_repository *
repo1	my_project/libgit2/tests/libgit2/remote/fetch.c	/^static git_repository *repo1;$/;"	v	typeref:typename:git_repository *	file:
repo1_path	my_project/libgit2/tests/libgit2/remote/fetch.c	/^static char* repo1_path;$/;"	v	typeref:typename:char *	file:
repo2	my_project/libgit2/tests/libgit2/remote/fetch.c	/^static git_repository *repo2;$/;"	v	typeref:typename:git_repository *	file:
repo2_path	my_project/libgit2/tests/libgit2/remote/fetch.c	/^static char* repo2_path;$/;"	v	typeref:typename:char *	file:
repo_contains_no_reference	my_project/libgit2/src/libgit2/repository.c	/^static int repo_contains_no_reference(git_repository *repo)$/;"	f	typeref:typename:int	file:
repo_index	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	my_project/libgit2/tests/libgit2/index/conflicts.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	my_project/libgit2/tests/libgit2/index/names.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	my_project/libgit2/tests/libgit2/index/nsec.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	my_project/libgit2/tests/libgit2/index/reuc.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	my_project/libgit2/tests/libgit2/index/stage.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	my_project/libgit2/tests/libgit2/merge/driver.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	my_project/libgit2/tests/libgit2/merge/files.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	my_project/libgit2/tests/libgit2/revert/workdir.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_index	my_project/libgit2/tests/libgit2/stash/apply.c	/^static git_index *repo_index;$/;"	v	typeref:typename:git_index *	file:
repo_init_config	my_project/libgit2/src/libgit2/repository.c	/^static int repo_init_config($/;"	f	typeref:typename:int	file:
repo_init_create_origin	my_project/libgit2/src/libgit2/repository.c	/^static int repo_init_create_origin(git_repository *repo, const char *url)$/;"	f	typeref:typename:int	file:
repo_init_directories	my_project/libgit2/src/libgit2/repository.c	/^static int repo_init_directories($/;"	f	typeref:typename:int	file:
repo_init_fs_configs	my_project/libgit2/src/libgit2/repository.c	/^static int repo_init_fs_configs($/;"	f	typeref:typename:int	file:
repo_init_head	my_project/libgit2/src/libgit2/repository.c	/^static int repo_init_head(const char *repo_dir, const char *given)$/;"	f	typeref:typename:int	file:
repo_init_opts	my_project/libgit2/tests/libgit2/index/tests256.c	/^static git_repository_init_options repo_init_opts =$/;"	v	typeref:typename:git_repository_init_options	file:
repo_init_structure	my_project/libgit2/src/libgit2/repository.c	/^static int repo_init_structure($/;"	f	typeref:typename:int	file:
repo_is_worktree	my_project/libgit2/src/libgit2/repository.c	/^static int repo_is_worktree(unsigned *out, const git_repository *repo)$/;"	f	typeref:typename:int	file:
repo_load_namespace	my_project/libgit2/src/libgit2/repository.c	/^static int repo_load_namespace(git_repository *repo)$/;"	f	typeref:typename:int	file:
repo_local_config	my_project/libgit2/src/libgit2/repository.c	/^static int repo_local_config($/;"	f	typeref:typename:int	file:
repo_mode	my_project/libgit2/tests/libgit2/repo/init.c	/^enum repo_mode {$/;"	g	file:
repo_name	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^static const char *repo_name = "nasty";$/;"	v	typeref:typename:const char *	file:
repo_name	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^static const char *repo_name = "win32-forbidden";$/;"	v	typeref:typename:const char *	file:
repo_path	my_project/libgit2/src/libgit2/repository.c	/^	const char *repo_path;$/;"	m	struct:__anon453495b00208	typeref:typename:const char *	file:
repo_paths	my_project/libgit2/src/libgit2/repository.c	/^struct repo_paths {$/;"	s	file:
repo_paths_dispose	my_project/libgit2/src/libgit2/repository.c	/^GIT_INLINE(void) repo_paths_dispose(struct repo_paths *paths)$/;"	f	typeref:typename:void
repo_reinit_submodule_fs	my_project/libgit2/src/libgit2/repository.c	/^static int repo_reinit_submodule_fs(git_submodule *sm, const char *n, void *p)$/;"	f	typeref:typename:int	file:
repo_template	my_project/libgit2/src/libgit2/repo_template.h	/^static repo_template_item repo_template[] = {$/;"	v	typeref:typename:repo_template_item[]
repo_template_item	my_project/libgit2/src/libgit2/repo_template.h	/^} repo_template_item;$/;"	t	typeref:struct:__anon5b8f20a60108
repo_write_gitlink	my_project/libgit2/src/libgit2/repository.c	/^static int repo_write_gitlink($/;"	f	typeref:typename:int	file:
repo_write_template	my_project/libgit2/src/libgit2/repository.c	/^static int repo_write_template($/;"	f	typeref:typename:int	file:
repodir	my_project/libgit2/examples/log.c	/^	const char *repodir;$/;"	m	struct:log_state	typeref:typename:const char *	file:
repodir	my_project/libgit2/examples/rev-parse.c	/^	const char *repodir;$/;"	m	struct:parse_state	typeref:typename:const char *	file:
repodir	my_project/libgit2/examples/status.c	/^	char *repodir;$/;"	m	struct:status_opts	typeref:typename:char *	file:
reponame	my_project/libgit2/tests/libgit2/worktree/worktree_helpers.h	/^	const char *reponame;$/;"	m	struct:__anon349ebb670108	typeref:typename:const char *
report_delta_progress	my_project/libgit2/src/libgit2/pack-objects.c	/^static int report_delta_progress($/;"	f	typeref:typename:int	file:
report_errors_only	my_project/libgit2/tests/clar/clar.c	/^	int report_errors_only;$/;"	m	struct:__anon15d96e120108	typeref:typename:int	file:
report_hook	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static int __cdecl report_hook(int nRptType, char *szMsg, int *retVal)$/;"	f	typeref:typename:int __cdecl	file:
report_progress	my_project/libgit2/src/libgit2/checkout.c	/^static void report_progress($/;"	f	typeref:typename:void	file:
report_status	my_project/libgit2/src/libgit2/push.h	/^	bool report_status;$/;"	m	struct:git_push	typeref:typename:bool
report_status	my_project/libgit2/src/libgit2/transports/smart.h	/^	             report_status:1,$/;"	m	struct:transport_smart_caps	typeref:typename:unsigned int:1
reports	my_project/libgit2/tests/clar/clar.c	/^	struct clar_report *reports;$/;"	m	struct:__anon15d96e120108	typeref:struct:clar_report *	file:
repository	my_project/libgit2/include/git2/remote.h	/^	git_repository *repository;$/;"	m	struct:git_remote_create_options	typeref:typename:git_repository *
repository	my_project/libgit2/src/libgit2/blame.h	/^	git_repository *repository;$/;"	m	struct:git_blame	typeref:typename:git_repository *
repository_alloc	my_project/libgit2/src/libgit2/repository.c	/^static git_repository *repository_alloc(void)$/;"	f	typeref:typename:git_repository *	file:
repository_cb	my_project/libgit2/include/git2/clone.h	/^	git_repository_create_cb repository_cb;$/;"	m	struct:git_clone_options	typeref:typename:git_repository_create_cb
repository_cb_payload	my_project/libgit2/include/git2/clone.h	/^	void *repository_cb_payload;$/;"	m	struct:git_clone_options	typeref:typename:void *
repository_create_with_proxy	my_project/libgit2/tests/libgit2/online/clone.c	/^static int repository_create_with_proxy($/;"	f	typeref:typename:int	file:
repository_index_path	my_project/libgit2/src/libgit2/repository.c	/^static int repository_index_path(git_str *out, git_repository *repo)$/;"	f	typeref:typename:int	file:
repository_odb_alternates	my_project/libgit2/src/libgit2/repository.c	/^static int repository_odb_alternates($/;"	f	typeref:typename:int	file:
repository_odb_path	my_project/libgit2/src/libgit2/repository.c	/^static int repository_odb_path(git_str *out, git_repository *repo)$/;"	f	typeref:typename:int	file:
repository_path_validate_data	my_project/libgit2/src/libgit2/path.c	/^} repository_path_validate_data;$/;"	t	typeref:struct:__anon58077f5d0108	file:
req_char	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 req_char;           \/* This character must be seen *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
req_char	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 req_char;           \/* This character must be seen *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
req_char_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 req_char_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
req_varyopt	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int  req_varyopt;                 \/* "After variable item" flag for reqbyte *\/$/;"	m	struct:compile_data	typeref:typename:int
request	my_project/libgit2/.vscode/launch.json	/^            "request": "launch",$/;"	s	object:configurations.0
request	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	HINTERNET request;$/;"	m	struct:__anon5ba854ad0208	typeref:typename:HINTERNET	file:
request_body_len	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	size_t request_body_len,$/;"	m	struct:git_http_client	typeref:typename:size_t	file:
request_body_remain	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	       request_body_remain;$/;"	m	struct:git_http_client	typeref:typename:size_t	file:
request_chunked	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	         request_chunked : 1;$/;"	m	struct:git_http_client	typeref:typename:unsigned:1	file:
request_count	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	unsigned request_count;$/;"	m	struct:git_http_client	typeref:typename:unsigned	file:
request_creds	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int request_creds(git_credential **out, ssh_subtransport *t, const char *user, int auth_m/;"	f	typeref:typename:int	file:
request_msg	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_str request_msg;$/;"	m	struct:git_http_client	typeref:typename:git_str	file:
request_type	my_project/libgit2/src/libgit2/transports/http.c	/^	const char *request_type;$/;"	m	struct:__anon515ae8bf0208	typeref:typename:const char *	file:
request_uri	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	wchar_t *request_uri;$/;"	m	struct:__anon5ba854ad0208	typeref:typename:wchar_t *	file:
requires_repo	my_project/libgit2/examples/lg2.c	/^	char requires_repo;$/;"	m	struct:__anonbfe592f00108	typeref:typename:char	file:
reroll_number	my_project/libgit2/include/git2/email.h	/^	size_t reroll_number;$/;"	m	struct:__anonbd19e2c20208	typeref:typename:size_t
res_oid	my_project/libgit2/src/libgit2/odb_loose.c	/^	unsigned char res_oid[GIT_OID_MAX_HEXSIZE];$/;"	m	struct:__anon5ce333660408	typeref:typename:unsigned char[]	file:
resend_credentials	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	         resend_credentials : 1;  \/**< Resend with authentication *\/$/;"	m	struct:__anon3d590bc30308	typeref:typename:unsigned:1
resend_needed	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int resend_needed(git_http_client *client, git_http_response *response)$/;"	f	typeref:typename:int	file:
reserved	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	uint32_t reserved;$/;"	m	struct:__anondc54b7e10308	typeref:typename:uint32_t
reserved	my_project/libgit2/deps/zlib/zlib.h	/^    uLong   reserved;   \/* reserved for future use *\/$/;"	m	struct:z_stream_s	typeref:typename:uLong
reserved	my_project/libgit2/include/git2/attr.h	/^	void *reserved;$/;"	m	struct:__anon790e91d50208	typeref:typename:void *
reserved	my_project/libgit2/include/git2/blob.h	/^	void *reserved;$/;"	m	struct:__anon7acff4790208	typeref:typename:void *
reserved	my_project/libgit2/include/git2/buffer.h	/^	size_t reserved;$/;"	m	struct:__anon0ed367940108	typeref:typename:size_t
reserved	my_project/libgit2/include/git2/filter.h	/^	void *reserved;$/;"	m	struct:__anon331c2ce00308	typeref:typename:void *
reserved	my_project/libgit2/include/git2/rebase.h	/^	void *reserved;$/;"	m	struct:__anonf9a5428c0108	typeref:typename:void *
reserved	my_project/libgit2/include/git2/remote.h	/^	void *reserved;$/;"	m	struct:git_remote_callbacks	typeref:typename:void *
reserved	my_project/libgit2/include/git2/sys/filter.h	/^	void *reserved;$/;"	m	struct:git_filter	typeref:typename:void *
reserved_names_add8dot3	my_project/libgit2/src/libgit2/repository.c	/^static int reserved_names_add8dot3(git_repository *repo, const char *path)$/;"	f	typeref:typename:int	file:
reset	my_project/libgit2/deps/ntlmclient/ntlm.c	/^#define reset(/;"	d	file:
reset	my_project/libgit2/deps/zlib/gzguts.h	/^    int reset;              \/* true if a reset is pending after a Z_FINISH *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:int
reset	my_project/libgit2/src/libgit2/iterator.h	/^	int (*reset)(git_iterator *);$/;"	m	struct:__anon2f88b95f0508	typeref:typename:int (*)(git_iterator *)
reset	my_project/libgit2/src/libgit2/reset.c	/^static int reset($/;"	f	typeref:typename:int	file:
reset_auth_connection	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static void reset_auth_connection(git_http_server *server)$/;"	f	typeref:typename:void	file:
reset_fast_fail	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void reset_fast_fail(compiler_common *common)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
reset_index_and_workdir	my_project/libgit2/src/libgit2/stash.c	/^static int reset_index_and_workdir(git_repository *repo, git_commit *commit, uint32_t flags)$/;"	f	typeref:typename:int	file:
reset_index_to_treeish	my_project/libgit2/tests/libgit2/checkout/checkout_helpers.c	/^void reset_index_to_treeish(git_object *treeish)$/;"	f	typeref:typename:void
reset_match	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *reset_match;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
reset_ovector	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void reset_ovector(compiler_common *common, int length)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
reset_parser	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static void reset_parser(git_http_client *client)$/;"	f	typeref:typename:void	file:
resize	my_project/libgit2/src/util/tsort.c	/^static int resize(struct tsort_store *store, size_t new_size)$/;"	f	typeref:typename:int	file:
resize_trie	my_project/libgit2/src/libgit2/oid.c	/^static int resize_trie(git_oid_shorten *self, size_t new_size)$/;"	f	typeref:typename:int	file:
resize_vector	my_project/libgit2/src/util/vector.c	/^GIT_INLINE(int) resize_vector(git_vector *v, size_t new_size)$/;"	f	typeref:typename:int
resolve_commit_oid_to_tree	my_project/libgit2/tests/libgit2/diff/diff_helpers.c	/^git_tree *resolve_commit_oid_to_tree($/;"	f	typeref:typename:git_tree *
resolve_deltas	my_project/libgit2/src/libgit2/indexer.c	/^static int resolve_deltas(git_indexer *idx, git_indexer_progress *stats)$/;"	f	typeref:typename:int	file:
resolve_heads	my_project/libgit2/examples/merge.c	/^static int resolve_heads(git_repository *repo, struct merge_options *opts)$/;"	f	typeref:typename:int	file:
resolve_refish	my_project/libgit2/examples/common.c	/^int resolve_refish(git_annotated_commit **commit, git_repository *repo, const char *refish)$/;"	f	typeref:typename:int
resolve_symlink	my_project/libgit2/src/util/filebuf.c	/^static int resolve_symlink(git_str *out, const char *path)$/;"	f	typeref:typename:int	file:
resolve_url	my_project/libgit2/include/git2/remote.h	/^	git_url_resolve_cb resolve_url;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_url_resolve_cb
resolve_url	my_project/libgit2/src/libgit2/remote.c	/^static int resolve_url($/;"	f	typeref:typename:int	file:
resolved	my_project/libgit2/src/libgit2/merge.h	/^	git_vector resolved;$/;"	m	struct:__anon7b397d650208	typeref:typename:git_vector
resolved	my_project/libgit2/tests/libgit2/mailmap/mailmap_testdata.h	/^static const mailmap_entry resolved[] = {$/;"	v	typeref:typename:const mailmap_entry[]
resolved_bare	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^static const mailmap_entry resolved_bare[] = {$/;"	v	typeref:typename:const mailmap_entry[]	file:
resolved_parent_path	my_project/libgit2/src/libgit2/repository.c	/^static const char *resolved_parent_path(const git_repository *repo, git_repository_item_t item, /;"	f	typeref:typename:const char *	file:
resolved_untracked	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^static const mailmap_entry resolved_untracked[] = {$/;"	v	typeref:typename:const mailmap_entry[]	file:
resolved_with_blob_override	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^static const mailmap_entry resolved_with_blob_override[] = {$/;"	v	typeref:typename:const mailmap_entry[]	file:
resolved_with_file_override	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^static const mailmap_entry resolved_with_file_override[] = {$/;"	v	typeref:typename:const mailmap_entry[]	file:
resources_dir	my_project/libgit2/tests/benchmarks/benchmark_helpers.sh	/^resources_dir() {$/;"	f
respect_filemode	my_project/libgit2/src/libgit2/checkout.c	/^	int respect_filemode;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:int	file:
response	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_buf response;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_buf
response	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_http_response *response;$/;"	m	struct:__anon3d590bbe0608	typeref:typename:git_http_response *	file:
response_type	my_project/libgit2/src/libgit2/transports/http.c	/^	const char *response_type;$/;"	m	struct:__anon515ae8bf0208	typeref:typename:const char *	file:
restore_signals	my_project/libgit2/src/util/unix/process.c	/^GIT_INLINE(int) restore_signals(sigset_t *saved_mask)$/;"	f	typeref:typename:int
restore_signals	my_project/libgit2/src/util/unix/process.c	/^GIT_INLINE(int) restore_signals(struct sigaction *saved_handler)$/;"	f	typeref:typename:int
result	my_project/libgit2/src/libgit2/describe.c	/^	git_describe_result *result;$/;"	m	struct:get_name_data	typeref:typename:git_describe_result *	file:
result	my_project/libgit2/src/libgit2/diff.c	/^	git_oid result;$/;"	m	struct:patch_id_args	typeref:typename:git_oid	file:
result	my_project/libgit2/src/util/win32/thread.h	/^	void *result;$/;"	m	struct:__anond08cd1a00108	typeref:typename:void *
result	my_project/libgit2/tests/util/process/win32.c	/^static git_str result;$/;"	v	typeref:typename:git_str	file:
result_bytes	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static const int result_bytes = 24;$/;"	v	typeref:typename:const int	file:
result_contents	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^static char *result_contents[4][6] = {$/;"	v	typeref:typename:char * [4][6]	file:
retrieve_base_commit_and_message	my_project/libgit2/src/libgit2/stash.c	/^static int retrieve_base_commit_and_message($/;"	f	typeref:typename:int	file:
retrieve_branch_reference	my_project/libgit2/src/libgit2/branch.c	/^static int retrieve_branch_reference($/;"	f	typeref:typename:int	file:
retrieve_head	my_project/libgit2/src/libgit2/stash.c	/^static int retrieve_head(git_reference **out, git_repository *repo)$/;"	f	typeref:typename:int	file:
retrieve_known_commit	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^static void retrieve_known_commit(git_commit **commit, git_repository *repo)$/;"	f	typeref:typename:void	file:
retrieve_note_commit	my_project/libgit2/src/libgit2/notes.c	/^static int retrieve_note_commit($/;"	f	typeref:typename:int	file:
retrieve_object	my_project/libgit2/src/libgit2/pack-objects.c	/^static int retrieve_object(struct walk_object **out, git_packbuilder *pb, const git_oid *id)$/;"	f	typeref:typename:int	file:
retrieve_oid_from_reflog	my_project/libgit2/src/libgit2/revparse.c	/^static int retrieve_oid_from_reflog(git_oid *oid, git_reference *ref, size_t identifier)$/;"	f	typeref:typename:int	file:
retrieve_peeled_tag_or_object_oid	my_project/libgit2/src/libgit2/describe.c	/^static int retrieve_peeled_tag_or_object_oid($/;"	f	typeref:typename:int	file:
retrieve_previously_checked_out_branch_or_revision	my_project/libgit2/src/libgit2/revparse.c	/^static int retrieve_previously_checked_out_branch_or_revision(git_object **out, git_reference **/;"	f	typeref:typename:int	file:
retrieve_remote_tracking_reference	my_project/libgit2/src/libgit2/revparse.c	/^static int retrieve_remote_tracking_reference(git_reference **base_ref, const char *identifier, /;"	f	typeref:typename:int	file:
retrieve_revobject_from_reflog	my_project/libgit2/src/libgit2/revparse.c	/^static int retrieve_revobject_from_reflog(git_object **out, git_reference **base_ref, git_reposi/;"	f	typeref:typename:int	file:
retrieve_stash_commit	my_project/libgit2/src/libgit2/stash.c	/^static int retrieve_stash_commit($/;"	f	typeref:typename:int	file:
retrieve_stash_trees	my_project/libgit2/src/libgit2/stash.c	/^static int retrieve_stash_trees($/;"	f	typeref:typename:int	file:
retrieve_tag_from_oid	my_project/libgit2/tests/libgit2/object/tag/peel.c	/^static void retrieve_tag_from_oid(git_tag **tag_out, git_repository *repo, const char *sha)$/;"	f	typeref:typename:void	file:
retrieve_tag_reference	my_project/libgit2/src/libgit2/tag.c	/^static int retrieve_tag_reference($/;"	f	typeref:typename:int	file:
retrieve_tag_reference_oid	my_project/libgit2/src/libgit2/tag.c	/^static int retrieve_tag_reference_oid($/;"	f	typeref:typename:int	file:
retrieve_target_from_oid	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^static void retrieve_target_from_oid(git_commit **out, git_repository *repo, const char *sha)$/;"	f	typeref:typename:void	file:
retrieve_top_stash_id	my_project/libgit2/tests/libgit2/stash/drop.c	/^static void retrieve_top_stash_id(git_oid *out)$/;"	f	typeref:typename:void	file:
retrieve_upstream_configuration	my_project/libgit2/src/libgit2/branch.c	/^static int retrieve_upstream_configuration($/;"	f	typeref:typename:int	file:
retry_reason	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int retry_reason;$/;"	m	struct:bio_st	typeref:typename:int
return_normally	my_project/libgit2/tests/libgit2/threads/basic.c	/^static void *return_normally(void *param)$/;"	f	typeref:typename:void *	file:
return_os_error	my_project/libgit2/src/cli/progress.c	/^#define return_os_error(/;"	d	file:
return_to_orig_head	my_project/libgit2/src/libgit2/rebase.c	/^static int return_to_orig_head(git_rebase *rebase)$/;"	f	typeref:typename:int	file:
return_with_partial_match	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void return_with_partial_match(compiler_common *common, struct sljit_label */;"	f	typeref:typename:SLJIT_INLINE void	file:
reuc	my_project/libgit2/src/libgit2/index.h	/^	git_vector reuc;$/;"	m	struct:git_index	typeref:typename:git_vector
reuc_cmp	my_project/libgit2/src/libgit2/index.c	/^static int reuc_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
reuc_entry_alloc	my_project/libgit2/src/libgit2/index.c	/^static git_index_reuc_entry *reuc_entry_alloc(const char *path)$/;"	f	typeref:typename:git_index_reuc_entry *	file:
reuc_entry_exists	my_project/libgit2/tests/libgit2/index/reuc.c	/^static int reuc_entry_exists(void)$/;"	f	typeref:typename:int	file:
reuc_entry_internal	my_project/libgit2/src/libgit2/index.c	/^struct reuc_entry_internal {$/;"	s	file:
reuc_icmp	my_project/libgit2/src/libgit2/index.c	/^static int reuc_icmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
reuc_isrch	my_project/libgit2/src/libgit2/index.c	/^static int reuc_isrch(const void *key, const void *array_member)$/;"	f	typeref:typename:int	file:
reuc_search	my_project/libgit2/src/libgit2/index.h	/^	git_vector_cmp reuc_search;$/;"	m	struct:git_index	typeref:typename:git_vector_cmp
reuc_srch	my_project/libgit2/src/libgit2/index.c	/^static int reuc_srch(const void *key, const void *array_member)$/;"	f	typeref:typename:int	file:
rev	my_project/libgit2/examples/cat-file.c	/^	const char *rev;$/;"	m	struct:catfile_options	typeref:typename:const char *	file:
reveal	my_project/libgit2/.vscode/tasks.json	/^          "reveal": "always",$/;"	s	object:tasks.0.presentation
reveal	my_project/libgit2/.vscode/tasks.json	/^          "reveal": "always",$/;"	s	object:tasks.1.presentation
revents	my_project/libgit2/src/util/posix.h	/^	short revents;$/;"	m	struct:pollfd	typeref:typename:short
reverse_elements	my_project/libgit2/src/util/tsort.c	/^static void reverse_elements(void **dst, ssize_t start, ssize_t end)$/;"	f	typeref:typename:void	file:
reverse_filter_apply	my_project/libgit2/tests/libgit2/filter/custom_helpers.c	/^int reverse_filter_apply($/;"	f	typeref:typename:int
reverse_filter_free	my_project/libgit2/tests/libgit2/filter/custom_helpers.c	/^static void reverse_filter_free(git_filter *f)$/;"	f	typeref:typename:void	file:
reverse_filter_stream	my_project/libgit2/tests/libgit2/filter/custom_helpers.c	/^static int reverse_filter_stream($/;"	f	typeref:typename:int	file:
reversed	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^static unsigned char reversed[] = {$/;"	v	typeref:typename:unsigned char[]	file:
revert_normalize_opts	my_project/libgit2/src/libgit2/revert.c	/^static int revert_normalize_opts($/;"	f	typeref:typename:int	file:
revert_seterr	my_project/libgit2/src/libgit2/revert.c	/^static int revert_seterr(git_commit *commit, const char *fmt)$/;"	f	typeref:typename:int	file:
revert_state_cleanup	my_project/libgit2/src/libgit2/revert.c	/^static int revert_state_cleanup(git_repository *repo)$/;"	f	typeref:typename:int	file:
revertframes	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *revertframes;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
revisions	my_project/libgit2/examples/log.c	/^	int revisions;$/;"	m	struct:log_state	typeref:typename:int	file:
revparse	my_project/libgit2/src/libgit2/revparse.c	/^static int revparse($/;"	f	typeref:typename:int	file:
revparse_lookup_object	my_project/libgit2/src/libgit2/revparse.c	/^static int revparse_lookup_object($/;"	f	typeref:typename:int	file:
revwalk_basic_setup_walk	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static void revwalk_basic_setup_walk(const char *fixture)$/;"	f	typeref:typename:void	file:
revwalk_enqueue_timesort	my_project/libgit2/src/libgit2/revwalk.c	/^static int revwalk_enqueue_timesort(git_revwalk *walk, git_commit_list_node *commit)$/;"	f	typeref:typename:int	file:
revwalk_enqueue_unsorted	my_project/libgit2/src/libgit2/revwalk.c	/^static int revwalk_enqueue_unsorted(git_revwalk *walk, git_commit_list_node *commit)$/;"	f	typeref:typename:int	file:
revwalk_next_reverse	my_project/libgit2/src/libgit2/revwalk.c	/^static int revwalk_next_reverse(git_commit_list_node **object_out, git_revwalk *walk)$/;"	f	typeref:typename:int	file:
revwalk_next_timesort	my_project/libgit2/src/libgit2/revwalk.c	/^static int revwalk_next_timesort(git_commit_list_node **object_out, git_revwalk *walk)$/;"	f	typeref:typename:int	file:
revwalk_next_toposort	my_project/libgit2/src/libgit2/revwalk.c	/^static int revwalk_next_toposort(git_commit_list_node **object_out, git_revwalk *walk)$/;"	f	typeref:typename:int	file:
revwalk_next_unsorted	my_project/libgit2/src/libgit2/revwalk.c	/^static int revwalk_next_unsorted(git_commit_list_node **object_out, git_revwalk *walk)$/;"	f	typeref:typename:int	file:
revwalk_parse_options	my_project/libgit2/examples/rev-list.c	/^static int revwalk_parse_options(git_sort_t *sort, struct args_info *args)$/;"	f	typeref:typename:int	file:
revwalk_parse_revs	my_project/libgit2/examples/rev-list.c	/^static int revwalk_parse_revs(git_repository *repo, git_revwalk *walk, struct args_info *args)$/;"	f	typeref:typename:int	file:
revwalking	my_project/libgit2/examples/general.c	/^static void revwalking(git_repository *repo)$/;"	f	typeref:typename:void	file:
rewinddir	my_project/libgit2/src/util/win32/dir.h	/^#	define rewinddir /;"	d
rewrite_gitmodules	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.c	/^void rewrite_gitmodules(const char *workdir)$/;"	f	typeref:typename:void
rewrite_notes_ref	my_project/libgit2/include/git2/rebase.h	/^	const char *rewrite_notes_ref;$/;"	m	struct:__anonf9a5428c0108	typeref:typename:const char *
rhash	my_project/libgit2/deps/xdiff/xtypes.h	/^	xrecord_t **rhash;$/;"	m	struct:s_xdfile	typeref:typename:xrecord_t **
rindex	my_project/libgit2/deps/xdiff/xdiffi.h	/^	long *rindex;$/;"	m	struct:s_diffdata	typeref:typename:long *
rindex	my_project/libgit2/deps/xdiff/xtypes.h	/^	long *rindex;$/;"	m	struct:s_xdfile	typeref:typename:long *
rl_gets	sdb.c	/^static char* rl_gets() {$/;"	f	typeref:typename:char *	file:
rm_eo	my_project/libgit2/deps/pcre/pcreposix.h	/^  pcre_regoff_t rm_eo;$/;"	m	struct:__anon411fc6730308	typeref:typename:pcre_regoff_t
rm_so	my_project/libgit2/deps/pcre/pcreposix.h	/^  pcre_regoff_t rm_so;$/;"	m	struct:__anon411fc6730308	typeref:typename:pcre_regoff_t
rm_submodule	my_project/libgit2/tests/libgit2/submodule/status.c	/^static void rm_submodule(const char *name)$/;"	f	typeref:typename:void	file:
rm_submodule_from_index	my_project/libgit2/tests/libgit2/submodule/status.c	/^static void rm_submodule_from_index(const char *name)$/;"	f	typeref:typename:void	file:
roid	my_project/libgit2/src/libgit2/push.h	/^	git_oid roid;$/;"	m	struct:push_spec	typeref:typename:git_oid
root	my_project/libgit2/src/libgit2/iterator.c	/^	char *root;$/;"	m	struct:__anon2f88b95a0808	typeref:typename:char *	file:
root	my_project/libgit2/src/libgit2/iterator.c	/^	git_tree *root;$/;"	m	struct:__anon2f88b95a0508	typeref:typename:git_tree *	file:
root_commit_message	my_project/libgit2/tests/libgit2/commit/write.c	/^static const char *root_commit_message = "This is a root commit\\n\\$/;"	v	typeref:typename:const char *	file:
root_len	my_project/libgit2/src/libgit2/iterator.c	/^	size_t root_len;$/;"	m	struct:__anon2f88b95a0808	typeref:typename:size_t	file:
root_reflog_message	my_project/libgit2/tests/libgit2/commit/write.c	/^static const char *root_reflog_message = "commit (initial): This is a root commit \\$/;"	v	typeref:typename:const char *	file:
rotate_left	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define rotate_left(/;"	d	file:
rotate_right	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define rotate_right(/;"	d	file:
rotl	my_project/libgit2/src/util/rand.c	/^GIT_INLINE(uint64_t) rotl(const uint64_t x, int k) {$/;"	f	typeref:typename:uint64_t
roundtrip_with_read_index	my_project/libgit2/tests/libgit2/index/read_index.c	/^static bool roundtrip_with_read_index(const char *tree_idstr)$/;"	f	typeref:typename:bool	file:
row_cmp	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^static int row_cmp(const void *v1, const void *v2)$/;"	f	typeref:typename:int	file:
rpc	my_project/libgit2/include/git2/sys/transport.h	/^	unsigned rpc;$/;"	m	struct:git_smart_subtransport_definition	typeref:typename:unsigned
rpc	my_project/libgit2/src/libgit2/transports/smart.h	/^	unsigned rpc : 1,$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:unsigned:1
rules	my_project/libgit2/src/libgit2/attr_file.h	/^	git_vector rules;			\/* vector of <rule*> or <fnmatch*> *\/$/;"	m	struct:__anon0df92d8f0708	typeref:typename:git_vector
run_command	my_project/libgit2/examples/lg2.c	/^static int run_command(git_command_fn fn, git_repository *repo, struct args_info args)$/;"	f	typeref:typename:int	file:
run_env	my_project/libgit2/tests/util/process/env.c	/^static void run_env(const char **env_array, size_t env_len, bool exclude_env)$/;"	f	typeref:typename:void	file:
run_in_parallel	my_project/libgit2/tests/libgit2/threads/thread_helpers.c	/^void run_in_parallel($/;"	f	typeref:typename:void
run_index_diffs	my_project/libgit2/tests/libgit2/threads/diff.c	/^static void *run_index_diffs(void *arg)$/;"	f	typeref:typename:void *	file:
run_index_diffs_with_modifier	my_project/libgit2/tests/libgit2/threads/diff.c	/^static void *run_index_diffs_with_modifier(void *arg)$/;"	f	typeref:typename:void *	file:
run_one_file	my_project/libgit2/fuzzers/standalone_driver.c	/^static int run_one_file(const char *filename)$/;"	f	typeref:typename:int	file:
run_test	my_project/libgit2/ci/test.sh	/^run_test() {$/;"	f
run_test_cases	my_project/libgit2/tests/libgit2/attr/lookup.c	/^static void run_test_cases(git_attr_file *file, struct attr_expected *cases, int force_dir)$/;"	f	typeref:typename:void	file:
run_workdir_iterator	my_project/libgit2/tests/libgit2/threads/iterator.c	/^static void *run_workdir_iterator(void *arg)$/;"	f	typeref:typename:void *	file:
s	my_project/libgit2/src/libgit2/streams/socket.h	/^	GIT_SOCKET s;$/;"	m	struct:__anon362d01ac0108	typeref:typename:GIT_SOCKET
s40	my_project/libgit2/tests/libgit2/object/message.c	/^#define s40 /;"	d	file:
s_bdiffparam	my_project/libgit2/deps/xdiff/xdiff.h	/^typedef struct s_bdiffparam {$/;"	s
s_chanode	my_project/libgit2/deps/xdiff/xtypes.h	/^typedef struct s_chanode {$/;"	s
s_chastore	my_project/libgit2/deps/xdiff/xtypes.h	/^typedef struct s_chastore {$/;"	s
s_diffdata	my_project/libgit2/deps/xdiff/xdiffi.h	/^typedef struct s_diffdata {$/;"	s
s_error	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_error,$/;"	e	enum:llparse_state_e	file:
s_lno	my_project/libgit2/src/libgit2/blame.h	/^	size_t s_lno;$/;"	m	struct:git_blame__entry	typeref:typename:size_t
s_methods	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^static struct method s_methods[] = {$/;"	v	typeref:struct:method[]	file:
s_mmbuffer	my_project/libgit2/deps/xdiff/xdiff.h	/^typedef struct s_mmbuffer {$/;"	s
s_mmfile	my_project/libgit2/deps/xdiff/xdiff.h	/^typedef struct s_mmfile {$/;"	s
s_n_llhttp__internal__n_after_start_req	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_10	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_10,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_11	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_11,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_12	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_12,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_13	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_13,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_14	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_14,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_15	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_15,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_16	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_16,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_17	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_17,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_18	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_18,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_19	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_19,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_2	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_2,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_20	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_20,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_21	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_21,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_22	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_22,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_23	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_23,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_24	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_24,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_25	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_25,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_26	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_26,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_27	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_27,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_28	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_28,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_29	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_29,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_3	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_3,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_30	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_30,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_31	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_31,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_32	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_32,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_33	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_33,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_34	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_34,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_35	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_35,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_36	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_36,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_37	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_37,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_38	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_38,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_39	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_39,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_4	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_4,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_40	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_40,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_41	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_41,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_42	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_42,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_43	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_43,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_44	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_44,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_45	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_45,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_46	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_46,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_47	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_47,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_48	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_48,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_49	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_49,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_5	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_5,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_50	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_50,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_51	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_51,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_52	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_52,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_53	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_53,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_54	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_54,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_55	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_55,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_56	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_56,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_57	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_57,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_58	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_58,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_59	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_59,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_6	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_6,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_60	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_60,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_61	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_61,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_62	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_62,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_63	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_63,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_64	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_64,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_65	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_65,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_66	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_66,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_67	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_67,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_68	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_68,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_69	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_69,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_7	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_7,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_70	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_70,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_8	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_8,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_after_start_req_9	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_after_start_req_9,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_chunk_data_almost_done	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_chunk_data_almost_done,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_chunk_data_almost_done_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_chunk_data_almost_done_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_chunk_extension_name	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_chunk_extension_name,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_chunk_extension_quoted_value	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_chunk_extension_quoted_value,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_chunk_extension_quoted_value_done	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_chunk_extension_quoted_value_done,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_chunk_extension_quoted_value_quoted_pair	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_chunk_extension_quoted_value_quoted_pair,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_chunk_extension_value	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_chunk_extension_value,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_chunk_extensions	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_chunk_extensions,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_chunk_size	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_chunk_size,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_chunk_size_almost_done	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_chunk_size_almost_done,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_chunk_size_digit	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_chunk_size_digit,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_chunk_size_otherwise	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_chunk_size_otherwise,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_closed	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_closed,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_consume_content_length	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_consume_content_length,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_consume_content_length_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_consume_content_length_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_eof	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_eof,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_103	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_103,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_104	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_104,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_105	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_105,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_30	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_30,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_31	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_31,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_33	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_33,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_34	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_34,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_5	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_5,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_54	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_54,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_56	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_56,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_57	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_57,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_58	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_58,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_59	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_59,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_66	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_66,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_73	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_73,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_74	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_74,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_75	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_75,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_error_89	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_error_89,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_field	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_field,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_field_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_field_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_field_2	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_field_2,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_field_3	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_field_3,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_field_4	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_field_4,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_field_5	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_field_5,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_field_6	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_field_6,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_field_7	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_field_7,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_field_colon	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_field_colon,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_field_colon_discard_ws	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_field_colon_discard_ws,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_field_general	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_field_general,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_field_general_otherwise	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_field_general_otherwise,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_field_start	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_field_start,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_almost_done	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_almost_done,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_connection	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_connection,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_connection_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_connection_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_connection_2	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_connection_2,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_connection_3	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_connection_3,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_connection_token	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_connection_token,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_connection_ws	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_connection_ws,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_content_length	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_content_length,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_content_length_ws	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_content_length_ws,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_discard_lws	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_discard_lws,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_discard_ws	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_discard_ws,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_discard_ws_almost_done	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_discard_ws_almost_done,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_lenient	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_lenient,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_lws	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_lws,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_otherwise	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_otherwise,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_te_chunked	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_te_chunked,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_te_chunked_last	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_te_chunked_last,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_te_token	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_te_token,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_header_value_te_token_ows	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_header_value_te_token_ows,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_headers_almost_done	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_headers_almost_done,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_headers_start	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_headers_start,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_is_equal_content_length	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_is_equal_content_length,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_is_equal_upgrade	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_is_equal_upgrade,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__after_headers_complete	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__after_headers_complete,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__after_message_complete	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__after_message_complete,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__on_chunk_extension_name_complete	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__on_chunk_extension_name_complete,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__on_chunk_extension_name_complete_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__on_chunk_extension_name_complete_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__on_chunk_extension_name_complete_2	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__on_chunk_extension_name_complete_2,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__on_chunk_extension_value_complete	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__on_chunk_extension_value_complete,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__on_chunk_extension_value_complete_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__on_chunk_extension_value_complete_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__on_chunk_extension_value_complete_2	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__on_chunk_extension_value_complete_2,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__on_chunk_extension_value_complete_3	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__on_chunk_extension_value_complete_3,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__on_header_field_complete	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__on_header_field_complete,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__on_header_value_complete	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__on_header_value_complete,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__on_message_complete_2	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__on_message_complete_2,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__on_method_complete	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__on_method_complete,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__on_method_complete_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__on_method_complete_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__on_version_complete	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__on_version_complete,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_llhttp__on_version_complete_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_llhttp__on_version_complete_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_load_header_state	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_load_header_state,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_load_method_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_load_method_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_load_type	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_load_type,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_test_lenient_flags_10	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_test_lenient_flags_10,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_test_lenient_flags_17	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_test_lenient_flags_17,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_test_lenient_flags_30	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_test_lenient_flags_30,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_test_lenient_flags_9	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_test_lenient_flags_9,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_update_content_length_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_update_content_length_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_update_finish	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_update_finish,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_invoke_update_type_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_invoke_update_type_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_pause_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_pause_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_first_space_before_url	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_first_space_before_url,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_http_complete	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_http_complete,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_http_complete_crlf	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_http_complete_crlf,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_http_dot	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_http_dot,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_http_major	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_http_major,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_http_minor	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_http_minor,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_http_start	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_http_start,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_http_start_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_http_start_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_http_start_2	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_http_start_2,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_http_start_3	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_http_start_3,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_or_res_method	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_or_res_method,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_or_res_method_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_or_res_method_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_or_res_method_2	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_or_res_method_2,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_or_res_method_3	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_or_res_method_3,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_pri_upgrade	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_pri_upgrade,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_req_spaces_before_url	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_req_spaces_before_url,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_res_after_version	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_res_after_version,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_res_http_dot	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_res_http_dot,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_res_http_major	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_res_http_major,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_res_http_minor	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_res_http_minor,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_res_line_almost_done	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_res_line_almost_done,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_res_status	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_res_status,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_res_status_code_digit_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_res_status_code_digit_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_res_status_code_digit_2	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_res_status_code_digit_2,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_res_status_code_digit_3	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_res_status_code_digit_3,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_res_status_code_otherwise	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_res_status_code_otherwise,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_end_stub_query_3	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_end_stub_query_3,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_end_stub_schema	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_end_stub_schema,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_body	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_body,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_body_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_body_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_body_2	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_body_2,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_chunk_extension_name	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_chunk_extension_name,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_chunk_extension_value	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_chunk_extension_value,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_header_field	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_header_field,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_header_value	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_header_value,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_header_value_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_header_value_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_method	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_method,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_method_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_method_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_status	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_status,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_url	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_url,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_url_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_url_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_version	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_version,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_llhttp__on_version_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_llhttp__on_version_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_stub_path	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_stub_path,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_stub_path_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_stub_path_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_span_start_stub_path_2	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_span_start_stub_path_2,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_start	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_start,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_start_req_or_res	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_start_req_or_res,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_start_res	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_start_res,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_entry_connect	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_entry_connect,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_entry_normal	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_entry_normal,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_fragment	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_fragment,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_path	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_path,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_query	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_query,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_query_or_fragment	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_query_or_fragment,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_schema	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_schema,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_schema_delim	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_schema_delim,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_schema_delim_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_schema_delim_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_server	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_server,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_server_with_at	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_server_with_at,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_skip_lf_to_http09	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_skip_lf_to_http09,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_skip_lf_to_http09_1	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_skip_lf_to_http09_1,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_skip_to_http	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_skip_to_http,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_skip_to_http09	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_skip_to_http09,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_start	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_start,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_to_http	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_to_http,$/;"	e	enum:llparse_state_e	file:
s_n_llhttp__internal__n_url_to_http_09	my_project/libgit2/deps/llhttp/llhttp.c	/^  s_n_llhttp__internal__n_url_to_http_09,$/;"	e	enum:llparse_state_e	file:
s_timer_run	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^static cl_perf_timer s_timer_run = CL_PERF_TIMER_INIT;$/;"	v	typeref:typename:cl_perf_timer	file:
s_timer_test	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^static cl_perf_timer s_timer_test = CL_PERF_TIMER_INIT;$/;"	v	typeref:typename:cl_perf_timer	file:
s_trace_level	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^static int s_trace_level = GIT_TRACE_NONE;$/;"	v	typeref:typename:int	file:
s_trace_loaded	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^static int s_trace_loaded = 0;$/;"	v	typeref:typename:int	file:
s_trace_method	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^static struct method *s_trace_method = NULL;$/;"	v	typeref:struct:method *	file:
s_trace_tests	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^static int s_trace_tests = 0;$/;"	v	typeref:typename:int	file:
s_xdalgoenv	my_project/libgit2/deps/xdiff/xdiffi.h	/^typedef struct s_xdalgoenv {$/;"	s
s_xdchange	my_project/libgit2/deps/xdiff/xdiffi.h	/^typedef struct s_xdchange {$/;"	s
s_xdemitcb	my_project/libgit2/deps/xdiff/xdiff.h	/^typedef struct s_xdemitcb {$/;"	s
s_xdemitconf	my_project/libgit2/deps/xdiff/xdiff.h	/^typedef struct s_xdemitconf {$/;"	s
s_xdfenv	my_project/libgit2/deps/xdiff/xtypes.h	/^typedef struct s_xdfenv {$/;"	s
s_xdfile	my_project/libgit2/deps/xdiff/xtypes.h	/^typedef struct s_xdfile {$/;"	s
s_xdlclass	my_project/libgit2/deps/xdiff/xprepare.c	/^typedef struct s_xdlclass {$/;"	s	file:
s_xdlclassifier	my_project/libgit2/deps/xdiff/xprepare.c	/^typedef struct s_xdlclassifier {$/;"	s	file:
s_xdmerge	my_project/libgit2/deps/xdiff/xmerge.c	/^typedef struct s_xdmerge {$/;"	s	file:
s_xdpsplit	my_project/libgit2/deps/xdiff/xdiffi.c	/^typedef struct s_xdpsplit {$/;"	s	file:
s_xmparam	my_project/libgit2/deps/xdiff/xdiff.h	/^typedef struct s_xmparam {$/;"	s
s_xpparam	my_project/libgit2/deps/xdiff/xdiff.h	/^typedef struct s_xpparam {$/;"	s
s_xrecord	my_project/libgit2/deps/xdiff/xtypes.h	/^typedef struct s_xrecord {$/;"	s
safe_crlf	my_project/libgit2/src/libgit2/crlf.c	/^	int safe_crlf;$/;"	m	struct:crlf_attrs	typeref:typename:int	file:
safe_hash	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^	int safe_hash;$/;"	m	struct:__anon09d552690108	typeref:typename:int
safecrlf	my_project/libgit2/tests/libgit2/index/crlf.c	/^	const char *safecrlf;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
same_suspect	my_project/libgit2/src/libgit2/blame_git.c	/^static bool same_suspect(git_blame__origin *a, git_blame__origin *b)$/;"	f	typeref:typename:bool	file:
sandbox	my_project/libgit2/tests/libgit2/merge/analysis.c	/^static git_repository *sandbox;$/;"	v	typeref:typename:git_repository *	file:
sandbox_path	my_project/libgit2/tests/libgit2/config/conditionals.c	/^static char *sandbox_path(git_str *buf, const char *suffix)$/;"	f	typeref:typename:char *	file:
sane	my_project/libgit2/deps/zlib/inflate.h	/^    int sane;                   \/* if false, allow invalid distance too far *\/$/;"	m	struct:inflate_state	typeref:typename:int
sane_ctype	my_project/libgit2/src/util/wildmatch.c	/^static const unsigned char sane_ctype[256] = {$/;"	v	typeref:typename:const unsigned char[256]	file:
sane_istest	my_project/libgit2/src/util/wildmatch.c	/^#define sane_istest(/;"	d	file:
sanitized_remote_url	my_project/libgit2/src/libgit2/fetchhead.c	/^static char *sanitized_remote_url(const char *remote_url)$/;"	f	typeref:typename:char *	file:
save_cache	my_project/libgit2/tests/clar/generate.py	/^    def save_cache(self):$/;"	m	class:TestSuite
save_capture_last	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define save_capture_last /;"	d	file:
save_early_response	my_project/libgit2/src/libgit2/transports/httpclient.c	/^GIT_INLINE(void) save_early_response($/;"	f	typeref:typename:void
save_entry	my_project/libgit2/src/libgit2/indexer.c	/^static int save_entry(git_indexer *idx, struct entry *entry, struct git_pack_entry *pentry, off6/;"	f	typeref:typename:int	file:
save_mark	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define save_mark /;"	d	file:
save_offset1	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define save_offset1 /;"	d	file:
save_offset2	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define save_offset2 /;"	d	file:
save_offset3	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define save_offset3 /;"	d	file:
saved_capture_last	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int saved_capture_last;         \/* Last capture number *\/$/;"	m	struct:recursion_info	typeref:typename:int
saved_eptr	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define saved_eptr /;"	d	file:
saved_max	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int saved_max;                  \/* Number of saved offsets *\/$/;"	m	struct:recursion_info	typeref:typename:int
scanA	my_project/libgit2/deps/xdiff/xhistogram.c	/^static int scanA(struct histindex *index, int line1, int count1)$/;"	f	typeref:typename:int	file:
scan_prefix	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static int scan_prefix(compiler_common *common, pcre_uchar *cc, pcre_uchar *chars, int max_chars/;"	f	typeref:typename:int	file:
scan_tree	my_project/libgit2/deps/zlib/trees.c	/^local void scan_tree(deflate_state *s, ct_data *tree, int max_code) {$/;"	f	typeref:typename:local void
scanned	my_project/libgit2/src/libgit2/blame.h	/^	bool scanned;$/;"	m	struct:git_blame__entry	typeref:typename:bool
schannel_certificate	my_project/libgit2/src/libgit2/streams/schannel.c	/^static int schannel_certificate(git_cert **out, git_stream *stream)$/;"	f	typeref:typename:int	file:
schannel_close	my_project/libgit2/src/libgit2/streams/schannel.c	/^static int schannel_close(git_stream *stream)$/;"	f	typeref:typename:int	file:
schannel_connect	my_project/libgit2/src/libgit2/streams/schannel.c	/^static int schannel_connect(git_stream *stream)$/;"	f	typeref:typename:int	file:
schannel_free	my_project/libgit2/src/libgit2/streams/schannel.c	/^static void schannel_free(git_stream *stream)$/;"	f	typeref:typename:void	file:
schannel_read	my_project/libgit2/src/libgit2/streams/schannel.c	/^static ssize_t schannel_read(git_stream *stream, void *_data, size_t data_len)$/;"	f	typeref:typename:ssize_t	file:
schannel_set_proxy	my_project/libgit2/src/libgit2/streams/schannel.c	/^static int schannel_set_proxy($/;"	f	typeref:typename:int	file:
schannel_state	my_project/libgit2/src/libgit2/streams/schannel.c	/^} schannel_state;$/;"	t	typeref:enum:__anonafd1b44a0103	file:
schannel_stream	my_project/libgit2/src/libgit2/streams/schannel.c	/^} schannel_stream;$/;"	t	typeref:struct:__anonafd1b44a0208	file:
schannel_stream_wrap	my_project/libgit2/src/libgit2/streams/schannel.c	/^static int schannel_stream_wrap($/;"	f	typeref:typename:int	file:
schannel_write	my_project/libgit2/src/libgit2/streams/schannel.c	/^static ssize_t schannel_write($/;"	f	typeref:typename:ssize_t	file:
scheme	my_project/libgit2/src/util/net.c	/^	const char *scheme;$/;"	m	struct:__anon850d8ea80108	typeref:typename:const char *	file:
scheme	my_project/libgit2/src/util/net.h	/^	char *scheme;$/;"	m	struct:git_net_url	typeref:typename:char *
scheme_for_challenge	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static git_http_auth_scheme *scheme_for_challenge(const char *challenge)$/;"	f	typeref:typename:git_http_auth_scheme *	file:
scheme_len	my_project/libgit2/src/util/net.c	/^	size_t scheme_len;$/;"	m	struct:__anon850d8ea80108	typeref:typename:size_t	file:
score	my_project/libgit2/src/libgit2/blame.h	/^	unsigned score;$/;"	m	struct:git_blame__entry	typeref:typename:unsigned
score_add_split	my_project/libgit2/deps/xdiff/xdiffi.c	/^static void score_add_split(const struct split_measurement *m, struct split_score *s)$/;"	f	typeref:typename:void	file:
score_cmp	my_project/libgit2/deps/xdiff/xdiffi.c	/^static int score_cmp(struct split_score *s1, struct split_score *s2)$/;"	f	typeref:typename:int	file:
scp_invalid	my_project/libgit2/src/util/net.c	/^static int scp_invalid(const char *message)$/;"	f	typeref:typename:int	file:
script	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint8 script;     \/* ucp_Arabic, etc. *\/$/;"	m	struct:__anon9562267c0608	typeref:typename:pcre_uint8
scurr	my_project/libgit2/deps/xdiff/xtypes.h	/^	long scurr;$/;"	m	struct:s_chastore	typeref:typename:long
sdb_mainloop	sdb.c	/^void sdb_mainloop() {$/;"	f	typeref:typename:void
sdb_set_batch_mode	sdb.c	/^void sdb_set_batch_mode() {$/;"	f	typeref:typename:void
search_object	my_project/libgit2/tests/libgit2/odb/backend/backend_helpers.c	/^static int search_object(const fake_object **out, fake_backend *fake, const git_oid *oid, size_t/;"	f	typeref:typename:int	file:
search_requested_char	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE struct sljit_jump *search_requested_char(compiler_common *common, pcre_uchar/;"	f	typeref:typename:SLJIT_INLINE struct sljit_jump *	file:
second	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^		const char *second;$/;"	m	struct:test_refs_branches_create__name_vs_namespace::item	typeref:typename:const char *	file:
second	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^		const char *second;$/;"	m	struct:test_refs_branches_create__name_vs_namespace_fail::item	typeref:typename:const char *	file:
second section	my_project/libgit2/tests/resources/userdiff/after/file.html	/^  <h1 id="second section">$/;"	I
second section	my_project/libgit2/tests/resources/userdiff/before/file.html	/^  <h1 id="second section">$/;"	I
second section	my_project/libgit2/tests/resources/userdiff/expected/driver/diff.html	/^@@ -23,3 +24,4 @@ <h1 id="second section">$/;"	I
second section	my_project/libgit2/tests/resources/userdiff/files/file.html	/^  <h1 id="second section">$/;"	I
second_tree	my_project/libgit2/tests/libgit2/object/tree/write.c	/^static const char *second_tree = "f60079018b664e4e79329a7ef9559c8d9e0378d1";$/;"	v	typeref:typename:const char *	file:
seconds	my_project/libgit2/include/git2/index.h	/^	int32_t seconds;$/;"	m	struct:__anonf38c49720108	typeref:typename:int32_t
seconds	my_project/libgit2/src/libgit2/index.c	/^	uint32_t seconds;$/;"	m	struct:entry_time	typeref:typename:uint32_t	file:
section	my_project/libgit2/src/libgit2/config_file.c	/^	const char *section;$/;"	m	struct:write_data	typeref:typename:const char *	file:
security	my_project/libgit2/src/util/win32/posix_w32.c	/^	SECURITY_ATTRIBUTES security;$/;"	m	struct:open_opts	typeref:typename:SECURITY_ATTRIBUTES	file:
seed_packbuilder	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static void seed_packbuilder(void)$/;"	f	typeref:typename:void	file:
seek	my_project/libgit2/deps/zlib/gzguts.h	/^    int seek;               \/* true if seek request pending *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:int
seek_back_trailer	my_project/libgit2/src/libgit2/indexer.c	/^static int seek_back_trailer(git_indexer *idx)$/;"	f	typeref:typename:int	file:
seek_forward	my_project/libgit2/src/libgit2/index.c	/^#define seek_forward(/;"	d	file:
seen	my_project/libgit2/src/libgit2/commit_list.h	/^	unsigned int seen:1,$/;"	m	struct:git_commit_list_node	typeref:typename:unsigned int:1
seen	my_project/libgit2/src/libgit2/pack-objects.c	/^		seen:1;$/;"	m	struct:walk_object	typeref:typename:unsigned int:1	file:
seen	my_project/libgit2/tests/libgit2/config/memory.c	/^	int seen;$/;"	m	struct:expected_entry	typeref:typename:int	file:
seen	my_project/libgit2/tests/libgit2/notes/notes.c	/^	unsigned seen;$/;"	m	struct:note_create_payload	typeref:typename:unsigned	file:
seen	my_project/libgit2/tests/util/strmap.c	/^		int seen;$/;"	m	struct:test_strmap__iteration::__anon7435b5230108	typeref:typename:int	file:
seen_capabilities	my_project/libgit2/src/libgit2/transports/smart.h	/^	unsigned int seen_capabilities: 1;$/;"	m	struct:__anonb9ceeb0b0d08	typeref:typename:unsigned int:1
seen_paths	my_project/libgit2/tests/libgit2/stash/apply.c	/^struct seen_paths {$/;"	s	file:
select_service	my_project/libgit2/src/libgit2/transports/http.c	/^static const http_service *select_service(git_smart_service_t action)$/;"	f	typeref:typename:const http_service *	file:
send_all_trees	my_project/libgit2/deps/zlib/trees.c	/^local void send_all_trees(deflate_state *s, int lcodes, int dcodes,$/;"	f	typeref:typename:local void
send_bits	my_project/libgit2/deps/zlib/trees.c	/^#define send_bits(/;"	d	file:
send_bits	my_project/libgit2/deps/zlib/trees.c	/^local void send_bits(deflate_state *s, int value, int length) {$/;"	f	typeref:typename:local void
send_code	my_project/libgit2/deps/zlib/trees.c	/^#  define send_code(/;"	d	file:
send_command	my_project/libgit2/src/libgit2/transports/git.c	/^static int send_command(git_proto_stream *s)$/;"	f	typeref:typename:int	file:
send_command	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int send_command(ssh_stream *s)$/;"	f	typeref:typename:int	file:
send_probe	my_project/libgit2/src/libgit2/transports/http.c	/^static int send_probe(http_stream *stream)$/;"	f	typeref:typename:int	file:
send_request	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int send_request(winhttp_stream *s, size_t len, bool chunked)$/;"	f	typeref:typename:int	file:
send_tree	my_project/libgit2/deps/zlib/trees.c	/^local void send_tree(deflate_state *s, ct_data *tree, int max_code) {$/;"	f	typeref:typename:local void
sent_command	my_project/libgit2/src/libgit2/transports/git.c	/^	unsigned sent_command : 1;$/;"	m	struct:__anoneb1923e30108	typeref:typename:unsigned:1	file:
sent_command	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^	unsigned sent_command : 1;$/;"	m	struct:__anonf54f66e30108	typeref:typename:unsigned:1	file:
sent_file_header	my_project/libgit2/src/libgit2/diff_print.c	/^	unsigned int sent_file_header;$/;"	m	struct:__anon0d2887b50108	typeref:typename:unsigned int	file:
sent_request	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	unsigned sent_request : 1,$/;"	m	struct:__anon5ba854ad0208	typeref:typename:unsigned:1	file:
serialize_reflog_entry	my_project/libgit2/src/libgit2/refdb_fs.c	/^static int serialize_reflog_entry($/;"	f	typeref:typename:int	file:
server	my_project/libgit2/src/libgit2/transports/http.c	/^	http_server server;$/;"	m	struct:__anon515ae8bf0508	typeref:typename:http_server	file:
server	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_http_server server;$/;"	m	struct:git_http_client	typeref:typename:git_http_server	file:
server	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	winhttp_server server;$/;"	m	struct:__anon5ba854ad0408	typeref:typename:winhttp_server	file:
server_auth_credtypes	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	unsigned server_auth_credtypes;   \/**< Supported cred types for remote *\/$/;"	m	struct:__anon3d590bc30308	typeref:typename:unsigned
server_auth_schemetypes	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	unsigned server_auth_schemetypes; \/**< Schemes requested by remote *\/$/;"	m	struct:__anon3d590bc30308	typeref:typename:unsigned
server_certificate_check_cb	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	git_transport_certificate_check_cb server_certificate_check_cb;$/;"	m	struct:__anon3d590bc30408	typeref:typename:git_transport_certificate_check_cb
server_certificate_check_payload	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	void *server_certificate_check_payload;$/;"	m	struct:__anon3d590bc30408	typeref:typename:void *
server_connect	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int server_connect(git_http_client *client)$/;"	f	typeref:typename:int	file:
server_connect_stream	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int server_connect_stream($/;"	f	typeref:typename:int	file:
server_create_stream	my_project/libgit2/src/libgit2/transports/httpclient.c	/^GIT_INLINE(int) server_create_stream(git_http_server *server)$/;"	f	typeref:typename:int
server_setup_from_url	my_project/libgit2/src/libgit2/transports/httpclient.c	/^GIT_INLINE(int) server_setup_from_url($/;"	f	typeref:typename:int
service	my_project/libgit2/src/libgit2/transports/http.c	/^	const http_service *service;$/;"	m	struct:__anon515ae8bf0308	typeref:typename:const http_service *	file:
service	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	const char *service;$/;"	m	struct:__anon5ba854ad0208	typeref:typename:const char *	file:
service_url	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	const char *service_url;$/;"	m	struct:__anon5ba854ad0208	typeref:typename:const char *	file:
session	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^	LIBSSH2_SESSION *session;$/;"	m	struct:__anonf54f66e30108	typeref:typename:LIBSSH2_SESSION *	file:
session	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	HINTERNET session;$/;"	m	struct:__anon5ba854ad0408	typeref:typename:HINTERNET	file:
session_key	my_project/libgit2/src/libgit2/attr_file.h	/^	int session_key;$/;"	m	struct:__anon0df92d8f0708	typeref:typename:int
set_and_get	my_project/libgit2/tests/libgit2/threads/tlsdata.c	/^static void *set_and_get(void *param)$/;"	f	typeref:typename:void *	file:
set_certificate_lookup_error	my_project/libgit2/src/libgit2/streams/schannel.c	/^static int set_certificate_lookup_error(DWORD status)$/;"	f	typeref:typename:int	file:
set_certificate_validation_error	my_project/libgit2/src/libgit2/streams/schannel.c	/^static int set_certificate_validation_error(DWORD status)$/;"	f	typeref:typename:int	file:
set_challenge	my_project/libgit2/src/libgit2/transports/auth.h	/^	int (*set_challenge)(git_http_auth_context *ctx, const char *challenge);$/;"	m	struct:git_http_auth_context	typeref:typename:int (*)(git_http_auth_context * ctx,const char * challenge)
set_config	my_project/libgit2/src/libgit2/repository.c	/^static void set_config(git_repository *repo, git_config *config)$/;"	f	typeref:typename:void	file:
set_config_int	my_project/libgit2/tests/libgit2/diff/tree.c	/^static void set_config_int(git_repository *repo, const char *name, int value)$/;"	f	typeref:typename:void	file:
set_core_autocrlf_to	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^static void set_core_autocrlf_to(git_repository *repo, bool value)$/;"	f	typeref:typename:void	file:
set_core_autocrlf_to	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^static void set_core_autocrlf_to(git_repository *repo, bool value)$/;"	f	typeref:typename:void	file:
set_core_autocrlf_to	my_project/libgit2/tests/libgit2/rebase/merge.c	/^static void set_core_autocrlf_to(git_repository *repo, bool value)$/;"	f	typeref:typename:void	file:
set_data	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int set_data($/;"	f	typeref:typename:int	file:
set_errno	my_project/libgit2/src/util/win32/posix_w32.c	/^GIT_INLINE(void) set_errno(void)$/;"	f	typeref:typename:void
set_error	my_project/libgit2/src/libgit2/tree.c	/^GIT_INLINE(void) set_error(const char *str, const char *path)$/;"	f	typeref:typename:void
set_error	my_project/libgit2/src/util/errors.c	/^static void set_error(int error_class, char *string)$/;"	f	typeref:typename:void	file:
set_error	my_project/libgit2/tests/libgit2/threads/basic.c	/^static void *set_error(void *dummy)$/;"	f	typeref:typename:void *	file:
set_error_from_buffer	my_project/libgit2/src/util/errors.c	/^static void set_error_from_buffer(int error_class)$/;"	f	typeref:typename:void	file:
set_gitattributes_to	my_project/libgit2/tests/libgit2/merge/driver.c	/^static void set_gitattributes_to(const char *driver)$/;"	f	typeref:typename:void	file:
set_global_search_path_from_env	my_project/libgit2/tests/libgit2/core/env.c	/^static void set_global_search_path_from_env(void)$/;"	f	typeref:typename:void	file:
set_head	my_project/libgit2/tests/libgit2/config/conditionals.c	/^static void set_head(git_repository *repo, const char *name)$/;"	f	typeref:typename:void	file:
set_index	my_project/libgit2/src/libgit2/repository.c	/^static void set_index(git_repository *repo, git_index *index)$/;"	f	typeref:typename:void	file:
set_jumps	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE void set_jumps(jump_list *list, struct sljit_label *label)$/;"	f	typeref:typename:SLJIT_INLINE void	file:
set_method	my_project/libgit2/tests/clar/clar_libgit2_trace.c	/^static int set_method(const char *name)$/;"	f	typeref:typename:int	file:
set_nonblocking	my_project/libgit2/src/libgit2/streams/socket.c	/^static int set_nonblocking(GIT_SOCKET s)$/;"	f	typeref:typename:int	file:
set_nottype_bits	my_project/libgit2/deps/pcre/pcre_study.c	/^set_nottype_bits(pcre_uint8 *start_bits, int cbit_type, unsigned int table_limit,$/;"	f	typeref:typename:void	file:
set_odb	my_project/libgit2/src/libgit2/repository.c	/^static void set_odb(git_repository *repo, git_odb *odb)$/;"	f	typeref:typename:void	file:
set_parse_error	my_project/libgit2/src/libgit2/config_parse.c	/^static void set_parse_error(git_config_parser *reader, int col, const char *error_str)$/;"	f	typeref:typename:void	file:
set_private_data_ptrs	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void set_private_data_ptrs(compiler_common *common, int *private_data_start, pcre_uchar */;"	f	typeref:typename:void	file:
set_refdb	my_project/libgit2/src/libgit2/repository.c	/^static void set_refdb(git_repository *repo, git_refdb *refdb)$/;"	f	typeref:typename:void	file:
set_some_bits	my_project/libgit2/tests/util/bitvec.c	/^static void set_some_bits(git_bitvec *bv, size_t length)$/;"	f	typeref:typename:void	file:
set_sorting	my_project/libgit2/examples/log.c	/^static void set_sorting(struct log_state *s, unsigned int sort_mode)$/;"	f	typeref:typename:void	file:
set_start_bits	my_project/libgit2/deps/pcre/pcre_study.c	/^set_start_bits(const pcre_uchar *code, pcre_uint8 *start_bits, BOOL utf,$/;"	f	typeref:typename:int	file:
set_system_search_path_from_env	my_project/libgit2/tests/libgit2/core/env.c	/^static void set_system_search_path_from_env(void)$/;"	f	typeref:typename:void	file:
set_table_bit	my_project/libgit2/deps/pcre/pcre_study.c	/^set_table_bit(pcre_uint8 *start_bits, const pcre_uchar *p, BOOL caseless,$/;"	f	typeref:typename:const pcre_uchar *	file:
set_then_offsets	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static SLJIT_INLINE pcre_uchar *set_then_offsets(compiler_common *common, pcre_uchar *cc, sljit_/;"	f	typeref:typename:SLJIT_INLINE pcre_uchar *	file:
set_time_wayback	my_project/libgit2/tests/libgit2/odb/freshen.c	/^static void set_time_wayback(struct stat *out, const char *fn)$/;"	f	typeref:typename:void	file:
set_type_bits	my_project/libgit2/deps/pcre/pcre_study.c	/^set_type_bits(pcre_uint8 *start_bits, int cbit_type, unsigned int table_limit,$/;"	f	typeref:typename:void	file:
set_up_workingdir	my_project/libgit2/tests/libgit2/index/crlf.c	/^static void set_up_workingdir(const char *name)$/;"	f	typeref:typename:void	file:
set_url	my_project/libgit2/src/libgit2/remote.c	/^static int set_url(git_repository *repo, const char *remote, const char *pattern, const char *ur/;"	f	typeref:typename:int	file:
setenv_and_check	my_project/libgit2/tests/libgit2/core/env.c	/^static void setenv_and_check(const char *name, const char *value)$/;"	f	typeref:typename:void	file:
settings	my_project/libgit2/deps/llhttp/llhttp.h	/^  void* settings;$/;"	m	struct:llhttp__internal_s	typeref:typename:void *
settings	my_project/libgit2/src/libgit2/transports/httpparser.h	/^	git_http_parser_settings settings;$/;"	m	struct:git_http_parser	typeref:typename:git_http_parser_settings
settings_global_shutdown	my_project/libgit2/src/libgit2/settings.c	/^static void settings_global_shutdown(void)$/;"	f	typeref:typename:void	file:
setup	my_project/libgit2/tests/util/dirent.c	/^static void setup(walk_data *d)$/;"	f	typeref:typename:void	file:
setupCommands	my_project/libgit2/.vscode/launch.json	/^            "setupCommands": [$/;"	a	object:configurations.0
setup_backend	my_project/libgit2/tests/libgit2/config/memory.c	/^static void setup_backend(const char *cfg)$/;"	f	typeref:typename:void	file:
setup_backend	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^static void setup_backend(const fake_object *objs)$/;"	f	typeref:typename:void	file:
setup_caps	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int setup_caps($/;"	f	typeref:typename:int	file:
setup_default_allocator	my_project/libgit2/src/util/alloc.c	/^static int setup_default_allocator(void)$/;"	f	typeref:typename:int	file:
setup_fixture_submod2	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.c	/^git_repository *setup_fixture_submod2(void)$/;"	f	typeref:typename:git_repository *
setup_fixture_submod3	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.c	/^git_repository *setup_fixture_submod3(void)$/;"	f	typeref:typename:git_repository *
setup_fixture_submodule_simple	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.c	/^git_repository *setup_fixture_submodule_simple(void)$/;"	f	typeref:typename:git_repository *
setup_fixture_submodule_with_path	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.c	/^git_repository *setup_fixture_submodule_with_path(void)$/;"	f	typeref:typename:git_repository *
setup_fixture_submodules	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.c	/^git_repository *setup_fixture_submodules(void)$/;"	f	typeref:typename:git_repository *
setup_fixture_super	my_project/libgit2/tests/libgit2/submodule/submodule_helpers.c	/^git_repository *setup_fixture_super(void)$/;"	f	typeref:typename:git_repository *
setup_fixture_worktree	my_project/libgit2/tests/libgit2/worktree/worktree_helpers.c	/^void setup_fixture_worktree(worktree_fixture *fixture)$/;"	f	typeref:typename:void
setup_hosts	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static int setup_hosts($/;"	f	typeref:typename:int	file:
setup_namespace	my_project/libgit2/src/libgit2/refdb_fs.c	/^static char *setup_namespace(git_repository *repo, const char *in)$/;"	f	typeref:typename:char *	file:
setup_pathspecs	my_project/libgit2/src/libgit2/checkout.c	/^GIT_INLINE(void) setup_pathspecs($/;"	f	typeref:typename:void
setup_prefix_query	my_project/libgit2/tests/libgit2/odb/mixed.c	/^static void setup_prefix_query($/;"	f	typeref:typename:void	file:
setup_race	my_project/libgit2/tests/libgit2/index/racy.c	/^static void setup_race(void)$/;"	f	typeref:typename:void	file:
setup_repo	my_project/libgit2/tests/libgit2/repo/template.c	/^static void setup_repo(const char *name, git_repository_init_options *opts)$/;"	f	typeref:typename:void	file:
setup_repository_and_backend	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^static void setup_repository_and_backend(void)$/;"	f	typeref:typename:void	file:
setup_repository_and_backend	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^static void setup_repository_and_backend(void)$/;"	f	typeref:typename:void	file:
setup_shallow_roots	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int setup_shallow_roots($/;"	f	typeref:typename:int	file:
setup_simple_state	my_project/libgit2/tests/libgit2/repo/state.c	/^static void setup_simple_state(const char *filename)$/;"	f	typeref:typename:void	file:
setup_stash	my_project/libgit2/tests/libgit2/stash/stash_helpers.c	/^void setup_stash(git_repository *repo, git_signature *signature)$/;"	f	typeref:typename:void
setup_stream	my_project/libgit2/src/libgit2/filter.c	/^static int setup_stream($/;"	f	typeref:typename:int	file:
setup_templates	my_project/libgit2/tests/libgit2/repo/template.c	/^static void setup_templates(const char *name, bool setup_globally)$/;"	f	typeref:typename:void	file:
setup_tracking_config	my_project/libgit2/src/libgit2/clone.c	/^static int setup_tracking_config($/;"	f	typeref:typename:int	file:
setup_trees	my_project/libgit2/tests/libgit2/threads/diff.c	/^static void setup_trees(void)$/;"	f	typeref:typename:void	file:
setup_uptodate_files	my_project/libgit2/tests/libgit2/index/racy.c	/^static void setup_uptodate_files(void)$/;"	f	typeref:typename:void	file:
setup_values_backend	my_project/libgit2/tests/libgit2/config/memory.c	/^static void setup_values_backend(const char **values, size_t len)$/;"	f	typeref:typename:void	file:
sha	my_project/libgit2/tests/libgit2/checkout/index.c	/^	const char *sha;$/;"	m	struct:notify_data	typeref:typename:const char *	file:
sha	my_project/libgit2/tests/libgit2/object/cache.c	/^	const char *sha;$/;"	m	struct:__anon393b45750108	typeref:typename:const char *	file:
sha1	my_project/libgit2/src/libgit2/commit_graph.c	/^	git_oid sha1;$/;"	m	struct:packed_commit	typeref:typename:git_oid	file:
sha1	my_project/libgit2/src/libgit2/commit_graph.h	/^	git_oid sha1;$/;"	m	struct:git_commit_graph_entry	typeref:typename:git_oid
sha1	my_project/libgit2/src/libgit2/describe.c	/^	git_oid sha1;$/;"	m	struct:commit_name	typeref:typename:git_oid	file:
sha1	my_project/libgit2/src/libgit2/midx.h	/^	git_oid sha1;$/;"	m	struct:git_midx_entry	typeref:typename:git_oid
sha1	my_project/libgit2/src/util/hash.h	/^		git_hash_sha1_ctx sha1;$/;"	m	union:git_hash_ctx::__anon187871ca030a	typeref:typename:git_hash_sha1_ctx
sha1_bswap32	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define sha1_bswap32(/;"	d	file:
sha1_compression	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^void sha1_compression(uint32_t ihv[5], const uint32_t m[16])$/;"	f	typeref:typename:void
sha1_compression_W	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^static void sha1_compression_W(uint32_t ihv[5], const uint32_t W[80])$/;"	f	typeref:typename:void	file:
sha1_compression_states	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^void sha1_compression_states(uint32_t ihv[5], const uint32_t m[16], uint32_t W[80], uint32_t sta/;"	f	typeref:typename:void
sha1_dvs	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^dv_info_t sha1_dvs[] =$/;"	v	typeref:typename:dv_info_t[]
sha1_f1	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define sha1_f1(/;"	d	file:
sha1_f2	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define sha1_f2(/;"	d	file:
sha1_f3	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define sha1_f3(/;"	d	file:
sha1_f4	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define sha1_f4(/;"	d	file:
sha1_file	my_project/libgit2/tests/util/sha1.c	/^static int sha1_file(unsigned char *out, const char *filename)$/;"	f	typeref:typename:int	file:
sha1_handle	my_project/libgit2/src/util/hash/win32.c	/^	HANDLE \/* BCRYPT_ALG_HANDLE *\/ sha1_handle;$/;"	m	struct:cng_provider	typeref:typename:HANDLE	file:
sha1_load	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^	#define sha1_load(/;"	d	file:
sha1_mix	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define sha1_mix(/;"	d	file:
sha1_object_size	my_project/libgit2/src/util/hash/win32.c	/^	DWORD sha1_object_size;$/;"	m	struct:cng_provider	typeref:typename:DWORD	file:
sha1_padding	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^static const unsigned char sha1_padding[64] =$/;"	v	typeref:typename:const unsigned char[64]	file:
sha1_process	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^static void sha1_process(SHA1_CTX *ctx, const uint32_t block[16])$/;"	f	typeref:typename:void	file:
sha1_rawcontent_is_valid	my_project/libgit2/tests/libgit2/object/validate.c	/^# define sha1_rawcontent_is_valid(/;"	d	file:
sha1_recompression_step	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^static void sha1_recompression_step(uint32_t step, uint32_t ihvin[5], uint32_t ihvout[5], const /;"	f	file:
sha1_recompression_type	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^typedef void(*sha1_recompression_type)(uint32_t*, uint32_t*, const uint32_t*, const uint32_t*);$/;"	t	typeref:typename:void (*)(uint32_t *,uint32_t *,const uint32_t *,const uint32_t *)
sha1_store	my_project/libgit2/src/util/hash/sha1dc/sha1.c	/^#define sha1_store(/;"	d	file:
sha256	my_project/libgit2/src/util/hash.h	/^		git_hash_sha256_ctx sha256;$/;"	m	union:git_hash_ctx::__anon187871ca030a	typeref:typename:git_hash_sha256_ctx
sha256_file	my_project/libgit2/tests/util/sha256.c	/^static int sha256_file(unsigned char *out, const char *filename)$/;"	f	typeref:typename:int	file:
sha256_handle	my_project/libgit2/src/util/hash/win32.c	/^	HANDLE \/* BCRYPT_ALG_HANDLE *\/ sha256_handle;$/;"	m	struct:cng_provider	typeref:typename:HANDLE	file:
sha256_object_size	my_project/libgit2/src/util/hash/win32.c	/^	DWORD sha256_object_size;$/;"	m	struct:cng_provider	typeref:typename:DWORD	file:
shaBadParam	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    shaBadParam         \/* passed a bad parameter *\/$/;"	e	enum:__anon4de7e74e0103
shaInputTooLong	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    shaInputTooLong,    \/* input data too long *\/$/;"	e	enum:__anon4de7e74e0103
shaNull	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    shaNull,            \/* Null pointer parameter *\/$/;"	e	enum:__anon4de7e74e0103
shaStateError	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    shaStateError,      \/* called Input after FinalBits or Result *\/$/;"	e	enum:__anon4de7e74e0103
shaSuccess	my_project/libgit2/src/util/hash/rfc6234/sha.h	/^    shaSuccess = 0,$/;"	e	enum:__anon4de7e74e0103
shallow	my_project/libgit2/src/libgit2/transports/smart.h	/^	             shallow:1,$/;"	m	struct:transport_smart_caps	typeref:typename:unsigned int:1
shallow_grafts	my_project/libgit2/src/libgit2/repository.h	/^	git_grafts *shallow_grafts;$/;"	m	struct:git_repository	typeref:typename:git_grafts *
shallow_pkt	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int shallow_pkt($/;"	f	typeref:typename:int	file:
shallow_roots	my_project/libgit2/include/git2/sys/transport.h	/^	git_oid *shallow_roots;$/;"	m	struct:__anon4efa7c750108	typeref:typename:git_oid *
shallow_roots	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_array_oid_t shallow_roots;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:git_array_oid_t
shallow_roots_len	my_project/libgit2/include/git2/sys/transport.h	/^	size_t shallow_roots_len;$/;"	m	struct:__anon4efa7c750108	typeref:typename:size_t
shared	my_project/libgit2/examples/init.c	/^	uint32_t shared;$/;"	m	struct:init_opts	typeref:typename:uint32_t	file:
sharing	my_project/libgit2/src/util/win32/posix_w32.c	/^	DWORD sharing;$/;"	m	struct:open_opts	typeref:typename:DWORD	file:
shift_hunks_by	my_project/libgit2/src/libgit2/blame.c	/^static void shift_hunks_by(git_vector *v, size_t start_line, int shift_by)$/;"	f	typeref:typename:void	file:
short_oid	my_project/libgit2/src/libgit2/odb_loose.c	/^	unsigned char short_oid[GIT_OID_MAX_HEXSIZE];$/;"	m	struct:__anon5ce333660408	typeref:typename:unsigned char[]	file:
short_oid_len	my_project/libgit2/src/libgit2/odb_loose.c	/^	size_t short_oid_len;$/;"	m	struct:__anon5ce333660408	typeref:typename:size_t	file:
short_tag_id	my_project/libgit2/tests/libgit2/object/tag/read.c	/^static const char *short_tag_id = "5da7760512a953e3c7c4e47e4392c7a4338fb729";$/;"	v	typeref:typename:const char *	file:
short_tagged_commit	my_project/libgit2/tests/libgit2/object/tag/read.c	/^static const char *short_tagged_commit = "4a5ed60bafcf4638b7c8356bd4ce1916bfede93c";$/;"	v	typeref:typename:const char *	file:
should_checkout	my_project/libgit2/src/libgit2/clone.c	/^static int should_checkout($/;"	f	typeref:typename:int	file:
should_expect_nsecs	my_project/libgit2/tests/libgit2/index/nsec.c	/^static bool should_expect_nsecs(void)$/;"	f	typeref:typename:bool	file:
should_force_header	my_project/libgit2/src/libgit2/diff_print.c	/^GIT_INLINE(int) should_force_header(const git_diff_delta *delta)$/;"	f	typeref:typename:int
should_remove_existing	my_project/libgit2/src/libgit2/checkout.c	/^static bool should_remove_existing(checkout_data *data)$/;"	f	typeref:typename:bool	file:
should_run	my_project/libgit2/ci/test.sh	/^should_run() {$/;"	f
should_run	my_project/libgit2/tests/util/link.c	/^static bool should_run(void)$/;"	f	typeref:typename:bool	file:
should_skip_binary	my_project/libgit2/src/libgit2/patch_generate.c	/^GIT_INLINE(bool) should_skip_binary(git_patch_generated *patch, git_diff_file *file)$/;"	f	typeref:typename:bool
should_write	my_project/libgit2/src/libgit2/index.h	/^	unsigned int should_write:1;$/;"	m	struct:__anon5b50d90d0108	typeref:typename:unsigned int:1
show	my_project/libgit2/include/git2/status.h	/^	git_status_show_t show;$/;"	m	struct:__anon6794a3fe0408	typeref:typename:git_status_show_t
show	my_project/simplegit-progit/lib/simplegit.rb	/^  def show(treeish = 'master')$/;"	f	class:SimpleGit
show_blob	my_project/libgit2/examples/cat-file.c	/^static void show_blob(const git_blob *blob)$/;"	f	typeref:typename:void	file:
show_branch	my_project/libgit2/examples/status.c	/^static void show_branch(git_repository *repo, int format)$/;"	f	typeref:typename:void	file:
show_commit	my_project/libgit2/examples/cat-file.c	/^static void show_commit(const git_commit *commit)$/;"	f	typeref:typename:void	file:
show_commit_oid_as_fallback	my_project/libgit2/include/git2/describe.h	/^	int show_commit_oid_as_fallback;$/;"	m	struct:git_describe_options	typeref:typename:int
show_diff	my_project/libgit2/examples/log.c	/^	int show_diff;$/;"	m	struct:log_options	typeref:typename:int	file:
show_help	my_project/libgit2/src/cli/cmd_cat_file.c	/^static int show_help;$/;"	v	typeref:typename:int	file:
show_help	my_project/libgit2/src/cli/cmd_clone.c	/^static int show_help, quiet, checkout = 1, bare;$/;"	v	typeref:typename:int	file:
show_help	my_project/libgit2/src/cli/cmd_config.c	/^static int show_help;$/;"	v	typeref:typename:int	file:
show_help	my_project/libgit2/src/cli/cmd_hash_object.c	/^static int show_help;$/;"	v	typeref:typename:int	file:
show_help	my_project/libgit2/src/cli/cmd_help.c	/^static int show_help;$/;"	v	typeref:typename:int	file:
show_help	my_project/libgit2/src/cli/cmd_index_pack.c	/^static int show_help, verbose, read_stdin;$/;"	v	typeref:typename:int	file:
show_help	my_project/libgit2/src/cli/main.c	/^static int show_help = 0;$/;"	v	typeref:typename:int	file:
show_log_size	my_project/libgit2/examples/log.c	/^	int show_log_size;$/;"	m	struct:log_options	typeref:typename:int	file:
show_oneline	my_project/libgit2/examples/log.c	/^	int show_oneline;$/;"	m	struct:log_options	typeref:typename:int	file:
show_origin	my_project/libgit2/src/cli/cmd_config.c	/^static int show_origin;$/;"	v	typeref:typename:int	file:
show_ref	my_project/libgit2/examples/for-each-ref.c	/^static int show_ref(git_reference *ref, void *data)$/;"	f	typeref:typename:int	file:
show_scope	my_project/libgit2/src/cli/cmd_config.c	/^static int show_scope;$/;"	v	typeref:typename:int	file:
show_suffix	my_project/libgit2/src/libgit2/describe.c	/^static int show_suffix($/;"	f	typeref:typename:int	file:
show_tag	my_project/libgit2/examples/cat-file.c	/^static void show_tag(const git_tag *tag)$/;"	f	typeref:typename:void	file:
show_tree	my_project/libgit2/examples/cat-file.c	/^static void show_tree(const git_tree *tree)$/;"	f	typeref:typename:void	file:
show_version	my_project/libgit2/src/cli/main.c	/^static int show_version = 0;$/;"	v	typeref:typename:int	file:
showbranch	my_project/libgit2/examples/status.c	/^	int showbranch;$/;"	m	struct:status_opts	typeref:typename:int	file:
showsubmod	my_project/libgit2/examples/status.c	/^	int showsubmod;$/;"	m	struct:status_opts	typeref:typename:int	file:
shutdown	my_project/libgit2/include/git2/sys/filter.h	/^	git_filter_shutdown_fn shutdown;$/;"	m	struct:git_filter	typeref:typename:git_filter_shutdown_fn
shutdown	my_project/libgit2/include/git2/sys/merge.h	/^	git_merge_driver_shutdown_fn shutdown;$/;"	m	struct:git_merge_driver	typeref:typename:git_merge_driver_shutdown_fn
shutdown	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int shutdown;$/;"	m	struct:bio_st	typeref:typename:int
shutdown	my_project/libgit2/tests/libgit2/merge/driver.c	/^	int shutdown;$/;"	m	struct:test_merge_driver	typeref:typename:int	file:
shutdown_callback	my_project/libgit2/src/util/runtime.c	/^static git_runtime_shutdown_fn shutdown_callback[32];$/;"	v	typeref:typename:git_runtime_shutdown_fn[32]	file:
shutdown_callback_count	my_project/libgit2/src/util/runtime.c	/^static git_atomic32 shutdown_callback_count;$/;"	v	typeref:typename:git_atomic32	file:
shutdown_common	my_project/libgit2/src/util/runtime.c	/^static void shutdown_common(void)$/;"	f	typeref:typename:void	file:
shutdown_libssh2	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static void shutdown_libssh2(void)$/;"	f	typeref:typename:void	file:
shutdown_ssl	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static void shutdown_ssl(void)$/;"	f	typeref:typename:void	file:
shutdown_ssl	my_project/libgit2/src/libgit2/streams/openssl.c	/^static void shutdown_ssl(void)$/;"	f	typeref:typename:void	file:
shutdown_ssl_locking	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^static void shutdown_ssl_locking(void)$/;"	f	typeref:typename:void	file:
shutdown_stream_registry	my_project/libgit2/src/libgit2/streams/registry.c	/^static void shutdown_stream_registry(void)$/;"	f	typeref:typename:void	file:
sid_dup	my_project/libgit2/src/util/fs_path.c	/^static PSID *sid_dup(PSID sid)$/;"	f	typeref:typename:PSID *	file:
side_band	my_project/libgit2/src/libgit2/transports/smart.h	/^	             side_band:1,$/;"	m	struct:transport_smart_caps	typeref:typename:unsigned int:1
side_band_64k	my_project/libgit2/src/libgit2/transports/smart.h	/^	             side_band_64k:1,$/;"	m	struct:transport_smart_caps	typeref:typename:unsigned int:1
sideband	my_project/libgit2/src/cli/progress.h	/^	git_str sideband;$/;"	m	struct:__anonb5f2ec150208	typeref:typename:git_str
sideband_cb	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^static int sideband_cb(const char *str, int len, void *payload)$/;"	f	typeref:typename:int	file:
sideband_error_pkt	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int sideband_error_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
sideband_progress	my_project/libgit2/examples/clone.c	/^static int sideband_progress(const char *str, int len, void *payload)$/;"	f	typeref:typename:int	file:
sideband_progress	my_project/libgit2/include/git2/remote.h	/^	git_transport_message_cb sideband_progress;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_transport_message_cb
sideband_progress_pkt	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int sideband_progress_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
sig	my_project/libgit2/src/libgit2/transaction.c	/^	git_signature *sig;$/;"	m	struct:__anonbebdb9760208	typeref:typename:git_signature *	file:
sign	my_project/libgit2/include/git2/types.h	/^	char sign; \/**< indicator for questionable '-0000' offsets in signature *\/$/;"	m	struct:git_time	typeref:typename:char
sign_callback	my_project/libgit2/include/git2/sys/credential.h	/^	git_credential_sign_cb sign_callback;$/;"	m	struct:git_credential_ssh_custom	typeref:typename:git_credential_sign_cb
signal	my_project/libgit2/src/util/process.h	/^	int signal;$/;"	m	struct:__anon3c78bdc50308	typeref:typename:int
signal_state	my_project/libgit2/src/util/unix/process.c	/^# define signal_state /;"	d	file:
signature	my_project/libgit2/src/libgit2/commit_graph.c	/^	uint32_t signature;$/;"	m	struct:git_commit_graph_header	typeref:typename:uint32_t	file:
signature	my_project/libgit2/src/libgit2/index.c	/^	char signature[4];$/;"	m	struct:index_extension	typeref:typename:char[4]	file:
signature	my_project/libgit2/src/libgit2/index.c	/^	uint32_t signature;$/;"	m	struct:index_header	typeref:typename:uint32_t	file:
signature	my_project/libgit2/src/libgit2/midx.c	/^	uint32_t signature;$/;"	m	struct:git_midx_header	typeref:typename:uint32_t	file:
signature	my_project/libgit2/tests/libgit2/rebase/inmemory.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	my_project/libgit2/tests/libgit2/rebase/iterator.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	my_project/libgit2/tests/libgit2/rebase/merge.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	my_project/libgit2/tests/libgit2/rebase/setup.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	my_project/libgit2/tests/libgit2/rebase/sign.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	my_project/libgit2/tests/libgit2/rebase/submodule.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	my_project/libgit2/tests/libgit2/stash/apply.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	my_project/libgit2/tests/libgit2/stash/drop.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	my_project/libgit2/tests/libgit2/stash/foreach.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	my_project/libgit2/tests/libgit2/stash/save.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature	my_project/libgit2/tests/libgit2/stash/submodules.c	/^static git_signature *signature;$/;"	v	typeref:typename:git_signature *	file:
signature_error	my_project/libgit2/src/libgit2/signature.c	/^static int signature_error(const char *msg)$/;"	f	typeref:typename:int	file:
signature_matches	my_project/libgit2/examples/log.c	/^static int signature_matches(const git_signature *sig, const char *filter) {$/;"	f	typeref:typename:int	file:
signature_parse_error	my_project/libgit2/src/libgit2/signature.c	/^static int signature_parse_error(const char *msg)$/;"	f	typeref:typename:int	file:
signing_cb	my_project/libgit2/include/git2/rebase.h	/^	int (*signing_cb)(git_buf *, git_buf *, const char *, void *);$/;"	m	struct:__anonf9a5428c0108	typeref:typename:int (*)(git_buf *,git_buf *,const char *,void *)
signing_cb_gpg	my_project/libgit2/tests/libgit2/rebase/sign.c	/^int signing_cb_gpg($/;"	f	typeref:typename:int
signing_cb_magic_field	my_project/libgit2/tests/libgit2/rebase/sign.c	/^int signing_cb_magic_field($/;"	f	typeref:typename:int
signing_cb_passthrough	my_project/libgit2/tests/libgit2/rebase/sign.c	/^int signing_cb_passthrough($/;"	f	typeref:typename:int
silly_tag	my_project/libgit2/tests/libgit2/object/tag/read.c	/^static const char *silly_tag = "object c054ccaefbf2da31c3b19178f9e3ef20a3867924\\n\\$/;"	v	typeref:typename:const char *	file:
similar_trees	my_project/libgit2/src/libgit2/iterator.c	/^	git_vector similar_trees;$/;"	m	struct:__anon2f88b95a0408	typeref:typename:git_vector	file:
similarity	my_project/libgit2/include/git2/diff.h	/^	uint16_t      similarity;  \/**< for RENAMED and COPIED, value 0-100 *\/$/;"	m	struct:__anon7f3f1dd30508	typeref:typename:uint16_t
similarity	my_project/libgit2/src/libgit2/diff_tform.c	/^	uint16_t similarity;$/;"	m	struct:__anon258239f00208	typeref:typename:uint16_t	file:
similarity	my_project/libgit2/src/libgit2/merge.c	/^	unsigned char similarity;$/;"	m	struct:merge_diff_similarity	typeref:typename:unsigned char	file:
similarity_get_file	my_project/libgit2/src/libgit2/diff_tform.c	/^GIT_INLINE(git_diff_file *) similarity_get_file(git_diff *diff, size_t idx)$/;"	f	typeref:typename:git_diff_file *
similarity_info	my_project/libgit2/src/libgit2/diff_tform.c	/^} similarity_info;$/;"	t	typeref:struct:__anon258239f00108	file:
similarity_init	my_project/libgit2/src/libgit2/diff_tform.c	/^static int similarity_init($/;"	f	typeref:typename:int	file:
similarity_measure	my_project/libgit2/src/libgit2/diff_tform.c	/^static int similarity_measure($/;"	f	typeref:typename:int	file:
similarity_sig	my_project/libgit2/src/libgit2/diff_tform.c	/^static int similarity_sig($/;"	f	typeref:typename:int	file:
similarity_unload	my_project/libgit2/src/libgit2/diff_tform.c	/^static void similarity_unload(similarity_info *info)$/;"	f	typeref:typename:void	file:
size	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 size;               \/* Total that was malloced *\/$/;"	m	struct:pcre_study_data	typeref:typename:pcre_uint32
size	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 size;               \/* Total that was malloced *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint32
size	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint32 size;               \/* Total that was malloced *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint32
size	my_project/libgit2/deps/xdiff/xdiff.h	/^	long size;$/;"	m	struct:s_mmbuffer	typeref:typename:long
size	my_project/libgit2/deps/xdiff/xdiff.h	/^	long size;$/;"	m	struct:s_mmfile	typeref:typename:long
size	my_project/libgit2/deps/xdiff/xprepare.c	/^	long size;$/;"	m	struct:s_xdlclass	typeref:typename:long	file:
size	my_project/libgit2/deps/xdiff/xtypes.h	/^	long size;$/;"	m	struct:s_xrecord	typeref:typename:long
size	my_project/libgit2/deps/zlib/gzguts.h	/^    unsigned size;          \/* buffer size, zero if not allocated yet *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:unsigned
size	my_project/libgit2/fuzzers/download_refs_fuzzer.c	/^	size_t size;$/;"	m	struct:fuzzer_buffer	typeref:typename:size_t	file:
size	my_project/libgit2/include/git2/buffer.h	/^	size_t size;$/;"	m	struct:__anon0ed367940108	typeref:typename:size_t
size	my_project/libgit2/include/git2/diff.h	/^	git_object_size_t  size;$/;"	m	struct:__anon7f3f1dd30408	typeref:typename:git_object_size_t
size	my_project/libgit2/include/git2/merge.h	/^	size_t size;$/;"	m	struct:__anon1374edca0108	typeref:typename:size_t
size	my_project/libgit2/script/user_model.c	/^	size_t asize, size;$/;"	m	struct:git_buf	typeref:typename:size_t	file:
size	my_project/libgit2/src/libgit2/blob.h	/^			git_object_size_t size;$/;"	m	struct:git_blob::__anon38237cb4010a::__anon38237cb40208	typeref:typename:git_object_size_t
size	my_project/libgit2/src/libgit2/cache.h	/^	size_t       size;$/;"	m	struct:__anon6f0f98290208	typeref:typename:size_t
size	my_project/libgit2/src/libgit2/hashsig.c	/^	int size, asize;$/;"	m	struct:__anon8885faf70108	typeref:typename:int	file:
size	my_project/libgit2/src/libgit2/mwindow.h	/^	off64_t size;$/;"	m	struct:git_mwindow_file	typeref:typename:off64_t
size	my_project/libgit2/src/libgit2/object.c	/^	size_t		size;	\/* size in bytes of the object structure *\/$/;"	m	struct:__anonc130b1670108	typeref:typename:size_t	file:
size	my_project/libgit2/src/libgit2/odb.c	/^	size_t size, written;$/;"	m	struct:__anon3125c0850208	typeref:typename:size_t	file:
size	my_project/libgit2/src/libgit2/odb_loose.c	/^	size_t	size; \/* object size *\/$/;"	m	struct:__anon5ce333660108	typeref:typename:size_t	file:
size	my_project/libgit2/src/libgit2/oid.c	/^	size_t node_count, size;$/;"	m	struct:git_oid_shorten	typeref:typename:size_t	file:
size	my_project/libgit2/src/libgit2/pack-objects.h	/^	size_t size;$/;"	m	struct:git_pobject	typeref:typename:size_t
size	my_project/libgit2/src/libgit2/pack.h	/^	size_t size;$/;"	m	struct:pack_chain_elem	typeref:typename:size_t
size	my_project/libgit2/src/util/futils.h	/^	uint64_t size;$/;"	m	struct:__anon45ee975d0408	typeref:typename:uint64_t
size	my_project/libgit2/src/util/pool.c	/^	size_t size;$/;"	m	struct:git_pool_page	typeref:typename:size_t	file:
size	my_project/libgit2/src/util/staticstr.h	/^	size_t size;$/;"	m	struct:__anon361876470108	typeref:typename:size_t
size	my_project/libgit2/src/util/str.h	/^	size_t size;$/;"	m	struct:git_str	typeref:typename:size_t
size	my_project/libgit2/tests/libgit2/object/cache.c	/^	size_t size;$/;"	m	struct:__anon393b45750108	typeref:typename:size_t	file:
size_multiple	my_project/libgit2/include/git2/sys/commit_graph.h	/^	float size_multiple;$/;"	m	struct:__anon6744c2020208	typeref:typename:float
size_t	my_project/libgit2/include/git2/common.h	/^typedef size_t size_t;$/;"	t	typeref:typename:size_t
sk_GENERAL_NAME_num	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int sk_GENERAL_NAME_num(const GENERAL_NAME *sk)$/;"	f	typeref:typename:int
sk_GENERAL_NAME_value	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^GENERAL_NAME *sk_GENERAL_NAME_value(const GENERAL_NAME *sk, int i)$/;"	f	typeref:typename:GENERAL_NAME *
sk_free	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void (*sk_free)(void *sk);$/;"	v	typeref:typename:void (*)(void * sk)
sk_num	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^int (*sk_num)(const void *sk);$/;"	v	typeref:typename:int (*)(const void * sk)
sk_value	my_project/libgit2/src/libgit2/streams/openssl_dynamic.c	/^void *(*sk_value)(const void *sk, int i);$/;"	v	typeref:typename:void * (*)(const void * sk,int i)
skip	my_project/libgit2/deps/zlib/gzguts.h	/^    z_off64_t skip;         \/* amount to skip (already rewound if backwards) *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:z_off64_t
skip	my_project/libgit2/examples/log.c	/^	int skip, limit;$/;"	m	struct:log_options	typeref:typename:int	file:
skip	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^	const char *skip;$/;"	m	struct:treewalk_skip_data	typeref:typename:const char *	file:
skip_addition	my_project/libgit2/tests/libgit2/apply/partial.c	/^static int skip_addition($/;"	f	typeref:typename:int	file:
skip_alpha	my_project/libgit2/src/util/date.c	/^static int skip_alpha(const char *date)$/;"	f	typeref:typename:int	file:
skip_arg_count	my_project/libgit2/deps/pcre/pcre_internal.h	/^  unsigned int skip_arg_count;    \/* For counting SKIP_ARGs *\/$/;"	m	struct:match_data	typeref:typename:unsigned int
skip_bom	my_project/libgit2/src/libgit2/config_parse.c	/^static int skip_bom(git_parse_ctx *parser)$/;"	f	typeref:typename:int	file:
skip_change	my_project/libgit2/tests/libgit2/apply/partial.c	/^static int skip_change($/;"	f	typeref:typename:int	file:
skip_char_back	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static void skip_char_back(compiler_common *common)$/;"	f	typeref:typename:void	file:
skip_deletion	my_project/libgit2/tests/libgit2/apply/partial.c	/^static int skip_deletion($/;"	f	typeref:typename:int	file:
skip_tree	my_project/libgit2/src/libgit2/iterator.c	/^	bool skip_tree;$/;"	m	struct:__anon2f88b95a0908	typeref:typename:bool	file:
skipped_new_lines	my_project/libgit2/src/libgit2/apply.c	/^	size_t skipped_new_lines;$/;"	m	struct:__anonf90645360208	typeref:typename:size_t	file:
skipped_old_lines	my_project/libgit2/src/libgit2/apply.c	/^	size_t skipped_old_lines;$/;"	m	struct:__anonf90645360208	typeref:typename:size_t	file:
sleep	my_project/libgit2/examples/common.h	/^# define sleep(/;"	d
slide_hash	my_project/libgit2/deps/zlib/deflate.c	/^local void slide_hash(deflate_state *s) {$/;"	f	typeref:typename:local void
sm	my_project/libgit2/tests/libgit2/stash/submodules.c	/^static git_submodule *sm;$/;"	v	typeref:typename:git_submodule *	file:
sm_lookup_cb	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^static int sm_lookup_cb(git_submodule *sm, const char *name, void *payload)$/;"	f	typeref:typename:int	file:
sm_lookup_data	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^} sm_lookup_data;$/;"	t	typeref:struct:__anon34b4ac340108	file:
smaller	my_project/libgit2/deps/zlib/trees.c	/^#define smaller(/;"	d	file:
smaller_value	my_project/libgit2/tests/util/sortedcache.c	/^	char smaller_value;$/;"	m	struct:__anonbd76c9710108	typeref:typename:char	file:
snake_cnt	my_project/libgit2/deps/xdiff/xdiffi.h	/^	long snake_cnt;$/;"	m	struct:s_xdalgoenv	typeref:typename:long
snap	my_project/libgit2/src/libgit2/index.h	/^	git_vector snap;$/;"	m	struct:git_index_iterator	typeref:typename:git_vector
snapshot	my_project/libgit2/tests/libgit2/config/snapshot.c	/^static git_config *snapshot;$/;"	v	typeref:typename:git_config *	file:
sncur	my_project/libgit2/deps/xdiff/xtypes.h	/^	chanode_t *sncur;$/;"	m	struct:s_chastore	typeref:typename:chanode_t *
snprintf	my_project/libgit2/deps/zlib/gzguts.h	/^#  define snprintf /;"	d
snprintf	my_project/libgit2/examples/common.h	/^#define snprintf /;"	d
socket_close	my_project/libgit2/src/libgit2/streams/socket.c	/^static int socket_close(git_stream *stream)$/;"	f	typeref:typename:int	file:
socket_connect	my_project/libgit2/src/libgit2/streams/socket.c	/^static int socket_connect(git_stream *stream)$/;"	f	typeref:typename:int	file:
socket_free	my_project/libgit2/src/libgit2/streams/socket.c	/^static void socket_free(git_stream *stream)$/;"	f	typeref:typename:void	file:
socket_read	my_project/libgit2/src/libgit2/streams/socket.c	/^static ssize_t socket_read($/;"	f	typeref:typename:ssize_t	file:
socket_stream_global_shutdown	my_project/libgit2/src/libgit2/streams/socket.c	/^static void socket_stream_global_shutdown(void)$/;"	f	typeref:typename:void	file:
socket_write	my_project/libgit2/src/libgit2/streams/socket.c	/^static ssize_t socket_write($/;"	f	typeref:typename:ssize_t	file:
some	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static object_data some = {$/;"	v	typeref:typename:object_data
some_bytes	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char some_bytes[] = {$/;"	v	typeref:typename:unsigned char[]
some_data	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static unsigned char some_data[] = {$/;"	v	typeref:typename:unsigned char[]
some_data	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char some_data[] = {$/;"	v	typeref:typename:unsigned char[]
some_id	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static char *some_id = "fd8430bc864cfcd5f10e5590f8a447e01b942bfe";$/;"	v	typeref:typename:char *
some_obj	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static git_rawobj some_obj = {$/;"	v	typeref:typename:git_rawobj
some_sha256	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static object_data some_sha256 = {$/;"	v	typeref:typename:object_data
sort_by_hash_and_name	my_project/libgit2/src/libgit2/attr_file.c	/^static int sort_by_hash_and_name(const void *a_raw, const void *b_raw)$/;"	f	typeref:typename:int	file:
sort_gnu_style	my_project/libgit2/src/cli/opt.c	/^static int sort_gnu_style(cli_opt_parser *parser)$/;"	f	typeref:typename:int	file:
sort_in_topological_order	my_project/libgit2/src/libgit2/revwalk.c	/^static int sort_in_topological_order(git_commit_list **out, git_revwalk *walk, git_commit_list */;"	f	typeref:typename:int	file:
sorted	my_project/libgit2/src/libgit2/refdb_fs.c	/^	             sorted : 1;$/;"	m	struct:refdb_fs_backend	typeref:typename:unsigned int:1	file:
sortedcache_clear	my_project/libgit2/src/util/sortedcache.c	/^static void sortedcache_clear(git_sortedcache *sc)$/;"	f	typeref:typename:void	file:
sortedcache_copy_item	my_project/libgit2/src/util/sortedcache.c	/^static int sortedcache_copy_item(void *payload, void *tgt_item, void *src_item)$/;"	f	typeref:typename:int	file:
sortedcache_free	my_project/libgit2/src/util/sortedcache.c	/^static void sortedcache_free(git_sortedcache *sc)$/;"	f	typeref:typename:void	file:
sortedcache_magic_cmp	my_project/libgit2/src/util/sortedcache.c	/^static int sortedcache_magic_cmp(const void *key, const void *value)$/;"	f	typeref:typename:int	file:
sortedcache_magic_key	my_project/libgit2/src/util/sortedcache.c	/^struct sortedcache_magic_key {$/;"	s	file:
sortedcache_test_reload	my_project/libgit2/tests/util/sortedcache.c	/^static void sortedcache_test_reload(git_sortedcache *sc)$/;"	f	typeref:typename:void	file:
sortedcache_test_struct	my_project/libgit2/tests/util/sortedcache.c	/^} sortedcache_test_struct;$/;"	t	typeref:struct:__anonbd76c9710108	file:
sortedcache_test_struct_cmp	my_project/libgit2/tests/util/sortedcache.c	/^static int sortedcache_test_struct_cmp(const void *a_, const void *b_)$/;"	f	typeref:typename:int	file:
sortedcache_test_struct_free	my_project/libgit2/tests/util/sortedcache.c	/^static void sortedcache_test_struct_free(void *payload, void *item_)$/;"	f	typeref:typename:void	file:
sorting	my_project/libgit2/examples/log.c	/^	int sorting;$/;"	m	struct:log_state	typeref:typename:int	file:
sorting	my_project/libgit2/src/libgit2/revwalk.h	/^	unsigned int sorting;$/;"	m	struct:git_revwalk	typeref:typename:unsigned int
source	my_project/libgit2/src/libgit2/attr_file.h	/^	git_attr_file_source source;$/;"	m	struct:__anon0df92d8f0708	typeref:typename:git_attr_file_source
source	my_project/libgit2/src/libgit2/config_snapshot.c	/^	git_config_backend *source;$/;"	m	struct:__anon05a78b950108	typeref:typename:git_config_backend *	file:
source	my_project/libgit2/src/libgit2/filter.c	/^	const git_filter_source *source;$/;"	m	struct:buffered_stream	typeref:typename:const git_filter_source *	file:
source	my_project/libgit2/src/libgit2/filter.c	/^	git_filter_source source;$/;"	m	struct:git_filter_list	typeref:typename:git_filter_source	file:
source	my_project/libgit2/tests/util/url/joinpath.c	/^static git_net_url source, target;$/;"	v	typeref:typename:git_net_url	file:
sourceExhausted	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^	sourceExhausted,        \/* partial character in source, but hit end *\/$/;"	e	enum:__anon2762a15e0103	file:
sourceIllegal	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^	sourceIllegal           \/* source sequence is illegal\/malformed *\/$/;"	e	enum:__anon2762a15e0103	file:
sourcereg	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int sourcereg;$/;"	m	struct:compare_context	typeref:typename:int	file:
sources	my_project/libgit2/tests/libgit2/diff/rename.c	/^	const char **sources;$/;"	m	struct:rename_expected	typeref:typename:const char **	file:
spec	my_project/libgit2/examples/rev-parse.c	/^	const char *spec;$/;"	m	struct:parse_state	typeref:typename:const char *	file:
spec	my_project/libgit2/src/cli/opt.h	/^	const cli_opt_spec *spec;$/;"	m	struct:cli_opt	typeref:typename:const cli_opt_spec *
spec_for_arg	my_project/libgit2/src/cli/opt.c	/^GIT_INLINE(const cli_opt_spec *) spec_for_arg(cli_opt_parser *parser)$/;"	f	typeref:typename:const cli_opt_spec *
spec_for_long	my_project/libgit2/src/cli/opt.c	/^GIT_INLINE(const cli_opt_spec *) spec_for_long($/;"	f	typeref:typename:const cli_opt_spec *
spec_for_short	my_project/libgit2/src/cli/opt.c	/^GIT_INLINE(const cli_opt_spec *) spec_for_short($/;"	f	typeref:typename:const cli_opt_spec *
spec_for_sort	my_project/libgit2/src/cli/opt.c	/^GIT_INLINE(const cli_opt_spec *) spec_for_sort($/;"	f	typeref:typename:const cli_opt_spec *
spec_included	my_project/libgit2/src/cli/opt.c	/^GIT_INLINE(int) spec_included(const cli_opt_spec **specs, const cli_opt_spec *spec)$/;"	f	typeref:typename:int
spec_is_choice	my_project/libgit2/src/cli/opt.c	/^GIT_INLINE(int) spec_is_choice(const cli_opt_spec *spec)$/;"	f	typeref:typename:int
spec_is_option_type	my_project/libgit2/src/cli/opt.c	/^#define spec_is_option_type(/;"	d	file:
spec_name_fprint	my_project/libgit2/src/cli/opt.c	/^static int spec_name_fprint(FILE *file, const cli_opt_spec *spec)$/;"	f	typeref:typename:int	file:
special	my_project/libgit2/src/util/date.c	/^static const struct special {$/;"	s	file:
special	my_project/libgit2/src/util/date.c	/^} special[] = {$/;"	v	typeref:typename:const struct special[]
specs	my_project/libgit2/src/cli/opt.h	/^	const cli_opt_spec *specs;$/;"	m	struct:cli_opt_parser	typeref:typename:const cli_opt_spec *
specs	my_project/libgit2/src/libgit2/push.h	/^	git_vector specs;$/;"	m	struct:git_push	typeref:typename:git_vector
split_blame	my_project/libgit2/src/libgit2/blame_git.c	/^static int split_blame(git_blame *blame, git_blame__entry *split, git_blame__entry *e)$/;"	f	typeref:typename:int	file:
split_hunk_in_vector	my_project/libgit2/src/libgit2/blame.c	/^static git_blame_hunk *split_hunk_in_vector($/;"	f	typeref:typename:git_blame_hunk *	file:
split_measurement	my_project/libgit2/deps/xdiff/xdiffi.c	/^struct split_measurement {$/;"	s	file:
split_overlap	my_project/libgit2/src/libgit2/blame_git.c	/^static void split_overlap(git_blame__entry *split, git_blame__entry *e,$/;"	f	typeref:typename:void	file:
split_score	my_project/libgit2/deps/xdiff/xdiffi.c	/^struct split_score {$/;"	s	file:
split_strategy	my_project/libgit2/include/git2/sys/commit_graph.h	/^	git_commit_graph_split_strategy_t split_strategy;$/;"	m	struct:__anon6744c2020208	typeref:typename:git_commit_graph_split_strategy_t
splitmix64	my_project/libgit2/src/util/rand.c	/^GIT_INLINE(uint64_t) splitmix64(uint64_t *in)$/;"	f	typeref:typename:uint64_t
src	my_project/libgit2/include/git2/remote.h	/^	git_oid src;$/;"	m	struct:__anon144be4e60408	typeref:typename:git_oid
src	my_project/libgit2/src/libgit2/diff_file.h	/^	git_iterator_t src;$/;"	m	struct:__anonffb6e84d0108	typeref:typename:git_iterator_t
src	my_project/libgit2/src/libgit2/diff_tform.c	/^	git_iterator_t src;$/;"	m	struct:__anon258239f00108	typeref:typename:git_iterator_t	file:
src	my_project/libgit2/src/libgit2/refspec.h	/^	char *src;$/;"	m	struct:git_refspec	typeref:typename:char *
src_buf	my_project/libgit2/src/libgit2/delta.c	/^	const void *src_buf;$/;"	m	struct:git_delta_index	typeref:typename:const void *	file:
src_refname	my_project/libgit2/include/git2/remote.h	/^	char *src_refname;$/;"	m	struct:__anon144be4e60408	typeref:typename:char *
src_size	my_project/libgit2/src/libgit2/delta.c	/^	size_t src_size;$/;"	m	struct:git_delta_index	typeref:typename:size_t	file:
srwl	my_project/libgit2/src/util/win32/thread.h	/^		GIT_SRWLOCK srwl;$/;"	m	union:__anond08cd1a00308::__anond08cd1a0040a	typeref:typename:GIT_SRWLOCK
ssh_agent_auth	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int ssh_agent_auth(LIBSSH2_SESSION *session, git_credential_ssh_key *c) {$/;"	f	typeref:typename:int	file:
ssh_certificate_check	my_project/libgit2/tests/libgit2/online/clone.c	/^static int ssh_certificate_check(git_cert *cert, int valid, const char *host, void *payload)$/;"	f	typeref:typename:int	file:
ssh_custom_free	my_project/libgit2/src/libgit2/transports/credential.c	/^static void ssh_custom_free(struct git_credential *cred)$/;"	f	typeref:typename:void	file:
ssh_error	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static void ssh_error(LIBSSH2_SESSION *session, const char *errmsg)$/;"	f	typeref:typename:void	file:
ssh_exec_subtransport	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^} ssh_exec_subtransport;$/;"	t	typeref:struct:__anonec53c3310208	file:
ssh_exec_subtransport_action	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^static int ssh_exec_subtransport_action($/;"	f	typeref:typename:int	file:
ssh_exec_subtransport_close	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^static int ssh_exec_subtransport_close(git_smart_subtransport *t)$/;"	f	typeref:typename:int	file:
ssh_exec_subtransport_free	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^static void ssh_exec_subtransport_free(git_smart_subtransport *t)$/;"	f	typeref:typename:void	file:
ssh_exec_subtransport_stream	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^} ssh_exec_subtransport_stream;$/;"	t	typeref:struct:__anonec53c3310108	file:
ssh_exec_subtransport_stream_free	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^static void ssh_exec_subtransport_stream_free(git_smart_subtransport_stream *s)$/;"	f	typeref:typename:void	file:
ssh_exec_subtransport_stream_init	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^static int ssh_exec_subtransport_stream_init($/;"	f	typeref:typename:int	file:
ssh_exec_subtransport_stream_read	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^static int ssh_exec_subtransport_stream_read($/;"	f	typeref:typename:int	file:
ssh_exec_subtransport_stream_write	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^static int ssh_exec_subtransport_stream_write($/;"	f	typeref:typename:int	file:
ssh_interactive_free	my_project/libgit2/src/libgit2/transports/credential.c	/^static void ssh_interactive_free(struct git_credential *cred)$/;"	f	typeref:typename:void	file:
ssh_key_free	my_project/libgit2/src/libgit2/transports/credential.c	/^static void ssh_key_free(struct git_credential *cred)$/;"	f	typeref:typename:void	file:
ssh_memory_cred_cb	my_project/libgit2/tests/libgit2/online/clone.c	/^static int ssh_memory_cred_cb(git_credential **cred, const char *url, const char *user_from_url,$/;"	f	typeref:typename:int	file:
ssh_receivepack	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int ssh_receivepack($/;"	f	typeref:typename:int	file:
ssh_receivepack_ls	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int ssh_receivepack_ls($/;"	f	typeref:typename:int	file:
ssh_stream	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^} ssh_stream;$/;"	t	typeref:struct:__anonf54f66e30108	file:
ssh_stream_alloc	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int ssh_stream_alloc($/;"	f	typeref:typename:int	file:
ssh_stream_free	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static void ssh_stream_free(git_smart_subtransport_stream *stream)$/;"	f	typeref:typename:void	file:
ssh_stream_read	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int ssh_stream_read($/;"	f	typeref:typename:int	file:
ssh_stream_write	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int ssh_stream_write($/;"	f	typeref:typename:int	file:
ssh_subtransport	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^} ssh_subtransport;$/;"	t	typeref:struct:__anonf54f66e30208	file:
ssh_subtransport_definition	my_project/libgit2/src/libgit2/transport.c	/^static git_smart_subtransport_definition ssh_subtransport_definition = { git_smart_subtransport_/;"	v	typeref:typename:git_smart_subtransport_definition	file:
ssh_uploadpack	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int ssh_uploadpack($/;"	f	typeref:typename:int	file:
ssh_uploadpack_ls	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^static int ssh_uploadpack_ls($/;"	f	typeref:typename:int	file:
ssize_t	my_project/libgit2/examples/common.h	/^# define ssize_t /;"	d
ssize_t	my_project/libgit2/src/util/win32/msvc-compat.h	/^typedef SSIZE_T ssize_t;$/;"	t	typeref:typename:SSIZE_T
ssl	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^	mbedtls_ssl_context *ssl;$/;"	m	struct:__anoncc3749c90108	typeref:typename:mbedtls_ssl_context *	file:
ssl	my_project/libgit2/src/libgit2/streams/openssl.c	/^	SSL *ssl;$/;"	m	struct:__anonb80f06c20108	typeref:typename:SSL *	file:
ssl_cert	my_project/libgit2/tests/libgit2/online/clone.c	/^static int ssl_cert(git_cert *cert, int valid, const char *host, void *payload)$/;"	f	typeref:typename:int	file:
ssl_set_error	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static int ssl_set_error(mbedtls_ssl_context *ssl, int error)$/;"	f	typeref:typename:int	file:
ssl_set_error	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int ssl_set_error(SSL *ssl, int error)$/;"	f	typeref:typename:int	file:
ssl_teardown	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static int ssl_teardown(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int	file:
ssl_teardown	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int ssl_teardown(SSL *ssl)$/;"	f	typeref:typename:int	file:
sspi_context_free	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^static void sspi_context_free(git_http_auth_context *c)$/;"	f	typeref:typename:void	file:
sspi_init_context	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^static int sspi_init_context($/;"	f	typeref:typename:int	file:
sspi_is_complete	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^static int sspi_is_complete(git_http_auth_context *c)$/;"	f	typeref:typename:int	file:
sspi_next_token	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^static int sspi_next_token($/;"	f	typeref:typename:int	file:
sspi_reset_context	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^static void sspi_reset_context(http_auth_sspi_context *ctx)$/;"	f	typeref:typename:void	file:
sspi_set_challenge	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^static int sspi_set_challenge($/;"	f	typeref:typename:int	file:
sss	my_project/libgit2/tests/libgit2/object/message.c	/^#define sss /;"	d	file:
st	my_project/libgit2/src/libgit2/iterator.c	/^	struct stat st;$/;"	m	struct:__anon2f88b95a0608	typeref:struct:stat	file:
st_atim	my_project/libgit2/src/util/git2_util.h	/^# define st_atim /;"	d
st_atim	my_project/libgit2/src/util/win32/win32-compat.h	/^	struct timespec st_atim;$/;"	m	struct:p_stat	typeref:struct:timespec
st_atime	my_project/libgit2/src/util/win32/win32-compat.h	/^#define st_atime /;"	d
st_atime_nsec	my_project/libgit2/src/util/unix/posix.h	/^# define st_atime_nsec /;"	d
st_atime_nsec	my_project/libgit2/src/util/win32/win32-compat.h	/^#define st_atime_nsec /;"	d
st_ctim	my_project/libgit2/src/util/git2_util.h	/^# define st_ctim /;"	d
st_ctim	my_project/libgit2/src/util/win32/win32-compat.h	/^	struct timespec st_ctim;$/;"	m	struct:p_stat	typeref:struct:timespec
st_ctime	my_project/libgit2/src/util/win32/win32-compat.h	/^#define st_ctime /;"	d
st_ctime_nsec	my_project/libgit2/src/util/unix/posix.h	/^# define st_ctime_nsec /;"	d
st_ctime_nsec	my_project/libgit2/src/util/win32/win32-compat.h	/^#define st_ctime_nsec /;"	d
st_dev	my_project/libgit2/src/util/win32/win32-compat.h	/^	_dev_t st_dev;$/;"	m	struct:p_stat	typeref:typename:_dev_t
st_gid	my_project/libgit2/src/util/win32/win32-compat.h	/^	short st_gid;$/;"	m	struct:p_stat	typeref:typename:short
st_ino	my_project/libgit2/src/util/win32/win32-compat.h	/^	_ino_t st_ino;$/;"	m	struct:p_stat	typeref:typename:_ino_t
st_mode	my_project/libgit2/src/util/win32/win32-compat.h	/^	mode_t st_mode;$/;"	m	struct:p_stat	typeref:typename:mode_t
st_mtim	my_project/libgit2/src/util/git2_util.h	/^# define st_mtim /;"	d
st_mtim	my_project/libgit2/src/util/win32/win32-compat.h	/^	struct timespec st_mtim;$/;"	m	struct:p_stat	typeref:struct:timespec
st_mtime	my_project/libgit2/src/util/win32/win32-compat.h	/^#define st_mtime /;"	d
st_mtime_nsec	my_project/libgit2/src/util/unix/posix.h	/^# define st_mtime_nsec /;"	d
st_mtime_nsec	my_project/libgit2/src/util/win32/win32-compat.h	/^#define st_mtime_nsec /;"	d
st_nlink	my_project/libgit2/src/util/win32/win32-compat.h	/^	short st_nlink;$/;"	m	struct:p_stat	typeref:typename:short
st_rdev	my_project/libgit2/src/util/win32/win32-compat.h	/^	_dev_t st_rdev;$/;"	m	struct:p_stat	typeref:typename:_dev_t
st_size	my_project/libgit2/src/util/win32/win32-compat.h	/^	__int64 st_size;$/;"	m	struct:p_stat	typeref:typename:__int64
st_uid	my_project/libgit2/src/util/win32/win32-compat.h	/^	short st_uid;$/;"	m	struct:p_stat	typeref:typename:short
stack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_stack *stack;$/;"	m	struct:jit_arguments	typeref:struct:sljit_stack *	file:
stackalloc	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *stackalloc;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
stacksave	my_project/libgit2/deps/pcre/pcre_exec.c	/^#define stacksave /;"	d	file:
stacksize	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int stacksize;$/;"	m	struct:bracketpos_backtrack	typeref:typename:int	file:
stage	my_project/libgit2/src/libgit2/index.c	/^	int stage;$/;"	m	struct:entry_srch_key	typeref:typename:int	file:
stage	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^	int stage;$/;"	m	struct:checkout_index_entry	typeref:typename:int	file:
stage	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	int stage;$/;"	m	struct:merge_index_entry	typeref:typename:int
stage_and_commit	my_project/libgit2/tests/libgit2/status/worktree.c	/^static void stage_and_commit(git_repository *repo, const char *path)$/;"	f	typeref:typename:void	file:
stage_content	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^static void stage_content(char *content[])$/;"	f	typeref:typename:void	file:
stage_new_file	my_project/libgit2/src/libgit2/stash.c	/^static int stage_new_file(const git_index_entry **entries, void *data)$/;"	f	typeref:typename:int	file:
stage_new_files	my_project/libgit2/src/libgit2/stash.c	/^static int stage_new_files($/;"	f	typeref:typename:int	file:
stage_random_files	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^static void stage_random_files(char *files[])$/;"	f	typeref:typename:void	file:
staged	my_project/libgit2/src/libgit2/merge.h	/^	git_vector staged;$/;"	m	struct:__anon7b397d650208	typeref:typename:git_vector
stamp	my_project/libgit2/src/libgit2/attr_file.h	/^		git_futils_filestamp stamp;$/;"	m	union:__anon0df92d8f0708::__anon0df92d8f080a	typeref:typename:git_futils_filestamp
stamp	my_project/libgit2/src/libgit2/config_file.c	/^	git_futils_filestamp stamp;$/;"	m	struct:config_file	typeref:typename:git_futils_filestamp	file:
stamp	my_project/libgit2/src/libgit2/index.h	/^	git_futils_filestamp stamp;$/;"	m	struct:git_index	typeref:typename:git_futils_filestamp
stamp	my_project/libgit2/src/util/sortedcache.h	/^	git_futils_filestamp stamp;$/;"	m	struct:__anon21e0f34b0108	typeref:typename:git_futils_filestamp
start	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  pcre_uchar *start;$/;"	m	struct:compiler_common	typeref:typename:pcre_uchar *	file:
start	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_sw start;$/;"	m	struct:recurse_entry	typeref:typename:sljit_sw	file:
start	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_sw start;$/;"	m	struct:then_trap_backtrack	typeref:typename:sljit_sw	file:
start	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_jump *start;$/;"	m	struct:stub_list	typeref:struct:sljit_jump *	file:
start	my_project/libgit2/deps/xdiff/xdiffi.c	/^	long start;$/;"	m	struct:xdlgroup	typeref:typename:long	file:
start	my_project/libgit2/deps/zlib/gzguts.h	/^    z_off64_t start;        \/* where the gzip data started, for rewinding *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:z_off64_t
start	my_project/libgit2/src/libgit2/iterator.h	/^	char *start;$/;"	m	struct:git_iterator	typeref:typename:char *
start	my_project/libgit2/src/libgit2/iterator.h	/^	const char *start;$/;"	m	struct:__anon2f88b95f0408	typeref:typename:const char *
start	my_project/libgit2/src/libgit2/odb_loose.c	/^	char start[MAX_HEADER_LEN];$/;"	m	struct:__anon5ce333660308	typeref:typename:char[]	file:
start	my_project/libgit2/src/util/regexp.h	/^	ssize_t start;$/;"	m	struct:__anon6acbdb710208	typeref:typename:ssize_t
start	my_project/libgit2/src/util/tsort.c	/^	ssize_t start;$/;"	m	struct:tsort_run	typeref:typename:ssize_t	file:
start	my_project/libgit2/tests/clar/clar.c	/^	time_t start;$/;"	m	struct:clar_report	typeref:typename:time_t	file:
start_bits	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint8 start_bits[32];      \/* Starting char bits *\/$/;"	m	struct:pcre_study_data	typeref:typename:pcre_uint8[32]
start_code	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const  pcre_uchar *start_code;  \/* For use when recursing *\/$/;"	m	struct:match_data	typeref:typename:const pcre_uchar *
start_code	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *start_code;     \/* Start of the compiled pattern *\/$/;"	m	struct:dfa_match_data	typeref:typename:const pcre_uchar *
start_code	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *start_code;     \/* The start of the compiled code *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uchar *
start_len	my_project/libgit2/src/libgit2/iterator.h	/^	size_t start_len;$/;"	m	struct:git_iterator	typeref:typename:size_t
start_len	my_project/libgit2/src/libgit2/odb_loose.c	/^	size_t start_len;$/;"	m	struct:__anon5ce333660308	typeref:typename:size_t	file:
start_line	my_project/libgit2/examples/blame.c	/^	int start_line;$/;"	m	struct:blame_opts	typeref:typename:int	file:
start_match	my_project/libgit2/deps/pcre/pcre.h	/^  int          start_match;       \/* Offset to start of this match attempt *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
start_match	my_project/libgit2/deps/pcre/pcre.h	/^  int          start_match;       \/* Offset to start of this match attempt *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
start_match	my_project/libgit2/deps/pcre/pcre.h	/^  int          start_match;       \/* Offset to start of this match attempt *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
start_match_ptr	my_project/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR start_match_ptr;    \/* Start of matched string *\/$/;"	m	struct:match_data	typeref:typename:PCRE_PUCHAR
start_number	my_project/libgit2/include/git2/email.h	/^	size_t start_number;$/;"	m	struct:__anonbd19e2c20208	typeref:typename:size_t
start_of_record	my_project/libgit2/src/libgit2/refdb_fs.c	/^static const char *start_of_record(const char *buf, const char *p)$/;"	f	typeref:typename:const char *	file:
start_offset	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int    start_offset;            \/* The start offset value *\/$/;"	m	struct:match_data	typeref:typename:int
start_offset	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int   start_offset;               \/* The start offset value *\/$/;"	m	struct:dfa_match_data	typeref:typename:int
start_pattern	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *start_pattern;  \/* The start of the pattern *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uchar *
start_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 start_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
start_read	my_project/libgit2/src/libgit2/odb_loose.c	/^	size_t start_read;$/;"	m	struct:__anon5ce333660308	typeref:typename:size_t	file:
start_ssh	my_project/libgit2/src/libgit2/transports/ssh_exec.c	/^static int start_ssh($/;"	f	typeref:typename:int	file:
start_subject	my_project/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR start_subject;      \/* Start of the subject string *\/$/;"	m	struct:match_data	typeref:typename:PCRE_PUCHAR
start_subject	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *start_subject ; \/* Start of the subject string *\/$/;"	m	struct:dfa_match_data	typeref:typename:const pcre_uchar *
start_used_ptr	my_project/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR start_used_ptr;     \/* Earliest consulted character *\/$/;"	m	struct:match_data	typeref:typename:PCRE_PUCHAR
start_used_ptr	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *start_used_ptr; \/* Earliest consulted character *\/$/;"	m	struct:dfa_match_data	typeref:typename:const pcre_uchar *
start_used_ptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_s32 start_used_ptr;$/;"	m	struct:compiler_common	typeref:typename:sljit_s32	file:
start_workspace	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uchar *start_workspace;\/* The start of working space *\/$/;"	m	struct:compile_data	typeref:typename:const pcre_uchar *
started	my_project/libgit2/src/libgit2/iterator.h	/^	bool started;$/;"	m	struct:git_iterator	typeref:typename:bool
started	my_project/libgit2/src/libgit2/rebase.c	/^	             started:1;$/;"	m	struct:git_rebase	typeref:typename:unsigned int:1	file:
stash_delta_merge	my_project/libgit2/src/libgit2/stash.c	/^static git_diff_delta *stash_delta_merge($/;"	f	typeref:typename:git_diff_delta *	file:
stash_tip_oid	my_project/libgit2/tests/libgit2/stash/foreach.c	/^static git_oid stash_tip_oid;$/;"	v	typeref:typename:git_oid	file:
stash_tip_oid	my_project/libgit2/tests/libgit2/stash/save.c	/^static git_oid stash_tip_oid;$/;"	v	typeref:typename:git_oid	file:
stash_tip_oid	my_project/libgit2/tests/libgit2/stash/submodules.c	/^static git_oid stash_tip_oid;$/;"	v	typeref:typename:git_oid	file:
stash_to_index	my_project/libgit2/src/libgit2/stash.c	/^static int stash_to_index($/;"	f	typeref:typename:int	file:
stash_update_index_from_diff	my_project/libgit2/src/libgit2/stash.c	/^static int stash_update_index_from_diff($/;"	f	typeref:typename:int	file:
stash_update_index_from_paths	my_project/libgit2/src/libgit2/stash.c	/^static int stash_update_index_from_paths($/;"	f	typeref:typename:int	file:
stash_update_rules	my_project/libgit2/src/libgit2/stash.c	/^struct stash_update_rules {$/;"	s	file:
stasher	my_project/libgit2/include/git2/stash.h	/^	const git_signature *stasher;$/;"	m	struct:git_stash_save_options	typeref:typename:const git_signature *
stat	my_project/libgit2/src/util/win32/win32-compat.h	/^#define stat /;"	d
stat	my_project/libgit2/tests/clar/clar.c	/^#		define stat(/;"	d	file:
stat_calls	my_project/libgit2/include/git2/checkout.h	/^	size_t stat_calls;$/;"	m	struct:__anon65c3b8100308	typeref:typename:size_t
stat_calls	my_project/libgit2/include/git2/sys/diff.h	/^	size_t stat_calls; \/**< Number of stat() calls performed *\/$/;"	m	struct:__anon9aac73a10108	typeref:typename:size_t
stat_calls	my_project/libgit2/src/libgit2/iterator.h	/^	size_t stat_calls;$/;"	m	struct:git_iterator	typeref:typename:size_t
stat_calls	my_project/libgit2/src/util/futils.h	/^	size_t stat_calls;$/;"	m	struct:git_futils_mkdir_perfdata	typeref:typename:size_t
stat_desc	my_project/libgit2/deps/zlib/deflate.h	/^    const static_tree_desc *stat_desc;  \/* the corresponding static tree *\/$/;"	m	struct:tree_desc_s	typeref:typename:const static_tree_desc *
state	my_project/libgit2/deps/ntlmclient/crypt_builtin_md4.c	/^  UINT4 state[4];                                   \/* state (ABCD) *\/$/;"	m	struct:__anonc766ba4d0108	typeref:typename:UINT4[4]	file:
state	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_state state;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_state
state	my_project/libgit2/deps/zlib/zlib.h	/^    struct internal_state FAR *state; \/* not visible by applications *\/$/;"	m	struct:z_stream_s	typeref:struct:internal_state FAR *
state	my_project/libgit2/src/libgit2/streams/schannel.c	/^	schannel_state state;$/;"	m	struct:__anonafd1b44a0208	typeref:typename:schannel_state	file:
state	my_project/libgit2/src/libgit2/transports/http.c	/^	http_state state;$/;"	m	struct:__anon515ae8bf0308	typeref:typename:http_state	file:
state	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	http_client_state state;$/;"	m	struct:git_http_client	typeref:typename:http_client_state	file:
state	my_project/libgit2/src/util/rand.c	/^static uint64_t state[4];$/;"	v	typeref:typename:uint64_t[4]	file:
state_filename	my_project/libgit2/src/libgit2/rebase.c	/^	git_str state_filename;$/;"	m	struct:git_rebase	typeref:typename:git_str	file:
state_files	my_project/libgit2/src/libgit2/repository.c	/^static const char *state_files[] = {$/;"	v	typeref:typename:const char * []	file:
state_loc	my_project/libgit2/tests/util/dirent.c	/^static walk_data *state_loc;$/;"	v	typeref:typename:walk_data *	file:
state_lock	my_project/libgit2/src/util/rand.c	/^static git_mutex state_lock;$/;"	v	typeref:typename:git_mutex	file:
state_path	my_project/libgit2/src/libgit2/rebase.c	/^	char *state_path;$/;"	m	struct:git_rebase	typeref:typename:char *	file:
stateblock	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^typedef struct stateblock {$/;"	s	file:
stateblock	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^} stateblock;$/;"	t	typeref:struct:stateblock	file:
states	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^	uint32_t states[80][5];$/;"	m	struct:__anon09d552690108	typeref:typename:uint32_t[80][5]
static_bl_desc	my_project/libgit2/deps/zlib/trees.c	/^local TCONST static_tree_desc static_bl_desc =$/;"	v	typeref:typename:local TCONST static_tree_desc
static_d_desc	my_project/libgit2/deps/zlib/trees.c	/^local TCONST static_tree_desc static_d_desc =$/;"	v	typeref:typename:local TCONST static_tree_desc
static_dtree	my_project/libgit2/deps/zlib/trees.c	/^local ct_data static_dtree[D_CODES];$/;"	v	typeref:typename:local ct_data[]
static_dtree	my_project/libgit2/deps/zlib/trees.h	/^local const ct_data static_dtree[D_CODES] = {$/;"	v	typeref:typename:local const ct_data[]
static_l_desc	my_project/libgit2/deps/zlib/trees.c	/^local TCONST static_tree_desc static_l_desc =$/;"	v	typeref:typename:local TCONST static_tree_desc
static_len	my_project/libgit2/deps/zlib/deflate.h	/^    ulg static_len;     \/* bit length of current block with static trees *\/$/;"	m	struct:internal_state	typeref:typename:ulg
static_ltree	my_project/libgit2/deps/zlib/trees.c	/^local ct_data static_ltree[L_CODES+2];$/;"	v	typeref:typename:local ct_data[]
static_ltree	my_project/libgit2/deps/zlib/trees.h	/^local const ct_data static_ltree[L_CODES+2] = {$/;"	v	typeref:typename:local const ct_data[]
static_tree	my_project/libgit2/deps/zlib/trees.c	/^    const ct_data *static_tree;  \/* static tree or NULL *\/$/;"	m	struct:static_tree_desc_s	typeref:typename:const ct_data *	file:
static_tree_desc	my_project/libgit2/deps/zlib/deflate.h	/^typedef struct static_tree_desc_s  static_tree_desc;$/;"	t	typeref:struct:static_tree_desc_s
static_tree_desc_s	my_project/libgit2/deps/zlib/trees.c	/^struct static_tree_desc_s {$/;"	s	file:
stats	my_project/libgit2/src/libgit2/pack-objects.c	/^	git_indexer_progress *stats;$/;"	m	struct:pack_write_context	typeref:typename:git_indexer_progress *	file:
stats	my_project/libgit2/src/libgit2/remote.h	/^	git_indexer_progress stats;$/;"	m	struct:git_remote	typeref:typename:git_indexer_progress
stats	my_project/libgit2/src/libgit2/transports/local.c	/^	git_indexer_progress *stats;$/;"	m	struct:foreach_data	typeref:typename:git_indexer_progress *	file:
stats	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^	git_indexer_progress *stats;$/;"	m	struct:network_packetsize_payload	typeref:typename:git_indexer_progress *	file:
status	my_project/libgit2/deps/llhttp/llhttp.c	/^  llparse_match_status_t status;$/;"	m	struct:llparse_match_s	typeref:typename:llparse_match_status_t	file:
status	my_project/libgit2/deps/zlib/deflate.h	/^    int   status;        \/* as the name implies *\/$/;"	m	struct:internal_state	typeref:typename:int
status	my_project/libgit2/include/git2/diff.h	/^	git_delta_t   status;$/;"	m	struct:__anon7f3f1dd30508	typeref:typename:git_delta_t
status	my_project/libgit2/include/git2/status.h	/^	git_status_t status;$/;"	m	struct:__anon6794a3fe0508	typeref:typename:git_status_t
status	my_project/libgit2/src/cli/opt.h	/^	cli_opt_status_t status;$/;"	m	struct:cli_opt	typeref:typename:cli_opt_status_t
status	my_project/libgit2/src/libgit2/push.h	/^	git_vector status;$/;"	m	struct:git_push	typeref:typename:git_vector
status	my_project/libgit2/src/libgit2/status.c	/^	unsigned int status;$/;"	m	struct:status_file_info	typeref:typename:unsigned int	file:
status	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	int status;$/;"	m	struct:__anon3d590bc30308	typeref:typename:int
status	my_project/libgit2/src/libgit2/transports/smart.h	/^	enum git_ack_status status;$/;"	m	struct:__anonb9ceeb0b0408	typeref:enum:git_ack_status
status	my_project/libgit2/src/util/process.h	/^	git_process_result_status status;$/;"	m	struct:__anon3c78bdc50308	typeref:typename:git_process_result_status
status	my_project/libgit2/src/util/unix/process.c	/^	git_process_result_status status;$/;"	m	struct:git_process	typeref:typename:git_process_result_status	file:
status	my_project/libgit2/src/util/win32/process.c	/^	git_process_result_status status;$/;"	m	struct:git_process	typeref:typename:git_process_result_status	file:
status	my_project/libgit2/tests/clar/clar.c	/^	enum cl_test_status status;$/;"	m	struct:clar_report	typeref:enum:cl_test_status	file:
status	my_project/libgit2/tests/libgit2/diff/rename.c	/^	unsigned int *status;$/;"	m	struct:rename_expected	typeref:typename:unsigned int *	file:
status	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	unsigned int status;$/;"	m	struct:merge_index_with_status	typeref:typename:unsigned int
status	my_project/libgit2/tests/libgit2/status/renames.c	/^	git_status_t status;$/;"	m	struct:status_entry	typeref:typename:git_status_t	file:
status	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^	unsigned int status;$/;"	m	struct:__anon6ff743e90208	typeref:typename:unsigned int
status_code	my_project/libgit2/deps/llhttp/llhttp.h	/^  uint16_t status_code;$/;"	m	struct:llhttp__internal_s	typeref:typename:uint16_t
status_collect	my_project/libgit2/src/libgit2/status.c	/^static int status_collect($/;"	f	typeref:typename:int	file:
status_compute	my_project/libgit2/src/libgit2/status.c	/^static git_status_t status_compute($/;"	f	typeref:typename:git_status_t	file:
status_counts_init	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^#define status_counts_init(/;"	d
status_entry	my_project/libgit2/tests/libgit2/status/renames.c	/^struct status_entry {$/;"	s	file:
status_entry_cmp	my_project/libgit2/src/libgit2/status.c	/^static int status_entry_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
status_entry_cmp_base	my_project/libgit2/src/libgit2/status.c	/^GIT_INLINE(int) status_entry_cmp_base($/;"	f	typeref:typename:int
status_entry_counts	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^} status_entry_counts;$/;"	t	typeref:struct:__anon6ff743e90108
status_entry_icmp	my_project/libgit2/src/libgit2/status.c	/^static int status_entry_icmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
status_entry_single	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^} status_entry_single;$/;"	t	typeref:struct:__anon6ff743e90208
status_file_info	my_project/libgit2/src/libgit2/status.c	/^struct status_file_info {$/;"	s	file:
status_is_included	my_project/libgit2/src/libgit2/status.c	/^static bool status_is_included($/;"	f	typeref:typename:bool	file:
status_opts	my_project/libgit2/examples/status.c	/^struct status_opts {$/;"	s	file:
status_paths	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^static const char *status_paths[] = {$/;"	v	typeref:typename:const char * []	file:
status_paths_range_0	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^static const char *status_paths_range_0[] = {$/;"	v	typeref:typename:const char * []	file:
status_paths_range_1	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^static const char *status_paths_range_1[] = {$/;"	v	typeref:typename:const char * []	file:
status_paths_range_3	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^static const char *status_paths_range_3[] = {$/;"	v	typeref:typename:const char * []	file:
status_paths_range_4	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^static const char *status_paths_range_4[] = {$/;"	v	typeref:typename:const char * []	file:
status_paths_range_5	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^static const char *status_paths_range_5[] = {$/;"	v	typeref:typename:const char * []	file:
status_sending_request_reached	my_project/libgit2/src/libgit2/transports/winhttp.c	/^		status_sending_request_reached: 1;$/;"	m	struct:__anon5ba854ad0208	typeref:typename:unsigned:1	file:
status_validate_options	my_project/libgit2/src/libgit2/status.c	/^static int status_validate_options(const git_status_options *opts)$/;"	f	typeref:typename:int	file:
statuses	my_project/libgit2/tests/libgit2/diff/diff_helpers.h	/^	int *statuses;$/;"	m	struct:__anone9d3a2f30108	typeref:typename:int *
statuses	my_project/libgit2/tests/libgit2/online/push_util.h	/^	git_vector statuses;$/;"	m	struct:__anonec09f7510208	typeref:typename:git_vector
statuses	my_project/libgit2/tests/libgit2/submodule/status.c	/^	int *statuses;$/;"	m	struct:__anon0b5f5e9e0108	typeref:typename:int *	file:
statusopt	my_project/libgit2/examples/status.c	/^	git_status_options statusopt;$/;"	m	struct:status_opts	typeref:typename:git_status_options	file:
std_alloc	my_project/libgit2/tests/util/str/oom.c	/^static git_allocator std_alloc;$/;"	v	typeref:typename:git_allocator	file:
stdalloc__free	my_project/libgit2/src/util/allocators/stdalloc.c	/^static void stdalloc__free(void *ptr)$/;"	f	typeref:typename:void	file:
stdalloc__malloc	my_project/libgit2/src/util/allocators/stdalloc.c	/^static void *stdalloc__malloc(size_t len, const char *file, int line)$/;"	f	typeref:typename:void *	file:
stdalloc__realloc	my_project/libgit2/src/util/allocators/stdalloc.c	/^static void *stdalloc__realloc(void *ptr, size_t size, const char *file, int line)$/;"	f	typeref:typename:void *	file:
still_interesting	my_project/libgit2/src/libgit2/revwalk.c	/^static int still_interesting(git_commit_list *list, int64_t time, int slop)$/;"	f	typeref:typename:int	file:
stop	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^	const char *stop;$/;"	m	struct:treewalk_skip_data	typeref:typename:const char *	file:
stopAtEntry	my_project/libgit2/.vscode/launch.json	/^            "stopAtEntry": false,$/;"	b	object:configurations.0
storage	my_project/libgit2/src/util/tsort.c	/^	void **storage;$/;"	m	struct:tsort_store	typeref:typename:void **	file:
store_common	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int store_common(transport_smart *t)$/;"	f	typeref:typename:int	file:
store_delta	my_project/libgit2/src/libgit2/indexer.c	/^static int store_delta(git_indexer *idx)$/;"	f	typeref:typename:int	file:
store_object	my_project/libgit2/src/libgit2/indexer.c	/^static int store_object(git_indexer *idx)$/;"	f	typeref:typename:int	file:
store_refs	my_project/libgit2/src/libgit2/transports/local.c	/^static int store_refs(transport_local *t)$/;"	f	typeref:typename:int	file:
str	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  const pcre_uchar *str;$/;"	m	struct:jit_arguments	typeref:typename:const pcre_uchar *	file:
str	my_project/libgit2/src/libgit2/object.c	/^	const char	*str;	\/* type name string *\/$/;"	m	struct:__anonc130b1670108	typeref:typename:const char *	file:
str	my_project/libgit2/src/libgit2/patch_parse.c	/^	const char *str;$/;"	m	struct:__anonddb10c3a0308	typeref:typename:const char *	file:
str0	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^static char *str0[] = { "*_file", "new_file", "garbage" };$/;"	v	typeref:typename:char * []	file:
str1	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^static char *str1[] = { "*_FILE", "NEW_FILE", "GARBAGE" };$/;"	v	typeref:typename:char * []	file:
str2	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^static char *str2[] = { "staged_*" };$/;"	v	typeref:typename:char * []	file:
str3	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^static char *str3[] = { "!subdir", "*_file", "new_file" };$/;"	v	typeref:typename:char * []	file:
str4	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^static char *str4[] = { "*" };$/;"	v	typeref:typename:char * []	file:
str5	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^static char *str5[] = { "S*" };$/;"	v	typeref:typename:char * []	file:
str_match	my_project/libgit2/include/git2/config.h	/^	const char *str_match;$/;"	m	struct:__anon3fe317b00308	typeref:typename:const char *
str_oid_sha1	my_project/libgit2/tests/libgit2/core/oid.c	/^const char *str_oid_sha1 = "ae90f12eea699729ed24555e40b9fd669da12a12";$/;"	v	typeref:typename:const char *
str_oid_sha1_m	my_project/libgit2/tests/libgit2/core/oid.c	/^const char *str_oid_sha1_m = "ae90f12eea699729ed24555e40b9fd669da12a12THIS IS EXTRA TEXT THAT SH/;"	v	typeref:typename:const char *
str_oid_sha1_p	my_project/libgit2/tests/libgit2/core/oid.c	/^const char *str_oid_sha1_p = "ae90f12eea699729ed";$/;"	v	typeref:typename:const char *
str_oid_sha256	my_project/libgit2/tests/libgit2/core/oid.c	/^const char *str_oid_sha256 = "d3e63d2f2e43d1fee23a74bf19a0ede156cba2d1bd602eba13de433cea1bb512";$/;"	v	typeref:typename:const char *
str_oid_sha256_m	my_project/libgit2/tests/libgit2/core/oid.c	/^const char *str_oid_sha256_m = "d3e63d2f2e43d1fee23a74bf19a0ede156cba2d1bd602eba13de433cea1bb512/;"	v	typeref:typename:const char *
str_oid_sha256_p	my_project/libgit2/tests/libgit2/core/oid.c	/^const char *str_oid_sha256_p = "d3e63d2f2e43d1fee2";$/;"	v	typeref:typename:const char *
stransport_certificate	my_project/libgit2/src/libgit2/streams/stransport.c	/^static int stransport_certificate(git_cert **out, git_stream *stream)$/;"	f	typeref:typename:int	file:
stransport_close	my_project/libgit2/src/libgit2/streams/stransport.c	/^static int stransport_close(git_stream *stream)$/;"	f	typeref:typename:int	file:
stransport_connect	my_project/libgit2/src/libgit2/streams/stransport.c	/^static int stransport_connect(git_stream *stream)$/;"	f	typeref:typename:int	file:
stransport_error	my_project/libgit2/src/libgit2/streams/stransport.c	/^static int stransport_error(OSStatus ret)$/;"	f	typeref:typename:int	file:
stransport_free	my_project/libgit2/src/libgit2/streams/stransport.c	/^static void stransport_free(git_stream *stream)$/;"	f	typeref:typename:void	file:
stransport_read	my_project/libgit2/src/libgit2/streams/stransport.c	/^static ssize_t stransport_read(git_stream *stream, void *data, size_t len)$/;"	f	typeref:typename:ssize_t	file:
stransport_set_proxy	my_project/libgit2/src/libgit2/streams/stransport.c	/^static int stransport_set_proxy($/;"	f	typeref:typename:int	file:
stransport_stream	my_project/libgit2/src/libgit2/streams/stransport.c	/^} stransport_stream;$/;"	t	typeref:struct:__anon898973fe0108	file:
stransport_wrap	my_project/libgit2/src/libgit2/streams/stransport.c	/^static int stransport_wrap($/;"	f	typeref:typename:int	file:
stransport_write	my_project/libgit2/src/libgit2/streams/stransport.c	/^static ssize_t stransport_write(git_stream *stream, const char *data, size_t len, int flags)$/;"	f	typeref:typename:ssize_t	file:
strarray_from_args	my_project/libgit2/examples/args.c	/^void strarray_from_args(git_strarray *array, struct args_info *args)$/;"	f	typeref:typename:void
strategy	my_project/libgit2/deps/zlib/deflate.h	/^    int strategy; \/* favor or force Huffman coding*\/$/;"	m	struct:internal_state	typeref:typename:int
strategy	my_project/libgit2/deps/zlib/gzguts.h	/^    int strategy;           \/* compression strategy *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:int
strategy	my_project/libgit2/src/libgit2/checkout.c	/^	unsigned int strategy;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:unsigned int	file:
strcasecmp	my_project/libgit2/examples/common.h	/^#define strcasecmp /;"	d
strcasecmp	my_project/libgit2/src/util/win32/msvc-compat.h	/^#define strcasecmp(/;"	d
strcomp	my_project/libgit2/src/libgit2/diff.h	/^	int (*strcomp)(const char *, const char *);$/;"	m	struct:git_diff	typeref:typename:int (*)(const char *,const char *)
strcomp	my_project/libgit2/src/libgit2/diff_print.c	/^	int (*strcomp)(const char *, const char *);$/;"	m	struct:__anon0d2887b50108	typeref:typename:int (*)(const char *,const char *)	file:
strcomp	my_project/libgit2/src/libgit2/iterator.h	/^	int (*strcomp)(const char *a, const char *b);$/;"	m	struct:git_iterator	typeref:typename:int (*)(const char * a,const char * b)
strcomp	my_project/libgit2/src/libgit2/pathspec.c	/^	int (*strcomp)(const char *, const char *);$/;"	m	struct:pathspec_match_context	typeref:typename:int (*)(const char *,const char *)	file:
strdup	my_project/libgit2/tests/clar/clar.c	/^#		define strdup(/;"	d	file:
stream	my_project/libgit2/include/git2/sys/filter.h	/^	git_filter_stream_fn   stream;$/;"	m	struct:git_filter	typeref:typename:git_filter_stream_fn
stream	my_project/libgit2/src/libgit2/indexer.c	/^	git_packfile_stream stream;$/;"	m	struct:git_indexer	typeref:typename:git_packfile_stream	file:
stream	my_project/libgit2/src/libgit2/odb.c	/^	git_odb_stream stream;$/;"	m	struct:__anon3125c0850208	typeref:typename:git_odb_stream	file:
stream	my_project/libgit2/src/libgit2/odb_loose.c	/^	git_odb_stream stream;$/;"	m	struct:__anon5ce333660208	typeref:typename:git_odb_stream	file:
stream	my_project/libgit2/src/libgit2/odb_loose.c	/^	git_odb_stream stream;$/;"	m	struct:__anon5ce333660308	typeref:typename:git_odb_stream	file:
stream	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_stream *stream;$/;"	m	struct:__anon3d590bbe0108	typeref:typename:git_stream *	file:
stream	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^	git_smart_subtransport_stream *stream;$/;"	m	struct:push_packbuilder_payload	typeref:typename:git_smart_subtransport_stream *	file:
stream	my_project/libgit2/tests/libgit2/odb/streamwrite.c	/^static git_odb_stream *stream;$/;"	v	typeref:typename:git_odb_stream *	file:
stream_list_init	my_project/libgit2/src/libgit2/filter.c	/^static int stream_list_init($/;"	f	typeref:typename:int	file:
stream_registration_cpy	my_project/libgit2/src/libgit2/streams/registry.c	/^GIT_INLINE(void) stream_registration_cpy($/;"	f	typeref:typename:void
stream_registry	my_project/libgit2/src/libgit2/streams/registry.c	/^static struct stream_registry stream_registry;$/;"	v	typeref:struct:stream_registry	file:
stream_registry	my_project/libgit2/src/libgit2/streams/registry.c	/^struct stream_registry {$/;"	s	file:
stream_sizes	my_project/libgit2/src/libgit2/streams/schannel.c	/^	SecPkgContext_StreamSizes stream_sizes;$/;"	m	struct:__anonafd1b44a0208	typeref:typename:SecPkgContext_StreamSizes	file:
stream_thunk	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int stream_thunk(void *buf, size_t size, void *data)$/;"	f	typeref:typename:int	file:
stream_write	my_project/libgit2/src/libgit2/transports/httpclient.c	/^GIT_INLINE(int) stream_write($/;"	f	typeref:typename:int
streaming_write	my_project/libgit2/tests/libgit2/object/raw/write.c	/^static void streaming_write(git_oid *oid, git_odb *odb, git_rawobj *raw)$/;"	f	typeref:typename:void	file:
strequal_ignore_eol	my_project/libgit2/tests/libgit2/reset/hard.c	/^static int strequal_ignore_eol(const char *exp, const char *str)$/;"	f	typeref:typename:int	file:
strictConversion	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^	strictConversion = 0,$/;"	e	enum:__anon2762a15e0203	file:
strict_comparison	my_project/libgit2/src/util/vector.c	/^static int strict_comparison(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
string	my_project/libgit2/src/libgit2/refspec.h	/^	char *string;$/;"	m	struct:git_refspec	typeref:typename:char *
string	my_project/libgit2/tests/libgit2/commit/parse.c	/^	const char *string;$/;"	m	struct:__anon39d5c3ee0208	typeref:typename:const char *	file:
string	my_project/libgit2/tests/libgit2/commit/parse.c	/^	const char *string;$/;"	m	struct:__anon39d5c3ee0308	typeref:typename:const char *	file:
string_H	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_H[] =    {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PL	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PL[] =   {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PLl	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PLl[] =  {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PLu	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PLu[] =  {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PNd	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PNd[]  = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PXan	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PXan[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PXps	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PXps[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PXsp	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PXsp[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_PXwd	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_PXwd[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_h	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_h[] =    {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_mailmap	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^static const char string_mailmap[] =$/;"	v	typeref:typename:const char[]	file:
string_pL	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pL[] =   {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_pLl	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pLl[] =  {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_pLu	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pLu[] =  {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_pNd	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pNd[]  = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_pXan	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pXan[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_pXps	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pXps[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_pXsp	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pXsp[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
string_pXwd	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar string_pXwd[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
strings	my_project/libgit2/include/git2/strarray.h	/^	char **strings;$/;"	m	struct:git_strarray	typeref:typename:char **
strings	my_project/libgit2/src/libgit2/config_list.c	/^	git_strmap *strings;$/;"	m	struct:git_config_list	typeref:typename:git_strmap *	file:
strip_comments	my_project/libgit2/src/libgit2/config_parse.c	/^static int strip_comments(char *line, int in_quotes)$/;"	f	typeref:typename:int	file:
strip_cr_from_buf	my_project/libgit2/tests/clar/clar_libgit2.c	/^static size_t strip_cr_from_buf(char *start, size_t len)$/;"	f	typeref:typename:size_t	file:
strip_spaces	my_project/libgit2/src/libgit2/diff.c	/^static void strip_spaces(git_str *buf)$/;"	f	typeref:typename:void	file:
strlen	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define strlen(/;"	d
strm	my_project/libgit2/deps/zlib/deflate.h	/^    z_streamp strm;      \/* pointer back to this zlib stream *\/$/;"	m	struct:internal_state	typeref:typename:z_streamp
strm	my_project/libgit2/deps/zlib/gzguts.h	/^    z_stream strm;          \/* stream structure in-place (not a pointer) *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:z_stream
strm	my_project/libgit2/deps/zlib/inflate.h	/^    z_streamp strm;             \/* pointer back to this zlib stream *\/$/;"	m	struct:inflate_state	typeref:typename:z_streamp
strncasecmp	my_project/libgit2/src/util/win32/msvc-compat.h	/^#define strncasecmp(/;"	d
strncmp	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define strncmp(/;"	d
strncomp	my_project/libgit2/src/libgit2/diff.h	/^	int (*strncomp)(const char *, const char *, size_t);$/;"	m	struct:git_diff	typeref:typename:int (*)(const char *,const char *,size_t)
strncomp	my_project/libgit2/src/libgit2/iterator.h	/^	int (*strncomp)(const char *a, const char *b, size_t n);$/;"	m	struct:git_iterator	typeref:typename:int (*)(const char * a,const char * b,size_t n)
strncomp	my_project/libgit2/src/libgit2/pathspec.c	/^	int (*strncomp)(const char *, const char *, size_t);$/;"	m	struct:pathspec_match_context	typeref:typename:int (*)(const char *,const char *,size_t)	file:
strncpy	my_project/libgit2/tests/clar/clar.c	/^#			define strncpy(/;"	d	file:
strstart	my_project/libgit2/deps/zlib/deflate.h	/^    uInt strstart;               \/* start of string to insert *\/$/;"	m	struct:internal_state	typeref:typename:uInt
stub_list	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct stub_list {$/;"	s	file:
stub_list	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} stub_list;$/;"	t	typeref:struct:stub_list	file:
stubs	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  stub_list *stubs;$/;"	m	struct:compiler_common	typeref:typename:stub_list *	file:
study_data	my_project/libgit2/deps/pcre/pcre.h	/^  void *study_data;               \/* Opaque data from pcre_study() *\/$/;"	m	struct:pcre16_extra	typeref:typename:void *
study_data	my_project/libgit2/deps/pcre/pcre.h	/^  void *study_data;               \/* Opaque data from pcre_study() *\/$/;"	m	struct:pcre32_extra	typeref:typename:void *
study_data	my_project/libgit2/deps/pcre/pcre.h	/^  void *study_data;               \/* Opaque data from pcre_study() *\/$/;"	m	struct:pcre_extra	typeref:typename:void *
style	my_project/libgit2/deps/xdiff/xdiff.h	/^	int style;$/;"	m	struct:s_xmparam	typeref:typename:int
sub	my_project/libgit2/tests/util/dirent.c	/^	char *sub;		\/* sub-directory name *\/$/;"	m	struct:walk_data	typeref:typename:char *	file:
sub	my_project/libgit2/tests/util/dirent.c	/^static walk_data sub = {$/;"	v	typeref:typename:walk_data	file:
sub_end_of_word	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar sub_end_of_word[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
sub_names	my_project/libgit2/tests/util/dirent.c	/^static name_data sub_names[] = {$/;"	v	typeref:typename:name_data[]	file:
sub_slash	my_project/libgit2/tests/util/dirent.c	/^static walk_data sub_slash = {$/;"	v	typeref:typename:walk_data	file:
sub_start_of_word	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar sub_start_of_word[] = {$/;"	v	typeref:typename:const pcre_uchar[]	file:
subcmd	my_project/libgit2/examples/remote.c	/^enum subcmd {$/;"	g	file:
subcmd	my_project/libgit2/examples/stash.c	/^enum subcmd {$/;"	g	file:
subcmd_add	my_project/libgit2/examples/remote.c	/^	subcmd_add,$/;"	e	enum:subcmd	file:
subcmd_remove	my_project/libgit2/examples/remote.c	/^	subcmd_remove,$/;"	e	enum:subcmd	file:
subcmd_rename	my_project/libgit2/examples/remote.c	/^	subcmd_rename,$/;"	e	enum:subcmd	file:
subcmd_seturl	my_project/libgit2/examples/remote.c	/^	subcmd_seturl,$/;"	e	enum:subcmd	file:
subcmd_show	my_project/libgit2/examples/remote.c	/^	subcmd_show$/;"	e	enum:subcmd	file:
subject	my_project/libgit2/deps/pcre/pcre.h	/^  PCRE_SPTR    subject;           \/* The subject being matched *\/$/;"	m	struct:pcre_callout_block	typeref:typename:PCRE_SPTR
subject	my_project/libgit2/deps/pcre/pcre.h	/^  PCRE_SPTR16  subject;           \/* The subject being matched *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:PCRE_SPTR16
subject	my_project/libgit2/deps/pcre/pcre.h	/^  PCRE_SPTR32  subject;           \/* The subject being matched *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:PCRE_SPTR32
subject_length	my_project/libgit2/deps/pcre/pcre.h	/^  int          subject_length;    \/* The length of the subject *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
subject_length	my_project/libgit2/deps/pcre/pcre.h	/^  int          subject_length;    \/* The length of the subject *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
subject_length	my_project/libgit2/deps/pcre/pcre.h	/^  int          subject_length;    \/* The length of the subject *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
subject_position	my_project/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR subject_position;   \/* Position at start of recursion *\/$/;"	m	struct:recursion_info	typeref:typename:PCRE_PUCHAR
subject_position	my_project/libgit2/deps/pcre/pcre_internal.h	/^  PCRE_PUCHAR subject_position;$/;"	m	struct:dfa_recursion_info	typeref:typename:PCRE_PUCHAR
subject_prefix	my_project/libgit2/include/git2/email.h	/^	const char *subject_prefix;$/;"	m	struct:__anonbd19e2c20208	typeref:typename:const char *
submodule	my_project/libgit2/src/libgit2/checkout.c	/^	             submodule:1;$/;"	m	struct:__anon35c6e5c60308	typeref:typename:unsigned int:1	file:
submodule	my_project/libgit2/tests/libgit2/worktree/config.c	/^static worktree_fixture submodule =$/;"	v	typeref:typename:worktree_fixture	file:
submodule_alloc	my_project/libgit2/src/libgit2/submodule.c	/^static int submodule_alloc($/;"	f	typeref:typename:int	file:
submodule_cache	my_project/libgit2/src/libgit2/diff_generate.c	/^	git_strmap *submodule_cache;$/;"	m	struct:__anonff5a2cd30208	typeref:typename:git_strmap *	file:
submodule_cache	my_project/libgit2/src/libgit2/repository.h	/^	git_strmap *submodule_cache;$/;"	m	struct:git_repository	typeref:typename:git_strmap *
submodule_cache_initialized	my_project/libgit2/src/libgit2/diff_generate.c	/^	bool submodule_cache_initialized;$/;"	m	struct:__anonff5a2cd30208	typeref:typename:bool	file:
submodule_cmp	my_project/libgit2/src/libgit2/submodule.c	/^static int submodule_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
submodule_config_error	my_project/libgit2/src/libgit2/submodule.c	/^static int submodule_config_error(const char *property, const char *value)$/;"	f	typeref:typename:int	file:
submodule_config_key_trunc_puts	my_project/libgit2/src/libgit2/submodule.c	/^static int submodule_config_key_trunc_puts(git_str *key, const char *suffix)$/;"	f	typeref:typename:int	file:
submodule_copy_oid_maybe	my_project/libgit2/src/libgit2/submodule.c	/^static void submodule_copy_oid_maybe($/;"	f	typeref:typename:void	file:
submodule_expectations	my_project/libgit2/tests/libgit2/submodule/status.c	/^} submodule_expectations;$/;"	t	typeref:struct:__anon0b5f5e9e0108	file:
submodule_free_dup	my_project/libgit2/src/libgit2/submodule.c	/^static void submodule_free_dup(void *sm)$/;"	f	typeref:typename:void	file:
submodule_get_index_status	my_project/libgit2/src/libgit2/submodule.c	/^static void submodule_get_index_status(unsigned int *status, git_submodule *sm)$/;"	f	typeref:typename:void	file:
submodule_get_or_create	my_project/libgit2/src/libgit2/submodule.c	/^static int submodule_get_or_create(git_submodule **out, git_repository *repo, git_strmap *map, c/;"	f	typeref:typename:int	file:
submodule_get_wd_status	my_project/libgit2/src/libgit2/submodule.c	/^static void submodule_get_wd_status($/;"	f	typeref:typename:void	file:
submodule_is_config_only	my_project/libgit2/src/libgit2/checkout.c	/^static bool submodule_is_config_only($/;"	f	typeref:typename:bool	file:
submodule_load_each	my_project/libgit2/src/libgit2/submodule.c	/^static int submodule_load_each(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
submodule_load_from_wd_lite	my_project/libgit2/src/libgit2/submodule.c	/^static int submodule_load_from_wd_lite(git_submodule *sm)$/;"	f	typeref:typename:int	file:
submodule_parse_recurse	my_project/libgit2/src/libgit2/submodule.c	/^static int submodule_parse_recurse(git_submodule_recurse_t *out, const char *value)$/;"	f	typeref:typename:int	file:
submodule_read_config	my_project/libgit2/src/libgit2/submodule.c	/^static int submodule_read_config(git_submodule *sm, git_config *cfg)$/;"	f	typeref:typename:int	file:
submodule_release	my_project/libgit2/src/libgit2/submodule.c	/^static void submodule_release(git_submodule *sm)$/;"	f	typeref:typename:void	file:
submodule_repo_create	my_project/libgit2/src/libgit2/submodule.c	/^static int submodule_repo_create($/;"	f	typeref:typename:int	file:
submodule_repo_init	my_project/libgit2/src/libgit2/submodule.c	/^static int submodule_repo_init($/;"	f	typeref:typename:int	file:
submodule_set_lookup_error	my_project/libgit2/src/libgit2/submodule.c	/^static void submodule_set_lookup_error(int error, const char *name)$/;"	f	typeref:typename:void	file:
submodule_update_from_head_data	my_project/libgit2/src/libgit2/submodule.c	/^static void submodule_update_from_head_data($/;"	f	typeref:typename:void	file:
submodule_update_from_index_entry	my_project/libgit2/src/libgit2/submodule.c	/^static void submodule_update_from_index_entry($/;"	f	typeref:typename:void	file:
submodule_update_head	my_project/libgit2/src/libgit2/submodule.c	/^static int submodule_update_head(git_submodule *submodule)$/;"	f	typeref:typename:int	file:
submodule_update_index	my_project/libgit2/src/libgit2/submodule.c	/^static int submodule_update_index(git_submodule *sm)$/;"	f	typeref:typename:int	file:
submodule_update_to_str	my_project/libgit2/src/libgit2/submodule.c	/^static const char *submodule_update_to_str(git_submodule_update_t update)$/;"	f	typeref:typename:const char *	file:
submodules_from_head	my_project/libgit2/src/libgit2/submodule.c	/^static int submodules_from_head(git_strmap *map, git_tree *head, git_config *cfg)$/;"	f	typeref:typename:int	file:
submodules_from_index	my_project/libgit2/src/libgit2/submodule.c	/^static int submodules_from_index(git_strmap *map, git_index *idx, git_config *cfg)$/;"	f	typeref:typename:int	file:
subpath_len	my_project/libgit2/src/libgit2/tree.c	/^static size_t subpath_len(const char *path)$/;"	f	typeref:typename:size_t	file:
substitutes	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const pcre_uchar *substitutes[] = {$/;"	v	typeref:typename:const pcre_uchar * []	file:
subtransport	my_project/libgit2/include/git2/sys/transport.h	/^	git_smart_subtransport *subtransport; \/**< The owning subtransport *\/$/;"	m	struct:git_smart_subtransport_stream	typeref:typename:git_smart_subtransport *
subtransport	my_project/libgit2/tests/libgit2/transport/register.c	/^	git_smart_subtransport subtransport;$/;"	m	struct:custom_subtransport	typeref:typename:git_smart_subtransport	file:
succeed_certificate_check	my_project/libgit2/tests/libgit2/online/clone.c	/^static int succeed_certificate_check(git_cert *cert, int valid, const char *host, void *payload)$/;"	f	typeref:typename:int	file:
success	my_project/libgit2/tests/libgit2/online/push_util.h	/^	int success;$/;"	m	struct:__anonec09f7510408	typeref:typename:int
sudo_uid_lookup	my_project/libgit2/src/util/fs_path.c	/^static int sudo_uid_lookup(uid_t *out)$/;"	f	typeref:typename:int	file:
suite	my_project/libgit2/tests/clar/clar.c	/^	const char *suite;$/;"	m	struct:clar_report	typeref:typename:const char *	file:
suite	my_project/libgit2/tests/clar/generate.py	/^    suite = TestSuite(path, output)$/;"	v
suite_count	my_project/libgit2/tests/clar/generate.py	/^    def suite_count(self):$/;"	m	class:TestSuite
suite_idx	my_project/libgit2/tests/clar/clar.c	/^	size_t suite_idx;$/;"	m	struct:clar_explicit	typeref:typename:size_t	file:
suites_ran	my_project/libgit2/tests/clar/clar.c	/^	int suites_ran;$/;"	m	struct:__anon15d96e120108	typeref:typename:int	file:
sum	my_project/libgit2/tests/clar/clar_libgit2_timer.h	/^	uint64_t sum;$/;"	m	struct:cl_perf_timer	typeref:typename:uint64_t
sum	my_project/libgit2/tests/libgit2/perf/helper__perf__timer.h	/^	LARGE_INTEGER sum;$/;"	m	struct:perf__timer	typeref:typename:LARGE_INTEGER
sum	my_project/libgit2/tests/libgit2/perf/helper__perf__timer.h	/^	uint32_t sum;$/;"	m	struct:perf__timer	typeref:typename:uint32_t
summary	my_project/libgit2/include/git2/deprecated.h	/^	const char *summary;$/;"	m	struct:__anon325f306b0208	typeref:typename:const char *
summary	my_project/libgit2/src/libgit2/commit.h	/^	char *summary;$/;"	m	struct:git_commit	typeref:typename:char *
summary	my_project/libgit2/tests/clar/clar.c	/^	struct clar_summary *summary;$/;"	m	struct:__anon15d96e120108	typeref:struct:clar_summary *	file:
summary_filename	my_project/libgit2/tests/clar/clar.c	/^	char *summary_filename;$/;"	m	struct:__anon15d96e120108	typeref:typename:char *	file:
support_gnu_style	my_project/libgit2/src/cli/opt.c	/^static int support_gnu_style(unsigned int flags)$/;"	f	typeref:typename:int	file:
supports_ipv6	my_project/libgit2/tests/util/posix.c	/^static bool supports_ipv6(void)$/;"	f	typeref:typename:bool	file:
supports_unicode	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static bool supports_unicode(ntlm_client *ntlm)$/;"	f	typeref:typename:bool	file:
suseconds_t	my_project/libgit2/src/util/win32/win32-compat.h	/^typedef long suseconds_t;$/;"	t	typeref:typename:long
suspect	my_project/libgit2/src/libgit2/blame.h	/^	git_blame__origin *suspect;$/;"	m	struct:git_blame__entry	typeref:typename:git_blame__origin *
swap	my_project/libgit2/src/util/util.c	/^static void swap(uint8_t *a, uint8_t *b, size_t elsize)$/;"	f	typeref:typename:void	file:
swap_uint16	my_project/libgit2/deps/pcre/pcre_byte_order.c	/^swap_uint16(pcre_uint16 value)$/;"	f	typeref:typename:pcre_uint16	file:
swap_uint32	my_project/libgit2/deps/pcre/pcre_byte_order.c	/^swap_uint32(pcre_uint32 value)$/;"	f	typeref:typename:pcre_uint32	file:
switch_value	my_project/libgit2/src/cli/opt.h	/^	int switch_value;$/;"	m	struct:cli_opt_spec	typeref:typename:int
sym_buf	my_project/libgit2/deps/zlib/deflate.h	/^    uchf *sym_buf;        \/* buffer for distances and literals\/lengths *\/$/;"	m	struct:internal_state	typeref:typename:uchf *
sym_end	my_project/libgit2/deps/zlib/deflate.h	/^    uInt sym_end;       \/* symbol table full when sym_next reaches this *\/$/;"	m	struct:internal_state	typeref:typename:uInt
sym_next	my_project/libgit2/deps/zlib/deflate.h	/^    uInt sym_next;      \/* running index in sym_buf *\/$/;"	m	struct:internal_state	typeref:typename:uInt
symbol	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^		SYMBOL_INFO symbol;$/;"	m	struct:git_win32_leakcheck_stack_format::__anonc260a6b90108	typeref:typename:SYMBOL_INFO	file:
symbolic	my_project/libgit2/src/libgit2/refs.h	/^		char *symbolic;$/;"	m	union:git_reference::__anon5cf2b425010a	typeref:typename:char *
symbolic	my_project/libgit2/src/libgit2/transaction.c	/^		char *symbolic;$/;"	m	union:__anonbebdb9760208::__anonbebdb976030a	typeref:typename:char *	file:
symlink_or_fake	my_project/libgit2/tests/libgit2/checkout/icase.c	/^static int symlink_or_fake(git_repository *repo, const char *a, const char *b)$/;"	f	typeref:typename:int	file:
symref_target	my_project/libgit2/include/git2/net.h	/^	char *symref_target;$/;"	m	struct:git_remote_head	typeref:typename:char *
sync_one_submodule	my_project/libgit2/tests/libgit2/submodule/modify.c	/^static int sync_one_submodule($/;"	f	typeref:typename:int	file:
syncsearch	my_project/libgit2/deps/zlib/inflate.c	/^local unsigned syncsearch(unsigned FAR *have, const unsigned char FAR *buf,$/;"	f	typeref:typename:local unsigned
sysdir	my_project/libgit2/src/libgit2/attr_file.h	/^	git_str sysdir;$/;"	m	struct:__anon0df92d8f0a08	typeref:typename:git_str
system_attr_file	my_project/libgit2/src/libgit2/attr.c	/^static int system_attr_file($/;"	f	typeref:typename:int	file:
system_attr_path	my_project/libgit2/tests/libgit2/filter/systemattrs.c	/^static git_str system_attr_path = GIT_STR_INIT;$/;"	v	typeref:typename:git_str	file:
system_page_size	my_project/libgit2/src/util/pool.c	/^static size_t system_page_size = 0;$/;"	v	typeref:typename:size_t	file:
system_type	my_project/libgit2/tests/libgit2/index/crlf.c	/^static const char *system_type(void)$/;"	f	typeref:typename:const char *	file:
systype	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^static const char *systype;$/;"	v	typeref:typename:const char *	file:
systype	my_project/libgit2/tests/libgit2/index/crlf.c	/^	const char *systype;$/;"	m	struct:compare_data	typeref:typename:const char *	file:
t	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^	git_delta_t t;$/;"	m	struct:__anon2bf18d4b0108	typeref:typename:git_delta_t	file:
t40	my_project/libgit2/tests/libgit2/object/message.c	/^#define t40 /;"	d	file:
table	my_project/libgit2/deps/zlib/zutil.c	/^local ptr_table table[MAX_PTR];$/;"	v	typeref:typename:local ptr_table[]
table_bits	my_project/libgit2/deps/xdiff/xhistogram.c	/^	unsigned int table_bits,$/;"	m	struct:histindex	typeref:typename:unsigned int	file:
tables	my_project/libgit2/deps/pcre/pcre.h	/^  const unsigned char *tables;    \/* Pointer to character tables *\/$/;"	m	struct:pcre16_extra	typeref:typename:const unsigned char *
tables	my_project/libgit2/deps/pcre/pcre.h	/^  const unsigned char *tables;    \/* Pointer to character tables *\/$/;"	m	struct:pcre32_extra	typeref:typename:const unsigned char *
tables	my_project/libgit2/deps/pcre/pcre.h	/^  const unsigned char *tables;    \/* Pointer to character tables *\/$/;"	m	struct:pcre_extra	typeref:typename:const unsigned char *
tables	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uint8 *tables;         \/* Character tables *\/$/;"	m	struct:dfa_match_data	typeref:typename:const pcre_uint8 *
tables	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uint8 *tables;       \/* Pointer to tables or NULL for std *\/$/;"	m	struct:real_pcre32	typeref:typename:const pcre_uint8 *
tables	my_project/libgit2/deps/pcre/pcre_internal.h	/^  const pcre_uint8 *tables;       \/* Pointer to tables or NULL for std *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:const pcre_uint8 *
tables_length	my_project/libgit2/deps/pcre/pcre_internal.h	/^#define tables_length /;"	d
tag	my_project/libgit2/src/libgit2/describe.c	/^	git_tag *tag;$/;"	m	struct:commit_name	typeref:typename:git_tag *	file:
tag	my_project/libgit2/src/libgit2/describe.c	/^	struct possible_tag *tag;$/;"	m	struct:git_describe_result	typeref:struct:possible_tag *	file:
tag	my_project/libgit2/tests/libgit2/object/tag/peel.c	/^static git_tag *tag;$/;"	v	typeref:typename:git_tag *	file:
tag	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static object_data tag = {$/;"	v	typeref:typename:object_data
tag1_id	my_project/libgit2/tests/libgit2/object/tag/read.c	/^static const char *tag1_id = "b25fa35b38051e4ae45d4222e795f9df2e43f1d1";$/;"	v	typeref:typename:const char *	file:
tag2_id	my_project/libgit2/tests/libgit2/object/tag/read.c	/^static const char *tag2_id = "7b4384978d2493e851f9cca7858815fac9b10980";$/;"	v	typeref:typename:const char *	file:
tag2_id	my_project/libgit2/tests/libgit2/object/tag/write.c	/^static const char *tag2_id = "7b4384978d2493e851f9cca7858815fac9b10980";$/;"	v	typeref:typename:const char *	file:
tag_action	my_project/libgit2/examples/tag.c	/^typedef void (*tag_action)(tag_state *state);$/;"	t	typeref:typename:void (*)(tag_state * state)	file:
tag_bytes	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char tag_bytes[] = {$/;"	v	typeref:typename:unsigned char[]
tag_bytes_sha256	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char tag_bytes_sha256[] = {$/;"	v	typeref:typename:unsigned char[]
tag_cb_data	my_project/libgit2/src/libgit2/tag.c	/^} tag_cb_data;$/;"	t	typeref:struct:__anon317eab2c0108	file:
tag_data	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static unsigned char tag_data[] = {$/;"	v	typeref:typename:unsigned char[]
tag_data	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char tag_data[] = {$/;"	v	typeref:typename:unsigned char[]
tag_data_sha256	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char tag_data_sha256[] = {$/;"	v	typeref:typename:unsigned char[]
tag_error	my_project/libgit2/src/libgit2/tag.c	/^static int tag_error(const char *str)$/;"	f	typeref:typename:int	file:
tag_filter_data	my_project/libgit2/src/libgit2/tag.c	/^} tag_filter_data;$/;"	t	typeref:struct:__anon317eab2c0208	file:
tag_id	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static char *tag_id = "09d373e1dfdc16b129ceec6dd649739911541e05";$/;"	v	typeref:typename:char *
tag_list_cb	my_project/libgit2/src/libgit2/tag.c	/^static int tag_list_cb(const char *tag_name, git_oid *oid, void *data)$/;"	f	typeref:typename:int	file:
tag_name	my_project/libgit2/examples/tag.c	/^	const char *tag_name;$/;"	m	struct:tag_options	typeref:typename:const char *	file:
tag_name	my_project/libgit2/src/libgit2/tag.h	/^	char *tag_name;$/;"	m	struct:git_tag	typeref:typename:char *
tag_name_is_valid	my_project/libgit2/src/libgit2/tag.c	/^static bool tag_name_is_valid(const char *tag_name)$/;"	f	typeref:typename:bool	file:
tag_obj	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static git_rawobj tag_obj = {$/;"	v	typeref:typename:git_rawobj
tag_options	my_project/libgit2/examples/tag.c	/^struct tag_options {$/;"	s	file:
tag_options_init	my_project/libgit2/examples/tag.c	/^static void tag_options_init(struct tag_options *opts)$/;"	f	typeref:typename:void	file:
tag_parse	my_project/libgit2/src/libgit2/tag.c	/^static int tag_parse($/;"	f	typeref:typename:int	file:
tag_parsing	my_project/libgit2/examples/general.c	/^static void tag_parsing(git_repository *repo)$/;"	f	typeref:typename:void	file:
tag_sha256	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static object_data tag_sha256 = {$/;"	v	typeref:typename:object_data
tag_state	my_project/libgit2/examples/tag.c	/^} tag_state;$/;"	t	typeref:struct:__anonc073ee270108	file:
tagged	my_project/libgit2/src/libgit2/pack-objects.h	/^	             tagged:1,$/;"	m	struct:git_pobject	typeref:typename:unsigned int:1
tagged_commit	my_project/libgit2/tests/libgit2/object/tag/read.c	/^static const char *tagged_commit = "e90810b8df3e80c413d903f631643c716887138d";$/;"	v	typeref:typename:const char *	file:
tagged_commit	my_project/libgit2/tests/libgit2/object/tag/write.c	/^static const char *tagged_commit = "e90810b8df3e80c413d903f631643c716887138d";$/;"	v	typeref:typename:const char *	file:
tagger	my_project/libgit2/src/libgit2/tag.h	/^	git_signature *tagger;$/;"	m	struct:git_tag	typeref:typename:git_signature *
tagger_email	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^static const char* tagger_email = "vicent@github.com";$/;"	v	typeref:typename:const char *	file:
tagger_email	my_project/libgit2/tests/libgit2/object/tag/write.c	/^static const char* tagger_email = "vicent@github.com";$/;"	v	typeref:typename:const char *	file:
tagger_message	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^static const char* tagger_message = "This is my tag.\\n\\nThere are many tags, but this one is m/;"	v	typeref:typename:const char *	file:
tagger_message	my_project/libgit2/tests/libgit2/object/tag/write.c	/^static const char* tagger_message = "This is my tag.\\n\\nThere are many tags, but this one is m/;"	v	typeref:typename:const char *	file:
tagger_name	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^static const char* tagger_name = "Vicent Marti";$/;"	v	typeref:typename:const char *	file:
tagger_name	my_project/libgit2/tests/libgit2/object/tag/write.c	/^static const char* tagger_name = "Vicent Marti";$/;"	v	typeref:typename:const char *	file:
taggerless	my_project/libgit2/tests/libgit2/object/tag/read.c	/^static const char *taggerless = "4a23e2e65ad4e31c4c9db7dc746650bfad082679";$/;"	v	typeref:typename:const char *	file:
taglist	my_project/libgit2/src/libgit2/tag.c	/^	git_vector *taglist;$/;"	m	struct:__anon317eab2c0208	typeref:typename:git_vector *	file:
tags_cb	my_project/libgit2/src/libgit2/tag.c	/^static int tags_cb(const char *ref, void *data)$/;"	f	typeref:typename:int	file:
tail	my_project/libgit2/deps/xdiff/xtypes.h	/^	chanode_t *head, *tail;$/;"	m	struct:s_chastore	typeref:typename:chanode_t *
tail	my_project/libgit2/src/libgit2/oid.c	/^	const char *tail;$/;"	m	union:__anon312886ec010a	typeref:typename:const char *	file:
target	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *target;$/;"	m	struct:__anondc54b7e10408	typeref:typename:char *
target	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *target;$/;"	m	struct:ntlm_client	typeref:typename:char *
target	my_project/libgit2/examples/tag.c	/^	const char *target;$/;"	m	struct:tag_options	typeref:typename:const char *	file:
target	my_project/libgit2/src/libgit2/blame_git.c	/^	git_blame__origin *target;$/;"	m	struct:blame_chunk_cb_data	typeref:typename:git_blame__origin *	file:
target	my_project/libgit2/src/libgit2/checkout.c	/^	git_iterator *target;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_iterator *	file:
target	my_project/libgit2/src/libgit2/filter.c	/^	git_str *target;$/;"	m	struct:buf_stream	typeref:typename:git_str *	file:
target	my_project/libgit2/src/libgit2/filter.c	/^	git_writestream *target;$/;"	m	struct:buffered_stream	typeref:typename:git_writestream *	file:
target	my_project/libgit2/src/libgit2/refs.h	/^	} target;$/;"	m	struct:git_reference	typeref:union:git_reference::__anon5cf2b425010a
target	my_project/libgit2/src/libgit2/tag.h	/^	git_oid target;$/;"	m	struct:git_tag	typeref:typename:git_oid
target	my_project/libgit2/src/libgit2/transaction.c	/^	} target;$/;"	m	struct:__anonbebdb9760208	typeref:union:__anonbebdb9760208::__anonbebdb976030a	file:
target	my_project/libgit2/src/libgit2/transports/auth_gssapi.c	/^	git_str target;$/;"	m	struct:__anon7fc745b70108	typeref:typename:git_str	file:
target	my_project/libgit2/src/libgit2/transports/auth_sspi.c	/^	wchar_t *target;$/;"	m	struct:__anon0a0089cf0108	typeref:typename:wchar_t *	file:
target	my_project/libgit2/tests/libgit2/object/tag/peel.c	/^static git_object *target;$/;"	v	typeref:typename:git_object *	file:
target	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^static git_commit *target;$/;"	v	typeref:typename:git_commit *	file:
target	my_project/libgit2/tests/libgit2/reset/hard.c	/^static git_object *target;$/;"	v	typeref:typename:git_object *	file:
target	my_project/libgit2/tests/libgit2/reset/mixed.c	/^static git_object *target;$/;"	v	typeref:typename:git_object *	file:
target	my_project/libgit2/tests/libgit2/reset/soft.c	/^static git_object *target;$/;"	v	typeref:typename:git_object *	file:
target	my_project/libgit2/tests/util/url/joinpath.c	/^static git_net_url source, target;$/;"	v	typeref:typename:git_net_url	file:
targetExhausted	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^	targetExhausted,        \/* insuff. room in target for conversion *\/$/;"	e	enum:__anon2762a15e0103	file:
target_directory	my_project/libgit2/include/git2/checkout.h	/^	const char *target_directory; \/**< alternative checkout path to workdir *\/$/;"	m	struct:git_checkout_options	typeref:typename:const char *
target_domain	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *target_domain;$/;"	m	struct:__anondc54b7e10408	typeref:typename:char *
target_domain_dns	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *target_domain_dns;$/;"	m	struct:__anondc54b7e10408	typeref:typename:char *
target_info	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	unsigned char *target_info;$/;"	m	struct:__anondc54b7e10408	typeref:typename:unsigned char *
target_info_len	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	size_t target_info_len;$/;"	m	struct:__anondc54b7e10408	typeref:typename:size_t
target_is_dir	my_project/libgit2/src/util/win32/posix_w32.c	/^static bool target_is_dir(const char *target, const char *path)$/;"	f	typeref:typename:bool	file:
target_len	my_project/libgit2/src/libgit2/checkout.c	/^	size_t target_len;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:size_t	file:
target_limit	my_project/libgit2/include/git2/merge.h	/^	unsigned int target_limit;$/;"	m	struct:__anon1374edca0708	typeref:typename:unsigned int
target_path	my_project/libgit2/src/libgit2/checkout.c	/^	git_str target_path;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_str	file:
target_server	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *target_server;$/;"	m	struct:__anondc54b7e10408	typeref:typename:char *
target_server_dns	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *target_server_dns;$/;"	m	struct:__anondc54b7e10408	typeref:typename:char *
target_utf16	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *target_utf16;$/;"	m	struct:ntlm_client	typeref:typename:char *
target_utf16_len	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	size_t target_utf16_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
target_version	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_version target_version;$/;"	m	struct:__anondc54b7e10408	typeref:typename:ntlm_version
targets	my_project/libgit2/deps/pcre/CMakeLists.txt	/^set(targets)$/;"	v
targets	my_project/libgit2/tests/libgit2/diff/rename.c	/^	const char **targets;$/;"	m	struct:rename_expected	typeref:typename:const char **	file:
tasks	my_project/libgit2/.vscode/tasks.json	/^    "tasks": [$/;"	a
temp_buf	my_project/libgit2/src/libgit2/filter.c	/^	git_str *temp_buf;$/;"	m	struct:git_filter_list	typeref:typename:git_str *	file:
temp_buf	my_project/libgit2/src/libgit2/filter.c	/^	git_str temp_buf;$/;"	m	struct:buffered_stream	typeref:typename:git_str	file:
temp_buf	my_project/libgit2/src/libgit2/filter.h	/^	git_str *temp_buf;$/;"	m	struct:__anon9372afdb0108	typeref:typename:git_str *
temp_dir	my_project/libgit2/tests/benchmarks/benchmark_helpers.sh	/^temp_dir() {$/;"	f
template	my_project/libgit2/examples/init.c	/^	const char *template;$/;"	m	struct:init_opts	typeref:typename:const char *	file:
template_path	my_project/libgit2/include/git2/repository.h	/^	const char *template_path;$/;"	m	struct:__anon67af0d3a0408	typeref:typename:const char *
test	my_project/libgit2/tests/clar/clar.c	/^	const char *test;$/;"	m	struct:clar_report	typeref:typename:const char *	file:
test_4096	my_project/libgit2/tests/util/gitstr.c	/^const char *test_4096 = TESTSTR_4096;$/;"	v	typeref:typename:const char *
test_8192	my_project/libgit2/tests/util/gitstr.c	/^const char *test_8192 = TESTSTR_8192;$/;"	v	typeref:typename:const char *
test_abort	my_project/libgit2/tests/libgit2/rebase/abort.c	/^static void test_abort($/;"	f	typeref:typename:void	file:
test_add_entry	my_project/libgit2/tests/libgit2/index/add.c	/^static void test_add_entry($/;"	f	typeref:typename:void	file:
test_add_entry	my_project/libgit2/tests/libgit2/submodule/add.c	/^static void test_add_entry($/;"	f	typeref:typename:void	file:
test_add_index	my_project/libgit2/tests/libgit2/index/crlf.c	/^static void test_add_index(const char *safecrlf, const char *autocrlf, const char *attrs)$/;"	f	typeref:typename:void	file:
test_alloc__cleanup	my_project/libgit2/tests/util/alloc.c	/^void test_alloc__cleanup(void)$/;"	f	typeref:typename:void
test_alloc__free_replenishes_byte	my_project/libgit2/tests/util/alloc.c	/^void test_alloc__free_replenishes_byte(void)$/;"	f	typeref:typename:void
test_alloc__oom	my_project/libgit2/tests/util/alloc.c	/^void test_alloc__oom(void)$/;"	f	typeref:typename:void
test_alloc__realloc	my_project/libgit2/tests/util/alloc.c	/^void test_alloc__realloc(void)$/;"	f	typeref:typename:void
test_alloc__single_byte_is_exhausted	my_project/libgit2/tests/util/alloc.c	/^void test_alloc__single_byte_is_exhausted(void)$/;"	f	typeref:typename:void
test_and_set	my_project/libgit2/deps/zlib/crc32.c	/^local int test_and_set(int volatile *flag) {$/;"	f	typeref:typename:local int
test_apply_both__adds_file	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__adds_file(void)$/;"	f	typeref:typename:void
test_apply_both__application_failure_leaves_index_unmodified	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__application_failure_leaves_index_unmodified(void)$/;"	f	typeref:typename:void
test_apply_both__application_failure_leaves_workdir_unmodified	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__application_failure_leaves_workdir_unmodified(void)$/;"	f	typeref:typename:void
test_apply_both__can_apply_nonconflicting_file_changes	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__can_apply_nonconflicting_file_changes(void)$/;"	f	typeref:typename:void
test_apply_both__cant_add_invalid_filename	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__cant_add_invalid_filename(void)$/;"	f	typeref:typename:void
test_apply_both__cant_modify_source_path_after_rename	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__cant_modify_source_path_after_rename(void)$/;"	f	typeref:typename:void
test_apply_both__cant_remove_file_twice	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__cant_remove_file_twice(void)$/;"	f	typeref:typename:void
test_apply_both__cant_rename_after_modify_nonexistent_target_path	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__cant_rename_after_modify_nonexistent_target_path(void)$/;"	f	typeref:typename:void
test_apply_both__cleanup	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__cleanup(void)$/;"	f	typeref:typename:void
test_apply_both__generated_diff	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__generated_diff(void)$/;"	f	typeref:typename:void
test_apply_both__honors_crlf_attributes	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__honors_crlf_attributes(void)$/;"	f	typeref:typename:void
test_apply_both__index_mode_must_match_workdir	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__index_mode_must_match_workdir(void)$/;"	f	typeref:typename:void
test_apply_both__index_must_match_workdir	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__index_must_match_workdir(void)$/;"	f	typeref:typename:void
test_apply_both__initialize	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__initialize(void)$/;"	f	typeref:typename:void
test_apply_both__keeps_nonconflicting_changes	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__keeps_nonconflicting_changes(void)$/;"	f	typeref:typename:void
test_apply_both__parsed_diff	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__parsed_diff(void)$/;"	f	typeref:typename:void
test_apply_both__readd_deleted_file	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__readd_deleted_file(void)$/;"	f	typeref:typename:void
test_apply_both__removes_file	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__removes_file(void)$/;"	f	typeref:typename:void
test_apply_both__rename	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__rename(void)$/;"	f	typeref:typename:void
test_apply_both__rename_1_to_2	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__rename_1_to_2(void)$/;"	f	typeref:typename:void
test_apply_both__rename_2_to_1	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__rename_2_to_1(void)$/;"	f	typeref:typename:void
test_apply_both__rename_a_to_b_to_c	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__rename_a_to_b_to_c(void)$/;"	f	typeref:typename:void
test_apply_both__rename_a_to_b_to_c_exact	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__rename_a_to_b_to_c_exact(void)$/;"	f	typeref:typename:void
test_apply_both__rename_and_modify	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__rename_and_modify(void)$/;"	f	typeref:typename:void
test_apply_both__rename_and_modify_deltas	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__rename_and_modify_deltas(void)$/;"	f	typeref:typename:void
test_apply_both__rename_circular	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__rename_circular(void)$/;"	f	typeref:typename:void
test_apply_both__rename_delta_after_modify_delta	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__rename_delta_after_modify_delta(void)$/;"	f	typeref:typename:void
test_apply_both__two_deltas_one_file	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__two_deltas_one_file(void)$/;"	f	typeref:typename:void
test_apply_both__two_deltas_one_new_file	my_project/libgit2/tests/libgit2/apply/both.c	/^void test_apply_both__two_deltas_one_new_file(void)$/;"	f	typeref:typename:void
test_apply_callbacks__cleanup	my_project/libgit2/tests/libgit2/apply/callbacks.c	/^void test_apply_callbacks__cleanup(void)$/;"	f	typeref:typename:void
test_apply_callbacks__delta_aborts	my_project/libgit2/tests/libgit2/apply/callbacks.c	/^void test_apply_callbacks__delta_aborts(void)$/;"	f	typeref:typename:void
test_apply_callbacks__delta_can_skip	my_project/libgit2/tests/libgit2/apply/callbacks.c	/^void test_apply_callbacks__delta_can_skip(void)$/;"	f	typeref:typename:void
test_apply_callbacks__hunk_can_skip	my_project/libgit2/tests/libgit2/apply/callbacks.c	/^void test_apply_callbacks__hunk_can_skip(void)$/;"	f	typeref:typename:void
test_apply_callbacks__initialize	my_project/libgit2/tests/libgit2/apply/callbacks.c	/^void test_apply_callbacks__initialize(void)$/;"	f	typeref:typename:void
test_apply_check__binary	my_project/libgit2/tests/libgit2/apply/check.c	/^void test_apply_check__binary(void)$/;"	f	typeref:typename:void
test_apply_check__cleanup	my_project/libgit2/tests/libgit2/apply/check.c	/^void test_apply_check__cleanup(void)$/;"	f	typeref:typename:void
test_apply_check__does_not_apply	my_project/libgit2/tests/libgit2/apply/check.c	/^void test_apply_check__does_not_apply(void)$/;"	f	typeref:typename:void
test_apply_check__generate_diff	my_project/libgit2/tests/libgit2/apply/check.c	/^void test_apply_check__generate_diff(void)$/;"	f	typeref:typename:void
test_apply_check__initialize	my_project/libgit2/tests/libgit2/apply/check.c	/^void test_apply_check__initialize(void)$/;"	f	typeref:typename:void
test_apply_check__parsed_diff	my_project/libgit2/tests/libgit2/apply/check.c	/^void test_apply_check__parsed_diff(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__add	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__add(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__append	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__append(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__append_nocontext	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__append_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__binary_add	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__binary_add(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__binary_change_delta	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__binary_change_delta(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__binary_change_literal	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__binary_change_literal(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__binary_delete	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__binary_delete(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__binary_no_change	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__binary_no_change(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__change_firstline	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__change_firstline(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__change_middle	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__change_middle(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__change_middle_and_lastline_nocontext	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__change_middle_and_lastline_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__change_middle_nocontext	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__change_middle_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__cleanup	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__cleanup(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__delete	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__delete(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__delete_and_change	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__delete_and_change(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__delete_and_change_nocontext	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__delete_and_change_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__delete_firstline	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__delete_firstline(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__from_empty_file	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__from_empty_file(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__initialize	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__initialize(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__lastline	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__lastline(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__no_change	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__no_change(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__patching_correctly_truncates_source	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__patching_correctly_truncates_source(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__prepend	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__prepend(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__prepend_and_append	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__prepend_and_append(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__prepend_and_change	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__prepend_and_change(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__prepend_and_change_nocontext	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__prepend_and_change_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__prepend_nocontext	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__prepend_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromdiff__to_empty_file	my_project/libgit2/tests/libgit2/apply/fromdiff.c	/^void test_apply_fromdiff__to_empty_file(void)$/;"	f	typeref:typename:void
test_apply_fromfile__add	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__add(void)$/;"	f	typeref:typename:void
test_apply_fromfile__append	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__append(void)$/;"	f	typeref:typename:void
test_apply_fromfile__append_no_nl	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__append_no_nl(void)$/;"	f	typeref:typename:void
test_apply_fromfile__append_nocontext	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__append_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromfile__binary_add	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__binary_add(void)$/;"	f	typeref:typename:void
test_apply_fromfile__binary_change_delta	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__binary_change_delta(void)$/;"	f	typeref:typename:void
test_apply_fromfile__binary_change_does_not_apply	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__binary_change_does_not_apply(void)$/;"	f	typeref:typename:void
test_apply_fromfile__binary_change_literal	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__binary_change_literal(void)$/;"	f	typeref:typename:void
test_apply_fromfile__binary_change_must_be_reversible	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__binary_change_must_be_reversible(void)$/;"	f	typeref:typename:void
test_apply_fromfile__binary_delete	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__binary_delete(void)$/;"	f	typeref:typename:void
test_apply_fromfile__change_firstline	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__change_firstline(void)$/;"	f	typeref:typename:void
test_apply_fromfile__change_middle	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__change_middle(void)$/;"	f	typeref:typename:void
test_apply_fromfile__change_middle_grow	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__change_middle_grow(void)$/;"	f	typeref:typename:void
test_apply_fromfile__change_middle_grow_nocontext	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__change_middle_grow_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromfile__change_middle_nocontext	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__change_middle_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromfile__change_middle_shrink	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__change_middle_shrink(void)$/;"	f	typeref:typename:void
test_apply_fromfile__change_middle_shrink_nocontext	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__change_middle_shrink_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromfile__cleanup	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__cleanup(void)$/;"	f	typeref:typename:void
test_apply_fromfile__delete	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__delete(void)$/;"	f	typeref:typename:void
test_apply_fromfile__empty_context	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__empty_context(void)$/;"	f	typeref:typename:void
test_apply_fromfile__empty_file_not_allowed	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__empty_file_not_allowed(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_corrupt_githeader	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__fail_corrupt_githeader(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_missing_hunk_header	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__fail_missing_hunk_header(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_missing_new_file	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__fail_missing_new_file(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_missing_old_file	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__fail_missing_old_file(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_no_changes	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__fail_no_changes(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_not_a_patch	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__fail_not_a_patch(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_truncated_1	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__fail_truncated_1(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_truncated_2	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__fail_truncated_2(void)$/;"	f	typeref:typename:void
test_apply_fromfile__fail_truncated_3	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__fail_truncated_3(void)$/;"	f	typeref:typename:void
test_apply_fromfile__from_empty_file	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__from_empty_file(void)$/;"	f	typeref:typename:void
test_apply_fromfile__initialize	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__initialize(void)$/;"	f	typeref:typename:void
test_apply_fromfile__lastline	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__lastline(void)$/;"	f	typeref:typename:void
test_apply_fromfile__modechange	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__modechange(void)$/;"	f	typeref:typename:void
test_apply_fromfile__modechange_with_modification	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__modechange_with_modification(void)$/;"	f	typeref:typename:void
test_apply_fromfile__noisy	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__noisy(void)$/;"	f	typeref:typename:void
test_apply_fromfile__noisy_nocontext	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__noisy_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromfile__prepend	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__prepend(void)$/;"	f	typeref:typename:void
test_apply_fromfile__prepend_and_append	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__prepend_and_append(void)$/;"	f	typeref:typename:void
test_apply_fromfile__prepend_nocontext	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__prepend_nocontext(void)$/;"	f	typeref:typename:void
test_apply_fromfile__rename_exact	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__rename_exact(void)$/;"	f	typeref:typename:void
test_apply_fromfile__rename_similar	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__rename_similar(void)$/;"	f	typeref:typename:void
test_apply_fromfile__rename_similar_quotedname	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__rename_similar_quotedname(void)$/;"	f	typeref:typename:void
test_apply_fromfile__to_empty_file	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^void test_apply_fromfile__to_empty_file(void)$/;"	f	typeref:typename:void
test_apply_index__adds_file	my_project/libgit2/tests/libgit2/apply/index.c	/^void test_apply_index__adds_file(void)$/;"	f	typeref:typename:void
test_apply_index__application_failure_leaves_index_unmodified	my_project/libgit2/tests/libgit2/apply/index.c	/^void test_apply_index__application_failure_leaves_index_unmodified(void)$/;"	f	typeref:typename:void
test_apply_index__can_apply_nonconflicting_file_changes	my_project/libgit2/tests/libgit2/apply/index.c	/^void test_apply_index__can_apply_nonconflicting_file_changes(void)$/;"	f	typeref:typename:void
test_apply_index__change_mode	my_project/libgit2/tests/libgit2/apply/index.c	/^void test_apply_index__change_mode(void)$/;"	f	typeref:typename:void
test_apply_index__cleanup	my_project/libgit2/tests/libgit2/apply/index.c	/^void test_apply_index__cleanup(void)$/;"	f	typeref:typename:void
test_apply_index__generate_diff	my_project/libgit2/tests/libgit2/apply/index.c	/^void test_apply_index__generate_diff(void)$/;"	f	typeref:typename:void
test_apply_index__initialize	my_project/libgit2/tests/libgit2/apply/index.c	/^void test_apply_index__initialize(void)$/;"	f	typeref:typename:void
test_apply_index__keeps_nonconflicting_changes	my_project/libgit2/tests/libgit2/apply/index.c	/^void test_apply_index__keeps_nonconflicting_changes(void)$/;"	f	typeref:typename:void
test_apply_index__modified_workdir_with_unmodified_index_is_ok	my_project/libgit2/tests/libgit2/apply/index.c	/^void test_apply_index__modified_workdir_with_unmodified_index_is_ok(void)$/;"	f	typeref:typename:void
test_apply_index__parsed_diff	my_project/libgit2/tests/libgit2/apply/index.c	/^void test_apply_index__parsed_diff(void)$/;"	f	typeref:typename:void
test_apply_index__removes_file	my_project/libgit2/tests/libgit2/apply/index.c	/^void test_apply_index__removes_file(void)$/;"	f	typeref:typename:void
test_apply_partial__cleanup	my_project/libgit2/tests/libgit2/apply/partial.c	/^void test_apply_partial__cleanup(void)$/;"	f	typeref:typename:void
test_apply_partial__delete_and_change_nocontext_abort_change	my_project/libgit2/tests/libgit2/apply/partial.c	/^void test_apply_partial__delete_and_change_nocontext_abort_change(void)$/;"	f	typeref:typename:void
test_apply_partial__delete_and_change_nocontext_abort_deletion	my_project/libgit2/tests/libgit2/apply/partial.c	/^void test_apply_partial__delete_and_change_nocontext_abort_deletion(void)$/;"	f	typeref:typename:void
test_apply_partial__delete_and_change_nocontext_skip_change	my_project/libgit2/tests/libgit2/apply/partial.c	/^void test_apply_partial__delete_and_change_nocontext_skip_change(void)$/;"	f	typeref:typename:void
test_apply_partial__delete_and_change_nocontext_skip_deletion	my_project/libgit2/tests/libgit2/apply/partial.c	/^void test_apply_partial__delete_and_change_nocontext_skip_deletion(void)$/;"	f	typeref:typename:void
test_apply_partial__delete_and_change_skip_change	my_project/libgit2/tests/libgit2/apply/partial.c	/^void test_apply_partial__delete_and_change_skip_change(void)$/;"	f	typeref:typename:void
test_apply_partial__delete_and_change_skip_deletion	my_project/libgit2/tests/libgit2/apply/partial.c	/^void test_apply_partial__delete_and_change_skip_deletion(void)$/;"	f	typeref:typename:void
test_apply_partial__initialize	my_project/libgit2/tests/libgit2/apply/partial.c	/^void test_apply_partial__initialize(void)$/;"	f	typeref:typename:void
test_apply_partial__prepend_and_change_nocontext_abort_addition	my_project/libgit2/tests/libgit2/apply/partial.c	/^void test_apply_partial__prepend_and_change_nocontext_abort_addition(void)$/;"	f	typeref:typename:void
test_apply_partial__prepend_and_change_nocontext_abort_change	my_project/libgit2/tests/libgit2/apply/partial.c	/^void test_apply_partial__prepend_and_change_nocontext_abort_change(void)$/;"	f	typeref:typename:void
test_apply_partial__prepend_and_change_nocontext_skip_addition	my_project/libgit2/tests/libgit2/apply/partial.c	/^void test_apply_partial__prepend_and_change_nocontext_skip_addition(void)$/;"	f	typeref:typename:void
test_apply_partial__prepend_and_change_nocontext_skip_change	my_project/libgit2/tests/libgit2/apply/partial.c	/^void test_apply_partial__prepend_and_change_nocontext_skip_change(void)$/;"	f	typeref:typename:void
test_apply_partial__prepend_and_change_skip_addition	my_project/libgit2/tests/libgit2/apply/partial.c	/^void test_apply_partial__prepend_and_change_skip_addition(void)$/;"	f	typeref:typename:void
test_apply_partial__prepend_and_change_skip_change	my_project/libgit2/tests/libgit2/apply/partial.c	/^void test_apply_partial__prepend_and_change_skip_change(void)$/;"	f	typeref:typename:void
test_apply_tree__adds_file	my_project/libgit2/tests/libgit2/apply/tree.c	/^void test_apply_tree__adds_file(void)$/;"	f	typeref:typename:void
test_apply_tree__cleanup	my_project/libgit2/tests/libgit2/apply/tree.c	/^void test_apply_tree__cleanup(void)$/;"	f	typeref:typename:void
test_apply_tree__initialize	my_project/libgit2/tests/libgit2/apply/tree.c	/^void test_apply_tree__initialize(void)$/;"	f	typeref:typename:void
test_apply_tree__one	my_project/libgit2/tests/libgit2/apply/tree.c	/^void test_apply_tree__one(void)$/;"	f	typeref:typename:void
test_apply_workdir__adds_file	my_project/libgit2/tests/libgit2/apply/workdir.c	/^void test_apply_workdir__adds_file(void)$/;"	f	typeref:typename:void
test_apply_workdir__application_failure_leaves_workdir_unmodified	my_project/libgit2/tests/libgit2/apply/workdir.c	/^void test_apply_workdir__application_failure_leaves_workdir_unmodified(void)$/;"	f	typeref:typename:void
test_apply_workdir__apply_many_changes_one	my_project/libgit2/tests/libgit2/apply/workdir.c	/^void test_apply_workdir__apply_many_changes_one(void)$/;"	f	typeref:typename:void
test_apply_workdir__apply_many_changes_two	my_project/libgit2/tests/libgit2/apply/workdir.c	/^void test_apply_workdir__apply_many_changes_two(void)$/;"	f	typeref:typename:void
test_apply_workdir__can_apply_nonconflicting_file_changes	my_project/libgit2/tests/libgit2/apply/workdir.c	/^void test_apply_workdir__can_apply_nonconflicting_file_changes(void)$/;"	f	typeref:typename:void
test_apply_workdir__change_mode	my_project/libgit2/tests/libgit2/apply/workdir.c	/^void test_apply_workdir__change_mode(void)$/;"	f	typeref:typename:void
test_apply_workdir__cleanup	my_project/libgit2/tests/libgit2/apply/workdir.c	/^void test_apply_workdir__cleanup(void)$/;"	f	typeref:typename:void
test_apply_workdir__generated_diff	my_project/libgit2/tests/libgit2/apply/workdir.c	/^void test_apply_workdir__generated_diff(void)$/;"	f	typeref:typename:void
test_apply_workdir__initialize	my_project/libgit2/tests/libgit2/apply/workdir.c	/^void test_apply_workdir__initialize(void)$/;"	f	typeref:typename:void
test_apply_workdir__keeps_nonconflicting_changes	my_project/libgit2/tests/libgit2/apply/workdir.c	/^void test_apply_workdir__keeps_nonconflicting_changes(void)$/;"	f	typeref:typename:void
test_apply_workdir__modified_index_with_unmodified_workdir_is_ok	my_project/libgit2/tests/libgit2/apply/workdir.c	/^void test_apply_workdir__modified_index_with_unmodified_workdir_is_ok(void)$/;"	f	typeref:typename:void
test_apply_workdir__parsed_diff	my_project/libgit2/tests/libgit2/apply/workdir.c	/^void test_apply_workdir__parsed_diff(void)$/;"	f	typeref:typename:void
test_apply_workdir__removes_file	my_project/libgit2/tests/libgit2/apply/workdir.c	/^void test_apply_workdir__removes_file(void)$/;"	f	typeref:typename:void
test_array__bsearch2	my_project/libgit2/tests/util/array.c	/^void test_array__bsearch2(void)$/;"	f	typeref:typename:void
test_arraysize_add	my_project/libgit2/tests/util/errors.c	/^static int test_arraysize_add(size_t one, size_t two)$/;"	f	typeref:typename:int	file:
test_arraysize_multiply	my_project/libgit2/tests/util/errors.c	/^static int test_arraysize_multiply(size_t nelem, size_t size)$/;"	f	typeref:typename:int	file:
test_assert__argument	my_project/libgit2/tests/util/assert.c	/^void test_assert__argument(void)$/;"	f	typeref:typename:void
test_assert__argument_with_non_int_return_type	my_project/libgit2/tests/util/assert.c	/^void test_assert__argument_with_non_int_return_type(void)$/;"	f	typeref:typename:void
test_assert__argument_with_void_return_type	my_project/libgit2/tests/util/assert.c	/^void test_assert__argument_with_void_return_type(void)$/;"	f	typeref:typename:void
test_assert__internal	my_project/libgit2/tests/util/assert.c	/^void test_assert__internal(void)$/;"	f	typeref:typename:void
test_assert__with_cleanup	my_project/libgit2/tests/util/assert.c	/^void test_assert__with_cleanup(void)$/;"	f	typeref:typename:void
test_attr_file__assign_variants	my_project/libgit2/tests/libgit2/attr/file.c	/^void test_attr_file__assign_variants(void)$/;"	f	typeref:typename:void
test_attr_file__check_attr_examples	my_project/libgit2/tests/libgit2/attr/file.c	/^void test_attr_file__check_attr_examples(void)$/;"	f	typeref:typename:void
test_attr_file__match_variants	my_project/libgit2/tests/libgit2/attr/file.c	/^void test_attr_file__match_variants(void)$/;"	f	typeref:typename:void
test_attr_file__simple_read	my_project/libgit2/tests/libgit2/attr/file.c	/^void test_attr_file__simple_read(void)$/;"	f	typeref:typename:void
test_attr_file__whitespace	my_project/libgit2/tests/libgit2/attr/file.c	/^void test_attr_file__whitespace(void)$/;"	f	typeref:typename:void
test_attr_flags__bare	my_project/libgit2/tests/libgit2/attr/flags.c	/^void test_attr_flags__bare(void)$/;"	f	typeref:typename:void
test_attr_flags__cleanup	my_project/libgit2/tests/libgit2/attr/flags.c	/^void test_attr_flags__cleanup(void)$/;"	f	typeref:typename:void
test_attr_flags__index_vs_workdir	my_project/libgit2/tests/libgit2/attr/flags.c	/^void test_attr_flags__index_vs_workdir(void)$/;"	f	typeref:typename:void
test_attr_flags__subdir	my_project/libgit2/tests/libgit2/attr/flags.c	/^void test_attr_flags__subdir(void)$/;"	f	typeref:typename:void
test_attr_lookup__assign_variants	my_project/libgit2/tests/libgit2/attr/lookup.c	/^void test_attr_lookup__assign_variants(void)$/;"	f	typeref:typename:void
test_attr_lookup__check_attr_examples	my_project/libgit2/tests/libgit2/attr/lookup.c	/^void test_attr_lookup__check_attr_examples(void)$/;"	f	typeref:typename:void
test_attr_lookup__from_buffer	my_project/libgit2/tests/libgit2/attr/lookup.c	/^void test_attr_lookup__from_buffer(void)$/;"	f	typeref:typename:void
test_attr_lookup__match_variants	my_project/libgit2/tests/libgit2/attr/lookup.c	/^void test_attr_lookup__match_variants(void)$/;"	f	typeref:typename:void
test_attr_lookup__simple	my_project/libgit2/tests/libgit2/attr/lookup.c	/^void test_attr_lookup__simple(void)$/;"	f	typeref:typename:void
test_attr_macro__adding_boolean_macros_succeeds	my_project/libgit2/tests/libgit2/attr/macro.c	/^void test_attr_macro__adding_boolean_macros_succeeds(void)$/;"	f	typeref:typename:void
test_attr_macro__adding_macro_succeeds	my_project/libgit2/tests/libgit2/attr/macro.c	/^void test_attr_macro__adding_macro_succeeds(void)$/;"	f	typeref:typename:void
test_attr_macro__bad_macros	my_project/libgit2/tests/libgit2/attr/macro.c	/^void test_attr_macro__bad_macros(void)$/;"	f	typeref:typename:void
test_attr_macro__changing_macro_in_root_wd_updates_attributes	my_project/libgit2/tests/libgit2/attr/macro.c	/^void test_attr_macro__changing_macro_in_root_wd_updates_attributes(void)$/;"	f	typeref:typename:void
test_attr_macro__cleanup	my_project/libgit2/tests/libgit2/attr/macro.c	/^void test_attr_macro__cleanup(void)$/;"	f	typeref:typename:void
test_attr_macro__macros	my_project/libgit2/tests/libgit2/attr/macro.c	/^void test_attr_macro__macros(void)$/;"	f	typeref:typename:void
test_attr_macro__macros_in_root_wd_apply	my_project/libgit2/tests/libgit2/attr/macro.c	/^void test_attr_macro__macros_in_root_wd_apply(void)$/;"	f	typeref:typename:void
test_attr_macro__macros_in_subdir_do_not_apply	my_project/libgit2/tests/libgit2/attr/macro.c	/^void test_attr_macro__macros_in_subdir_do_not_apply(void)$/;"	f	typeref:typename:void
test_attr_macro__recursive_macro_resolves	my_project/libgit2/tests/libgit2/attr/macro.c	/^void test_attr_macro__recursive_macro_resolves(void)$/;"	f	typeref:typename:void
test_attr_macro__redefining_macro_succeeds	my_project/libgit2/tests/libgit2/attr/macro.c	/^void test_attr_macro__redefining_macro_succeeds(void)$/;"	f	typeref:typename:void
test_attr_repo__bare_repo_with_index	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__bare_repo_with_index(void)$/;"	f	typeref:typename:void
test_attr_repo__cleanup	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__cleanup(void)$/;"	f	typeref:typename:void
test_attr_repo__foreach	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__foreach(void)$/;"	f	typeref:typename:void
test_attr_repo__get_many	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__get_many(void)$/;"	f	typeref:typename:void
test_attr_repo__get_many_in_place	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__get_many_in_place(void)$/;"	f	typeref:typename:void
test_attr_repo__get_one	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__get_one(void)$/;"	f	typeref:typename:void
test_attr_repo__get_one_start_deep	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__get_one_start_deep(void)$/;"	f	typeref:typename:void
test_attr_repo__initialize	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__initialize(void)$/;"	f	typeref:typename:void
test_attr_repo__inmemory_repo_without_index	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__inmemory_repo_without_index(void)$/;"	f	typeref:typename:void
test_attr_repo__manpage_example	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__manpage_example(void)$/;"	f	typeref:typename:void
test_attr_repo__rewrite	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__rewrite(void)$/;"	f	typeref:typename:void
test_attr_repo__rewrite_sysdir	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__rewrite_sysdir(void)$/;"	f	typeref:typename:void
test_attr_repo__staging_properly_normalizes_line_endings_according_to_gitattributes_directives	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__staging_properly_normalizes_line_endings_according_to_gitattributes_directi/;"	f	typeref:typename:void
test_attr_repo__sysdir	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__sysdir(void)$/;"	f	typeref:typename:void
test_attr_repo__sysdir_with_session	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__sysdir_with_session(void)$/;"	f	typeref:typename:void
test_attr_repo__unlink	my_project/libgit2/tests/libgit2/attr/repo.c	/^void test_attr_repo__unlink(void)$/;"	f	typeref:typename:void
test_bare_safe_path	my_project/libgit2/tests/libgit2/repo/open.c	/^static int test_bare_safe_path(const char *path)$/;"	f	typeref:typename:int	file:
test_bitvec__0	my_project/libgit2/tests/util/bitvec.c	/^void test_bitvec__0(void)$/;"	f	typeref:typename:void
test_blame_buffer__2_add_splits_hunk	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__2_add_splits_hunk(void)$/;"	f	typeref:typename:void
test_blame_buffer__4_edits	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__4_edits(void)$/;"	f	typeref:typename:void
test_blame_buffer__add_lines_at_end	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__add_lines_at_end(void)$/;"	f	typeref:typename:void
test_blame_buffer__add_splits_hunk	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__add_splits_hunk(void)$/;"	f	typeref:typename:void
test_blame_buffer__added_blocks	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__added_blocks(void)$/;"	f	typeref:typename:void
test_blame_buffer__added_line	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__added_line(void)$/;"	f	typeref:typename:void
test_blame_buffer__added_lines	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__added_lines(void)$/;"	f	typeref:typename:void
test_blame_buffer__cleanup	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__cleanup(void)$/;"	f	typeref:typename:void
test_blame_buffer__delete_crosses_hunk_boundary	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__delete_crosses_hunk_boundary(void)$/;"	f	typeref:typename:void
test_blame_buffer__deleted_line	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__deleted_line(void)$/;"	f	typeref:typename:void
test_blame_buffer__index	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__index(void)$/;"	f	typeref:typename:void
test_blame_buffer__initialize	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__initialize(void)$/;"	f	typeref:typename:void
test_blame_buffer__overlapping_blocks	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__overlapping_blocks(void)$/;"	f	typeref:typename:void
test_blame_buffer__replace_line	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__replace_line(void)$/;"	f	typeref:typename:void
test_blame_buffer__two_added_lines	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__two_added_lines(void)$/;"	f	typeref:typename:void
test_blame_buffer__two_added_lines_and_one_modified	my_project/libgit2/tests/libgit2/blame/buffer.c	/^void test_blame_buffer__two_added_lines_and_one_modified(void)$/;"	f	typeref:typename:void
test_blame_getters__byindex	my_project/libgit2/tests/libgit2/blame/getters.c	/^void test_blame_getters__byindex(void)$/;"	f	typeref:typename:void
test_blame_getters__byline	my_project/libgit2/tests/libgit2/blame/getters.c	/^void test_blame_getters__byline(void)$/;"	f	typeref:typename:void
test_blame_getters__cleanup	my_project/libgit2/tests/libgit2/blame/getters.c	/^void test_blame_getters__cleanup(void)$/;"	f	typeref:typename:void
test_blame_getters__initialize	my_project/libgit2/tests/libgit2/blame/getters.c	/^void test_blame_getters__initialize(void)$/;"	f	typeref:typename:void
test_blame_harder__c	my_project/libgit2/tests/libgit2/blame/harder.c	/^void test_blame_harder__c(void)$/;"	f	typeref:typename:void
test_blame_harder__cc	my_project/libgit2/tests/libgit2/blame/harder.c	/^void test_blame_harder__cc(void)$/;"	f	typeref:typename:void
test_blame_harder__ccc	my_project/libgit2/tests/libgit2/blame/harder.c	/^void test_blame_harder__ccc(void)$/;"	f	typeref:typename:void
test_blame_harder__cleanup	my_project/libgit2/tests/libgit2/blame/harder.c	/^void test_blame_harder__cleanup(void)$/;"	f	typeref:typename:void
test_blame_harder__initialize	my_project/libgit2/tests/libgit2/blame/harder.c	/^void test_blame_harder__initialize(void)$/;"	f	typeref:typename:void
test_blame_harder__m	my_project/libgit2/tests/libgit2/blame/harder.c	/^void test_blame_harder__m(void)$/;"	f	typeref:typename:void
test_blame_simple__can_blame_huge_file	my_project/libgit2/tests/libgit2/blame/simple.c	/^void test_blame_simple__can_blame_huge_file(void)$/;"	f	typeref:typename:void
test_blame_simple__can_ignore_whitespace_change	my_project/libgit2/tests/libgit2/blame/simple.c	/^void test_blame_simple__can_ignore_whitespace_change(void)$/;"	f	typeref:typename:void
test_blame_simple__can_restrict_lines_both	my_project/libgit2/tests/libgit2/blame/simple.c	/^void test_blame_simple__can_restrict_lines_both(void)$/;"	f	typeref:typename:void
test_blame_simple__can_restrict_lines_max	my_project/libgit2/tests/libgit2/blame/simple.c	/^void test_blame_simple__can_restrict_lines_max(void)$/;"	f	typeref:typename:void
test_blame_simple__can_restrict_lines_min	my_project/libgit2/tests/libgit2/blame/simple.c	/^void test_blame_simple__can_restrict_lines_min(void)$/;"	f	typeref:typename:void
test_blame_simple__can_restrict_to_first_parent_commits	my_project/libgit2/tests/libgit2/blame/simple.c	/^void test_blame_simple__can_restrict_to_first_parent_commits(void)$/;"	f	typeref:typename:void
test_blame_simple__can_restrict_to_newish_commits	my_project/libgit2/tests/libgit2/blame/simple.c	/^void test_blame_simple__can_restrict_to_newish_commits(void)$/;"	f	typeref:typename:void
test_blame_simple__cleanup	my_project/libgit2/tests/libgit2/blame/simple.c	/^void test_blame_simple__cleanup(void)$/;"	f	typeref:typename:void
test_blame_simple__initialize	my_project/libgit2/tests/libgit2/blame/simple.c	/^void test_blame_simple__initialize(void)$/;"	f	typeref:typename:void
test_blame_simple__trivial_blamerepo	my_project/libgit2/tests/libgit2/blame/simple.c	/^void test_blame_simple__trivial_blamerepo(void)$/;"	f	typeref:typename:void
test_blame_simple__trivial_libgit2	my_project/libgit2/tests/libgit2/blame/simple.c	/^void test_blame_simple__trivial_libgit2(void)$/;"	f	typeref:typename:void
test_blame_simple__trivial_libgit2_under_cache_pressure	my_project/libgit2/tests/libgit2/blame/simple.c	/^void test_blame_simple__trivial_libgit2_under_cache_pressure(void)$/;"	f	typeref:typename:void
test_blame_simple__trivial_testrepo	my_project/libgit2/tests/libgit2/blame/simple.c	/^void test_blame_simple__trivial_testrepo(void)$/;"	f	typeref:typename:void
test_body	my_project/libgit2/tests/libgit2/object/raw/write.c	/^void test_body(object_data *d, git_rawobj *o)$/;"	f	typeref:typename:void
test_canonicalize	my_project/libgit2/tests/util/path/win32.c	/^static void test_canonicalize(const wchar_t *in, const wchar_t *expected)$/;"	f	typeref:typename:void	file:
test_checkout	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^static void test_checkout(const char *autocrlf, const char *attrs)$/;"	f	typeref:typename:void	file:
test_checkout_binaryunicode__autocrlf	my_project/libgit2/tests/libgit2/checkout/binaryunicode.c	/^void test_checkout_binaryunicode__autocrlf(void)$/;"	f	typeref:typename:void
test_checkout_binaryunicode__cleanup	my_project/libgit2/tests/libgit2/checkout/binaryunicode.c	/^void test_checkout_binaryunicode__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_binaryunicode__initialize	my_project/libgit2/tests/libgit2/checkout/binaryunicode.c	/^void test_checkout_binaryunicode__initialize(void)$/;"	f	typeref:typename:void
test_checkout_binaryunicode__noautocrlf	my_project/libgit2/tests/libgit2/checkout/binaryunicode.c	/^void test_checkout_binaryunicode__noautocrlf(void)$/;"	f	typeref:typename:void
test_checkout_conflict__add_add	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__add_add(void)$/;"	f	typeref:typename:void
test_checkout_conflict__automerge	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__automerge(void)$/;"	f	typeref:typename:void
test_checkout_conflict__cleanup	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_conflict__diff3	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__diff3(void)$/;"	f	typeref:typename:void
test_checkout_conflict__directory_file	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__directory_file(void)$/;"	f	typeref:typename:void
test_checkout_conflict__directory_file_with_custom_labels	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__directory_file_with_custom_labels(void)$/;"	f	typeref:typename:void
test_checkout_conflict__ignored	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__ignored(void)$/;"	f	typeref:typename:void
test_checkout_conflict__initialize	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__initialize(void)$/;"	f	typeref:typename:void
test_checkout_conflict__link_file	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__link_file(void)$/;"	f	typeref:typename:void
test_checkout_conflict__links	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__links(void)$/;"	f	typeref:typename:void
test_checkout_conflict__mode_change	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__mode_change(void)$/;"	f	typeref:typename:void
test_checkout_conflict__name_mangled_file_exists_in_workdir	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__name_mangled_file_exists_in_workdir(void)$/;"	f	typeref:typename:void
test_checkout_conflict__ours	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__ours(void)$/;"	f	typeref:typename:void
test_checkout_conflict__path_filters	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__path_filters(void)$/;"	f	typeref:typename:void
test_checkout_conflict__rename_keep_ours	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__rename_keep_ours(void)$/;"	f	typeref:typename:void
test_checkout_conflict__renames	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__renames(void)$/;"	f	typeref:typename:void
test_checkout_conflict__report_progress	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__report_progress(void)$/;"	f	typeref:typename:void
test_checkout_conflict__theirs	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__theirs(void)$/;"	f	typeref:typename:void
test_checkout_conflict__update_only	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^void test_checkout_conflict__update_only(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_false_index_size_is_unfiltered_size	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_false_index_size_is_unfiltered_size(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_false_no_attrs	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_false_no_attrs(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_false_text_auto_attr	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_false_text_auto_attr(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_input_no_attrs	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_input_no_attrs(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_input_text_auto_attr	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_input_text_auto_attr(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_true_index_size_is_filtered_size	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_true_index_size_is_filtered_size(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_true_no_attrs	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_true_no_attrs(void)$/;"	f	typeref:typename:void
test_checkout_crlf__autocrlf_true_text_auto_attr	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__autocrlf_true_text_auto_attr(void)$/;"	f	typeref:typename:void
test_checkout_crlf__can_write_empty_file	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__can_write_empty_file(void)$/;"	f	typeref:typename:void
test_checkout_crlf__cleanup	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_crlf__detect_crlf_autocrlf_false	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__detect_crlf_autocrlf_false(void)$/;"	f	typeref:typename:void
test_checkout_crlf__detect_crlf_autocrlf_true	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__detect_crlf_autocrlf_true(void)$/;"	f	typeref:typename:void
test_checkout_crlf__detect_crlf_autocrlf_true_utf8	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__detect_crlf_autocrlf_true_utf8(void)$/;"	f	typeref:typename:void
test_checkout_crlf__initialize	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__initialize(void)$/;"	f	typeref:typename:void
test_checkout_crlf__matches_core_git	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__matches_core_git(void)$/;"	f	typeref:typename:void
test_checkout_crlf__with_ident	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^void test_checkout_crlf__with_ident(void)$/;"	f	typeref:typename:void
test_checkout_fails	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^static void test_checkout_fails(const char *refname, const char *filename)$/;"	f	typeref:typename:void	file:
test_checkout_head__cleanup	my_project/libgit2/tests/libgit2/checkout/head.c	/^void test_checkout_head__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_head__do_not_remove_untracked_file	my_project/libgit2/tests/libgit2/checkout/head.c	/^void test_checkout_head__do_not_remove_untracked_file(void)$/;"	f	typeref:typename:void
test_checkout_head__do_not_remove_untracked_file_in_subdir	my_project/libgit2/tests/libgit2/checkout/head.c	/^void test_checkout_head__do_not_remove_untracked_file_in_subdir(void)$/;"	f	typeref:typename:void
test_checkout_head__do_remove_tracked_subdir	my_project/libgit2/tests/libgit2/checkout/head.c	/^void test_checkout_head__do_remove_tracked_subdir(void)$/;"	f	typeref:typename:void
test_checkout_head__do_remove_untracked_paths	my_project/libgit2/tests/libgit2/checkout/head.c	/^void test_checkout_head__do_remove_untracked_paths(void)$/;"	f	typeref:typename:void
test_checkout_head__initialize	my_project/libgit2/tests/libgit2/checkout/head.c	/^void test_checkout_head__initialize(void)$/;"	f	typeref:typename:void
test_checkout_head__obeys_filemode_false	my_project/libgit2/tests/libgit2/checkout/head.c	/^void test_checkout_head__obeys_filemode_false(void)$/;"	f	typeref:typename:void
test_checkout_head__obeys_filemode_true	my_project/libgit2/tests/libgit2/checkout/head.c	/^void test_checkout_head__obeys_filemode_true(void)$/;"	f	typeref:typename:void
test_checkout_head__typechange_index_and_workdir	my_project/libgit2/tests/libgit2/checkout/head.c	/^void test_checkout_head__typechange_index_and_workdir(void)$/;"	f	typeref:typename:void
test_checkout_head__typechange_workdir	my_project/libgit2/tests/libgit2/checkout/head.c	/^void test_checkout_head__typechange_workdir(void)$/;"	f	typeref:typename:void
test_checkout_head__unborn_head_returns_GIT_EUNBORNBRANCH	my_project/libgit2/tests/libgit2/checkout/head.c	/^void test_checkout_head__unborn_head_returns_GIT_EUNBORNBRANCH(void)$/;"	f	typeref:typename:void
test_checkout_head__with_index_only_tree	my_project/libgit2/tests/libgit2/checkout/head.c	/^void test_checkout_head__with_index_only_tree(void)$/;"	f	typeref:typename:void
test_checkout_head__workdir_filemode_is_simplified	my_project/libgit2/tests/libgit2/checkout/head.c	/^void test_checkout_head__workdir_filemode_is_simplified(void)$/;"	f	typeref:typename:void
test_checkout_icase__cleanup	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_icase__conflicts_with_casechanged_subtrees	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__conflicts_with_casechanged_subtrees(void)$/;"	f	typeref:typename:void
test_checkout_icase__ignores_unstaged_casechange	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__ignores_unstaged_casechange(void)$/;"	f	typeref:typename:void
test_checkout_icase__initialize	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__initialize(void)$/;"	f	typeref:typename:void
test_checkout_icase__overwrites_empty_folders_for_files	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__overwrites_empty_folders_for_files(void)$/;"	f	typeref:typename:void
test_checkout_icase__overwrites_files_for_files_when_forced	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__overwrites_files_for_files_when_forced(void)$/;"	f	typeref:typename:void
test_checkout_icase__overwrites_files_for_folders_when_forced	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__overwrites_files_for_folders_when_forced(void)$/;"	f	typeref:typename:void
test_checkout_icase__overwrites_folders_for_files_when_forced	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__overwrites_folders_for_files_when_forced(void)$/;"	f	typeref:typename:void
test_checkout_icase__overwrites_links_for_files_when_forced	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__overwrites_links_for_files_when_forced(void)$/;"	f	typeref:typename:void
test_checkout_icase__overwrites_links_for_folders_when_forced	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__overwrites_links_for_folders_when_forced(void)$/;"	f	typeref:typename:void
test_checkout_icase__refuses_to_overwrite_files_for_files	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__refuses_to_overwrite_files_for_files(void)$/;"	f	typeref:typename:void
test_checkout_icase__refuses_to_overwrite_files_for_folders	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__refuses_to_overwrite_files_for_folders(void)$/;"	f	typeref:typename:void
test_checkout_icase__refuses_to_overwrite_links_for_files	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__refuses_to_overwrite_links_for_files(void)$/;"	f	typeref:typename:void
test_checkout_icase__refuses_to_overwrite_links_for_folders	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__refuses_to_overwrite_links_for_folders(void)$/;"	f	typeref:typename:void
test_checkout_icase__refuses_to_overwrite_populated_folders_for_files	my_project/libgit2/tests/libgit2/checkout/icase.c	/^void test_checkout_icase__refuses_to_overwrite_populated_folders_for_files(void)$/;"	f	typeref:typename:void
test_checkout_index__adding_conflict_removes_stage_0	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__adding_conflict_removes_stage_0(void)$/;"	f	typeref:typename:void
test_checkout_index__calls_progress_callback	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__calls_progress_callback(void)$/;"	f	typeref:typename:void
test_checkout_index__can_checkout_a_newly_initialized_repository	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__can_checkout_a_newly_initialized_repository(void)$/;"	f	typeref:typename:void
test_checkout_index__can_create_missing_files	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__can_create_missing_files(void)$/;"	f	typeref:typename:void
test_checkout_index__can_disable_pathspec_match	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__can_disable_pathspec_match(void)$/;"	f	typeref:typename:void
test_checkout_index__can_get_repo_from_index	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__can_get_repo_from_index(void)$/;"	f	typeref:typename:void
test_checkout_index__can_notify_of_skipped_files	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__can_notify_of_skipped_files(void)$/;"	f	typeref:typename:void
test_checkout_index__can_overcome_name_clashes	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__can_overcome_name_clashes(void)$/;"	f	typeref:typename:void
test_checkout_index__can_overwrite_modified_file	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__can_overwrite_modified_file(void)$/;"	f	typeref:typename:void
test_checkout_index__can_remove_untracked_files	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__can_remove_untracked_files(void)$/;"	f	typeref:typename:void
test_checkout_index__can_update_prefixed_files	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__can_update_prefixed_files(void)$/;"	f	typeref:typename:void
test_checkout_index__cannot_checkout_a_bare_repository	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__cannot_checkout_a_bare_repository(void)$/;"	f	typeref:typename:void
test_checkout_index__cleanup	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_index__conflicts_honor_coreautocrlf	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__conflicts_honor_coreautocrlf(void)$/;"	f	typeref:typename:void
test_checkout_index__coresymlinks_set_to_true_fails_when_unsupported	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__coresymlinks_set_to_true_fails_when_unsupported(void)$/;"	f	typeref:typename:void
test_checkout_index__donot_overwrite_modified_file_by_default	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__donot_overwrite_modified_file_by_default(void)$/;"	f	typeref:typename:void
test_checkout_index__honor_coreautocrlf_setting_set_to_true	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__honor_coreautocrlf_setting_set_to_true(void)$/;"	f	typeref:typename:void
test_checkout_index__honor_coresymlinks_default_false	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__honor_coresymlinks_default_false(void)$/;"	f	typeref:typename:void
test_checkout_index__honor_coresymlinks_default_true	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__honor_coresymlinks_default_true(void)$/;"	f	typeref:typename:void
test_checkout_index__honor_coresymlinks_setting_set_to_false	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__honor_coresymlinks_setting_set_to_false(void)$/;"	f	typeref:typename:void
test_checkout_index__honor_coresymlinks_setting_set_to_true	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__honor_coresymlinks_setting_set_to_true(void)$/;"	f	typeref:typename:void
test_checkout_index__honor_the_gitattributes_directives	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__honor_the_gitattributes_directives(void)$/;"	f	typeref:typename:void
test_checkout_index__honor_the_specified_pathspecs	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__honor_the_specified_pathspecs(void)$/;"	f	typeref:typename:void
test_checkout_index__initialize	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__initialize(void)$/;"	f	typeref:typename:void
test_checkout_index__issue_1397	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__issue_1397(void)$/;"	f	typeref:typename:void
test_checkout_index__options_dir_modes	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__options_dir_modes(void)$/;"	f	typeref:typename:void
test_checkout_index__options_disable_filters	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__options_disable_filters(void)$/;"	f	typeref:typename:void
test_checkout_index__options_open_flags	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__options_open_flags(void)$/;"	f	typeref:typename:void
test_checkout_index__options_override_file_modes	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__options_override_file_modes(void)$/;"	f	typeref:typename:void
test_checkout_index__target_directory	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__target_directory(void)$/;"	f	typeref:typename:void
test_checkout_index__target_directory_from_bare	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__target_directory_from_bare(void)$/;"	f	typeref:typename:void
test_checkout_index__validates_struct_version	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__validates_struct_version(void)$/;"	f	typeref:typename:void
test_checkout_index__wont_notify_of_expected_line_ending_changes	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__wont_notify_of_expected_line_ending_changes(void)$/;"	f	typeref:typename:void
test_checkout_index__writes_conflict_file	my_project/libgit2/tests/libgit2/checkout/index.c	/^void test_checkout_index__writes_conflict_file(void)$/;"	f	typeref:typename:void
test_checkout_nasty__cleanup	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_backslash_dotcapitalgit_path	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dot_backslash_dotcapitalgit_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_dotcapitalgit_path	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dot_dotcapitalgit_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_dotgit_path	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dot_dotgit_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_dotgit_tree	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dot_dotgit_tree(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_git_colon	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dot_git_colon(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_git_colon_stuff	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dot_git_colon_stuff(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_git_dot	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dot_git_dot(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_git_hfs_ignorable	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dot_git_hfs_ignorable(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_path	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dot_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_path_two	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dot_path_two(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dot_tree	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dot_tree(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotcapitalgit_backslash_path	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dotcapitalgit_backslash_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotcapitalgit_path	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dotcapitalgit_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotcapitalgit_tree	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dotcapitalgit_tree(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotdot_dotcapitalgit_path	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dotdot_dotcapitalgit_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotdot_dotgit_path	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dotdot_dotgit_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotdot_dotgit_tree	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dotdot_dotgit_tree(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotdot_path	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dotdot_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotdot_tree	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dotdot_tree(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotgit_alternate_data_stream	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dotgit_alternate_data_stream(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotgit_backslash_path	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dotgit_backslash_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotgit_path	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dotgit_path(void)$/;"	f	typeref:typename:void
test_checkout_nasty__dotgit_tree	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__dotgit_tree(void)$/;"	f	typeref:typename:void
test_checkout_nasty__git_custom_shortname	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__git_custom_shortname(void)$/;"	f	typeref:typename:void
test_checkout_nasty__git_tilde1	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__git_tilde1(void)$/;"	f	typeref:typename:void
test_checkout_nasty__gitmodules_symlink	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__gitmodules_symlink(void)$/;"	f	typeref:typename:void
test_checkout_nasty__honors_core_protecthfs	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__honors_core_protecthfs(void)$/;"	f	typeref:typename:void
test_checkout_nasty__honors_core_protectntfs	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__honors_core_protectntfs(void)$/;"	f	typeref:typename:void
test_checkout_nasty__initialize	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__initialize(void)$/;"	f	typeref:typename:void
test_checkout_nasty__only_looks_like_a_git_shortname	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__only_looks_like_a_git_shortname(void)$/;"	f	typeref:typename:void
test_checkout_nasty__symlink1	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__symlink1(void)$/;"	f	typeref:typename:void
test_checkout_nasty__symlink2	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__symlink2(void)$/;"	f	typeref:typename:void
test_checkout_nasty__symlink3	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^void test_checkout_nasty__symlink3(void)$/;"	f	typeref:typename:void
test_checkout_notify_cb	my_project/libgit2/tests/libgit2/checkout/index.c	/^static int test_checkout_notify_cb($/;"	f	typeref:typename:int	file:
test_checkout_passes	my_project/libgit2/tests/libgit2/checkout/nasty.c	/^static void test_checkout_passes(const char *refname, const char *filename)$/;"	f	typeref:typename:void	file:
test_checkout_tree__baseline_is_empty_when_no_index	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__baseline_is_empty_when_no_index(void)$/;"	f	typeref:typename:void
test_checkout_tree__caches_attributes_during_checkout	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__caches_attributes_during_checkout(void)$/;"	f	typeref:typename:void
test_checkout_tree__calls_progress_callback	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__calls_progress_callback(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_cancel_checkout_from_notify	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_cancel_checkout_from_notify(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_checkout_a_subdirectory_from_a_commit	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_checkout_a_subdirectory_from_a_commit(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_checkout_a_subdirectory_from_a_subtree	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_checkout_a_subdirectory_from_a_subtree(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_checkout_and_remove_directory	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_checkout_and_remove_directory(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_checkout_with_last_workdir_item_missing	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_checkout_with_last_workdir_item_missing(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_checkout_with_pattern	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_checkout_with_pattern(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_collect_perfdata	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_collect_perfdata(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_continue_when_dir_in_use	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_continue_when_dir_in_use(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_disable_pattern_match	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_disable_pattern_match(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_not_update_index	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_not_update_index(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_overwrite_ignored_by_default	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_overwrite_ignored_by_default(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_overwrite_ignored_folder_by_default	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_overwrite_ignored_folder_by_default(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_remove_ignored	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_remove_ignored(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_remove_untracked	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_remove_untracked(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_switch_branches	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_switch_branches(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_update_but_not_write_index	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_update_but_not_write_index(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_update_only	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_update_only(void)$/;"	f	typeref:typename:void
test_checkout_tree__can_write_to_empty_dirs	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__can_write_to_empty_dirs(void)$/;"	f	typeref:typename:void
test_checkout_tree__cannot_checkout_a_non_treeish	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__cannot_checkout_a_non_treeish(void)$/;"	f	typeref:typename:void
test_checkout_tree__case_changing_rename	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__case_changing_rename(void)$/;"	f	typeref:typename:void
test_checkout_tree__checking_out_a_conflicting_content_change_returns_ECONFLICT	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__checking_out_a_conflicting_content_change_returns_ECONFLICT(void)$/;"	f	typeref:typename:void
test_checkout_tree__checking_out_a_conflicting_type_change_returns_ECONFLICT	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__checking_out_a_conflicting_type_change_returns_ECONFLICT(void)$/;"	f	typeref:typename:void
test_checkout_tree__checking_out_a_conflicting_type_change_returns_ECONFLICT_2	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__checking_out_a_conflicting_type_change_returns_ECONFLICT_2(void)$/;"	f	typeref:typename:void
test_checkout_tree__cleanup	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_tree__conflict_on_ignored_folder_when_not_overwriting	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__conflict_on_ignored_folder_when_not_overwriting(void)$/;"	f	typeref:typename:void
test_checkout_tree__conflict_on_ignored_when_not_overwriting	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__conflict_on_ignored_when_not_overwriting(void)$/;"	f	typeref:typename:void
test_checkout_tree__doesnt_write_unrequested_files_to_worktree	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__doesnt_write_unrequested_files_to_worktree(void)$/;"	f	typeref:typename:void
test_checkout_tree__donot_update_deleted_file_by_default	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__donot_update_deleted_file_by_default(void)$/;"	f	typeref:typename:void
test_checkout_tree__dry_run	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__dry_run(void)$/;"	f	typeref:typename:void
test_checkout_tree__extremely_long_file_name	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__extremely_long_file_name(void)$/;"	f	typeref:typename:void
test_checkout_tree__fails_when_conflicts_exist_in_index	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__fails_when_conflicts_exist_in_index(void)$/;"	f	typeref:typename:void
test_checkout_tree__fails_when_dir_in_use	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__fails_when_dir_in_use(void)$/;"	f	typeref:typename:void
test_checkout_tree__filemode_preserved_in_index	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__filemode_preserved_in_index(void)$/;"	f	typeref:typename:void
test_checkout_tree__filemode_preserved_in_workdir	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__filemode_preserved_in_workdir(void)$/;"	f	typeref:typename:void
test_checkout_tree__initialize	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__initialize(void)$/;"	f	typeref:typename:void
test_checkout_tree__issue_1397	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__issue_1397(void)$/;"	f	typeref:typename:void
test_checkout_tree__mode_change_is_force_updated	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__mode_change_is_force_updated(void)$/;"	f	typeref:typename:void
test_checkout_tree__no_index_refresh	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__no_index_refresh(void)$/;"	f	typeref:typename:void
test_checkout_tree__nullopts	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__nullopts(void)$/;"	f	typeref:typename:void
test_checkout_tree__pathlist_checkout_ignores_non_matches	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__pathlist_checkout_ignores_non_matches(void)$/;"	f	typeref:typename:void
test_checkout_tree__removes_conflicts	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__removes_conflicts(void)$/;"	f	typeref:typename:void
test_checkout_tree__removes_conflicts_only_by_pathscope	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__removes_conflicts_only_by_pathscope(void)$/;"	f	typeref:typename:void
test_checkout_tree__retains_external_index_changes	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__retains_external_index_changes(void)$/;"	f	typeref:typename:void
test_checkout_tree__safe_proceeds_if_no_index	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__safe_proceeds_if_no_index(void)$/;"	f	typeref:typename:void
test_checkout_tree__target_directory_from_bare	my_project/libgit2/tests/libgit2/checkout/tree.c	/^void test_checkout_tree__target_directory_from_bare(void)$/;"	f	typeref:typename:void
test_checkout_typechange__checkout_typechanges_safe	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^void test_checkout_typechange__checkout_typechanges_safe(void)$/;"	f	typeref:typename:void
test_checkout_typechange__checkout_with_conflicts	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^void test_checkout_typechange__checkout_with_conflicts(void)$/;"	f	typeref:typename:void
test_checkout_typechange__cleanup	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^void test_checkout_typechange__cleanup(void)$/;"	f	typeref:typename:void
test_checkout_typechange__initialize	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^void test_checkout_typechange__initialize(void)$/;"	f	typeref:typename:void
test_checkout_typechange__status_char	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^void test_checkout_typechange__status_char(void)$/;"	f	typeref:typename:void
test_cherrypick_bare__automerge	my_project/libgit2/tests/libgit2/cherrypick/bare.c	/^void test_cherrypick_bare__automerge(void)$/;"	f	typeref:typename:void
test_cherrypick_bare__cleanup	my_project/libgit2/tests/libgit2/cherrypick/bare.c	/^void test_cherrypick_bare__cleanup(void)$/;"	f	typeref:typename:void
test_cherrypick_bare__conflicts	my_project/libgit2/tests/libgit2/cherrypick/bare.c	/^void test_cherrypick_bare__conflicts(void)$/;"	f	typeref:typename:void
test_cherrypick_bare__initialize	my_project/libgit2/tests/libgit2/cherrypick/bare.c	/^void test_cherrypick_bare__initialize(void)$/;"	f	typeref:typename:void
test_cherrypick_bare__orphan	my_project/libgit2/tests/libgit2/cherrypick/bare.c	/^void test_cherrypick_bare__orphan(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__automerge	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^void test_cherrypick_workdir__automerge(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__both_renamed	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^void test_cherrypick_workdir__both_renamed(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__cleanup	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^void test_cherrypick_workdir__cleanup(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__conflict_use_ours	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^void test_cherrypick_workdir__conflict_use_ours(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__conflicts	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^void test_cherrypick_workdir__conflicts(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__empty_result	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^void test_cherrypick_workdir__empty_result(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__initialize	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^void test_cherrypick_workdir__initialize(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__merge_fails_without_mainline_specified	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^void test_cherrypick_workdir__merge_fails_without_mainline_specified(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__merge_first_parent	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^void test_cherrypick_workdir__merge_first_parent(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__merge_second_parent	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^void test_cherrypick_workdir__merge_second_parent(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__nonmerge_fails_mainline_specified	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^void test_cherrypick_workdir__nonmerge_fails_mainline_specified(void)$/;"	f	typeref:typename:void
test_cherrypick_workdir__rename	my_project/libgit2/tests/libgit2/cherrypick/workdir.c	/^void test_cherrypick_workdir__rename(void)$/;"	f	typeref:typename:void
test_clone_empty__can_clone_an_empty_local_repo	my_project/libgit2/tests/libgit2/clone/empty.c	/^void test_clone_empty__can_clone_an_empty_local_repo(void)$/;"	f	typeref:typename:void
test_clone_empty__can_clone_an_empty_local_repo_barely	my_project/libgit2/tests/libgit2/clone/empty.c	/^void test_clone_empty__can_clone_an_empty_local_repo_barely(void)$/;"	f	typeref:typename:void
test_clone_empty__can_clone_an_empty_standard_repo	my_project/libgit2/tests/libgit2/clone/empty.c	/^void test_clone_empty__can_clone_an_empty_standard_repo(void)$/;"	f	typeref:typename:void
test_clone_empty__cleanup	my_project/libgit2/tests/libgit2/clone/empty.c	/^void test_clone_empty__cleanup(void)$/;"	f	typeref:typename:void
test_clone_empty__initialize	my_project/libgit2/tests/libgit2/clone/empty.c	/^void test_clone_empty__initialize(void)$/;"	f	typeref:typename:void
test_clone_empty__respects_initialbranch_config	my_project/libgit2/tests/libgit2/clone/empty.c	/^void test_clone_empty__respects_initialbranch_config(void)$/;"	f	typeref:typename:void
test_clone_local__git_style_unc_paths	my_project/libgit2/tests/libgit2/clone/local.c	/^void test_clone_local__git_style_unc_paths(void)$/;"	f	typeref:typename:void
test_clone_local__hardlinks	my_project/libgit2/tests/libgit2/clone/local.c	/^void test_clone_local__hardlinks(void)$/;"	f	typeref:typename:void
test_clone_local__shallow_fails	my_project/libgit2/tests/libgit2/clone/local.c	/^void test_clone_local__shallow_fails(void)$/;"	f	typeref:typename:void
test_clone_local__should_clone_local	my_project/libgit2/tests/libgit2/clone/local.c	/^void test_clone_local__should_clone_local(void)$/;"	f	typeref:typename:void
test_clone_local__standard_unc_paths_are_written_git_style	my_project/libgit2/tests/libgit2/clone/local.c	/^void test_clone_local__standard_unc_paths_are_written_git_style(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__bad_urls	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__bad_urls(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__can_cancel_clone_in_checkout	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__can_cancel_clone_in_checkout(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__can_cancel_clone_in_fetch	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__can_cancel_clone_in_fetch(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__can_checkout_given_branch	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__can_checkout_given_branch(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__can_detached_head	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__can_detached_head(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__can_prevent_the_checkout_of_a_standard_repo	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__can_prevent_the_checkout_of_a_standard_repo(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__cleanup	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__cleanup(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__clone_from_empty_sets_upstream	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__clone_from_empty_sets_upstream(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__clone_tag_to_tree	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__clone_tag_to_tree(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__clone_updates_reflog_properly	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__clone_updates_reflog_properly(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__cope_with_already_existing_directory	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__cope_with_already_existing_directory(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__custom_origin_name	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__custom_origin_name(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__defaults	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__defaults(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__do_not_clean_existing_directory	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__do_not_clean_existing_directory(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__fail_when_the_target_is_a_file	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__fail_when_the_target_is_a_file(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__fail_with_already_existing_but_non_empty_directory	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__fail_with_already_existing_but_non_empty_directory(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__initialize	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__initialize(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__local	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__local(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__local_absolute_path	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__local_absolute_path(void)$/;"	f	typeref:typename:void
test_clone_nonetwork__local_bare	my_project/libgit2/tests/libgit2/clone/nonetwork.c	/^void test_clone_nonetwork__local_bare(void)$/;"	f	typeref:typename:void
test_clone_transport__custom_transport	my_project/libgit2/tests/libgit2/clone/transport.c	/^void test_clone_transport__custom_transport(void)$/;"	f	typeref:typename:void
test_cmp	my_project/libgit2/tests/util/vector.c	/^static int test_cmp(const void *a, const void *b)$/;"	f	typeref:typename:int	file:
test_commit_commit__body	my_project/libgit2/tests/libgit2/commit/commit.c	/^void test_commit_commit__body(void)$/;"	f	typeref:typename:void
test_commit_commit__cleanup	my_project/libgit2/tests/libgit2/commit/commit.c	/^void test_commit_commit__cleanup(void)$/;"	f	typeref:typename:void
test_commit_commit__create_initial_commit	my_project/libgit2/tests/libgit2/commit/commit.c	/^void test_commit_commit__create_initial_commit(void)$/;"	f	typeref:typename:void
test_commit_commit__create_initial_commit_parent_not_current	my_project/libgit2/tests/libgit2/commit/commit.c	/^void test_commit_commit__create_initial_commit_parent_not_current(void)$/;"	f	typeref:typename:void
test_commit_commit__create_unexisting_update_ref	my_project/libgit2/tests/libgit2/commit/commit.c	/^void test_commit_commit__create_unexisting_update_ref(void)$/;"	f	typeref:typename:void
test_commit_commit__initialize	my_project/libgit2/tests/libgit2/commit/commit.c	/^void test_commit_commit__initialize(void)$/;"	f	typeref:typename:void
test_commit_commit__summary	my_project/libgit2/tests/libgit2/commit/commit.c	/^void test_commit_commit__summary(void)$/;"	f	typeref:typename:void
test_commit_create__cleanup	my_project/libgit2/tests/libgit2/commit/create.c	/^void test_commit_create__cleanup(void)$/;"	f	typeref:typename:void
test_commit_create__from_stage_newrepo	my_project/libgit2/tests/libgit2/commit/create.c	/^void test_commit_create__from_stage_newrepo(void)$/;"	f	typeref:typename:void
test_commit_create__from_stage_nochanges	my_project/libgit2/tests/libgit2/commit/create.c	/^void test_commit_create__from_stage_nochanges(void)$/;"	f	typeref:typename:void
test_commit_create__from_stage_simple	my_project/libgit2/tests/libgit2/commit/create.c	/^void test_commit_create__from_stage_simple(void)$/;"	f	typeref:typename:void
test_commit_create__initialize	my_project/libgit2/tests/libgit2/commit/create.c	/^void test_commit_create__initialize(void)$/;"	f	typeref:typename:void
test_commit_parent__can_retrieve_nth_generation_parent	my_project/libgit2/tests/libgit2/commit/parent.c	/^void test_commit_parent__can_retrieve_nth_generation_parent(void)$/;"	f	typeref:typename:void
test_commit_parent__cleanup	my_project/libgit2/tests/libgit2/commit/parent.c	/^void test_commit_parent__cleanup(void)$/;"	f	typeref:typename:void
test_commit_parent__initialize	my_project/libgit2/tests/libgit2/commit/parent.c	/^void test_commit_parent__initialize(void)$/;"	f	typeref:typename:void
test_commit_parse__arbitrary_field	my_project/libgit2/tests/libgit2/commit/parse.c	/^void test_commit_parse__arbitrary_field(void)$/;"	f	typeref:typename:void
test_commit_parse__cleanup	my_project/libgit2/tests/libgit2/commit/parse.c	/^void test_commit_parse__cleanup(void)$/;"	f	typeref:typename:void
test_commit_parse__details0	my_project/libgit2/tests/libgit2/commit/parse.c	/^void test_commit_parse__details0(void) {$/;"	f	typeref:typename:void
test_commit_parse__entire_commit	my_project/libgit2/tests/libgit2/commit/parse.c	/^void test_commit_parse__entire_commit(void)$/;"	f	typeref:typename:void
test_commit_parse__extract_signature	my_project/libgit2/tests/libgit2/commit/parse.c	/^void test_commit_parse__extract_signature(void)$/;"	f	typeref:typename:void
test_commit_parse__header	my_project/libgit2/tests/libgit2/commit/parse.c	/^void test_commit_parse__header(void)$/;"	f	typeref:typename:void
test_commit_parse__initialize	my_project/libgit2/tests/libgit2/commit/parse.c	/^void test_commit_parse__initialize(void)$/;"	f	typeref:typename:void
test_commit_parse__leading_lf	my_project/libgit2/tests/libgit2/commit/parse.c	/^void test_commit_parse__leading_lf(void)$/;"	f	typeref:typename:void
test_commit_parse__only_lf	my_project/libgit2/tests/libgit2/commit/parse.c	/^void test_commit_parse__only_lf(void)$/;"	f	typeref:typename:void
test_commit_parse__signature	my_project/libgit2/tests/libgit2/commit/parse.c	/^void test_commit_parse__signature(void)$/;"	f	typeref:typename:void
test_commit_signature__angle_brackets_in_email_are_not_supported	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__angle_brackets_in_email_are_not_supported(void)$/;"	f	typeref:typename:void
test_commit_signature__angle_brackets_in_names_are_not_supported	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__angle_brackets_in_names_are_not_supported(void)$/;"	f	typeref:typename:void
test_commit_signature__cleanup	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__cleanup(void)$/;"	f	typeref:typename:void
test_commit_signature__create_empties	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__create_empties(void)$/;"	f	typeref:typename:void
test_commit_signature__create_one_char	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__create_one_char(void)$/;"	f	typeref:typename:void
test_commit_signature__create_two_char	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__create_two_char(void)$/;"	f	typeref:typename:void
test_commit_signature__create_zero_char	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__create_zero_char(void)$/;"	f	typeref:typename:void
test_commit_signature__from_buf	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__from_buf(void)$/;"	f	typeref:typename:void
test_commit_signature__from_buf_with_neg_zero_offset	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__from_buf_with_neg_zero_offset(void)$/;"	f	typeref:typename:void
test_commit_signature__from_env	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__from_env(void)$/;"	f	typeref:typename:void
test_commit_signature__initialize	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__initialize(void)$/;"	f	typeref:typename:void
test_commit_signature__leading_and_trailing_crud_is_trimmed	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__leading_and_trailing_crud_is_trimmed(void)$/;"	f	typeref:typename:void
test_commit_signature__leading_and_trailing_dots_are_supported	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__leading_and_trailing_dots_are_supported(void)$/;"	f	typeref:typename:void
test_commit_signature__leading_and_trailing_spaces_are_trimmed	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__leading_and_trailing_spaces_are_trimmed(void)$/;"	f	typeref:typename:void
test_commit_signature__pos_and_neg_zero_offsets_dont_match	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__pos_and_neg_zero_offsets_dont_match(void)$/;"	f	typeref:typename:void
test_commit_signature__timezone_does_not_read_oob	my_project/libgit2/tests/libgit2/commit/signature.c	/^void test_commit_signature__timezone_does_not_read_oob(void)$/;"	f	typeref:typename:void
test_commit_write__attach_multiline_signature	my_project/libgit2/tests/libgit2/commit/write.c	/^void test_commit_write__attach_multiline_signature(void)$/;"	f	typeref:typename:void
test_commit_write__attach_signature_checks_objects	my_project/libgit2/tests/libgit2/commit/write.c	/^void test_commit_write__attach_signature_checks_objects(void)$/;"	f	typeref:typename:void
test_commit_write__attach_singleline_signature	my_project/libgit2/tests/libgit2/commit/write.c	/^void test_commit_write__attach_singleline_signature(void)$/;"	f	typeref:typename:void
test_commit_write__can_validate_objects	my_project/libgit2/tests/libgit2/commit/write.c	/^void test_commit_write__can_validate_objects(void)$/;"	f	typeref:typename:void
test_commit_write__can_write_invalid_objects	my_project/libgit2/tests/libgit2/commit/write.c	/^void test_commit_write__can_write_invalid_objects(void)$/;"	f	typeref:typename:void
test_commit_write__cleanup	my_project/libgit2/tests/libgit2/commit/write.c	/^void test_commit_write__cleanup(void)$/;"	f	typeref:typename:void
test_commit_write__from_memory	my_project/libgit2/tests/libgit2/commit/write.c	/^void test_commit_write__from_memory(void)$/;"	f	typeref:typename:void
test_commit_write__initialize	my_project/libgit2/tests/libgit2/commit/write.c	/^void test_commit_write__initialize(void)$/;"	f	typeref:typename:void
test_commit_write__into_buf	my_project/libgit2/tests/libgit2/commit/write.c	/^void test_commit_write__into_buf(void)$/;"	f	typeref:typename:void
test_commit_write__root	my_project/libgit2/tests/libgit2/commit/write.c	/^void test_commit_write__root(void)$/;"	f	typeref:typename:void
test_config_add__cleanup	my_project/libgit2/tests/libgit2/config/add.c	/^void test_config_add__cleanup(void)$/;"	f	typeref:typename:void
test_config_add__initialize	my_project/libgit2/tests/libgit2/config/add.c	/^void test_config_add__initialize(void)$/;"	f	typeref:typename:void
test_config_add__to_existing_section	my_project/libgit2/tests/libgit2/config/add.c	/^void test_config_add__to_existing_section(void)$/;"	f	typeref:typename:void
test_config_add__to_new_section	my_project/libgit2/tests/libgit2/config/add.c	/^void test_config_add__to_new_section(void)$/;"	f	typeref:typename:void
test_config_backend__checks_version	my_project/libgit2/tests/libgit2/config/backend.c	/^void test_config_backend__checks_version(void)$/;"	f	typeref:typename:void
test_config_conditionals__cleanup	my_project/libgit2/tests/libgit2/config/conditionals.c	/^void test_config_conditionals__cleanup(void)$/;"	f	typeref:typename:void
test_config_conditionals__empty	my_project/libgit2/tests/libgit2/config/conditionals.c	/^void test_config_conditionals__empty(void)$/;"	f	typeref:typename:void
test_config_conditionals__gitdir	my_project/libgit2/tests/libgit2/config/conditionals.c	/^void test_config_conditionals__gitdir(void)$/;"	f	typeref:typename:void
test_config_conditionals__gitdir_i	my_project/libgit2/tests/libgit2/config/conditionals.c	/^void test_config_conditionals__gitdir_i(void)$/;"	f	typeref:typename:void
test_config_conditionals__initialize	my_project/libgit2/tests/libgit2/config/conditionals.c	/^void test_config_conditionals__initialize(void)$/;"	f	typeref:typename:void
test_config_conditionals__invalid_conditional_fails	my_project/libgit2/tests/libgit2/config/conditionals.c	/^void test_config_conditionals__invalid_conditional_fails(void)$/;"	f	typeref:typename:void
test_config_conditionals__onbranch	my_project/libgit2/tests/libgit2/config/conditionals.c	/^void test_config_conditionals__onbranch(void)$/;"	f	typeref:typename:void
test_config_configlevel__adding_the_same_level_twice_returns_EEXISTS	my_project/libgit2/tests/libgit2/config/configlevel.c	/^void test_config_configlevel__adding_the_same_level_twice_returns_EEXISTS(void)$/;"	f	typeref:typename:void
test_config_configlevel__can_fetch_highest_level	my_project/libgit2/tests/libgit2/config/configlevel.c	/^void test_config_configlevel__can_fetch_highest_level(void)$/;"	f	typeref:typename:void
test_config_configlevel__can_override_local_with_worktree	my_project/libgit2/tests/libgit2/config/configlevel.c	/^void test_config_configlevel__can_override_local_with_worktree(void)$/;"	f	typeref:typename:void
test_config_configlevel__can_read_from_a_single_level_focused_file_after_parent_config_has_been_freed	my_project/libgit2/tests/libgit2/config/configlevel.c	/^void test_config_configlevel__can_read_from_a_single_level_focused_file_after_parent_config_has_/;"	f	typeref:typename:void
test_config_configlevel__can_replace_a_config_file_at_an_existing_level	my_project/libgit2/tests/libgit2/config/configlevel.c	/^void test_config_configlevel__can_replace_a_config_file_at_an_existing_level(void)$/;"	f	typeref:typename:void
test_config_configlevel__fetching_a_level_from_an_empty_compound_config_returns_ENOTFOUND	my_project/libgit2/tests/libgit2/config/configlevel.c	/^void test_config_configlevel__fetching_a_level_from_an_empty_compound_config_returns_ENOTFOUND(v/;"	f	typeref:typename:void
test_config_find__one	my_project/libgit2/tests/libgit2/config/find.c	/^void test_config_find__one(void)$/;"	f	typeref:typename:void
test_config_global__cleanup	my_project/libgit2/tests/libgit2/config/global.c	/^void test_config_global__cleanup(void)$/;"	f	typeref:typename:void
test_config_global__initialize	my_project/libgit2/tests/libgit2/config/global.c	/^void test_config_global__initialize(void)$/;"	f	typeref:typename:void
test_config_global__lock_missing_global_config	my_project/libgit2/tests/libgit2/config/global.c	/^void test_config_global__lock_missing_global_config(void)$/;"	f	typeref:typename:void
test_config_global__open_global	my_project/libgit2/tests/libgit2/config/global.c	/^void test_config_global__open_global(void)$/;"	f	typeref:typename:void
test_config_global__open_programdata	my_project/libgit2/tests/libgit2/config/global.c	/^void test_config_global__open_programdata(void)$/;"	f	typeref:typename:void
test_config_global__open_symlinked_global	my_project/libgit2/tests/libgit2/config/global.c	/^void test_config_global__open_symlinked_global(void)$/;"	f	typeref:typename:void
test_config_global__open_xdg	my_project/libgit2/tests/libgit2/config/global.c	/^void test_config_global__open_xdg(void)$/;"	f	typeref:typename:void
test_config_include__absolute	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__absolute(void)$/;"	f	typeref:typename:void
test_config_include__cleanup	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__cleanup(void)$/;"	f	typeref:typename:void
test_config_include__depth	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__depth(void)$/;"	f	typeref:typename:void
test_config_include__depth2	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__depth2(void)$/;"	f	typeref:typename:void
test_config_include__empty_path_sanely_handled	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__empty_path_sanely_handled(void)$/;"	f	typeref:typename:void
test_config_include__homedir	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__homedir(void)$/;"	f	typeref:typename:void
test_config_include__included_variables_cannot_be_deleted	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__included_variables_cannot_be_deleted(void)$/;"	f	typeref:typename:void
test_config_include__included_variables_cannot_be_modified	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__included_variables_cannot_be_modified(void)$/;"	f	typeref:typename:void
test_config_include__initialize	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__initialize(void)$/;"	f	typeref:typename:void
test_config_include__missing	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__missing(void)$/;"	f	typeref:typename:void
test_config_include__missing_homedir	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__missing_homedir(void)$/;"	f	typeref:typename:void
test_config_include__ordering	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__ordering(void)$/;"	f	typeref:typename:void
test_config_include__relative	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__relative(void)$/;"	f	typeref:typename:void
test_config_include__removing_include_removes_values	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__removing_include_removes_values(void)$/;"	f	typeref:typename:void
test_config_include__rewriting_include_refreshes_values	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__rewriting_include_refreshes_values(void)$/;"	f	typeref:typename:void
test_config_include__rewriting_include_twice_refreshes_values	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__rewriting_include_twice_refreshes_values(void)$/;"	f	typeref:typename:void
test_config_include__variables_in_included_override_including	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__variables_in_included_override_including(void)$/;"	f	typeref:typename:void
test_config_include__variables_in_including_override_included	my_project/libgit2/tests/libgit2/config/include.c	/^void test_config_include__variables_in_including_override_included(void)$/;"	f	typeref:typename:void
test_config_memory__cleanup	my_project/libgit2/tests/libgit2/config/memory.c	/^void test_config_memory__cleanup(void)$/;"	f	typeref:typename:void
test_config_memory__foreach_sees_multivar	my_project/libgit2/tests/libgit2/config/memory.c	/^void test_config_memory__foreach_sees_multivar(void)$/;"	f	typeref:typename:void
test_config_memory__initialize	my_project/libgit2/tests/libgit2/config/memory.c	/^void test_config_memory__initialize(void)$/;"	f	typeref:typename:void
test_config_memory__malformed_fails_to_open	my_project/libgit2/tests/libgit2/config/memory.c	/^void test_config_memory__malformed_fails_to_open(void)$/;"	f	typeref:typename:void
test_config_memory__multiple_sections	my_project/libgit2/tests/libgit2/config/memory.c	/^void test_config_memory__multiple_sections(void)$/;"	f	typeref:typename:void
test_config_memory__multiple_vars	my_project/libgit2/tests/libgit2/config/memory.c	/^void test_config_memory__multiple_vars(void)$/;"	f	typeref:typename:void
test_config_memory__multivar_gets_correct_string	my_project/libgit2/tests/libgit2/config/memory.c	/^void test_config_memory__multivar_gets_correct_string(void)$/;"	f	typeref:typename:void
test_config_memory__simple	my_project/libgit2/tests/libgit2/config/memory.c	/^void test_config_memory__simple(void)$/;"	f	typeref:typename:void
test_config_memory__valid_values	my_project/libgit2/tests/libgit2/config/memory.c	/^void test_config_memory__valid_values(void)$/;"	f	typeref:typename:void
test_config_memory__values	my_project/libgit2/tests/libgit2/config/memory.c	/^void test_config_memory__values(void)$/;"	f	typeref:typename:void
test_config_memory__write_operations_fail	my_project/libgit2/tests/libgit2/config/memory.c	/^void test_config_memory__write_operations_fail(void)$/;"	f	typeref:typename:void
test_config_multivar__add	my_project/libgit2/tests/libgit2/config/multivar.c	/^void test_config_multivar__add(void)$/;"	f	typeref:typename:void
test_config_multivar__add_new	my_project/libgit2/tests/libgit2/config/multivar.c	/^void test_config_multivar__add_new(void)$/;"	f	typeref:typename:void
test_config_multivar__cleanup	my_project/libgit2/tests/libgit2/config/multivar.c	/^void test_config_multivar__cleanup(void)$/;"	f	typeref:typename:void
test_config_multivar__delete	my_project/libgit2/tests/libgit2/config/multivar.c	/^void test_config_multivar__delete(void)$/;"	f	typeref:typename:void
test_config_multivar__delete_multiple	my_project/libgit2/tests/libgit2/config/multivar.c	/^void test_config_multivar__delete_multiple(void)$/;"	f	typeref:typename:void
test_config_multivar__delete_notfound	my_project/libgit2/tests/libgit2/config/multivar.c	/^void test_config_multivar__delete_notfound(void)$/;"	f	typeref:typename:void
test_config_multivar__foreach	my_project/libgit2/tests/libgit2/config/multivar.c	/^void test_config_multivar__foreach(void)$/;"	f	typeref:typename:void
test_config_multivar__get	my_project/libgit2/tests/libgit2/config/multivar.c	/^void test_config_multivar__get(void)$/;"	f	typeref:typename:void
test_config_multivar__initialize	my_project/libgit2/tests/libgit2/config/multivar.c	/^void test_config_multivar__initialize(void)$/;"	f	typeref:typename:void
test_config_multivar__rename_section	my_project/libgit2/tests/libgit2/config/multivar.c	/^void test_config_multivar__rename_section(void)$/;"	f	typeref:typename:void
test_config_multivar__replace	my_project/libgit2/tests/libgit2/config/multivar.c	/^void test_config_multivar__replace(void)$/;"	f	typeref:typename:void
test_config_multivar__replace_multiple	my_project/libgit2/tests/libgit2/config/multivar.c	/^void test_config_multivar__replace_multiple(void)$/;"	f	typeref:typename:void
test_config_new__write_new_config	my_project/libgit2/tests/libgit2/config/new.c	/^void test_config_new__write_new_config(void)$/;"	f	typeref:typename:void
test_config_read__arbitrary_whitespace_before_subsection	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__arbitrary_whitespace_before_subsection(void)$/;"	f	typeref:typename:void
test_config_read__blank_lines	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__blank_lines(void)$/;"	f	typeref:typename:void
test_config_read__bom	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__bom(void)$/;"	f	typeref:typename:void
test_config_read__can_load_and_parse_an_empty_config_file	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__can_load_and_parse_an_empty_config_file(void)$/;"	f	typeref:typename:void
test_config_read__case_sensitive	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__case_sensitive(void)$/;"	f	typeref:typename:void
test_config_read__cleanup	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__cleanup(void)$/;"	f	typeref:typename:void
test_config_read__corrupt_header	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__corrupt_header(void)$/;"	f	typeref:typename:void
test_config_read__corrupt_header2	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__corrupt_header2(void)$/;"	f	typeref:typename:void
test_config_read__corrupt_header3	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__corrupt_header3(void)$/;"	f	typeref:typename:void
test_config_read__crlf_style_line_endings	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__crlf_style_line_endings(void)$/;"	f	typeref:typename:void
test_config_read__empty_files	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__empty_files(void)$/;"	f	typeref:typename:void
test_config_read__escaping_quotes	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__escaping_quotes(void)$/;"	f	typeref:typename:void
test_config_read__fallback_from_local_to_global_and_from_global_to_system	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__fallback_from_local_to_global_and_from_global_to_system(void)$/;"	f	typeref:typename:void
test_config_read__foreach	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__foreach(void)$/;"	f	typeref:typename:void
test_config_read__foreach_match	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__foreach_match(void)$/;"	f	typeref:typename:void
test_config_read__get_mapped	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__get_mapped(void)$/;"	f	typeref:typename:void
test_config_read__header_in_last_line	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__header_in_last_line(void)$/;"	f	typeref:typename:void
test_config_read__invalid_escape_sequence	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__invalid_escape_sequence(void)$/;"	f	typeref:typename:void
test_config_read__invalid_ext_headers	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__invalid_ext_headers(void)$/;"	f	typeref:typename:void
test_config_read__invalid_key_chars	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__invalid_key_chars(void)$/;"	f	typeref:typename:void
test_config_read__invalid_quoted_first_section	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__invalid_quoted_first_section(void)$/;"	f	typeref:typename:void
test_config_read__invalid_quoted_third_section	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__invalid_quoted_third_section(void)$/;"	f	typeref:typename:void
test_config_read__invalid_space_section	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__invalid_space_section(void)$/;"	f	typeref:typename:void
test_config_read__invalid_unquoted_subsection	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__invalid_unquoted_subsection(void)$/;"	f	typeref:typename:void
test_config_read__iterator	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__iterator(void)$/;"	f	typeref:typename:void
test_config_read__iterator_glob	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__iterator_glob(void)$/;"	f	typeref:typename:void
test_config_read__iterator_invalid_glob	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__iterator_invalid_glob(void)$/;"	f	typeref:typename:void
test_config_read__local_config_overrides_global_config_overrides_system_config	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__local_config_overrides_global_config_overrides_system_config(void)$/;"	f	typeref:typename:void
test_config_read__lone_variable	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__lone_variable(void)$/;"	f	typeref:typename:void
test_config_read__lone_variable_with_trailing_whitespace	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__lone_variable_with_trailing_whitespace(void)$/;"	f	typeref:typename:void
test_config_read__multiline_eof	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__multiline_eof(void)$/;"	f	typeref:typename:void
test_config_read__multiline_multiple_quoted_comment_chars	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__multiline_multiple_quoted_comment_chars(void)$/;"	f	typeref:typename:void
test_config_read__multiline_multiple_quoted_quote_at_beginning_of_line	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__multiline_multiple_quoted_quote_at_beginning_of_line(void)$/;"	f	typeref:typename:void
test_config_read__multiline_value	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__multiline_value(void)$/;"	f	typeref:typename:void
test_config_read__multiline_value_and_eof	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__multiline_value_and_eof(void)$/;"	f	typeref:typename:void
test_config_read__no_whitespace_after_subsection	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__no_whitespace_after_subsection(void)$/;"	f	typeref:typename:void
test_config_read__nosection	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__nosection(void)$/;"	f	typeref:typename:void
test_config_read__number_suffixes	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__number_suffixes(void)$/;"	f	typeref:typename:void
test_config_read__override_variable	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__override_variable(void)$/;"	f	typeref:typename:void
test_config_read__parent_dir_is_file	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__parent_dir_is_file(void)$/;"	f	typeref:typename:void
test_config_read__path	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__path(void)$/;"	f	typeref:typename:void
test_config_read__prefixes	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__prefixes(void)$/;"	f	typeref:typename:void
test_config_read__read_git_config_entry	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__read_git_config_entry(void)$/;"	f	typeref:typename:void
test_config_read__simple_read	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__simple_read(void)$/;"	f	typeref:typename:void
test_config_read__simple_read_from_specific_level	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__simple_read_from_specific_level(void)$/;"	f	typeref:typename:void
test_config_read__single_line	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__single_line(void)$/;"	f	typeref:typename:void
test_config_read__subsection_header	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__subsection_header(void)$/;"	f	typeref:typename:void
test_config_read__symbol_headers	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__symbol_headers(void)$/;"	f	typeref:typename:void
test_config_read__trailing_crlf	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__trailing_crlf(void)$/;"	f	typeref:typename:void
test_config_read__unreadable_file_ignored	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__unreadable_file_ignored(void)$/;"	f	typeref:typename:void
test_config_read__whitespace_not_required_around_assignment	my_project/libgit2/tests/libgit2/config/read.c	/^void test_config_read__whitespace_not_required_around_assignment(void)$/;"	f	typeref:typename:void
test_config_readonly__cleanup	my_project/libgit2/tests/libgit2/config/readonly.c	/^void test_config_readonly__cleanup(void)$/;"	f	typeref:typename:void
test_config_readonly__initialize	my_project/libgit2/tests/libgit2/config/readonly.c	/^void test_config_readonly__initialize(void)$/;"	f	typeref:typename:void
test_config_readonly__writing_to_cfg_with_ro_precedence_succeeds	my_project/libgit2/tests/libgit2/config/readonly.c	/^void test_config_readonly__writing_to_cfg_with_ro_precedence_succeeds(void)$/;"	f	typeref:typename:void
test_config_readonly__writing_to_cfg_with_rw_precedence_succeeds	my_project/libgit2/tests/libgit2/config/readonly.c	/^void test_config_readonly__writing_to_cfg_with_rw_precedence_succeeds(void)$/;"	f	typeref:typename:void
test_config_readonly__writing_to_readonly_fails	my_project/libgit2/tests/libgit2/config/readonly.c	/^void test_config_readonly__writing_to_readonly_fails(void)$/;"	f	typeref:typename:void
test_config_rename__can_rename	my_project/libgit2/tests/libgit2/config/rename.c	/^void test_config_rename__can_rename(void)$/;"	f	typeref:typename:void
test_config_rename__cleanup	my_project/libgit2/tests/libgit2/config/rename.c	/^void test_config_rename__cleanup(void)$/;"	f	typeref:typename:void
test_config_rename__initialize	my_project/libgit2/tests/libgit2/config/rename.c	/^void test_config_rename__initialize(void)$/;"	f	typeref:typename:void
test_config_rename__prevent_overwrite	my_project/libgit2/tests/libgit2/config/rename.c	/^void test_config_rename__prevent_overwrite(void)$/;"	f	typeref:typename:void
test_config_rename__require_a_valid_new_name	my_project/libgit2/tests/libgit2/config/rename.c	/^void test_config_rename__require_a_valid_new_name(void)$/;"	f	typeref:typename:void
test_config_snapshot__cleanup	my_project/libgit2/tests/libgit2/config/snapshot.c	/^void test_config_snapshot__cleanup(void)$/;"	f	typeref:typename:void
test_config_snapshot__create_snapshot	my_project/libgit2/tests/libgit2/config/snapshot.c	/^void test_config_snapshot__create_snapshot(void)$/;"	f	typeref:typename:void
test_config_snapshot__includes	my_project/libgit2/tests/libgit2/config/snapshot.c	/^void test_config_snapshot__includes(void)$/;"	f	typeref:typename:void
test_config_snapshot__multivar	my_project/libgit2/tests/libgit2/config/snapshot.c	/^void test_config_snapshot__multivar(void)$/;"	f	typeref:typename:void
test_config_snapshot__snapshot	my_project/libgit2/tests/libgit2/config/snapshot.c	/^void test_config_snapshot__snapshot(void)$/;"	f	typeref:typename:void
test_config_snapshot__snapshot_from_in_memory	my_project/libgit2/tests/libgit2/config/snapshot.c	/^void test_config_snapshot__snapshot_from_in_memory(void)$/;"	f	typeref:typename:void
test_config_stress__cleanup	my_project/libgit2/tests/libgit2/config/stress.c	/^void test_config_stress__cleanup(void)$/;"	f	typeref:typename:void
test_config_stress__comments	my_project/libgit2/tests/libgit2/config/stress.c	/^void test_config_stress__comments(void)$/;"	f	typeref:typename:void
test_config_stress__complex	my_project/libgit2/tests/libgit2/config/stress.c	/^void test_config_stress__complex(void)$/;"	f	typeref:typename:void
test_config_stress__dont_break_on_invalid_input	my_project/libgit2/tests/libgit2/config/stress.c	/^void test_config_stress__dont_break_on_invalid_input(void)$/;"	f	typeref:typename:void
test_config_stress__escape_subsection_names	my_project/libgit2/tests/libgit2/config/stress.c	/^void test_config_stress__escape_subsection_names(void)$/;"	f	typeref:typename:void
test_config_stress__foreach_refreshes	my_project/libgit2/tests/libgit2/config/stress.c	/^void test_config_stress__foreach_refreshes(void)$/;"	f	typeref:typename:void
test_config_stress__foreach_refreshes_snapshot	my_project/libgit2/tests/libgit2/config/stress.c	/^void test_config_stress__foreach_refreshes_snapshot(void)$/;"	f	typeref:typename:void
test_config_stress__huge_section_with_many_values	my_project/libgit2/tests/libgit2/config/stress.c	/^void test_config_stress__huge_section_with_many_values(void)$/;"	f	typeref:typename:void
test_config_stress__initialize	my_project/libgit2/tests/libgit2/config/stress.c	/^void test_config_stress__initialize(void)$/;"	f	typeref:typename:void
test_config_stress__quick_write	my_project/libgit2/tests/libgit2/config/stress.c	/^void test_config_stress__quick_write(void)$/;"	f	typeref:typename:void
test_config_stress__trailing_backslash	my_project/libgit2/tests/libgit2/config/stress.c	/^void test_config_stress__trailing_backslash(void)$/;"	f	typeref:typename:void
test_config_validkeyname__accessing_requires_a_valid_name	my_project/libgit2/tests/libgit2/config/validkeyname.c	/^void test_config_validkeyname__accessing_requires_a_valid_name(void)$/;"	f	typeref:typename:void
test_config_validkeyname__cleanup	my_project/libgit2/tests/libgit2/config/validkeyname.c	/^void test_config_validkeyname__cleanup(void)$/;"	f	typeref:typename:void
test_config_validkeyname__initialize	my_project/libgit2/tests/libgit2/config/validkeyname.c	/^void test_config_validkeyname__initialize(void)$/;"	f	typeref:typename:void
test_config_write__abort_lock	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__abort_lock(void)$/;"	f	typeref:typename:void
test_config_write__add_section_at_file_with_no_clrf_at_the_end	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__add_section_at_file_with_no_clrf_at_the_end(void)$/;"	f	typeref:typename:void
test_config_write__add_value_at_file_with_no_clrf_at_the_end	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__add_value_at_file_with_no_clrf_at_the_end(void)$/;"	f	typeref:typename:void
test_config_write__add_value_at_specific_level	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__add_value_at_specific_level(void)$/;"	f	typeref:typename:void
test_config_write__add_value_which_needs_quotes	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__add_value_which_needs_quotes(void)$/;"	f	typeref:typename:void
test_config_write__add_value_with_duplicate_header	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__add_value_with_duplicate_header(void)$/;"	f	typeref:typename:void
test_config_write__can_set_a_value_to_NULL	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__can_set_a_value_to_NULL(void)$/;"	f	typeref:typename:void
test_config_write__can_set_an_empty_value	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__can_set_an_empty_value(void)$/;"	f	typeref:typename:void
test_config_write__cleanup	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__cleanup(void)$/;"	f	typeref:typename:void
test_config_write__delete_inexistent	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__delete_inexistent(void)$/;"	f	typeref:typename:void
test_config_write__delete_value	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__delete_value(void)$/;"	f	typeref:typename:void
test_config_write__delete_value_at_specific_level	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__delete_value_at_specific_level(void)$/;"	f	typeref:typename:void
test_config_write__delete_value_with_duplicate_header	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__delete_value_with_duplicate_header(void)$/;"	f	typeref:typename:void
test_config_write__escape_value	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__escape_value(void)$/;"	f	typeref:typename:void
test_config_write__initialize	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__initialize(void)$/;"	f	typeref:typename:void
test_config_write__locking	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__locking(void)$/;"	f	typeref:typename:void
test_config_write__outside_change	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__outside_change(void)$/;"	f	typeref:typename:void
test_config_write__overwrite_multivar_within_duplicate_header	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__overwrite_multivar_within_duplicate_header(void)$/;"	f	typeref:typename:void
test_config_write__overwrite_value_with_duplicate_header	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__overwrite_value_with_duplicate_header(void)$/;"	f	typeref:typename:void
test_config_write__preserve_case	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__preserve_case(void)$/;"	f	typeref:typename:void
test_config_write__preserves_entry_with_name_only	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__preserves_entry_with_name_only(void)$/;"	f	typeref:typename:void
test_config_write__preserves_whitespace_and_comments	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__preserves_whitespace_and_comments(void)$/;"	f	typeref:typename:void
test_config_write__repeated	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__repeated(void)$/;"	f	typeref:typename:void
test_config_write__replace_value	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__replace_value(void)$/;"	f	typeref:typename:void
test_config_write__to_empty_file	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__to_empty_file(void)$/;"	f	typeref:typename:void
test_config_write__to_file_with_only_comment	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__to_file_with_only_comment(void)$/;"	f	typeref:typename:void
test_config_write__updating_a_locked_config_file_returns_ELOCKED	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__updating_a_locked_config_file_returns_ELOCKED(void)$/;"	f	typeref:typename:void
test_config_write__value_containing_quotes	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__value_containing_quotes(void)$/;"	f	typeref:typename:void
test_config_write__write_config_file_with_multi_line_value	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__write_config_file_with_multi_line_value(void)$/;"	f	typeref:typename:void
test_config_write__write_subsection	my_project/libgit2/tests/libgit2/config/write.c	/^void test_config_write__write_subsection(void)$/;"	f	typeref:typename:void
test_copy__file	my_project/libgit2/tests/util/copy.c	/^void test_copy__file(void)$/;"	f	typeref:typename:void
test_copy__file_in_dir	my_project/libgit2/tests/util/copy.c	/^void test_copy__file_in_dir(void)$/;"	f	typeref:typename:void
test_copy__tree	my_project/libgit2/tests/util/copy.c	/^void test_copy__tree(void)$/;"	f	typeref:typename:void
test_copy_note	my_project/libgit2/tests/libgit2/rebase/merge.c	/^static void test_copy_note($/;"	f	typeref:typename:void	file:
test_core_buf__fromstr	my_project/libgit2/tests/libgit2/core/buf.c	/^void test_core_buf__fromstr(void)$/;"	f	typeref:typename:void
test_core_buf__sanitize	my_project/libgit2/tests/libgit2/core/buf.c	/^void test_core_buf__sanitize(void)$/;"	f	typeref:typename:void
test_core_buf__tostr	my_project/libgit2/tests/libgit2/core/buf.c	/^void test_core_buf__tostr(void)$/;"	f	typeref:typename:void
test_core_env__0	my_project/libgit2/tests/libgit2/core/env.c	/^void test_core_env__0(void)$/;"	f	typeref:typename:void
test_core_env__1	my_project/libgit2/tests/libgit2/core/env.c	/^void test_core_env__1(void)$/;"	f	typeref:typename:void
test_core_env__2	my_project/libgit2/tests/libgit2/core/env.c	/^void test_core_env__2(void)$/;"	f	typeref:typename:void
test_core_env__cleanup	my_project/libgit2/tests/libgit2/core/env.c	/^void test_core_env__cleanup(void)$/;"	f	typeref:typename:void
test_core_env__initialize	my_project/libgit2/tests/libgit2/core/env.c	/^void test_core_env__initialize(void)$/;"	f	typeref:typename:void
test_core_env__substitution	my_project/libgit2/tests/libgit2/core/env.c	/^void test_core_env__substitution(void)$/;"	f	typeref:typename:void
test_core_features__0	my_project/libgit2/tests/libgit2/core/features.c	/^void test_core_features__0(void)$/;"	f	typeref:typename:void
test_core_hashsig__similarity_metric	my_project/libgit2/tests/libgit2/core/hashsig.c	/^void test_core_hashsig__similarity_metric(void)$/;"	f	typeref:typename:void
test_core_hashsig__similarity_metric_whitespace	my_project/libgit2/tests/libgit2/core/hashsig.c	/^void test_core_hashsig__similarity_metric_whitespace(void)$/;"	f	typeref:typename:void
test_core_oid__fmt_substr_sha1	my_project/libgit2/tests/libgit2/core/oid.c	/^void test_core_oid__fmt_substr_sha1(void)$/;"	f	typeref:typename:void
test_core_oid__initialize	my_project/libgit2/tests/libgit2/core/oid.c	/^void test_core_oid__initialize(void)$/;"	f	typeref:typename:void
test_core_oid__is_hexstr	my_project/libgit2/tests/libgit2/core/oid.c	/^void test_core_oid__is_hexstr(void)$/;"	f	typeref:typename:void
test_core_oid__ncmp_sha1	my_project/libgit2/tests/libgit2/core/oid.c	/^void test_core_oid__ncmp_sha1(void)$/;"	f	typeref:typename:void
test_core_oid__ncmp_sha256	my_project/libgit2/tests/libgit2/core/oid.c	/^void test_core_oid__ncmp_sha256(void)$/;"	f	typeref:typename:void
test_core_oid__strcmp_sha1	my_project/libgit2/tests/libgit2/core/oid.c	/^void test_core_oid__strcmp_sha1(void)$/;"	f	typeref:typename:void
test_core_oid__strcmp_sha256	my_project/libgit2/tests/libgit2/core/oid.c	/^void test_core_oid__strcmp_sha256(void)$/;"	f	typeref:typename:void
test_core_oid__streq_sha1	my_project/libgit2/tests/libgit2/core/oid.c	/^void test_core_oid__streq_sha1(void)$/;"	f	typeref:typename:void
test_core_oid__streq_sha256	my_project/libgit2/tests/libgit2/core/oid.c	/^void test_core_oid__streq_sha256(void)$/;"	f	typeref:typename:void
test_core_oid__type_lookup	my_project/libgit2/tests/libgit2/core/oid.c	/^void test_core_oid__type_lookup(void)$/;"	f	typeref:typename:void
test_core_oidarray__add_and_remove_oid_from_shallowarray	my_project/libgit2/tests/libgit2/core/oidarray.c	/^void test_core_oidarray__add_and_remove_oid_from_shallowarray(void)$/;"	f	typeref:typename:void
test_core_oidmap__basic	my_project/libgit2/tests/libgit2/core/oidmap.c	/^void test_core_oidmap__basic(void)$/;"	f	typeref:typename:void
test_core_oidmap__cleanup	my_project/libgit2/tests/libgit2/core/oidmap.c	/^void test_core_oidmap__cleanup(void)$/;"	f	typeref:typename:void
test_core_oidmap__get_fails_with_nonexisting_key	my_project/libgit2/tests/libgit2/core/oidmap.c	/^void test_core_oidmap__get_fails_with_nonexisting_key(void)$/;"	f	typeref:typename:void
test_core_oidmap__get_succeeds_with_existing_keys	my_project/libgit2/tests/libgit2/core/oidmap.c	/^void test_core_oidmap__get_succeeds_with_existing_keys(void)$/;"	f	typeref:typename:void
test_core_oidmap__hash_collision	my_project/libgit2/tests/libgit2/core/oidmap.c	/^void test_core_oidmap__hash_collision(void)$/;"	f	typeref:typename:void
test_core_oidmap__initialize	my_project/libgit2/tests/libgit2/core/oidmap.c	/^void test_core_oidmap__initialize(void)$/;"	f	typeref:typename:void
test_core_oidmap__setting_existing_key_updates	my_project/libgit2/tests/libgit2/core/oidmap.c	/^void test_core_oidmap__setting_existing_key_updates(void)$/;"	f	typeref:typename:void
test_core_oidmap__setting_oid_persists	my_project/libgit2/tests/libgit2/core/oidmap.c	/^void test_core_oidmap__setting_oid_persists(void)$/;"	f	typeref:typename:void
test_core_opts__cleanup	my_project/libgit2/tests/libgit2/core/opts.c	/^void test_core_opts__cleanup(void)$/;"	f	typeref:typename:void
test_core_opts__extensions_add	my_project/libgit2/tests/libgit2/core/opts.c	/^void test_core_opts__extensions_add(void)$/;"	f	typeref:typename:void
test_core_opts__extensions_query	my_project/libgit2/tests/libgit2/core/opts.c	/^void test_core_opts__extensions_query(void)$/;"	f	typeref:typename:void
test_core_opts__extensions_remove	my_project/libgit2/tests/libgit2/core/opts.c	/^void test_core_opts__extensions_remove(void)$/;"	f	typeref:typename:void
test_core_opts__extensions_uniq	my_project/libgit2/tests/libgit2/core/opts.c	/^void test_core_opts__extensions_uniq(void)$/;"	f	typeref:typename:void
test_core_opts__invalid_option	my_project/libgit2/tests/libgit2/core/opts.c	/^void test_core_opts__invalid_option(void)$/;"	f	typeref:typename:void
test_core_opts__readwrite	my_project/libgit2/tests/libgit2/core/opts.c	/^void test_core_opts__readwrite(void)$/;"	f	typeref:typename:void
test_core_pool__oid	my_project/libgit2/tests/libgit2/core/pool.c	/^void test_core_pool__oid(void)$/;"	f	typeref:typename:void
test_core_structinit__compare	my_project/libgit2/tests/libgit2/core/structinit.c	/^void test_core_structinit__compare(void)$/;"	f	typeref:typename:void
test_core_useragent__cleanup	my_project/libgit2/tests/libgit2/core/useragent.c	/^void test_core_useragent__cleanup(void)$/;"	f	typeref:typename:void
test_core_useragent__get_default	my_project/libgit2/tests/libgit2/core/useragent.c	/^void test_core_useragent__get_default(void)$/;"	f	typeref:typename:void
test_core_useragent__initialize	my_project/libgit2/tests/libgit2/core/useragent.c	/^void test_core_useragent__initialize(void)$/;"	f	typeref:typename:void
test_core_useragent__set	my_project/libgit2/tests/libgit2/core/useragent.c	/^void test_core_useragent__set(void)$/;"	f	typeref:typename:void
test_count	my_project/libgit2/tests/clar/clar.c	/^	size_t test_count;$/;"	m	struct:clar_suite	typeref:typename:size_t	file:
test_date_date__invalid_date	my_project/libgit2/tests/libgit2/date/date.c	/^void test_date_date__invalid_date(void)$/;"	f	typeref:typename:void
test_date_date__offset	my_project/libgit2/tests/libgit2/date/date.c	/^void test_date_date__offset(void)$/;"	f	typeref:typename:void
test_date_date__overflow	my_project/libgit2/tests/libgit2/date/date.c	/^void test_date_date__overflow(void)$/;"	f	typeref:typename:void
test_date_rfc2822__format_rfc2822_negative_offset	my_project/libgit2/tests/libgit2/date/rfc2822.c	/^void test_date_rfc2822__format_rfc2822_negative_offset(void)$/;"	f	typeref:typename:void
test_date_rfc2822__format_rfc2822_no_offset	my_project/libgit2/tests/libgit2/date/rfc2822.c	/^void test_date_rfc2822__format_rfc2822_no_offset(void)$/;"	f	typeref:typename:void
test_date_rfc2822__format_rfc2822_positive_offset	my_project/libgit2/tests/libgit2/date/rfc2822.c	/^void test_date_rfc2822__format_rfc2822_positive_offset(void)$/;"	f	typeref:typename:void
test_delta_apply__read_after_limit	my_project/libgit2/tests/libgit2/delta/apply.c	/^void test_delta_apply__read_after_limit(void)$/;"	f	typeref:typename:void
test_delta_apply__read_at_off	my_project/libgit2/tests/libgit2/delta/apply.c	/^void test_delta_apply__read_at_off(void)$/;"	f	typeref:typename:void
test_describe_describe__can_describe_against_a_bare_repo	my_project/libgit2/tests/libgit2/describe/describe.c	/^void test_describe_describe__can_describe_against_a_bare_repo(void)$/;"	f	typeref:typename:void
test_describe_describe__describe_a_repo_with_no_refs	my_project/libgit2/tests/libgit2/describe/describe.c	/^void test_describe_describe__describe_a_repo_with_no_refs(void)$/;"	f	typeref:typename:void
test_describe_t6120__all	my_project/libgit2/tests/libgit2/describe/t6120.c	/^void test_describe_t6120__all(void)$/;"	f	typeref:typename:void
test_describe_t6120__cleanup	my_project/libgit2/tests/libgit2/describe/t6120.c	/^void test_describe_t6120__cleanup(void)$/;"	f	typeref:typename:void
test_describe_t6120__default	my_project/libgit2/tests/libgit2/describe/t6120.c	/^void test_describe_t6120__default(void)$/;"	f	typeref:typename:void
test_describe_t6120__firstparent	my_project/libgit2/tests/libgit2/describe/t6120.c	/^void test_describe_t6120__firstparent(void)$/;"	f	typeref:typename:void
test_describe_t6120__initialize	my_project/libgit2/tests/libgit2/describe/t6120.c	/^void test_describe_t6120__initialize(void)$/;"	f	typeref:typename:void
test_describe_t6120__longformat	my_project/libgit2/tests/libgit2/describe/t6120.c	/^void test_describe_t6120__longformat(void)$/;"	f	typeref:typename:void
test_describe_t6120__pattern	my_project/libgit2/tests/libgit2/describe/t6120.c	/^void test_describe_t6120__pattern(void)$/;"	f	typeref:typename:void
test_describe_t6120__tags	my_project/libgit2/tests/libgit2/describe/t6120.c	/^void test_describe_t6120__tags(void)$/;"	f	typeref:typename:void
test_describe_t6120__workdir	my_project/libgit2/tests/libgit2/describe/t6120.c	/^void test_describe_t6120__workdir(void)$/;"	f	typeref:typename:void
test_diff_binary__add	my_project/libgit2/tests/libgit2/diff/binary.c	/^void test_diff_binary__add(void)$/;"	f	typeref:typename:void
test_diff_binary__add_normal	my_project/libgit2/tests/libgit2/diff/binary.c	/^void test_diff_binary__add_normal(void)$/;"	f	typeref:typename:void
test_diff_binary__blob_to_blob	my_project/libgit2/tests/libgit2/diff/binary.c	/^void test_diff_binary__blob_to_blob(void)$/;"	f	typeref:typename:void
test_diff_binary__cleanup	my_project/libgit2/tests/libgit2/diff/binary.c	/^void test_diff_binary__cleanup(void)$/;"	f	typeref:typename:void
test_diff_binary__delete	my_project/libgit2/tests/libgit2/diff/binary.c	/^void test_diff_binary__delete(void)$/;"	f	typeref:typename:void
test_diff_binary__delete_normal	my_project/libgit2/tests/libgit2/diff/binary.c	/^void test_diff_binary__delete_normal(void)$/;"	f	typeref:typename:void
test_diff_binary__delta	my_project/libgit2/tests/libgit2/diff/binary.c	/^void test_diff_binary__delta(void)$/;"	f	typeref:typename:void
test_diff_binary__delta_append	my_project/libgit2/tests/libgit2/diff/binary.c	/^void test_diff_binary__delta_append(void)$/;"	f	typeref:typename:void
test_diff_binary__empty_for_no_diff	my_project/libgit2/tests/libgit2/diff/binary.c	/^void test_diff_binary__empty_for_no_diff(void)$/;"	f	typeref:typename:void
test_diff_binary__index_to_workdir	my_project/libgit2/tests/libgit2/diff/binary.c	/^void test_diff_binary__index_to_workdir(void)$/;"	f	typeref:typename:void
test_diff_binary__initialize	my_project/libgit2/tests/libgit2/diff/binary.c	/^void test_diff_binary__initialize(void)$/;"	f	typeref:typename:void
test_diff_binary__modify	my_project/libgit2/tests/libgit2/diff/binary.c	/^void test_diff_binary__modify(void)$/;"	f	typeref:typename:void
test_diff_binary__modify_normal	my_project/libgit2/tests/libgit2/diff/binary.c	/^void test_diff_binary__modify_normal(void)$/;"	f	typeref:typename:void
test_diff_binary__print_patch_from_diff	my_project/libgit2/tests/libgit2/diff/binary.c	/^void test_diff_binary__print_patch_from_diff(void)$/;"	f	typeref:typename:void
test_diff_blob__binary_data_comparisons	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__binary_data_comparisons(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_a_binary_blob_and_a_text_blob	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_compare_a_binary_blob_and_a_text_blob(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_against_null_blobs	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_compare_against_null_blobs(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_against_null_blobs_with_patch	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_compare_against_null_blobs_with_patch(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_blob_to_buffer	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_compare_blob_to_buffer(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_blob_to_buffer_with_patch	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_compare_blob_to_buffer_with_patch(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_buffer_to_buffer	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_compare_buffer_to_buffer(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_identical_blobs	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_compare_identical_blobs(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_identical_blobs_with_patch	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_compare_identical_blobs_with_patch(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_text_blobs	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_compare_text_blobs(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_text_blobs_with_patch	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_compare_text_blobs_with_patch(void)$/;"	f	typeref:typename:void
test_diff_blob__can_compare_two_binary_blobs	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_compare_two_binary_blobs(void)$/;"	f	typeref:typename:void
test_diff_blob__can_correctly_detect_a_binary_blob_as_binary	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_correctly_detect_a_binary_blob_as_binary(void)$/;"	f	typeref:typename:void
test_diff_blob__can_correctly_detect_a_textual_blob_as_non_binary	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_correctly_detect_a_textual_blob_as_non_binary(void)$/;"	f	typeref:typename:void
test_diff_blob__can_correctly_detect_binary_blob_data_as_binary	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_correctly_detect_binary_blob_data_as_binary(void)$/;"	f	typeref:typename:void
test_diff_blob__can_correctly_detect_textual_blob_data_as_non_binary	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__can_correctly_detect_textual_blob_data_as_non_binary(void)$/;"	f	typeref:typename:void
test_diff_blob__checks_options_version_too_high	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__checks_options_version_too_high(void)$/;"	f	typeref:typename:void
test_diff_blob__checks_options_version_too_low	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__checks_options_version_too_low(void)$/;"	f	typeref:typename:void
test_diff_blob__cleanup	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__cleanup(void)$/;"	f	typeref:typename:void
test_diff_blob__comparing_two_text_blobs_honors_interhunkcontext	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__comparing_two_text_blobs_honors_interhunkcontext(void)$/;"	f	typeref:typename:void
test_diff_blob__initialize	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__initialize(void)$/;"	f	typeref:typename:void
test_diff_blob__patch_with_freed_blobs	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__patch_with_freed_blobs(void)$/;"	f	typeref:typename:void
test_diff_blob__using_path_and_attributes	my_project/libgit2/tests/libgit2/diff/blob.c	/^void test_diff_blob__using_path_and_attributes(void)$/;"	f	typeref:typename:void
test_diff_diffiter__checks_options_version	my_project/libgit2/tests/libgit2/diff/diffiter.c	/^void test_diff_diffiter__checks_options_version(void)$/;"	f	typeref:typename:void
test_diff_diffiter__cleanup	my_project/libgit2/tests/libgit2/diff/diffiter.c	/^void test_diff_diffiter__cleanup(void)$/;"	f	typeref:typename:void
test_diff_diffiter__create	my_project/libgit2/tests/libgit2/diff/diffiter.c	/^void test_diff_diffiter__create(void)$/;"	f	typeref:typename:void
test_diff_diffiter__initialize	my_project/libgit2/tests/libgit2/diff/diffiter.c	/^void test_diff_diffiter__initialize(void)$/;"	f	typeref:typename:void
test_diff_diffiter__iterate_all	my_project/libgit2/tests/libgit2/diff/diffiter.c	/^void test_diff_diffiter__iterate_all(void)$/;"	f	typeref:typename:void
test_diff_diffiter__iterate_and_generate_patch_text	my_project/libgit2/tests/libgit2/diff/diffiter.c	/^void test_diff_diffiter__iterate_and_generate_patch_text(void)$/;"	f	typeref:typename:void
test_diff_diffiter__iterate_files_1	my_project/libgit2/tests/libgit2/diff/diffiter.c	/^void test_diff_diffiter__iterate_files_1(void)$/;"	f	typeref:typename:void
test_diff_diffiter__iterate_files_2	my_project/libgit2/tests/libgit2/diff/diffiter.c	/^void test_diff_diffiter__iterate_files_2(void)$/;"	f	typeref:typename:void
test_diff_diffiter__iterate_files_and_hunks	my_project/libgit2/tests/libgit2/diff/diffiter.c	/^void test_diff_diffiter__iterate_files_and_hunks(void)$/;"	f	typeref:typename:void
test_diff_diffiter__iterate_randomly_while_saving_state	my_project/libgit2/tests/libgit2/diff/diffiter.c	/^void test_diff_diffiter__iterate_randomly_while_saving_state(void)$/;"	f	typeref:typename:void
test_diff_diffiter__max_size_threshold	my_project/libgit2/tests/libgit2/diff/diffiter.c	/^void test_diff_diffiter__max_size_threshold(void)$/;"	f	typeref:typename:void
test_diff_drivers__builtins	my_project/libgit2/tests/libgit2/diff/drivers.c	/^void test_diff_drivers__builtins(void)$/;"	f	typeref:typename:void
test_diff_drivers__cleanup	my_project/libgit2/tests/libgit2/diff/drivers.c	/^void test_diff_drivers__cleanup(void)$/;"	f	typeref:typename:void
test_diff_drivers__initialize	my_project/libgit2/tests/libgit2/diff/drivers.c	/^void test_diff_drivers__initialize(void)$/;"	f	typeref:typename:void
test_diff_drivers__invalid_pattern	my_project/libgit2/tests/libgit2/diff/drivers.c	/^void test_diff_drivers__invalid_pattern(void)$/;"	f	typeref:typename:void
test_diff_drivers__long_lines	my_project/libgit2/tests/libgit2/diff/drivers.c	/^void test_diff_drivers__long_lines(void)$/;"	f	typeref:typename:void
test_diff_drivers__patterns	my_project/libgit2/tests/libgit2/diff/drivers.c	/^void test_diff_drivers__patterns(void)$/;"	f	typeref:typename:void
test_diff_externalmodifications__cleanup	my_project/libgit2/tests/libgit2/diff/externalmodifications.c	/^void test_diff_externalmodifications__cleanup(void)$/;"	f	typeref:typename:void
test_diff_externalmodifications__empty_file_becomes_non_empty	my_project/libgit2/tests/libgit2/diff/externalmodifications.c	/^void test_diff_externalmodifications__empty_file_becomes_non_empty(void)$/;"	f	typeref:typename:void
test_diff_externalmodifications__file_becomes_empty	my_project/libgit2/tests/libgit2/diff/externalmodifications.c	/^void test_diff_externalmodifications__file_becomes_empty(void)$/;"	f	typeref:typename:void
test_diff_externalmodifications__file_becomes_smaller	my_project/libgit2/tests/libgit2/diff/externalmodifications.c	/^void test_diff_externalmodifications__file_becomes_smaller(void)$/;"	f	typeref:typename:void
test_diff_externalmodifications__file_deleted	my_project/libgit2/tests/libgit2/diff/externalmodifications.c	/^void test_diff_externalmodifications__file_deleted(void)$/;"	f	typeref:typename:void
test_diff_externalmodifications__initialize	my_project/libgit2/tests/libgit2/diff/externalmodifications.c	/^void test_diff_externalmodifications__initialize(void)$/;"	f	typeref:typename:void
test_diff_format_email__binary	my_project/libgit2/tests/libgit2/diff/format_email.c	/^void test_diff_format_email__binary(void)$/;"	f	typeref:typename:void
test_diff_format_email__cleanup	my_project/libgit2/tests/libgit2/diff/format_email.c	/^void test_diff_format_email__cleanup(void)$/;"	f	typeref:typename:void
test_diff_format_email__exclude_marker	my_project/libgit2/tests/libgit2/diff/format_email.c	/^void test_diff_format_email__exclude_marker(void)$/;"	f	typeref:typename:void
test_diff_format_email__initialize	my_project/libgit2/tests/libgit2/diff/format_email.c	/^void test_diff_format_email__initialize(void)$/;"	f	typeref:typename:void
test_diff_format_email__invalid_no	my_project/libgit2/tests/libgit2/diff/format_email.c	/^void test_diff_format_email__invalid_no(void)$/;"	f	typeref:typename:void
test_diff_format_email__mode_change	my_project/libgit2/tests/libgit2/diff/format_email.c	/^void test_diff_format_email__mode_change(void)$/;"	f	typeref:typename:void
test_diff_format_email__multiline_summary	my_project/libgit2/tests/libgit2/diff/format_email.c	/^void test_diff_format_email__multiline_summary(void)$/;"	f	typeref:typename:void
test_diff_format_email__multiple	my_project/libgit2/tests/libgit2/diff/format_email.c	/^void test_diff_format_email__multiple(void)$/;"	f	typeref:typename:void
test_diff_format_email__rename_add_remove	my_project/libgit2/tests/libgit2/diff/format_email.c	/^void test_diff_format_email__rename_add_remove(void)$/;"	f	typeref:typename:void
test_diff_format_email__simple	my_project/libgit2/tests/libgit2/diff/format_email.c	/^void test_diff_format_email__simple(void)$/;"	f	typeref:typename:void
test_diff_format_email__with_message	my_project/libgit2/tests/libgit2/diff/format_email.c	/^void test_diff_format_email__with_message(void)$/;"	f	typeref:typename:void
test_diff_index__0	my_project/libgit2/tests/libgit2/diff/index.c	/^void test_diff_index__0(void)$/;"	f	typeref:typename:void
test_diff_index__1	my_project/libgit2/tests/libgit2/diff/index.c	/^void test_diff_index__1(void)$/;"	f	typeref:typename:void
test_diff_index__checks_options_version	my_project/libgit2/tests/libgit2/diff/index.c	/^void test_diff_index__checks_options_version(void)$/;"	f	typeref:typename:void
test_diff_index__cleanup	my_project/libgit2/tests/libgit2/diff/index.c	/^void test_diff_index__cleanup(void)$/;"	f	typeref:typename:void
test_diff_index__initialize	my_project/libgit2/tests/libgit2/diff/index.c	/^void test_diff_index__initialize(void)$/;"	f	typeref:typename:void
test_diff_index__not_in_head_conflicted	my_project/libgit2/tests/libgit2/diff/index.c	/^void test_diff_index__not_in_head_conflicted(void)$/;"	f	typeref:typename:void
test_diff_index__reports_conflicts	my_project/libgit2/tests/libgit2/diff/index.c	/^void test_diff_index__reports_conflicts(void)$/;"	f	typeref:typename:void
test_diff_index__reports_conflicts_when_reversed	my_project/libgit2/tests/libgit2/diff/index.c	/^void test_diff_index__reports_conflicts_when_reversed(void)$/;"	f	typeref:typename:void
test_diff_index__to_index	my_project/libgit2/tests/libgit2/diff/index.c	/^void test_diff_index__to_index(void)$/;"	f	typeref:typename:void
test_diff_notify__cleanup	my_project/libgit2/tests/libgit2/diff/notify.c	/^void test_diff_notify__cleanup(void)$/;"	f	typeref:typename:void
test_diff_notify__initialize	my_project/libgit2/tests/libgit2/diff/notify.c	/^void test_diff_notify__initialize(void)$/;"	f	typeref:typename:void
test_diff_notify__notify_catchall	my_project/libgit2/tests/libgit2/diff/notify.c	/^void test_diff_notify__notify_catchall(void)$/;"	f	typeref:typename:void
test_diff_notify__notify_catchall_with_empty_pathspecs	my_project/libgit2/tests/libgit2/diff/notify.c	/^void test_diff_notify__notify_catchall_with_empty_pathspecs(void)$/;"	f	typeref:typename:void
test_diff_notify__notify_cb_can_abort_diff	my_project/libgit2/tests/libgit2/diff/notify.c	/^void test_diff_notify__notify_cb_can_abort_diff(void)$/;"	f	typeref:typename:void
test_diff_notify__notify_cb_can_be_used_as_filtering_function	my_project/libgit2/tests/libgit2/diff/notify.c	/^void test_diff_notify__notify_cb_can_be_used_as_filtering_function(void)$/;"	f	typeref:typename:void
test_diff_notify__notify_multiple_pathspec	my_project/libgit2/tests/libgit2/diff/notify.c	/^void test_diff_notify__notify_multiple_pathspec(void)$/;"	f	typeref:typename:void
test_diff_notify__notify_single_pathspec	my_project/libgit2/tests/libgit2/diff/notify.c	/^void test_diff_notify__notify_single_pathspec(void)$/;"	f	typeref:typename:void
test_diff_notify__progress_cb_can_abort_diff	my_project/libgit2/tests/libgit2/diff/notify.c	/^void test_diff_notify__progress_cb_can_abort_diff(void)$/;"	f	typeref:typename:void
test_diff_parse__add_delete_no_index	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__add_delete_no_index(void)$/;"	f	typeref:typename:void
test_diff_parse__can_parse_generated_diff	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__can_parse_generated_diff(void)$/;"	f	typeref:typename:void
test_diff_parse__cleanup	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__cleanup(void)$/;"	f	typeref:typename:void
test_diff_parse__crlf	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__crlf(void)$/;"	f	typeref:typename:void
test_diff_parse__delete_file_with_space_and_regenerate_patch	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__delete_file_with_space_and_regenerate_patch(void)$/;"	f	typeref:typename:void
test_diff_parse__empty_file	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__empty_file(void)$/;"	f	typeref:typename:void
test_diff_parse__eof_nl_missing	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__eof_nl_missing(void)$/;"	f	typeref:typename:void
test_diff_parse__exact_rename	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__exact_rename(void)$/;"	f	typeref:typename:void
test_diff_parse__foreach_works_with_parsed_patch	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__foreach_works_with_parsed_patch(void)$/;"	f	typeref:typename:void
test_diff_parse__get_patch_from_diff	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__get_patch_from_diff(void)$/;"	f	typeref:typename:void
test_diff_parse__invalid_patches_fails	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__invalid_patches_fails(void)$/;"	f	typeref:typename:void
test_diff_parse__issue4672	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__issue4672(void)$/;"	f	typeref:typename:void
test_diff_parse__lineinfo	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__lineinfo(void)$/;"	f	typeref:typename:void
test_diff_parse__new_file_with_space	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__new_file_with_space(void)$/;"	f	typeref:typename:void
test_diff_parse__new_file_with_space_and_regenerate_patch	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__new_file_with_space_and_regenerate_patch(void)$/;"	f	typeref:typename:void
test_diff_parse__no_extended_headers	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__no_extended_headers(void)$/;"	f	typeref:typename:void
test_diff_parse__nonpatches_fail_with_notfound	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__nonpatches_fail_with_notfound(void)$/;"	f	typeref:typename:void
test_diff_parse__parsing_minimal_patch_succeeds	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__parsing_minimal_patch_succeeds(void)$/;"	f	typeref:typename:void
test_diff_parse__patch_roundtrip_succeeds	my_project/libgit2/tests/libgit2/diff/parse.c	/^void test_diff_parse__patch_roundtrip_succeeds(void)$/;"	f	typeref:typename:void
test_diff_patch__can_cancel_diff_print	my_project/libgit2/tests/libgit2/diff/patch.c	/^void test_diff_patch__can_cancel_diff_print(void)$/;"	f	typeref:typename:void
test_diff_patch__can_properly_display_the_removal_of_a_file	my_project/libgit2/tests/libgit2/diff/patch.c	/^void test_diff_patch__can_properly_display_the_removal_of_a_file(void)$/;"	f	typeref:typename:void
test_diff_patch__can_strip_bad_utf8	my_project/libgit2/tests/libgit2/diff/patch.c	/^void test_diff_patch__can_strip_bad_utf8(void)$/;"	f	typeref:typename:void
test_diff_patch__cleanup	my_project/libgit2/tests/libgit2/diff/patch.c	/^void test_diff_patch__cleanup(void)$/;"	f	typeref:typename:void
test_diff_patch__config_options	my_project/libgit2/tests/libgit2/diff/patch.c	/^void test_diff_patch__config_options(void)$/;"	f	typeref:typename:void
test_diff_patch__hunks_have_correct_line_numbers	my_project/libgit2/tests/libgit2/diff/patch.c	/^void test_diff_patch__hunks_have_correct_line_numbers(void)$/;"	f	typeref:typename:void
test_diff_patch__initialize	my_project/libgit2/tests/libgit2/diff/patch.c	/^void test_diff_patch__initialize(void)$/;"	f	typeref:typename:void
test_diff_patch__line_counts_with_eofnl	my_project/libgit2/tests/libgit2/diff/patch.c	/^void test_diff_patch__line_counts_with_eofnl(void)$/;"	f	typeref:typename:void
test_diff_patch__to_string	my_project/libgit2/tests/libgit2/diff/patch.c	/^void test_diff_patch__to_string(void)$/;"	f	typeref:typename:void
test_diff_patchid__binary_file	my_project/libgit2/tests/libgit2/diff/patchid.c	/^void test_diff_patchid__binary_file(void)$/;"	f	typeref:typename:void
test_diff_patchid__created_file	my_project/libgit2/tests/libgit2/diff/patchid.c	/^void test_diff_patchid__created_file(void)$/;"	f	typeref:typename:void
test_diff_patchid__deleted_file	my_project/libgit2/tests/libgit2/diff/patchid.c	/^void test_diff_patchid__deleted_file(void)$/;"	f	typeref:typename:void
test_diff_patchid__filename_with_spaces	my_project/libgit2/tests/libgit2/diff/patchid.c	/^void test_diff_patchid__filename_with_spaces(void)$/;"	f	typeref:typename:void
test_diff_patchid__modechange	my_project/libgit2/tests/libgit2/diff/patchid.c	/^void test_diff_patchid__modechange(void)$/;"	f	typeref:typename:void
test_diff_patchid__multiple_files	my_project/libgit2/tests/libgit2/diff/patchid.c	/^void test_diff_patchid__multiple_files(void)$/;"	f	typeref:typename:void
test_diff_patchid__multiple_hunks	my_project/libgit2/tests/libgit2/diff/patchid.c	/^void test_diff_patchid__multiple_hunks(void)$/;"	f	typeref:typename:void
test_diff_patchid__renamed_file	my_project/libgit2/tests/libgit2/diff/patchid.c	/^void test_diff_patchid__renamed_file(void)$/;"	f	typeref:typename:void
test_diff_patchid__same_diff_with_differing_whitespace_has_same_id	my_project/libgit2/tests/libgit2/diff/patchid.c	/^void test_diff_patchid__same_diff_with_differing_whitespace_has_same_id(void)$/;"	f	typeref:typename:void
test_diff_patchid__shuffle_hunks	my_project/libgit2/tests/libgit2/diff/patchid.c	/^void test_diff_patchid__shuffle_hunks(void)$/;"	f	typeref:typename:void
test_diff_patchid__simple_commit	my_project/libgit2/tests/libgit2/diff/patchid.c	/^void test_diff_patchid__simple_commit(void)$/;"	f	typeref:typename:void
test_diff_pathspec__0	my_project/libgit2/tests/libgit2/diff/pathspec.c	/^void test_diff_pathspec__0(void)$/;"	f	typeref:typename:void
test_diff_pathspec__cleanup	my_project/libgit2/tests/libgit2/diff/pathspec.c	/^void test_diff_pathspec__cleanup(void)$/;"	f	typeref:typename:void
test_diff_pathspec__initialize	my_project/libgit2/tests/libgit2/diff/pathspec.c	/^void test_diff_pathspec__initialize(void)$/;"	f	typeref:typename:void
test_diff_racediffiter__basic	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^void test_diff_racediffiter__basic(void)$/;"	f	typeref:typename:void
test_diff_racediffiter__cleanup	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^void test_diff_racediffiter__cleanup(void)$/;"	f	typeref:typename:void
test_diff_racediffiter__initialize	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^void test_diff_racediffiter__initialize(void)$/;"	f	typeref:typename:void
test_diff_racediffiter__racy	my_project/libgit2/tests/libgit2/diff/racediffiter.c	/^void test_diff_racediffiter__racy(void)$/;"	f	typeref:typename:void
test_diff_rename__blank_files_not_renamed_when_not_ignoring_whitespace	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__blank_files_not_renamed_when_not_ignoring_whitespace(void)$/;"	f	typeref:typename:void
test_diff_rename__blank_files_renamed_when_ignoring_whitespace	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__blank_files_renamed_when_ignoring_whitespace(void)$/;"	f	typeref:typename:void
test_diff_rename__break_rewrite	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__break_rewrite(void)$/;"	f	typeref:typename:void
test_diff_rename__by_config_doesnt_mess_with_whitespace_settings	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__by_config_doesnt_mess_with_whitespace_settings(void)$/;"	f	typeref:typename:void
test_diff_rename__can_delete_unmodified_deltas	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__can_delete_unmodified_deltas(void)$/;"	f	typeref:typename:void
test_diff_rename__can_delete_unmodified_deltas_including_submodule	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__can_delete_unmodified_deltas_including_submodule(void)$/;"	f	typeref:typename:void
test_diff_rename__can_find_copy_to_split	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__can_find_copy_to_split(void)$/;"	f	typeref:typename:void
test_diff_rename__can_override_thresholds_when_obeying_config	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__can_override_thresholds_when_obeying_config(void)$/;"	f	typeref:typename:void
test_diff_rename__can_rename_from_rewrite	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__can_rename_from_rewrite(void)$/;"	f	typeref:typename:void
test_diff_rename__case_changes_are_split	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__case_changes_are_split(void)$/;"	f	typeref:typename:void
test_diff_rename__checks_options_version	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__checks_options_version(void)$/;"	f	typeref:typename:void
test_diff_rename__cleanup	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__cleanup(void)$/;"	f	typeref:typename:void
test_diff_rename__delete_and_rename	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__delete_and_rename(void)$/;"	f	typeref:typename:void
test_diff_rename__empty_files_renamed	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__empty_files_renamed(void)$/;"	f	typeref:typename:void
test_diff_rename__file_exchange	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__file_exchange(void)$/;"	f	typeref:typename:void
test_diff_rename__file_exchange_three	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__file_exchange_three(void)$/;"	f	typeref:typename:void
test_diff_rename__file_partial_exchange	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__file_partial_exchange(void)$/;"	f	typeref:typename:void
test_diff_rename__from_deleted_to_split	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__from_deleted_to_split(void)$/;"	f	typeref:typename:void
test_diff_rename__identical	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__identical(void)$/;"	f	typeref:typename:void
test_diff_rename__initialize	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__initialize(void)$/;"	f	typeref:typename:void
test_diff_rename__match_oid	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__match_oid(void)$/;"	f	typeref:typename:void
test_diff_rename__matches_config_behavior	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__matches_config_behavior(void)$/;"	f	typeref:typename:void
test_diff_rename__not_exact_match	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__not_exact_match(void)$/;"	f	typeref:typename:void
test_diff_rename__patch	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__patch(void)$/;"	f	typeref:typename:void
test_diff_rename__rejected_match_can_match_others	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__rejected_match_can_match_others(void)$/;"	f	typeref:typename:void
test_diff_rename__rejected_match_can_match_others_three	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__rejected_match_can_match_others_three(void)$/;"	f	typeref:typename:void
test_diff_rename__rejected_match_can_match_others_two	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__rejected_match_can_match_others_two(void)$/;"	f	typeref:typename:void
test_diff_rename__rename_and_copy_from_same_source	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__rename_and_copy_from_same_source(void)$/;"	f	typeref:typename:void
test_diff_rename__rewrite_and_delete	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__rewrite_and_delete(void)$/;"	f	typeref:typename:void
test_diff_rename__rewrite_on_single_file	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__rewrite_on_single_file(void)$/;"	f	typeref:typename:void
test_diff_rename__test_small_files	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__test_small_files(void)$/;"	f	typeref:typename:void
test_diff_rename__unmodified_can_be_renamed	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__unmodified_can_be_renamed(void)$/;"	f	typeref:typename:void
test_diff_rename__working_directory_changes	my_project/libgit2/tests/libgit2/diff/rename.c	/^void test_diff_rename__working_directory_changes(void)$/;"	f	typeref:typename:void
test_diff_stats__binary	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__binary(void)$/;"	f	typeref:typename:void
test_diff_stats__binary_numstat	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__binary_numstat(void)$/;"	f	typeref:typename:void
test_diff_stats__cleanup	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__cleanup(void)$/;"	f	typeref:typename:void
test_diff_stats__initialize	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__initialize(void)$/;"	f	typeref:typename:void
test_diff_stats__mode_change	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__mode_change(void)$/;"	f	typeref:typename:void
test_diff_stats__multiple_hunks	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__multiple_hunks(void)$/;"	f	typeref:typename:void
test_diff_stats__new_file	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__new_file(void)$/;"	f	typeref:typename:void
test_diff_stats__numstat	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__numstat(void)$/;"	f	typeref:typename:void
test_diff_stats__rename	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__rename(void)$/;"	f	typeref:typename:void
test_diff_stats__rename_and_modifiy	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__rename_and_modifiy(void)$/;"	f	typeref:typename:void
test_diff_stats__rename_and_modify_no_find	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__rename_and_modify_no_find(void)$/;"	f	typeref:typename:void
test_diff_stats__rename_in_subdirectory	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__rename_in_subdirectory(void)$/;"	f	typeref:typename:void
test_diff_stats__rename_no_find	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__rename_no_find(void)$/;"	f	typeref:typename:void
test_diff_stats__rename_nochanges	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__rename_nochanges(void)$/;"	f	typeref:typename:void
test_diff_stats__rename_nochanges_no_find	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__rename_nochanges_no_find(void)$/;"	f	typeref:typename:void
test_diff_stats__shortstat	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__shortstat(void)$/;"	f	typeref:typename:void
test_diff_stats__shortstat_nodeletions	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__shortstat_nodeletions(void)$/;"	f	typeref:typename:void
test_diff_stats__shortstat_noinsertions	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__shortstat_noinsertions(void)$/;"	f	typeref:typename:void
test_diff_stats__stat	my_project/libgit2/tests/libgit2/diff/stats.c	/^void test_diff_stats__stat(void)$/;"	f	typeref:typename:void
test_diff_submodules__can_be_identified_by_trailing_slash_in_pathspec	my_project/libgit2/tests/libgit2/diff/submodules.c	/^void test_diff_submodules__can_be_identified_by_trailing_slash_in_pathspec(void)$/;"	f	typeref:typename:void
test_diff_submodules__cleanup	my_project/libgit2/tests/libgit2/diff/submodules.c	/^void test_diff_submodules__cleanup(void)$/;"	f	typeref:typename:void
test_diff_submodules__diff_ignore_options	my_project/libgit2/tests/libgit2/diff/submodules.c	/^void test_diff_submodules__diff_ignore_options(void)$/;"	f	typeref:typename:void
test_diff_submodules__dirty_submodule	my_project/libgit2/tests/libgit2/diff/submodules.c	/^void test_diff_submodules__dirty_submodule(void)$/;"	f	typeref:typename:void
test_diff_submodules__dirty_submodule_2	my_project/libgit2/tests/libgit2/diff/submodules.c	/^void test_diff_submodules__dirty_submodule_2(void)$/;"	f	typeref:typename:void
test_diff_submodules__initialize	my_project/libgit2/tests/libgit2/diff/submodules.c	/^void test_diff_submodules__initialize(void)$/;"	f	typeref:typename:void
test_diff_submodules__invalid_cache	my_project/libgit2/tests/libgit2/diff/submodules.c	/^void test_diff_submodules__invalid_cache(void)$/;"	f	typeref:typename:void
test_diff_submodules__skips_empty_includes_used	my_project/libgit2/tests/libgit2/diff/submodules.c	/^void test_diff_submodules__skips_empty_includes_used(void)$/;"	f	typeref:typename:void
test_diff_submodules__submod2_head_to_index	my_project/libgit2/tests/libgit2/diff/submodules.c	/^void test_diff_submodules__submod2_head_to_index(void)$/;"	f	typeref:typename:void
test_diff_submodules__submod2_index_to_wd	my_project/libgit2/tests/libgit2/diff/submodules.c	/^void test_diff_submodules__submod2_index_to_wd(void)$/;"	f	typeref:typename:void
test_diff_submodules__unmodified_submodule	my_project/libgit2/tests/libgit2/diff/submodules.c	/^void test_diff_submodules__unmodified_submodule(void)$/;"	f	typeref:typename:void
test_diff_tree__0	my_project/libgit2/tests/libgit2/diff/tree.c	/^void test_diff_tree__0(void)$/;"	f	typeref:typename:void
test_diff_tree__bare	my_project/libgit2/tests/libgit2/diff/tree.c	/^void test_diff_tree__bare(void)$/;"	f	typeref:typename:void
test_diff_tree__checks_options_version	my_project/libgit2/tests/libgit2/diff/tree.c	/^void test_diff_tree__checks_options_version(void)$/;"	f	typeref:typename:void
test_diff_tree__cleanup	my_project/libgit2/tests/libgit2/diff/tree.c	/^void test_diff_tree__cleanup(void)$/;"	f	typeref:typename:void
test_diff_tree__diff_configs	my_project/libgit2/tests/libgit2/diff/tree.c	/^void test_diff_tree__diff_configs(void)$/;"	f	typeref:typename:void
test_diff_tree__diff_tree_with_empty_dir_entry_succeeds	my_project/libgit2/tests/libgit2/diff/tree.c	/^void test_diff_tree__diff_tree_with_empty_dir_entry_succeeds(void)$/;"	f	typeref:typename:void
test_diff_tree__initialize	my_project/libgit2/tests/libgit2/diff/tree.c	/^void test_diff_tree__initialize(void)$/;"	f	typeref:typename:void
test_diff_tree__issue_1397	my_project/libgit2/tests/libgit2/diff/tree.c	/^void test_diff_tree__issue_1397(void)$/;"	f	typeref:typename:void
test_diff_tree__larger_hunks	my_project/libgit2/tests/libgit2/diff/tree.c	/^void test_diff_tree__larger_hunks(void)$/;"	f	typeref:typename:void
test_diff_tree__merge	my_project/libgit2/tests/libgit2/diff/tree.c	/^void test_diff_tree__merge(void)$/;"	f	typeref:typename:void
test_diff_tree__options	my_project/libgit2/tests/libgit2/diff/tree.c	/^void test_diff_tree__options(void)$/;"	f	typeref:typename:void
test_diff_tree__regular_blob_mode_changed_to_executable_file	my_project/libgit2/tests/libgit2/diff/tree.c	/^void test_diff_tree__regular_blob_mode_changed_to_executable_file(void)$/;"	f	typeref:typename:void
test_diff_tree__symlink_blob_mode_changed_to_regular_file	my_project/libgit2/tests/libgit2/diff/tree.c	/^void test_diff_tree__symlink_blob_mode_changed_to_regular_file(void)$/;"	f	typeref:typename:void
test_diff_tree__symlink_blob_mode_changed_to_regular_file_as_typechange	my_project/libgit2/tests/libgit2/diff/tree.c	/^void test_diff_tree__symlink_blob_mode_changed_to_regular_file_as_typechange(void)$/;"	f	typeref:typename:void
test_diff_userdiff__cleanup	my_project/libgit2/tests/libgit2/diff/userdiff.c	/^void test_diff_userdiff__cleanup(void)$/;"	f	typeref:typename:void
test_diff_userdiff__compile_userdiff_regexps	my_project/libgit2/tests/libgit2/diff/userdiff.c	/^void test_diff_userdiff__compile_userdiff_regexps(void)$/;"	f	typeref:typename:void
test_diff_workdir__binary_detection	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__binary_detection(void)$/;"	f	typeref:typename:void
test_diff_workdir__can_diff_empty_file	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__can_diff_empty_file(void)$/;"	f	typeref:typename:void
test_diff_workdir__can_diff_empty_untracked_file	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__can_diff_empty_untracked_file(void)$/;"	f	typeref:typename:void
test_diff_workdir__can_update_index	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__can_update_index(void)$/;"	f	typeref:typename:void
test_diff_workdir__cannot_diff_against_a_bare_repository	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__cannot_diff_against_a_bare_repository(void)$/;"	f	typeref:typename:void
test_diff_workdir__checks_options_version	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__checks_options_version(void)$/;"	f	typeref:typename:void
test_diff_workdir__cleanup	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__cleanup(void)$/;"	f	typeref:typename:void
test_diff_workdir__completely_ignored_shows_empty_diff	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__completely_ignored_shows_empty_diff(void)$/;"	f	typeref:typename:void
test_diff_workdir__eof_newline_changes	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__eof_newline_changes(void)$/;"	f	typeref:typename:void
test_diff_workdir__filemode_changes	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__filemode_changes(void)$/;"	f	typeref:typename:void
test_diff_workdir__filemode_changes_with_filemode_false	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__filemode_changes_with_filemode_false(void)$/;"	f	typeref:typename:void
test_diff_workdir__head_index_and_workdir_all_differ	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__head_index_and_workdir_all_differ(void)$/;"	f	typeref:typename:void
test_diff_workdir__ignore_blank_lines	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__ignore_blank_lines(void)$/;"	f	typeref:typename:void
test_diff_workdir__larger_hunks	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__larger_hunks(void)$/;"	f	typeref:typename:void
test_diff_workdir__only_writes_index_when_necessary	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__only_writes_index_when_necessary(void)$/;"	f	typeref:typename:void
test_diff_workdir__order	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__order(void)$/;"	f	typeref:typename:void
test_diff_workdir__patience_diff	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__patience_diff(void)$/;"	f	typeref:typename:void
test_diff_workdir__submodules	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__submodules(void)$/;"	f	typeref:typename:void
test_diff_workdir__symlink_changed_on_non_symlink_platform	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__symlink_changed_on_non_symlink_platform(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__to_index(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index_conflicted	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__to_index_conflicted(void) {$/;"	f	typeref:typename:void
test_diff_workdir__to_index_issue_1397	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__to_index_issue_1397(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index_pathlist	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__to_index_pathlist(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index_reversed_content_loads	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__to_index_reversed_content_loads(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index_with_assume_unchanged	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__to_index_with_assume_unchanged(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index_with_conflicts	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__to_index_with_conflicts(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index_with_pathlist_disabling_fnmatch	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__to_index_with_pathlist_disabling_fnmatch(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_index_with_pathspec	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__to_index_with_pathspec(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_null_tree	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__to_null_tree(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_tree	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__to_tree(void)$/;"	f	typeref:typename:void
test_diff_workdir__to_tree_issue_1397	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__to_tree_issue_1397(void)$/;"	f	typeref:typename:void
test_diff_workdir__untracked_directory_comes_last	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__untracked_directory_comes_last(void)$/;"	f	typeref:typename:void
test_diff_workdir__untracked_directory_scenarios	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__untracked_directory_scenarios(void)$/;"	f	typeref:typename:void
test_diff_workdir__untracked_with_bom	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__untracked_with_bom(void)$/;"	f	typeref:typename:void
test_diff_workdir__with_stale_index	my_project/libgit2/tests/libgit2/diff/workdir.c	/^void test_diff_workdir__with_stale_index(void)$/;"	f	typeref:typename:void
test_dirent__diriter_at_directory_root	my_project/libgit2/tests/util/dirent.c	/^void test_dirent__diriter_at_directory_root(void)$/;"	f	typeref:typename:void
test_dirent__diriter_with_fullname	my_project/libgit2/tests/util/dirent.c	/^void test_dirent__diriter_with_fullname(void)$/;"	f	typeref:typename:void
test_dirent__dont_traverse_dot	my_project/libgit2/tests/util/dirent.c	/^void test_dirent__dont_traverse_dot(void)$/;"	f	typeref:typename:void
test_dirent__dont_traverse_empty_folders	my_project/libgit2/tests/util/dirent.c	/^void test_dirent__dont_traverse_empty_folders(void)$/;"	f	typeref:typename:void
test_dirent__empty_dir	my_project/libgit2/tests/util/dirent.c	/^void test_dirent__empty_dir(void)$/;"	f	typeref:typename:void
test_dirent__length_limits	my_project/libgit2/tests/util/dirent.c	/^void test_dirent__length_limits(void)$/;"	f	typeref:typename:void
test_dirent__traverse_slash_terminated_folder	my_project/libgit2/tests/util/dirent.c	/^void test_dirent__traverse_slash_terminated_folder(void)$/;"	f	typeref:typename:void
test_dirent__traverse_subfolder	my_project/libgit2/tests/util/dirent.c	/^void test_dirent__traverse_subfolder(void)$/;"	f	typeref:typename:void
test_dirent__traverse_weird_filenames	my_project/libgit2/tests/util/dirent.c	/^void test_dirent__traverse_weird_filenames(void)$/;"	f	typeref:typename:void
test_driver_apply	my_project/libgit2/tests/libgit2/merge/driver.c	/^static int test_driver_apply($/;"	f	typeref:typename:int	file:
test_driver_conflict_apply	my_project/libgit2/tests/libgit2/merge/driver.c	/^static struct test_merge_driver test_driver_conflict_apply = {$/;"	v	typeref:struct:test_merge_driver	file:
test_driver_custom	my_project/libgit2/tests/libgit2/merge/driver.c	/^static struct test_merge_driver test_driver_custom = {$/;"	v	typeref:struct:test_merge_driver	file:
test_driver_defer_apply	my_project/libgit2/tests/libgit2/merge/driver.c	/^static struct test_merge_driver test_driver_defer_apply = {$/;"	v	typeref:struct:test_merge_driver	file:
test_driver_init	my_project/libgit2/tests/libgit2/merge/driver.c	/^static int test_driver_init(git_merge_driver *s)$/;"	f	typeref:typename:int	file:
test_driver_shutdown	my_project/libgit2/tests/libgit2/merge/driver.c	/^static void test_driver_shutdown(git_merge_driver *s)$/;"	f	typeref:typename:void	file:
test_driver_wildcard	my_project/libgit2/tests/libgit2/merge/driver.c	/^static struct test_merge_driver test_driver_wildcard = {$/;"	v	typeref:struct:test_merge_driver	file:
test_drivers_register	my_project/libgit2/tests/libgit2/merge/driver.c	/^static void test_drivers_register(void)$/;"	f	typeref:typename:void	file:
test_drivers_unregister	my_project/libgit2/tests/libgit2/merge/driver.c	/^static void test_drivers_unregister(void)$/;"	f	typeref:typename:void	file:
test_email_create__binary	my_project/libgit2/tests/libgit2/email/create.c	/^void test_email_create__binary(void)$/;"	f	typeref:typename:void
test_email_create__binary_not_included	my_project/libgit2/tests/libgit2/email/create.c	/^void test_email_create__binary_not_included(void)$/;"	f	typeref:typename:void
test_email_create__cleanup	my_project/libgit2/tests/libgit2/email/create.c	/^void test_email_create__cleanup(void)$/;"	f	typeref:typename:void
test_email_create__commit	my_project/libgit2/tests/libgit2/email/create.c	/^void test_email_create__commit(void)$/;"	f	typeref:typename:void
test_email_create__commit_subjects	my_project/libgit2/tests/libgit2/email/create.c	/^void test_email_create__commit_subjects(void)$/;"	f	typeref:typename:void
test_email_create__custom_summary_and_body	my_project/libgit2/tests/libgit2/email/create.c	/^void test_email_create__custom_summary_and_body(void)$/;"	f	typeref:typename:void
test_email_create__initialize	my_project/libgit2/tests/libgit2/email/create.c	/^void test_email_create__initialize(void)$/;"	f	typeref:typename:void
test_email_create__rename	my_project/libgit2/tests/libgit2/email/create.c	/^void test_email_create__rename(void)$/;"	f	typeref:typename:void
test_email_create__rename_as_add_delete	my_project/libgit2/tests/libgit2/email/create.c	/^void test_email_create__rename_as_add_delete(void)$/;"	f	typeref:typename:void
test_encoding__decode	my_project/libgit2/tests/util/encoding.c	/^void test_encoding__decode(void)$/;"	f	typeref:typename:void
test_encoding__encode	my_project/libgit2/tests/util/encoding.c	/^void test_encoding__encode(void)$/;"	f	typeref:typename:void
test_entries	my_project/libgit2/tests/libgit2/index/tests.c	/^static struct test_entry test_entries[] = {$/;"	v	typeref:struct:test_entry[]	file:
test_entries	my_project/libgit2/tests/libgit2/index/tests256.c	/^static struct test_entry test_entries[] = {$/;"	v	typeref:struct:test_entry[]	file:
test_entry	my_project/libgit2/tests/libgit2/index/tests.c	/^struct test_entry {$/;"	s	file:
test_entry	my_project/libgit2/tests/libgit2/index/tests256.c	/^struct test_entry {$/;"	s	file:
test_errors__integer_overflow_alloc_add	my_project/libgit2/tests/util/errors.c	/^void test_errors__integer_overflow_alloc_add(void)$/;"	f	typeref:typename:void
test_errors__integer_overflow_alloc_multiply	my_project/libgit2/tests/util/errors.c	/^void test_errors__integer_overflow_alloc_multiply(void)$/;"	f	typeref:typename:void
test_errors__integer_overflow_sets_oom	my_project/libgit2/tests/util/errors.c	/^void test_errors__integer_overflow_sets_oom(void)$/;"	f	typeref:typename:void
test_errors__new_school	my_project/libgit2/tests/util/errors.c	/^void test_errors__new_school(void)$/;"	f	typeref:typename:void
test_errors__public_api	my_project/libgit2/tests/util/errors.c	/^void test_errors__public_api(void)$/;"	f	typeref:typename:void
test_errors__restore	my_project/libgit2/tests/util/errors.c	/^void test_errors__restore(void)$/;"	f	typeref:typename:void
test_errors__restore_oom	my_project/libgit2/tests/util/errors.c	/^void test_errors__restore_oom(void)$/;"	f	typeref:typename:void
test_fetch_local__cleanup	my_project/libgit2/tests/libgit2/fetch/local.c	/^void test_fetch_local__cleanup(void)$/;"	f	typeref:typename:void
test_fetch_local__defaults	my_project/libgit2/tests/libgit2/fetch/local.c	/^void test_fetch_local__defaults(void)$/;"	f	typeref:typename:void
test_fetch_local__initialize	my_project/libgit2/tests/libgit2/fetch/local.c	/^void test_fetch_local__initialize(void)$/;"	f	typeref:typename:void
test_fetch_local__reachable_commit	my_project/libgit2/tests/libgit2/fetch/local.c	/^void test_fetch_local__reachable_commit(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__create_when_refpecs_given	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__create_when_refpecs_given(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__create_with_multiple_refspecs	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__create_with_multiple_refspecs(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__credentials_are_stripped	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__credentials_are_stripped(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__fetch_into_repo_with_invalid_head	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__fetch_into_repo_with_invalid_head(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__fetch_into_repo_with_symrefs	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__fetch_into_repo_with_symrefs(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__initialize	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__initialize(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__invalid_description	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__invalid_description(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__invalid_for_merge	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__invalid_for_merge(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__invalid_oid	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__invalid_oid(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__invalid_unterminated_last_line	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__invalid_unterminated_last_line(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__name_missing	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__name_missing(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__nonexistent	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__nonexistent(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__quote_in_branch_name	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__quote_in_branch_name(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__read	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__read(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__read_old_style	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__read_old_style(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__type_missing	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__type_missing(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__unborn_with_upstream	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__unborn_with_upstream(void)$/;"	f	typeref:typename:void
test_fetchhead_nonetwork__write	my_project/libgit2/tests/libgit2/fetchhead/nonetwork.c	/^void test_fetchhead_nonetwork__write(void)$/;"	f	typeref:typename:void
test_file_contents	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^static bool test_file_contents(const char *filename, const char *expected)$/;"	f	typeref:typename:bool	file:
test_filebuf__0	my_project/libgit2/tests/util/filebuf.c	/^void test_filebuf__0(void)$/;"	f	typeref:typename:void
test_filebuf__1	my_project/libgit2/tests/util/filebuf.c	/^void test_filebuf__1(void)$/;"	f	typeref:typename:void
test_filebuf__2	my_project/libgit2/tests/util/filebuf.c	/^void test_filebuf__2(void)$/;"	f	typeref:typename:void
test_filebuf__4	my_project/libgit2/tests/util/filebuf.c	/^void test_filebuf__4(void)$/;"	f	typeref:typename:void
test_filebuf__5	my_project/libgit2/tests/util/filebuf.c	/^void test_filebuf__5(void)$/;"	f	typeref:typename:void
test_filebuf__detects_directory	my_project/libgit2/tests/util/filebuf.c	/^void test_filebuf__detects_directory(void)$/;"	f	typeref:typename:void
test_filebuf__hidden_file	my_project/libgit2/tests/util/filebuf.c	/^void test_filebuf__hidden_file(void)$/;"	f	typeref:typename:void
test_filebuf__rename_error	my_project/libgit2/tests/util/filebuf.c	/^void test_filebuf__rename_error(void)$/;"	f	typeref:typename:void
test_filebuf__symlink_depth	my_project/libgit2/tests/util/filebuf.c	/^void test_filebuf__symlink_depth(void)$/;"	f	typeref:typename:void
test_filebuf__symlink_follow	my_project/libgit2/tests/util/filebuf.c	/^void test_filebuf__symlink_follow(void)$/;"	f	typeref:typename:void
test_filebuf__symlink_follow_absolute_paths	my_project/libgit2/tests/util/filebuf.c	/^void test_filebuf__symlink_follow_absolute_paths(void)$/;"	f	typeref:typename:void
test_filebuf__umask	my_project/libgit2/tests/util/filebuf.c	/^void test_filebuf__umask(void)$/;"	f	typeref:typename:void
test_files_1	my_project/libgit2/tests/libgit2/ignore/status.c	/^static const char *test_files_1[] = {$/;"	v	typeref:typename:const char * []	file:
test_filter_bare__all_crlf	my_project/libgit2/tests/libgit2/filter/bare.c	/^void test_filter_bare__all_crlf(void)$/;"	f	typeref:typename:void
test_filter_bare__cleanup	my_project/libgit2/tests/libgit2/filter/bare.c	/^void test_filter_bare__cleanup(void)$/;"	f	typeref:typename:void
test_filter_bare__from_lf	my_project/libgit2/tests/libgit2/filter/bare.c	/^void test_filter_bare__from_lf(void)$/;"	f	typeref:typename:void
test_filter_bare__from_specific_commit_one	my_project/libgit2/tests/libgit2/filter/bare.c	/^void test_filter_bare__from_specific_commit_one(void)$/;"	f	typeref:typename:void
test_filter_bare__from_specific_commit_with_no_attributes_file	my_project/libgit2/tests/libgit2/filter/bare.c	/^void test_filter_bare__from_specific_commit_with_no_attributes_file(void)$/;"	f	typeref:typename:void
test_filter_bare__initialize	my_project/libgit2/tests/libgit2/filter/bare.c	/^void test_filter_bare__initialize(void)$/;"	f	typeref:typename:void
test_filter_bare__nested_attributes	my_project/libgit2/tests/libgit2/filter/bare.c	/^void test_filter_bare__nested_attributes(void)$/;"	f	typeref:typename:void
test_filter_bare__sanitizes	my_project/libgit2/tests/libgit2/filter/bare.c	/^void test_filter_bare__sanitizes(void)$/;"	f	typeref:typename:void
test_filter_blob__all_crlf	my_project/libgit2/tests/libgit2/filter/blob.c	/^void test_filter_blob__all_crlf(void)$/;"	f	typeref:typename:void
test_filter_blob__cleanup	my_project/libgit2/tests/libgit2/filter/blob.c	/^void test_filter_blob__cleanup(void)$/;"	f	typeref:typename:void
test_filter_blob__from_lf	my_project/libgit2/tests/libgit2/filter/blob.c	/^void test_filter_blob__from_lf(void)$/;"	f	typeref:typename:void
test_filter_blob__ident	my_project/libgit2/tests/libgit2/filter/blob.c	/^void test_filter_blob__ident(void)$/;"	f	typeref:typename:void
test_filter_blob__initialize	my_project/libgit2/tests/libgit2/filter/blob.c	/^void test_filter_blob__initialize(void)$/;"	f	typeref:typename:void
test_filter_blob__sanitizes	my_project/libgit2/tests/libgit2/filter/blob.c	/^void test_filter_blob__sanitizes(void)$/;"	f	typeref:typename:void
test_filter_crlf__cleanup	my_project/libgit2/tests/libgit2/filter/crlf.c	/^void test_filter_crlf__cleanup(void)$/;"	f	typeref:typename:void
test_filter_crlf__initialize	my_project/libgit2/tests/libgit2/filter/crlf.c	/^void test_filter_crlf__initialize(void)$/;"	f	typeref:typename:void
test_filter_crlf__no_safecrlf	my_project/libgit2/tests/libgit2/filter/crlf.c	/^void test_filter_crlf__no_safecrlf(void)$/;"	f	typeref:typename:void
test_filter_crlf__safecrlf_warn	my_project/libgit2/tests/libgit2/filter/crlf.c	/^void test_filter_crlf__safecrlf_warn(void)$/;"	f	typeref:typename:void
test_filter_crlf__to_odb	my_project/libgit2/tests/libgit2/filter/crlf.c	/^void test_filter_crlf__to_odb(void)$/;"	f	typeref:typename:void
test_filter_crlf__to_worktree	my_project/libgit2/tests/libgit2/filter/crlf.c	/^void test_filter_crlf__to_worktree(void)$/;"	f	typeref:typename:void
test_filter_crlf__with_safecrlf	my_project/libgit2/tests/libgit2/filter/crlf.c	/^void test_filter_crlf__with_safecrlf(void)$/;"	f	typeref:typename:void
test_filter_crlf__with_safecrlf_and_unsafe_allowed	my_project/libgit2/tests/libgit2/filter/crlf.c	/^void test_filter_crlf__with_safecrlf_and_unsafe_allowed(void)$/;"	f	typeref:typename:void
test_filter_custom__can_register_a_custom_filter_in_the_repository	my_project/libgit2/tests/libgit2/filter/custom.c	/^void test_filter_custom__can_register_a_custom_filter_in_the_repository(void)$/;"	f	typeref:typename:void
test_filter_custom__cleanup	my_project/libgit2/tests/libgit2/filter/custom.c	/^void test_filter_custom__cleanup(void)$/;"	f	typeref:typename:void
test_filter_custom__erroneous_filter_fails	my_project/libgit2/tests/libgit2/filter/custom.c	/^void test_filter_custom__erroneous_filter_fails(void)$/;"	f	typeref:typename:void
test_filter_custom__filter_registry_failure_cases	my_project/libgit2/tests/libgit2/filter/custom.c	/^void test_filter_custom__filter_registry_failure_cases(void)$/;"	f	typeref:typename:void
test_filter_custom__initialize	my_project/libgit2/tests/libgit2/filter/custom.c	/^void test_filter_custom__initialize(void)$/;"	f	typeref:typename:void
test_filter_custom__order_dependency	my_project/libgit2/tests/libgit2/filter/custom.c	/^void test_filter_custom__order_dependency(void)$/;"	f	typeref:typename:void
test_filter_custom__to_odb	my_project/libgit2/tests/libgit2/filter/custom.c	/^void test_filter_custom__to_odb(void)$/;"	f	typeref:typename:void
test_filter_custom__to_workdir	my_project/libgit2/tests/libgit2/filter/custom.c	/^void test_filter_custom__to_workdir(void)$/;"	f	typeref:typename:void
test_filter_file__apply	my_project/libgit2/tests/libgit2/filter/file.c	/^void test_filter_file__apply(void)$/;"	f	typeref:typename:void
test_filter_file__apply_stream	my_project/libgit2/tests/libgit2/filter/file.c	/^void test_filter_file__apply_stream(void)$/;"	f	typeref:typename:void
test_filter_file__cleanup	my_project/libgit2/tests/libgit2/filter/file.c	/^void test_filter_file__cleanup(void)$/;"	f	typeref:typename:void
test_filter_file__initialize	my_project/libgit2/tests/libgit2/filter/file.c	/^void test_filter_file__initialize(void)$/;"	f	typeref:typename:void
test_filter_ident__cleanup	my_project/libgit2/tests/libgit2/filter/ident.c	/^void test_filter_ident__cleanup(void)$/;"	f	typeref:typename:void
test_filter_ident__initialize	my_project/libgit2/tests/libgit2/filter/ident.c	/^void test_filter_ident__initialize(void)$/;"	f	typeref:typename:void
test_filter_ident__to_odb	my_project/libgit2/tests/libgit2/filter/ident.c	/^void test_filter_ident__to_odb(void)$/;"	f	typeref:typename:void
test_filter_ident__to_worktree	my_project/libgit2/tests/libgit2/filter/ident.c	/^void test_filter_ident__to_worktree(void)$/;"	f	typeref:typename:void
test_filter_query__autocrlf_true_implies_crlf	my_project/libgit2/tests/libgit2/filter/query.c	/^void test_filter_query__autocrlf_true_implies_crlf(void)$/;"	f	typeref:typename:void
test_filter_query__cleanup	my_project/libgit2/tests/libgit2/filter/query.c	/^void test_filter_query__cleanup(void)$/;"	f	typeref:typename:void
test_filter_query__custom	my_project/libgit2/tests/libgit2/filter/query.c	/^void test_filter_query__custom(void)$/;"	f	typeref:typename:void
test_filter_query__filters	my_project/libgit2/tests/libgit2/filter/query.c	/^void test_filter_query__filters(void)$/;"	f	typeref:typename:void
test_filter_query__initialize	my_project/libgit2/tests/libgit2/filter/query.c	/^void test_filter_query__initialize(void)$/;"	f	typeref:typename:void
test_filter_query__unknown	my_project/libgit2/tests/libgit2/filter/query.c	/^void test_filter_query__unknown(void)$/;"	f	typeref:typename:void
test_filter_stream__bigfile	my_project/libgit2/tests/libgit2/filter/stream.c	/^void test_filter_stream__bigfile(void)$/;"	f	typeref:typename:void
test_filter_stream__cleanup	my_project/libgit2/tests/libgit2/filter/stream.c	/^void test_filter_stream__cleanup(void)$/;"	f	typeref:typename:void
test_filter_stream__initialize	my_project/libgit2/tests/libgit2/filter/stream.c	/^void test_filter_stream__initialize(void)$/;"	f	typeref:typename:void
test_filter_stream__smallfile	my_project/libgit2/tests/libgit2/filter/stream.c	/^void test_filter_stream__smallfile(void)$/;"	f	typeref:typename:void
test_filter_systemattrs__cleanup	my_project/libgit2/tests/libgit2/filter/systemattrs.c	/^void test_filter_systemattrs__cleanup(void)$/;"	f	typeref:typename:void
test_filter_systemattrs__disables_system_attributes	my_project/libgit2/tests/libgit2/filter/systemattrs.c	/^void test_filter_systemattrs__disables_system_attributes(void)$/;"	f	typeref:typename:void
test_filter_systemattrs__initialize	my_project/libgit2/tests/libgit2/filter/systemattrs.c	/^void test_filter_systemattrs__initialize(void)$/;"	f	typeref:typename:void
test_filter_systemattrs__reads_system_attributes	my_project/libgit2/tests/libgit2/filter/systemattrs.c	/^void test_filter_systemattrs__reads_system_attributes(void)$/;"	f	typeref:typename:void
test_filter_wildcard__cleanup	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^void test_filter_wildcard__cleanup(void)$/;"	f	typeref:typename:void
test_filter_wildcard__flip	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^void test_filter_wildcard__flip(void)$/;"	f	typeref:typename:void
test_filter_wildcard__initialize	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^void test_filter_wildcard__initialize(void)$/;"	f	typeref:typename:void
test_filter_wildcard__none	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^void test_filter_wildcard__none(void)$/;"	f	typeref:typename:void
test_filter_wildcard__reverse	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^void test_filter_wildcard__reverse(void)$/;"	f	typeref:typename:void
test_find_differences	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^static void test_find_differences($/;"	f	typeref:typename:void	file:
test_ftruncate__2gb	my_project/libgit2/tests/util/ftruncate.c	/^void test_ftruncate__2gb(void)$/;"	f	typeref:typename:void
test_ftruncate__4gb	my_project/libgit2/tests/util/ftruncate.c	/^void test_ftruncate__4gb(void)$/;"	f	typeref:typename:void
test_ftruncate__cleanup	my_project/libgit2/tests/util/ftruncate.c	/^void test_ftruncate__cleanup(void)$/;"	f	typeref:typename:void
test_ftruncate__initialize	my_project/libgit2/tests/util/ftruncate.c	/^void test_ftruncate__initialize(void)$/;"	f	typeref:typename:void
test_futils__cleanup	my_project/libgit2/tests/util/futils.c	/^void test_futils__cleanup(void)$/;"	f	typeref:typename:void
test_futils__initialize	my_project/libgit2/tests/util/futils.c	/^void test_futils__initialize(void)$/;"	f	typeref:typename:void
test_futils__mktmp_umask	my_project/libgit2/tests/util/futils.c	/^void test_futils__mktmp_umask(void)$/;"	f	typeref:typename:void
test_futils__recursive_rmdir_keeps_symlink_targets	my_project/libgit2/tests/util/futils.c	/^void test_futils__recursive_rmdir_keeps_symlink_targets(void)$/;"	f	typeref:typename:void
test_futils__write_hidden_file	my_project/libgit2/tests/util/futils.c	/^void test_futils__write_hidden_file(void)$/;"	f	typeref:typename:void
test_futils__writebuffer	my_project/libgit2/tests/util/futils.c	/^void test_futils__writebuffer(void)$/;"	f	typeref:typename:void
test_gitstr__0	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__0(void)$/;"	f	typeref:typename:void
test_gitstr__1	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__1(void)$/;"	f	typeref:typename:void
test_gitstr__10	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__10(void)$/;"	f	typeref:typename:void
test_gitstr__11	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__11(void)$/;"	f	typeref:typename:void
test_gitstr__2	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__2(void)$/;"	f	typeref:typename:void
test_gitstr__3	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__3(void)$/;"	f	typeref:typename:void
test_gitstr__4	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__4(void)$/;"	f	typeref:typename:void
test_gitstr__5	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__5(void)$/;"	f	typeref:typename:void
test_gitstr__6	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__6(void)$/;"	f	typeref:typename:void
test_gitstr__7	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__7(void)$/;"	f	typeref:typename:void
test_gitstr__8	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__8(void)$/;"	f	typeref:typename:void
test_gitstr__9	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__9(void)$/;"	f	typeref:typename:void
test_gitstr__avoid_printing_into_oom_buffer	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__avoid_printing_into_oom_buffer(void)$/;"	f	typeref:typename:void
test_gitstr__classify_with_utf8	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__classify_with_utf8(void)$/;"	f	typeref:typename:void
test_gitstr__decode_base64	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__decode_base64(void)$/;"	f	typeref:typename:void
test_gitstr__decode_base85	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__decode_base85(void)$/;"	f	typeref:typename:void
test_gitstr__decode_base85_fails_gracefully	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__decode_base85_fails_gracefully(void)$/;"	f	typeref:typename:void
test_gitstr__dont_grow_borrowed	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__dont_grow_borrowed(void)$/;"	f	typeref:typename:void
test_gitstr__dont_hit_infinite_loop_when_resizing	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__dont_hit_infinite_loop_when_resizing(void)$/;"	f	typeref:typename:void
test_gitstr__encode_base64	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__encode_base64(void)$/;"	f	typeref:typename:void
test_gitstr__encode_base85	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__encode_base85(void)$/;"	f	typeref:typename:void
test_gitstr__join3	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__join3(void)$/;"	f	typeref:typename:void
test_gitstr__lf_and_crlf_conversions	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__lf_and_crlf_conversions(void)$/;"	f	typeref:typename:void
test_gitstr__puts_escaped	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__puts_escaped(void)$/;"	f	typeref:typename:void
test_gitstr__rfind_variants	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__rfind_variants(void)$/;"	f	typeref:typename:void
test_gitstr__unescape	my_project/libgit2/tests/util/gitstr.c	/^void test_gitstr__unescape(void)$/;"	f	typeref:typename:void
test_grafts_basic__cleanup	my_project/libgit2/tests/libgit2/grafts/basic.c	/^void test_grafts_basic__cleanup(void)$/;"	f	typeref:typename:void
test_grafts_basic__graft_add	my_project/libgit2/tests/libgit2/grafts/basic.c	/^void test_grafts_basic__graft_add(void)$/;"	f	typeref:typename:void
test_grafts_basic__grafted_merge_revwalk	my_project/libgit2/tests/libgit2/grafts/basic.c	/^void test_grafts_basic__grafted_merge_revwalk(void)$/;"	f	typeref:typename:void
test_grafts_basic__grafted_objects	my_project/libgit2/tests/libgit2/grafts/basic.c	/^void test_grafts_basic__grafted_objects(void)$/;"	f	typeref:typename:void
test_grafts_basic__grafted_revwalk	my_project/libgit2/tests/libgit2/grafts/basic.c	/^void test_grafts_basic__grafted_revwalk(void)$/;"	f	typeref:typename:void
test_grafts_basic__initialize	my_project/libgit2/tests/libgit2/grafts/basic.c	/^void test_grafts_basic__initialize(void)$/;"	f	typeref:typename:void
test_grafts_parse__cleanup	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__cleanup(void)$/;"	f	typeref:typename:void
test_grafts_parse__initialize	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__initialize(void)$/;"	f	typeref:typename:void
test_grafts_parse__invalid_character_inbetween_fails	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__invalid_character_inbetween_fails(void)$/;"	f	typeref:typename:void
test_grafts_parse__invalid_oid_fails	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__invalid_oid_fails(void)$/;"	f	typeref:typename:void
test_grafts_parse__invalid_parent_fails	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__invalid_parent_fails(void)$/;"	f	typeref:typename:void
test_grafts_parse__multiple_oids	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__multiple_oids(void)$/;"	f	typeref:typename:void
test_grafts_parse__multiple_oids_with_multiple_parents	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__multiple_oids_with_multiple_parents(void)$/;"	f	typeref:typename:void
test_grafts_parse__multiple_spaces_fails	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__multiple_spaces_fails(void)$/;"	f	typeref:typename:void
test_grafts_parse__oid_with_multiple_parents	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__oid_with_multiple_parents(void)$/;"	f	typeref:typename:void
test_grafts_parse__oid_with_parent	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__oid_with_parent(void)$/;"	f	typeref:typename:void
test_grafts_parse__oid_with_parent_and_newline	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__oid_with_parent_and_newline(void)$/;"	f	typeref:typename:void
test_grafts_parse__same_oid	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__same_oid(void)$/;"	f	typeref:typename:void
test_grafts_parse__single_oid	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__single_oid(void)$/;"	f	typeref:typename:void
test_grafts_parse__single_oid_with_newline	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__single_oid_with_newline(void)$/;"	f	typeref:typename:void
test_grafts_parse__trailing_space_fails	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__trailing_space_fails(void)$/;"	f	typeref:typename:void
test_grafts_parse__truncated_oid_fails	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__truncated_oid_fails(void)$/;"	f	typeref:typename:void
test_grafts_parse__truncated_parent_fails	my_project/libgit2/tests/libgit2/grafts/parse.c	/^void test_grafts_parse__truncated_parent_fails(void)$/;"	f	typeref:typename:void
test_grafts_shallow__cache_clearing	my_project/libgit2/tests/libgit2/grafts/shallow.c	/^void test_grafts_shallow__cache_clearing(void)$/;"	f	typeref:typename:void
test_grafts_shallow__cleanup	my_project/libgit2/tests/libgit2/grafts/shallow.c	/^void test_grafts_shallow__cleanup(void)$/;"	f	typeref:typename:void
test_grafts_shallow__clears_errors	my_project/libgit2/tests/libgit2/grafts/shallow.c	/^void test_grafts_shallow__clears_errors(void)$/;"	f	typeref:typename:void
test_grafts_shallow__empty_shallow_file	my_project/libgit2/tests/libgit2/grafts/shallow.c	/^void test_grafts_shallow__empty_shallow_file(void)$/;"	f	typeref:typename:void
test_grafts_shallow__errors_on_borked	my_project/libgit2/tests/libgit2/grafts/shallow.c	/^void test_grafts_shallow__errors_on_borked(void)$/;"	f	typeref:typename:void
test_grafts_shallow__grafted_object	my_project/libgit2/tests/libgit2/grafts/shallow.c	/^void test_grafts_shallow__grafted_object(void)$/;"	f	typeref:typename:void
test_grafts_shallow__initialize	my_project/libgit2/tests/libgit2/grafts/shallow.c	/^void test_grafts_shallow__initialize(void)$/;"	f	typeref:typename:void
test_grafts_shallow__no_shallow_file	my_project/libgit2/tests/libgit2/grafts/shallow.c	/^void test_grafts_shallow__no_shallow_file(void)$/;"	f	typeref:typename:void
test_grafts_shallow__revwalk_behavior	my_project/libgit2/tests/libgit2/grafts/shallow.c	/^void test_grafts_shallow__revwalk_behavior(void)$/;"	f	typeref:typename:void
test_grafts_shallow__shallow_oids	my_project/libgit2/tests/libgit2/grafts/shallow.c	/^void test_grafts_shallow__shallow_oids(void)$/;"	f	typeref:typename:void
test_grafts_shallow__shallow_repo	my_project/libgit2/tests/libgit2/grafts/shallow.c	/^void test_grafts_shallow__shallow_repo(void)$/;"	f	typeref:typename:void
test_graph_ahead_behind__cleanup	my_project/libgit2/tests/libgit2/graph/ahead_behind.c	/^void test_graph_ahead_behind__cleanup(void)$/;"	f	typeref:typename:void
test_graph_ahead_behind__initialize	my_project/libgit2/tests/libgit2/graph/ahead_behind.c	/^void test_graph_ahead_behind__initialize(void)$/;"	f	typeref:typename:void
test_graph_ahead_behind__returns_correct_result	my_project/libgit2/tests/libgit2/graph/ahead_behind.c	/^void test_graph_ahead_behind__returns_correct_result(void)$/;"	f	typeref:typename:void
test_graph_commitgraph__parse	my_project/libgit2/tests/libgit2/graph/commitgraph.c	/^void test_graph_commitgraph__parse(void)$/;"	f	typeref:typename:void
test_graph_commitgraph__parse_octopus_merge	my_project/libgit2/tests/libgit2/graph/commitgraph.c	/^void test_graph_commitgraph__parse_octopus_merge(void)$/;"	f	typeref:typename:void
test_graph_commitgraph__validate	my_project/libgit2/tests/libgit2/graph/commitgraph.c	/^void test_graph_commitgraph__validate(void)$/;"	f	typeref:typename:void
test_graph_commitgraph__validate_corrupt	my_project/libgit2/tests/libgit2/graph/commitgraph.c	/^void test_graph_commitgraph__validate_corrupt(void)$/;"	f	typeref:typename:void
test_graph_commitgraph__writer	my_project/libgit2/tests/libgit2/graph/commitgraph.c	/^void test_graph_commitgraph__writer(void)$/;"	f	typeref:typename:void
test_graph_descendant_of__cleanup	my_project/libgit2/tests/libgit2/graph/descendant_of.c	/^void test_graph_descendant_of__cleanup(void)$/;"	f	typeref:typename:void
test_graph_descendant_of__initialize	my_project/libgit2/tests/libgit2/graph/descendant_of.c	/^void test_graph_descendant_of__initialize(void)$/;"	f	typeref:typename:void
test_graph_descendant_of__nopath	my_project/libgit2/tests/libgit2/graph/descendant_of.c	/^void test_graph_descendant_of__nopath(void)$/;"	f	typeref:typename:void
test_graph_descendant_of__returns_correct_result	my_project/libgit2/tests/libgit2/graph/descendant_of.c	/^void test_graph_descendant_of__returns_correct_result(void)$/;"	f	typeref:typename:void
test_graph_reachable_from_any__cleanup	my_project/libgit2/tests/libgit2/graph/reachable_from_any.c	/^void test_graph_reachable_from_any__cleanup(void)$/;"	f	typeref:typename:void
test_graph_reachable_from_any__exhaustive	my_project/libgit2/tests/libgit2/graph/reachable_from_any.c	/^void test_graph_reachable_from_any__exhaustive(void)$/;"	f	typeref:typename:void
test_graph_reachable_from_any__initialize	my_project/libgit2/tests/libgit2/graph/reachable_from_any.c	/^void test_graph_reachable_from_any__initialize(void)$/;"	f	typeref:typename:void
test_graph_reachable_from_any__returns_correct_result	my_project/libgit2/tests/libgit2/graph/reachable_from_any.c	/^void test_graph_reachable_from_any__returns_correct_result(void)$/;"	f	typeref:typename:void
test_hex__fromhex	my_project/libgit2/tests/util/hex.c	/^void test_hex__fromhex(void)$/;"	f	typeref:typename:void
test_hostname__matches_cert	my_project/libgit2/tests/util/hostname.c	/^void test_hostname__matches_cert(void)$/;"	f	typeref:typename:void
test_iconv__cleanup	my_project/libgit2/tests/util/iconv.c	/^void test_iconv__cleanup(void)$/;"	f	typeref:typename:void
test_iconv__decomposed_to_precomposed	my_project/libgit2/tests/util/iconv.c	/^void test_iconv__decomposed_to_precomposed(void)$/;"	f	typeref:typename:void
test_iconv__initialize	my_project/libgit2/tests/util/iconv.c	/^void test_iconv__initialize(void)$/;"	f	typeref:typename:void
test_iconv__precomposed_is_unmodified	my_project/libgit2/tests/util/iconv.c	/^void test_iconv__precomposed_is_unmodified(void)$/;"	f	typeref:typename:void
test_iconv__unchanged	my_project/libgit2/tests/util/iconv.c	/^void test_iconv__unchanged(void)$/;"	f	typeref:typename:void
test_id	my_project/libgit2/tests/libgit2/refs/revparse.c	/^static void test_id($/;"	f	typeref:typename:void	file:
test_id_inrepo	my_project/libgit2/tests/libgit2/refs/revparse.c	/^static void test_id_inrepo($/;"	f	typeref:typename:void	file:
test_ignore_path__allow_root	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__allow_root(void)$/;"	f	typeref:typename:void
test_ignore_path__case_insensitive_unignores_previous_rule	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__case_insensitive_unignores_previous_rule(void)$/;"	f	typeref:typename:void
test_ignore_path__case_sensitive_unignore_does_nothing	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__case_sensitive_unignore_does_nothing(void)$/;"	f	typeref:typename:void
test_ignore_path__cleanup	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__cleanup(void)$/;"	f	typeref:typename:void
test_ignore_path__dont_ignore_files_for_folder	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__dont_ignore_files_for_folder(void)$/;"	f	typeref:typename:void
test_ignore_path__escaped_character	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__escaped_character(void)$/;"	f	typeref:typename:void
test_ignore_path__escaped_comments	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__escaped_comments(void)$/;"	f	typeref:typename:void
test_ignore_path__escaped_glob	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__escaped_glob(void)$/;"	f	typeref:typename:void
test_ignore_path__escaped_newline	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__escaped_newline(void)$/;"	f	typeref:typename:void
test_ignore_path__escaped_slash	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__escaped_slash(void)$/;"	f	typeref:typename:void
test_ignore_path__escaped_space	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__escaped_space(void)$/;"	f	typeref:typename:void
test_ignore_path__escaped_trailing_spaces	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__escaped_trailing_spaces(void)$/;"	f	typeref:typename:void
test_ignore_path__expand_tilde_to_homedir	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__expand_tilde_to_homedir(void)$/;"	f	typeref:typename:void
test_ignore_path__full_paths	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__full_paths(void)$/;"	f	typeref:typename:void
test_ignore_path__gitignore_in_subdir	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__gitignore_in_subdir(void)$/;"	f	typeref:typename:void
test_ignore_path__globs_and_path_delimiters	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__globs_and_path_delimiters(void)$/;"	f	typeref:typename:void
test_ignore_path__globs_without_star	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__globs_without_star(void)$/;"	f	typeref:typename:void
test_ignore_path__honor_temporary_rules	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__honor_temporary_rules(void)$/;"	f	typeref:typename:void
test_ignore_path__ignore_dir	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__ignore_dir(void)$/;"	f	typeref:typename:void
test_ignore_path__ignore_dir_with_trailing_space	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__ignore_dir_with_trailing_space(void)$/;"	f	typeref:typename:void
test_ignore_path__ignore_root	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__ignore_root(void)$/;"	f	typeref:typename:void
test_ignore_path__ignore_space	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__ignore_space(void)$/;"	f	typeref:typename:void
test_ignore_path__ignored_subdirfiles_with_negations	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__ignored_subdirfiles_with_negations(void)$/;"	f	typeref:typename:void
test_ignore_path__ignored_subdirfiles_with_subdir_rule	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__ignored_subdirfiles_with_subdir_rule(void)$/;"	f	typeref:typename:void
test_ignore_path__initialize	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__initialize(void)$/;"	f	typeref:typename:void
test_ignore_path__intermittent_space	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__intermittent_space(void)$/;"	f	typeref:typename:void
test_ignore_path__invalid_pattern	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__invalid_pattern(void)$/;"	f	typeref:typename:void
test_ignore_path__leading_stars	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__leading_stars(void)$/;"	f	typeref:typename:void
test_ignore_path__more_starstar_cases	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__more_starstar_cases(void)$/;"	f	typeref:typename:void
test_ignore_path__negative_directory_rules_only_match_directories	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__negative_directory_rules_only_match_directories(void)$/;"	f	typeref:typename:void
test_ignore_path__negative_more_specific	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__negative_more_specific(void)$/;"	f	typeref:typename:void
test_ignore_path__negative_prefix_rule	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__negative_prefix_rule(void)$/;"	f	typeref:typename:void
test_ignore_path__skip_gitignore_directory	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__skip_gitignore_directory(void)$/;"	f	typeref:typename:void
test_ignore_path__subdirectory_gitignore	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__subdirectory_gitignore(void)$/;"	f	typeref:typename:void
test_ignore_path__symlink_to_outside	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__symlink_to_outside(void)$/;"	f	typeref:typename:void
test_ignore_path__test	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__test(void)$/;"	f	typeref:typename:void
test_ignore_path__trailing_space	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__trailing_space(void)$/;"	f	typeref:typename:void
test_ignore_path__unignore_dir_succeeds	my_project/libgit2/tests/libgit2/ignore/path.c	/^void test_ignore_path__unignore_dir_succeeds(void)$/;"	f	typeref:typename:void
test_ignore_status__0	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__0(void)$/;"	f	typeref:typename:void
test_ignore_status__1	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__1(void)$/;"	f	typeref:typename:void
test_ignore_status__add_internal_as_first_thing	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__add_internal_as_first_thing(void)$/;"	f	typeref:typename:void
test_ignore_status__adding_internal_ignores	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__adding_internal_ignores(void)$/;"	f	typeref:typename:void
test_ignore_status__automatically_ignore_bad_files	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__automatically_ignore_bad_files(void)$/;"	f	typeref:typename:void
test_ignore_status__cleanup	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__cleanup(void)$/;"	f	typeref:typename:void
test_ignore_status__contained_dir_with_matching_name	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__contained_dir_with_matching_name(void)$/;"	f	typeref:typename:void
test_ignore_status__deeper	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__deeper(void)$/;"	f	typeref:typename:void
test_ignore_status__do_not_unignore_basename_prefix	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__do_not_unignore_basename_prefix(void)$/;"	f	typeref:typename:void
test_ignore_status__empty_repo_with_gitignore_rewrite	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__empty_repo_with_gitignore_rewrite(void)$/;"	f	typeref:typename:void
test_ignore_status__filename_with_cr	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__filename_with_cr(void)$/;"	f	typeref:typename:void
test_ignore_status__filenames_with_special_prefixes_do_not_interfere_with_status_retrieval	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__filenames_with_special_prefixes_do_not_interfere_with_status_retrieval(/;"	f	typeref:typename:void
test_ignore_status__ignore_all_toplevel_dirs_include_files	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__ignore_all_toplevel_dirs_include_files(void)$/;"	f	typeref:typename:void
test_ignore_status__ignore_pattern_contains_space	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__ignore_pattern_contains_space(void)$/;"	f	typeref:typename:void
test_ignore_status__ignore_pattern_ignorecase	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__ignore_pattern_ignorecase(void)$/;"	f	typeref:typename:void
test_ignore_status__initialize	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__initialize(void)$/;"	f	typeref:typename:void
test_ignore_status__internal_ignores_inside_deep_paths	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__internal_ignores_inside_deep_paths(void)$/;"	f	typeref:typename:void
test_ignore_status__issue_1766_negated_ignores	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__issue_1766_negated_ignores(void)$/;"	f	typeref:typename:void
test_ignore_status__leading_slash_ignores	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__leading_slash_ignores(void)$/;"	f	typeref:typename:void
test_ignore_status__leading_spaces_are_significant	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__leading_spaces_are_significant(void)$/;"	f	typeref:typename:void
test_ignore_status__more_breakage	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__more_breakage(void)$/;"	f	typeref:typename:void
test_ignore_status__multiple_leading_slash	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__multiple_leading_slash(void)$/;"	f	typeref:typename:void
test_ignore_status__negate_exact_previous	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__negate_exact_previous(void)$/;"	f	typeref:typename:void
test_ignore_status__negate_starstar	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__negate_starstar(void)$/;"	f	typeref:typename:void
test_ignore_status__negative_directory_ignores	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__negative_directory_ignores(void)$/;"	f	typeref:typename:void
test_ignore_status__negative_ignores_in_slash_star	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__negative_ignores_in_slash_star(void)$/;"	f	typeref:typename:void
test_ignore_status__negative_ignores_inside_ignores	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__negative_ignores_inside_ignores(void)$/;"	f	typeref:typename:void
test_ignore_status__negative_ignores_without_trailing_slash_inside_ignores	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__negative_ignores_without_trailing_slash_inside_ignores(void)$/;"	f	typeref:typename:void
test_ignore_status__override_nested_wildcard_unignore	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__override_nested_wildcard_unignore(void)$/;"	f	typeref:typename:void
test_ignore_status__skips_bom	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__skips_bom(void)$/;"	f	typeref:typename:void
test_ignore_status__subdir_doesnt_match_above	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__subdir_doesnt_match_above(void)$/;"	f	typeref:typename:void
test_ignore_status__subdir_ignore_all_toplevel_dirs_include_files	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__subdir_ignore_all_toplevel_dirs_include_files(void)$/;"	f	typeref:typename:void
test_ignore_status__subdir_ignore_everything_except_certain_files	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__subdir_ignore_everything_except_certain_files(void)$/;"	f	typeref:typename:void
test_ignore_status__subdirectories	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__subdirectories(void)$/;"	f	typeref:typename:void
test_ignore_status__subdirectories_not_at_root	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__subdirectories_not_at_root(void)$/;"	f	typeref:typename:void
test_ignore_status__subdirectories_recursion	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__subdirectories_recursion(void)$/;"	f	typeref:typename:void
test_ignore_status__trailing_slash_star	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__trailing_slash_star(void)$/;"	f	typeref:typename:void
test_ignore_status__unignore_entry_in_ignored_dir	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__unignore_entry_in_ignored_dir(void)$/;"	f	typeref:typename:void
test_ignore_status__unignored_dir_with_ignored_contents	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__unignored_dir_with_ignored_contents(void)$/;"	f	typeref:typename:void
test_ignore_status__unignored_subdirs	my_project/libgit2/tests/libgit2/ignore/status.c	/^void test_ignore_status__unignored_subdirs(void)$/;"	f	typeref:typename:void
test_index_add__cleanup	my_project/libgit2/tests/libgit2/index/add.c	/^void test_index_add__cleanup(void)$/;"	f	typeref:typename:void
test_index_add__initialize	my_project/libgit2/tests/libgit2/index/add.c	/^void test_index_add__initialize(void)$/;"	f	typeref:typename:void
test_index_add__invalid_entries_succeeds_by_default	my_project/libgit2/tests/libgit2/index/add.c	/^void test_index_add__invalid_entries_succeeds_by_default(void)$/;"	f	typeref:typename:void
test_index_add__two_slash_prefixed	my_project/libgit2/tests/libgit2/index/add.c	/^void test_index_add__two_slash_prefixed(void)$/;"	f	typeref:typename:void
test_index_addall__adds_conflicts	my_project/libgit2/tests/libgit2/index/addall.c	/^void test_index_addall__adds_conflicts(void)$/;"	f	typeref:typename:void
test_index_addall__callback_filtering	my_project/libgit2/tests/libgit2/index/addall.c	/^void test_index_addall__callback_filtering(void)$/;"	f	typeref:typename:void
test_index_addall__cleanup	my_project/libgit2/tests/libgit2/index/addall.c	/^void test_index_addall__cleanup(void)$/;"	f	typeref:typename:void
test_index_addall__files_in_folders	my_project/libgit2/tests/libgit2/index/addall.c	/^void test_index_addall__files_in_folders(void)$/;"	f	typeref:typename:void
test_index_addall__force_adds_ignored_directories	my_project/libgit2/tests/libgit2/index/addall.c	/^void test_index_addall__force_adds_ignored_directories(void)$/;"	f	typeref:typename:void
test_index_addall__handles_ignored_files_in_directory	my_project/libgit2/tests/libgit2/index/addall.c	/^void test_index_addall__handles_ignored_files_in_directory(void)$/;"	f	typeref:typename:void
test_index_addall__hidden_files	my_project/libgit2/tests/libgit2/index/addall.c	/^void test_index_addall__hidden_files(void)$/;"	f	typeref:typename:void
test_index_addall__initialize	my_project/libgit2/tests/libgit2/index/addall.c	/^void test_index_addall__initialize(void)$/;"	f	typeref:typename:void
test_index_addall__removes_deleted_conflicted_files	my_project/libgit2/tests/libgit2/index/addall.c	/^void test_index_addall__removes_deleted_conflicted_files(void)$/;"	f	typeref:typename:void
test_index_addall__repo_lifecycle	my_project/libgit2/tests/libgit2/index/addall.c	/^void test_index_addall__repo_lifecycle(void)$/;"	f	typeref:typename:void
test_index_bypath__add_directory	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__add_directory(void)$/;"	f	typeref:typename:void
test_index_bypath__add_hidden	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__add_hidden(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_conflict_case	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__add_honors_conflict_case(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_conflict_mode	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__add_honors_conflict_mode(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_existing_case	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__add_honors_existing_case(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_existing_case_2	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__add_honors_existing_case_2(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_existing_case_3	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__add_honors_existing_case_3(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_existing_case_4	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__add_honors_existing_case_4(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_mode	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__add_honors_mode(void)$/;"	f	typeref:typename:void
test_index_bypath__add_honors_symlink	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__add_honors_symlink(void)$/;"	f	typeref:typename:void
test_index_bypath__add_keeps_existing_case	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__add_keeps_existing_case(void)$/;"	f	typeref:typename:void
test_index_bypath__add_submodule	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__add_submodule(void)$/;"	f	typeref:typename:void
test_index_bypath__add_submodule_unregistered	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__add_submodule_unregistered(void)$/;"	f	typeref:typename:void
test_index_bypath__cleanup	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__cleanup(void)$/;"	f	typeref:typename:void
test_index_bypath__initialize	my_project/libgit2/tests/libgit2/index/bypath.c	/^void test_index_bypath__initialize(void)$/;"	f	typeref:typename:void
test_index_cache__cleanup	my_project/libgit2/tests/libgit2/index/cache.c	/^void test_index_cache__cleanup(void)$/;"	f	typeref:typename:void
test_index_cache__initialize	my_project/libgit2/tests/libgit2/index/cache.c	/^void test_index_cache__initialize(void)$/;"	f	typeref:typename:void
test_index_cache__read_tree_children	my_project/libgit2/tests/libgit2/index/cache.c	/^void test_index_cache__read_tree_children(void)$/;"	f	typeref:typename:void
test_index_cache__read_tree_no_children	my_project/libgit2/tests/libgit2/index/cache.c	/^void test_index_cache__read_tree_no_children(void)$/;"	f	typeref:typename:void
test_index_cache__two_levels	my_project/libgit2/tests/libgit2/index/cache.c	/^void test_index_cache__two_levels(void)$/;"	f	typeref:typename:void
test_index_cache__write_extension_at_root	my_project/libgit2/tests/libgit2/index/cache.c	/^void test_index_cache__write_extension_at_root(void)$/;"	f	typeref:typename:void
test_index_cache__write_extension_invalidated_root	my_project/libgit2/tests/libgit2/index/cache.c	/^void test_index_cache__write_extension_invalidated_root(void)$/;"	f	typeref:typename:void
test_index_collision__add_blob_with_conflicting_dir	my_project/libgit2/tests/libgit2/index/collision.c	/^void test_index_collision__add_blob_with_conflicting_dir(void)$/;"	f	typeref:typename:void
test_index_collision__add_blob_with_conflicting_file	my_project/libgit2/tests/libgit2/index/collision.c	/^void test_index_collision__add_blob_with_conflicting_file(void)$/;"	f	typeref:typename:void
test_index_collision__add_with_highstage_1	my_project/libgit2/tests/libgit2/index/collision.c	/^void test_index_collision__add_with_highstage_1(void)$/;"	f	typeref:typename:void
test_index_collision__add_with_highstage_2	my_project/libgit2/tests/libgit2/index/collision.c	/^void test_index_collision__add_with_highstage_2(void)$/;"	f	typeref:typename:void
test_index_collision__cleanup	my_project/libgit2/tests/libgit2/index/collision.c	/^void test_index_collision__cleanup(void)$/;"	f	typeref:typename:void
test_index_collision__initialize	my_project/libgit2/tests/libgit2/index/collision.c	/^void test_index_collision__initialize(void)$/;"	f	typeref:typename:void
test_index_conflicts__add	my_project/libgit2/tests/libgit2/index/conflicts.c	/^void test_index_conflicts__add(void)$/;"	f	typeref:typename:void
test_index_conflicts__add_detects_invalid_filemode	my_project/libgit2/tests/libgit2/index/conflicts.c	/^void test_index_conflicts__add_detects_invalid_filemode(void)$/;"	f	typeref:typename:void
test_index_conflicts__add_fixes_incorrect_stage	my_project/libgit2/tests/libgit2/index/conflicts.c	/^void test_index_conflicts__add_fixes_incorrect_stage(void)$/;"	f	typeref:typename:void
test_index_conflicts__add_removes_stage_zero	my_project/libgit2/tests/libgit2/index/conflicts.c	/^void test_index_conflicts__add_removes_stage_zero(void)$/;"	f	typeref:typename:void
test_index_conflicts__case_matters	my_project/libgit2/tests/libgit2/index/conflicts.c	/^void test_index_conflicts__case_matters(void)$/;"	f	typeref:typename:void
test_index_conflicts__cleanup	my_project/libgit2/tests/libgit2/index/conflicts.c	/^void test_index_conflicts__cleanup(void)$/;"	f	typeref:typename:void
test_index_conflicts__get	my_project/libgit2/tests/libgit2/index/conflicts.c	/^void test_index_conflicts__get(void)$/;"	f	typeref:typename:void
test_index_conflicts__initialize	my_project/libgit2/tests/libgit2/index/conflicts.c	/^void test_index_conflicts__initialize(void)$/;"	f	typeref:typename:void
test_index_conflicts__iterate	my_project/libgit2/tests/libgit2/index/conflicts.c	/^void test_index_conflicts__iterate(void)$/;"	f	typeref:typename:void
test_index_conflicts__moved_to_reuc_on_add	my_project/libgit2/tests/libgit2/index/conflicts.c	/^void test_index_conflicts__moved_to_reuc_on_add(void)$/;"	f	typeref:typename:void
test_index_conflicts__moved_to_reuc_on_remove	my_project/libgit2/tests/libgit2/index/conflicts.c	/^void test_index_conflicts__moved_to_reuc_on_remove(void)$/;"	f	typeref:typename:void
test_index_conflicts__partial	my_project/libgit2/tests/libgit2/index/conflicts.c	/^void test_index_conflicts__partial(void)$/;"	f	typeref:typename:void
test_index_conflicts__remove	my_project/libgit2/tests/libgit2/index/conflicts.c	/^void test_index_conflicts__remove(void)$/;"	f	typeref:typename:void
test_index_conflicts__remove_all_conflicts	my_project/libgit2/tests/libgit2/index/conflicts.c	/^void test_index_conflicts__remove_all_conflicts(void)$/;"	f	typeref:typename:void
test_index_crlf__autocrlf_false_no_attrs	my_project/libgit2/tests/libgit2/index/crlf.c	/^void test_index_crlf__autocrlf_false_no_attrs(void)$/;"	f	typeref:typename:void
test_index_crlf__autocrlf_false_text_auto_attr	my_project/libgit2/tests/libgit2/index/crlf.c	/^void test_index_crlf__autocrlf_false_text_auto_attr(void)$/;"	f	typeref:typename:void
test_index_crlf__autocrlf_input_no_attrs	my_project/libgit2/tests/libgit2/index/crlf.c	/^void test_index_crlf__autocrlf_input_no_attrs(void)$/;"	f	typeref:typename:void
test_index_crlf__autocrlf_input_text_auto_attr	my_project/libgit2/tests/libgit2/index/crlf.c	/^void test_index_crlf__autocrlf_input_text_auto_attr(void)$/;"	f	typeref:typename:void
test_index_crlf__autocrlf_true_no_attrs	my_project/libgit2/tests/libgit2/index/crlf.c	/^void test_index_crlf__autocrlf_true_no_attrs(void)$/;"	f	typeref:typename:void
test_index_crlf__autocrlf_true_text_auto_attr	my_project/libgit2/tests/libgit2/index/crlf.c	/^void test_index_crlf__autocrlf_true_text_auto_attr(void)$/;"	f	typeref:typename:void
test_index_crlf__cleanup	my_project/libgit2/tests/libgit2/index/crlf.c	/^void test_index_crlf__cleanup(void)$/;"	f	typeref:typename:void
test_index_crlf__initialize	my_project/libgit2/tests/libgit2/index/crlf.c	/^void test_index_crlf__initialize(void)$/;"	f	typeref:typename:void
test_index_crlf__matches_core_git	my_project/libgit2/tests/libgit2/index/crlf.c	/^void test_index_crlf__matches_core_git(void)$/;"	f	typeref:typename:void
test_index_crlf__safecrlf_true_autocrlf_input_text__no_attr	my_project/libgit2/tests/libgit2/index/crlf.c	/^void test_index_crlf__safecrlf_true_autocrlf_input_text__no_attr(void)$/;"	f	typeref:typename:void
test_index_crlf__safecrlf_true_autocrlf_input_text_auto_attr	my_project/libgit2/tests/libgit2/index/crlf.c	/^void test_index_crlf__safecrlf_true_autocrlf_input_text_auto_attr(void)$/;"	f	typeref:typename:void
test_index_crlf__safecrlf_true_no_attrs	my_project/libgit2/tests/libgit2/index/crlf.c	/^void test_index_crlf__safecrlf_true_no_attrs(void)$/;"	f	typeref:typename:void
test_index_filemodes__cleanup	my_project/libgit2/tests/libgit2/index/filemodes.c	/^void test_index_filemodes__cleanup(void)$/;"	f	typeref:typename:void
test_index_filemodes__explicit	my_project/libgit2/tests/libgit2/index/filemodes.c	/^void test_index_filemodes__explicit(void)$/;"	f	typeref:typename:void
test_index_filemodes__frombuffer_requires_files	my_project/libgit2/tests/libgit2/index/filemodes.c	/^void test_index_filemodes__frombuffer_requires_files(void)$/;"	f	typeref:typename:void
test_index_filemodes__initialize	my_project/libgit2/tests/libgit2/index/filemodes.c	/^void test_index_filemodes__initialize(void)$/;"	f	typeref:typename:void
test_index_filemodes__invalid	my_project/libgit2/tests/libgit2/index/filemodes.c	/^void test_index_filemodes__invalid(void)$/;"	f	typeref:typename:void
test_index_filemodes__read	my_project/libgit2/tests/libgit2/index/filemodes.c	/^void test_index_filemodes__read(void)$/;"	f	typeref:typename:void
test_index_filemodes__trusted	my_project/libgit2/tests/libgit2/index/filemodes.c	/^void test_index_filemodes__trusted(void)$/;"	f	typeref:typename:void
test_index_filemodes__untrusted	my_project/libgit2/tests/libgit2/index/filemodes.c	/^void test_index_filemodes__untrusted(void)$/;"	f	typeref:typename:void
test_index_inmemory__can_create_an_inmemory_index	my_project/libgit2/tests/libgit2/index/inmemory.c	/^void test_index_inmemory__can_create_an_inmemory_index(void)$/;"	f	typeref:typename:void
test_index_inmemory__cannot_add_bypath_to_an_inmemory_index	my_project/libgit2/tests/libgit2/index/inmemory.c	/^void test_index_inmemory__cannot_add_bypath_to_an_inmemory_index(void)$/;"	f	typeref:typename:void
test_index_names__add	my_project/libgit2/tests/libgit2/index/names.c	/^void test_index_names__add(void)$/;"	f	typeref:typename:void
test_index_names__cleaned_on_checkout_head	my_project/libgit2/tests/libgit2/index/names.c	/^void test_index_names__cleaned_on_checkout_head(void)$/;"	f	typeref:typename:void
test_index_names__cleaned_on_checkout_tree	my_project/libgit2/tests/libgit2/index/names.c	/^void test_index_names__cleaned_on_checkout_tree(void)$/;"	f	typeref:typename:void
test_index_names__cleaned_on_reset_hard	my_project/libgit2/tests/libgit2/index/names.c	/^void test_index_names__cleaned_on_reset_hard(void)$/;"	f	typeref:typename:void
test_index_names__cleaned_on_reset_mixed	my_project/libgit2/tests/libgit2/index/names.c	/^void test_index_names__cleaned_on_reset_mixed(void)$/;"	f	typeref:typename:void
test_index_names__cleanup	my_project/libgit2/tests/libgit2/index/names.c	/^void test_index_names__cleanup(void)$/;"	f	typeref:typename:void
test_index_names__initialize	my_project/libgit2/tests/libgit2/index/names.c	/^void test_index_names__initialize(void)$/;"	f	typeref:typename:void
test_index_names__retained_on_checkout_index	my_project/libgit2/tests/libgit2/index/names.c	/^void test_index_names__retained_on_checkout_index(void)$/;"	f	typeref:typename:void
test_index_names__roundtrip	my_project/libgit2/tests/libgit2/index/names.c	/^void test_index_names__roundtrip(void)$/;"	f	typeref:typename:void
test_index_nsec__cleanup	my_project/libgit2/tests/libgit2/index/nsec.c	/^void test_index_nsec__cleanup(void)$/;"	f	typeref:typename:void
test_index_nsec__has_nanos	my_project/libgit2/tests/libgit2/index/nsec.c	/^void test_index_nsec__has_nanos(void)$/;"	f	typeref:typename:void
test_index_nsec__initialize	my_project/libgit2/tests/libgit2/index/nsec.c	/^void test_index_nsec__initialize(void)$/;"	f	typeref:typename:void
test_index_nsec__staging_maintains_other_nanos	my_project/libgit2/tests/libgit2/index/nsec.c	/^void test_index_nsec__staging_maintains_other_nanos(void)$/;"	f	typeref:typename:void
test_index_nsec__status_doesnt_clear_nsecs	my_project/libgit2/tests/libgit2/index/nsec.c	/^void test_index_nsec__status_doesnt_clear_nsecs(void)$/;"	f	typeref:typename:void
test_index_racy__adding_to_index_is_uptodate	my_project/libgit2/tests/libgit2/index/racy.c	/^void test_index_racy__adding_to_index_is_uptodate(void)$/;"	f	typeref:typename:void
test_index_racy__cleanup	my_project/libgit2/tests/libgit2/index/racy.c	/^void test_index_racy__cleanup(void)$/;"	f	typeref:typename:void
test_index_racy__detects_diff_of_change_in_identical_timestamp	my_project/libgit2/tests/libgit2/index/racy.c	/^void test_index_racy__detects_diff_of_change_in_identical_timestamp(void)$/;"	f	typeref:typename:void
test_index_racy__diff	my_project/libgit2/tests/libgit2/index/racy.c	/^void test_index_racy__diff(void)$/;"	f	typeref:typename:void
test_index_racy__initialize	my_project/libgit2/tests/libgit2/index/racy.c	/^void test_index_racy__initialize(void)$/;"	f	typeref:typename:void
test_index_racy__read_index_clears_uptodate_bit	my_project/libgit2/tests/libgit2/index/racy.c	/^void test_index_racy__read_index_clears_uptodate_bit(void)$/;"	f	typeref:typename:void
test_index_racy__read_index_smudges	my_project/libgit2/tests/libgit2/index/racy.c	/^void test_index_racy__read_index_smudges(void)$/;"	f	typeref:typename:void
test_index_racy__read_tree_clears_uptodate_bit	my_project/libgit2/tests/libgit2/index/racy.c	/^void test_index_racy__read_tree_clears_uptodate_bit(void)$/;"	f	typeref:typename:void
test_index_racy__reading_clears_uptodate_bit	my_project/libgit2/tests/libgit2/index/racy.c	/^void test_index_racy__reading_clears_uptodate_bit(void)$/;"	f	typeref:typename:void
test_index_racy__smudges_index_entry_on_save	my_project/libgit2/tests/libgit2/index/racy.c	/^void test_index_racy__smudges_index_entry_on_save(void)$/;"	f	typeref:typename:void
test_index_racy__write_index_just_after_file	my_project/libgit2/tests/libgit2/index/racy.c	/^void test_index_racy__write_index_just_after_file(void)$/;"	f	typeref:typename:void
test_index_read_index__cleanup	my_project/libgit2/tests/libgit2/index/read_index.c	/^void test_index_read_index__cleanup(void)$/;"	f	typeref:typename:void
test_index_read_index__handles_conflicts	my_project/libgit2/tests/libgit2/index/read_index.c	/^void test_index_read_index__handles_conflicts(void)$/;"	f	typeref:typename:void
test_index_read_index__initialize	my_project/libgit2/tests/libgit2/index/read_index.c	/^void test_index_read_index__initialize(void)$/;"	f	typeref:typename:void
test_index_read_index__maintains_stat_cache	my_project/libgit2/tests/libgit2/index/read_index.c	/^void test_index_read_index__maintains_stat_cache(void)$/;"	f	typeref:typename:void
test_index_read_index__produces_treesame_indexes	my_project/libgit2/tests/libgit2/index/read_index.c	/^void test_index_read_index__produces_treesame_indexes(void)$/;"	f	typeref:typename:void
test_index_read_index__read_and_writes	my_project/libgit2/tests/libgit2/index/read_index.c	/^void test_index_read_index__read_and_writes(void)$/;"	f	typeref:typename:void
test_index_read_tree__read_write_involution	my_project/libgit2/tests/libgit2/index/read_tree.c	/^void test_index_read_tree__read_write_involution(void)$/;"	f	typeref:typename:void
test_index_rename__casechanging	my_project/libgit2/tests/libgit2/index/rename.c	/^void test_index_rename__casechanging(void)$/;"	f	typeref:typename:void
test_index_rename__single_file	my_project/libgit2/tests/libgit2/index/rename.c	/^void test_index_rename__single_file(void)$/;"	f	typeref:typename:void
test_index_reuc__add	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__add(void)$/;"	f	typeref:typename:void
test_index_reuc__add_no_ancestor	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__add_no_ancestor(void)$/;"	f	typeref:typename:void
test_index_reuc__cleaned_on_checkout_head	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__cleaned_on_checkout_head(void)$/;"	f	typeref:typename:void
test_index_reuc__cleaned_on_checkout_tree	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__cleaned_on_checkout_tree(void)$/;"	f	typeref:typename:void
test_index_reuc__cleaned_on_reset_hard	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__cleaned_on_reset_hard(void)$/;"	f	typeref:typename:void
test_index_reuc__cleaned_on_reset_mixed	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__cleaned_on_reset_mixed(void)$/;"	f	typeref:typename:void
test_index_reuc__cleanup	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__cleanup(void)$/;"	f	typeref:typename:void
test_index_reuc__ignore_case	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__ignore_case(void)$/;"	f	typeref:typename:void
test_index_reuc__initialize	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__initialize(void)$/;"	f	typeref:typename:void
test_index_reuc__read_byindex	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__read_byindex(void)$/;"	f	typeref:typename:void
test_index_reuc__read_bypath	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__read_bypath(void)$/;"	f	typeref:typename:void
test_index_reuc__remove	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__remove(void)$/;"	f	typeref:typename:void
test_index_reuc__retained_on_checkout_index	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__retained_on_checkout_index(void)$/;"	f	typeref:typename:void
test_index_reuc__retained_on_reset_soft	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__retained_on_reset_soft(void)$/;"	f	typeref:typename:void
test_index_reuc__updates_existing	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__updates_existing(void)$/;"	f	typeref:typename:void
test_index_reuc__write	my_project/libgit2/tests/libgit2/index/reuc.c	/^void test_index_reuc__write(void)$/;"	f	typeref:typename:void
test_index_splitindex__cleanup	my_project/libgit2/tests/libgit2/index/splitindex.c	/^void test_index_splitindex__cleanup(void)$/;"	f	typeref:typename:void
test_index_splitindex__fail_on_open	my_project/libgit2/tests/libgit2/index/splitindex.c	/^void test_index_splitindex__fail_on_open(void)$/;"	f	typeref:typename:void
test_index_splitindex__initialize	my_project/libgit2/tests/libgit2/index/splitindex.c	/^void test_index_splitindex__initialize(void)$/;"	f	typeref:typename:void
test_index_stage__add_always_adds_stage_0	my_project/libgit2/tests/libgit2/index/stage.c	/^void test_index_stage__add_always_adds_stage_0(void)$/;"	f	typeref:typename:void
test_index_stage__cleanup	my_project/libgit2/tests/libgit2/index/stage.c	/^void test_index_stage__cleanup(void)$/;"	f	typeref:typename:void
test_index_stage__find_gets_first_stage	my_project/libgit2/tests/libgit2/index/stage.c	/^void test_index_stage__find_gets_first_stage(void)$/;"	f	typeref:typename:void
test_index_stage__initialize	my_project/libgit2/tests/libgit2/index/stage.c	/^void test_index_stage__initialize(void)$/;"	f	typeref:typename:void
test_index_tests256__add	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__add(void)$/;"	f	typeref:typename:void
test_index_tests256__add_bypath_to_a_bare_repository_returns_EBAREPO	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__add_bypath_to_a_bare_repository_returns_EBAREPO(void)$/;"	f	typeref:typename:void
test_index_tests256__add_frombuffer	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__add_frombuffer(void)$/;"	f	typeref:typename:void
test_index_tests256__add_frombuffer_reset_entry	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__add_frombuffer_reset_entry(void)$/;"	f	typeref:typename:void
test_index_tests256__can_disable_protectntfs	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__can_disable_protectntfs(void)$/;"	f	typeref:typename:void
test_index_tests256__can_iterate	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__can_iterate(void)$/;"	f	typeref:typename:void
test_index_tests256__can_lock_index	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__can_lock_index(void)$/;"	f	typeref:typename:void
test_index_tests256__can_modify_while_iterating	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__can_modify_while_iterating(void)$/;"	f	typeref:typename:void
test_index_tests256__cannot_add_invalid_filename	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__cannot_add_invalid_filename(void)$/;"	f	typeref:typename:void
test_index_tests256__cannot_add_protected_invalid_filename	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__cannot_add_protected_invalid_filename(void)$/;"	f	typeref:typename:void
test_index_tests256__change_icase_on_instance	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__change_icase_on_instance(void)$/;"	f	typeref:typename:void
test_index_tests256__cleanup	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__cleanup(void)$/;"	f	typeref:typename:void
test_index_tests256__default_test_index	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__default_test_index(void)$/;"	f	typeref:typename:void
test_index_tests256__dirty_and_clean	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__dirty_and_clean(void)$/;"	f	typeref:typename:void
test_index_tests256__dirty_fails_optionally	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__dirty_fails_optionally(void)$/;"	f	typeref:typename:void
test_index_tests256__elocked	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__elocked(void)$/;"	f	typeref:typename:void
test_index_tests256__empty_index	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__empty_index(void)$/;"	f	typeref:typename:void
test_index_tests256__find_in_empty	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__find_in_empty(void)$/;"	f	typeref:typename:void
test_index_tests256__find_in_existing	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__find_in_existing(void)$/;"	f	typeref:typename:void
test_index_tests256__find_prefix	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__find_prefix(void)$/;"	f	typeref:typename:void
test_index_tests256__honors_protect_filesystems	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__honors_protect_filesystems(void)$/;"	f	typeref:typename:void
test_index_tests256__initialize	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__initialize(void)$/;"	f	typeref:typename:void
test_index_tests256__preserves_case	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__preserves_case(void)$/;"	f	typeref:typename:void
test_index_tests256__protectntfs_on_by_default	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__protectntfs_on_by_default(void)$/;"	f	typeref:typename:void
test_index_tests256__reload_from_disk	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__reload_from_disk(void)$/;"	f	typeref:typename:void
test_index_tests256__reload_while_ignoring_case	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__reload_while_ignoring_case(void)$/;"	f	typeref:typename:void
test_index_tests256__remove_directory	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__remove_directory(void)$/;"	f	typeref:typename:void
test_index_tests256__remove_entry	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__remove_entry(void)$/;"	f	typeref:typename:void
test_index_tests256__sort1	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__sort1(void)$/;"	f	typeref:typename:void
test_index_tests256__write	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__write(void)$/;"	f	typeref:typename:void
test_index_tests256__write_invalid_filename	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__write_invalid_filename(void)$/;"	f	typeref:typename:void
test_index_tests256__write_tree_invalid_unowned_index	my_project/libgit2/tests/libgit2/index/tests256.c	/^void test_index_tests256__write_tree_invalid_unowned_index(void)$/;"	f	typeref:typename:void
test_index_tests__add	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__add(void)$/;"	f	typeref:typename:void
test_index_tests__add_bypath_to_a_bare_repository_returns_EBAREPO	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__add_bypath_to_a_bare_repository_returns_EBAREPO(void)$/;"	f	typeref:typename:void
test_index_tests__add_frombuffer	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__add_frombuffer(void)$/;"	f	typeref:typename:void
test_index_tests__add_frombuffer_reset_entry	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__add_frombuffer_reset_entry(void)$/;"	f	typeref:typename:void
test_index_tests__add_issue_1397	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__add_issue_1397(void)$/;"	f	typeref:typename:void
test_index_tests__can_disable_protectntfs	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__can_disable_protectntfs(void)$/;"	f	typeref:typename:void
test_index_tests__can_iterate	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__can_iterate(void)$/;"	f	typeref:typename:void
test_index_tests__can_lock_index	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__can_lock_index(void)$/;"	f	typeref:typename:void
test_index_tests__can_modify_while_iterating	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__can_modify_while_iterating(void)$/;"	f	typeref:typename:void
test_index_tests__cannot_add_invalid_filename	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__cannot_add_invalid_filename(void)$/;"	f	typeref:typename:void
test_index_tests__cannot_add_protected_invalid_filename	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__cannot_add_protected_invalid_filename(void)$/;"	f	typeref:typename:void
test_index_tests__change_icase_on_instance	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__change_icase_on_instance(void)$/;"	f	typeref:typename:void
test_index_tests__cleanup	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__cleanup(void)$/;"	f	typeref:typename:void
test_index_tests__corrupted_extension	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__corrupted_extension(void)$/;"	f	typeref:typename:void
test_index_tests__default_test_index	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__default_test_index(void)$/;"	f	typeref:typename:void
test_index_tests__dirty_and_clean	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__dirty_and_clean(void)$/;"	f	typeref:typename:void
test_index_tests__dirty_fails_optionally	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__dirty_fails_optionally(void)$/;"	f	typeref:typename:void
test_index_tests__elocked	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__elocked(void)$/;"	f	typeref:typename:void
test_index_tests__empty_index	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__empty_index(void)$/;"	f	typeref:typename:void
test_index_tests__find_in_empty	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__find_in_empty(void)$/;"	f	typeref:typename:void
test_index_tests__find_in_existing	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__find_in_existing(void)$/;"	f	typeref:typename:void
test_index_tests__find_prefix	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__find_prefix(void)$/;"	f	typeref:typename:void
test_index_tests__gitgit_index	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__gitgit_index(void)$/;"	f	typeref:typename:void
test_index_tests__honors_protect_filesystems	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__honors_protect_filesystems(void)$/;"	f	typeref:typename:void
test_index_tests__initialize	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__initialize(void)$/;"	f	typeref:typename:void
test_index_tests__preserves_case	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__preserves_case(void)$/;"	f	typeref:typename:void
test_index_tests__protectntfs_on_by_default	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__protectntfs_on_by_default(void)$/;"	f	typeref:typename:void
test_index_tests__reload_from_disk	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__reload_from_disk(void)$/;"	f	typeref:typename:void
test_index_tests__reload_while_ignoring_case	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__reload_while_ignoring_case(void)$/;"	f	typeref:typename:void
test_index_tests__remove_directory	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__remove_directory(void)$/;"	f	typeref:typename:void
test_index_tests__remove_entry	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__remove_entry(void)$/;"	f	typeref:typename:void
test_index_tests__sort0	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__sort0(void)$/;"	f	typeref:typename:void
test_index_tests__sort1	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__sort1(void)$/;"	f	typeref:typename:void
test_index_tests__write	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__write(void)$/;"	f	typeref:typename:void
test_index_tests__write_invalid_filename	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__write_invalid_filename(void)$/;"	f	typeref:typename:void
test_index_tests__write_tree_invalid_unowned_index	my_project/libgit2/tests/libgit2/index/tests.c	/^void test_index_tests__write_tree_invalid_unowned_index(void)$/;"	f	typeref:typename:void
test_index_version__can_read_v4	my_project/libgit2/tests/libgit2/index/version.c	/^void test_index_version__can_read_v4(void)$/;"	f	typeref:typename:void
test_index_version__can_write_v4	my_project/libgit2/tests/libgit2/index/version.c	/^void test_index_version__can_write_v4(void)$/;"	f	typeref:typename:void
test_index_version__cleanup	my_project/libgit2/tests/libgit2/index/version.c	/^void test_index_version__cleanup(void)$/;"	f	typeref:typename:void
test_index_version__v4_uses_path_compression	my_project/libgit2/tests/libgit2/index/version.c	/^void test_index_version__v4_uses_path_compression(void)$/;"	f	typeref:typename:void
test_init__concurrent_init_succeeds	my_project/libgit2/tests/util/init.c	/^void test_init__concurrent_init_succeeds(void)$/;"	f	typeref:typename:void
test_init__reinit_succeeds	my_project/libgit2/tests/util/init.c	/^void test_init__reinit_succeeds(void)$/;"	f	typeref:typename:void
test_init__returns_count	my_project/libgit2/tests/util/init.c	/^void test_init__returns_count(void)$/;"	f	typeref:typename:void
test_inserting_submodule	my_project/libgit2/tests/libgit2/object/tree/write.c	/^static void test_inserting_submodule(void)$/;"	f	typeref:typename:void	file:
test_integer__multiply_int64_edge_cases	my_project/libgit2/tests/util/integer.c	/^void test_integer__multiply_int64_edge_cases(void)$/;"	f	typeref:typename:void
test_integer__multiply_int64_no_overflow	my_project/libgit2/tests/util/integer.c	/^void test_integer__multiply_int64_no_overflow(void)$/;"	f	typeref:typename:void
test_integer__multiply_int64_overflow	my_project/libgit2/tests/util/integer.c	/^void test_integer__multiply_int64_overflow(void)$/;"	f	typeref:typename:void
test_invalid_name	my_project/libgit2/tests/libgit2/refs/create.c	/^static void test_invalid_name(const char *name)$/;"	f	typeref:typename:void	file:
test_invalid_objects	my_project/libgit2/tests/libgit2/object/tree/write.c	/^static void test_invalid_objects(bool should_allow_invalid)$/;"	f	typeref:typename:void	file:
test_invalid_revspec	my_project/libgit2/tests/libgit2/refs/revparse.c	/^static void test_invalid_revspec(const char* invalid_spec)$/;"	f	typeref:typename:void	file:
test_iterator	my_project/libgit2/tests/libgit2/rebase/iterator.c	/^static void test_iterator(bool inmemory)$/;"	f	typeref:typename:void	file:
test_iterator_index__0	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__0(void)$/;"	f	typeref:typename:void
test_iterator_index__1	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__1(void)$/;"	f	typeref:typename:void
test_iterator_index__advance_into	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__advance_into(void)$/;"	f	typeref:typename:void
test_iterator_index__advance_into_and_over	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__advance_into_and_over(void)$/;"	f	typeref:typename:void
test_iterator_index__advance_over	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__advance_over(void)$/;"	f	typeref:typename:void
test_iterator_index__case_folding	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__case_folding(void)$/;"	f	typeref:typename:void
test_iterator_index__cleanup	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__cleanup(void)$/;"	f	typeref:typename:void
test_iterator_index__icase_0	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__icase_0(void)$/;"	f	typeref:typename:void
test_iterator_index__icase_1	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__icase_1(void)$/;"	f	typeref:typename:void
test_iterator_index__include_conflicts	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__include_conflicts(void)$/;"	f	typeref:typename:void
test_iterator_index__initialize	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__initialize(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__pathlist(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_1	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__pathlist_1(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_2	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__pathlist_2(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_for_deeply_nested_item	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__pathlist_for_deeply_nested_item(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_four	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__pathlist_four(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_icase	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__pathlist_icase(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_with_directory	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__pathlist_with_directory(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_with_dirs	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__pathlist_with_dirs(void)$/;"	f	typeref:typename:void
test_iterator_index__pathlist_with_dirs_include_trees	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__pathlist_with_dirs_include_trees(void)$/;"	f	typeref:typename:void
test_iterator_index__range	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__range(void)$/;"	f	typeref:typename:void
test_iterator_index__range_empty_0	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__range_empty_0(void)$/;"	f	typeref:typename:void
test_iterator_index__range_empty_1	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__range_empty_1(void)$/;"	f	typeref:typename:void
test_iterator_index__range_empty_2	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__range_empty_2(void)$/;"	f	typeref:typename:void
test_iterator_index__range_icase	my_project/libgit2/tests/libgit2/iterator/index.c	/^void test_iterator_index__range_icase(void)$/;"	f	typeref:typename:void
test_iterator_tree__0	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__0(void)$/;"	f	typeref:typename:void
test_iterator_tree__1	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__1(void)$/;"	f	typeref:typename:void
test_iterator_tree__2	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__2(void)$/;"	f	typeref:typename:void
test_iterator_tree__3	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__3(void)$/;"	f	typeref:typename:void
test_iterator_tree__4	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__4(void)$/;"	f	typeref:typename:void
test_iterator_tree__4_ranged	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__4_ranged(void)$/;"	f	typeref:typename:void
test_iterator_tree__case_conflicts_0	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__case_conflicts_0(void)$/;"	f	typeref:typename:void
test_iterator_tree__case_conflicts_1	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__case_conflicts_1(void)$/;"	f	typeref:typename:void
test_iterator_tree__case_conflicts_2	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__case_conflicts_2(void)$/;"	f	typeref:typename:void
test_iterator_tree__cleanup	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__cleanup(void)$/;"	f	typeref:typename:void
test_iterator_tree__icase_0	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__icase_0(void)$/;"	f	typeref:typename:void
test_iterator_tree__icase_1	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__icase_1(void)$/;"	f	typeref:typename:void
test_iterator_tree__icase_2	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__icase_2(void)$/;"	f	typeref:typename:void
test_iterator_tree__initialize	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__initialize(void)$/;"	f	typeref:typename:void
test_iterator_tree__pathlist	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__pathlist(void)$/;"	f	typeref:typename:void
test_iterator_tree__pathlist_icase	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__pathlist_icase(void)$/;"	f	typeref:typename:void
test_iterator_tree__pathlist_no_match	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__pathlist_no_match(void)$/;"	f	typeref:typename:void
test_iterator_tree__pathlist_with_directory	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__pathlist_with_directory(void)$/;"	f	typeref:typename:void
test_iterator_tree__pathlist_with_directory_include_tree_nodes	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__pathlist_with_directory_include_tree_nodes(void)$/;"	f	typeref:typename:void
test_iterator_tree__range_empty_0	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__range_empty_0(void)$/;"	f	typeref:typename:void
test_iterator_tree__range_empty_1	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__range_empty_1(void)$/;"	f	typeref:typename:void
test_iterator_tree__range_empty_2	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__range_empty_2(void)$/;"	f	typeref:typename:void
test_iterator_tree__range_icase	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__range_icase(void)$/;"	f	typeref:typename:void
test_iterator_tree__ranged_0	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__ranged_0(void)$/;"	f	typeref:typename:void
test_iterator_tree__ranged_1	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__ranged_1(void)$/;"	f	typeref:typename:void
test_iterator_tree__special_functions	my_project/libgit2/tests/libgit2/iterator/tree.c	/^void test_iterator_tree__special_functions(void)$/;"	f	typeref:typename:void
test_iterator_workdir__0	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__0(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__1(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_0	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_0(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_1	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_1(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_3	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_3(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_4	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_4(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_5	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_5(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_5_1_ranged_empty_0	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_5_1_ranged_empty_0(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_empty_1	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_empty_1(void)$/;"	f	typeref:typename:void
test_iterator_workdir__1_ranged_empty_2	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__1_ranged_empty_2(void)$/;"	f	typeref:typename:void
test_iterator_workdir__advance_into	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__advance_into(void)$/;"	f	typeref:typename:void
test_iterator_workdir__advance_over	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__advance_over(void)$/;"	f	typeref:typename:void
test_iterator_workdir__advance_over_with_pathlist	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__advance_over_with_pathlist(void)$/;"	f	typeref:typename:void
test_iterator_workdir__bounded_submodules	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__bounded_submodules(void)$/;"	f	typeref:typename:void
test_iterator_workdir__builtin_ignores	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__builtin_ignores(void)$/;"	f	typeref:typename:void
test_iterator_workdir__cleanup	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__cleanup(void)$/;"	f	typeref:typename:void
test_iterator_workdir__depth	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__depth(void)$/;"	f	typeref:typename:void
test_iterator_workdir__filesystem	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__filesystem(void)$/;"	f	typeref:typename:void
test_iterator_workdir__filesystem2	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__filesystem2(void)$/;"	f	typeref:typename:void
test_iterator_workdir__filesystem_gunk	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__filesystem_gunk(void)$/;"	f	typeref:typename:void
test_iterator_workdir__handles_icase_range	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__handles_icase_range(void)$/;"	f	typeref:typename:void
test_iterator_workdir__hash_when_requested	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__hash_when_requested(void)$/;"	f	typeref:typename:void
test_iterator_workdir__icase	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__icase(void)$/;"	f	typeref:typename:void
test_iterator_workdir__icase_starts_and_ends	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__icase_starts_and_ends(void)$/;"	f	typeref:typename:void
test_iterator_workdir__initialize	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__initialize(void)$/;"	f	typeref:typename:void
test_iterator_workdir__pathlist	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__pathlist(void)$/;"	f	typeref:typename:void
test_iterator_workdir__pathlist_for_deeply_nested_item	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__pathlist_for_deeply_nested_item(void)$/;"	f	typeref:typename:void
test_iterator_workdir__pathlist_with_directory	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__pathlist_with_directory(void)$/;"	f	typeref:typename:void
test_iterator_workdir__pathlist_with_directory_include_trees	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__pathlist_with_directory_include_trees(void)$/;"	f	typeref:typename:void
test_iterator_workdir__pathlist_with_dirs	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__pathlist_with_dirs(void)$/;"	f	typeref:typename:void
test_iterator_workdir__skips_fifos_and_special_files	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__skips_fifos_and_special_files(void)$/;"	f	typeref:typename:void
test_iterator_workdir__skips_unreadable_dirs	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^void test_iterator_workdir__skips_unreadable_dirs(void)$/;"	f	typeref:typename:void
test_join_unrooted	my_project/libgit2/tests/util/path/core.c	/^static void test_join_unrooted($/;"	f	typeref:typename:void	file:
test_link__cleanup	my_project/libgit2/tests/util/link.c	/^void test_link__cleanup(void)$/;"	f	typeref:typename:void
test_link__lstat_dangling_junction	my_project/libgit2/tests/util/link.c	/^void test_link__lstat_dangling_junction(void)$/;"	f	typeref:typename:void
test_link__lstat_dangling_symlink	my_project/libgit2/tests/util/link.c	/^void test_link__lstat_dangling_symlink(void)$/;"	f	typeref:typename:void
test_link__lstat_dangling_symlink_directory	my_project/libgit2/tests/util/link.c	/^void test_link__lstat_dangling_symlink_directory(void)$/;"	f	typeref:typename:void
test_link__lstat_hardlink	my_project/libgit2/tests/util/link.c	/^void test_link__lstat_hardlink(void)$/;"	f	typeref:typename:void
test_link__lstat_junction	my_project/libgit2/tests/util/link.c	/^void test_link__lstat_junction(void)$/;"	f	typeref:typename:void
test_link__lstat_regular_file	my_project/libgit2/tests/util/link.c	/^void test_link__lstat_regular_file(void)$/;"	f	typeref:typename:void
test_link__lstat_reparse_point	my_project/libgit2/tests/util/link.c	/^void test_link__lstat_reparse_point(void)$/;"	f	typeref:typename:void
test_link__lstat_symlink	my_project/libgit2/tests/util/link.c	/^void test_link__lstat_symlink(void)$/;"	f	typeref:typename:void
test_link__lstat_symlink_directory	my_project/libgit2/tests/util/link.c	/^void test_link__lstat_symlink_directory(void)$/;"	f	typeref:typename:void
test_link__readlink_dangling	my_project/libgit2/tests/util/link.c	/^void test_link__readlink_dangling(void)$/;"	f	typeref:typename:void
test_link__readlink_multiple	my_project/libgit2/tests/util/link.c	/^void test_link__readlink_multiple(void)$/;"	f	typeref:typename:void
test_link__readlink_nonexistent_file	my_project/libgit2/tests/util/link.c	/^void test_link__readlink_nonexistent_file(void)$/;"	f	typeref:typename:void
test_link__readlink_normal_file	my_project/libgit2/tests/util/link.c	/^void test_link__readlink_normal_file(void)$/;"	f	typeref:typename:void
test_link__readlink_symlink	my_project/libgit2/tests/util/link.c	/^void test_link__readlink_symlink(void)$/;"	f	typeref:typename:void
test_link__stat_dangling_junction	my_project/libgit2/tests/util/link.c	/^void test_link__stat_dangling_junction(void)$/;"	f	typeref:typename:void
test_link__stat_dangling_symlink	my_project/libgit2/tests/util/link.c	/^void test_link__stat_dangling_symlink(void)$/;"	f	typeref:typename:void
test_link__stat_dangling_symlink_directory	my_project/libgit2/tests/util/link.c	/^void test_link__stat_dangling_symlink_directory(void)$/;"	f	typeref:typename:void
test_link__stat_hardlink	my_project/libgit2/tests/util/link.c	/^void test_link__stat_hardlink(void)$/;"	f	typeref:typename:void
test_link__stat_junction	my_project/libgit2/tests/util/link.c	/^void test_link__stat_junction(void)$/;"	f	typeref:typename:void
test_link__stat_regular_file	my_project/libgit2/tests/util/link.c	/^void test_link__stat_regular_file(void)$/;"	f	typeref:typename:void
test_link__stat_reparse_point	my_project/libgit2/tests/util/link.c	/^void test_link__stat_reparse_point(void)$/;"	f	typeref:typename:void
test_link__stat_symlink	my_project/libgit2/tests/util/link.c	/^void test_link__stat_symlink(void)$/;"	f	typeref:typename:void
test_link__stat_symlink_chain	my_project/libgit2/tests/util/link.c	/^void test_link__stat_symlink_chain(void)$/;"	f	typeref:typename:void
test_link__stat_symlink_directory	my_project/libgit2/tests/util/link.c	/^void test_link__stat_symlink_directory(void)$/;"	f	typeref:typename:void
test_mailmap_basic__cleanup	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^void test_mailmap_basic__cleanup(void)$/;"	f	typeref:typename:void
test_mailmap_basic__empty_email_query	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^void test_mailmap_basic__empty_email_query(void)$/;"	f	typeref:typename:void
test_mailmap_basic__entry	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^void test_mailmap_basic__entry(void)$/;"	f	typeref:typename:void
test_mailmap_basic__initialize	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^void test_mailmap_basic__initialize(void)$/;"	f	typeref:typename:void
test_mailmap_basic__lookup	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^void test_mailmap_basic__lookup(void)$/;"	f	typeref:typename:void
test_mailmap_basic__lookup_not_found	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^void test_mailmap_basic__lookup_not_found(void)$/;"	f	typeref:typename:void
test_mailmap_basic__name_matching	my_project/libgit2/tests/libgit2/mailmap/basic.c	/^void test_mailmap_basic__name_matching(void)$/;"	f	typeref:typename:void
test_mailmap_blame__cleanup	my_project/libgit2/tests/libgit2/mailmap/blame.c	/^void test_mailmap_blame__cleanup(void)$/;"	f	typeref:typename:void
test_mailmap_blame__hunks	my_project/libgit2/tests/libgit2/mailmap/blame.c	/^void test_mailmap_blame__hunks(void)$/;"	f	typeref:typename:void
test_mailmap_blame__hunks_no_mailmap	my_project/libgit2/tests/libgit2/mailmap/blame.c	/^void test_mailmap_blame__hunks_no_mailmap(void)$/;"	f	typeref:typename:void
test_mailmap_blame__initialize	my_project/libgit2/tests/libgit2/mailmap/blame.c	/^void test_mailmap_blame__initialize(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__bare_blob_config	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^void test_mailmap_parsing__bare_blob_config(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__blob_config	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^void test_mailmap_parsing__blob_config(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__cleanup	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^void test_mailmap_parsing__cleanup(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__file_config	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^void test_mailmap_parsing__file_config(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__frombare	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^void test_mailmap_parsing__frombare(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__fromrepo	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^void test_mailmap_parsing__fromrepo(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__initialize	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^void test_mailmap_parsing__initialize(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__string	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^void test_mailmap_parsing__string(void)$/;"	f	typeref:typename:void
test_mailmap_parsing__windows_string	my_project/libgit2/tests/libgit2/mailmap/parsing.c	/^void test_mailmap_parsing__windows_string(void)$/;"	f	typeref:typename:void
test_make_relative	my_project/libgit2/tests/util/path/core.c	/^static void test_make_relative($/;"	f	typeref:typename:void	file:
test_memmem__absent	my_project/libgit2/tests/util/memmem.c	/^void test_memmem__absent(void)$/;"	f	typeref:typename:void
test_memmem__edgecases	my_project/libgit2/tests/util/memmem.c	/^void test_memmem__edgecases(void)$/;"	f	typeref:typename:void
test_memmem__found	my_project/libgit2/tests/util/memmem.c	/^void test_memmem__found(void)$/;"	f	typeref:typename:void
test_merge_analysis__between_noff_refs	my_project/libgit2/tests/libgit2/merge/analysis.c	/^void test_merge_analysis__between_noff_refs(void)$/;"	f	typeref:typename:void
test_merge_analysis__between_uptodate_refs	my_project/libgit2/tests/libgit2/merge/analysis.c	/^void test_merge_analysis__between_uptodate_refs(void)$/;"	f	typeref:typename:void
test_merge_analysis__cleanup	my_project/libgit2/tests/libgit2/merge/analysis.c	/^void test_merge_analysis__cleanup(void)$/;"	f	typeref:typename:void
test_merge_analysis__fastforward	my_project/libgit2/tests/libgit2/merge/analysis.c	/^void test_merge_analysis__fastforward(void)$/;"	f	typeref:typename:void
test_merge_analysis__fastforward_with_config_noff	my_project/libgit2/tests/libgit2/merge/analysis.c	/^void test_merge_analysis__fastforward_with_config_noff(void)$/;"	f	typeref:typename:void
test_merge_analysis__initialize_with_bare_repository	my_project/libgit2/tests/libgit2/merge/analysis.c	/^void test_merge_analysis__initialize_with_bare_repository(void)$/;"	f	typeref:typename:void
test_merge_analysis__initialize_with_nonbare_repository	my_project/libgit2/tests/libgit2/merge/analysis.c	/^void test_merge_analysis__initialize_with_nonbare_repository(void)$/;"	f	typeref:typename:void
test_merge_analysis__no_fastforward	my_project/libgit2/tests/libgit2/merge/analysis.c	/^void test_merge_analysis__no_fastforward(void)$/;"	f	typeref:typename:void
test_merge_analysis__no_fastforward_with_config_ffonly	my_project/libgit2/tests/libgit2/merge/analysis.c	/^void test_merge_analysis__no_fastforward_with_config_ffonly(void)$/;"	f	typeref:typename:void
test_merge_analysis__unborn	my_project/libgit2/tests/libgit2/merge/analysis.c	/^void test_merge_analysis__unborn(void)$/;"	f	typeref:typename:void
test_merge_analysis__uptodate	my_project/libgit2/tests/libgit2/merge/analysis.c	/^void test_merge_analysis__uptodate(void)$/;"	f	typeref:typename:void
test_merge_analysis__uptodate_merging_prev_commit	my_project/libgit2/tests/libgit2/merge/analysis.c	/^void test_merge_analysis__uptodate_merging_prev_commit(void)$/;"	f	typeref:typename:void
test_merge_annotated_commit__cleanup	my_project/libgit2/tests/libgit2/merge/annotated_commit.c	/^void test_merge_annotated_commit__cleanup(void)$/;"	f	typeref:typename:void
test_merge_annotated_commit__initialize	my_project/libgit2/tests/libgit2/merge/annotated_commit.c	/^void test_merge_annotated_commit__initialize(void)$/;"	f	typeref:typename:void
test_merge_annotated_commit__lookup_annotated_tag	my_project/libgit2/tests/libgit2/merge/annotated_commit.c	/^void test_merge_annotated_commit__lookup_annotated_tag(void)$/;"	f	typeref:typename:void
test_merge_driver	my_project/libgit2/tests/libgit2/merge/driver.c	/^struct test_merge_driver {$/;"	s	file:
test_merge_driver__apply_can_conflict	my_project/libgit2/tests/libgit2/merge/driver.c	/^void test_merge_driver__apply_can_conflict(void)$/;"	f	typeref:typename:void
test_merge_driver__apply_can_defer	my_project/libgit2/tests/libgit2/merge/driver.c	/^void test_merge_driver__apply_can_defer(void)$/;"	f	typeref:typename:void
test_merge_driver__cleanup	my_project/libgit2/tests/libgit2/merge/driver.c	/^void test_merge_driver__cleanup(void)$/;"	f	typeref:typename:void
test_merge_driver__custom	my_project/libgit2/tests/libgit2/merge/driver.c	/^void test_merge_driver__custom(void)$/;"	f	typeref:typename:void
test_merge_driver__default_can_be_specified	my_project/libgit2/tests/libgit2/merge/driver.c	/^void test_merge_driver__default_can_be_specified(void)$/;"	f	typeref:typename:void
test_merge_driver__honors_builtin_mergedefault	my_project/libgit2/tests/libgit2/merge/driver.c	/^void test_merge_driver__honors_builtin_mergedefault(void)$/;"	f	typeref:typename:void
test_merge_driver__honors_custom_mergedefault	my_project/libgit2/tests/libgit2/merge/driver.c	/^void test_merge_driver__honors_custom_mergedefault(void)$/;"	f	typeref:typename:void
test_merge_driver__initialize	my_project/libgit2/tests/libgit2/merge/driver.c	/^void test_merge_driver__initialize(void)$/;"	f	typeref:typename:void
test_merge_driver__mergedefault_deferring_falls_back_to_text	my_project/libgit2/tests/libgit2/merge/driver.c	/^void test_merge_driver__mergedefault_deferring_falls_back_to_text(void)$/;"	f	typeref:typename:void
test_merge_driver__not_configured_driver_falls_back	my_project/libgit2/tests/libgit2/merge/driver.c	/^void test_merge_driver__not_configured_driver_falls_back(void)$/;"	f	typeref:typename:void
test_merge_driver__set_forces_text	my_project/libgit2/tests/libgit2/merge/driver.c	/^void test_merge_driver__set_forces_text(void)$/;"	f	typeref:typename:void
test_merge_driver__shutdown_is_called	my_project/libgit2/tests/libgit2/merge/driver.c	/^void test_merge_driver__shutdown_is_called(void)$/;"	f	typeref:typename:void
test_merge_driver__unset_forces_binary	my_project/libgit2/tests/libgit2/merge/driver.c	/^void test_merge_driver__unset_forces_binary(void)$/;"	f	typeref:typename:void
test_merge_driver__wildcard	my_project/libgit2/tests/libgit2/merge/driver.c	/^void test_merge_driver__wildcard(void)$/;"	f	typeref:typename:void
test_merge_files__automerge_from_bufs	my_project/libgit2/tests/libgit2/merge/files.c	/^void test_merge_files__automerge_from_bufs(void)$/;"	f	typeref:typename:void
test_merge_files__automerge_from_index	my_project/libgit2/tests/libgit2/merge/files.c	/^void test_merge_files__automerge_from_index(void)$/;"	f	typeref:typename:void
test_merge_files__automerge_use_best_path_and_mode	my_project/libgit2/tests/libgit2/merge/files.c	/^void test_merge_files__automerge_use_best_path_and_mode(void)$/;"	f	typeref:typename:void
test_merge_files__automerge_whitespace_change	my_project/libgit2/tests/libgit2/merge/files.c	/^void test_merge_files__automerge_whitespace_change(void)$/;"	f	typeref:typename:void
test_merge_files__automerge_whitespace_eol	my_project/libgit2/tests/libgit2/merge/files.c	/^void test_merge_files__automerge_whitespace_eol(void)$/;"	f	typeref:typename:void
test_merge_files__cleanup	my_project/libgit2/tests/libgit2/merge/files.c	/^void test_merge_files__cleanup(void)$/;"	f	typeref:typename:void
test_merge_files__conflict_from_bufs	my_project/libgit2/tests/libgit2/merge/files.c	/^void test_merge_files__conflict_from_bufs(void)$/;"	f	typeref:typename:void
test_merge_files__conflicts_in_zdiff3	my_project/libgit2/tests/libgit2/merge/files.c	/^void test_merge_files__conflicts_in_zdiff3(void)$/;"	f	typeref:typename:void
test_merge_files__crlf_conflict_markers_for_crlf_files	my_project/libgit2/tests/libgit2/merge/files.c	/^void test_merge_files__crlf_conflict_markers_for_crlf_files(void)$/;"	f	typeref:typename:void
test_merge_files__doesnt_add_newline	my_project/libgit2/tests/libgit2/merge/files.c	/^void test_merge_files__doesnt_add_newline(void)$/;"	f	typeref:typename:void
test_merge_files__handles_binaries_when_favored	my_project/libgit2/tests/libgit2/merge/files.c	/^void test_merge_files__handles_binaries_when_favored(void)$/;"	f	typeref:typename:void
test_merge_files__initialize	my_project/libgit2/tests/libgit2/merge/files.c	/^void test_merge_files__initialize(void)$/;"	f	typeref:typename:void
test_merge_files__skips_binaries	my_project/libgit2/tests/libgit2/merge/files.c	/^void test_merge_files__skips_binaries(void)$/;"	f	typeref:typename:void
test_merge_files__skips_large_files	my_project/libgit2/tests/libgit2/merge/files.c	/^void test_merge_files__skips_large_files(void)$/;"	f	typeref:typename:void
test_merge_trees_automerge__automerge	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^void test_merge_trees_automerge__automerge(void)$/;"	f	typeref:typename:void
test_merge_trees_automerge__cleanup	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^void test_merge_trees_automerge__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_automerge__favor_ours	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^void test_merge_trees_automerge__favor_ours(void)$/;"	f	typeref:typename:void
test_merge_trees_automerge__favor_theirs	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^void test_merge_trees_automerge__favor_theirs(void)$/;"	f	typeref:typename:void
test_merge_trees_automerge__initialize	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^void test_merge_trees_automerge__initialize(void)$/;"	f	typeref:typename:void
test_merge_trees_automerge__unrelated	my_project/libgit2/tests/libgit2/merge/trees/automerge.c	/^void test_merge_trees_automerge__unrelated(void)$/;"	f	typeref:typename:void
test_merge_trees_commits__automerge	my_project/libgit2/tests/libgit2/merge/trees/commits.c	/^void test_merge_trees_commits__automerge(void)$/;"	f	typeref:typename:void
test_merge_trees_commits__cleanup	my_project/libgit2/tests/libgit2/merge/trees/commits.c	/^void test_merge_trees_commits__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_commits__df_conflict	my_project/libgit2/tests/libgit2/merge/trees/commits.c	/^void test_merge_trees_commits__df_conflict(void)$/;"	f	typeref:typename:void
test_merge_trees_commits__fail_on_conflict	my_project/libgit2/tests/libgit2/merge/trees/commits.c	/^void test_merge_trees_commits__fail_on_conflict(void)$/;"	f	typeref:typename:void
test_merge_trees_commits__initialize	my_project/libgit2/tests/libgit2/merge/trees/commits.c	/^void test_merge_trees_commits__initialize(void)$/;"	f	typeref:typename:void
test_merge_trees_commits__no_ancestor	my_project/libgit2/tests/libgit2/merge/trees/commits.c	/^void test_merge_trees_commits__no_ancestor(void)$/;"	f	typeref:typename:void
test_merge_trees_modeconflict__cleanup	my_project/libgit2/tests/libgit2/merge/trees/modeconflict.c	/^void test_merge_trees_modeconflict__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_modeconflict__df_conflict	my_project/libgit2/tests/libgit2/merge/trees/modeconflict.c	/^void test_merge_trees_modeconflict__df_conflict(void)$/;"	f	typeref:typename:void
test_merge_trees_modeconflict__initialize	my_project/libgit2/tests/libgit2/merge/trees/modeconflict.c	/^void test_merge_trees_modeconflict__initialize(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__cleanup	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__conflict	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__conflict(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__conflicting_merge_base	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__conflicting_merge_base(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__conflicting_merge_base_since_resolved	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__conflicting_merge_base_since_resolved(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__conflicting_merge_base_with_diff3	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__conflicting_merge_base_with_diff3(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__initialize	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__initialize(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__merge_base_for_virtual_commit	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__merge_base_for_virtual_commit(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__merge_base_for_virtual_commit_2	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__merge_base_for_virtual_commit_2(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__oh_so_many_levels_of_recursion	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__oh_so_many_levels_of_recursion(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__one_base_commit	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__one_base_commit(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__one_base_commit_norecursive	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__one_base_commit_norecursive(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__recursionlimit	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__recursionlimit(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__three_base_commits	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__three_base_commits(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__three_base_commits_norecursive	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__three_base_commits_norecursive(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__three_levels_of_multiple_bases	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__three_levels_of_multiple_bases(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__three_levels_of_multiple_bases_norecursive	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__three_levels_of_multiple_bases_norecursive(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__two_base_commits	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__two_base_commits(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__two_base_commits_norecursive	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__two_base_commits_norecursive(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__two_levels_of_multiple_bases	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__two_levels_of_multiple_bases(void)$/;"	f	typeref:typename:void
test_merge_trees_recursive__two_levels_of_multiple_bases_norecursive	my_project/libgit2/tests/libgit2/merge/trees/recursive.c	/^void test_merge_trees_recursive__two_levels_of_multiple_bases_norecursive(void)$/;"	f	typeref:typename:void
test_merge_trees_renames__cache_recomputation	my_project/libgit2/tests/libgit2/merge/trees/renames.c	/^void test_merge_trees_renames__cache_recomputation(void)$/;"	f	typeref:typename:void
test_merge_trees_renames__cleanup	my_project/libgit2/tests/libgit2/merge/trees/renames.c	/^void test_merge_trees_renames__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_renames__emptyfile_renames	my_project/libgit2/tests/libgit2/merge/trees/renames.c	/^void test_merge_trees_renames__emptyfile_renames(void)$/;"	f	typeref:typename:void
test_merge_trees_renames__index	my_project/libgit2/tests/libgit2/merge/trees/renames.c	/^void test_merge_trees_renames__index(void)$/;"	f	typeref:typename:void
test_merge_trees_renames__initialize	my_project/libgit2/tests/libgit2/merge/trees/renames.c	/^void test_merge_trees_renames__initialize(void)$/;"	f	typeref:typename:void
test_merge_trees_renames__no_rename_index	my_project/libgit2/tests/libgit2/merge/trees/renames.c	/^void test_merge_trees_renames__no_rename_index(void)$/;"	f	typeref:typename:void
test_merge_trees_renames__submodules	my_project/libgit2/tests/libgit2/merge/trees/renames.c	/^void test_merge_trees_renames__submodules(void)$/;"	f	typeref:typename:void
test_merge_trees_treediff__best_renames	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^void test_merge_trees_treediff__best_renames(void)$/;"	f	typeref:typename:void
test_merge_trees_treediff__cleanup	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^void test_merge_trees_treediff__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_treediff__df_conflicts	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^void test_merge_trees_treediff__df_conflicts(void)$/;"	f	typeref:typename:void
test_merge_trees_treediff__initialize	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^void test_merge_trees_treediff__initialize(void)$/;"	f	typeref:typename:void
test_merge_trees_treediff__rename_conflicts	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^void test_merge_trees_treediff__rename_conflicts(void)$/;"	f	typeref:typename:void
test_merge_trees_treediff__simple	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^void test_merge_trees_treediff__simple(void)$/;"	f	typeref:typename:void
test_merge_trees_treediff__strict_renames	my_project/libgit2/tests/libgit2/merge/trees/treediff.c	/^void test_merge_trees_treediff__strict_renames(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__10	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__10(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__11	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__11(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__13	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__13(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__14	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__14(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__2alt	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__2alt(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__3alt	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__3alt(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__4	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__4(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__5alt_1	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__5alt_1(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__5alt_2	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__5alt_2(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__6	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__6(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__7	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__7(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__8	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__8(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__9	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__9(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__cleanup	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_trivial__initialize	my_project/libgit2/tests/libgit2/merge/trees/trivial.c	/^void test_merge_trees_trivial__initialize(void)$/;"	f	typeref:typename:void
test_merge_trees_whitespace__change	my_project/libgit2/tests/libgit2/merge/trees/whitespace.c	/^void test_merge_trees_whitespace__change(void)$/;"	f	typeref:typename:void
test_merge_trees_whitespace__cleanup	my_project/libgit2/tests/libgit2/merge/trees/whitespace.c	/^void test_merge_trees_whitespace__cleanup(void)$/;"	f	typeref:typename:void
test_merge_trees_whitespace__conflict	my_project/libgit2/tests/libgit2/merge/trees/whitespace.c	/^void test_merge_trees_whitespace__conflict(void)$/;"	f	typeref:typename:void
test_merge_trees_whitespace__eol	my_project/libgit2/tests/libgit2/merge/trees/whitespace.c	/^void test_merge_trees_whitespace__eol(void)$/;"	f	typeref:typename:void
test_merge_trees_whitespace__initialize	my_project/libgit2/tests/libgit2/merge/trees/whitespace.c	/^void test_merge_trees_whitespace__initialize(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__affected_dirty_files_disallowed	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__affected_dirty_files_disallowed(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__cleanup	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__cleanup(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__honors_cache	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__honors_cache(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__identical_staged_files_allowed	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__identical_staged_files_allowed(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__initialize	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__initialize(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__staged_files_in_index_disallowed	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__staged_files_in_index_disallowed(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__unaffected_dirty_files_allowed	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__unaffected_dirty_files_allowed(void)$/;"	f	typeref:typename:void
test_merge_workdir_dirty__unstaged_deletes_maintained	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^void test_merge_workdir_dirty__unstaged_deletes_maintained(void)$/;"	f	typeref:typename:void
test_merge_workdir_recursive__cleanup	my_project/libgit2/tests/libgit2/merge/workdir/recursive.c	/^void test_merge_workdir_recursive__cleanup(void)$/;"	f	typeref:typename:void
test_merge_workdir_recursive__conflicting_merge_base_with_diff3	my_project/libgit2/tests/libgit2/merge/workdir/recursive.c	/^void test_merge_workdir_recursive__conflicting_merge_base_with_diff3(void)$/;"	f	typeref:typename:void
test_merge_workdir_recursive__initialize	my_project/libgit2/tests/libgit2/merge/workdir/recursive.c	/^void test_merge_workdir_recursive__initialize(void)$/;"	f	typeref:typename:void
test_merge_workdir_recursive__writes_conflict_with_virtual_base	my_project/libgit2/tests/libgit2/merge/workdir/recursive.c	/^void test_merge_workdir_recursive__writes_conflict_with_virtual_base(void)$/;"	f	typeref:typename:void
test_merge_workdir_renames__cleanup	my_project/libgit2/tests/libgit2/merge/workdir/renames.c	/^void test_merge_workdir_renames__cleanup(void)$/;"	f	typeref:typename:void
test_merge_workdir_renames__initialize	my_project/libgit2/tests/libgit2/merge/workdir/renames.c	/^void test_merge_workdir_renames__initialize(void)$/;"	f	typeref:typename:void
test_merge_workdir_renames__ours	my_project/libgit2/tests/libgit2/merge/workdir/renames.c	/^void test_merge_workdir_renames__ours(void)$/;"	f	typeref:typename:void
test_merge_workdir_renames__renames	my_project/libgit2/tests/libgit2/merge/workdir/renames.c	/^void test_merge_workdir_renames__renames(void)$/;"	f	typeref:typename:void
test_merge_workdir_renames__similar	my_project/libgit2/tests/libgit2/merge/workdir/renames.c	/^void test_merge_workdir_renames__similar(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__branches_and_oids_1	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__branches_and_oids_1(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__branches_and_oids_2	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__branches_and_oids_2(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__branches_and_oids_3	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__branches_and_oids_3(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__branches_and_oids_4	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__branches_and_oids_4(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__cleanup	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__cleanup(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__head_foreach_nonewline	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__head_foreach_nonewline(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__head_foreach_octopus	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__head_foreach_octopus(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__head_foreach_one	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__head_foreach_one(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__head_invalid_oid	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__head_invalid_oid(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__head_notfound	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__head_notfound(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__id_from_head	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__id_from_head(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__initialize	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__initialize(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__normal_branch_and_remote_tracking_branch	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__normal_branch_and_remote_tracking_branch(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__one_branch	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__one_branch(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__one_oid	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__one_oid(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__pull_one	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__pull_one(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__pull_three	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__pull_three(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__pull_two	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__pull_two(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__remote_tracking_branch_and_normal_branch	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__remote_tracking_branch_and_normal_branch(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__remote_tracking_one_branch	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__remote_tracking_one_branch(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__remote_tracking_three_branches	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__remote_tracking_three_branches(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__remote_tracking_two_branches	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__remote_tracking_two_branches(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__removed_after_failure	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__removed_after_failure(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__retained_after_success	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__retained_after_success(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__three_branches	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__three_branches(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__three_oids	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__three_oids(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__three_remotes	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__three_remotes(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__three_same_branches	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__three_same_branches(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__three_same_oids	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__three_same_oids(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__two_branches	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__two_branches(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__two_remote_tracking_branch_and_two_normal_branches	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__two_remote_tracking_branch_and_two_normal_branches(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__two_remotes	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__two_remotes(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__unlocked_after_conflict	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__unlocked_after_conflict(void)$/;"	f	typeref:typename:void
test_merge_workdir_setup__unlocked_after_success	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^void test_merge_workdir_setup__unlocked_after_success(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__automerge	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__automerge(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__automerge_crlf	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__automerge_crlf(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__binary	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__binary(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__checkout_ours	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__checkout_ours(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__cleanup	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__cleanup(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__diff3	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__diff3(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__diff3_from_config	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__diff3_from_config(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__directory_file	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__directory_file(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__favor_ours	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__favor_ours(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__favor_theirs	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__favor_theirs(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__gitattributes_union	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__gitattributes_union(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__index_reload	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__index_reload(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__initialize	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__initialize(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__merge_overrides_config	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__merge_overrides_config(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__mergefile	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__mergefile(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__union	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__union(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__unrelated	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__unrelated(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__unrelated_with_conflicts	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__unrelated_with_conflicts(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__zdiff3	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__zdiff3(void)$/;"	f	typeref:typename:void
test_merge_workdir_simple__zdiff3_from_config	my_project/libgit2/tests/libgit2/merge/workdir/simple.c	/^void test_merge_workdir_simple__zdiff3_from_config(void)$/;"	f	typeref:typename:void
test_merge_workdir_submodules__automerge	my_project/libgit2/tests/libgit2/merge/workdir/submodules.c	/^void test_merge_workdir_submodules__automerge(void)$/;"	f	typeref:typename:void
test_merge_workdir_submodules__cleanup	my_project/libgit2/tests/libgit2/merge/workdir/submodules.c	/^void test_merge_workdir_submodules__cleanup(void)$/;"	f	typeref:typename:void
test_merge_workdir_submodules__initialize	my_project/libgit2/tests/libgit2/merge/workdir/submodules.c	/^void test_merge_workdir_submodules__initialize(void)$/;"	f	typeref:typename:void
test_merge_workdir_submodules__take_changed	my_project/libgit2/tests/libgit2/merge/workdir/submodules.c	/^void test_merge_workdir_submodules__take_changed(void)$/;"	f	typeref:typename:void
test_merge_workdir_submodules__update_delete_conflict	my_project/libgit2/tests/libgit2/merge/workdir/submodules.c	/^void test_merge_workdir_submodules__update_delete_conflict(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__10	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__10(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__11	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__11(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__13	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__13(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__14	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__14(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__2alt	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__2alt(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__3alt	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__3alt(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__4	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__4(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__5alt_1	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__5alt_1(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__5alt_2	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__5alt_2(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__6	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__6(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__7	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__7(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__8	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__8(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__9	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__9(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__cleanup	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__cleanup(void)$/;"	f	typeref:typename:void
test_merge_workdir_trivial__initialize	my_project/libgit2/tests/libgit2/merge/workdir/trivial.c	/^void test_merge_workdir_trivial__initialize(void)$/;"	f	typeref:typename:void
test_message_trailer__conflicts	my_project/libgit2/tests/libgit2/message/trailer.c	/^void test_message_trailer__conflicts(void)$/;"	f	typeref:typename:void
test_message_trailer__continuation	my_project/libgit2/tests/libgit2/message/trailer.c	/^void test_message_trailer__continuation(void)$/;"	f	typeref:typename:void
test_message_trailer__extra_whitespace	my_project/libgit2/tests/libgit2/message/trailer.c	/^void test_message_trailer__extra_whitespace(void)$/;"	f	typeref:typename:void
test_message_trailer__ignores_dashes	my_project/libgit2/tests/libgit2/message/trailer.c	/^void test_message_trailer__ignores_dashes(void)$/;"	f	typeref:typename:void
test_message_trailer__invalid	my_project/libgit2/tests/libgit2/message/trailer.c	/^void test_message_trailer__invalid(void)$/;"	f	typeref:typename:void
test_message_trailer__no_newline	my_project/libgit2/tests/libgit2/message/trailer.c	/^void test_message_trailer__no_newline(void)$/;"	f	typeref:typename:void
test_message_trailer__no_whitespace	my_project/libgit2/tests/libgit2/message/trailer.c	/^void test_message_trailer__no_whitespace(void)$/;"	f	typeref:typename:void
test_message_trailer__not_last_paragraph	my_project/libgit2/tests/libgit2/message/trailer.c	/^void test_message_trailer__not_last_paragraph(void)$/;"	f	typeref:typename:void
test_message_trailer__patch	my_project/libgit2/tests/libgit2/message/trailer.c	/^void test_message_trailer__patch(void)$/;"	f	typeref:typename:void
test_message_trailer__simple	my_project/libgit2/tests/libgit2/message/trailer.c	/^void test_message_trailer__simple(void)$/;"	f	typeref:typename:void
test_mkdir__absolute	my_project/libgit2/tests/util/mkdir.c	/^void test_mkdir__absolute(void)$/;"	f	typeref:typename:void
test_mkdir__basic	my_project/libgit2/tests/util/mkdir.c	/^void test_mkdir__basic(void)$/;"	f	typeref:typename:void
test_mkdir__chmods	my_project/libgit2/tests/util/mkdir.c	/^void test_mkdir__chmods(void)$/;"	f	typeref:typename:void
test_mkdir__keeps_parent_symlinks	my_project/libgit2/tests/util/mkdir.c	/^void test_mkdir__keeps_parent_symlinks(void)$/;"	f	typeref:typename:void
test_mkdir__mkdir_path_inside_unwriteable_parent	my_project/libgit2/tests/util/mkdir.c	/^void test_mkdir__mkdir_path_inside_unwriteable_parent(void)$/;"	f	typeref:typename:void
test_mkdir__with_base	my_project/libgit2/tests/util/mkdir.c	/^void test_mkdir__with_base(void)$/;"	f	typeref:typename:void
test_names_expected	my_project/libgit2/tests/libgit2/diff/rename.c	/^static int test_names_expected(const git_diff_delta *delta, float progress, void *p)$/;"	f	typeref:typename:int	file:
test_network_cred__stock_userpass_properly_handles_username_in_url	my_project/libgit2/tests/libgit2/network/cred.c	/^void test_network_cred__stock_userpass_properly_handles_username_in_url(void)$/;"	f	typeref:typename:void
test_network_cred__stock_userpass_validates_args	my_project/libgit2/tests/libgit2/network/cred.c	/^void test_network_cred__stock_userpass_validates_args(void)$/;"	f	typeref:typename:void
test_network_cred__stock_userpass_validates_that_method_is_allowed	my_project/libgit2/tests/libgit2/network/cred.c	/^void test_network_cred__stock_userpass_validates_that_method_is_allowed(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__all_refs	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^void test_network_fetchlocal__all_refs(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__call_progress	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^void test_network_fetchlocal__call_progress(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__cleanup	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^void test_network_fetchlocal__cleanup(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__clone_into_mirror	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^void test_network_fetchlocal__clone_into_mirror(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__complete	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^void test_network_fetchlocal__complete(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__fetchprune	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^void test_network_fetchlocal__fetchprune(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__multi_remotes	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^void test_network_fetchlocal__multi_remotes(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__partial	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^void test_network_fetchlocal__partial(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__prune	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^void test_network_fetchlocal__prune(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__prune_load_fetch_prune_config	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^void test_network_fetchlocal__prune_load_fetch_prune_config(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__prune_load_remote_prune_config	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^void test_network_fetchlocal__prune_load_remote_prune_config(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__prune_overlapping	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^void test_network_fetchlocal__prune_overlapping(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__prune_tag	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^void test_network_fetchlocal__prune_tag(void)$/;"	f	typeref:typename:void
test_network_fetchlocal__update_tips_error_is_propagated	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^void test_network_fetchlocal__update_tips_error_is_propagated(void)$/;"	f	typeref:typename:void
test_network_refspecs__invalid	my_project/libgit2/tests/libgit2/network/refspecs.c	/^void test_network_refspecs__invalid(void)$/;"	f	typeref:typename:void
test_network_refspecs__invalid_reverse	my_project/libgit2/tests/libgit2/network/refspecs.c	/^void test_network_refspecs__invalid_reverse(void)$/;"	f	typeref:typename:void
test_network_refspecs__matching	my_project/libgit2/tests/libgit2/network/refspecs.c	/^void test_network_refspecs__matching(void)$/;"	f	typeref:typename:void
test_network_refspecs__no_dst	my_project/libgit2/tests/libgit2/network/refspecs.c	/^void test_network_refspecs__no_dst(void)$/;"	f	typeref:typename:void
test_network_refspecs__parse_free	my_project/libgit2/tests/libgit2/network/refspecs.c	/^void test_network_refspecs__parse_free(void)$/;"	f	typeref:typename:void
test_network_refspecs__parsing	my_project/libgit2/tests/libgit2/network/refspecs.c	/^void test_network_refspecs__parsing(void)$/;"	f	typeref:typename:void
test_network_refspecs__transform_loosened_star	my_project/libgit2/tests/libgit2/network/refspecs.c	/^void test_network_refspecs__transform_loosened_star(void)$/;"	f	typeref:typename:void
test_network_refspecs__transform_mid_star	my_project/libgit2/tests/libgit2/network/refspecs.c	/^void test_network_refspecs__transform_mid_star(void)$/;"	f	typeref:typename:void
test_network_refspecs__transform_nested_star	my_project/libgit2/tests/libgit2/network/refspecs.c	/^void test_network_refspecs__transform_nested_star(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__cleanup	my_project/libgit2/tests/libgit2/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__cleanup(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__detached_sharing_nonbranch_id	my_project/libgit2/tests/libgit2/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__detached_sharing_nonbranch_id(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__initialize	my_project/libgit2/tests/libgit2/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__initialize(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__master	my_project/libgit2/tests/libgit2/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__master(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__master_does_not_win	my_project/libgit2/tests/libgit2/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__master_does_not_win(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__master_on_detached	my_project/libgit2/tests/libgit2/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__master_on_detached(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__no_default_branch	my_project/libgit2/tests/libgit2/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__no_default_branch(void)$/;"	f	typeref:typename:void
test_network_remote_defaultbranch__unborn_HEAD_with_branches	my_project/libgit2/tests/libgit2/network/remote/defaultbranch.c	/^void test_network_remote_defaultbranch__unborn_HEAD_with_branches(void)$/;"	f	typeref:typename:void
test_network_remote_delete__cleanup	my_project/libgit2/tests/libgit2/network/remote/delete.c	/^void test_network_remote_delete__cleanup(void)$/;"	f	typeref:typename:void
test_network_remote_delete__initialize	my_project/libgit2/tests/libgit2/network/remote/delete.c	/^void test_network_remote_delete__initialize(void)$/;"	f	typeref:typename:void
test_network_remote_delete__remove_branch_upstream_configuration_settings	my_project/libgit2/tests/libgit2/network/remote/delete.c	/^void test_network_remote_delete__remove_branch_upstream_configuration_settings(void)$/;"	f	typeref:typename:void
test_network_remote_delete__remove_remote_configuration_settings	my_project/libgit2/tests/libgit2/network/remote/delete.c	/^void test_network_remote_delete__remove_remote_configuration_settings(void)$/;"	f	typeref:typename:void
test_network_remote_delete__remove_remote_tracking_branches	my_project/libgit2/tests/libgit2/network/remote/delete.c	/^void test_network_remote_delete__remove_remote_tracking_branches(void)$/;"	f	typeref:typename:void
test_network_remote_isvalidname__can_detect_invalid_formats	my_project/libgit2/tests/libgit2/network/remote/isvalidname.c	/^void test_network_remote_isvalidname__can_detect_invalid_formats(void)$/;"	f	typeref:typename:void
test_network_remote_isvalidname__wont_hopefully_choke_on_valid_formats	my_project/libgit2/tests/libgit2/network/remote/isvalidname.c	/^void test_network_remote_isvalidname__wont_hopefully_choke_on_valid_formats(void)$/;"	f	typeref:typename:void
test_network_remote_local__anonymous_remote_inmemory_repo	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__anonymous_remote_inmemory_repo(void)$/;"	f	typeref:typename:void
test_network_remote_local__cleanup	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__cleanup(void)$/;"	f	typeref:typename:void
test_network_remote_local__connected	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__connected(void)$/;"	f	typeref:typename:void
test_network_remote_local__fetch	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__fetch(void)$/;"	f	typeref:typename:void
test_network_remote_local__fetch_default_reflog_message	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__fetch_default_reflog_message(void)$/;"	f	typeref:typename:void
test_network_remote_local__initialize	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__initialize(void)$/;"	f	typeref:typename:void
test_network_remote_local__nested_tags_are_completely_peeled	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__nested_tags_are_completely_peeled(void)$/;"	f	typeref:typename:void
test_network_remote_local__opportunistic_update	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__opportunistic_update(void)$/;"	f	typeref:typename:void
test_network_remote_local__push_delete	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__push_delete(void)$/;"	f	typeref:typename:void
test_network_remote_local__push_to_bare_remote	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__push_to_bare_remote(void)$/;"	f	typeref:typename:void
test_network_remote_local__push_to_bare_remote_with_file_url	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__push_to_bare_remote_with_file_url(void)$/;"	f	typeref:typename:void
test_network_remote_local__push_to_non_bare_remote	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__push_to_non_bare_remote(void)$/;"	f	typeref:typename:void
test_network_remote_local__reflog	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__reflog(void)$/;"	f	typeref:typename:void
test_network_remote_local__retrieve_advertised_before_connect	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__retrieve_advertised_before_connect(void)$/;"	f	typeref:typename:void
test_network_remote_local__retrieve_advertised_references	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__retrieve_advertised_references(void)$/;"	f	typeref:typename:void
test_network_remote_local__retrieve_advertised_references_after_disconnect	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__retrieve_advertised_references_after_disconnect(void)$/;"	f	typeref:typename:void
test_network_remote_local__retrieve_advertised_references_from_spaced_repository	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__retrieve_advertised_references_from_spaced_repository(void)$/;"	f	typeref:typename:void
test_network_remote_local__shorthand_fetch_refspec0	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__shorthand_fetch_refspec0(void)$/;"	f	typeref:typename:void
test_network_remote_local__shorthand_fetch_refspec1	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__shorthand_fetch_refspec1(void)$/;"	f	typeref:typename:void
test_network_remote_local__tagopt	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__tagopt(void)$/;"	f	typeref:typename:void
test_network_remote_local__update_tips_for_new_remote	my_project/libgit2/tests/libgit2/network/remote/local.c	/^void test_network_remote_local__update_tips_for_new_remote(void) {$/;"	f	typeref:typename:void
test_network_remote_push__cleanup	my_project/libgit2/tests/libgit2/network/remote/push.c	/^void test_network_remote_push__cleanup(void)$/;"	f	typeref:typename:void
test_network_remote_push__create_notification	my_project/libgit2/tests/libgit2/network/remote/push.c	/^void test_network_remote_push__create_notification(void)$/;"	f	typeref:typename:void
test_network_remote_push__delete_notification	my_project/libgit2/tests/libgit2/network/remote/push.c	/^void test_network_remote_push__delete_notification(void)$/;"	f	typeref:typename:void
test_network_remote_push__initialize	my_project/libgit2/tests/libgit2/network/remote/push.c	/^void test_network_remote_push__initialize(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__add	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__add(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__add_fetchspec	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__add_fetchspec(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__add_pushspec	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__add_pushspec(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__can_load_with_an_empty_url	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__can_load_with_an_empty_url(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__can_load_with_only_an_empty_pushurl	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__can_load_with_only_an_empty_pushurl(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__cleanup	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__cleanup(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__dup	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__dup(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__error_when_no_push_available	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__error_when_no_push_available(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__error_when_not_found	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__error_when_not_found(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__fnmatch	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__fnmatch(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__initialize	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__initialize(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__instance_url	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__instance_url(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__list	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__list(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__loading_a_missing_remote_returns_ENOTFOUND	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__loading_a_missing_remote_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__loading_with_an_invalid_name_returns_EINVALIDSPEC	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__loading_with_an_invalid_name_returns_EINVALIDSPEC(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__missing_refspecs	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__missing_refspecs(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__nonmatch_upstream_refspec	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__nonmatch_upstream_refspec(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__parsing	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__parsing(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__pushurl	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__pushurl(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__query_refspecs	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__query_refspecs(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__refspec_parsing	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__refspec_parsing(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__remote_ready	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__remote_ready(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__returns_ENOTFOUND_when_neither_url_nor_pushurl	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__returns_ENOTFOUND_when_neither_url_nor_pushurl(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__tagopt	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__tagopt(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__transform	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__transform(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__transform_destination_to_source	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__transform_destination_to_source(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__urlresolve	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__urlresolve(void)$/;"	f	typeref:typename:void
test_network_remote_remotes__urlresolve_passthrough	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^void test_network_remote_remotes__urlresolve_passthrough(void)$/;"	f	typeref:typename:void
test_network_remote_rename__cannot_overwrite_an_existing_remote	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__cannot_overwrite_an_existing_remote(void)$/;"	f	typeref:typename:void
test_network_remote_rename__cleanup	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__cleanup(void)$/;"	f	typeref:typename:void
test_network_remote_rename__initialize	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__initialize(void)$/;"	f	typeref:typename:void
test_network_remote_rename__new_name_can_contain_dots	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__new_name_can_contain_dots(void)$/;"	f	typeref:typename:void
test_network_remote_rename__new_name_must_conform_to_reference_naming_conventions	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__new_name_must_conform_to_reference_naming_conventions(void)$/;"	f	typeref:typename:void
test_network_remote_rename__nonexistent_returns_enotfound	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__nonexistent_returns_enotfound(void)$/;"	f	typeref:typename:void
test_network_remote_rename__overwrite_ref_in_target	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__overwrite_ref_in_target(void)$/;"	f	typeref:typename:void
test_network_remote_rename__renamed_name_is_persisted	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__renamed_name_is_persisted(void)$/;"	f	typeref:typename:void
test_network_remote_rename__renaming_a_remote_moves_related_configuration_section	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__renaming_a_remote_moves_related_configuration_section(void)$/;"	f	typeref:typename:void
test_network_remote_rename__renaming_a_remote_moves_the_underlying_reference	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__renaming_a_remote_moves_the_underlying_reference(void)$/;"	f	typeref:typename:void
test_network_remote_rename__renaming_a_remote_notifies_of_non_default_fetchrefspec	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__renaming_a_remote_notifies_of_non_default_fetchrefspec(void)$/;"	f	typeref:typename:void
test_network_remote_rename__renaming_a_remote_updates_branch_related_configuration_entries	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__renaming_a_remote_updates_branch_related_configuration_entries(/;"	f	typeref:typename:void
test_network_remote_rename__renaming_a_remote_updates_default_fetchrefspec	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__renaming_a_remote_updates_default_fetchrefspec(void)$/;"	f	typeref:typename:void
test_network_remote_rename__renaming_a_remote_without_a_fetchrefspec_doesnt_create_one	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__renaming_a_remote_without_a_fetchrefspec_doesnt_create_one(void/;"	f	typeref:typename:void
test_network_remote_rename__symref_head	my_project/libgit2/tests/libgit2/network/remote/rename.c	/^void test_network_remote_rename__symref_head(void)$/;"	f	typeref:typename:void
test_notes_notes__attempt_to_read_a_note_from_a_commit_with_no_note_fails	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__attempt_to_read_a_note_from_a_commit_with_no_note_fails(void)$/;"	f	typeref:typename:void
test_notes_notes__can_cancel_foreach	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_cancel_foreach(void)$/;"	f	typeref:typename:void
test_notes_notes__can_create_a_note	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_create_a_note(void)$/;"	f	typeref:typename:void
test_notes_notes__can_create_a_note_from_commit	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_create_a_note_from_commit(void)$/;"	f	typeref:typename:void
test_notes_notes__can_create_a_note_from_commit_given_an_existing_commit	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_create_a_note_from_commit_given_an_existing_commit(void)$/;"	f	typeref:typename:void
test_notes_notes__can_insert_a_note_in_an_existing_fanout	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_insert_a_note_in_an_existing_fanout(void)$/;"	f	typeref:typename:void
test_notes_notes__can_insert_a_note_with_a_custom_namespace	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_insert_a_note_with_a_custom_namespace(void)$/;"	f	typeref:typename:void
test_notes_notes__can_iterate_custom_namespace	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_iterate_custom_namespace(void)$/;"	f	typeref:typename:void
test_notes_notes__can_iterate_default_namespace	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_iterate_default_namespace(void)$/;"	f	typeref:typename:void
test_notes_notes__can_read_a_note	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_read_a_note(void)$/;"	f	typeref:typename:void
test_notes_notes__can_read_a_note_from_a_commit	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_read_a_note_from_a_commit(void)$/;"	f	typeref:typename:void
test_notes_notes__can_read_a_note_in_an_existing_fanout	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_read_a_note_in_an_existing_fanout(void)$/;"	f	typeref:typename:void
test_notes_notes__can_remove_a_note	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_remove_a_note(void)$/;"	f	typeref:typename:void
test_notes_notes__can_remove_a_note_from_commit	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_remove_a_note_from_commit(void)$/;"	f	typeref:typename:void
test_notes_notes__can_remove_a_note_in_an_existing_fanout	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_remove_a_note_in_an_existing_fanout(void)$/;"	f	typeref:typename:void
test_notes_notes__can_retrieve_a_list_of_notes_for_a_given_namespace	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__can_retrieve_a_list_of_notes_for_a_given_namespace(void)$/;"	f	typeref:typename:void
test_notes_notes__cleanup	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__cleanup(void)$/;"	f	typeref:typename:void
test_notes_notes__creating_a_note_on_a_target_can_overwrite_existing_note	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__creating_a_note_on_a_target_can_overwrite_existing_note(void)$/;"	f	typeref:typename:void
test_notes_notes__creating_a_note_on_a_target_which_already_has_one_returns_EEXISTS	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__creating_a_note_on_a_target_which_already_has_one_returns_EEXISTS(void)$/;"	f	typeref:typename:void
test_notes_notes__empty_iterate	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__empty_iterate(void)$/;"	f	typeref:typename:void
test_notes_notes__initialize	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__initialize(void)$/;"	f	typeref:typename:void
test_notes_notes__inserting_a_note_without_passing_a_namespace_uses_the_default_namespace	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__inserting_a_note_without_passing_a_namespace_uses_the_default_namespace(v/;"	f	typeref:typename:void
test_notes_notes__iterate_from_commit	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__iterate_from_commit(void)$/;"	f	typeref:typename:void
test_notes_notes__removing_a_note_which_doesnt_exists_returns_ENOTFOUND	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__removing_a_note_which_doesnt_exists_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_notes_notes__retrieving_a_list_of_notes_for_an_unknown_namespace_returns_ENOTFOUND	my_project/libgit2/tests/libgit2/notes/notes.c	/^void test_notes_notes__retrieving_a_list_of_notes_for_an_unknown_namespace_returns_ENOTFOUND(voi/;"	f	typeref:typename:void
test_notes_notesref__cleanup	my_project/libgit2/tests/libgit2/notes/notesref.c	/^void test_notes_notesref__cleanup(void)$/;"	f	typeref:typename:void
test_notes_notesref__config_corenotesref	my_project/libgit2/tests/libgit2/notes/notesref.c	/^void test_notes_notesref__config_corenotesref(void)$/;"	f	typeref:typename:void
test_notes_notesref__initialize	my_project/libgit2/tests/libgit2/notes/notesref.c	/^void test_notes_notesref__initialize(void)$/;"	f	typeref:typename:void
test_notify	my_project/libgit2/tests/libgit2/diff/notify.c	/^static void test_notify($/;"	f	typeref:typename:void	file:
test_number	my_project/libgit2/tests/clar/clar.c	/^	int test_number;$/;"	m	struct:clar_report	typeref:typename:int	file:
test_object	my_project/libgit2/tests/libgit2/refs/revparse.c	/^static void test_object(const char *spec, const char *expected_oid)$/;"	f	typeref:typename:void	file:
test_object_and_ref	my_project/libgit2/tests/libgit2/refs/revparse.c	/^static void test_object_and_ref(const char *spec, const char *expected_oid, const char *expected/;"	f	typeref:typename:void	file:
test_object_and_ref_inrepo	my_project/libgit2/tests/libgit2/refs/revparse.c	/^static void test_object_and_ref_inrepo($/;"	f	typeref:typename:void	file:
test_object_blob_filter__cleanup	my_project/libgit2/tests/libgit2/object/blob/filter.c	/^void test_object_blob_filter__cleanup(void)$/;"	f	typeref:typename:void
test_object_blob_filter__initialize	my_project/libgit2/tests/libgit2/object/blob/filter.c	/^void test_object_blob_filter__initialize(void)$/;"	f	typeref:typename:void
test_object_blob_filter__stats	my_project/libgit2/tests/libgit2/object/blob/filter.c	/^void test_object_blob_filter__stats(void)$/;"	f	typeref:typename:void
test_object_blob_filter__to_odb	my_project/libgit2/tests/libgit2/object/blob/filter.c	/^void test_object_blob_filter__to_odb(void)$/;"	f	typeref:typename:void
test_object_blob_filter__unfiltered	my_project/libgit2/tests/libgit2/object/blob/filter.c	/^void test_object_blob_filter__unfiltered(void)$/;"	f	typeref:typename:void
test_object_blob_fromstream__cleanup	my_project/libgit2/tests/libgit2/object/blob/fromstream.c	/^void test_object_blob_fromstream__cleanup(void)$/;"	f	typeref:typename:void
test_object_blob_fromstream__creating_a_blob_from_chunks_honors_the_attributes_directives	my_project/libgit2/tests/libgit2/object/blob/fromstream.c	/^void test_object_blob_fromstream__creating_a_blob_from_chunks_honors_the_attributes_directives(v/;"	f	typeref:typename:void
test_object_blob_fromstream__initialize	my_project/libgit2/tests/libgit2/object/blob/fromstream.c	/^void test_object_blob_fromstream__initialize(void)$/;"	f	typeref:typename:void
test_object_blob_fromstream__multiple_write	my_project/libgit2/tests/libgit2/object/blob/fromstream.c	/^void test_object_blob_fromstream__multiple_write(void)$/;"	f	typeref:typename:void
test_object_blob_write__can_create_a_blob_in_a_bare_repo_from_a_absolute_filepath	my_project/libgit2/tests/libgit2/object/blob/write.c	/^void test_object_blob_write__can_create_a_blob_in_a_bare_repo_from_a_absolute_filepath(void)$/;"	f	typeref:typename:void
test_object_blob_write__can_create_a_blob_in_a_standard_repo_from_a_absolute_filepath_pointing_outside_of_the_working_directory	my_project/libgit2/tests/libgit2/object/blob/write.c	/^void test_object_blob_write__can_create_a_blob_in_a_standard_repo_from_a_absolute_filepath_point/;"	f	typeref:typename:void
test_object_blob_write__can_create_a_blob_in_a_standard_repo_from_a_file_located_in_the_working_directory	my_project/libgit2/tests/libgit2/object/blob/write.c	/^void test_object_blob_write__can_create_a_blob_in_a_standard_repo_from_a_file_located_in_the_wor/;"	f	typeref:typename:void
test_object_blob_write__cleanup	my_project/libgit2/tests/libgit2/object/blob/write.c	/^void test_object_blob_write__cleanup(void)$/;"	f	typeref:typename:void
test_object_cache__cache_counts	my_project/libgit2/tests/libgit2/object/cache.c	/^void test_object_cache__cache_counts(void)$/;"	f	typeref:typename:void
test_object_cache__cleanup	my_project/libgit2/tests/libgit2/object/cache.c	/^void test_object_cache__cleanup(void)$/;"	f	typeref:typename:void
test_object_cache__fast_thread_rush	my_project/libgit2/tests/libgit2/object/cache.c	/^void test_object_cache__fast_thread_rush(void)$/;"	f	typeref:typename:void
test_object_cache__initialize_cache_all_blobs	my_project/libgit2/tests/libgit2/object/cache.c	/^void test_object_cache__initialize_cache_all_blobs(void)$/;"	f	typeref:typename:void
test_object_cache__initialize_cache_no_blobs	my_project/libgit2/tests/libgit2/object/cache.c	/^void test_object_cache__initialize_cache_no_blobs(void)$/;"	f	typeref:typename:void
test_object_cache__initialize_cache_no_trees	my_project/libgit2/tests/libgit2/object/cache.c	/^void test_object_cache__initialize_cache_no_trees(void)$/;"	f	typeref:typename:void
test_object_cache__initialize_cache_tiny_blobs	my_project/libgit2/tests/libgit2/object/cache.c	/^void test_object_cache__initialize_cache_tiny_blobs(void)$/;"	f	typeref:typename:void
test_object_cache__threadmania	my_project/libgit2/tests/libgit2/object/cache.c	/^void test_object_cache__threadmania(void)$/;"	f	typeref:typename:void
test_object_commit_commitstagedfile__amend_commit	my_project/libgit2/tests/libgit2/object/commit/commitstagedfile.c	/^void test_object_commit_commitstagedfile__amend_commit(void)$/;"	f	typeref:typename:void
test_object_commit_commitstagedfile__cleanup	my_project/libgit2/tests/libgit2/object/commit/commitstagedfile.c	/^void test_object_commit_commitstagedfile__cleanup(void)$/;"	f	typeref:typename:void
test_object_commit_commitstagedfile__generate_predictable_object_ids	my_project/libgit2/tests/libgit2/object/commit/commitstagedfile.c	/^void test_object_commit_commitstagedfile__generate_predictable_object_ids(void)$/;"	f	typeref:typename:void
test_object_commit_commitstagedfile__initialize	my_project/libgit2/tests/libgit2/object/commit/commitstagedfile.c	/^void test_object_commit_commitstagedfile__initialize(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha1_parsing_commit_succeeds	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha1_parsing_commit_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha1_parsing_commit_with_invalid_tree_fails	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha1_parsing_commit_with_invalid_tree_fails(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha1_parsing_commit_with_multiple_authors_succeeds	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha1_parsing_commit_with_multiple_authors_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha1_parsing_commit_with_multiple_committers_succeeds	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha1_parsing_commit_with_multiple_committers_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha1_parsing_commit_with_sha256_tree_fails	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha1_parsing_commit_with_sha256_tree_fails(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha1_parsing_commit_with_unknown_fields_succeeds	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha1_parsing_commit_with_unknown_fields_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha1_parsing_commit_without_author_fails	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha1_parsing_commit_without_author_fails(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha1_parsing_commit_without_committer_fails	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha1_parsing_commit_without_committer_fails(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha1_parsing_commit_without_encoding_succeeds	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha1_parsing_commit_without_encoding_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha1_parsing_commit_without_message_succeeds	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha1_parsing_commit_without_message_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha1_parsing_commit_without_tree_fails	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha1_parsing_commit_without_tree_fails(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha1_parsing_encoding_will_not_cause_oob_read	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha1_parsing_encoding_will_not_cause_oob_read(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha256_parsing_commit_succeeds	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha256_parsing_commit_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha256_parsing_commit_with_invalid_tree_fails	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha256_parsing_commit_with_invalid_tree_fails(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha256_parsing_commit_with_multiple_authors_succeeds	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha256_parsing_commit_with_multiple_authors_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha256_parsing_commit_with_multiple_committers_succeeds	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha256_parsing_commit_with_multiple_committers_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha256_parsing_commit_with_sha1_tree_fails	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha256_parsing_commit_with_sha1_tree_fails(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha256_parsing_commit_with_unknown_fields_succeeds	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha256_parsing_commit_with_unknown_fields_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha256_parsing_commit_without_author_fails	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha256_parsing_commit_without_author_fails(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha256_parsing_commit_without_committer_fails	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha256_parsing_commit_without_committer_fails(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha256_parsing_commit_without_encoding_succeeds	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha256_parsing_commit_without_encoding_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha256_parsing_commit_without_message_succeeds	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha256_parsing_commit_without_message_succeeds(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha256_parsing_commit_without_tree_fails	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha256_parsing_commit_without_tree_fails(void)$/;"	f	typeref:typename:void
test_object_commit_parse__sha256_parsing_encoding_will_not_cause_oob_read	my_project/libgit2/tests/libgit2/object/commit/parse.c	/^void test_object_commit_parse__sha256_parsing_encoding_will_not_cause_oob_read(void)$/;"	f	typeref:typename:void
test_object_inrepo	my_project/libgit2/tests/libgit2/refs/revparse.c	/^static void test_object_inrepo(const char *spec, const char *expected_oid, git_repository *repo)$/;"	f	typeref:typename:void	file:
test_object_lookup256__cleanup	my_project/libgit2/tests/libgit2/object/lookup256.c	/^void test_object_lookup256__cleanup(void)$/;"	f	typeref:typename:void
test_object_lookup256__initialize	my_project/libgit2/tests/libgit2/object/lookup256.c	/^void test_object_lookup256__initialize(void)$/;"	f	typeref:typename:void
test_object_lookup256__lookup_corrupt_object_returns_error	my_project/libgit2/tests/libgit2/object/lookup256.c	/^void test_object_lookup256__lookup_corrupt_object_returns_error(void)$/;"	f	typeref:typename:void
test_object_lookup256__lookup_nonexisting_returns_enotfound	my_project/libgit2/tests/libgit2/object/lookup256.c	/^void test_object_lookup256__lookup_nonexisting_returns_enotfound(void)$/;"	f	typeref:typename:void
test_object_lookup256__lookup_object_with_wrong_hash_returns_error	my_project/libgit2/tests/libgit2/object/lookup256.c	/^void test_object_lookup256__lookup_object_with_wrong_hash_returns_error(void)$/;"	f	typeref:typename:void
test_object_lookup256__lookup_wrong_type_by_abbreviated_id_returns_enotfound	my_project/libgit2/tests/libgit2/object/lookup256.c	/^void test_object_lookup256__lookup_wrong_type_by_abbreviated_id_returns_enotfound(void)$/;"	f	typeref:typename:void
test_object_lookup256__lookup_wrong_type_eventually_returns_enotfound	my_project/libgit2/tests/libgit2/object/lookup256.c	/^void test_object_lookup256__lookup_wrong_type_eventually_returns_enotfound(void)$/;"	f	typeref:typename:void
test_object_lookup256__lookup_wrong_type_returns_enotfound	my_project/libgit2/tests/libgit2/object/lookup256.c	/^void test_object_lookup256__lookup_wrong_type_returns_enotfound(void)$/;"	f	typeref:typename:void
test_object_lookup__cleanup	my_project/libgit2/tests/libgit2/object/lookup.c	/^void test_object_lookup__cleanup(void)$/;"	f	typeref:typename:void
test_object_lookup__initialize	my_project/libgit2/tests/libgit2/object/lookup.c	/^void test_object_lookup__initialize(void)$/;"	f	typeref:typename:void
test_object_lookup__lookup_corrupt_object_returns_error	my_project/libgit2/tests/libgit2/object/lookup.c	/^void test_object_lookup__lookup_corrupt_object_returns_error(void)$/;"	f	typeref:typename:void
test_object_lookup__lookup_nonexisting_returns_enotfound	my_project/libgit2/tests/libgit2/object/lookup.c	/^void test_object_lookup__lookup_nonexisting_returns_enotfound(void)$/;"	f	typeref:typename:void
test_object_lookup__lookup_object_with_wrong_hash_returns_error	my_project/libgit2/tests/libgit2/object/lookup.c	/^void test_object_lookup__lookup_object_with_wrong_hash_returns_error(void)$/;"	f	typeref:typename:void
test_object_lookup__lookup_wrong_type_by_abbreviated_id_returns_enotfound	my_project/libgit2/tests/libgit2/object/lookup.c	/^void test_object_lookup__lookup_wrong_type_by_abbreviated_id_returns_enotfound(void)$/;"	f	typeref:typename:void
test_object_lookup__lookup_wrong_type_eventually_returns_enotfound	my_project/libgit2/tests/libgit2/object/lookup.c	/^void test_object_lookup__lookup_wrong_type_eventually_returns_enotfound(void)$/;"	f	typeref:typename:void
test_object_lookup__lookup_wrong_type_returns_enotfound	my_project/libgit2/tests/libgit2/object/lookup.c	/^void test_object_lookup__lookup_wrong_type_returns_enotfound(void)$/;"	f	typeref:typename:void
test_object_lookupbypath__cleanup	my_project/libgit2/tests/libgit2/object/lookupbypath.c	/^void test_object_lookupbypath__cleanup(void)$/;"	f	typeref:typename:void
test_object_lookupbypath__errors	my_project/libgit2/tests/libgit2/object/lookupbypath.c	/^void test_object_lookupbypath__errors(void)$/;"	f	typeref:typename:void
test_object_lookupbypath__from_head_commit	my_project/libgit2/tests/libgit2/object/lookupbypath.c	/^void test_object_lookupbypath__from_head_commit(void)$/;"	f	typeref:typename:void
test_object_lookupbypath__from_root_tree	my_project/libgit2/tests/libgit2/object/lookupbypath.c	/^void test_object_lookupbypath__from_root_tree(void)$/;"	f	typeref:typename:void
test_object_lookupbypath__from_subdir_tree	my_project/libgit2/tests/libgit2/object/lookupbypath.c	/^void test_object_lookupbypath__from_subdir_tree(void)$/;"	f	typeref:typename:void
test_object_lookupbypath__initialize	my_project/libgit2/tests/libgit2/object/lookupbypath.c	/^void test_object_lookupbypath__initialize(void)$/;"	f	typeref:typename:void
test_object_message__consecutive_blank_lines_at_the_beginning_should_be_removed	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__consecutive_blank_lines_at_the_beginning_should_be_removed(void)$/;"	f	typeref:typename:void
test_object_message__consecutive_blank_lines_at_the_end_should_be_removed	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__consecutive_blank_lines_at_the_end_should_be_removed(void)$/;"	f	typeref:typename:void
test_object_message__consecutive_blank_lines_should_be_unified	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__consecutive_blank_lines_should_be_unified(void)$/;"	f	typeref:typename:void
test_object_message__consecutive_text_lines_should_be_unchanged	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__consecutive_text_lines_should_be_unchanged(void)$/;"	f	typeref:typename:void
test_object_message__keep_comments	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__keep_comments(void)$/;"	f	typeref:typename:void
test_object_message__lines_with_intermediate_spaces_should_be_unchanged	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__lines_with_intermediate_spaces_should_be_unchanged(void)$/;"	f	typeref:typename:void
test_object_message__lines_with_spaces_at_the_beginning_should_be_unchanged	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__lines_with_spaces_at_the_beginning_should_be_unchanged(void)$/;"	f	typeref:typename:void
test_object_message__long_lines_without_spaces_should_be_unchanged	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__long_lines_without_spaces_should_be_unchanged(void)$/;"	f	typeref:typename:void
test_object_message__message_prettify	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__message_prettify(void)$/;"	f	typeref:typename:void
test_object_message__only_consecutive_blank_lines_should_be_completely_removed	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__only_consecutive_blank_lines_should_be_completely_removed(void)$/;"	f	typeref:typename:void
test_object_message__spaces_with_newline_at_end_should_be_replaced_with_empty_string	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__spaces_with_newline_at_end_should_be_replaced_with_empty_string(void)$/;"	f	typeref:typename:void
test_object_message__spaces_without_newline_at_end_should_be_replaced_with_empty_string	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__spaces_without_newline_at_end_should_be_replaced_with_empty_string(voi/;"	f	typeref:typename:void
test_object_message__strip_comments	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__strip_comments(void)$/;"	f	typeref:typename:void
test_object_message__text_plus_spaces_ending_with_newline_should_be_cleaned_and_newline_must_remain	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__text_plus_spaces_ending_with_newline_should_be_cleaned_and_newline_mus/;"	f	typeref:typename:void
test_object_message__text_plus_spaces_without_newline_should_not_show_spaces_and_end_with_newline	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__text_plus_spaces_without_newline_should_not_show_spaces_and_end_with_n/;"	f	typeref:typename:void
test_object_message__text_without_newline_at_end_should_end_with_newline	my_project/libgit2/tests/libgit2/object/message.c	/^void test_object_message__text_without_newline_at_end_should_end_with_newline(void)$/;"	f	typeref:typename:void
test_object_peel__blob	my_project/libgit2/tests/libgit2/object/peel.c	/^void test_object_peel__blob(void)$/;"	f	typeref:typename:void
test_object_peel__cleanup	my_project/libgit2/tests/libgit2/object/peel.c	/^void test_object_peel__cleanup(void)$/;"	f	typeref:typename:void
test_object_peel__commit	my_project/libgit2/tests/libgit2/object/peel.c	/^void test_object_peel__commit(void)$/;"	f	typeref:typename:void
test_object_peel__initialize	my_project/libgit2/tests/libgit2/object/peel.c	/^void test_object_peel__initialize(void)$/;"	f	typeref:typename:void
test_object_peel__peeling_an_object_into_its_own_type_returns_another_instance_of_it	my_project/libgit2/tests/libgit2/object/peel.c	/^void test_object_peel__peeling_an_object_into_its_own_type_returns_another_instance_of_it(void)$/;"	f	typeref:typename:void
test_object_peel__tag	my_project/libgit2/tests/libgit2/object/peel.c	/^void test_object_peel__tag(void)$/;"	f	typeref:typename:void
test_object_peel__target_any_object_for_type_change	my_project/libgit2/tests/libgit2/object/peel.c	/^void test_object_peel__target_any_object_for_type_change(void)$/;"	f	typeref:typename:void
test_object_peel__tree	my_project/libgit2/tests/libgit2/object/peel.c	/^void test_object_peel__tree(void)$/;"	f	typeref:typename:void
test_object_raw_chars__build_valid_oid_from_raw_bytes	my_project/libgit2/tests/libgit2/object/raw/chars.c	/^void test_object_raw_chars__build_valid_oid_from_raw_bytes(void)$/;"	f	typeref:typename:void
test_object_raw_chars__find_invalid_chars_in_oid	my_project/libgit2/tests/libgit2/object/raw/chars.c	/^void test_object_raw_chars__find_invalid_chars_in_oid(void)$/;"	f	typeref:typename:void
test_object_raw_compare__compare_fmt_oids	my_project/libgit2/tests/libgit2/object/raw/compare.c	/^void test_object_raw_compare__compare_fmt_oids(void)$/;"	f	typeref:typename:void
test_object_raw_compare__compare_pathfmt_oids	my_project/libgit2/tests/libgit2/object/raw/compare.c	/^void test_object_raw_compare__compare_pathfmt_oids(void)$/;"	f	typeref:typename:void
test_object_raw_compare__compare_static_oids	my_project/libgit2/tests/libgit2/object/raw/compare.c	/^void test_object_raw_compare__compare_static_oids(void)$/;"	f	typeref:typename:void
test_object_raw_compare__succeed_on_copy_oid	my_project/libgit2/tests/libgit2/object/raw/compare.c	/^void test_object_raw_compare__succeed_on_copy_oid(void)$/;"	f	typeref:typename:void
test_object_raw_compare__succeed_on_oid_comparison_equal	my_project/libgit2/tests/libgit2/object/raw/compare.c	/^void test_object_raw_compare__succeed_on_oid_comparison_equal(void)$/;"	f	typeref:typename:void
test_object_raw_compare__succeed_on_oid_comparison_greater	my_project/libgit2/tests/libgit2/object/raw/compare.c	/^void test_object_raw_compare__succeed_on_oid_comparison_greater(void)$/;"	f	typeref:typename:void
test_object_raw_compare__succeed_on_oid_comparison_lesser	my_project/libgit2/tests/libgit2/object/raw/compare.c	/^void test_object_raw_compare__succeed_on_oid_comparison_lesser(void)$/;"	f	typeref:typename:void
test_object_raw_convert__convert_oid_partially	my_project/libgit2/tests/libgit2/object/raw/convert.c	/^void test_object_raw_convert__convert_oid_partially(void)$/;"	f	typeref:typename:void
test_object_raw_convert__succeed_on_oid_to_string_conversion	my_project/libgit2/tests/libgit2/object/raw/convert.c	/^void test_object_raw_convert__succeed_on_oid_to_string_conversion(void)$/;"	f	typeref:typename:void
test_object_raw_convert__succeed_on_oid_to_string_conversion_big	my_project/libgit2/tests/libgit2/object/raw/convert.c	/^void test_object_raw_convert__succeed_on_oid_to_string_conversion_big(void)$/;"	f	typeref:typename:void
test_object_raw_fromstr__fail_on_invalid_oid_string	my_project/libgit2/tests/libgit2/object/raw/fromstr.c	/^void test_object_raw_fromstr__fail_on_invalid_oid_string(void)$/;"	f	typeref:typename:void
test_object_raw_fromstr__succeed_on_valid_oid_string	my_project/libgit2/tests/libgit2/object/raw/fromstr.c	/^void test_object_raw_fromstr__succeed_on_valid_oid_string(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_buffer_in_single_call	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^void test_object_raw_hash__hash_buffer_in_single_call(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_by_blocks	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^void test_object_raw_hash__hash_by_blocks(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_commit_object	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^void test_object_raw_hash__hash_commit_object(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_junk_data	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^void test_object_raw_hash__hash_junk_data(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_multi_byte_object	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^void test_object_raw_hash__hash_multi_byte_object(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_one_byte_object	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^void test_object_raw_hash__hash_one_byte_object(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_tag_object	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^void test_object_raw_hash__hash_tag_object(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_tree_object	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^void test_object_raw_hash__hash_tree_object(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_two_byte_object	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^void test_object_raw_hash__hash_two_byte_object(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_vector	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^void test_object_raw_hash__hash_vector(void)$/;"	f	typeref:typename:void
test_object_raw_hash__hash_zero_length_object	my_project/libgit2/tests/libgit2/object/raw/hash.c	/^void test_object_raw_hash__hash_zero_length_object(void)$/;"	f	typeref:typename:void
test_object_raw_short__oid_shortener_no_duplicates	my_project/libgit2/tests/libgit2/object/raw/short.c	/^void test_object_raw_short__oid_shortener_no_duplicates(void)$/;"	f	typeref:typename:void
test_object_raw_short__oid_shortener_stresstest_git_oid_shorten	my_project/libgit2/tests/libgit2/object/raw/short.c	/^void test_object_raw_short__oid_shortener_stresstest_git_oid_shorten(void)$/;"	f	typeref:typename:void
test_object_raw_short__oid_shortener_too_much_oids	my_project/libgit2/tests/libgit2/object/raw/short.c	/^void test_object_raw_short__oid_shortener_too_much_oids(void)$/;"	f	typeref:typename:void
test_object_raw_size__validate_oid_size	my_project/libgit2/tests/libgit2/object/raw/size.c	/^void test_object_raw_size__validate_oid_size(void)$/;"	f	typeref:typename:void
test_object_raw_type2string__check_type_is_loose	my_project/libgit2/tests/libgit2/object/raw/type2string.c	/^void test_object_raw_type2string__check_type_is_loose(void)$/;"	f	typeref:typename:void
test_object_raw_type2string__convert_string_to_type	my_project/libgit2/tests/libgit2/object/raw/type2string.c	/^void test_object_raw_type2string__convert_string_to_type(void)$/;"	f	typeref:typename:void
test_object_raw_type2string__convert_type_to_string	my_project/libgit2/tests/libgit2/object/raw/type2string.c	/^void test_object_raw_type2string__convert_type_to_string(void)$/;"	f	typeref:typename:void
test_object_raw_write__loose_object	my_project/libgit2/tests/libgit2/object/raw/write.c	/^void test_object_raw_write__loose_object(void)$/;"	f	typeref:typename:void
test_object_raw_write__loose_tag	my_project/libgit2/tests/libgit2/object/raw/write.c	/^void test_object_raw_write__loose_tag(void)$/;"	f	typeref:typename:void
test_object_raw_write__loose_tree	my_project/libgit2/tests/libgit2/object/raw/write.c	/^void test_object_raw_write__loose_tree(void)$/;"	f	typeref:typename:void
test_object_raw_write__one_byte	my_project/libgit2/tests/libgit2/object/raw/write.c	/^void test_object_raw_write__one_byte(void)$/;"	f	typeref:typename:void
test_object_raw_write__several_bytes	my_project/libgit2/tests/libgit2/object/raw/write.c	/^void test_object_raw_write__several_bytes(void)$/;"	f	typeref:typename:void
test_object_raw_write__two_byte	my_project/libgit2/tests/libgit2/object/raw/write.c	/^void test_object_raw_write__two_byte(void)$/;"	f	typeref:typename:void
test_object_raw_write__zero_length	my_project/libgit2/tests/libgit2/object/raw/write.c	/^void test_object_raw_write__zero_length(void)$/;"	f	typeref:typename:void
test_object_shortid__cleanup	my_project/libgit2/tests/libgit2/object/shortid.c	/^void test_object_shortid__cleanup(void)$/;"	f	typeref:typename:void
test_object_shortid__initialize	my_project/libgit2/tests/libgit2/object/shortid.c	/^void test_object_shortid__initialize(void)$/;"	f	typeref:typename:void
test_object_shortid__select	my_project/libgit2/tests/libgit2/object/shortid.c	/^void test_object_shortid__select(void)$/;"	f	typeref:typename:void
test_object_tag_list__cleanup	my_project/libgit2/tests/libgit2/object/tag/list.c	/^void test_object_tag_list__cleanup(void)$/;"	f	typeref:typename:void
test_object_tag_list__initialize	my_project/libgit2/tests/libgit2/object/tag/list.c	/^void test_object_tag_list__initialize(void)$/;"	f	typeref:typename:void
test_object_tag_list__list_all	my_project/libgit2/tests/libgit2/object/tag/list.c	/^void test_object_tag_list__list_all(void)$/;"	f	typeref:typename:void
test_object_tag_list__list_by_pattern	my_project/libgit2/tests/libgit2/object/tag/list.c	/^void test_object_tag_list__list_by_pattern(void)$/;"	f	typeref:typename:void
test_object_tag_parse__invalid_type_fails	my_project/libgit2/tests/libgit2/object/tag/parse.c	/^void test_object_tag_parse__invalid_type_fails(void)$/;"	f	typeref:typename:void
test_object_tag_parse__malformatted_object_fails	my_project/libgit2/tests/libgit2/object/tag/parse.c	/^void test_object_tag_parse__malformatted_object_fails(void)$/;"	f	typeref:typename:void
test_object_tag_parse__misformatted_tagger_fails	my_project/libgit2/tests/libgit2/object/tag/parse.c	/^void test_object_tag_parse__misformatted_tagger_fails(void)$/;"	f	typeref:typename:void
test_object_tag_parse__missing_message_fails	my_project/libgit2/tests/libgit2/object/tag/parse.c	/^void test_object_tag_parse__missing_message_fails(void)$/;"	f	typeref:typename:void
test_object_tag_parse__missing_message_parses	my_project/libgit2/tests/libgit2/object/tag/parse.c	/^void test_object_tag_parse__missing_message_parses(void)$/;"	f	typeref:typename:void
test_object_tag_parse__missing_object_fails	my_project/libgit2/tests/libgit2/object/tag/parse.c	/^void test_object_tag_parse__missing_object_fails(void)$/;"	f	typeref:typename:void
test_object_tag_parse__missing_tagger_parses	my_project/libgit2/tests/libgit2/object/tag/parse.c	/^void test_object_tag_parse__missing_tagger_parses(void)$/;"	f	typeref:typename:void
test_object_tag_parse__missing_tagname_fails	my_project/libgit2/tests/libgit2/object/tag/parse.c	/^void test_object_tag_parse__missing_tagname_fails(void)$/;"	f	typeref:typename:void
test_object_tag_parse__missing_type_fails	my_project/libgit2/tests/libgit2/object/tag/parse.c	/^void test_object_tag_parse__missing_type_fails(void)$/;"	f	typeref:typename:void
test_object_tag_parse__no_oob_read_when_searching_message	my_project/libgit2/tests/libgit2/object/tag/parse.c	/^void test_object_tag_parse__no_oob_read_when_searching_message(void)$/;"	f	typeref:typename:void
test_object_tag_parse__unknown_field_parses	my_project/libgit2/tests/libgit2/object/tag/parse.c	/^void test_object_tag_parse__unknown_field_parses(void)$/;"	f	typeref:typename:void
test_object_tag_parse__valid_tag_parses	my_project/libgit2/tests/libgit2/object/tag/parse.c	/^void test_object_tag_parse__valid_tag_parses(void)$/;"	f	typeref:typename:void
test_object_tag_peel__can_peel_several_nested_tags_to_a_commit	my_project/libgit2/tests/libgit2/object/tag/peel.c	/^void test_object_tag_peel__can_peel_several_nested_tags_to_a_commit(void)$/;"	f	typeref:typename:void
test_object_tag_peel__can_peel_to_a_commit	my_project/libgit2/tests/libgit2/object/tag/peel.c	/^void test_object_tag_peel__can_peel_to_a_commit(void)$/;"	f	typeref:typename:void
test_object_tag_peel__can_peel_to_a_non_commit	my_project/libgit2/tests/libgit2/object/tag/peel.c	/^void test_object_tag_peel__can_peel_to_a_non_commit(void)$/;"	f	typeref:typename:void
test_object_tag_peel__cleanup	my_project/libgit2/tests/libgit2/object/tag/peel.c	/^void test_object_tag_peel__cleanup(void)$/;"	f	typeref:typename:void
test_object_tag_peel__initialize	my_project/libgit2/tests/libgit2/object/tag/peel.c	/^void test_object_tag_peel__initialize(void)$/;"	f	typeref:typename:void
test_object_tag_read__cleanup	my_project/libgit2/tests/libgit2/object/tag/read.c	/^void test_object_tag_read__cleanup(void)$/;"	f	typeref:typename:void
test_object_tag_read__extra_header_fields	my_project/libgit2/tests/libgit2/object/tag/read.c	/^void test_object_tag_read__extra_header_fields(void)$/;"	f	typeref:typename:void
test_object_tag_read__initialize	my_project/libgit2/tests/libgit2/object/tag/read.c	/^void test_object_tag_read__initialize(void)$/;"	f	typeref:typename:void
test_object_tag_read__parse	my_project/libgit2/tests/libgit2/object/tag/read.c	/^void test_object_tag_read__parse(void)$/;"	f	typeref:typename:void
test_object_tag_read__parse_without_message	my_project/libgit2/tests/libgit2/object/tag/read.c	/^void test_object_tag_read__parse_without_message(void)$/;"	f	typeref:typename:void
test_object_tag_read__parse_without_tagger	my_project/libgit2/tests/libgit2/object/tag/read.c	/^void test_object_tag_read__parse_without_tagger(void)$/;"	f	typeref:typename:void
test_object_tag_read__without_tagger_nor_message	my_project/libgit2/tests/libgit2/object/tag/read.c	/^void test_object_tag_read__without_tagger_nor_message(void)$/;"	f	typeref:typename:void
test_object_tag_write__basic	my_project/libgit2/tests/libgit2/object/tag/write.c	/^void test_object_tag_write__basic(void)$/;"	f	typeref:typename:void
test_object_tag_write__cleanup	my_project/libgit2/tests/libgit2/object/tag/write.c	/^void test_object_tag_write__cleanup(void)$/;"	f	typeref:typename:void
test_object_tag_write__creating_an_annotation_does_not_create_a_reference	my_project/libgit2/tests/libgit2/object/tag/write.c	/^void test_object_tag_write__creating_an_annotation_does_not_create_a_reference(void)$/;"	f	typeref:typename:void
test_object_tag_write__creating_an_annotation_stores_the_new_object_in_the_odb	my_project/libgit2/tests/libgit2/object/tag/write.c	/^void test_object_tag_write__creating_an_annotation_stores_the_new_object_in_the_odb(void)$/;"	f	typeref:typename:void
test_object_tag_write__creating_with_an_invalid_name_returns_EINVALIDSPEC	my_project/libgit2/tests/libgit2/object/tag/write.c	/^void test_object_tag_write__creating_with_an_invalid_name_returns_EINVALIDSPEC(void)$/;"	f	typeref:typename:void
test_object_tag_write__delete	my_project/libgit2/tests/libgit2/object/tag/write.c	/^void test_object_tag_write__delete(void)$/;"	f	typeref:typename:void
test_object_tag_write__deleting_with_an_invalid_name_returns_EINVALIDSPEC	my_project/libgit2/tests/libgit2/object/tag/write.c	/^void test_object_tag_write__deleting_with_an_invalid_name_returns_EINVALIDSPEC(void)$/;"	f	typeref:typename:void
test_object_tag_write__error_when_create_tag_with_invalid_name	my_project/libgit2/tests/libgit2/object/tag/write.c	/^void test_object_tag_write__error_when_create_tag_with_invalid_name(void)$/;"	f	typeref:typename:void
test_object_tag_write__initialize	my_project/libgit2/tests/libgit2/object/tag/write.c	/^void test_object_tag_write__initialize(void)$/;"	f	typeref:typename:void
test_object_tag_write__lightweight	my_project/libgit2/tests/libgit2/object/tag/write.c	/^void test_object_tag_write__lightweight(void)$/;"	f	typeref:typename:void
test_object_tag_write__lightweight_over_existing	my_project/libgit2/tests/libgit2/object/tag/write.c	/^void test_object_tag_write__lightweight_over_existing(void)$/;"	f	typeref:typename:void
test_object_tag_write__overwrite	my_project/libgit2/tests/libgit2/object/tag/write.c	/^void test_object_tag_write__overwrite(void)$/;"	f	typeref:typename:void
test_object_tag_write__replace	my_project/libgit2/tests/libgit2/object/tag/write.c	/^void test_object_tag_write__replace(void)$/;"	f	typeref:typename:void
test_object_tree_attributes__cleanup	my_project/libgit2/tests/libgit2/object/tree/attributes.c	/^void test_object_tree_attributes__cleanup(void)$/;"	f	typeref:typename:void
test_object_tree_attributes__ensure_correctness_of_attributes_on_insertion	my_project/libgit2/tests/libgit2/object/tree/attributes.c	/^void test_object_tree_attributes__ensure_correctness_of_attributes_on_insertion(void)$/;"	f	typeref:typename:void
test_object_tree_attributes__group_writable_tree_entries_created_with_an_antique_git_version_can_still_be_accessed	my_project/libgit2/tests/libgit2/object/tree/attributes.c	/^void test_object_tree_attributes__group_writable_tree_entries_created_with_an_antique_git_versio/;"	f	typeref:typename:void
test_object_tree_attributes__initialize	my_project/libgit2/tests/libgit2/object/tree/attributes.c	/^void test_object_tree_attributes__initialize(void)$/;"	f	typeref:typename:void
test_object_tree_attributes__normalize_600	my_project/libgit2/tests/libgit2/object/tree/attributes.c	/^void test_object_tree_attributes__normalize_600(void)$/;"	f	typeref:typename:void
test_object_tree_attributes__normalize_attributes_when_creating_a_tree_from_an_existing_one	my_project/libgit2/tests/libgit2/object/tree/attributes.c	/^void test_object_tree_attributes__normalize_attributes_when_creating_a_tree_from_an_existing_one/;"	f	typeref:typename:void
test_object_tree_attributes__treebuilder_reject_invalid_filemode	my_project/libgit2/tests/libgit2/object/tree/attributes.c	/^void test_object_tree_attributes__treebuilder_reject_invalid_filemode(void)$/;"	f	typeref:typename:void
test_object_tree_duplicateentries__cannot_create_a_duplicate_entry_building_a_tree_from_a_index_with_conflicts	my_project/libgit2/tests/libgit2/object/tree/duplicateentries.c	/^void test_object_tree_duplicateentries__cannot_create_a_duplicate_entry_building_a_tree_from_a_i/;"	f	typeref:typename:void
test_object_tree_duplicateentries__cannot_create_a_duplicate_entry_through_the_treebuilder	my_project/libgit2/tests/libgit2/object/tree/duplicateentries.c	/^void test_object_tree_duplicateentries__cannot_create_a_duplicate_entry_through_the_treebuilder(/;"	f	typeref:typename:void
test_object_tree_duplicateentries__cleanup	my_project/libgit2/tests/libgit2/object/tree/duplicateentries.c	/^void test_object_tree_duplicateentries__cleanup(void) {$/;"	f	typeref:typename:void
test_object_tree_duplicateentries__initialize	my_project/libgit2/tests/libgit2/object/tree/duplicateentries.c	/^void test_object_tree_duplicateentries__initialize(void) {$/;"	f	typeref:typename:void
test_object_tree_frompath__cleanup	my_project/libgit2/tests/libgit2/object/tree/frompath.c	/^void test_object_tree_frompath__cleanup(void)$/;"	f	typeref:typename:void
test_object_tree_frompath__fail_when_processing_an_invalid_path	my_project/libgit2/tests/libgit2/object/tree/frompath.c	/^void test_object_tree_frompath__fail_when_processing_an_invalid_path(void)$/;"	f	typeref:typename:void
test_object_tree_frompath__initialize	my_project/libgit2/tests/libgit2/object/tree/frompath.c	/^void test_object_tree_frompath__initialize(void)$/;"	f	typeref:typename:void
test_object_tree_frompath__retrieve_tree_from_path_to_treeentry	my_project/libgit2/tests/libgit2/object/tree/frompath.c	/^void test_object_tree_frompath__retrieve_tree_from_path_to_treeentry(void)$/;"	f	typeref:typename:void
test_object_tree_parse__empty_filename_fails	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^void test_object_tree_parse__empty_filename_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__invalid_mode_fails	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^void test_object_tree_parse__invalid_mode_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__leading_filename_spaces_parse	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^void test_object_tree_parse__leading_filename_spaces_parse(void)$/;"	f	typeref:typename:void
test_object_tree_parse__leading_space_fails	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^void test_object_tree_parse__leading_space_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__missing_filename_separator_fails	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^void test_object_tree_parse__missing_filename_separator_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__missing_filename_terminator_fails	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^void test_object_tree_parse__missing_filename_terminator_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__missing_mode_fails	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^void test_object_tree_parse__missing_mode_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__mode_doesnt_cause_oob_read	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^void test_object_tree_parse__mode_doesnt_cause_oob_read(void)$/;"	f	typeref:typename:void
test_object_tree_parse__multiple_entries_parse	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^void test_object_tree_parse__multiple_entries_parse(void)$/;"	f	typeref:typename:void
test_object_tree_parse__single_blob_parses	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^void test_object_tree_parse__single_blob_parses(void)$/;"	f	typeref:typename:void
test_object_tree_parse__single_tree_parses	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^void test_object_tree_parse__single_tree_parses(void)$/;"	f	typeref:typename:void
test_object_tree_parse__trailing_garbage_fails	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^void test_object_tree_parse__trailing_garbage_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__truncated_oid_fails	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^void test_object_tree_parse__truncated_oid_fails(void)$/;"	f	typeref:typename:void
test_object_tree_parse__unreasonably_large_mode_fails	my_project/libgit2/tests/libgit2/object/tree/parse.c	/^void test_object_tree_parse__unreasonably_large_mode_fails(void)$/;"	f	typeref:typename:void
test_object_tree_read__cleanup	my_project/libgit2/tests/libgit2/object/tree/read.c	/^void test_object_tree_read__cleanup(void)$/;"	f	typeref:typename:void
test_object_tree_read__initialize	my_project/libgit2/tests/libgit2/object/tree/read.c	/^void test_object_tree_read__initialize(void)$/;"	f	typeref:typename:void
test_object_tree_read__largefile	my_project/libgit2/tests/libgit2/object/tree/read.c	/^void test_object_tree_read__largefile(void)$/;"	f	typeref:typename:void
test_object_tree_read__loaded	my_project/libgit2/tests/libgit2/object/tree/read.c	/^void test_object_tree_read__loaded(void)$/;"	f	typeref:typename:void
test_object_tree_read__two	my_project/libgit2/tests/libgit2/object/tree/read.c	/^void test_object_tree_read__two(void)$/;"	f	typeref:typename:void
test_object_tree_update__add_blobs	my_project/libgit2/tests/libgit2/object/tree/update.c	/^void test_object_tree_update__add_blobs(void)$/;"	f	typeref:typename:void
test_object_tree_update__add_blobs_unsorted	my_project/libgit2/tests/libgit2/object/tree/update.c	/^void test_object_tree_update__add_blobs_unsorted(void)$/;"	f	typeref:typename:void
test_object_tree_update__add_conflict	my_project/libgit2/tests/libgit2/object/tree/update.c	/^void test_object_tree_update__add_conflict(void)$/;"	f	typeref:typename:void
test_object_tree_update__add_conflict2	my_project/libgit2/tests/libgit2/object/tree/update.c	/^void test_object_tree_update__add_conflict2(void)$/;"	f	typeref:typename:void
test_object_tree_update__cleanup	my_project/libgit2/tests/libgit2/object/tree/update.c	/^void test_object_tree_update__cleanup(void)$/;"	f	typeref:typename:void
test_object_tree_update__initialize	my_project/libgit2/tests/libgit2/object/tree/update.c	/^void test_object_tree_update__initialize(void)$/;"	f	typeref:typename:void
test_object_tree_update__remove_all_entries	my_project/libgit2/tests/libgit2/object/tree/update.c	/^void test_object_tree_update__remove_all_entries(void)$/;"	f	typeref:typename:void
test_object_tree_update__remove_blob	my_project/libgit2/tests/libgit2/object/tree/update.c	/^void test_object_tree_update__remove_blob(void)$/;"	f	typeref:typename:void
test_object_tree_update__remove_blob_deeper	my_project/libgit2/tests/libgit2/object/tree/update.c	/^void test_object_tree_update__remove_blob_deeper(void)$/;"	f	typeref:typename:void
test_object_tree_update__remove_invalid_submodule	my_project/libgit2/tests/libgit2/object/tree/update.c	/^void test_object_tree_update__remove_invalid_submodule(void)$/;"	f	typeref:typename:void
test_object_tree_update__replace_blob	my_project/libgit2/tests/libgit2/object/tree/update.c	/^void test_object_tree_update__replace_blob(void)$/;"	f	typeref:typename:void
test_object_tree_walk__0	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^void test_object_tree_walk__0(void)$/;"	f	typeref:typename:void
test_object_tree_walk__1	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^void test_object_tree_walk__1(void)$/;"	f	typeref:typename:void
test_object_tree_walk__2	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^void test_object_tree_walk__2(void)$/;"	f	typeref:typename:void
test_object_tree_walk__cleanup	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^void test_object_tree_walk__cleanup(void)$/;"	f	typeref:typename:void
test_object_tree_walk__initialize	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^void test_object_tree_walk__initialize(void)$/;"	f	typeref:typename:void
test_object_tree_write__cleanup	my_project/libgit2/tests/libgit2/object/tree/write.c	/^void test_object_tree_write__cleanup(void)$/;"	f	typeref:typename:void
test_object_tree_write__cruel_paths	my_project/libgit2/tests/libgit2/object/tree/write.c	/^void test_object_tree_write__cruel_paths(void)$/;"	f	typeref:typename:void
test_object_tree_write__filtering	my_project/libgit2/tests/libgit2/object/tree/write.c	/^void test_object_tree_write__filtering(void)$/;"	f	typeref:typename:void
test_object_tree_write__from_memory	my_project/libgit2/tests/libgit2/object/tree/write.c	/^void test_object_tree_write__from_memory(void)$/;"	f	typeref:typename:void
test_object_tree_write__initialize	my_project/libgit2/tests/libgit2/object/tree/write.c	/^void test_object_tree_write__initialize(void)$/;"	f	typeref:typename:void
test_object_tree_write__invalid_null_oid	my_project/libgit2/tests/libgit2/object/tree/write.c	/^void test_object_tree_write__invalid_null_oid(void)$/;"	f	typeref:typename:void
test_object_tree_write__object_validity	my_project/libgit2/tests/libgit2/object/tree/write.c	/^void test_object_tree_write__object_validity(void)$/;"	f	typeref:typename:void
test_object_tree_write__protect_filesystems	my_project/libgit2/tests/libgit2/object/tree/write.c	/^void test_object_tree_write__protect_filesystems(void)$/;"	f	typeref:typename:void
test_object_tree_write__removing_and_re_adding_in_treebuilder	my_project/libgit2/tests/libgit2/object/tree/write.c	/^void test_object_tree_write__removing_and_re_adding_in_treebuilder(void)$/;"	f	typeref:typename:void
test_object_tree_write__sorted_subtrees	my_project/libgit2/tests/libgit2/object/tree/write.c	/^void test_object_tree_write__sorted_subtrees(void)$/;"	f	typeref:typename:void
test_object_tree_write__subtree	my_project/libgit2/tests/libgit2/object/tree/write.c	/^void test_object_tree_write__subtree(void)$/;"	f	typeref:typename:void
test_object_validate__cannot_parse_sha1_as_sha256	my_project/libgit2/tests/libgit2/object/validate.c	/^void test_object_validate__cannot_parse_sha1_as_sha256(void)$/;"	f	typeref:typename:void
test_object_validate__cannot_parse_sha256_as_sha1	my_project/libgit2/tests/libgit2/object/validate.c	/^void test_object_validate__cannot_parse_sha256_as_sha1(void)$/;"	f	typeref:typename:void
test_object_validate__invalid_sha1	my_project/libgit2/tests/libgit2/object/validate.c	/^void test_object_validate__invalid_sha1(void)$/;"	f	typeref:typename:void
test_object_validate__invalid_sha256	my_project/libgit2/tests/libgit2/object/validate.c	/^void test_object_validate__invalid_sha256(void)$/;"	f	typeref:typename:void
test_object_validate__valid_sha1	my_project/libgit2/tests/libgit2/object/validate.c	/^void test_object_validate__valid_sha1(void)$/;"	f	typeref:typename:void
test_object_validate__valid_sha256	my_project/libgit2/tests/libgit2/object/validate.c	/^void test_object_validate__valid_sha256(void)$/;"	f	typeref:typename:void
test_odb_alternates__chained	my_project/libgit2/tests/libgit2/odb/alternates.c	/^void test_odb_alternates__chained(void)$/;"	f	typeref:typename:void
test_odb_alternates__cleanup	my_project/libgit2/tests/libgit2/odb/alternates.c	/^void test_odb_alternates__cleanup(void)$/;"	f	typeref:typename:void
test_odb_alternates__long_chain	my_project/libgit2/tests/libgit2/odb/alternates.c	/^void test_odb_alternates__long_chain(void)$/;"	f	typeref:typename:void
test_odb_backend_loose__cleanup	my_project/libgit2/tests/libgit2/odb/backend/loose.c	/^void test_odb_backend_loose__cleanup(void)$/;"	f	typeref:typename:void
test_odb_backend_loose__initialize	my_project/libgit2/tests/libgit2/odb/backend/loose.c	/^void test_odb_backend_loose__initialize(void)$/;"	f	typeref:typename:void
test_odb_backend_loose__read_from_odb	my_project/libgit2/tests/libgit2/odb/backend/loose.c	/^void test_odb_backend_loose__read_from_odb(void)$/;"	f	typeref:typename:void
test_odb_backend_loose__read_from_repo	my_project/libgit2/tests/libgit2/odb/backend/loose.c	/^void test_odb_backend_loose__read_from_repo(void)$/;"	f	typeref:typename:void
test_odb_backend_mempack__blob_create_from_buffer_succeeds	my_project/libgit2/tests/libgit2/odb/backend/mempack.c	/^void test_odb_backend_mempack__blob_create_from_buffer_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_mempack__cleanup	my_project/libgit2/tests/libgit2/odb/backend/mempack.c	/^void test_odb_backend_mempack__cleanup(void)$/;"	f	typeref:typename:void
test_odb_backend_mempack__exists_of_missing_object_fails	my_project/libgit2/tests/libgit2/odb/backend/mempack.c	/^void test_odb_backend_mempack__exists_of_missing_object_fails(void)$/;"	f	typeref:typename:void
test_odb_backend_mempack__exists_with_existing_objects_succeeds	my_project/libgit2/tests/libgit2/odb/backend/mempack.c	/^void test_odb_backend_mempack__exists_with_existing_objects_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_mempack__initialize	my_project/libgit2/tests/libgit2/odb/backend/mempack.c	/^void test_odb_backend_mempack__initialize(void)$/;"	f	typeref:typename:void
test_odb_backend_mempack__read_of_missing_object_fails	my_project/libgit2/tests/libgit2/odb/backend/mempack.c	/^void test_odb_backend_mempack__read_of_missing_object_fails(void)$/;"	f	typeref:typename:void
test_odb_backend_mempack__write_succeeds	my_project/libgit2/tests/libgit2/odb/backend/mempack.c	/^void test_odb_backend_mempack__write_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_multiple__cleanup	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^void test_odb_backend_multiple__cleanup(void)$/;"	f	typeref:typename:void
test_odb_backend_multiple__initialize	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^void test_odb_backend_multiple__initialize(void)$/;"	f	typeref:typename:void
test_odb_backend_multiple__read_prefix_with_first_empty_succeeds	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^void test_odb_backend_multiple__read_prefix_with_first_empty_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_multiple__read_prefix_with_first_matching_reads_both	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^void test_odb_backend_multiple__read_prefix_with_first_matching_reads_both(void)$/;"	f	typeref:typename:void
test_odb_backend_multiple__read_prefix_with_first_matching_succeeds_without_hash_verification	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^void test_odb_backend_multiple__read_prefix_with_first_matching_succeeds_without_hash_verificati/;"	f	typeref:typename:void
test_odb_backend_multiple__read_with_empty_first_succeeds	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^void test_odb_backend_multiple__read_with_empty_first_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_multiple__read_with_first_matching_stops	my_project/libgit2/tests/libgit2/odb/backend/multiple.c	/^void test_odb_backend_multiple__read_with_first_matching_stops(void)$/;"	f	typeref:typename:void
test_odb_backend_nobackend__cleanup	my_project/libgit2/tests/libgit2/odb/backend/nobackend.c	/^void test_odb_backend_nobackend__cleanup(void)$/;"	f	typeref:typename:void
test_odb_backend_nobackend__initialize	my_project/libgit2/tests/libgit2/odb/backend/nobackend.c	/^void test_odb_backend_nobackend__initialize(void)$/;"	f	typeref:typename:void
test_odb_backend_nobackend__write_fails_gracefully	my_project/libgit2/tests/libgit2/odb/backend/nobackend.c	/^void test_odb_backend_nobackend__write_fails_gracefully(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__cleanup	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__cleanup(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__exists_is_invoked_once_on_failure	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__exists_is_invoked_once_on_failure(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__exists_is_invoked_once_on_success	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__exists_is_invoked_once_on_success(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__initialize	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__initialize(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__read_is_invoked_once_on_failure	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__read_is_invoked_once_on_failure(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__read_is_invoked_once_on_success	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__read_is_invoked_once_on_success(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__read_is_invoked_once_when_revparsing_a_full_oid	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__read_is_invoked_once_when_revparsing_a_full_oid(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__readheader_is_invoked_once_on_failure	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__readheader_is_invoked_once_on_failure(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__readheader_is_invoked_once_on_success	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__readheader_is_invoked_once_on_success(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__readprefix_is_invoked_once_on_failure	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__readprefix_is_invoked_once_on_failure(void)$/;"	f	typeref:typename:void
test_odb_backend_nonrefreshing__readprefix_is_invoked_once_on_success	my_project/libgit2/tests/libgit2/odb/backend/nonrefreshing.c	/^void test_odb_backend_nonrefreshing__readprefix_is_invoked_once_on_success(void)$/;"	f	typeref:typename:void
test_odb_backend_refreshing__cleanup	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^void test_odb_backend_refreshing__cleanup(void)$/;"	f	typeref:typename:void
test_odb_backend_refreshing__exists_is_invoked_once_on_success	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^void test_odb_backend_refreshing__exists_is_invoked_once_on_success(void)$/;"	f	typeref:typename:void
test_odb_backend_refreshing__exists_is_invoked_twice_on_failure	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^void test_odb_backend_refreshing__exists_is_invoked_twice_on_failure(void)$/;"	f	typeref:typename:void
test_odb_backend_refreshing__initialize	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^void test_odb_backend_refreshing__initialize(void)$/;"	f	typeref:typename:void
test_odb_backend_refreshing__read_is_invoked_once_on_success	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^void test_odb_backend_refreshing__read_is_invoked_once_on_success(void)$/;"	f	typeref:typename:void
test_odb_backend_refreshing__read_is_invoked_twice_on_failure	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^void test_odb_backend_refreshing__read_is_invoked_twice_on_failure(void)$/;"	f	typeref:typename:void
test_odb_backend_refreshing__read_is_invoked_twice_when_revparsing_a_full_oid	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^void test_odb_backend_refreshing__read_is_invoked_twice_when_revparsing_a_full_oid(void)$/;"	f	typeref:typename:void
test_odb_backend_refreshing__readheader_is_invoked_once_on_success	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^void test_odb_backend_refreshing__readheader_is_invoked_once_on_success(void)$/;"	f	typeref:typename:void
test_odb_backend_refreshing__readheader_is_invoked_twice_on_failure	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^void test_odb_backend_refreshing__readheader_is_invoked_twice_on_failure(void)$/;"	f	typeref:typename:void
test_odb_backend_refreshing__readprefix_is_invoked_once_on_success	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^void test_odb_backend_refreshing__readprefix_is_invoked_once_on_success(void)$/;"	f	typeref:typename:void
test_odb_backend_refreshing__readprefix_is_invoked_twice_on_failure	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^void test_odb_backend_refreshing__readprefix_is_invoked_twice_on_failure(void)$/;"	f	typeref:typename:void
test_odb_backend_refreshing__refresh_is_invoked	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^void test_odb_backend_refreshing__refresh_is_invoked(void)$/;"	f	typeref:typename:void
test_odb_backend_refreshing__refresh_suppressed_with_no_refresh	my_project/libgit2/tests/libgit2/odb/backend/refreshing.c	/^void test_odb_backend_refreshing__refresh_suppressed_with_no_refresh(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__cleanup	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__cleanup(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__exists_fails_for_nonexisting_object	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__exists_fails_for_nonexisting_object(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__exists_prefix_succeeds	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__exists_prefix_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__exists_succeeds	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__exists_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__exists_with_ambiguous_prefix_fails	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__exists_with_ambiguous_prefix_fails(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__exists_with_highly_ambiguous_prefix	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__exists_with_highly_ambiguous_prefix(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__initialize	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__initialize(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__null_oid_is_ignored	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__null_oid_is_ignored(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_of_nonexisting_object_fails	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__read_of_nonexisting_object_fails(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_of_object_succeeds	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__read_of_object_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_prefix_of_nonexisting_object_fails	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__read_prefix_of_nonexisting_object_fails(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_prefix_succeeds	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__read_prefix_succeeds(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_with_ambiguous_prefix_fails	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__read_with_ambiguous_prefix_fails(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_with_hash_mismatch_fails	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__read_with_hash_mismatch_fails(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_with_hash_mismatch_succeeds_without_verification	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__read_with_hash_mismatch_succeeds_without_verification(void)$/;"	f	typeref:typename:void
test_odb_backend_simple__read_with_highly_ambiguous_prefix	my_project/libgit2/tests/libgit2/odb/backend/simple.c	/^void test_odb_backend_simple__read_with_highly_ambiguous_prefix(void)$/;"	f	typeref:typename:void
test_odb_emptyobjects__blob_notfound	my_project/libgit2/tests/libgit2/odb/emptyobjects.c	/^void test_odb_emptyobjects__blob_notfound(void)$/;"	f	typeref:typename:void
test_odb_emptyobjects__cleanup	my_project/libgit2/tests/libgit2/odb/emptyobjects.c	/^void test_odb_emptyobjects__cleanup(void)$/;"	f	typeref:typename:void
test_odb_emptyobjects__initialize	my_project/libgit2/tests/libgit2/odb/emptyobjects.c	/^void test_odb_emptyobjects__initialize(void)$/;"	f	typeref:typename:void
test_odb_emptyobjects__read_tree	my_project/libgit2/tests/libgit2/odb/emptyobjects.c	/^void test_odb_emptyobjects__read_tree(void)$/;"	f	typeref:typename:void
test_odb_emptyobjects__read_tree_odb	my_project/libgit2/tests/libgit2/odb/emptyobjects.c	/^void test_odb_emptyobjects__read_tree_odb(void)$/;"	f	typeref:typename:void
test_odb_foreach__cleanup	my_project/libgit2/tests/libgit2/odb/foreach.c	/^void test_odb_foreach__cleanup(void)$/;"	f	typeref:typename:void
test_odb_foreach__files_in_objects_dir	my_project/libgit2/tests/libgit2/odb/foreach.c	/^void test_odb_foreach__files_in_objects_dir(void)$/;"	f	typeref:typename:void
test_odb_foreach__foreach	my_project/libgit2/tests/libgit2/odb/foreach.c	/^void test_odb_foreach__foreach(void)$/;"	f	typeref:typename:void
test_odb_foreach__interrupt_foreach	my_project/libgit2/tests/libgit2/odb/foreach.c	/^void test_odb_foreach__interrupt_foreach(void)$/;"	f	typeref:typename:void
test_odb_foreach__one_pack	my_project/libgit2/tests/libgit2/odb/foreach.c	/^void test_odb_foreach__one_pack(void)$/;"	f	typeref:typename:void
test_odb_freshen__cleanup	my_project/libgit2/tests/libgit2/odb/freshen.c	/^void test_odb_freshen__cleanup(void)$/;"	f	typeref:typename:void
test_odb_freshen__initialize	my_project/libgit2/tests/libgit2/odb/freshen.c	/^void test_odb_freshen__initialize(void)$/;"	f	typeref:typename:void
test_odb_freshen__loose_blob	my_project/libgit2/tests/libgit2/odb/freshen.c	/^void test_odb_freshen__loose_blob(void)$/;"	f	typeref:typename:void
test_odb_freshen__loose_tree	my_project/libgit2/tests/libgit2/odb/freshen.c	/^void test_odb_freshen__loose_tree(void)$/;"	f	typeref:typename:void
test_odb_freshen__packed_object	my_project/libgit2/tests/libgit2/odb/freshen.c	/^void test_odb_freshen__packed_object(void)$/;"	f	typeref:typename:void
test_odb_freshen__readonly_object	my_project/libgit2/tests/libgit2/odb/freshen.c	/^void test_odb_freshen__readonly_object(void)$/;"	f	typeref:typename:void
test_odb_freshen__tree_during_commit	my_project/libgit2/tests/libgit2/odb/freshen.c	/^void test_odb_freshen__tree_during_commit(void)$/;"	f	typeref:typename:void
test_odb_largefiles__cleanup	my_project/libgit2/tests/libgit2/odb/largefiles.c	/^void test_odb_largefiles__cleanup(void)$/;"	f	typeref:typename:void
test_odb_largefiles__initialize	my_project/libgit2/tests/libgit2/odb/largefiles.c	/^void test_odb_largefiles__initialize(void)$/;"	f	typeref:typename:void
test_odb_largefiles__read_header	my_project/libgit2/tests/libgit2/odb/largefiles.c	/^void test_odb_largefiles__read_header(void)$/;"	f	typeref:typename:void
test_odb_largefiles__read_into_memory	my_project/libgit2/tests/libgit2/odb/largefiles.c	/^void test_odb_largefiles__read_into_memory(void)$/;"	f	typeref:typename:void
test_odb_largefiles__read_into_memory_rejected_on_32bit	my_project/libgit2/tests/libgit2/odb/largefiles.c	/^void test_odb_largefiles__read_into_memory_rejected_on_32bit(void)$/;"	f	typeref:typename:void
test_odb_largefiles__streamread	my_project/libgit2/tests/libgit2/odb/largefiles.c	/^void test_odb_largefiles__streamread(void)$/;"	f	typeref:typename:void
test_odb_largefiles__streamwrite	my_project/libgit2/tests/libgit2/odb/largefiles.c	/^void test_odb_largefiles__streamwrite(void)$/;"	f	typeref:typename:void
test_odb_largefiles__write_from_memory	my_project/libgit2/tests/libgit2/odb/largefiles.c	/^void test_odb_largefiles__write_from_memory(void)$/;"	f	typeref:typename:void
test_odb_loose__cleanup	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__cleanup(void)$/;"	f	typeref:typename:void
test_odb_loose__does_not_fsync_by_default	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__does_not_fsync_by_default(void)$/;"	f	typeref:typename:void
test_odb_loose__exists_sha1	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__exists_sha1(void)$/;"	f	typeref:typename:void
test_odb_loose__exists_sha256	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__exists_sha256(void)$/;"	f	typeref:typename:void
test_odb_loose__fsync_obeys_global_setting	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__fsync_obeys_global_setting(void)$/;"	f	typeref:typename:void
test_odb_loose__fsync_obeys_odb_option	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__fsync_obeys_odb_option(void)$/;"	f	typeref:typename:void
test_odb_loose__fsync_obeys_repo_setting	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__fsync_obeys_repo_setting(void)$/;"	f	typeref:typename:void
test_odb_loose__initialize	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__initialize(void)$/;"	f	typeref:typename:void
test_odb_loose__permissions_readonly	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__permissions_readonly(void)$/;"	f	typeref:typename:void
test_odb_loose__permissions_readwrite	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__permissions_readwrite(void)$/;"	f	typeref:typename:void
test_odb_loose__permissions_standard	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__permissions_standard(void)$/;"	f	typeref:typename:void
test_odb_loose__read_header_sha1	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__read_header_sha1(void)$/;"	f	typeref:typename:void
test_odb_loose__read_header_sha256	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__read_header_sha256(void)$/;"	f	typeref:typename:void
test_odb_loose__simple_reads_sha1	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__simple_reads_sha1(void)$/;"	f	typeref:typename:void
test_odb_loose__simple_reads_sha256	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__simple_reads_sha256(void)$/;"	f	typeref:typename:void
test_odb_loose__streaming_reads_sha1	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__streaming_reads_sha1(void)$/;"	f	typeref:typename:void
test_odb_loose__streaming_reads_sha256	my_project/libgit2/tests/libgit2/odb/loose.c	/^void test_odb_loose__streaming_reads_sha256(void)$/;"	f	typeref:typename:void
test_odb_mixed__cleanup	my_project/libgit2/tests/libgit2/odb/mixed.c	/^void test_odb_mixed__cleanup(void)$/;"	f	typeref:typename:void
test_odb_mixed__dup_oid	my_project/libgit2/tests/libgit2/odb/mixed.c	/^void test_odb_mixed__dup_oid(void) {$/;"	f	typeref:typename:void
test_odb_mixed__dup_oid_prefix_0	my_project/libgit2/tests/libgit2/odb/mixed.c	/^void test_odb_mixed__dup_oid_prefix_0(void) {$/;"	f	typeref:typename:void
test_odb_mixed__expand_ids	my_project/libgit2/tests/libgit2/odb/mixed.c	/^void test_odb_mixed__expand_ids(void)$/;"	f	typeref:typename:void
test_odb_mixed__expand_ids_cached	my_project/libgit2/tests/libgit2/odb/mixed.c	/^void test_odb_mixed__expand_ids_cached(void)$/;"	f	typeref:typename:void
test_odb_mixed__initialize	my_project/libgit2/tests/libgit2/odb/mixed.c	/^void test_odb_mixed__initialize(void)$/;"	f	typeref:typename:void
test_odb_open__cleanup	my_project/libgit2/tests/libgit2/odb/open.c	/^void test_odb_open__cleanup(void)$/;"	f	typeref:typename:void
test_odb_open__exists	my_project/libgit2/tests/libgit2/odb/open.c	/^void test_odb_open__exists(void)$/;"	f	typeref:typename:void
test_odb_open__initialize	my_project/libgit2/tests/libgit2/odb/open.c	/^void test_odb_open__initialize(void)$/;"	f	typeref:typename:void
test_odb_packed256__cleanup	my_project/libgit2/tests/libgit2/odb/packed256.c	/^void test_odb_packed256__cleanup(void)$/;"	f	typeref:typename:void
test_odb_packed256__initialize	my_project/libgit2/tests/libgit2/odb/packed256.c	/^void test_odb_packed256__initialize(void)$/;"	f	typeref:typename:void
test_odb_packed256__mass_read	my_project/libgit2/tests/libgit2/odb/packed256.c	/^void test_odb_packed256__mass_read(void)$/;"	f	typeref:typename:void
test_odb_packed256__read_header_0	my_project/libgit2/tests/libgit2/odb/packed256.c	/^void test_odb_packed256__read_header_0(void)$/;"	f	typeref:typename:void
test_odb_packed256__read_header_1	my_project/libgit2/tests/libgit2/odb/packed256.c	/^void test_odb_packed256__read_header_1(void)$/;"	f	typeref:typename:void
test_odb_packed__cleanup	my_project/libgit2/tests/libgit2/odb/packed.c	/^void test_odb_packed__cleanup(void)$/;"	f	typeref:typename:void
test_odb_packed__initialize	my_project/libgit2/tests/libgit2/odb/packed.c	/^void test_odb_packed__initialize(void)$/;"	f	typeref:typename:void
test_odb_packed__mass_read	my_project/libgit2/tests/libgit2/odb/packed.c	/^void test_odb_packed__mass_read(void)$/;"	f	typeref:typename:void
test_odb_packed__read_header_0	my_project/libgit2/tests/libgit2/odb/packed.c	/^void test_odb_packed__read_header_0(void)$/;"	f	typeref:typename:void
test_odb_packed__read_header_1	my_project/libgit2/tests/libgit2/odb/packed.c	/^void test_odb_packed__read_header_1(void)$/;"	f	typeref:typename:void
test_odb_packedone256__cleanup	my_project/libgit2/tests/libgit2/odb/packedone256.c	/^void test_odb_packedone256__cleanup(void)$/;"	f	typeref:typename:void
test_odb_packedone256__initialize	my_project/libgit2/tests/libgit2/odb/packedone256.c	/^void test_odb_packedone256__initialize(void)$/;"	f	typeref:typename:void
test_odb_packedone256__mass_read	my_project/libgit2/tests/libgit2/odb/packedone256.c	/^void test_odb_packedone256__mass_read(void)$/;"	f	typeref:typename:void
test_odb_packedone256__read_header_0	my_project/libgit2/tests/libgit2/odb/packedone256.c	/^void test_odb_packedone256__read_header_0(void)$/;"	f	typeref:typename:void
test_odb_packedone__cleanup	my_project/libgit2/tests/libgit2/odb/packedone.c	/^void test_odb_packedone__cleanup(void)$/;"	f	typeref:typename:void
test_odb_packedone__initialize	my_project/libgit2/tests/libgit2/odb/packedone.c	/^void test_odb_packedone__initialize(void)$/;"	f	typeref:typename:void
test_odb_packedone__mass_read	my_project/libgit2/tests/libgit2/odb/packedone.c	/^void test_odb_packedone__mass_read(void)$/;"	f	typeref:typename:void
test_odb_packedone__read_header_0	my_project/libgit2/tests/libgit2/odb/packedone.c	/^void test_odb_packedone__read_header_0(void)$/;"	f	typeref:typename:void
test_odb_sorting__alternate_backends_sorting	my_project/libgit2/tests/libgit2/odb/sorting.c	/^void test_odb_sorting__alternate_backends_sorting(void)$/;"	f	typeref:typename:void
test_odb_sorting__basic_backends_sorting	my_project/libgit2/tests/libgit2/odb/sorting.c	/^void test_odb_sorting__basic_backends_sorting(void)$/;"	f	typeref:typename:void
test_odb_sorting__cleanup	my_project/libgit2/tests/libgit2/odb/sorting.c	/^void test_odb_sorting__cleanup(void)$/;"	f	typeref:typename:void
test_odb_sorting__initialize	my_project/libgit2/tests/libgit2/odb/sorting.c	/^void test_odb_sorting__initialize(void)$/;"	f	typeref:typename:void
test_odb_sorting__override_default_backend_priority	my_project/libgit2/tests/libgit2/odb/sorting.c	/^void test_odb_sorting__override_default_backend_priority(void)$/;"	f	typeref:typename:void
test_odb_streamwrite__can_accept_chunks	my_project/libgit2/tests/libgit2/odb/streamwrite.c	/^void test_odb_streamwrite__can_accept_chunks(void)$/;"	f	typeref:typename:void
test_odb_streamwrite__can_detect_additional_bytes	my_project/libgit2/tests/libgit2/odb/streamwrite.c	/^void test_odb_streamwrite__can_detect_additional_bytes(void)$/;"	f	typeref:typename:void
test_odb_streamwrite__can_detect_missing_bytes	my_project/libgit2/tests/libgit2/odb/streamwrite.c	/^void test_odb_streamwrite__can_detect_missing_bytes(void)$/;"	f	typeref:typename:void
test_odb_streamwrite__cleanup	my_project/libgit2/tests/libgit2/odb/streamwrite.c	/^void test_odb_streamwrite__cleanup(void)$/;"	f	typeref:typename:void
test_odb_streamwrite__initialize	my_project/libgit2/tests/libgit2/odb/streamwrite.c	/^void test_odb_streamwrite__initialize(void)$/;"	f	typeref:typename:void
test_oids	my_project/libgit2/tests/libgit2/core/oidmap.c	/^} test_oids[0x0FFF];$/;"	v	typeref:struct:__anon2599d8ed0108[0x0FFF]
test_online_badssl__expired	my_project/libgit2/tests/libgit2/online/badssl.c	/^void test_online_badssl__expired(void)$/;"	f	typeref:typename:void
test_online_badssl__old_cipher	my_project/libgit2/tests/libgit2/online/badssl.c	/^void test_online_badssl__old_cipher(void)$/;"	f	typeref:typename:void
test_online_badssl__self_signed	my_project/libgit2/tests/libgit2/online/badssl.c	/^void test_online_badssl__self_signed(void)$/;"	f	typeref:typename:void
test_online_badssl__wrong_host	my_project/libgit2/tests/libgit2/online/badssl.c	/^void test_online_badssl__wrong_host(void)$/;"	f	typeref:typename:void
test_online_clone__azurerepos	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__azurerepos(void)$/;"	f	typeref:typename:void
test_online_clone__bitbucket_falls_back_to_specified_creds	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__bitbucket_falls_back_to_specified_creds(void)$/;"	f	typeref:typename:void
test_online_clone__bitbucket_style	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__bitbucket_style(void)$/;"	f	typeref:typename:void
test_online_clone__bitbucket_uses_creds_in_url	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__bitbucket_uses_creds_in_url(void)$/;"	f	typeref:typename:void
test_online_clone__can_cancel	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__can_cancel(void)$/;"	f	typeref:typename:void
test_online_clone__can_checkout_a_cloned_repo	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__can_checkout_a_cloned_repo(void)$/;"	f	typeref:typename:void
test_online_clone__certificate_invalid	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__certificate_invalid(void)$/;"	f	typeref:typename:void
test_online_clone__certificate_valid	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__certificate_valid(void)$/;"	f	typeref:typename:void
test_online_clone__cleanup	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__cleanup(void)$/;"	f	typeref:typename:void
test_online_clone__clone_mirror	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__clone_mirror(void)$/;"	f	typeref:typename:void
test_online_clone__connect_timeout_configurable	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__connect_timeout_configurable(void)$/;"	f	typeref:typename:void
test_online_clone__connect_timeout_default	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__connect_timeout_default(void)$/;"	f	typeref:typename:void
test_online_clone__cred_callback_called_again_on_auth_failure	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__cred_callback_called_again_on_auth_failure(void)$/;"	f	typeref:typename:void
test_online_clone__cred_callback_failure_return_code_is_tunnelled	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__cred_callback_failure_return_code_is_tunnelled(void)$/;"	f	typeref:typename:void
test_online_clone__credentials	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__credentials(void)$/;"	f	typeref:typename:void
test_online_clone__credentials_via_custom_headers	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__credentials_via_custom_headers(void)$/;"	f	typeref:typename:void
test_online_clone__custom_headers	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__custom_headers(void)$/;"	f	typeref:typename:void
test_online_clone__custom_remote_callbacks	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__custom_remote_callbacks(void)$/;"	f	typeref:typename:void
test_online_clone__empty_repository	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__empty_repository(void)$/;"	f	typeref:typename:void
test_online_clone__googlesource	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__googlesource(void)$/;"	f	typeref:typename:void
test_online_clone__initialize	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__initialize(void)$/;"	f	typeref:typename:void
test_online_clone__long_custom_header	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__long_custom_header(void)$/;"	f	typeref:typename:void
test_online_clone__namespace_bare	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__namespace_bare(void)$/;"	f	typeref:typename:void
test_online_clone__namespace_with_specified_branch	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__namespace_with_specified_branch(void)$/;"	f	typeref:typename:void
test_online_clone__network_bare	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__network_bare(void)$/;"	f	typeref:typename:void
test_online_clone__network_full	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__network_full(void)$/;"	f	typeref:typename:void
test_online_clone__path_whitespace	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__path_whitespace(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_auto_not_detected	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__proxy_auto_not_detected(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_cred_callback_after_failed_url_creds	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__proxy_cred_callback_after_failed_url_creds(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_credentials_in_environment	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__proxy_credentials_in_environment(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_credentials_in_host_port_format	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__proxy_credentials_in_host_port_format(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_credentials_in_url_https	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__proxy_credentials_in_url_https(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_credentials_in_well_formed_url	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__proxy_credentials_in_well_formed_url(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_credentials_request	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__proxy_credentials_request(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_http_host_port_in_config	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__proxy_http_host_port_in_config(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_http_host_port_in_env	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__proxy_http_host_port_in_env(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_http_host_port_in_opts	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__proxy_http_host_port_in_opts(void)$/;"	f	typeref:typename:void
test_online_clone__proxy_invalid_url	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__proxy_invalid_url(void)$/;"	f	typeref:typename:void
test_online_clone__redirect_default_fails_for_subsequent	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__redirect_default_fails_for_subsequent(void)$/;"	f	typeref:typename:void
test_online_clone__redirect_default_succeeds_for_initial	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__redirect_default_succeeds_for_initial(void)$/;"	f	typeref:typename:void
test_online_clone__redirect_initial_fails_for_subsequent	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__redirect_initial_fails_for_subsequent(void)$/;"	f	typeref:typename:void
test_online_clone__redirect_initial_succeeds_for_initial	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__redirect_initial_succeeds_for_initial(void)$/;"	f	typeref:typename:void
test_online_clone__redirect_none	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__redirect_none(void)$/;"	f	typeref:typename:void
test_online_clone__sha256	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__sha256(void)$/;"	f	typeref:typename:void
test_online_clone__ssh_auth_methods	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__ssh_auth_methods(void)$/;"	f	typeref:typename:void
test_online_clone__ssh_cannot_change_username	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__ssh_cannot_change_username(void)$/;"	f	typeref:typename:void
test_online_clone__ssh_cert	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__ssh_cert(void)$/;"	f	typeref:typename:void
test_online_clone__ssh_certcheck_accepts_unknown	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__ssh_certcheck_accepts_unknown(void)$/;"	f	typeref:typename:void
test_online_clone__ssh_certcheck_override_knownhosts	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__ssh_certcheck_override_knownhosts(void)$/;"	f	typeref:typename:void
test_online_clone__ssh_github	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__ssh_github(void)$/;"	f	typeref:typename:void
test_online_clone__ssh_memory_auth	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__ssh_memory_auth(void)$/;"	f	typeref:typename:void
test_online_clone__ssh_with_paths	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__ssh_with_paths(void)$/;"	f	typeref:typename:void
test_online_clone__start_with_http	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__start_with_http(void)$/;"	f	typeref:typename:void
test_online_clone__timeout_configurable_succeeds_slowly	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__timeout_configurable_succeeds_slowly(void)$/;"	f	typeref:typename:void
test_online_clone__timeout_configurable_times_out	my_project/libgit2/tests/libgit2/online/clone.c	/^void test_online_clone__timeout_configurable_times_out(void)$/;"	f	typeref:typename:void
test_online_customcert__cleanup	my_project/libgit2/tests/libgit2/online/customcert.c	/^void test_online_customcert__cleanup(void)$/;"	f	typeref:typename:void
test_online_customcert__file	my_project/libgit2/tests/libgit2/online/customcert.c	/^void test_online_customcert__file(void)$/;"	f	typeref:typename:void
test_online_customcert__initialize	my_project/libgit2/tests/libgit2/online/customcert.c	/^void test_online_customcert__initialize(void)$/;"	f	typeref:typename:void
test_online_customcert__path	my_project/libgit2/tests/libgit2/online/customcert.c	/^void test_online_customcert__path(void)$/;"	f	typeref:typename:void
test_online_fetch__can_cancel	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__can_cancel(void)$/;"	f	typeref:typename:void
test_online_fetch__cleanup	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__cleanup(void)$/;"	f	typeref:typename:void
test_online_fetch__default_http	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__default_http(void)$/;"	f	typeref:typename:void
test_online_fetch__default_https	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__default_https(void)$/;"	f	typeref:typename:void
test_online_fetch__doesnt_retrieve_a_pack_when_the_repository_is_up_to_date	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__doesnt_retrieve_a_pack_when_the_repository_is_up_to_date(void)$/;"	f	typeref:typename:void
test_online_fetch__fetch_twice	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__fetch_twice(void)$/;"	f	typeref:typename:void
test_online_fetch__fetch_with_empty_http_proxy	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__fetch_with_empty_http_proxy(void)$/;"	f	typeref:typename:void
test_online_fetch__initialize	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__initialize(void)$/;"	f	typeref:typename:void
test_online_fetch__ls_disconnected	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__ls_disconnected(void)$/;"	f	typeref:typename:void
test_online_fetch__no_tags_git	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__no_tags_git(void)$/;"	f	typeref:typename:void
test_online_fetch__no_tags_http	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__no_tags_http(void)$/;"	f	typeref:typename:void
test_online_fetch__proxy	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__proxy(void)$/;"	f	typeref:typename:void
test_online_fetch__reachable_commit	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__reachable_commit(void)$/;"	f	typeref:typename:void
test_online_fetch__reachable_commit_without_destination	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__reachable_commit_without_destination(void)$/;"	f	typeref:typename:void
test_online_fetch__redirect_config	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__redirect_config(void)$/;"	f	typeref:typename:void
test_online_fetch__remote_symrefs	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__remote_symrefs(void)$/;"	f	typeref:typename:void
test_online_fetch__report_unchanged_tips	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__report_unchanged_tips(void)$/;"	f	typeref:typename:void
test_online_fetch__twice	my_project/libgit2/tests/libgit2/online/fetch.c	/^void test_online_fetch__twice(void)$/;"	f	typeref:typename:void
test_online_fetchhead__cleanup	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^void test_online_fetchhead__cleanup(void)$/;"	f	typeref:typename:void
test_online_fetchhead__colon_only_dst_refspec_creates_no_branch	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^void test_online_fetchhead__colon_only_dst_refspec_creates_no_branch(void)$/;"	f	typeref:typename:void
test_online_fetchhead__creds_get_stripped	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^void test_online_fetchhead__creds_get_stripped(void)$/;"	f	typeref:typename:void
test_online_fetchhead__empty_dst_refspec_creates_no_branch	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^void test_online_fetchhead__empty_dst_refspec_creates_no_branch(void)$/;"	f	typeref:typename:void
test_online_fetchhead__explicit_dst_refspec_creates_branch	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^void test_online_fetchhead__explicit_dst_refspec_creates_branch(void)$/;"	f	typeref:typename:void
test_online_fetchhead__explicit_spec	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^void test_online_fetchhead__explicit_spec(void)$/;"	f	typeref:typename:void
test_online_fetchhead__initialize	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^void test_online_fetchhead__initialize(void)$/;"	f	typeref:typename:void
test_online_fetchhead__no_merges	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^void test_online_fetchhead__no_merges(void)$/;"	f	typeref:typename:void
test_online_fetchhead__wildcard_spec	my_project/libgit2/tests/libgit2/online/fetchhead.c	/^void test_online_fetchhead__wildcard_spec(void)$/;"	f	typeref:typename:void
test_online_push__b1	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__b1(void)$/;"	f	typeref:typename:void
test_online_push__b2	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__b2(void)$/;"	f	typeref:typename:void
test_online_push__b3	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__b3(void)$/;"	f	typeref:typename:void
test_online_push__b4	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__b4(void)$/;"	f	typeref:typename:void
test_online_push__b5	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__b5(void)$/;"	f	typeref:typename:void
test_online_push__b5_cancel	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__b5_cancel(void)$/;"	f	typeref:typename:void
test_online_push__bad_refspecs	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__bad_refspecs(void)$/;"	f	typeref:typename:void
test_online_push__cleanup	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__cleanup(void)$/;"	f	typeref:typename:void
test_online_push__configured	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__configured(void)$/;"	f	typeref:typename:void
test_online_push__delete	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__delete(void)$/;"	f	typeref:typename:void
test_online_push__expressions	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__expressions(void)$/;"	f	typeref:typename:void
test_online_push__fast_fwd	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__fast_fwd(void)$/;"	f	typeref:typename:void
test_online_push__force	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__force(void)$/;"	f	typeref:typename:void
test_online_push__implicit_tgt	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__implicit_tgt(void)$/;"	f	typeref:typename:void
test_online_push__initialize	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__initialize(void)$/;"	f	typeref:typename:void
test_online_push__multi	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__multi(void)$/;"	f	typeref:typename:void
test_online_push__noop	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__noop(void)$/;"	f	typeref:typename:void
test_online_push__notes	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__notes(void)$/;"	f	typeref:typename:void
test_online_push__options	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__options(void)$/;"	f	typeref:typename:void
test_online_push__tag_blob	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__tag_blob(void)$/;"	f	typeref:typename:void
test_online_push__tag_commit	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__tag_commit(void)$/;"	f	typeref:typename:void
test_online_push__tag_lightweight	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__tag_lightweight(void)$/;"	f	typeref:typename:void
test_online_push__tag_to_tag	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__tag_to_tag(void)$/;"	f	typeref:typename:void
test_online_push__tag_tree	my_project/libgit2/tests/libgit2/online/push.c	/^void test_online_push__tag_tree(void)$/;"	f	typeref:typename:void
test_online_remotes__detached_remote_fails_downloading	my_project/libgit2/tests/libgit2/online/remotes.c	/^void test_online_remotes__detached_remote_fails_downloading(void)$/;"	f	typeref:typename:void
test_online_remotes__detached_remote_fails_pushing	my_project/libgit2/tests/libgit2/online/remotes.c	/^void test_online_remotes__detached_remote_fails_pushing(void)$/;"	f	typeref:typename:void
test_online_remotes__detached_remote_fails_uploading	my_project/libgit2/tests/libgit2/online/remotes.c	/^void test_online_remotes__detached_remote_fails_uploading(void)$/;"	f	typeref:typename:void
test_online_remotes__detached_remote_succeeds_ls	my_project/libgit2/tests/libgit2/online/remotes.c	/^void test_online_remotes__detached_remote_succeeds_ls(void)$/;"	f	typeref:typename:void
test_online_remotes__restricted_refspecs	my_project/libgit2/tests/libgit2/online/remotes.c	/^void test_online_remotes__restricted_refspecs(void)$/;"	f	typeref:typename:void
test_online_remotes__single_branch	my_project/libgit2/tests/libgit2/online/remotes.c	/^void test_online_remotes__single_branch(void)$/;"	f	typeref:typename:void
test_online_shallow__clone_depth_five	my_project/libgit2/tests/libgit2/online/shallow.c	/^void test_online_shallow__clone_depth_five(void)$/;"	f	typeref:typename:void
test_online_shallow__clone_depth_one	my_project/libgit2/tests/libgit2/online/shallow.c	/^void test_online_shallow__clone_depth_one(void)$/;"	f	typeref:typename:void
test_online_shallow__clone_depth_zero	my_project/libgit2/tests/libgit2/online/shallow.c	/^void test_online_shallow__clone_depth_zero(void)$/;"	f	typeref:typename:void
test_online_shallow__deepen_six	my_project/libgit2/tests/libgit2/online/shallow.c	/^void test_online_shallow__deepen_six(void)$/;"	f	typeref:typename:void
test_online_shallow__preserve_unrelated_roots	my_project/libgit2/tests/libgit2/online/shallow.c	/^void test_online_shallow__preserve_unrelated_roots(void)$/;"	f	typeref:typename:void
test_online_shallow__shorten_four	my_project/libgit2/tests/libgit2/online/shallow.c	/^void test_online_shallow__shorten_four(void)$/;"	f	typeref:typename:void
test_online_shallow__unshallow	my_project/libgit2/tests/libgit2/online/shallow.c	/^void test_online_shallow__unshallow(void)$/;"	f	typeref:typename:void
test_operations	my_project/libgit2/tests/libgit2/rebase/iterator.c	/^static void test_operations(git_rebase *rebase, size_t expected_current)$/;"	f	typeref:typename:void	file:
test_pack_filelimit__cleanup	my_project/libgit2/tests/libgit2/pack/filelimit.c	/^void test_pack_filelimit__cleanup(void)$/;"	f	typeref:typename:void
test_pack_filelimit__initialize_medium	my_project/libgit2/tests/libgit2/pack/filelimit.c	/^void test_pack_filelimit__initialize_medium(void)$/;"	f	typeref:typename:void
test_pack_filelimit__initialize_tiny	my_project/libgit2/tests/libgit2/pack/filelimit.c	/^void test_pack_filelimit__initialize_tiny(void)$/;"	f	typeref:typename:void
test_pack_filelimit__initialize_unlimited	my_project/libgit2/tests/libgit2/pack/filelimit.c	/^void test_pack_filelimit__initialize_unlimited(void)$/;"	f	typeref:typename:void
test_pack_filelimit__open_repo_with_multiple_packfiles	my_project/libgit2/tests/libgit2/pack/filelimit.c	/^void test_pack_filelimit__open_repo_with_multiple_packfiles(void)$/;"	f	typeref:typename:void
test_pack_indexer__corrupt_length	my_project/libgit2/tests/libgit2/pack/indexer.c	/^void test_pack_indexer__corrupt_length(void)$/;"	f	typeref:typename:void
test_pack_indexer__fix_thin	my_project/libgit2/tests/libgit2/pack/indexer.c	/^void test_pack_indexer__fix_thin(void)$/;"	f	typeref:typename:void
test_pack_indexer__incomplete_pack_fails_with_strict	my_project/libgit2/tests/libgit2/pack/indexer.c	/^void test_pack_indexer__incomplete_pack_fails_with_strict(void)$/;"	f	typeref:typename:void
test_pack_indexer__leaky	my_project/libgit2/tests/libgit2/pack/indexer.c	/^void test_pack_indexer__leaky(void)$/;"	f	typeref:typename:void
test_pack_indexer__missing_trailer	my_project/libgit2/tests/libgit2/pack/indexer.c	/^void test_pack_indexer__missing_trailer(void)$/;"	f	typeref:typename:void
test_pack_indexer__no_tmp_files	my_project/libgit2/tests/libgit2/pack/indexer.c	/^void test_pack_indexer__no_tmp_files(void)$/;"	f	typeref:typename:void
test_pack_indexer__out_of_order	my_project/libgit2/tests/libgit2/pack/indexer.c	/^void test_pack_indexer__out_of_order(void)$/;"	f	typeref:typename:void
test_pack_indexer__out_of_order_with_connectivity_checks	my_project/libgit2/tests/libgit2/pack/indexer.c	/^void test_pack_indexer__out_of_order_with_connectivity_checks(void)$/;"	f	typeref:typename:void
test_pack_midx__lookup	my_project/libgit2/tests/libgit2/pack/midx.c	/^void test_pack_midx__lookup(void)$/;"	f	typeref:typename:void
test_pack_midx__odb_create	my_project/libgit2/tests/libgit2/pack/midx.c	/^void test_pack_midx__odb_create(void)$/;"	f	typeref:typename:void
test_pack_midx__parse	my_project/libgit2/tests/libgit2/pack/midx.c	/^void test_pack_midx__parse(void)$/;"	f	typeref:typename:void
test_pack_midx__writer	my_project/libgit2/tests/libgit2/pack/midx.c	/^void test_pack_midx__writer(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__cleanup	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^void test_pack_packbuilder__cleanup(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__create_pack	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^void test_pack_packbuilder__create_pack(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__does_not_fsync_by_default	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^void test_pack_packbuilder__does_not_fsync_by_default(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__foreach	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^void test_pack_packbuilder__foreach(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__foreach_with_cancel	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^void test_pack_packbuilder__foreach_with_cancel(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__fsync_global_setting	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^void test_pack_packbuilder__fsync_global_setting(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__fsync_repo_setting	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^void test_pack_packbuilder__fsync_repo_setting(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__get_name	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^void test_pack_packbuilder__get_name(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__initialize	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^void test_pack_packbuilder__initialize(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__keep_file_check	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^void test_pack_packbuilder__keep_file_check(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__permissions_readonly	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^void test_pack_packbuilder__permissions_readonly(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__permissions_readwrite	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^void test_pack_packbuilder__permissions_readwrite(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__permissions_standard	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^void test_pack_packbuilder__permissions_standard(void)$/;"	f	typeref:typename:void
test_pack_packbuilder__write_default_path	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^void test_pack_packbuilder__write_default_path(void)$/;"	f	typeref:typename:void
test_pack_sharing__open_two_repos	my_project/libgit2/tests/libgit2/pack/sharing.c	/^void test_pack_sharing__open_two_repos(void)$/;"	f	typeref:typename:void
test_pack_threadsafety__cleanup	my_project/libgit2/tests/libgit2/pack/threadsafety.c	/^void test_pack_threadsafety__cleanup(void)$/;"	f	typeref:typename:void
test_pack_threadsafety__initialize	my_project/libgit2/tests/libgit2/pack/threadsafety.c	/^void test_pack_threadsafety__initialize(void)$/;"	f	typeref:typename:void
test_pack_threadsafety__open_repo_in_multiple_threads	my_project/libgit2/tests/libgit2/pack/threadsafety.c	/^void test_pack_threadsafety__open_repo_in_multiple_threads(void)$/;"	f	typeref:typename:void
test_parse_invalid_diff	my_project/libgit2/tests/libgit2/diff/parse.c	/^static void test_parse_invalid_diff(const char *invalid_diff)$/;"	f	typeref:typename:void	file:
test_patch	my_project/libgit2/tests/libgit2/diff/binary.c	/^static void test_patch($/;"	f	typeref:typename:void	file:
test_patch_parse__binary_file_path_with_spaces	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__binary_file_path_with_spaces(void)$/;"	f	typeref:typename:void
test_patch_parse__binary_file_path_without_body_paths	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__binary_file_path_without_body_paths(void)$/;"	f	typeref:typename:void
test_patch_parse__binary_file_with_empty_quoted_paths	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__binary_file_with_empty_quoted_paths(void)$/;"	f	typeref:typename:void
test_patch_parse__binary_file_with_missing_paths	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__binary_file_with_missing_paths(void)$/;"	f	typeref:typename:void
test_patch_parse__binary_file_with_truncated_delta	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__binary_file_with_truncated_delta(void)$/;"	f	typeref:typename:void
test_patch_parse__binary_file_with_whitespace_paths	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__binary_file_with_whitespace_paths(void)$/;"	f	typeref:typename:void
test_patch_parse__files_with_whitespaces_succeeds	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__files_with_whitespaces_succeeds(void)$/;"	f	typeref:typename:void
test_patch_parse__invalid_patches_fails	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__invalid_patches_fails(void)$/;"	f	typeref:typename:void
test_patch_parse__leading_and_trailing_garbage	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__leading_and_trailing_garbage(void)$/;"	f	typeref:typename:void
test_patch_parse__lifetime_of_patch_does_not_depend_on_buffer	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__lifetime_of_patch_does_not_depend_on_buffer(void)$/;"	f	typeref:typename:void
test_patch_parse__line_number_overflow	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__line_number_overflow(void)$/;"	f	typeref:typename:void
test_patch_parse__memory_leak_on_multiple_paths	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__memory_leak_on_multiple_paths(void)$/;"	f	typeref:typename:void
test_patch_parse__no_newline_at_end_of_new_file	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__no_newline_at_end_of_new_file(void)$/;"	f	typeref:typename:void
test_patch_parse__no_newline_at_end_of_old_file	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__no_newline_at_end_of_old_file(void)$/;"	f	typeref:typename:void
test_patch_parse__nonpatches_fail_with_notfound	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__nonpatches_fail_with_notfound(void)$/;"	f	typeref:typename:void
test_patch_parse__original_to_change_middle	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__original_to_change_middle(void)$/;"	f	typeref:typename:void
test_patch_parse__truncated_no_newline_at_end_of_file	my_project/libgit2/tests/libgit2/patch/parse.c	/^void test_patch_parse__truncated_no_newline_at_end_of_file(void)$/;"	f	typeref:typename:void
test_patch_print__add	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__add(void)$/;"	f	typeref:typename:void
test_patch_print__append	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__append(void)$/;"	f	typeref:typename:void
test_patch_print__append_nocontext	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__append_nocontext(void)$/;"	f	typeref:typename:void
test_patch_print__binary_add	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__binary_add(void)$/;"	f	typeref:typename:void
test_patch_print__binary_add_not_shown	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__binary_add_not_shown(void)$/;"	f	typeref:typename:void
test_patch_print__binary_delete	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__binary_delete(void)$/;"	f	typeref:typename:void
test_patch_print__binary_delta	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__binary_delta(void)$/;"	f	typeref:typename:void
test_patch_print__binary_literal	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__binary_literal(void)$/;"	f	typeref:typename:void
test_patch_print__binary_not_shown	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__binary_not_shown(void)$/;"	f	typeref:typename:void
test_patch_print__change_firstline	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__change_firstline(void)$/;"	f	typeref:typename:void
test_patch_print__change_lastline	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__change_lastline(void)$/;"	f	typeref:typename:void
test_patch_print__change_middle	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__change_middle(void)$/;"	f	typeref:typename:void
test_patch_print__change_middle_nocontext	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__change_middle_nocontext(void)$/;"	f	typeref:typename:void
test_patch_print__delete	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__delete(void)$/;"	f	typeref:typename:void
test_patch_print__from_empty_file	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__from_empty_file(void)$/;"	f	typeref:typename:void
test_patch_print__modechange_modified	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__modechange_modified(void)$/;"	f	typeref:typename:void
test_patch_print__modechange_unchanged	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__modechange_unchanged(void)$/;"	f	typeref:typename:void
test_patch_print__not_reversible	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__not_reversible(void)$/;"	f	typeref:typename:void
test_patch_print__prepend	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__prepend(void)$/;"	f	typeref:typename:void
test_patch_print__prepend_and_append	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__prepend_and_append(void)$/;"	f	typeref:typename:void
test_patch_print__prepend_nocontext	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__prepend_nocontext(void)$/;"	f	typeref:typename:void
test_patch_print__rename_exact	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__rename_exact(void)$/;"	f	typeref:typename:void
test_patch_print__rename_exact_quotedname	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__rename_exact_quotedname(void)$/;"	f	typeref:typename:void
test_patch_print__rename_exact_with_mode	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__rename_exact_with_mode(void)$/;"	f	typeref:typename:void
test_patch_print__rename_similar	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__rename_similar(void)$/;"	f	typeref:typename:void
test_patch_print__rename_similar_quotedname	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__rename_similar_quotedname(void)$/;"	f	typeref:typename:void
test_patch_print__to_empty_file	my_project/libgit2/tests/libgit2/patch/print.c	/^void test_patch_print__to_empty_file(void)$/;"	f	typeref:typename:void
test_path_core__00_dirname	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__00_dirname(void)$/;"	f	typeref:typename:void
test_path_core__01_basename	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__01_basename(void)$/;"	f	typeref:typename:void
test_path_core__05_joins	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__05_joins(void)$/;"	f	typeref:typename:void
test_path_core__06_long_joins	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__06_long_joins(void)$/;"	f	typeref:typename:void
test_path_core__07_path_to_dir	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__07_path_to_dir(void)$/;"	f	typeref:typename:void
test_path_core__08_self_join	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__08_self_join(void)$/;"	f	typeref:typename:void
test_path_core__09_percent_decode	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__09_percent_decode(void)$/;"	f	typeref:typename:void
test_path_core__10_fromurl	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__10_fromurl(void)$/;"	f	typeref:typename:void
test_path_core__11_walkup	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__11_walkup(void)$/;"	f	typeref:typename:void
test_path_core__11a_walkup_cancel	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__11a_walkup_cancel(void)$/;"	f	typeref:typename:void
test_path_core__12_offset_to_path_root	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__12_offset_to_path_root(void)$/;"	f	typeref:typename:void
test_path_core__13_cannot_prettify_a_non_existing_file	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__13_cannot_prettify_a_non_existing_file(void)$/;"	f	typeref:typename:void
test_path_core__14_apply_relative	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__14_apply_relative(void)$/;"	f	typeref:typename:void
test_path_core__15_resolve_relative	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__15_resolve_relative(void)$/;"	f	typeref:typename:void
test_path_core__16_resolve_relative	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__16_resolve_relative(void)$/;"	f	typeref:typename:void
test_path_core__cleanup	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__cleanup(void)$/;"	f	typeref:typename:void
test_path_core__dirlen	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__dirlen(void)$/;"	f	typeref:typename:void
test_path_core__find_exe_in_path	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__find_exe_in_path(void)$/;"	f	typeref:typename:void
test_path_core__initialize	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__initialize(void)$/;"	f	typeref:typename:void
test_path_core__is_root	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__is_root(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_backslash	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__isvalid_backslash(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_dos_paths	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__isvalid_dos_paths(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_dos_paths_withnum	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__isvalid_dos_paths_withnum(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_dot_and_dotdot	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__isvalid_dot_and_dotdot(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_empty_dir_component	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__isvalid_empty_dir_component(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_nt_chars	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__isvalid_nt_chars(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_standard	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__isvalid_standard(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_standard_str	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__isvalid_standard_str(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_trailing_colon	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__isvalid_trailing_colon(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_trailing_dot	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__isvalid_trailing_dot(void)$/;"	f	typeref:typename:void
test_path_core__isvalid_trailing_space	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__isvalid_trailing_space(void)$/;"	f	typeref:typename:void
test_path_core__join_unrooted	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__join_unrooted(void)$/;"	f	typeref:typename:void
test_path_core__join_unrooted_respects_funny_windows_roots	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__join_unrooted_respects_funny_windows_roots(void)$/;"	f	typeref:typename:void
test_path_core__make_relative	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__make_relative(void)$/;"	f	typeref:typename:void
test_path_core__validate_current_user_ownership	my_project/libgit2/tests/util/path/core.c	/^void test_path_core__validate_current_user_ownership(void)$/;"	f	typeref:typename:void
test_path_validate__cleanup	my_project/libgit2/tests/libgit2/path/validate.c	/^void test_path_validate__cleanup(void)$/;"	f	typeref:typename:void
test_path_validate__length	my_project/libgit2/tests/libgit2/path/validate.c	/^void test_path_validate__length(void)$/;"	f	typeref:typename:void
test_path_validate__length_with_core_longpath	my_project/libgit2/tests/libgit2/path/validate.c	/^void test_path_validate__length_with_core_longpath(void)$/;"	f	typeref:typename:void
test_path_win32__8dot3_name	my_project/libgit2/tests/util/path/win32.c	/^void test_path_win32__8dot3_name(void)$/;"	f	typeref:typename:void
test_path_win32__absolute_from_no_drive_letter	my_project/libgit2/tests/util/path/win32.c	/^void test_path_win32__absolute_from_no_drive_letter(void)$/;"	f	typeref:typename:void
test_path_win32__absolute_from_relative	my_project/libgit2/tests/util/path/win32.c	/^void test_path_win32__absolute_from_relative(void)$/;"	f	typeref:typename:void
test_path_win32__canonicalize	my_project/libgit2/tests/util/path/win32.c	/^void test_path_win32__canonicalize(void)$/;"	f	typeref:typename:void
test_path_win32__dot_and_dotdot	my_project/libgit2/tests/util/path/win32.c	/^void test_path_win32__dot_and_dotdot(void)$/;"	f	typeref:typename:void
test_path_win32__honors_max_path	my_project/libgit2/tests/util/path/win32.c	/^void test_path_win32__honors_max_path(void)$/;"	f	typeref:typename:void
test_path_win32__keeps_relative	my_project/libgit2/tests/util/path/win32.c	/^void test_path_win32__keeps_relative(void)$/;"	f	typeref:typename:void
test_path_win32__realpath	my_project/libgit2/tests/util/path/win32.c	/^void test_path_win32__realpath(void)$/;"	f	typeref:typename:void
test_path_win32__remove_namespace	my_project/libgit2/tests/util/path/win32.c	/^void test_path_win32__remove_namespace(void)$/;"	f	typeref:typename:void
test_path_win32__removes_trailing_slash	my_project/libgit2/tests/util/path/win32.c	/^void test_path_win32__removes_trailing_slash(void)$/;"	f	typeref:typename:void
test_path_win32__squashes_multiple_slashes	my_project/libgit2/tests/util/path/win32.c	/^void test_path_win32__squashes_multiple_slashes(void)$/;"	f	typeref:typename:void
test_path_win32__unc	my_project/libgit2/tests/util/path/win32.c	/^void test_path_win32__unc(void)$/;"	f	typeref:typename:void
test_path_win32__utf8_to_utf16	my_project/libgit2/tests/util/path/win32.c	/^void test_path_win32__utf8_to_utf16(void)$/;"	f	typeref:typename:void
test_perf_merge__m1	my_project/libgit2/tests/libgit2/perf/merge.c	/^void test_perf_merge__m1(void)$/;"	f	typeref:typename:void
test_pool__0	my_project/libgit2/tests/util/pool.c	/^void test_pool__0(void)$/;"	f	typeref:typename:void
test_pool__1	my_project/libgit2/tests/util/pool.c	/^void test_pool__1(void)$/;"	f	typeref:typename:void
test_pool__strndup_limit	my_project/libgit2/tests/util/pool.c	/^void test_pool__strndup_limit(void)$/;"	f	typeref:typename:void
test_posix__inet_pton	my_project/libgit2/tests/util/posix.c	/^void test_posix__inet_pton(void)$/;"	f	typeref:typename:void
test_posix__initialize	my_project/libgit2/tests/util/posix.c	/^void test_posix__initialize(void)$/;"	f	typeref:typename:void
test_posix__relative_symlink	my_project/libgit2/tests/util/posix.c	/^void test_posix__relative_symlink(void)$/;"	f	typeref:typename:void
test_posix__symlink_resolves_to_correct_type	my_project/libgit2/tests/util/posix.c	/^void test_posix__symlink_resolves_to_correct_type(void)$/;"	f	typeref:typename:void
test_posix__symlink_to_file_across_dirs	my_project/libgit2/tests/util/posix.c	/^void test_posix__symlink_to_file_across_dirs(void)$/;"	f	typeref:typename:void
test_posix__unlink_removes_symlink	my_project/libgit2/tests/util/posix.c	/^void test_posix__unlink_removes_symlink(void)$/;"	f	typeref:typename:void
test_posix__utimes	my_project/libgit2/tests/util/posix.c	/^void test_posix__utimes(void)$/;"	f	typeref:typename:void
test_pqueue__interleave_inserts_and_pops	my_project/libgit2/tests/util/pqueue.c	/^void test_pqueue__interleave_inserts_and_pops(void)$/;"	f	typeref:typename:void
test_pqueue__interleaved_pushes_and_pops	my_project/libgit2/tests/util/pqueue.c	/^void test_pqueue__interleaved_pushes_and_pops(void)$/;"	f	typeref:typename:void
test_pqueue__items_are_put_in_order	my_project/libgit2/tests/util/pqueue.c	/^void test_pqueue__items_are_put_in_order(void)$/;"	f	typeref:typename:void
test_pqueue__max_heap_size	my_project/libgit2/tests/util/pqueue.c	/^void test_pqueue__max_heap_size(void)$/;"	f	typeref:typename:void
test_pqueue__max_heap_size_without_comparison	my_project/libgit2/tests/util/pqueue.c	/^void test_pqueue__max_heap_size_without_comparison(void)$/;"	f	typeref:typename:void
test_process_env__can_add_env	my_project/libgit2/tests/util/process/env.c	/^void test_process_env__can_add_env(void)$/;"	f	typeref:typename:void
test_process_env__can_clear_env	my_project/libgit2/tests/util/process/env.c	/^void test_process_env__can_clear_env(void)$/;"	f	typeref:typename:void
test_process_env__can_propagate_env	my_project/libgit2/tests/util/process/env.c	/^void test_process_env__can_propagate_env(void)$/;"	f	typeref:typename:void
test_process_env__can_remove_env	my_project/libgit2/tests/util/process/env.c	/^void test_process_env__can_remove_env(void)$/;"	f	typeref:typename:void
test_process_env__cleanup	my_project/libgit2/tests/util/process/env.c	/^void test_process_env__cleanup(void)$/;"	f	typeref:typename:void
test_process_env__initialize	my_project/libgit2/tests/util/process/env.c	/^void test_process_env__initialize(void)$/;"	f	typeref:typename:void
test_process_start__can_chdir	my_project/libgit2/tests/util/process/start.c	/^void test_process_start__can_chdir(void)$/;"	f	typeref:typename:void
test_process_start__cannot_chdir_to_nonexistent_dir	my_project/libgit2/tests/util/process/start.c	/^void test_process_start__cannot_chdir_to_nonexistent_dir(void)$/;"	f	typeref:typename:void
test_process_start__cleanup	my_project/libgit2/tests/util/process/start.c	/^void test_process_start__cleanup(void)$/;"	f	typeref:typename:void
test_process_start__initialize	my_project/libgit2/tests/util/process/start.c	/^void test_process_start__initialize(void)$/;"	f	typeref:typename:void
test_process_start__not_found	my_project/libgit2/tests/util/process/start.c	/^void test_process_start__not_found(void)$/;"	f	typeref:typename:void
test_process_start__redirect_stdio	my_project/libgit2/tests/util/process/start.c	/^void test_process_start__redirect_stdio(void)$/;"	f	typeref:typename:void
test_process_start__returncode	my_project/libgit2/tests/util/process/start.c	/^void test_process_start__returncode(void)$/;"	f	typeref:typename:void
test_process_win32__cmdline_escapes_backslash	my_project/libgit2/tests/util/process/win32.c	/^void test_process_win32__cmdline_escapes_backslash(void)$/;"	f	typeref:typename:void
test_process_win32__cmdline_escapes_quotes	my_project/libgit2/tests/util/process/win32.c	/^void test_process_win32__cmdline_escapes_quotes(void)$/;"	f	typeref:typename:void
test_process_win32__cmdline_escapes_whitespace	my_project/libgit2/tests/util/process/win32.c	/^void test_process_win32__cmdline_escapes_whitespace(void)$/;"	f	typeref:typename:void
test_process_win32__cmdline_is_whitespace_delimited	my_project/libgit2/tests/util/process/win32.c	/^void test_process_win32__cmdline_is_whitespace_delimited(void)$/;"	f	typeref:typename:void
test_qsort__array_with_equal_entries	my_project/libgit2/tests/util/qsort.c	/^void test_qsort__array_with_equal_entries(void)$/;"	f	typeref:typename:void
test_qsort__array_with_single_entry	my_project/libgit2/tests/util/qsort.c	/^void test_qsort__array_with_single_entry(void)$/;"	f	typeref:typename:void
test_qsort__sorted_array	my_project/libgit2/tests/util/qsort.c	/^void test_qsort__sorted_array(void)$/;"	f	typeref:typename:void
test_qsort__sorting_big_entries	my_project/libgit2/tests/util/qsort.c	/^void test_qsort__sorting_big_entries(void)$/;"	f	typeref:typename:void
test_qsort__sorting_strings	my_project/libgit2/tests/util/qsort.c	/^void test_qsort__sorting_strings(void)$/;"	f	typeref:typename:void
test_qsort__unsorted_array	my_project/libgit2/tests/util/qsort.c	/^void test_qsort__unsorted_array(void)$/;"	f	typeref:typename:void
test_rangelike	my_project/libgit2/tests/libgit2/refs/revparse.c	/^static void test_rangelike(const char *rangelike,$/;"	f	typeref:typename:void	file:
test_read_header	my_project/libgit2/tests/libgit2/odb/loose.c	/^static void test_read_header(object_data *data)$/;"	f	typeref:typename:void	file:
test_read_object	my_project/libgit2/tests/libgit2/odb/loose.c	/^static void test_read_object(object_data *data)$/;"	f	typeref:typename:void	file:
test_readstream_object	my_project/libgit2/tests/libgit2/odb/loose.c	/^static void test_readstream_object(object_data *data, size_t blocksize)$/;"	f	typeref:typename:void	file:
test_rebase_abort__cleanup	my_project/libgit2/tests/libgit2/rebase/abort.c	/^void test_rebase_abort__cleanup(void)$/;"	f	typeref:typename:void
test_rebase_abort__detached_head	my_project/libgit2/tests/libgit2/rebase/abort.c	/^void test_rebase_abort__detached_head(void)$/;"	f	typeref:typename:void
test_rebase_abort__initialize	my_project/libgit2/tests/libgit2/rebase/abort.c	/^void test_rebase_abort__initialize(void)$/;"	f	typeref:typename:void
test_rebase_abort__merge	my_project/libgit2/tests/libgit2/rebase/abort.c	/^void test_rebase_abort__merge(void)$/;"	f	typeref:typename:void
test_rebase_abort__merge_by_id	my_project/libgit2/tests/libgit2/rebase/abort.c	/^void test_rebase_abort__merge_by_id(void)$/;"	f	typeref:typename:void
test_rebase_abort__merge_by_id_immediately_after_init	my_project/libgit2/tests/libgit2/rebase/abort.c	/^void test_rebase_abort__merge_by_id_immediately_after_init(void)$/;"	f	typeref:typename:void
test_rebase_abort__merge_by_revspec	my_project/libgit2/tests/libgit2/rebase/abort.c	/^void test_rebase_abort__merge_by_revspec(void)$/;"	f	typeref:typename:void
test_rebase_abort__merge_immediately_after_init	my_project/libgit2/tests/libgit2/rebase/abort.c	/^void test_rebase_abort__merge_immediately_after_init(void)$/;"	f	typeref:typename:void
test_rebase_abort__old_style_head_file	my_project/libgit2/tests/libgit2/rebase/abort.c	/^void test_rebase_abort__old_style_head_file(void)$/;"	f	typeref:typename:void
test_rebase_inmemory__can_resolve_conflicts	my_project/libgit2/tests/libgit2/rebase/inmemory.c	/^void test_rebase_inmemory__can_resolve_conflicts(void)$/;"	f	typeref:typename:void
test_rebase_inmemory__cleanup	my_project/libgit2/tests/libgit2/rebase/inmemory.c	/^void test_rebase_inmemory__cleanup(void)$/;"	f	typeref:typename:void
test_rebase_inmemory__initialize	my_project/libgit2/tests/libgit2/rebase/inmemory.c	/^void test_rebase_inmemory__initialize(void)$/;"	f	typeref:typename:void
test_rebase_inmemory__no_common_ancestor	my_project/libgit2/tests/libgit2/rebase/inmemory.c	/^void test_rebase_inmemory__no_common_ancestor(void)$/;"	f	typeref:typename:void
test_rebase_inmemory__not_in_rebase_state	my_project/libgit2/tests/libgit2/rebase/inmemory.c	/^void test_rebase_inmemory__not_in_rebase_state(void)$/;"	f	typeref:typename:void
test_rebase_inmemory__with_directories	my_project/libgit2/tests/libgit2/rebase/inmemory.c	/^void test_rebase_inmemory__with_directories(void)$/;"	f	typeref:typename:void
test_rebase_iterator__cleanup	my_project/libgit2/tests/libgit2/rebase/iterator.c	/^void test_rebase_iterator__cleanup(void)$/;"	f	typeref:typename:void
test_rebase_iterator__initialize	my_project/libgit2/tests/libgit2/rebase/iterator.c	/^void test_rebase_iterator__initialize(void)$/;"	f	typeref:typename:void
test_rebase_iterator__iterates	my_project/libgit2/tests/libgit2/rebase/iterator.c	/^void test_rebase_iterator__iterates(void)$/;"	f	typeref:typename:void
test_rebase_iterator__iterates_inmemory	my_project/libgit2/tests/libgit2/rebase/iterator.c	/^void test_rebase_iterator__iterates_inmemory(void)$/;"	f	typeref:typename:void
test_rebase_merge__blocked_when_dirty	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__blocked_when_dirty(void)$/;"	f	typeref:typename:void
test_rebase_merge__cleanup	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__cleanup(void)$/;"	f	typeref:typename:void
test_rebase_merge__commit	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__commit(void)$/;"	f	typeref:typename:void
test_rebase_merge__commit_drops_already_applied	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__commit_drops_already_applied(void)$/;"	f	typeref:typename:void
test_rebase_merge__commit_updates_rewritten	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__commit_updates_rewritten(void)$/;"	f	typeref:typename:void
test_rebase_merge__commit_with_id	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__commit_with_id(void)$/;"	f	typeref:typename:void
test_rebase_merge__copy_notes_disabled_in_config	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__copy_notes_disabled_in_config(void)$/;"	f	typeref:typename:void
test_rebase_merge__copy_notes_off_by_default	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__copy_notes_off_by_default(void)$/;"	f	typeref:typename:void
test_rebase_merge__copy_notes_specified_in_config	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__copy_notes_specified_in_config(void)$/;"	f	typeref:typename:void
test_rebase_merge__copy_notes_specified_in_options	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__copy_notes_specified_in_options(void)$/;"	f	typeref:typename:void
test_rebase_merge__custom_checkout_options	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__custom_checkout_options(void)$/;"	f	typeref:typename:void
test_rebase_merge__custom_merge_options	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__custom_merge_options(void)$/;"	f	typeref:typename:void
test_rebase_merge__detached_finish	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__detached_finish(void)$/;"	f	typeref:typename:void
test_rebase_merge__finish	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__finish(void)$/;"	f	typeref:typename:void
test_rebase_merge__finish_with_ids	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__finish_with_ids(void)$/;"	f	typeref:typename:void
test_rebase_merge__initialize	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__initialize(void)$/;"	f	typeref:typename:void
test_rebase_merge__next	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__next(void)$/;"	f	typeref:typename:void
test_rebase_merge__next_stops_with_iterover	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__next_stops_with_iterover(void)$/;"	f	typeref:typename:void
test_rebase_merge__next_with_conflicts	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__next_with_conflicts(void)$/;"	f	typeref:typename:void
test_rebase_merge__no_common_ancestor	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__no_common_ancestor(void)$/;"	f	typeref:typename:void
test_rebase_merge__with_directories	my_project/libgit2/tests/libgit2/rebase/merge.c	/^void test_rebase_merge__with_directories(void)$/;"	f	typeref:typename:void
test_rebase_setup__blocked_for_staged_change	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__blocked_for_staged_change(void)$/;"	f	typeref:typename:void
test_rebase_setup__blocked_for_unstaged_change	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__blocked_for_unstaged_change(void)$/;"	f	typeref:typename:void
test_rebase_setup__blocked_when_in_progress	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__blocked_when_in_progress(void)$/;"	f	typeref:typename:void
test_rebase_setup__branch_with_merges	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__branch_with_merges(void)$/;"	f	typeref:typename:void
test_rebase_setup__cleanup	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__cleanup(void)$/;"	f	typeref:typename:void
test_rebase_setup__initialize	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__initialize(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__merge(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge_branch_by_id	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__merge_branch_by_id(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge_from_detached	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__merge_from_detached(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge_null_branch_uses_HEAD	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__merge_null_branch_uses_HEAD(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge_onto_and_upstream	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__merge_onto_and_upstream(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge_onto_upstream_and_branch	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__merge_onto_upstream_and_branch(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge_onto_upstream_and_branch_by_id	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__merge_onto_upstream_and_branch_by_id(void)$/;"	f	typeref:typename:void
test_rebase_setup__merge_root	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__merge_root(void)$/;"	f	typeref:typename:void
test_rebase_setup__not_blocked_for_untracked_add	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__not_blocked_for_untracked_add(void)$/;"	f	typeref:typename:void
test_rebase_setup__orphan_branch	my_project/libgit2/tests/libgit2/rebase/setup.c	/^void test_rebase_setup__orphan_branch(void)$/;"	f	typeref:typename:void
test_rebase_sign__cleanup	my_project/libgit2/tests/libgit2/rebase/sign.c	/^void test_rebase_sign__cleanup(void)$/;"	f	typeref:typename:void
test_rebase_sign__create_gpg_signed	my_project/libgit2/tests/libgit2/rebase/sign.c	/^void test_rebase_sign__create_gpg_signed(void)$/;"	f	typeref:typename:void
test_rebase_sign__create_propagates_error	my_project/libgit2/tests/libgit2/rebase/sign.c	/^void test_rebase_sign__create_propagates_error(void)$/;"	f	typeref:typename:void
test_rebase_sign__custom_signature_field	my_project/libgit2/tests/libgit2/rebase/sign.c	/^void test_rebase_sign__custom_signature_field(void)$/;"	f	typeref:typename:void
test_rebase_sign__gpg_with_no_field	my_project/libgit2/tests/libgit2/rebase/sign.c	/^void test_rebase_sign__gpg_with_no_field(void)$/;"	f	typeref:typename:void
test_rebase_sign__initialize	my_project/libgit2/tests/libgit2/rebase/sign.c	/^void test_rebase_sign__initialize(void)$/;"	f	typeref:typename:void
test_rebase_sign__passthrough_create_cb	my_project/libgit2/tests/libgit2/rebase/sign.c	/^void test_rebase_sign__passthrough_create_cb(void)$/;"	f	typeref:typename:void
test_rebase_sign__passthrough_signing_cb	my_project/libgit2/tests/libgit2/rebase/sign.c	/^void test_rebase_sign__passthrough_signing_cb(void)$/;"	f	typeref:typename:void
test_rebase_submodule__cleanup	my_project/libgit2/tests/libgit2/rebase/submodule.c	/^void test_rebase_submodule__cleanup(void)$/;"	f	typeref:typename:void
test_rebase_submodule__init_untracked	my_project/libgit2/tests/libgit2/rebase/submodule.c	/^void test_rebase_submodule__init_untracked(void)$/;"	f	typeref:typename:void
test_rebase_submodule__initialize	my_project/libgit2/tests/libgit2/rebase/submodule.c	/^void test_rebase_submodule__initialize(void)$/;"	f	typeref:typename:void
test_refs_basic__cleanup	my_project/libgit2/tests/libgit2/refs/basic.c	/^void test_refs_basic__cleanup(void)$/;"	f	typeref:typename:void
test_refs_basic__initialize	my_project/libgit2/tests/libgit2/refs/basic.c	/^void test_refs_basic__initialize(void)$/;"	f	typeref:typename:void
test_refs_basic__longpaths	my_project/libgit2/tests/libgit2/refs/basic.c	/^void test_refs_basic__longpaths(void)$/;"	f	typeref:typename:void
test_refs_basic__reference_realloc	my_project/libgit2/tests/libgit2/refs/basic.c	/^void test_refs_basic__reference_realloc(void)$/;"	f	typeref:typename:void
test_refs_branches_checkedout__head_is_not_checked_out	my_project/libgit2/tests/libgit2/refs/branches/checkedout.c	/^void test_refs_branches_checkedout__head_is_not_checked_out(void)$/;"	f	typeref:typename:void
test_refs_branches_checkedout__master_in_bare_repo_is_not_checked_out	my_project/libgit2/tests/libgit2/refs/branches/checkedout.c	/^void test_refs_branches_checkedout__master_in_bare_repo_is_not_checked_out(void)$/;"	f	typeref:typename:void
test_refs_branches_checkedout__simple_repo	my_project/libgit2/tests/libgit2/refs/branches/checkedout.c	/^void test_refs_branches_checkedout__simple_repo(void)$/;"	f	typeref:typename:void
test_refs_branches_checkedout__worktree	my_project/libgit2/tests/libgit2/refs/branches/checkedout.c	/^void test_refs_branches_checkedout__worktree(void)$/;"	f	typeref:typename:void
test_refs_branches_create__can_create_a_local_branch	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^void test_refs_branches_create__can_create_a_local_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_create__can_create_branch_with_unicode	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^void test_refs_branches_create__can_create_branch_with_unicode(void)$/;"	f	typeref:typename:void
test_refs_branches_create__can_force_create_over_an_existing_branch	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^void test_refs_branches_create__can_force_create_over_an_existing_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_create__can_force_create_over_current_branch_in_bare_repo	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^void test_refs_branches_create__can_force_create_over_current_branch_in_bare_repo(void)$/;"	f	typeref:typename:void
test_refs_branches_create__can_not_create_a_branch_if_its_name_collide_with_an_existing_one	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^void test_refs_branches_create__can_not_create_a_branch_if_its_name_collide_with_an_existing_one/;"	f	typeref:typename:void
test_refs_branches_create__cannot_force_create_over_current_branch_in_nonbare_repo	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^void test_refs_branches_create__cannot_force_create_over_current_branch_in_nonbare_repo(void)$/;"	f	typeref:typename:void
test_refs_branches_create__cleanup	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^void test_refs_branches_create__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_create__creating_a_branch_with_an_invalid_name_returns_EINVALIDSPEC	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^void test_refs_branches_create__creating_a_branch_with_an_invalid_name_returns_EINVALIDSPEC(void/;"	f	typeref:typename:void
test_refs_branches_create__error_when_create_branch_with_invalid_name	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^void test_refs_branches_create__error_when_create_branch_with_invalid_name(void)$/;"	f	typeref:typename:void
test_refs_branches_create__initialize	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^void test_refs_branches_create__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_create__name_vs_namespace	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^void test_refs_branches_create__name_vs_namespace(void)$/;"	f	typeref:typename:void
test_refs_branches_create__name_vs_namespace_fail	my_project/libgit2/tests/libgit2/refs/branches/create.c	/^void test_refs_branches_create__name_vs_namespace_fail(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__can_delete_a_branch_even_if_HEAD_is_missing	my_project/libgit2/tests/libgit2/refs/branches/delete.c	/^void test_refs_branches_delete__can_delete_a_branch_even_if_HEAD_is_missing(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__can_delete_a_branch_pointed_at_by_detached_HEAD	my_project/libgit2/tests/libgit2/refs/branches/delete.c	/^void test_refs_branches_delete__can_delete_a_branch_pointed_at_by_detached_HEAD(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__can_delete_a_branch_when_HEAD_is_unborn	my_project/libgit2/tests/libgit2/refs/branches/delete.c	/^void test_refs_branches_delete__can_delete_a_branch_when_HEAD_is_unborn(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__can_delete_a_local_branch	my_project/libgit2/tests/libgit2/refs/branches/delete.c	/^void test_refs_branches_delete__can_delete_a_local_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__can_delete_a_local_branch_with_multivar	my_project/libgit2/tests/libgit2/refs/branches/delete.c	/^void test_refs_branches_delete__can_delete_a_local_branch_with_multivar(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__can_delete_a_remote_branch	my_project/libgit2/tests/libgit2/refs/branches/delete.c	/^void test_refs_branches_delete__can_delete_a_remote_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__can_not_delete_a_branch_pointed_at_by_HEAD	my_project/libgit2/tests/libgit2/refs/branches/delete.c	/^void test_refs_branches_delete__can_not_delete_a_branch_pointed_at_by_HEAD(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__cleanup	my_project/libgit2/tests/libgit2/refs/branches/delete.c	/^void test_refs_branches_delete__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__deleting_a_branch_removes_related_configuration_data	my_project/libgit2/tests/libgit2/refs/branches/delete.c	/^void test_refs_branches_delete__deleting_a_branch_removes_related_configuration_data(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__initialize	my_project/libgit2/tests/libgit2/refs/branches/delete.c	/^void test_refs_branches_delete__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__removes_empty_folders	my_project/libgit2/tests/libgit2/refs/branches/delete.c	/^void test_refs_branches_delete__removes_empty_folders(void)$/;"	f	typeref:typename:void
test_refs_branches_delete__removes_reflog	my_project/libgit2/tests/libgit2/refs/branches/delete.c	/^void test_refs_branches_delete__removes_reflog(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__can_properly_handle_missing_HEAD	my_project/libgit2/tests/libgit2/refs/branches/ishead.c	/^void test_refs_branches_ishead__can_properly_handle_missing_HEAD(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__can_properly_handle_unborn_HEAD	my_project/libgit2/tests/libgit2/refs/branches/ishead.c	/^void test_refs_branches_ishead__can_properly_handle_unborn_HEAD(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__can_tell_if_a_branch_is_not_pointed_at_by_HEAD	my_project/libgit2/tests/libgit2/refs/branches/ishead.c	/^void test_refs_branches_ishead__can_tell_if_a_branch_is_not_pointed_at_by_HEAD(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__can_tell_if_a_branch_is_pointed_at_by_HEAD	my_project/libgit2/tests/libgit2/refs/branches/ishead.c	/^void test_refs_branches_ishead__can_tell_if_a_branch_is_pointed_at_by_HEAD(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__cleanup	my_project/libgit2/tests/libgit2/refs/branches/ishead.c	/^void test_refs_branches_ishead__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__initialize	my_project/libgit2/tests/libgit2/refs/branches/ishead.c	/^void test_refs_branches_ishead__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__only_direct_references_are_considered	my_project/libgit2/tests/libgit2/refs/branches/ishead.c	/^void test_refs_branches_ishead__only_direct_references_are_considered(void)$/;"	f	typeref:typename:void
test_refs_branches_ishead__wont_be_fooled_by_a_non_branch	my_project/libgit2/tests/libgit2/refs/branches/ishead.c	/^void test_refs_branches_ishead__wont_be_fooled_by_a_non_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_iterator__cleanup	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^void test_refs_branches_iterator__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_iterator__initialize	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^void test_refs_branches_iterator__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_iterator__mix_of_packed_and_loose	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^void test_refs_branches_iterator__mix_of_packed_and_loose(void)$/;"	f	typeref:typename:void
test_refs_branches_iterator__retrieve_all_branches	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^void test_refs_branches_iterator__retrieve_all_branches(void)$/;"	f	typeref:typename:void
test_refs_branches_iterator__retrieve_local_branches	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^void test_refs_branches_iterator__retrieve_local_branches(void)$/;"	f	typeref:typename:void
test_refs_branches_iterator__retrieve_remote_branches	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^void test_refs_branches_iterator__retrieve_remote_branches(void)$/;"	f	typeref:typename:void
test_refs_branches_iterator__retrieve_remote_symbolic_HEAD_when_present	my_project/libgit2/tests/libgit2/refs/branches/iterator.c	/^void test_refs_branches_iterator__retrieve_remote_symbolic_HEAD_when_present(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__can_retrieve_a_local_branch_all	my_project/libgit2/tests/libgit2/refs/branches/lookup.c	/^void test_refs_branches_lookup__can_retrieve_a_local_branch_all(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__can_retrieve_a_local_branch_local	my_project/libgit2/tests/libgit2/refs/branches/lookup.c	/^void test_refs_branches_lookup__can_retrieve_a_local_branch_local(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__can_retrieve_a_remote_tracking_branch_all	my_project/libgit2/tests/libgit2/refs/branches/lookup.c	/^void test_refs_branches_lookup__can_retrieve_a_remote_tracking_branch_all(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__can_retrieve_a_remote_tracking_branch_remote	my_project/libgit2/tests/libgit2/refs/branches/lookup.c	/^void test_refs_branches_lookup__can_retrieve_a_remote_tracking_branch_remote(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__cleanup	my_project/libgit2/tests/libgit2/refs/branches/lookup.c	/^void test_refs_branches_lookup__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__initialize	my_project/libgit2/tests/libgit2/refs/branches/lookup.c	/^void test_refs_branches_lookup__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__trying_to_retrieve_a_branch_with_an_invalid_name_returns_EINVALIDSPEC	my_project/libgit2/tests/libgit2/refs/branches/lookup.c	/^void test_refs_branches_lookup__trying_to_retrieve_a_branch_with_an_invalid_name_returns_EINVALI/;"	f	typeref:typename:void
test_refs_branches_lookup__trying_to_retrieve_a_local_branch_remote	my_project/libgit2/tests/libgit2/refs/branches/lookup.c	/^void test_refs_branches_lookup__trying_to_retrieve_a_local_branch_remote(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__trying_to_retrieve_a_remote_tracking_branch_local	my_project/libgit2/tests/libgit2/refs/branches/lookup.c	/^void test_refs_branches_lookup__trying_to_retrieve_a_remote_tracking_branch_local(void)$/;"	f	typeref:typename:void
test_refs_branches_lookup__trying_to_retrieve_an_unknown_branch_returns_ENOTFOUND	my_project/libgit2/tests/libgit2/refs/branches/lookup.c	/^void test_refs_branches_lookup__trying_to_retrieve_an_unknown_branch_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_refs_branches_move__can_force_move_over_an_existing_branch	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^void test_refs_branches_move__can_force_move_over_an_existing_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_move__can_move_a_local_branch	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^void test_refs_branches_move__can_move_a_local_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_move__can_move_a_local_branch_to_a_different_namespace	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^void test_refs_branches_move__can_move_a_local_branch_to_a_different_namespace(void)$/;"	f	typeref:typename:void
test_refs_branches_move__can_move_a_local_branch_to_a_partially_colliding_namespace	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^void test_refs_branches_move__can_move_a_local_branch_to_a_partially_colliding_namespace(void)$/;"	f	typeref:typename:void
test_refs_branches_move__can_move_with_unicode	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^void test_refs_branches_move__can_move_with_unicode(void)$/;"	f	typeref:typename:void
test_refs_branches_move__can_not_move_a_branch_if_its_destination_name_collide_with_an_existing_one	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^void test_refs_branches_move__can_not_move_a_branch_if_its_destination_name_collide_with_an_exis/;"	f	typeref:typename:void
test_refs_branches_move__can_not_move_a_non_branch	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^void test_refs_branches_move__can_not_move_a_non_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_move__cleanup	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^void test_refs_branches_move__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_move__failed_move_restores_reflog	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^void test_refs_branches_move__failed_move_restores_reflog(void)$/;"	f	typeref:typename:void
test_refs_branches_move__initialize	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^void test_refs_branches_move__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_move__moves_reflog_correctly	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^void test_refs_branches_move__moves_reflog_correctly(void)$/;"	f	typeref:typename:void
test_refs_branches_move__moving_a_branch_moves_related_configuration_data	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^void test_refs_branches_move__moving_a_branch_moves_related_configuration_data(void)$/;"	f	typeref:typename:void
test_refs_branches_move__moving_a_branch_with_an_invalid_name_returns_EINVALIDSPEC	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^void test_refs_branches_move__moving_a_branch_with_an_invalid_name_returns_EINVALIDSPEC(void)$/;"	f	typeref:typename:void
test_refs_branches_move__moving_the_branch_pointed_at_by_HEAD_updates_HEAD	my_project/libgit2/tests/libgit2/refs/branches/move.c	/^void test_refs_branches_move__moving_the_branch_pointed_at_by_HEAD_updates_HEAD(void)$/;"	f	typeref:typename:void
test_refs_branches_name__can_get_local_branch_name	my_project/libgit2/tests/libgit2/refs/branches/name.c	/^void test_refs_branches_name__can_get_local_branch_name(void)$/;"	f	typeref:typename:void
test_refs_branches_name__can_get_remote_branch_name	my_project/libgit2/tests/libgit2/refs/branches/name.c	/^void test_refs_branches_name__can_get_remote_branch_name(void)$/;"	f	typeref:typename:void
test_refs_branches_name__cleanup	my_project/libgit2/tests/libgit2/refs/branches/name.c	/^void test_refs_branches_name__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_name__error_when_ref_is_no_branch	my_project/libgit2/tests/libgit2/refs/branches/name.c	/^void test_refs_branches_name__error_when_ref_is_no_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_name__initialize	my_project/libgit2/tests/libgit2/refs/branches/name.c	/^void test_refs_branches_name__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_name__is_name_valid	my_project/libgit2/tests/libgit2/refs/branches/name.c	/^void test_refs_branches_name__is_name_valid(void)$/;"	f	typeref:typename:void
test_refs_branches_remote__ambiguous_remote_returns_error	my_project/libgit2/tests/libgit2/refs/branches/remote.c	/^void test_refs_branches_remote__ambiguous_remote_returns_error(void)$/;"	f	typeref:typename:void
test_refs_branches_remote__can_get_remote_for_branch	my_project/libgit2/tests/libgit2/refs/branches/remote.c	/^void test_refs_branches_remote__can_get_remote_for_branch(void)$/;"	f	typeref:typename:void
test_refs_branches_remote__cleanup	my_project/libgit2/tests/libgit2/refs/branches/remote.c	/^void test_refs_branches_remote__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_remote__initialize	my_project/libgit2/tests/libgit2/refs/branches/remote.c	/^void test_refs_branches_remote__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_remote__local_remote_returns_error	my_project/libgit2/tests/libgit2/refs/branches/remote.c	/^void test_refs_branches_remote__local_remote_returns_error(void)$/;"	f	typeref:typename:void
test_refs_branches_remote__no_matching_remote_returns_error	my_project/libgit2/tests/libgit2/refs/branches/remote.c	/^void test_refs_branches_remote__no_matching_remote_returns_error(void)$/;"	f	typeref:typename:void
test_refs_branches_upstream__can_retrieve_the_local_upstream_reference_of_a_local_branch	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^void test_refs_branches_upstream__can_retrieve_the_local_upstream_reference_of_a_local_branch(vo/;"	f	typeref:typename:void
test_refs_branches_upstream__can_retrieve_the_remote_tracking_reference_of_a_local_branch	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^void test_refs_branches_upstream__can_retrieve_the_remote_tracking_reference_of_a_local_branch(v/;"	f	typeref:typename:void
test_refs_branches_upstream__cannot_retrieve_a_remote_upstream_reference_from_a_non_branch	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^void test_refs_branches_upstream__cannot_retrieve_a_remote_upstream_reference_from_a_non_branch(/;"	f	typeref:typename:void
test_refs_branches_upstream__cleanup	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^void test_refs_branches_upstream__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_upstream__initialize	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^void test_refs_branches_upstream__initialize(void)$/;"	f	typeref:typename:void
test_refs_branches_upstream__no_fetch_refspec	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^void test_refs_branches_upstream__no_fetch_refspec(void)$/;"	f	typeref:typename:void
test_refs_branches_upstream__retrieve_a_remote_tracking_reference_from_a_branch_with_no_remote_returns_GIT_ENOTFOUND	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^void test_refs_branches_upstream__retrieve_a_remote_tracking_reference_from_a_branch_with_no_rem/;"	f	typeref:typename:void
test_refs_branches_upstream__set_unset_upstream	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^void test_refs_branches_upstream__set_unset_upstream(void)$/;"	f	typeref:typename:void
test_refs_branches_upstream__trying_to_retrieve_a_remote_tracking_reference_from_a_branch_with_no_fetchspec_returns_GIT_ENOTFOUND	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^void test_refs_branches_upstream__trying_to_retrieve_a_remote_tracking_reference_from_a_branch_w/;"	f	typeref:typename:void
test_refs_branches_upstream__trying_to_retrieve_a_remote_tracking_reference_from_a_plain_local_branch_returns_GIT_ENOTFOUND	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^void test_refs_branches_upstream__trying_to_retrieve_a_remote_tracking_reference_from_a_plain_lo/;"	f	typeref:typename:void
test_refs_branches_upstream__upstream_merge	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^void test_refs_branches_upstream__upstream_merge(void)$/;"	f	typeref:typename:void
test_refs_branches_upstream__upstream_remote	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^void test_refs_branches_upstream__upstream_remote(void)$/;"	f	typeref:typename:void
test_refs_branches_upstream__upstream_remote_empty_value	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^void test_refs_branches_upstream__upstream_remote_empty_value(void)$/;"	f	typeref:typename:void
test_refs_branches_upstreamname__can_retrieve_the_local_upstream_reference_name_of_a_local_branch	my_project/libgit2/tests/libgit2/refs/branches/upstreamname.c	/^void test_refs_branches_upstreamname__can_retrieve_the_local_upstream_reference_name_of_a_local_/;"	f	typeref:typename:void
test_refs_branches_upstreamname__can_retrieve_the_remote_tracking_reference_name_of_a_local_branch	my_project/libgit2/tests/libgit2/refs/branches/upstreamname.c	/^void test_refs_branches_upstreamname__can_retrieve_the_remote_tracking_reference_name_of_a_local/;"	f	typeref:typename:void
test_refs_branches_upstreamname__cleanup	my_project/libgit2/tests/libgit2/refs/branches/upstreamname.c	/^void test_refs_branches_upstreamname__cleanup(void)$/;"	f	typeref:typename:void
test_refs_branches_upstreamname__initialize	my_project/libgit2/tests/libgit2/refs/branches/upstreamname.c	/^void test_refs_branches_upstreamname__initialize(void)$/;"	f	typeref:typename:void
test_refs_crashes__double_free	my_project/libgit2/tests/libgit2/refs/crashes.c	/^void test_refs_crashes__double_free(void)$/;"	f	typeref:typename:void
test_refs_crashes__empty_packedrefs	my_project/libgit2/tests/libgit2/refs/crashes.c	/^void test_refs_crashes__empty_packedrefs(void)$/;"	f	typeref:typename:void
test_refs_create__cleanup	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__cleanup(void)$/;"	f	typeref:typename:void
test_refs_create__creating_a_loose_ref_with_invalid_windows_name	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__creating_a_loose_ref_with_invalid_windows_name(void)$/;"	f	typeref:typename:void
test_refs_create__creating_a_reference_with_an_invalid_name_returns_EINVALIDSPEC	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__creating_a_reference_with_an_invalid_name_returns_EINVALIDSPEC(void)$/;"	f	typeref:typename:void
test_refs_create__deep_symbolic	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__deep_symbolic(void)$/;"	f	typeref:typename:void
test_refs_create__does_not_fsync_by_default	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__does_not_fsync_by_default(void)$/;"	f	typeref:typename:void
test_refs_create__existing_dir_propagates_edirectory	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__existing_dir_propagates_edirectory(void)$/;"	f	typeref:typename:void
test_refs_create__fsyncs_when_global_opt_set	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__fsyncs_when_global_opt_set(void)$/;"	f	typeref:typename:void
test_refs_create__fsyncs_when_repo_config_set	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__fsyncs_when_repo_config_set(void)$/;"	f	typeref:typename:void
test_refs_create__initialize	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__initialize(void)$/;"	f	typeref:typename:void
test_refs_create__oid	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__oid(void)$/;"	f	typeref:typename:void
test_refs_create__oid_unknown_fails_by_default	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__oid_unknown_fails_by_default(void)$/;"	f	typeref:typename:void
test_refs_create__oid_unknown_succeeds_without_strict	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__oid_unknown_succeeds_without_strict(void)$/;"	f	typeref:typename:void
test_refs_create__propagate_eexists	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__propagate_eexists(void)$/;"	f	typeref:typename:void
test_refs_create__symbolic	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__symbolic(void)$/;"	f	typeref:typename:void
test_refs_create__symbolic_with_arbitrary_content	my_project/libgit2/tests/libgit2/refs/create.c	/^void test_refs_create__symbolic_with_arbitrary_content(void)$/;"	f	typeref:typename:void
test_refs_delete__cleanup	my_project/libgit2/tests/libgit2/refs/delete.c	/^void test_refs_delete__cleanup(void)$/;"	f	typeref:typename:void
test_refs_delete__head	my_project/libgit2/tests/libgit2/refs/delete.c	/^void test_refs_delete__head(void)$/;"	f	typeref:typename:void
test_refs_delete__initialize	my_project/libgit2/tests/libgit2/refs/delete.c	/^void test_refs_delete__initialize(void)$/;"	f	typeref:typename:void
test_refs_delete__packed_loose	my_project/libgit2/tests/libgit2/refs/delete.c	/^void test_refs_delete__packed_loose(void)$/;"	f	typeref:typename:void
test_refs_delete__packed_only	my_project/libgit2/tests/libgit2/refs/delete.c	/^void test_refs_delete__packed_only(void)$/;"	f	typeref:typename:void
test_refs_delete__remove	my_project/libgit2/tests/libgit2/refs/delete.c	/^void test_refs_delete__remove(void)$/;"	f	typeref:typename:void
test_refs_dup__cleanup	my_project/libgit2/tests/libgit2/refs/dup.c	/^void test_refs_dup__cleanup(void)$/;"	f	typeref:typename:void
test_refs_dup__direct	my_project/libgit2/tests/libgit2/refs/dup.c	/^void test_refs_dup__direct(void)$/;"	f	typeref:typename:void
test_refs_dup__initialize	my_project/libgit2/tests/libgit2/refs/dup.c	/^void test_refs_dup__initialize(void)$/;"	f	typeref:typename:void
test_refs_dup__symbolic	my_project/libgit2/tests/libgit2/refs/dup.c	/^void test_refs_dup__symbolic(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__can_cancel	my_project/libgit2/tests/libgit2/refs/foreachglob.c	/^void test_refs_foreachglob__can_cancel(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__cleanup	my_project/libgit2/tests/libgit2/refs/foreachglob.c	/^void test_refs_foreachglob__cleanup(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__initialize	my_project/libgit2/tests/libgit2/refs/foreachglob.c	/^void test_refs_foreachglob__initialize(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__retrieve_all_refs	my_project/libgit2/tests/libgit2/refs/foreachglob.c	/^void test_refs_foreachglob__retrieve_all_refs(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__retrieve_local_branches	my_project/libgit2/tests/libgit2/refs/foreachglob.c	/^void test_refs_foreachglob__retrieve_local_branches(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__retrieve_nonexistant	my_project/libgit2/tests/libgit2/refs/foreachglob.c	/^void test_refs_foreachglob__retrieve_nonexistant(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__retrieve_partially_named_references	my_project/libgit2/tests/libgit2/refs/foreachglob.c	/^void test_refs_foreachglob__retrieve_partially_named_references(void)$/;"	f	typeref:typename:void
test_refs_foreachglob__retrieve_remote_branches	my_project/libgit2/tests/libgit2/refs/foreachglob.c	/^void test_refs_foreachglob__retrieve_remote_branches(void)$/;"	f	typeref:typename:void
test_refs_isvalidname__can_detect_invalid_formats	my_project/libgit2/tests/libgit2/refs/isvalidname.c	/^void test_refs_isvalidname__can_detect_invalid_formats(void)$/;"	f	typeref:typename:void
test_refs_isvalidname__wont_hopefully_choke_on_valid_formats	my_project/libgit2/tests/libgit2/refs/isvalidname.c	/^void test_refs_isvalidname__wont_hopefully_choke_on_valid_formats(void)$/;"	f	typeref:typename:void
test_refs_iterator__cleanup	my_project/libgit2/tests/libgit2/refs/iterator.c	/^void test_refs_iterator__cleanup(void)$/;"	f	typeref:typename:void
test_refs_iterator__concurrent_delete	my_project/libgit2/tests/libgit2/refs/iterator.c	/^void test_refs_iterator__concurrent_delete(void)$/;"	f	typeref:typename:void
test_refs_iterator__empty	my_project/libgit2/tests/libgit2/refs/iterator.c	/^void test_refs_iterator__empty(void)$/;"	f	typeref:typename:void
test_refs_iterator__foreach	my_project/libgit2/tests/libgit2/refs/iterator.c	/^void test_refs_iterator__foreach(void)$/;"	f	typeref:typename:void
test_refs_iterator__foreach_can_cancel	my_project/libgit2/tests/libgit2/refs/iterator.c	/^void test_refs_iterator__foreach_can_cancel(void)$/;"	f	typeref:typename:void
test_refs_iterator__foreach_name	my_project/libgit2/tests/libgit2/refs/iterator.c	/^void test_refs_iterator__foreach_name(void)$/;"	f	typeref:typename:void
test_refs_iterator__foreach_name_can_cancel	my_project/libgit2/tests/libgit2/refs/iterator.c	/^void test_refs_iterator__foreach_name_can_cancel(void)$/;"	f	typeref:typename:void
test_refs_iterator__foreach_through_symlink	my_project/libgit2/tests/libgit2/refs/iterator.c	/^void test_refs_iterator__foreach_through_symlink(void)$/;"	f	typeref:typename:void
test_refs_iterator__initialize	my_project/libgit2/tests/libgit2/refs/iterator.c	/^void test_refs_iterator__initialize(void)$/;"	f	typeref:typename:void
test_refs_iterator__list	my_project/libgit2/tests/libgit2/refs/iterator.c	/^void test_refs_iterator__list(void)$/;"	f	typeref:typename:void
test_refs_list__all	my_project/libgit2/tests/libgit2/refs/list.c	/^void test_refs_list__all(void)$/;"	f	typeref:typename:void
test_refs_list__cleanup	my_project/libgit2/tests/libgit2/refs/list.c	/^void test_refs_list__cleanup(void)$/;"	f	typeref:typename:void
test_refs_list__do_not_retrieve_references_which_name_end_with_a_lock_extension	my_project/libgit2/tests/libgit2/refs/list.c	/^void test_refs_list__do_not_retrieve_references_which_name_end_with_a_lock_extension(void)$/;"	f	typeref:typename:void
test_refs_list__initialize	my_project/libgit2/tests/libgit2/refs/list.c	/^void test_refs_list__initialize(void)$/;"	f	typeref:typename:void
test_refs_listall__from_repository_opened_through_gitdir_path	my_project/libgit2/tests/libgit2/refs/listall.c	/^void test_refs_listall__from_repository_opened_through_gitdir_path(void)$/;"	f	typeref:typename:void
test_refs_listall__from_repository_opened_through_workdir_path	my_project/libgit2/tests/libgit2/refs/listall.c	/^void test_refs_listall__from_repository_opened_through_workdir_path(void)$/;"	f	typeref:typename:void
test_refs_listall__from_repository_with_no_trailing_newline	my_project/libgit2/tests/libgit2/refs/listall.c	/^void test_refs_listall__from_repository_with_no_trailing_newline(void)$/;"	f	typeref:typename:void
test_refs_lookup__cleanup	my_project/libgit2/tests/libgit2/refs/lookup.c	/^void test_refs_lookup__cleanup(void)$/;"	f	typeref:typename:void
test_refs_lookup__dwim_notfound	my_project/libgit2/tests/libgit2/refs/lookup.c	/^void test_refs_lookup__dwim_notfound(void)$/;"	f	typeref:typename:void
test_refs_lookup__initialize	my_project/libgit2/tests/libgit2/refs/lookup.c	/^void test_refs_lookup__initialize(void)$/;"	f	typeref:typename:void
test_refs_lookup__invalid_name	my_project/libgit2/tests/libgit2/refs/lookup.c	/^void test_refs_lookup__invalid_name(void)$/;"	f	typeref:typename:void
test_refs_lookup__namespace	my_project/libgit2/tests/libgit2/refs/lookup.c	/^void test_refs_lookup__namespace(void)$/;"	f	typeref:typename:void
test_refs_lookup__oid	my_project/libgit2/tests/libgit2/refs/lookup.c	/^void test_refs_lookup__oid(void)$/;"	f	typeref:typename:void
test_refs_lookup__with_resolve	my_project/libgit2/tests/libgit2/refs/lookup.c	/^void test_refs_lookup__with_resolve(void)$/;"	f	typeref:typename:void
test_refs_namespaces__cleanup	my_project/libgit2/tests/libgit2/refs/namespaces.c	/^void test_refs_namespaces__cleanup(void)$/;"	f	typeref:typename:void
test_refs_namespaces__get_and_set	my_project/libgit2/tests/libgit2/refs/namespaces.c	/^void test_refs_namespaces__get_and_set(void)$/;"	f	typeref:typename:void
test_refs_namespaces__initialize	my_project/libgit2/tests/libgit2/refs/namespaces.c	/^void test_refs_namespaces__initialize(void)$/;"	f	typeref:typename:void
test_refs_namespaces__namespace_doesnt_show_normal_refs	my_project/libgit2/tests/libgit2/refs/namespaces.c	/^void test_refs_namespaces__namespace_doesnt_show_normal_refs(void)$/;"	f	typeref:typename:void
test_refs_normalize__buffer_has_to_be_big_enough_to_hold_the_normalized_version	my_project/libgit2/tests/libgit2/refs/normalize.c	/^void test_refs_normalize__buffer_has_to_be_big_enough_to_hold_the_normalized_version(void)$/;"	f	typeref:typename:void
test_refs_normalize__can_normalize_a_direct_reference_name	my_project/libgit2/tests/libgit2/refs/normalize.c	/^void test_refs_normalize__can_normalize_a_direct_reference_name(void)$/;"	f	typeref:typename:void
test_refs_normalize__cannot_normalize_any_direct_reference_name	my_project/libgit2/tests/libgit2/refs/normalize.c	/^void test_refs_normalize__cannot_normalize_any_direct_reference_name(void)$/;"	f	typeref:typename:void
test_refs_normalize__jgit_suite	my_project/libgit2/tests/libgit2/refs/normalize.c	/^void test_refs_normalize__jgit_suite(void)$/;"	f	typeref:typename:void
test_refs_normalize__refspec_pattern	my_project/libgit2/tests/libgit2/refs/normalize.c	/^void test_refs_normalize__refspec_pattern(void)$/;"	f	typeref:typename:void
test_refs_normalize__symbolic	my_project/libgit2/tests/libgit2/refs/normalize.c	/^void test_refs_normalize__symbolic(void)$/;"	f	typeref:typename:void
test_refs_overwrite__cleanup	my_project/libgit2/tests/libgit2/refs/overwrite.c	/^void test_refs_overwrite__cleanup(void)$/;"	f	typeref:typename:void
test_refs_overwrite__initialize	my_project/libgit2/tests/libgit2/refs/overwrite.c	/^void test_refs_overwrite__initialize(void)$/;"	f	typeref:typename:void
test_refs_overwrite__object_id	my_project/libgit2/tests/libgit2/refs/overwrite.c	/^void test_refs_overwrite__object_id(void)$/;"	f	typeref:typename:void
test_refs_overwrite__object_id_with_symbolic	my_project/libgit2/tests/libgit2/refs/overwrite.c	/^void test_refs_overwrite__object_id_with_symbolic(void)$/;"	f	typeref:typename:void
test_refs_overwrite__symbolic	my_project/libgit2/tests/libgit2/refs/overwrite.c	/^void test_refs_overwrite__symbolic(void)$/;"	f	typeref:typename:void
test_refs_overwrite__symbolic_with_object_id	my_project/libgit2/tests/libgit2/refs/overwrite.c	/^void test_refs_overwrite__symbolic_with_object_id(void)$/;"	f	typeref:typename:void
test_refs_pack__cleanup	my_project/libgit2/tests/libgit2/refs/pack.c	/^void test_refs_pack__cleanup(void)$/;"	f	typeref:typename:void
test_refs_pack__empty	my_project/libgit2/tests/libgit2/refs/pack.c	/^void test_refs_pack__empty(void)$/;"	f	typeref:typename:void
test_refs_pack__initialize	my_project/libgit2/tests/libgit2/refs/pack.c	/^void test_refs_pack__initialize(void)$/;"	f	typeref:typename:void
test_refs_pack__loose	my_project/libgit2/tests/libgit2/refs/pack.c	/^void test_refs_pack__loose(void)$/;"	f	typeref:typename:void
test_refs_pack__symbolic	my_project/libgit2/tests/libgit2/refs/pack.c	/^void test_refs_pack__symbolic(void)$/;"	f	typeref:typename:void
test_refs_peel__can_peel_a_branch	my_project/libgit2/tests/libgit2/refs/peel.c	/^void test_refs_peel__can_peel_a_branch(void)$/;"	f	typeref:typename:void
test_refs_peel__can_peel_a_symbolic_reference	my_project/libgit2/tests/libgit2/refs/peel.c	/^void test_refs_peel__can_peel_a_symbolic_reference(void)$/;"	f	typeref:typename:void
test_refs_peel__can_peel_a_tag	my_project/libgit2/tests/libgit2/refs/peel.c	/^void test_refs_peel__can_peel_a_tag(void)$/;"	f	typeref:typename:void
test_refs_peel__can_peel_fully_peeled_packed_refs	my_project/libgit2/tests/libgit2/refs/peel.c	/^void test_refs_peel__can_peel_fully_peeled_packed_refs(void)$/;"	f	typeref:typename:void
test_refs_peel__can_peel_fully_peeled_tag_to_tag	my_project/libgit2/tests/libgit2/refs/peel.c	/^void test_refs_peel__can_peel_fully_peeled_tag_to_tag(void)$/;"	f	typeref:typename:void
test_refs_peel__can_peel_into_any_non_tag_object	my_project/libgit2/tests/libgit2/refs/peel.c	/^void test_refs_peel__can_peel_into_any_non_tag_object(void)$/;"	f	typeref:typename:void
test_refs_peel__cannot_peel_into_a_non_existing_target	my_project/libgit2/tests/libgit2/refs/peel.c	/^void test_refs_peel__cannot_peel_into_a_non_existing_target(void)$/;"	f	typeref:typename:void
test_refs_peel__cleanup	my_project/libgit2/tests/libgit2/refs/peel.c	/^void test_refs_peel__cleanup(void)$/;"	f	typeref:typename:void
test_refs_peel__initialize	my_project/libgit2/tests/libgit2/refs/peel.c	/^void test_refs_peel__initialize(void)$/;"	f	typeref:typename:void
test_refs_races__cleanup	my_project/libgit2/tests/libgit2/refs/races.c	/^void test_refs_races__cleanup(void)$/;"	f	typeref:typename:void
test_refs_races__create_matching	my_project/libgit2/tests/libgit2/refs/races.c	/^void test_refs_races__create_matching(void)$/;"	f	typeref:typename:void
test_refs_races__create_matching_zero_old	my_project/libgit2/tests/libgit2/refs/races.c	/^void test_refs_races__create_matching_zero_old(void)$/;"	f	typeref:typename:void
test_refs_races__delete	my_project/libgit2/tests/libgit2/refs/races.c	/^void test_refs_races__delete(void)$/;"	f	typeref:typename:void
test_refs_races__initialize	my_project/libgit2/tests/libgit2/refs/races.c	/^void test_refs_races__initialize(void)$/;"	f	typeref:typename:void
test_refs_races__switch_oid_to_symbolic	my_project/libgit2/tests/libgit2/refs/races.c	/^void test_refs_races__switch_oid_to_symbolic(void)$/;"	f	typeref:typename:void
test_refs_races__switch_symbolic_to_oid	my_project/libgit2/tests/libgit2/refs/races.c	/^void test_refs_races__switch_symbolic_to_oid(void)$/;"	f	typeref:typename:void
test_refs_races__symbolic_create_matching	my_project/libgit2/tests/libgit2/refs/races.c	/^void test_refs_races__symbolic_create_matching(void)$/;"	f	typeref:typename:void
test_refs_read__can_determine_if_a_reference_is_a_local_branch	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__can_determine_if_a_reference_is_a_local_branch(void)$/;"	f	typeref:typename:void
test_refs_read__can_determine_if_a_reference_is_a_note	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__can_determine_if_a_reference_is_a_note(void)$/;"	f	typeref:typename:void
test_refs_read__can_determine_if_a_reference_is_a_tag	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__can_determine_if_a_reference_is_a_tag(void)$/;"	f	typeref:typename:void
test_refs_read__chomped	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__chomped(void)$/;"	f	typeref:typename:void
test_refs_read__cleanup	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__cleanup(void)$/;"	f	typeref:typename:void
test_refs_read__head_then_master	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__head_then_master(void)$/;"	f	typeref:typename:void
test_refs_read__initialize	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__initialize(void)$/;"	f	typeref:typename:void
test_refs_read__invalid_name_returns_EINVALIDSPEC	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__invalid_name_returns_EINVALIDSPEC(void)$/;"	f	typeref:typename:void
test_refs_read__loose_first	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__loose_first(void)$/;"	f	typeref:typename:void
test_refs_read__loose_tag	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__loose_tag(void)$/;"	f	typeref:typename:void
test_refs_read__master_then_head	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__master_then_head(void)$/;"	f	typeref:typename:void
test_refs_read__nested_symbolic	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__nested_symbolic(void)$/;"	f	typeref:typename:void
test_refs_read__nonexisting_tag	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__nonexisting_tag(void)$/;"	f	typeref:typename:void
test_refs_read__packed	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__packed(void)$/;"	f	typeref:typename:void
test_refs_read__symbolic	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__symbolic(void)$/;"	f	typeref:typename:void
test_refs_read__trailing	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__trailing(void)$/;"	f	typeref:typename:void
test_refs_read__unfound_return_ENOTFOUND	my_project/libgit2/tests/libgit2/refs/read.c	/^void test_refs_read__unfound_return_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__can_drop_all_the_entries	my_project/libgit2/tests/libgit2/refs/reflog/drop.c	/^void test_refs_reflog_drop__can_drop_all_the_entries(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__can_drop_an_entry	my_project/libgit2/tests/libgit2/refs/reflog/drop.c	/^void test_refs_reflog_drop__can_drop_an_entry(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__can_drop_an_entry_and_rewrite_the_log_history	my_project/libgit2/tests/libgit2/refs/reflog/drop.c	/^void test_refs_reflog_drop__can_drop_an_entry_and_rewrite_the_log_history(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__can_drop_the_oldest_entry	my_project/libgit2/tests/libgit2/refs/reflog/drop.c	/^void test_refs_reflog_drop__can_drop_the_oldest_entry(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__can_drop_the_oldest_entry_and_rewrite_the_log_history	my_project/libgit2/tests/libgit2/refs/reflog/drop.c	/^void test_refs_reflog_drop__can_drop_the_oldest_entry_and_rewrite_the_log_history(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__can_persist_deletion_on_disk	my_project/libgit2/tests/libgit2/refs/reflog/drop.c	/^void test_refs_reflog_drop__can_persist_deletion_on_disk(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__cleanup	my_project/libgit2/tests/libgit2/refs/reflog/drop.c	/^void test_refs_reflog_drop__cleanup(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__dropping_a_non_exisiting_entry_from_the_log_returns_ENOTFOUND	my_project/libgit2/tests/libgit2/refs/reflog/drop.c	/^void test_refs_reflog_drop__dropping_a_non_exisiting_entry_from_the_log_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_refs_reflog_drop__initialize	my_project/libgit2/tests/libgit2/refs/reflog/drop.c	/^void test_refs_reflog_drop__initialize(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__branch_birth	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__branch_birth(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__cleanup	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__cleanup(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__commit_on_symbolic_ref_updates_head_reflog	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__commit_on_symbolic_ref_updates_head_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__creating_a_direct_reference	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__creating_a_direct_reference(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__creating_branches_default_messages	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__creating_branches_default_messages(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__detaching_head_default_message	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__detaching_head_default_message(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__detaching_writes_reflog	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__detaching_writes_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__initialize	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__initialize(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__moving_branch_default_message	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__moving_branch_default_message(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__newline_gets_replaced	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__newline_gets_replaced(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__orphan_branch_does_not_count	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__orphan_branch_does_not_count(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__renaming_ref	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__renaming_ref(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__setting_head_to_same_target_ignores_reflog	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__setting_head_to_same_target_ignores_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__setting_head_updates_reflog	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__setting_head_updates_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__show_merge_for_merge_commits	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__show_merge_for_merge_commits(void)$/;"	f	typeref:typename:void
test_refs_reflog_messages__updating_a_direct_reference	my_project/libgit2/tests/libgit2/refs/reflog/messages.c	/^void test_refs_reflog_messages__updating_a_direct_reference(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__append_then_read	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__append_then_read(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__append_to_HEAD_when_changing_current_branch	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__append_to_HEAD_when_changing_current_branch(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__cannot_write_a_moved_reflog	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__cannot_write_a_moved_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__cleanup	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__cleanup(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__deleting_the_reference_deletes_the_reflog	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__deleting_the_reference_deletes_the_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__do_not_append_when_no_update	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__do_not_append_when_no_update(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__fails_gracefully_on_nonempty_reflog_dir	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__fails_gracefully_on_nonempty_reflog_dir(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__initialize	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__initialize(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__logallrefupdates_bare_set_always	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__logallrefupdates_bare_set_always(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__logallrefupdates_bare_set_false	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__logallrefupdates_bare_set_false(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__logallrefupdates_bare_unset	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__logallrefupdates_bare_unset(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__logallrefupdates_nonbare_set_false	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__logallrefupdates_nonbare_set_false(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__reading_a_reflog_with_invalid_format_succeeds	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__reading_a_reflog_with_invalid_format_succeeds(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__reading_the_reflog_from_a_reference_with_no_log_returns_an_empty_one	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__reading_the_reflog_from_a_reference_with_no_log_returns_an_empty_o/;"	f	typeref:typename:void
test_refs_reflog_reflog__reference_has_reflog	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__reference_has_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__removes_empty_reflog_dir	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__removes_empty_reflog_dir(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__renaming_the_reference_moves_the_reflog	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__renaming_the_reference_moves_the_reflog(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__renaming_with_an_invalid_name_returns_EINVALIDSPEC	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__renaming_with_an_invalid_name_returns_EINVALIDSPEC(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__write_only_std_locations	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__write_only_std_locations(void)$/;"	f	typeref:typename:void
test_refs_reflog_reflog__write_when_explicitly_active	my_project/libgit2/tests/libgit2/refs/reflog/reflog.c	/^void test_refs_reflog_reflog__write_when_explicitly_active(void)$/;"	f	typeref:typename:void
test_refs_rename__cleanup	my_project/libgit2/tests/libgit2/refs/rename.c	/^void test_refs_rename__cleanup(void)$/;"	f	typeref:typename:void
test_refs_rename__force_loose	my_project/libgit2/tests/libgit2/refs/rename.c	/^void test_refs_rename__force_loose(void)$/;"	f	typeref:typename:void
test_refs_rename__force_loose_packed	my_project/libgit2/tests/libgit2/refs/rename.c	/^void test_refs_rename__force_loose_packed(void)$/;"	f	typeref:typename:void
test_refs_rename__initialize	my_project/libgit2/tests/libgit2/refs/rename.c	/^void test_refs_rename__initialize(void)$/;"	f	typeref:typename:void
test_refs_rename__invalid_name	my_project/libgit2/tests/libgit2/refs/rename.c	/^void test_refs_rename__invalid_name(void)$/;"	f	typeref:typename:void
test_refs_rename__loose	my_project/libgit2/tests/libgit2/refs/rename.c	/^void test_refs_rename__loose(void)$/;"	f	typeref:typename:void
test_refs_rename__move_up	my_project/libgit2/tests/libgit2/refs/rename.c	/^void test_refs_rename__move_up(void)$/;"	f	typeref:typename:void
test_refs_rename__name_collision	my_project/libgit2/tests/libgit2/refs/rename.c	/^void test_refs_rename__name_collision(void)$/;"	f	typeref:typename:void
test_refs_rename__overwrite	my_project/libgit2/tests/libgit2/refs/rename.c	/^void test_refs_rename__overwrite(void)$/;"	f	typeref:typename:void
test_refs_rename__packed	my_project/libgit2/tests/libgit2/refs/rename.c	/^void test_refs_rename__packed(void)$/;"	f	typeref:typename:void
test_refs_rename__packed_doesnt_pack_others	my_project/libgit2/tests/libgit2/refs/rename.c	/^void test_refs_rename__packed_doesnt_pack_others(void)$/;"	f	typeref:typename:void
test_refs_rename__prefix	my_project/libgit2/tests/libgit2/refs/rename.c	/^void test_refs_rename__prefix(void)$/;"	f	typeref:typename:void
test_refs_rename__propagate_eexists	my_project/libgit2/tests/libgit2/refs/rename.c	/^void test_refs_rename__propagate_eexists(void)$/;"	f	typeref:typename:void
test_refs_revparse__a_not_precise_enough_objectid_returns_EAMBIGUOUS	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__a_not_precise_enough_objectid_returns_EAMBIGUOUS(void)$/;"	f	typeref:typename:void
test_refs_revparse__a_too_short_objectid_returns_EAMBIGUOUS	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__a_too_short_objectid_returns_EAMBIGUOUS(void)$/;"	f	typeref:typename:void
test_refs_revparse__at_at_end_of_refname	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__at_at_end_of_refname(void)$/;"	f	typeref:typename:void
test_refs_revparse__chaining	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__chaining(void)$/;"	f	typeref:typename:void
test_refs_revparse__cleanup	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__cleanup(void)$/;"	f	typeref:typename:void
test_refs_revparse__colon	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__colon(void)$/;"	f	typeref:typename:void
test_refs_revparse__date	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__date(void)$/;"	f	typeref:typename:void
test_refs_revparse__describe_output	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__describe_output(void)$/;"	f	typeref:typename:void
test_refs_revparse__disambiguation	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__disambiguation(void)$/;"	f	typeref:typename:void
test_refs_revparse__ext_can_expand_short_reference_names	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__ext_can_expand_short_reference_names(void)$/;"	f	typeref:typename:void
test_refs_revparse__ext_retrieves_both_the_reference_and_its_target	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__ext_retrieves_both_the_reference_and_its_target(void)$/;"	f	typeref:typename:void
test_refs_revparse__ext_returns_NULL_reference_when_expression_points_at_a_revision	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__ext_returns_NULL_reference_when_expression_points_at_a_revision(void)$/;"	f	typeref:typename:void
test_refs_revparse__ext_returns_NULL_reference_when_expression_points_at_a_tree_content	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__ext_returns_NULL_reference_when_expression_points_at_a_tree_content(voi/;"	f	typeref:typename:void
test_refs_revparse__full_refs	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__full_refs(void)$/;"	f	typeref:typename:void
test_refs_revparse__head	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__head(void)$/;"	f	typeref:typename:void
test_refs_revparse__initialize	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__initialize(void)$/;"	f	typeref:typename:void
test_refs_revparse__invalid_date	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__invalid_date(void)$/;"	f	typeref:typename:void
test_refs_revparse__invalid_reference_name	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__invalid_reference_name(void)$/;"	f	typeref:typename:void
test_refs_revparse__issue_994	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__issue_994(void)$/;"	f	typeref:typename:void
test_refs_revparse__linear_history	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__linear_history(void)$/;"	f	typeref:typename:void
test_refs_revparse__nonexistant_object	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__nonexistant_object(void)$/;"	f	typeref:typename:void
test_refs_revparse__not_tag	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__not_tag(void)$/;"	f	typeref:typename:void
test_refs_revparse__nth_parent	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__nth_parent(void)$/;"	f	typeref:typename:void
test_refs_revparse__ordinal	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__ordinal(void)$/;"	f	typeref:typename:void
test_refs_revparse__parses_at_head	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__parses_at_head(void)$/;"	f	typeref:typename:void
test_refs_revparse__parses_range_operator	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__parses_range_operator(void)$/;"	f	typeref:typename:void
test_refs_revparse__partial_refs	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__partial_refs(void)$/;"	f	typeref:typename:void
test_refs_revparse__previous_head	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__previous_head(void)$/;"	f	typeref:typename:void
test_refs_revparse__range	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__range(void)$/;"	f	typeref:typename:void
test_refs_revparse__reflog_of_a_ref_under_refs	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__reflog_of_a_ref_under_refs(void)$/;"	f	typeref:typename:void
test_refs_revparse__revwalk	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__revwalk(void)$/;"	f	typeref:typename:void
test_refs_revparse__shas	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__shas(void)$/;"	f	typeref:typename:void
test_refs_revparse__to_type	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__to_type(void)$/;"	f	typeref:typename:void
test_refs_revparse__try_to_retrieve_branch_before_abbrev_sha	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__try_to_retrieve_branch_before_abbrev_sha(void)$/;"	f	typeref:typename:void
test_refs_revparse__try_to_retrieve_branch_before_described_tag	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__try_to_retrieve_branch_before_described_tag(void)$/;"	f	typeref:typename:void
test_refs_revparse__try_to_retrieve_sha_before_branch	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__try_to_retrieve_sha_before_branch(void)$/;"	f	typeref:typename:void
test_refs_revparse__uneven_sizes	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__uneven_sizes(void)$/;"	f	typeref:typename:void
test_refs_revparse__upstream	my_project/libgit2/tests/libgit2/refs/revparse.c	/^void test_refs_revparse__upstream(void)$/;"	f	typeref:typename:void
test_refs_setter__cant_update_direct_with_symbolic	my_project/libgit2/tests/libgit2/refs/setter.c	/^void test_refs_setter__cant_update_direct_with_symbolic(void)$/;"	f	typeref:typename:void
test_refs_setter__cant_update_symbolic_with_direct	my_project/libgit2/tests/libgit2/refs/setter.c	/^void test_refs_setter__cant_update_symbolic_with_direct(void)$/;"	f	typeref:typename:void
test_refs_setter__cleanup	my_project/libgit2/tests/libgit2/refs/setter.c	/^void test_refs_setter__cleanup(void)$/;"	f	typeref:typename:void
test_refs_setter__initialize	my_project/libgit2/tests/libgit2/refs/setter.c	/^void test_refs_setter__initialize(void)$/;"	f	typeref:typename:void
test_refs_setter__update_direct	my_project/libgit2/tests/libgit2/refs/setter.c	/^void test_refs_setter__update_direct(void)$/;"	f	typeref:typename:void
test_refs_setter__update_symbolic	my_project/libgit2/tests/libgit2/refs/setter.c	/^void test_refs_setter__update_symbolic(void)$/;"	f	typeref:typename:void
test_refs_shorthand__0	my_project/libgit2/tests/libgit2/refs/shorthand.c	/^void test_refs_shorthand__0(void)$/;"	f	typeref:typename:void
test_refs_tags_name__is_name_valid	my_project/libgit2/tests/libgit2/refs/tags/name.c	/^void test_refs_tags_name__is_name_valid(void)$/;"	f	typeref:typename:void
test_refs_transactions__cleanup	my_project/libgit2/tests/libgit2/refs/transactions.c	/^void test_refs_transactions__cleanup(void)$/;"	f	typeref:typename:void
test_refs_transactions__commit_unlocks_unmodified_ref	my_project/libgit2/tests/libgit2/refs/transactions.c	/^void test_refs_transactions__commit_unlocks_unmodified_ref(void)$/;"	f	typeref:typename:void
test_refs_transactions__error_on_locking_locked_ref	my_project/libgit2/tests/libgit2/refs/transactions.c	/^void test_refs_transactions__error_on_locking_locked_ref(void)$/;"	f	typeref:typename:void
test_refs_transactions__free_unlocks_unmodified_ref	my_project/libgit2/tests/libgit2/refs/transactions.c	/^void test_refs_transactions__free_unlocks_unmodified_ref(void)$/;"	f	typeref:typename:void
test_refs_transactions__initialize	my_project/libgit2/tests/libgit2/refs/transactions.c	/^void test_refs_transactions__initialize(void)$/;"	f	typeref:typename:void
test_refs_transactions__single_create	my_project/libgit2/tests/libgit2/refs/transactions.c	/^void test_refs_transactions__single_create(void)$/;"	f	typeref:typename:void
test_refs_transactions__single_ref_delete	my_project/libgit2/tests/libgit2/refs/transactions.c	/^void test_refs_transactions__single_ref_delete(void)$/;"	f	typeref:typename:void
test_refs_transactions__single_ref_mix_types	my_project/libgit2/tests/libgit2/refs/transactions.c	/^void test_refs_transactions__single_ref_mix_types(void)$/;"	f	typeref:typename:void
test_refs_transactions__single_ref_oid	my_project/libgit2/tests/libgit2/refs/transactions.c	/^void test_refs_transactions__single_ref_oid(void)$/;"	f	typeref:typename:void
test_refs_transactions__single_ref_symbolic	my_project/libgit2/tests/libgit2/refs/transactions.c	/^void test_refs_transactions__single_ref_symbolic(void)$/;"	f	typeref:typename:void
test_refs_transactions__unlocked_set	my_project/libgit2/tests/libgit2/refs/transactions.c	/^void test_refs_transactions__unlocked_set(void)$/;"	f	typeref:typename:void
test_refs_unicode__cleanup	my_project/libgit2/tests/libgit2/refs/unicode.c	/^void test_refs_unicode__cleanup(void)$/;"	f	typeref:typename:void
test_refs_unicode__create_and_lookup	my_project/libgit2/tests/libgit2/refs/unicode.c	/^void test_refs_unicode__create_and_lookup(void)$/;"	f	typeref:typename:void
test_refs_unicode__initialize	my_project/libgit2/tests/libgit2/refs/unicode.c	/^void test_refs_unicode__initialize(void)$/;"	f	typeref:typename:void
test_refs_update__cleanup	my_project/libgit2/tests/libgit2/refs/update.c	/^void test_refs_update__cleanup(void)$/;"	f	typeref:typename:void
test_refs_update__initialize	my_project/libgit2/tests/libgit2/refs/update.c	/^void test_refs_update__initialize(void)$/;"	f	typeref:typename:void
test_refs_update__updating_the_target_of_a_symref_with_an_invalid_name_returns_EINVALIDSPEC	my_project/libgit2/tests/libgit2/refs/update.c	/^void test_refs_update__updating_the_target_of_a_symref_with_an_invalid_name_returns_EINVALIDSPEC/;"	f	typeref:typename:void
test_regexp__case_insensitive_search_matches	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__case_insensitive_search_matches(void)$/;"	f	typeref:typename:void
test_regexp__cleanup	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__cleanup(void)$/;"	f	typeref:typename:void
test_regexp__compile_ignores_global_locale_collate	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__compile_ignores_global_locale_collate(void)$/;"	f	typeref:typename:void
test_regexp__compile_ignores_global_locale_ctype	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__compile_ignores_global_locale_ctype(void)$/;"	f	typeref:typename:void
test_regexp__initialize	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__initialize(void)$/;"	f	typeref:typename:void
test_regexp__nonmatching_search_returns_error	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__nonmatching_search_returns_error(void)$/;"	f	typeref:typename:void
test_regexp__regex_matches_alphabet_with_locale	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__regex_matches_alphabet_with_locale(void)$/;"	f	typeref:typename:void
test_regexp__regex_matches_digits_with_locale	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__regex_matches_digits_with_locale(void)$/;"	f	typeref:typename:void
test_regexp__search_fills_matches_with_first_matching_groups	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__search_fills_matches_with_first_matching_groups(void)$/;"	f	typeref:typename:void
test_regexp__search_finds_complete_match	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__search_finds_complete_match(void)$/;"	f	typeref:typename:void
test_regexp__search_finds_correct_offsets	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__search_finds_correct_offsets(void)$/;"	f	typeref:typename:void
test_regexp__search_finds_empty_group	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__search_finds_empty_group(void)$/;"	f	typeref:typename:void
test_regexp__search_initializes_trailing_nonmatching_groups	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__search_initializes_trailing_nonmatching_groups(void)$/;"	f	typeref:typename:void
test_regexp__search_skips_nonmatching_group	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__search_skips_nonmatching_group(void)$/;"	f	typeref:typename:void
test_regexp__simple_search_matches	my_project/libgit2/tests/util/regexp.c	/^void test_regexp__simple_search_matches(void)$/;"	f	typeref:typename:void
test_remote_create__anonymous	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__anonymous(void)$/;"	f	typeref:typename:void
test_remote_create__anonymous_invalid_url	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__anonymous_invalid_url(void)$/;"	f	typeref:typename:void
test_remote_create__cleanup	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__cleanup(void)$/;"	f	typeref:typename:void
test_remote_create__detached	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__detached(void)$/;"	f	typeref:typename:void
test_remote_create__detached_invalid_url	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__detached_invalid_url(void)$/;"	f	typeref:typename:void
test_remote_create__initialize	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__initialize(void)$/;"	f	typeref:typename:void
test_remote_create__manual	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__manual(void)$/;"	f	typeref:typename:void
test_remote_create__named	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__named(void)$/;"	f	typeref:typename:void
test_remote_create__named_fail_on_conflicting_name	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__named_fail_on_conflicting_name(void)$/;"	f	typeref:typename:void
test_remote_create__named_fail_on_invalid_name	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__named_fail_on_invalid_name(void)$/;"	f	typeref:typename:void
test_remote_create__named_fail_on_invalid_url	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__named_fail_on_invalid_url(void)$/;"	f	typeref:typename:void
test_remote_create__with_empty_fetchspec	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__with_empty_fetchspec(void)$/;"	f	typeref:typename:void
test_remote_create__with_fetchspec	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__with_fetchspec(void)$/;"	f	typeref:typename:void
test_remote_create__with_fetchspec_invalid_name	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__with_fetchspec_invalid_name(void)$/;"	f	typeref:typename:void
test_remote_create__with_fetchspec_invalid_url	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__with_fetchspec_invalid_url(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_anonymous	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__with_opts_anonymous(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_conflicting_name	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__with_opts_conflicting_name(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_detached	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__with_opts_detached(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_insteadof_disabled	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__with_opts_insteadof_disabled(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_invalid_name	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__with_opts_invalid_name(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_invalid_url	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__with_opts_invalid_url(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_named	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__with_opts_named(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_named_and_fetchspec	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__with_opts_named_and_fetchspec(void)$/;"	f	typeref:typename:void
test_remote_create__with_opts_named_no_fetchspec	my_project/libgit2/tests/libgit2/remote/create.c	/^void test_remote_create__with_opts_named_no_fetchspec(void)$/;"	f	typeref:typename:void
test_remote_fetch__cleanup	my_project/libgit2/tests/libgit2/remote/fetch.c	/^void test_remote_fetch__cleanup(void) {$/;"	f	typeref:typename:void
test_remote_fetch__do_update_refs_if_not_descendant_and_force	my_project/libgit2/tests/libgit2/remote/fetch.c	/^void test_remote_fetch__do_update_refs_if_not_descendant_and_force(void) {$/;"	f	typeref:typename:void
test_remote_fetch__dont_update_refs_if_not_descendant_and_not_force	my_project/libgit2/tests/libgit2/remote/fetch.c	/^void test_remote_fetch__dont_update_refs_if_not_descendant_and_not_force(void) {$/;"	f	typeref:typename:void
test_remote_fetch__initialize	my_project/libgit2/tests/libgit2/remote/fetch.c	/^void test_remote_fetch__initialize(void) {$/;"	f	typeref:typename:void
test_remote_httpproxy__cleanup	my_project/libgit2/tests/libgit2/remote/httpproxy.c	/^void test_remote_httpproxy__cleanup(void)$/;"	f	typeref:typename:void
test_remote_httpproxy__config_empty_overrides	my_project/libgit2/tests/libgit2/remote/httpproxy.c	/^void test_remote_httpproxy__config_empty_overrides(void)$/;"	f	typeref:typename:void
test_remote_httpproxy__config_overrides	my_project/libgit2/tests/libgit2/remote/httpproxy.c	/^void test_remote_httpproxy__config_overrides(void)$/;"	f	typeref:typename:void
test_remote_httpproxy__config_overrides_detached_remote	my_project/libgit2/tests/libgit2/remote/httpproxy.c	/^void test_remote_httpproxy__config_overrides_detached_remote(void)$/;"	f	typeref:typename:void
test_remote_httpproxy__env	my_project/libgit2/tests/libgit2/remote/httpproxy.c	/^void test_remote_httpproxy__env(void)$/;"	f	typeref:typename:void
test_remote_httpproxy__initialize	my_project/libgit2/tests/libgit2/remote/httpproxy.c	/^void test_remote_httpproxy__initialize(void)$/;"	f	typeref:typename:void
test_remote_insteadof__anonymous_remote_both	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^void test_remote_insteadof__anonymous_remote_both(void)$/;"	f	typeref:typename:void
test_remote_insteadof__anonymous_remote_fetch	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^void test_remote_insteadof__anonymous_remote_fetch(void)$/;"	f	typeref:typename:void
test_remote_insteadof__anonymous_remote_push	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^void test_remote_insteadof__anonymous_remote_push(void)$/;"	f	typeref:typename:void
test_remote_insteadof__cleanup	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^void test_remote_insteadof__cleanup(void)$/;"	f	typeref:typename:void
test_remote_insteadof__initialize	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^void test_remote_insteadof__initialize(void)$/;"	f	typeref:typename:void
test_remote_insteadof__not_applicable	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^void test_remote_insteadof__not_applicable(void)$/;"	f	typeref:typename:void
test_remote_insteadof__pushurl_insteadof_both	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^void test_remote_insteadof__pushurl_insteadof_both(void)$/;"	f	typeref:typename:void
test_remote_insteadof__pushurl_insteadof_fetch	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^void test_remote_insteadof__pushurl_insteadof_fetch(void)$/;"	f	typeref:typename:void
test_remote_insteadof__pushurl_insteadof_push	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^void test_remote_insteadof__pushurl_insteadof_push(void)$/;"	f	typeref:typename:void
test_remote_insteadof__url_insteadof_both	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^void test_remote_insteadof__url_insteadof_both(void)$/;"	f	typeref:typename:void
test_remote_insteadof__url_insteadof_fetch	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^void test_remote_insteadof__url_insteadof_fetch(void)$/;"	f	typeref:typename:void
test_remote_insteadof__url_insteadof_push	my_project/libgit2/tests/libgit2/remote/insteadof.c	/^void test_remote_insteadof__url_insteadof_push(void)$/;"	f	typeref:typename:void
test_remote_list__always_checks_disk_config	my_project/libgit2/tests/libgit2/remote/list.c	/^void test_remote_list__always_checks_disk_config(void)$/;"	f	typeref:typename:void
test_remote_list__cleanup	my_project/libgit2/tests/libgit2/remote/list.c	/^void test_remote_list__cleanup(void)$/;"	f	typeref:typename:void
test_remote_list__initialize	my_project/libgit2/tests/libgit2/remote/list.c	/^void test_remote_list__initialize(void)$/;"	f	typeref:typename:void
test_remove_namespace	my_project/libgit2/tests/util/path/win32.c	/^static void test_remove_namespace(const wchar_t *in, const wchar_t *expected)$/;"	f	typeref:typename:void	file:
test_repo_1	my_project/libgit2/tests/libgit2/ignore/status.c	/^static const char *test_repo_1 = "empty_standard_repo";$/;"	v	typeref:typename:const char *	file:
test_repo_config__can_open_global_when_there_is_no_file	my_project/libgit2/tests/libgit2/repo/config.c	/^void test_repo_config__can_open_global_when_there_is_no_file(void)$/;"	f	typeref:typename:void
test_repo_config__can_open_missing_global_with_separators	my_project/libgit2/tests/libgit2/repo/config.c	/^void test_repo_config__can_open_missing_global_with_separators(void)$/;"	f	typeref:typename:void
test_repo_config__cleanup	my_project/libgit2/tests/libgit2/repo/config.c	/^void test_repo_config__cleanup(void)$/;"	f	typeref:typename:void
test_repo_config__initialize	my_project/libgit2/tests/libgit2/repo/config.c	/^void test_repo_config__initialize(void)$/;"	f	typeref:typename:void
test_repo_config__read_with_no_configs_at_all	my_project/libgit2/tests/libgit2/repo/config.c	/^void test_repo_config__read_with_no_configs_at_all(void)$/;"	f	typeref:typename:void
test_repo_discover__ceiling_should_not_affect_gitdir_redirection	my_project/libgit2/tests/libgit2/repo/discover.c	/^void test_repo_discover__ceiling_should_not_affect_gitdir_redirection(void)$/;"	f	typeref:typename:void
test_repo_discover__cleanup	my_project/libgit2/tests/libgit2/repo/discover.c	/^void test_repo_discover__cleanup(void)$/;"	f	typeref:typename:void
test_repo_discover__discovering_nonexistent_dir_fails	my_project/libgit2/tests/libgit2/repo/discover.c	/^void test_repo_discover__discovering_nonexistent_dir_fails(void)$/;"	f	typeref:typename:void
test_repo_discover__discovering_repo_with_exact_path_succeeds	my_project/libgit2/tests/libgit2/repo/discover.c	/^void test_repo_discover__discovering_repo_with_exact_path_succeeds(void)$/;"	f	typeref:typename:void
test_repo_discover__discovering_repo_with_subdirectory_succeeds	my_project/libgit2/tests/libgit2/repo/discover.c	/^void test_repo_discover__discovering_repo_with_subdirectory_succeeds(void)$/;"	f	typeref:typename:void
test_repo_discover__discovering_repository_with_alternative_gitdir_succeeds	my_project/libgit2/tests/libgit2/repo/discover.c	/^void test_repo_discover__discovering_repository_with_alternative_gitdir_succeeds(void)$/;"	f	typeref:typename:void
test_repo_discover__discovering_repository_with_ceiling	my_project/libgit2/tests/libgit2/repo/discover.c	/^void test_repo_discover__discovering_repository_with_ceiling(void)$/;"	f	typeref:typename:void
test_repo_discover__discovering_repository_with_malformed_alternative_gitdir_fails	my_project/libgit2/tests/libgit2/repo/discover.c	/^void test_repo_discover__discovering_repository_with_malformed_alternative_gitdir_fails(void)$/;"	f	typeref:typename:void
test_repo_discover__discovery_starting_at_file_succeeds	my_project/libgit2/tests/libgit2/repo/discover.c	/^void test_repo_discover__discovery_starting_at_file_succeeds(void)$/;"	f	typeref:typename:void
test_repo_discover__discovery_starting_at_system_root_causes_no_hang	my_project/libgit2/tests/libgit2/repo/discover.c	/^void test_repo_discover__discovery_starting_at_system_root_causes_no_hang(void)$/;"	f	typeref:typename:void
test_repo_discover__initialize	my_project/libgit2/tests/libgit2/repo/discover.c	/^void test_repo_discover__initialize(void)$/;"	f	typeref:typename:void
test_repo_discover__other_ceiling	my_project/libgit2/tests/libgit2/repo/discover.c	/^void test_repo_discover__other_ceiling(void)$/;"	f	typeref:typename:void
test_repo_env__cleanup	my_project/libgit2/tests/libgit2/repo/env.c	/^void test_repo_env__cleanup(void)$/;"	f	typeref:typename:void
test_repo_env__commondir	my_project/libgit2/tests/libgit2/repo/env.c	/^void test_repo_env__commondir(void)$/;"	f	typeref:typename:void
test_repo_env__config	my_project/libgit2/tests/libgit2/repo/env.c	/^void test_repo_env__config(void)$/;"	f	typeref:typename:void
test_repo_env__initialize	my_project/libgit2/tests/libgit2/repo/env.c	/^void test_repo_env__initialize(void)$/;"	f	typeref:typename:void
test_repo_env__open	my_project/libgit2/tests/libgit2/repo/env.c	/^void test_repo_env__open(void)$/;"	f	typeref:typename:void
test_repo_env__work_tree	my_project/libgit2/tests/libgit2/repo/env.c	/^void test_repo_env__work_tree(void)$/;"	f	typeref:typename:void
test_repo_extensions__adds_extension	my_project/libgit2/tests/libgit2/repo/extensions.c	/^void test_repo_extensions__adds_extension(void)$/;"	f	typeref:typename:void
test_repo_extensions__builtin	my_project/libgit2/tests/libgit2/repo/extensions.c	/^void test_repo_extensions__builtin(void)$/;"	f	typeref:typename:void
test_repo_extensions__cleanup	my_project/libgit2/tests/libgit2/repo/extensions.c	/^void test_repo_extensions__cleanup(void)$/;"	f	typeref:typename:void
test_repo_extensions__initialize	my_project/libgit2/tests/libgit2/repo/extensions.c	/^void test_repo_extensions__initialize(void)$/;"	f	typeref:typename:void
test_repo_extensions__negate_builtin	my_project/libgit2/tests/libgit2/repo/extensions.c	/^void test_repo_extensions__negate_builtin(void)$/;"	f	typeref:typename:void
test_repo_extensions__unsupported	my_project/libgit2/tests/libgit2/repo/extensions.c	/^void test_repo_extensions__unsupported(void)$/;"	f	typeref:typename:void
test_repo_getters__commit_parents	my_project/libgit2/tests/libgit2/repo/getters.c	/^void test_repo_getters__commit_parents(void)$/;"	f	typeref:typename:void
test_repo_getters__is_empty_can_detect_repositories_with_defaultbranch_config_empty	my_project/libgit2/tests/libgit2/repo/getters.c	/^void test_repo_getters__is_empty_can_detect_repositories_with_defaultbranch_config_empty(void)$/;"	f	typeref:typename:void
test_repo_getters__is_empty_can_detect_used_repositories	my_project/libgit2/tests/libgit2/repo/getters.c	/^void test_repo_getters__is_empty_can_detect_used_repositories(void)$/;"	f	typeref:typename:void
test_repo_getters__is_empty_correctly_deals_with_pristine_looking_repos	my_project/libgit2/tests/libgit2/repo/getters.c	/^void test_repo_getters__is_empty_correctly_deals_with_pristine_looking_repos(void)$/;"	f	typeref:typename:void
test_repo_getters__retrieving_the_odb_honors_the_refcount	my_project/libgit2/tests/libgit2/repo/getters.c	/^void test_repo_getters__retrieving_the_odb_honors_the_refcount(void)$/;"	f	typeref:typename:void
test_repo_hashfile__cleanup	my_project/libgit2/tests/libgit2/repo/hashfile.c	/^void test_repo_hashfile__cleanup(void)$/;"	f	typeref:typename:void
test_repo_hashfile__filtered_in_workdir	my_project/libgit2/tests/libgit2/repo/hashfile.c	/^void test_repo_hashfile__filtered_in_workdir(void)$/;"	f	typeref:typename:void
test_repo_hashfile__filtered_outside_workdir	my_project/libgit2/tests/libgit2/repo/hashfile.c	/^void test_repo_hashfile__filtered_outside_workdir(void)$/;"	f	typeref:typename:void
test_repo_hashfile__initialize	my_project/libgit2/tests/libgit2/repo/hashfile.c	/^void test_repo_hashfile__initialize(void)$/;"	f	typeref:typename:void
test_repo_hashfile__simple	my_project/libgit2/tests/libgit2/repo/hashfile.c	/^void test_repo_hashfile__simple(void)$/;"	f	typeref:typename:void
test_repo_head__can_tell_if_an_unborn_head_is_detached	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__can_tell_if_an_unborn_head_is_detached(void)$/;"	f	typeref:typename:void
test_repo_head__cleanup	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__cleanup(void)$/;"	f	typeref:typename:void
test_repo_head__detach_head_Detaches_HEAD_and_make_it_point_to_the_peeled_commit	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__detach_head_Detaches_HEAD_and_make_it_point_to_the_peeled_commit(void)$/;"	f	typeref:typename:void
test_repo_head__detach_head_Fails_if_HEAD_and_point_to_a_non_commitish	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__detach_head_Fails_if_HEAD_and_point_to_a_non_commitish(void)$/;"	f	typeref:typename:void
test_repo_head__detaching_an_unborn_branch_returns_GIT_EUNBORNBRANCH	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__detaching_an_unborn_branch_returns_GIT_EUNBORNBRANCH(void)$/;"	f	typeref:typename:void
test_repo_head__initialize	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__initialize(void)$/;"	f	typeref:typename:void
test_repo_head__retrieving_a_missing_head_returns_GIT_ENOTFOUND	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__retrieving_a_missing_head_returns_GIT_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_repo_head__retrieving_an_unborn_branch_returns_GIT_EUNBORNBRANCH	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__retrieving_an_unborn_branch_returns_GIT_EUNBORNBRANCH(void)$/;"	f	typeref:typename:void
test_repo_head__set_head_Attaches_HEAD_to_un_unborn_branch_when_the_branch_doesnt_exist	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__set_head_Attaches_HEAD_to_un_unborn_branch_when_the_branch_doesnt_exist(voi/;"	f	typeref:typename:void
test_repo_head__set_head_Attaches_HEAD_when_the_reference_points_to_a_branch	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__set_head_Attaches_HEAD_when_the_reference_points_to_a_branch(void)$/;"	f	typeref:typename:void
test_repo_head__set_head_Detaches_HEAD_when_the_reference_doesnt_point_to_a_branch	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__set_head_Detaches_HEAD_when_the_reference_doesnt_point_to_a_branch(void)$/;"	f	typeref:typename:void
test_repo_head__set_head_Fails_when_the_reference_points_to_a_non_commitish	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__set_head_Fails_when_the_reference_points_to_a_non_commitish(void)$/;"	f	typeref:typename:void
test_repo_head__set_head_Returns_ENOTFOUND_when_the_reference_doesnt_exist	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__set_head_Returns_ENOTFOUND_when_the_reference_doesnt_exist(void)$/;"	f	typeref:typename:void
test_repo_head__set_head_detached_Detaches_HEAD_and_make_it_point_to_the_peeled_commit	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__set_head_detached_Detaches_HEAD_and_make_it_point_to_the_peeled_commit(void/;"	f	typeref:typename:void
test_repo_head__set_head_detached_Fails_when_the_object_isnt_a_commitish	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__set_head_detached_Fails_when_the_object_isnt_a_commitish(void)$/;"	f	typeref:typename:void
test_repo_head__set_head_detached_Return_ENOTFOUND_when_the_object_doesnt_exist	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__set_head_detached_Return_ENOTFOUND_when_the_object_doesnt_exist(void)$/;"	f	typeref:typename:void
test_repo_head__unborn_head	my_project/libgit2/tests/libgit2/repo/head.c	/^void test_repo_head__unborn_head(void)$/;"	f	typeref:typename:void
test_repo_headtree__can_retrieve_the_root_tree_from_a_detached_head	my_project/libgit2/tests/libgit2/repo/headtree.c	/^void test_repo_headtree__can_retrieve_the_root_tree_from_a_detached_head(void)$/;"	f	typeref:typename:void
test_repo_headtree__can_retrieve_the_root_tree_from_a_non_detached_head	my_project/libgit2/tests/libgit2/repo/headtree.c	/^void test_repo_headtree__can_retrieve_the_root_tree_from_a_non_detached_head(void)$/;"	f	typeref:typename:void
test_repo_headtree__cleanup	my_project/libgit2/tests/libgit2/repo/headtree.c	/^void test_repo_headtree__cleanup(void)$/;"	f	typeref:typename:void
test_repo_headtree__initialize	my_project/libgit2/tests/libgit2/repo/headtree.c	/^void test_repo_headtree__initialize(void)$/;"	f	typeref:typename:void
test_repo_headtree__when_head_is_missing_returns_ENOTFOUND	my_project/libgit2/tests/libgit2/repo/headtree.c	/^void test_repo_headtree__when_head_is_missing_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_repo_headtree__when_head_is_unborn_returns_EUNBORNBRANCH	my_project/libgit2/tests/libgit2/repo/headtree.c	/^void test_repo_headtree__when_head_is_unborn_returns_EUNBORNBRANCH(void)$/;"	f	typeref:typename:void
test_repo_init__absolute_path_with_backslashes	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__absolute_path_with_backslashes(void)$/;"	f	typeref:typename:void
test_repo_init__additional_templates	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__additional_templates(void)$/;"	f	typeref:typename:void
test_repo_init__at_filesystem_root	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__at_filesystem_root(void)$/;"	f	typeref:typename:void
test_repo_init__bare_repo	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__bare_repo(void)$/;"	f	typeref:typename:void
test_repo_init__bare_repo_escaping_current_workdir	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__bare_repo_escaping_current_workdir(void)$/;"	f	typeref:typename:void
test_repo_init__bare_repo_noslash	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__bare_repo_noslash(void)$/;"	f	typeref:typename:void
test_repo_init__can_reinit_an_initialized_repository	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__can_reinit_an_initialized_repository(void)$/;"	f	typeref:typename:void
test_repo_init__cleanup	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__cleanup(void)$/;"	f	typeref:typename:void
test_repo_init__defaultbranch_config	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__defaultbranch_config(void)$/;"	f	typeref:typename:void
test_repo_init__defaultbranch_config_empty	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__defaultbranch_config_empty(void)$/;"	f	typeref:typename:void
test_repo_init__detect_filemode	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__detect_filemode(void)$/;"	f	typeref:typename:void
test_repo_init__detect_ignorecase	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__detect_ignorecase(void)$/;"	f	typeref:typename:void
test_repo_init__detect_precompose_unicode_required	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__detect_precompose_unicode_required(void)$/;"	f	typeref:typename:void
test_repo_init__extended_0	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__extended_0(void)$/;"	f	typeref:typename:void
test_repo_init__extended_1	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__extended_1(void)$/;"	f	typeref:typename:void
test_repo_init__init_with_initial_commit	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__init_with_initial_commit(void)$/;"	f	typeref:typename:void
test_repo_init__initialize	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__initialize(void)$/;"	f	typeref:typename:void
test_repo_init__longpath	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__longpath(void)$/;"	f	typeref:typename:void
test_repo_init__nonexisting_directory	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__nonexisting_directory(void)$/;"	f	typeref:typename:void
test_repo_init__nonexisting_root	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__nonexisting_root(void)$/;"	f	typeref:typename:void
test_repo_init__reinit_bare_repo	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__reinit_bare_repo(void)$/;"	f	typeref:typename:void
test_repo_init__reinit_doesnot_overwrite_ignorecase	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__reinit_doesnot_overwrite_ignorecase(void)$/;"	f	typeref:typename:void
test_repo_init__reinit_nondefault_version	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__reinit_nondefault_version(void)$/;"	f	typeref:typename:void
test_repo_init__reinit_overwrites_filemode	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__reinit_overwrites_filemode(void)$/;"	f	typeref:typename:void
test_repo_init__reinit_unsupported_version	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__reinit_unsupported_version(void)$/;"	f	typeref:typename:void
test_repo_init__relative_gitdir	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__relative_gitdir(void)$/;"	f	typeref:typename:void
test_repo_init__relative_gitdir_2	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__relative_gitdir_2(void)$/;"	f	typeref:typename:void
test_repo_init__sets_logAllRefUpdates_according_to_type_of_repository	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__sets_logAllRefUpdates_according_to_type_of_repository(void)$/;"	f	typeref:typename:void
test_repo_init__standard_repo	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__standard_repo(void)$/;"	f	typeref:typename:void
test_repo_init__standard_repo_noslash	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__standard_repo_noslash(void)$/;"	f	typeref:typename:void
test_repo_init__symlinks_posix_detected	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__symlinks_posix_detected(void)$/;"	f	typeref:typename:void
test_repo_init__symlinks_win32_enabled_by_global_config	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__symlinks_win32_enabled_by_global_config(void)$/;"	f	typeref:typename:void
test_repo_init__symlinks_win32_off_by_default	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__symlinks_win32_off_by_default(void)$/;"	f	typeref:typename:void
test_repo_init__unwriteable_directory	my_project/libgit2/tests/libgit2/repo/init.c	/^void test_repo_init__unwriteable_directory(void)$/;"	f	typeref:typename:void
test_repo_message__cleanup	my_project/libgit2/tests/libgit2/repo/message.c	/^void test_repo_message__cleanup(void)$/;"	f	typeref:typename:void
test_repo_message__initialize	my_project/libgit2/tests/libgit2/repo/message.c	/^void test_repo_message__initialize(void)$/;"	f	typeref:typename:void
test_repo_message__message	my_project/libgit2/tests/libgit2/repo/message.c	/^void test_repo_message__message(void)$/;"	f	typeref:typename:void
test_repo_message__none	my_project/libgit2/tests/libgit2/repo/message.c	/^void test_repo_message__none(void)$/;"	f	typeref:typename:void
test_repo_new__has_nothing	my_project/libgit2/tests/libgit2/repo/new.c	/^void test_repo_new__has_nothing(void)$/;"	f	typeref:typename:void
test_repo_new__is_bare_until_workdir_set	my_project/libgit2/tests/libgit2/repo/new.c	/^void test_repo_new__is_bare_until_workdir_set(void)$/;"	f	typeref:typename:void
test_repo_new__sha1	my_project/libgit2/tests/libgit2/repo/new.c	/^void test_repo_new__sha1(void)$/;"	f	typeref:typename:void
test_repo_new__sha256	my_project/libgit2/tests/libgit2/repo/new.c	/^void test_repo_new__sha256(void)$/;"	f	typeref:typename:void
test_repo_objectformat__cleanup	my_project/libgit2/tests/libgit2/repo/objectformat.c	/^void test_repo_objectformat__cleanup(void)$/;"	f	typeref:typename:void
test_repo_objectformat__initialize	my_project/libgit2/tests/libgit2/repo/objectformat.c	/^void test_repo_objectformat__initialize(void)$/;"	f	typeref:typename:void
test_repo_objectformat__invalid	my_project/libgit2/tests/libgit2/repo/objectformat.c	/^void test_repo_objectformat__invalid(void)$/;"	f	typeref:typename:void
test_repo_objectformat__sha1	my_project/libgit2/tests/libgit2/repo/objectformat.c	/^void test_repo_objectformat__sha1(void)$/;"	f	typeref:typename:void
test_repo_objectformat__sha256	my_project/libgit2/tests/libgit2/repo/objectformat.c	/^void test_repo_objectformat__sha256(void)$/;"	f	typeref:typename:void
test_repo_objectformat__unspecified	my_project/libgit2/tests/libgit2/repo/objectformat.c	/^void test_repo_objectformat__unspecified(void)$/;"	f	typeref:typename:void
test_repo_open__bad_gitlinks	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__bad_gitlinks(void)$/;"	f	typeref:typename:void
test_repo_open__bare_empty_repo	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__bare_empty_repo(void)$/;"	f	typeref:typename:void
test_repo_open__can_allowlist_bare_gitdir	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__can_allowlist_bare_gitdir(void)$/;"	f	typeref:typename:void
test_repo_open__can_allowlist_dirs_with_problematic_ownership	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__can_allowlist_dirs_with_problematic_ownership(void)$/;"	f	typeref:typename:void
test_repo_open__can_handle_prefixed_safe_paths	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__can_handle_prefixed_safe_paths(void)$/;"	f	typeref:typename:void
test_repo_open__can_handle_win32_prefixed_safe_paths	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__can_handle_win32_prefixed_safe_paths(void)$/;"	f	typeref:typename:void
test_repo_open__can_handle_win32_unc_safe_paths	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__can_handle_win32_unc_safe_paths(void)$/;"	f	typeref:typename:void
test_repo_open__can_reset_safe_directory_list	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__can_reset_safe_directory_list(void)$/;"	f	typeref:typename:void
test_repo_open__can_wildcard_allowlist_bare_gitdir	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__can_wildcard_allowlist_bare_gitdir(void)$/;"	f	typeref:typename:void
test_repo_open__can_wildcard_allowlist_with_problematic_ownership	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__can_wildcard_allowlist_with_problematic_ownership(void)$/;"	f	typeref:typename:void
test_repo_open__check_if_repository	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__check_if_repository(void)$/;"	f	typeref:typename:void
test_repo_open__cleanup	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__cleanup(void)$/;"	f	typeref:typename:void
test_repo_open__failures	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__failures(void)$/;"	f	typeref:typename:void
test_repo_open__force_bare	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__force_bare(void)$/;"	f	typeref:typename:void
test_repo_open__format_version_1	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__format_version_1(void)$/;"	f	typeref:typename:void
test_repo_open__from_git_new_workdir	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__from_git_new_workdir(void)$/;"	f	typeref:typename:void
test_repo_open__gitlinked	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__gitlinked(void)$/;"	f	typeref:typename:void
test_repo_open__initialize	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__initialize(void)$/;"	f	typeref:typename:void
test_repo_open__no_config	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__no_config(void)$/;"	f	typeref:typename:void
test_repo_open__open_with_discover	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__open_with_discover(void)$/;"	f	typeref:typename:void
test_repo_open__opening_a_non_existing_repository_returns_ENOTFOUND	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__opening_a_non_existing_repository_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_repo_open__prefixed_safe_paths_must_have_two_slashes	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__prefixed_safe_paths_must_have_two_slashes(void)$/;"	f	typeref:typename:void
test_repo_open__safe_directory_fails_with_trailing_slash	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__safe_directory_fails_with_trailing_slash(void)$/;"	f	typeref:typename:void
test_repo_open__standard_empty_repo_through_gitdir	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__standard_empty_repo_through_gitdir(void)$/;"	f	typeref:typename:void
test_repo_open__standard_empty_repo_through_workdir	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__standard_empty_repo_through_workdir(void)$/;"	f	typeref:typename:void
test_repo_open__validates_bare_repo_ownership	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__validates_bare_repo_ownership(void)$/;"	f	typeref:typename:void
test_repo_open__validates_dir_ownership	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__validates_dir_ownership(void)$/;"	f	typeref:typename:void
test_repo_open__win32_path	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__win32_path(void)$/;"	f	typeref:typename:void
test_repo_open__with_symlinked_config	my_project/libgit2/tests/libgit2/repo/open.c	/^void test_repo_open__with_symlinked_config(void)$/;"	f	typeref:typename:void
test_repo_pathspec__cleanup	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^void test_repo_pathspec__cleanup(void)$/;"	f	typeref:typename:void
test_repo_pathspec__in_memory	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^void test_repo_pathspec__in_memory(void)$/;"	f	typeref:typename:void
test_repo_pathspec__index0	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^void test_repo_pathspec__index0(void)$/;"	f	typeref:typename:void
test_repo_pathspec__index1	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^void test_repo_pathspec__index1(void)$/;"	f	typeref:typename:void
test_repo_pathspec__initialize	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^void test_repo_pathspec__initialize(void)$/;"	f	typeref:typename:void
test_repo_pathspec__tree0	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^void test_repo_pathspec__tree0(void)$/;"	f	typeref:typename:void
test_repo_pathspec__tree5	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^void test_repo_pathspec__tree5(void)$/;"	f	typeref:typename:void
test_repo_pathspec__workdir0	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^void test_repo_pathspec__workdir0(void)$/;"	f	typeref:typename:void
test_repo_pathspec__workdir1	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^void test_repo_pathspec__workdir1(void)$/;"	f	typeref:typename:void
test_repo_pathspec__workdir2	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^void test_repo_pathspec__workdir2(void)$/;"	f	typeref:typename:void
test_repo_pathspec__workdir3	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^void test_repo_pathspec__workdir3(void)$/;"	f	typeref:typename:void
test_repo_pathspec__workdir4	my_project/libgit2/tests/libgit2/repo/pathspec.c	/^void test_repo_pathspec__workdir4(void)$/;"	f	typeref:typename:void
test_repo_reservedname__cleanup	my_project/libgit2/tests/libgit2/repo/reservedname.c	/^void test_repo_reservedname__cleanup(void)$/;"	f	typeref:typename:void
test_repo_reservedname__custom_shortname_recognized	my_project/libgit2/tests/libgit2/repo/reservedname.c	/^void test_repo_reservedname__custom_shortname_recognized(void)$/;"	f	typeref:typename:void
test_repo_reservedname__includes_shortname_on_win32	my_project/libgit2/tests/libgit2/repo/reservedname.c	/^void test_repo_reservedname__includes_shortname_on_win32(void)$/;"	f	typeref:typename:void
test_repo_reservedname__includes_shortname_when_requested	my_project/libgit2/tests/libgit2/repo/reservedname.c	/^void test_repo_reservedname__includes_shortname_when_requested(void)$/;"	f	typeref:typename:void
test_repo_reservedname__submodule_pointer	my_project/libgit2/tests/libgit2/repo/reservedname.c	/^void test_repo_reservedname__submodule_pointer(void)$/;"	f	typeref:typename:void
test_repo_reservedname__submodule_pointer_during_create	my_project/libgit2/tests/libgit2/repo/reservedname.c	/^void test_repo_reservedname__submodule_pointer_during_create(void)$/;"	f	typeref:typename:void
test_repo_setters__cleanup	my_project/libgit2/tests/libgit2/repo/setters.c	/^void test_repo_setters__cleanup(void)$/;"	f	typeref:typename:void
test_repo_setters__initialize	my_project/libgit2/tests/libgit2/repo/setters.c	/^void test_repo_setters__initialize(void)$/;"	f	typeref:typename:void
test_repo_setters__setting_a_new_index_on_a_repo_which_has_already_loaded_one_properly_honors_the_refcount	my_project/libgit2/tests/libgit2/repo/setters.c	/^void test_repo_setters__setting_a_new_index_on_a_repo_which_has_already_loaded_one_properly_hono/;"	f	typeref:typename:void
test_repo_setters__setting_a_new_odb_on_a_repo_which_already_loaded_one_properly_honors_the_refcount	my_project/libgit2/tests/libgit2/repo/setters.c	/^void test_repo_setters__setting_a_new_odb_on_a_repo_which_already_loaded_one_properly_honors_the/;"	f	typeref:typename:void
test_repo_setters__setting_a_workdir_creates_a_gitlink	my_project/libgit2/tests/libgit2/repo/setters.c	/^void test_repo_setters__setting_a_workdir_creates_a_gitlink(void)$/;"	f	typeref:typename:void
test_repo_setters__setting_a_workdir_prettifies_its_path	my_project/libgit2/tests/libgit2/repo/setters.c	/^void test_repo_setters__setting_a_workdir_prettifies_its_path(void)$/;"	f	typeref:typename:void
test_repo_setters__setting_a_workdir_turns_a_bare_repository_into_a_standard_one	my_project/libgit2/tests/libgit2/repo/setters.c	/^void test_repo_setters__setting_a_workdir_turns_a_bare_repository_into_a_standard_one(void)$/;"	f	typeref:typename:void
test_repo_shallow__cleanup	my_project/libgit2/tests/libgit2/repo/shallow.c	/^void test_repo_shallow__cleanup(void)$/;"	f	typeref:typename:void
test_repo_shallow__clears_errors	my_project/libgit2/tests/libgit2/repo/shallow.c	/^void test_repo_shallow__clears_errors(void)$/;"	f	typeref:typename:void
test_repo_shallow__empty_shallow_file	my_project/libgit2/tests/libgit2/repo/shallow.c	/^void test_repo_shallow__empty_shallow_file(void)$/;"	f	typeref:typename:void
test_repo_shallow__initialize	my_project/libgit2/tests/libgit2/repo/shallow.c	/^void test_repo_shallow__initialize(void)$/;"	f	typeref:typename:void
test_repo_shallow__no_shallow_file	my_project/libgit2/tests/libgit2/repo/shallow.c	/^void test_repo_shallow__no_shallow_file(void)$/;"	f	typeref:typename:void
test_repo_shallow__shallow_repo	my_project/libgit2/tests/libgit2/repo/shallow.c	/^void test_repo_shallow__shallow_repo(void)$/;"	f	typeref:typename:void
test_repo_state__apply_mailbox	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__apply_mailbox(void)$/;"	f	typeref:typename:void
test_repo_state__apply_mailbox_or_rebase	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__apply_mailbox_or_rebase(void)$/;"	f	typeref:typename:void
test_repo_state__bisect	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__bisect(void)$/;"	f	typeref:typename:void
test_repo_state__cherry_pick	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__cherry_pick(void)$/;"	f	typeref:typename:void
test_repo_state__cherrypick_sequence	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__cherrypick_sequence(void)$/;"	f	typeref:typename:void
test_repo_state__cleanup	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__cleanup(void)$/;"	f	typeref:typename:void
test_repo_state__initialize	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__initialize(void)$/;"	f	typeref:typename:void
test_repo_state__merge	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__merge(void)$/;"	f	typeref:typename:void
test_repo_state__none_with_HEAD_attached	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__none_with_HEAD_attached(void)$/;"	f	typeref:typename:void
test_repo_state__none_with_HEAD_detached	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__none_with_HEAD_detached(void)$/;"	f	typeref:typename:void
test_repo_state__rebase	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__rebase(void)$/;"	f	typeref:typename:void
test_repo_state__rebase_interactive	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__rebase_interactive(void)$/;"	f	typeref:typename:void
test_repo_state__rebase_merge	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__rebase_merge(void)$/;"	f	typeref:typename:void
test_repo_state__revert	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__revert(void)$/;"	f	typeref:typename:void
test_repo_state__revert_sequence	my_project/libgit2/tests/libgit2/repo/state.c	/^void test_repo_state__revert_sequence(void)$/;"	f	typeref:typename:void
test_repo_template__cleanup	my_project/libgit2/tests/libgit2/repo/template.c	/^void test_repo_template__cleanup(void)$/;"	f	typeref:typename:void
test_repo_template__empty_template_path	my_project/libgit2/tests/libgit2/repo/template.c	/^void test_repo_template__empty_template_path(void)$/;"	f	typeref:typename:void
test_repo_template__extended_with_template_and_shared_mode	my_project/libgit2/tests/libgit2/repo/template.c	/^void test_repo_template__extended_with_template_and_shared_mode(void)$/;"	f	typeref:typename:void
test_repo_template__external_templates_specified_in_config	my_project/libgit2/tests/libgit2/repo/template.c	/^void test_repo_template__external_templates_specified_in_config(void)$/;"	f	typeref:typename:void
test_repo_template__external_templates_specified_in_options	my_project/libgit2/tests/libgit2/repo/template.c	/^void test_repo_template__external_templates_specified_in_options(void)$/;"	f	typeref:typename:void
test_repo_template__external_templates_with_leading_dot	my_project/libgit2/tests/libgit2/repo/template.c	/^void test_repo_template__external_templates_with_leading_dot(void)$/;"	f	typeref:typename:void
test_repo_template__initial_head_option_overrides_template_head	my_project/libgit2/tests/libgit2/repo/template.c	/^void test_repo_template__initial_head_option_overrides_template_head(void)$/;"	f	typeref:typename:void
test_repo_template__initialize	my_project/libgit2/tests/libgit2/repo/template.c	/^void test_repo_template__initialize(void)$/;"	f	typeref:typename:void
test_repo_template__nonexistent_template_path	my_project/libgit2/tests/libgit2/repo/template.c	/^void test_repo_template__nonexistent_template_path(void)$/;"	f	typeref:typename:void
test_repo_template__templated_head_is_used	my_project/libgit2/tests/libgit2/repo/template.c	/^void test_repo_template__templated_head_is_used(void)$/;"	f	typeref:typename:void
test_reset_default__cleanup	my_project/libgit2/tests/libgit2/reset/default.c	/^void test_reset_default__cleanup(void)$/;"	f	typeref:typename:void
test_reset_default__initialize	my_project/libgit2/tests/libgit2/reset/default.c	/^void test_reset_default__initialize(void)$/;"	f	typeref:typename:void
test_reset_default__resetting_filepaths_against_a_null_target_removes_them_from_the_index	my_project/libgit2/tests/libgit2/reset/default.c	/^void test_reset_default__resetting_filepaths_against_a_null_target_removes_them_from_the_index(v/;"	f	typeref:typename:void
test_reset_default__resetting_filepaths_clears_previous_conflicts	my_project/libgit2/tests/libgit2/reset/default.c	/^void test_reset_default__resetting_filepaths_clears_previous_conflicts(void)$/;"	f	typeref:typename:void
test_reset_default__resetting_filepaths_replaces_their_corresponding_index_entries	my_project/libgit2/tests/libgit2/reset/default.c	/^void test_reset_default__resetting_filepaths_replaces_their_corresponding_index_entries(void)$/;"	f	typeref:typename:void
test_reset_default__resetting_unknown_filepaths_does_not_fail	my_project/libgit2/tests/libgit2/reset/default.c	/^void test_reset_default__resetting_unknown_filepaths_does_not_fail(void)$/;"	f	typeref:typename:void
test_reset_default__staged_rename_reset_delete	my_project/libgit2/tests/libgit2/reset/default.c	/^void test_reset_default__staged_rename_reset_delete(void)$/;"	f	typeref:typename:void
test_reset_hard__cannot_reset_in_a_bare_repository	my_project/libgit2/tests/libgit2/reset/hard.c	/^void test_reset_hard__cannot_reset_in_a_bare_repository(void)$/;"	f	typeref:typename:void
test_reset_hard__cleans_up_merge	my_project/libgit2/tests/libgit2/reset/hard.c	/^void test_reset_hard__cleans_up_merge(void)$/;"	f	typeref:typename:void
test_reset_hard__cleanup	my_project/libgit2/tests/libgit2/reset/hard.c	/^void test_reset_hard__cleanup(void)$/;"	f	typeref:typename:void
test_reset_hard__initialize	my_project/libgit2/tests/libgit2/reset/hard.c	/^void test_reset_hard__initialize(void)$/;"	f	typeref:typename:void
test_reset_hard__reflog_is_correct	my_project/libgit2/tests/libgit2/reset/hard.c	/^void test_reset_hard__reflog_is_correct(void)$/;"	f	typeref:typename:void
test_reset_hard__resetting_reverts_modified_files	my_project/libgit2/tests/libgit2/reset/hard.c	/^void test_reset_hard__resetting_reverts_modified_files(void)$/;"	f	typeref:typename:void
test_reset_hard__resetting_reverts_unmerged	my_project/libgit2/tests/libgit2/reset/hard.c	/^void test_reset_hard__resetting_reverts_unmerged(void)$/;"	f	typeref:typename:void
test_reset_hard__switch_file_to_dir	my_project/libgit2/tests/libgit2/reset/hard.c	/^void test_reset_hard__switch_file_to_dir(void)$/;"	f	typeref:typename:void
test_reset_mixed__cannot_reset_in_a_bare_repository	my_project/libgit2/tests/libgit2/reset/mixed.c	/^void test_reset_mixed__cannot_reset_in_a_bare_repository(void)$/;"	f	typeref:typename:void
test_reset_mixed__cleanup	my_project/libgit2/tests/libgit2/reset/mixed.c	/^void test_reset_mixed__cleanup(void)$/;"	f	typeref:typename:void
test_reset_mixed__initialize	my_project/libgit2/tests/libgit2/reset/mixed.c	/^void test_reset_mixed__initialize(void)$/;"	f	typeref:typename:void
test_reset_mixed__reflog_is_correct	my_project/libgit2/tests/libgit2/reset/mixed.c	/^void test_reset_mixed__reflog_is_correct(void)$/;"	f	typeref:typename:void
test_reset_mixed__resetting_refreshes_the_index_to_the_commit_tree	my_project/libgit2/tests/libgit2/reset/mixed.c	/^void test_reset_mixed__resetting_refreshes_the_index_to_the_commit_tree(void)$/;"	f	typeref:typename:void
test_reset_soft__can_reset_the_detached_Head_to_the_specified_commit	my_project/libgit2/tests/libgit2/reset/soft.c	/^void test_reset_soft__can_reset_the_detached_Head_to_the_specified_commit(void)$/;"	f	typeref:typename:void
test_reset_soft__can_reset_the_non_detached_Head_to_the_specified_commit	my_project/libgit2/tests/libgit2/reset/soft.c	/^void test_reset_soft__can_reset_the_non_detached_Head_to_the_specified_commit(void)$/;"	f	typeref:typename:void
test_reset_soft__cannot_reset_to_a_tag_not_pointing_at_a_commit	my_project/libgit2/tests/libgit2/reset/soft.c	/^void test_reset_soft__cannot_reset_to_a_tag_not_pointing_at_a_commit(void)$/;"	f	typeref:typename:void
test_reset_soft__cleanup	my_project/libgit2/tests/libgit2/reset/soft.c	/^void test_reset_soft__cleanup(void)$/;"	f	typeref:typename:void
test_reset_soft__fails_when_index_contains_conflicts_independently_of_MERGE_HEAD_file_existence	my_project/libgit2/tests/libgit2/reset/soft.c	/^void test_reset_soft__fails_when_index_contains_conflicts_independently_of_MERGE_HEAD_file_exist/;"	f	typeref:typename:void
test_reset_soft__fails_when_merging	my_project/libgit2/tests/libgit2/reset/soft.c	/^void test_reset_soft__fails_when_merging(void)$/;"	f	typeref:typename:void
test_reset_soft__initialize	my_project/libgit2/tests/libgit2/reset/soft.c	/^void test_reset_soft__initialize(void)$/;"	f	typeref:typename:void
test_reset_soft__reflog_is_correct	my_project/libgit2/tests/libgit2/reset/soft.c	/^void test_reset_soft__reflog_is_correct(void)$/;"	f	typeref:typename:void
test_reset_soft__resetting_against_an_unborn_head_repo_makes_the_head_no_longer_unborn	my_project/libgit2/tests/libgit2/reset/soft.c	/^void test_reset_soft__resetting_against_an_unborn_head_repo_makes_the_head_no_longer_unborn(void/;"	f	typeref:typename:void
test_reset_soft__resetting_to_a_tag_sets_the_Head_to_the_peeled_commit	my_project/libgit2/tests/libgit2/reset/soft.c	/^void test_reset_soft__resetting_to_a_tag_sets_the_Head_to_the_peeled_commit(void)$/;"	f	typeref:typename:void
test_reset_soft__resetting_to_the_commit_pointed_at_by_the_Head_does_not_change_the_target_of_the_Head	my_project/libgit2/tests/libgit2/reset/soft.c	/^void test_reset_soft__resetting_to_the_commit_pointed_at_by_the_Head_does_not_change_the_target_/;"	f	typeref:typename:void
test_revert_bare__automerge	my_project/libgit2/tests/libgit2/revert/bare.c	/^void test_revert_bare__automerge(void)$/;"	f	typeref:typename:void
test_revert_bare__cleanup	my_project/libgit2/tests/libgit2/revert/bare.c	/^void test_revert_bare__cleanup(void)$/;"	f	typeref:typename:void
test_revert_bare__conflicts	my_project/libgit2/tests/libgit2/revert/bare.c	/^void test_revert_bare__conflicts(void)$/;"	f	typeref:typename:void
test_revert_bare__initialize	my_project/libgit2/tests/libgit2/revert/bare.c	/^void test_revert_bare__initialize(void)$/;"	f	typeref:typename:void
test_revert_bare__orphan	my_project/libgit2/tests/libgit2/revert/bare.c	/^void test_revert_bare__orphan(void)$/;"	f	typeref:typename:void
test_revert_rename__automerge	my_project/libgit2/tests/libgit2/revert/rename.c	/^void test_revert_rename__automerge(void)$/;"	f	typeref:typename:void
test_revert_rename__cleanup	my_project/libgit2/tests/libgit2/revert/rename.c	/^void test_revert_rename__cleanup(void)$/;"	f	typeref:typename:void
test_revert_rename__initialize	my_project/libgit2/tests/libgit2/revert/rename.c	/^void test_revert_rename__initialize(void)$/;"	f	typeref:typename:void
test_revert_workdir__again	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__again(void)$/;"	f	typeref:typename:void
test_revert_workdir__again_after_automerge	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__again_after_automerge(void)$/;"	f	typeref:typename:void
test_revert_workdir__again_after_edit	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__again_after_edit(void)$/;"	f	typeref:typename:void
test_revert_workdir__again_after_edit_two	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__again_after_edit_two(void)$/;"	f	typeref:typename:void
test_revert_workdir__automerge	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__automerge(void)$/;"	f	typeref:typename:void
test_revert_workdir__cleanup	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__cleanup(void)$/;"	f	typeref:typename:void
test_revert_workdir__conflict_use_ours	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__conflict_use_ours(void)$/;"	f	typeref:typename:void
test_revert_workdir__conflicts	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__conflicts(void)$/;"	f	typeref:typename:void
test_revert_workdir__head	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__head(void)$/;"	f	typeref:typename:void
test_revert_workdir__initialize	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__initialize(void)$/;"	f	typeref:typename:void
test_revert_workdir__merge_fails_without_mainline_specified	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__merge_fails_without_mainline_specified(void)$/;"	f	typeref:typename:void
test_revert_workdir__merge_first_parent	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__merge_first_parent(void)$/;"	f	typeref:typename:void
test_revert_workdir__merge_second_parent	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__merge_second_parent(void)$/;"	f	typeref:typename:void
test_revert_workdir__nonmerge_fails_mainline_specified	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__nonmerge_fails_mainline_specified(void)$/;"	f	typeref:typename:void
test_revert_workdir__orphan	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__orphan(void)$/;"	f	typeref:typename:void
test_revert_workdir__rename	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__rename(void)$/;"	f	typeref:typename:void
test_revert_workdir__rename_1_of_2	my_project/libgit2/tests/libgit2/revert/workdir.c	/^void test_revert_workdir__rename_1_of_2(void)$/;"	f	typeref:typename:void
test_revwalk_basic__big_timestamp	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__big_timestamp(void)$/;"	f	typeref:typename:void
test_revwalk_basic__cleanup	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__cleanup(void)$/;"	f	typeref:typename:void
test_revwalk_basic__disallow_non_commit	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__disallow_non_commit(void)$/;"	f	typeref:typename:void
test_revwalk_basic__from_new_to_old	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__from_new_to_old(void)$/;"	f	typeref:typename:void
test_revwalk_basic__glob_heads	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__glob_heads(void)$/;"	f	typeref:typename:void
test_revwalk_basic__glob_heads_with_invalid	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__glob_heads_with_invalid(void)$/;"	f	typeref:typename:void
test_revwalk_basic__glob_invalid_symbolic_ref	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__glob_invalid_symbolic_ref(void)$/;"	f	typeref:typename:void
test_revwalk_basic__hide_then_push	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__hide_then_push(void)$/;"	f	typeref:typename:void
test_revwalk_basic__initialize	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__initialize(void)$/;"	f	typeref:typename:void
test_revwalk_basic__mimic_git_rev_list	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__mimic_git_rev_list(void)$/;"	f	typeref:typename:void
test_revwalk_basic__multiple_push_1	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__multiple_push_1(void)$/;"	f	typeref:typename:void
test_revwalk_basic__multiple_push_2	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__multiple_push_2(void)$/;"	f	typeref:typename:void
test_revwalk_basic__newer_hidden_commit_hides_old_commits	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__newer_hidden_commit_hides_old_commits(void)$/;"	f	typeref:typename:void
test_revwalk_basic__old_hidden_commit_one	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__old_hidden_commit_one(void)$/;"	f	typeref:typename:void
test_revwalk_basic__old_hidden_commit_two	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__old_hidden_commit_two(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_all	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__push_all(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_head	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__push_head(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_head_hide_ref	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__push_head_hide_ref(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_head_hide_ref_nobase	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__push_head_hide_ref_nobase(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_mixed	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__push_mixed(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_range	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__push_range(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_range_merge_base	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__push_range_merge_base(void)$/;"	f	typeref:typename:void
test_revwalk_basic__push_range_no_range	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__push_range_no_range(void)$/;"	f	typeref:typename:void
test_revwalk_basic__sorted_after_reset	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__sorted_after_reset(void)$/;"	f	typeref:typename:void
test_revwalk_basic__sorting_modes	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__sorting_modes(void)$/;"	f	typeref:typename:void
test_revwalk_basic__topo_crash	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^void test_revwalk_basic__topo_crash(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__add_hide_cb_during_walking	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^void test_revwalk_hidecb__add_hide_cb_during_walking(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__change_cb_before_walk	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^void test_revwalk_hidecb__change_cb_before_walk(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__cleanup	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^void test_revwalk_hidecb__cleanup(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__hide_all_cb	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^void test_revwalk_hidecb__hide_all_cb(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__hide_none_cb	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^void test_revwalk_hidecb__hide_none_cb(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__hide_some_commits	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^void test_revwalk_hidecb__hide_some_commits(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__initialize	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^void test_revwalk_hidecb__initialize(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__test_payload	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^void test_revwalk_hidecb__test_payload(void)$/;"	f	typeref:typename:void
test_revwalk_hidecb__unset_cb_before_walk	my_project/libgit2/tests/libgit2/revwalk/hidecb.c	/^void test_revwalk_hidecb__unset_cb_before_walk(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__cleanup	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__cleanup(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__initialize	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__initialize(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__many_merge_branch	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__many_merge_branch(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__many_no_common_ancestor_returns_ENOTFOUND	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__many_no_common_ancestor_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__merged_branch	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__merged_branch(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__multiple_merge_bases	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__multiple_merge_bases(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__multiple_merge_bases_many_commits	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__multiple_merge_bases_many_commits(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__no_common_ancestor_returns_ENOTFOUND	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__no_common_ancestor_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__no_off_by_one_missing	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__no_off_by_one_missing(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__octopus_merge_branch	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__octopus_merge_branch(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__octopus_no_common_ancestor_returns_ENOTFOUND	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__octopus_no_common_ancestor_returns_ENOTFOUND(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__prefer_youngest_merge_base	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__prefer_youngest_merge_base(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__remove_redundant	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__remove_redundant(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__single1	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__single1(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__single2	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__single2(void)$/;"	f	typeref:typename:void
test_revwalk_mergebase__two_way_merge	my_project/libgit2/tests/libgit2/revwalk/mergebase.c	/^void test_revwalk_mergebase__two_way_merge(void)$/;"	f	typeref:typename:void
test_revwalk_signatureparsing__cleanup	my_project/libgit2/tests/libgit2/revwalk/signatureparsing.c	/^void test_revwalk_signatureparsing__cleanup(void)$/;"	f	typeref:typename:void
test_revwalk_signatureparsing__do_not_choke_when_name_contains_angle_brackets	my_project/libgit2/tests/libgit2/revwalk/signatureparsing.c	/^void test_revwalk_signatureparsing__do_not_choke_when_name_contains_angle_brackets(void)$/;"	f	typeref:typename:void
test_revwalk_signatureparsing__initialize	my_project/libgit2/tests/libgit2/revwalk/signatureparsing.c	/^void test_revwalk_signatureparsing__initialize(void)$/;"	f	typeref:typename:void
test_revwalk_simplify__cleanup	my_project/libgit2/tests/libgit2/revwalk/simplify.c	/^void test_revwalk_simplify__cleanup(void)$/;"	f	typeref:typename:void
test_revwalk_simplify__first_parent	my_project/libgit2/tests/libgit2/revwalk/simplify.c	/^void test_revwalk_simplify__first_parent(void)$/;"	f	typeref:typename:void
test_rmdir__can_remove_empty_parents	my_project/libgit2/tests/util/rmdir.c	/^void test_rmdir__can_remove_empty_parents(void)$/;"	f	typeref:typename:void
test_rmdir__can_skip_non_empty_dir	my_project/libgit2/tests/util/rmdir.c	/^void test_rmdir__can_skip_non_empty_dir(void)$/;"	f	typeref:typename:void
test_rmdir__cleanup	my_project/libgit2/tests/util/rmdir.c	/^void test_rmdir__cleanup(void)$/;"	f	typeref:typename:void
test_rmdir__delete_recursive	my_project/libgit2/tests/util/rmdir.c	/^void test_rmdir__delete_recursive(void)$/;"	f	typeref:typename:void
test_rmdir__fail_to_delete_non_empty_dir	my_project/libgit2/tests/util/rmdir.c	/^void test_rmdir__fail_to_delete_non_empty_dir(void)$/;"	f	typeref:typename:void
test_rmdir__initialize	my_project/libgit2/tests/util/rmdir.c	/^void test_rmdir__initialize(void)$/;"	f	typeref:typename:void
test_rmdir__keep_base	my_project/libgit2/tests/util/rmdir.c	/^void test_rmdir__keep_base(void)$/;"	f	typeref:typename:void
test_safe_path	my_project/libgit2/tests/libgit2/repo/open.c	/^static int test_safe_path(const char *path)$/;"	f	typeref:typename:int	file:
test_sha1__cleanup	my_project/libgit2/tests/util/sha1.c	/^void test_sha1__cleanup(void)$/;"	f	typeref:typename:void
test_sha1__detect_collision_attack	my_project/libgit2/tests/util/sha1.c	/^void test_sha1__detect_collision_attack(void)$/;"	f	typeref:typename:void
test_sha1__initialize	my_project/libgit2/tests/util/sha1.c	/^void test_sha1__initialize(void)$/;"	f	typeref:typename:void
test_sha1__sum	my_project/libgit2/tests/util/sha1.c	/^void test_sha1__sum(void)$/;"	f	typeref:typename:void
test_sha1__win32_providers	my_project/libgit2/tests/util/sha1.c	/^void test_sha1__win32_providers(void)$/;"	f	typeref:typename:void
test_sha256__cleanup	my_project/libgit2/tests/util/sha256.c	/^void test_sha256__cleanup(void)$/;"	f	typeref:typename:void
test_sha256__empty	my_project/libgit2/tests/util/sha256.c	/^void test_sha256__empty(void)$/;"	f	typeref:typename:void
test_sha256__hello	my_project/libgit2/tests/util/sha256.c	/^void test_sha256__hello(void)$/;"	f	typeref:typename:void
test_sha256__initialize	my_project/libgit2/tests/util/sha256.c	/^void test_sha256__initialize(void)$/;"	f	typeref:typename:void
test_sha256__pdf	my_project/libgit2/tests/util/sha256.c	/^void test_sha256__pdf(void)$/;"	f	typeref:typename:void
test_sha256__win32_providers	my_project/libgit2/tests/util/sha256.c	/^void test_sha256__win32_providers(void)$/;"	f	typeref:typename:void
test_sortedcache__in_memory	my_project/libgit2/tests/util/sortedcache.c	/^void test_sortedcache__in_memory(void)$/;"	f	typeref:typename:void
test_sortedcache__name_only	my_project/libgit2/tests/util/sortedcache.c	/^void test_sortedcache__name_only(void)$/;"	f	typeref:typename:void
test_sortedcache__on_disk	my_project/libgit2/tests/util/sortedcache.c	/^void test_sortedcache__on_disk(void)$/;"	f	typeref:typename:void
test_stash_apply__calls_progress_cb	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__calls_progress_cb(void)$/;"	f	typeref:typename:void
test_stash_apply__cleanup	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__cleanup(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_commit_with_default	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__conflict_commit_with_default(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_commit_with_reinstate_index	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__conflict_commit_with_reinstate_index(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_index_with_default	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__conflict_index_with_default(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_index_with_reinstate_index	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__conflict_index_with_reinstate_index(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_untracked_with_default	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__conflict_untracked_with_default(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_untracked_with_reinstate_index	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__conflict_untracked_with_reinstate_index(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_workdir_with_default	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__conflict_workdir_with_default(void)$/;"	f	typeref:typename:void
test_stash_apply__conflict_workdir_with_reinstate_index	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__conflict_workdir_with_reinstate_index(void)$/;"	f	typeref:typename:void
test_stash_apply__executes_notify_cb	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__executes_notify_cb(void)$/;"	f	typeref:typename:void
test_stash_apply__fails_with_uncommitted_changes_in_index	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__fails_with_uncommitted_changes_in_index(void)$/;"	f	typeref:typename:void
test_stash_apply__initialize	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__initialize(void)$/;"	f	typeref:typename:void
test_stash_apply__merges_new_file	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__merges_new_file(void)$/;"	f	typeref:typename:void
test_stash_apply__pop	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__pop(void)$/;"	f	typeref:typename:void
test_stash_apply__progress_cb_can_abort	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__progress_cb_can_abort(void)$/;"	f	typeref:typename:void
test_stash_apply__uses_reflog_like_indices_1	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__uses_reflog_like_indices_1(void)$/;"	f	typeref:typename:void
test_stash_apply__uses_reflog_like_indices_2	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__uses_reflog_like_indices_2(void)$/;"	f	typeref:typename:void
test_stash_apply__with_default	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__with_default(void)$/;"	f	typeref:typename:void
test_stash_apply__with_existing_file	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__with_existing_file(void)$/;"	f	typeref:typename:void
test_stash_apply__with_reinstate_index	my_project/libgit2/tests/libgit2/stash/apply.c	/^void test_stash_apply__with_reinstate_index(void)$/;"	f	typeref:typename:void
test_stash_drop__can_purge_the_stash_from_the_bottom	my_project/libgit2/tests/libgit2/stash/drop.c	/^void test_stash_drop__can_purge_the_stash_from_the_bottom(void)$/;"	f	typeref:typename:void
test_stash_drop__can_purge_the_stash_from_the_top	my_project/libgit2/tests/libgit2/stash/drop.c	/^void test_stash_drop__can_purge_the_stash_from_the_top(void)$/;"	f	typeref:typename:void
test_stash_drop__cannot_drop_a_non_existing_stashed_state	my_project/libgit2/tests/libgit2/stash/drop.c	/^void test_stash_drop__cannot_drop_a_non_existing_stashed_state(void)$/;"	f	typeref:typename:void
test_stash_drop__cannot_drop_from_an_empty_stash	my_project/libgit2/tests/libgit2/stash/drop.c	/^void test_stash_drop__cannot_drop_from_an_empty_stash(void)$/;"	f	typeref:typename:void
test_stash_drop__cleanup	my_project/libgit2/tests/libgit2/stash/drop.c	/^void test_stash_drop__cleanup(void)$/;"	f	typeref:typename:void
test_stash_drop__dropping_an_entry_rewrites_reflog_history	my_project/libgit2/tests/libgit2/stash/drop.c	/^void test_stash_drop__dropping_an_entry_rewrites_reflog_history(void)$/;"	f	typeref:typename:void
test_stash_drop__dropping_the_last_entry_removes_the_stash	my_project/libgit2/tests/libgit2/stash/drop.c	/^void test_stash_drop__dropping_the_last_entry_removes_the_stash(void)$/;"	f	typeref:typename:void
test_stash_drop__dropping_the_top_stash_updates_the_stash_reference	my_project/libgit2/tests/libgit2/stash/drop.c	/^void test_stash_drop__dropping_the_top_stash_updates_the_stash_reference(void)$/;"	f	typeref:typename:void
test_stash_drop__initialize	my_project/libgit2/tests/libgit2/stash/drop.c	/^void test_stash_drop__initialize(void)$/;"	f	typeref:typename:void
test_stash_foreach__can_enumerate_a_repository	my_project/libgit2/tests/libgit2/stash/foreach.c	/^void test_stash_foreach__can_enumerate_a_repository(void)$/;"	f	typeref:typename:void
test_stash_foreach__cleanup	my_project/libgit2/tests/libgit2/stash/foreach.c	/^void test_stash_foreach__cleanup(void)$/;"	f	typeref:typename:void
test_stash_foreach__enumerating_a_empty_repository_doesnt_fail	my_project/libgit2/tests/libgit2/stash/foreach.c	/^void test_stash_foreach__enumerating_a_empty_repository_doesnt_fail(void)$/;"	f	typeref:typename:void
test_stash_foreach__initialize	my_project/libgit2/tests/libgit2/stash/foreach.c	/^void test_stash_foreach__initialize(void)$/;"	f	typeref:typename:void
test_stash_save__can_accept_a_message	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__can_accept_a_message(void)$/;"	f	typeref:typename:void
test_stash_save__can_include_untracked_and_ignored_files	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__can_include_untracked_and_ignored_files(void)$/;"	f	typeref:typename:void
test_stash_save__can_include_untracked_files	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__can_include_untracked_files(void)$/;"	f	typeref:typename:void
test_stash_save__can_keep_all	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__can_keep_all(void)$/;"	f	typeref:typename:void
test_stash_save__can_keep_index	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__can_keep_index(void)$/;"	f	typeref:typename:void
test_stash_save__can_stage_normal_then_stage_untracked	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__can_stage_normal_then_stage_untracked(void)$/;"	f	typeref:typename:void
test_stash_save__can_stash_against_a_detached_head	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__can_stash_against_a_detached_head(void)$/;"	f	typeref:typename:void
test_stash_save__cannot_stash_against_a_bare_repository	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__cannot_stash_against_a_bare_repository(void)$/;"	f	typeref:typename:void
test_stash_save__cannot_stash_against_an_unborn_branch	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__cannot_stash_against_an_unborn_branch(void)$/;"	f	typeref:typename:void
test_stash_save__cannot_stash_when_there_are_no_local_change	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__cannot_stash_when_there_are_no_local_change(void)$/;"	f	typeref:typename:void
test_stash_save__cleanup	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__cleanup(void)$/;"	f	typeref:typename:void
test_stash_save__deleted_in_index_modified_in_workdir	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__deleted_in_index_modified_in_workdir(void)$/;"	f	typeref:typename:void
test_stash_save__does_not_keep_index_by_default	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__does_not_keep_index_by_default(void)$/;"	f	typeref:typename:void
test_stash_save__ignored_directory	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__ignored_directory(void)$/;"	f	typeref:typename:void
test_stash_save__including_untracked_without_any_untracked_file_creates_an_empty_tree	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__including_untracked_without_any_untracked_file_creates_an_empty_tree(void)$/;"	f	typeref:typename:void
test_stash_save__initialize	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__initialize(void)$/;"	f	typeref:typename:void
test_stash_save__multiline_message	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__multiline_message(void)$/;"	f	typeref:typename:void
test_stash_save__option_paths	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__option_paths(void)$/;"	f	typeref:typename:void
test_stash_save__skip_submodules	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__skip_submodules(void)$/;"	f	typeref:typename:void
test_stash_save__stashing_updates_the_reflog	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__stashing_updates_the_reflog(void)$/;"	f	typeref:typename:void
test_stash_save__untracked_regression	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__untracked_regression(void)$/;"	f	typeref:typename:void
test_stash_save__untracked_skips_ignored	my_project/libgit2/tests/libgit2/stash/save.c	/^void test_stash_save__untracked_skips_ignored(void)$/;"	f	typeref:typename:void
test_stash_submodules__cleanup	my_project/libgit2/tests/libgit2/stash/submodules.c	/^void test_stash_submodules__cleanup(void)$/;"	f	typeref:typename:void
test_stash_submodules__does_not_stash_modified_submodules	my_project/libgit2/tests/libgit2/stash/submodules.c	/^void test_stash_submodules__does_not_stash_modified_submodules(void)$/;"	f	typeref:typename:void
test_stash_submodules__initialize	my_project/libgit2/tests/libgit2/stash/submodules.c	/^void test_stash_submodules__initialize(void)$/;"	f	typeref:typename:void
test_stash_submodules__stash_is_empty_with_modified_submodules	my_project/libgit2/tests/libgit2/stash/submodules.c	/^void test_stash_submodules__stash_is_empty_with_modified_submodules(void)$/;"	f	typeref:typename:void
test_stat__0	my_project/libgit2/tests/util/stat.c	/^void test_stat__0(void)$/;"	f	typeref:typename:void
test_stat__cleanup	my_project/libgit2/tests/util/stat.c	/^void test_stat__cleanup(void)$/;"	f	typeref:typename:void
test_stat__initialize	my_project/libgit2/tests/util/stat.c	/^void test_stat__initialize(void)$/;"	f	typeref:typename:void
test_stat__root	my_project/libgit2/tests/util/stat.c	/^void test_stat__root(void)$/;"	f	typeref:typename:void
test_status	my_project/libgit2/tests/clar/clar.c	/^	enum cl_test_status test_status;$/;"	m	struct:__anon15d96e120108	typeref:enum:cl_test_status	file:
test_status_renames__both_casechange_one	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__both_casechange_one(void)$/;"	f	typeref:typename:void
test_status_renames__both_casechange_two	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__both_casechange_two(void)$/;"	f	typeref:typename:void
test_status_renames__both_one	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__both_one(void)$/;"	f	typeref:typename:void
test_status_renames__both_rename_from_rewrite	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__both_rename_from_rewrite(void)$/;"	f	typeref:typename:void
test_status_renames__both_two	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__both_two(void)$/;"	f	typeref:typename:void
test_status_renames__case_insensitive_h2i_and_i2wc	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__case_insensitive_h2i_and_i2wc(void)$/;"	f	typeref:typename:void
test_status_renames__cleanup	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__cleanup(void)$/;"	f	typeref:typename:void
test_status_renames__head2index_no_rename_from_rewrite	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__head2index_no_rename_from_rewrite(void)$/;"	f	typeref:typename:void
test_status_renames__head2index_one	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__head2index_one(void)$/;"	f	typeref:typename:void
test_status_renames__head2index_rename_from_rewrite	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__head2index_rename_from_rewrite(void)$/;"	f	typeref:typename:void
test_status_renames__head2index_two	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__head2index_two(void)$/;"	f	typeref:typename:void
test_status_renames__index2workdir_one	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__index2workdir_one(void)$/;"	f	typeref:typename:void
test_status_renames__index2workdir_rename_from_rewrite	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__index2workdir_rename_from_rewrite(void)$/;"	f	typeref:typename:void
test_status_renames__index2workdir_two	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__index2workdir_two(void)$/;"	f	typeref:typename:void
test_status_renames__initialize	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__initialize(void)$/;"	f	typeref:typename:void
test_status_renames__precomposed_unicode_rename	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__precomposed_unicode_rename(void)$/;"	f	typeref:typename:void
test_status_renames__precomposed_unicode_toggle_is_rename	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__precomposed_unicode_toggle_is_rename(void)$/;"	f	typeref:typename:void
test_status_renames__rename_threshold	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__rename_threshold(void)$/;"	f	typeref:typename:void
test_status_renames__rewrites_only_for_renames	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__rewrites_only_for_renames(void)$/;"	f	typeref:typename:void
test_status_renames__zero_byte_file_does_not_fail	my_project/libgit2/tests/libgit2/status/renames.c	/^void test_status_renames__zero_byte_file_does_not_fail(void)$/;"	f	typeref:typename:void
test_status_single__hash_single_empty_file	my_project/libgit2/tests/libgit2/status/single.c	/^void test_status_single__hash_single_empty_file(void)$/;"	f	typeref:typename:void
test_status_single__hash_single_file	my_project/libgit2/tests/libgit2/status/single.c	/^void test_status_single__hash_single_file(void)$/;"	f	typeref:typename:void
test_status_submodules__0	my_project/libgit2/tests/libgit2/status/submodules.c	/^void test_status_submodules__0(void)$/;"	f	typeref:typename:void
test_status_submodules__1	my_project/libgit2/tests/libgit2/status/submodules.c	/^void test_status_submodules__1(void)$/;"	f	typeref:typename:void
test_status_submodules__api	my_project/libgit2/tests/libgit2/status/submodules.c	/^void test_status_submodules__api(void)$/;"	f	typeref:typename:void
test_status_submodules__broken_stuff_that_git_allows	my_project/libgit2/tests/libgit2/status/submodules.c	/^void test_status_submodules__broken_stuff_that_git_allows(void)$/;"	f	typeref:typename:void
test_status_submodules__cleanup	my_project/libgit2/tests/libgit2/status/submodules.c	/^void test_status_submodules__cleanup(void)$/;"	f	typeref:typename:void
test_status_submodules__contained_untracked_repo	my_project/libgit2/tests/libgit2/status/submodules.c	/^void test_status_submodules__contained_untracked_repo(void)$/;"	f	typeref:typename:void
test_status_submodules__dirty_workdir_only	my_project/libgit2/tests/libgit2/status/submodules.c	/^void test_status_submodules__dirty_workdir_only(void)$/;"	f	typeref:typename:void
test_status_submodules__entry_but_dir_tracked	my_project/libgit2/tests/libgit2/status/submodules.c	/^void test_status_submodules__entry_but_dir_tracked(void)$/;"	f	typeref:typename:void
test_status_submodules__initialize	my_project/libgit2/tests/libgit2/status/submodules.c	/^void test_status_submodules__initialize(void)$/;"	f	typeref:typename:void
test_status_submodules__mixed_case	my_project/libgit2/tests/libgit2/status/submodules.c	/^void test_status_submodules__mixed_case(void)$/;"	f	typeref:typename:void
test_status_submodules__moved_head	my_project/libgit2/tests/libgit2/status/submodules.c	/^void test_status_submodules__moved_head(void)$/;"	f	typeref:typename:void
test_status_submodules__single_file	my_project/libgit2/tests/libgit2/status/submodules.c	/^void test_status_submodules__single_file(void)$/;"	f	typeref:typename:void
test_status_submodules__uninitialized	my_project/libgit2/tests/libgit2/status/submodules.c	/^void test_status_submodules__uninitialized(void)$/;"	f	typeref:typename:void
test_status_worktree__at_head_parent	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__at_head_parent(void)$/;"	f	typeref:typename:void
test_status_worktree__cleanup	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__cleanup(void)$/;"	f	typeref:typename:void
test_status_worktree__conflict_has_no_oid	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__conflict_has_no_oid(void)$/;"	f	typeref:typename:void
test_status_worktree__conflict_with_diff3	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__conflict_with_diff3(void)$/;"	f	typeref:typename:void
test_status_worktree__conflicted_item	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__conflicted_item(void)$/;"	f	typeref:typename:void
test_status_worktree__empty_repository	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__empty_repository(void)$/;"	f	typeref:typename:void
test_status_worktree__file_status_honors_case_ignorecase_regarding_untracked_files	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__file_status_honors_case_ignorecase_regarding_untracked_files(void)$/;"	f	typeref:typename:void
test_status_worktree__file_status_honors_core_ignorecase_false	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__file_status_honors_core_ignorecase_false(void)$/;"	f	typeref:typename:void
test_status_worktree__file_status_honors_core_ignorecase_true	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__file_status_honors_core_ignorecase_true(void)$/;"	f	typeref:typename:void
test_status_worktree__filemode_changes	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__filemode_changes(void)$/;"	f	typeref:typename:void
test_status_worktree__filemode_non755	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__filemode_non755(void)$/;"	f	typeref:typename:void
test_status_worktree__ignores	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__ignores(void)$/;"	f	typeref:typename:void
test_status_worktree__interruptable_foreach	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__interruptable_foreach(void)$/;"	f	typeref:typename:void
test_status_worktree__issue_592	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__issue_592(void)$/;"	f	typeref:typename:void
test_status_worktree__issue_592_2	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__issue_592_2(void)$/;"	f	typeref:typename:void
test_status_worktree__issue_592_3	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__issue_592_3(void)$/;"	f	typeref:typename:void
test_status_worktree__issue_592_4	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__issue_592_4(void)$/;"	f	typeref:typename:void
test_status_worktree__issue_592_5	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__issue_592_5(void)$/;"	f	typeref:typename:void
test_status_worktree__issue_592_ignored_dirs_with_tracked_content	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__issue_592_ignored_dirs_with_tracked_content(void)$/;"	f	typeref:typename:void
test_status_worktree__issue_592_ignores_0	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__issue_592_ignores_0(void)$/;"	f	typeref:typename:void
test_status_worktree__line_endings_dont_count_as_changes_with_autocrlf	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__line_endings_dont_count_as_changes_with_autocrlf(void)$/;"	f	typeref:typename:void
test_status_worktree__line_endings_dont_count_as_changes_with_autocrlf_issue_1397	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__line_endings_dont_count_as_changes_with_autocrlf_issue_1397(void)$/;"	f	typeref:typename:void
test_status_worktree__long_filenames	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__long_filenames(void)$/;"	f	typeref:typename:void
test_status_worktree__purged_worktree	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__purged_worktree(void)$/;"	f	typeref:typename:void
test_status_worktree__show_index_and_workdir	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__show_index_and_workdir(void)$/;"	f	typeref:typename:void
test_status_worktree__show_index_only	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__show_index_only(void)$/;"	f	typeref:typename:void
test_status_worktree__show_workdir_only	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__show_workdir_only(void)$/;"	f	typeref:typename:void
test_status_worktree__simple_delete	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__simple_delete(void)$/;"	f	typeref:typename:void
test_status_worktree__simple_delete_indexed	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__simple_delete_indexed(void)$/;"	f	typeref:typename:void
test_status_worktree__single_file	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__single_file(void)$/;"	f	typeref:typename:void
test_status_worktree__single_file_empty_repo	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__single_file_empty_repo(void)$/;"	f	typeref:typename:void
test_status_worktree__single_folder	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__single_folder(void)$/;"	f	typeref:typename:void
test_status_worktree__single_nonexistent_file	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__single_nonexistent_file(void)$/;"	f	typeref:typename:void
test_status_worktree__single_nonexistent_file_empty_repo	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__single_nonexistent_file_empty_repo(void)$/;"	f	typeref:typename:void
test_status_worktree__skip_hash	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__skip_hash(void)$/;"	f	typeref:typename:void
test_status_worktree__sorting_by_case	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__sorting_by_case(void)$/;"	f	typeref:typename:void
test_status_worktree__swap_subdir_and_file	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__swap_subdir_and_file(void)$/;"	f	typeref:typename:void
test_status_worktree__swap_subdir_with_recurse_and_pathspec	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__swap_subdir_with_recurse_and_pathspec(void)$/;"	f	typeref:typename:void
test_status_worktree__unreadable	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__unreadable(void)$/;"	f	typeref:typename:void
test_status_worktree__unreadable_as_untracked	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__unreadable_as_untracked(void)$/;"	f	typeref:typename:void
test_status_worktree__unreadable_not_included	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__unreadable_not_included(void)$/;"	f	typeref:typename:void
test_status_worktree__update_index_with_symlink_doesnt_change_mode	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__update_index_with_symlink_doesnt_change_mode(void)$/;"	f	typeref:typename:void
test_status_worktree__update_stat_cache_0	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__update_stat_cache_0(void)$/;"	f	typeref:typename:void
test_status_worktree__whole_repository	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__whole_repository(void)$/;"	f	typeref:typename:void
test_status_worktree__with_directory_in_pathlist	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__with_directory_in_pathlist(void)$/;"	f	typeref:typename:void
test_status_worktree__within_subdir	my_project/libgit2/tests/libgit2/status/worktree.c	/^void test_status_worktree__within_subdir(void)$/;"	f	typeref:typename:void
test_status_worktree_init__bracket_in_filename	my_project/libgit2/tests/libgit2/status/worktree_init.c	/^void test_status_worktree_init__bracket_in_filename(void)$/;"	f	typeref:typename:void
test_status_worktree_init__cannot_retrieve_the_status_of_a_bare_repository	my_project/libgit2/tests/libgit2/status/worktree_init.c	/^void test_status_worktree_init__cannot_retrieve_the_status_of_a_bare_repository(void)$/;"	f	typeref:typename:void
test_status_worktree_init__disable_pathspec_match	my_project/libgit2/tests/libgit2/status/worktree_init.c	/^void test_status_worktree_init__disable_pathspec_match(void)$/;"	f	typeref:typename:void
test_status_worktree_init__first_commit_in_progress	my_project/libgit2/tests/libgit2/status/worktree_init.c	/^void test_status_worktree_init__first_commit_in_progress(void)$/;"	f	typeref:typename:void
test_status_worktree_init__new_staged_file_must_handle_crlf	my_project/libgit2/tests/libgit2/status/worktree_init.c	/^void test_status_worktree_init__new_staged_file_must_handle_crlf(void)$/;"	f	typeref:typename:void
test_status_worktree_init__space_in_filename	my_project/libgit2/tests/libgit2/status/worktree_init.c	/^void test_status_worktree_init__space_in_filename(void)$/;"	f	typeref:typename:void
test_status_worktree_init__status_file_with_clean_index_and_empty_workdir	my_project/libgit2/tests/libgit2/status/worktree_init.c	/^void test_status_worktree_init__status_file_with_clean_index_and_empty_workdir(void)$/;"	f	typeref:typename:void
test_status_worktree_init__status_file_without_index_or_workdir	my_project/libgit2/tests/libgit2/status/worktree_init.c	/^void test_status_worktree_init__status_file_without_index_or_workdir(void)$/;"	f	typeref:typename:void
test_str_basic__printf	my_project/libgit2/tests/util/str/basic.c	/^void test_str_basic__printf(void)$/;"	f	typeref:typename:void
test_str_basic__resize	my_project/libgit2/tests/util/str/basic.c	/^void test_str_basic__resize(void)$/;"	f	typeref:typename:void
test_str_basic__resize_incremental	my_project/libgit2/tests/util/str/basic.c	/^void test_str_basic__resize_incremental(void)$/;"	f	typeref:typename:void
test_str_oom__allocation_failure	my_project/libgit2/tests/util/str/oom.c	/^void test_str_oom__allocation_failure(void)$/;"	f	typeref:typename:void
test_str_oom__cleanup	my_project/libgit2/tests/util/str/oom.c	/^void test_str_oom__cleanup(void)$/;"	f	typeref:typename:void
test_str_oom__grow	my_project/libgit2/tests/util/str/oom.c	/^void test_str_oom__grow(void)$/;"	f	typeref:typename:void
test_str_oom__grow_by	my_project/libgit2/tests/util/str/oom.c	/^void test_str_oom__grow_by(void)$/;"	f	typeref:typename:void
test_str_oom__initialize	my_project/libgit2/tests/util/str/oom.c	/^void test_str_oom__initialize(void)$/;"	f	typeref:typename:void
test_str_percent__decode_succeeds	my_project/libgit2/tests/util/str/percent.c	/^void test_str_percent__decode_succeeds(void)$/;"	f	typeref:typename:void
test_str_percent__ignores_invalid	my_project/libgit2/tests/util/str/percent.c	/^void test_str_percent__ignores_invalid(void)$/;"	f	typeref:typename:void
test_str_quote__quote_succeeds	my_project/libgit2/tests/util/str/quote.c	/^void test_str_quote__quote_succeeds(void)$/;"	f	typeref:typename:void
test_str_quote__unquote_fails	my_project/libgit2/tests/util/str/quote.c	/^void test_str_quote__unquote_fails(void)$/;"	f	typeref:typename:void
test_str_quote__unquote_succeeds	my_project/libgit2/tests/util/str/quote.c	/^void test_str_quote__unquote_succeeds(void)$/;"	f	typeref:typename:void
test_str_splice__append	my_project/libgit2/tests/util/str/splice.c	/^void test_str_splice__append(void)$/;"	f	typeref:typename:void
test_str_splice__cleanup	my_project/libgit2/tests/util/str/splice.c	/^void test_str_splice__cleanup(void) {$/;"	f	typeref:typename:void
test_str_splice__dont_do_anything	my_project/libgit2/tests/util/str/splice.c	/^void test_str_splice__dont_do_anything(void)$/;"	f	typeref:typename:void
test_str_splice__initialize	my_project/libgit2/tests/util/str/splice.c	/^void test_str_splice__initialize(void) {$/;"	f	typeref:typename:void
test_str_splice__insert_at	my_project/libgit2/tests/util/str/splice.c	/^void test_str_splice__insert_at(void)$/;"	f	typeref:typename:void
test_str_splice__preprend	my_project/libgit2/tests/util/str/splice.c	/^void test_str_splice__preprend(void)$/;"	f	typeref:typename:void
test_str_splice__remove_at	my_project/libgit2/tests/util/str/splice.c	/^void test_str_splice__remove_at(void)$/;"	f	typeref:typename:void
test_str_splice__replace	my_project/libgit2/tests/util/str/splice.c	/^void test_str_splice__replace(void)$/;"	f	typeref:typename:void
test_str_splice__replace_with_longer	my_project/libgit2/tests/util/str/splice.c	/^void test_str_splice__replace_with_longer(void)$/;"	f	typeref:typename:void
test_str_splice__replace_with_shorter	my_project/libgit2/tests/util/str/splice.c	/^void test_str_splice__replace_with_shorter(void)$/;"	f	typeref:typename:void
test_str_splice__truncate	my_project/libgit2/tests/util/str/splice.c	/^void test_str_splice__truncate(void)$/;"	f	typeref:typename:void
test_stream	my_project/libgit2/tests/libgit2/filter/stream.c	/^static void test_stream(size_t numchunks)$/;"	f	typeref:typename:void	file:
test_stream	my_project/libgit2/tests/libgit2/stream/deprecated.c	/^static git_stream test_stream;$/;"	v	typeref:typename:git_stream	file:
test_stream	my_project/libgit2/tests/libgit2/stream/registration.c	/^static git_stream test_stream;$/;"	v	typeref:typename:git_stream	file:
test_stream_deprecated__cleanup	my_project/libgit2/tests/libgit2/stream/deprecated.c	/^void test_stream_deprecated__cleanup(void)$/;"	f	typeref:typename:void
test_stream_deprecated__register_tls	my_project/libgit2/tests/libgit2/stream/deprecated.c	/^void test_stream_deprecated__register_tls(void)$/;"	f	typeref:typename:void
test_stream_init	my_project/libgit2/tests/libgit2/stream/deprecated.c	/^static int test_stream_init(git_stream **out, const char *host, const char *port)$/;"	f	typeref:typename:int	file:
test_stream_init	my_project/libgit2/tests/libgit2/stream/registration.c	/^static int test_stream_init(git_stream **out, const char *host, const char *port)$/;"	f	typeref:typename:int	file:
test_stream_registration__both	my_project/libgit2/tests/libgit2/stream/registration.c	/^void test_stream_registration__both(void)$/;"	f	typeref:typename:void
test_stream_registration__cleanup	my_project/libgit2/tests/libgit2/stream/registration.c	/^void test_stream_registration__cleanup(void)$/;"	f	typeref:typename:void
test_stream_registration__insecure	my_project/libgit2/tests/libgit2/stream/registration.c	/^void test_stream_registration__insecure(void)$/;"	f	typeref:typename:void
test_stream_registration__tls	my_project/libgit2/tests/libgit2/stream/registration.c	/^void test_stream_registration__tls(void)$/;"	f	typeref:typename:void
test_stream_wrap	my_project/libgit2/tests/libgit2/stream/registration.c	/^static int test_stream_wrap(git_stream **out, git_stream *in, const char *host)$/;"	f	typeref:typename:int	file:
test_stress_diff__cleanup	my_project/libgit2/tests/libgit2/stress/diff.c	/^void test_stress_diff__cleanup(void)$/;"	f	typeref:typename:void
test_stress_diff__initialize	my_project/libgit2/tests/libgit2/stress/diff.c	/^void test_stress_diff__initialize(void)$/;"	f	typeref:typename:void
test_stress_diff__rename_big_files	my_project/libgit2/tests/libgit2/stress/diff.c	/^void test_stress_diff__rename_big_files(void)$/;"	f	typeref:typename:void
test_stress_diff__rename_many_files	my_project/libgit2/tests/libgit2/stress/diff.c	/^void test_stress_diff__rename_many_files(void)$/;"	f	typeref:typename:void
test_string	my_project/libgit2/tests/util/gitstr.c	/^const char *test_string = TESTSTR;$/;"	v	typeref:typename:const char *
test_string	my_project/libgit2/tests/util/str/basic.c	/^static const char *test_string = "Have you seen that? Have you seeeen that??";$/;"	v	typeref:typename:const char *	file:
test_string__0	my_project/libgit2/tests/util/string.c	/^void test_string__0(void)$/;"	f	typeref:typename:void
test_string__1	my_project/libgit2/tests/util/string.c	/^void test_string__1(void)$/;"	f	typeref:typename:void
test_string__2	my_project/libgit2/tests/util/string.c	/^void test_string__2(void)$/;"	f	typeref:typename:void
test_string__prefixncmp	my_project/libgit2/tests/util/string.c	/^void test_string__prefixncmp(void)$/;"	f	typeref:typename:void
test_string__prefixncmp_icase	my_project/libgit2/tests/util/string.c	/^void test_string__prefixncmp_icase(void)$/;"	f	typeref:typename:void
test_string__strcasecmp	my_project/libgit2/tests/util/string.c	/^void test_string__strcasecmp(void)$/;"	f	typeref:typename:void
test_string__strcmp	my_project/libgit2/tests/util/string.c	/^void test_string__strcmp(void)$/;"	f	typeref:typename:void
test_string__strlcmp	my_project/libgit2/tests/util/string.c	/^void test_string__strlcmp(void)$/;"	f	typeref:typename:void
test_string_x2	my_project/libgit2/tests/util/gitstr.c	/^const char *test_string_x2 = TESTSTR TESTSTR;$/;"	v	typeref:typename:const char *
test_strmap__0	my_project/libgit2/tests/util/strmap.c	/^void test_strmap__0(void)$/;"	f	typeref:typename:void
test_strmap__cleanup	my_project/libgit2/tests/util/strmap.c	/^void test_strmap__cleanup(void)$/;"	f	typeref:typename:void
test_strmap__deleted_entry_cannot_be_retrieved	my_project/libgit2/tests/util/strmap.c	/^void test_strmap__deleted_entry_cannot_be_retrieved(void)$/;"	f	typeref:typename:void
test_strmap__get_returns_null_on_nonexisting_key	my_project/libgit2/tests/util/strmap.c	/^void test_strmap__get_returns_null_on_nonexisting_key(void)$/;"	f	typeref:typename:void
test_strmap__get_succeeds_with_existing_entries	my_project/libgit2/tests/util/strmap.c	/^void test_strmap__get_succeeds_with_existing_entries(void)$/;"	f	typeref:typename:void
test_strmap__initialize	my_project/libgit2/tests/util/strmap.c	/^void test_strmap__initialize(void)$/;"	f	typeref:typename:void
test_strmap__inserted_strings_can_be_retrieved	my_project/libgit2/tests/util/strmap.c	/^void test_strmap__inserted_strings_can_be_retrieved(void)$/;"	f	typeref:typename:void
test_strmap__inserting_many_keys_succeeds	my_project/libgit2/tests/util/strmap.c	/^void test_strmap__inserting_many_keys_succeeds(void)$/;"	f	typeref:typename:void
test_strmap__iterating_empty_map_stops_immediately	my_project/libgit2/tests/util/strmap.c	/^void test_strmap__iterating_empty_map_stops_immediately(void)$/;"	f	typeref:typename:void
test_strmap__iteration	my_project/libgit2/tests/util/strmap.c	/^void test_strmap__iteration(void)$/;"	f	typeref:typename:void
test_strmap__set_persists_key	my_project/libgit2/tests/util/strmap.c	/^void test_strmap__set_persists_key(void)$/;"	f	typeref:typename:void
test_strmap__set_persists_multpile_keys	my_project/libgit2/tests/util/strmap.c	/^void test_strmap__set_persists_multpile_keys(void)$/;"	f	typeref:typename:void
test_strmap__set_updates_existing_key	my_project/libgit2/tests/util/strmap.c	/^void test_strmap__set_updates_existing_key(void)$/;"	f	typeref:typename:void
test_strtol__base_autodetection	my_project/libgit2/tests/util/strtol.c	/^void test_strtol__base_autodetection(void)$/;"	f	typeref:typename:void
test_strtol__buffer_length_truncates	my_project/libgit2/tests/util/strtol.c	/^void test_strtol__buffer_length_truncates(void)$/;"	f	typeref:typename:void
test_strtol__buffer_length_with_autodetection_truncates	my_project/libgit2/tests/util/strtol.c	/^void test_strtol__buffer_length_with_autodetection_truncates(void)$/;"	f	typeref:typename:void
test_strtol__buffer_length_with_leading_sign_truncates	my_project/libgit2/tests/util/strtol.c	/^void test_strtol__buffer_length_with_leading_sign_truncates(void)$/;"	f	typeref:typename:void
test_strtol__buffer_length_with_leading_ws_truncates	my_project/libgit2/tests/util/strtol.c	/^void test_strtol__buffer_length_with_leading_ws_truncates(void)$/;"	f	typeref:typename:void
test_strtol__error_message_cuts_off	my_project/libgit2/tests/util/strtol.c	/^void test_strtol__error_message_cuts_off(void)$/;"	f	typeref:typename:void
test_strtol__int32	my_project/libgit2/tests/util/strtol.c	/^void test_strtol__int32(void)$/;"	f	typeref:typename:void
test_strtol__int64	my_project/libgit2/tests/util/strtol.c	/^void test_strtol__int64(void)$/;"	f	typeref:typename:void
test_submodule_add__cleanup	my_project/libgit2/tests/libgit2/submodule/add.c	/^void test_submodule_add__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_add__file_exists_in_index	my_project/libgit2/tests/libgit2/submodule/add.c	/^void test_submodule_add__file_exists_in_index(void)$/;"	f	typeref:typename:void
test_submodule_add__path_exists_in_index	my_project/libgit2/tests/libgit2/submodule/add.c	/^void test_submodule_add__path_exists_in_index(void)$/;"	f	typeref:typename:void
test_submodule_add__submodule_clone	my_project/libgit2/tests/libgit2/submodule/add.c	/^void test_submodule_add__submodule_clone(void)$/;"	f	typeref:typename:void
test_submodule_add__submodule_clone_into_nonempty_dir_succeeds	my_project/libgit2/tests/libgit2/submodule/add.c	/^void test_submodule_add__submodule_clone_into_nonempty_dir_succeeds(void)$/;"	f	typeref:typename:void
test_submodule_add__submodule_clone_twice_fails	my_project/libgit2/tests/libgit2/submodule/add.c	/^void test_submodule_add__submodule_clone_twice_fails(void)$/;"	f	typeref:typename:void
test_submodule_add__url_absolute	my_project/libgit2/tests/libgit2/submodule/add.c	/^void test_submodule_add__url_absolute(void)$/;"	f	typeref:typename:void
test_submodule_add__url_relative	my_project/libgit2/tests/libgit2/submodule/add.c	/^void test_submodule_add__url_relative(void)$/;"	f	typeref:typename:void
test_submodule_add__url_relative_to_origin	my_project/libgit2/tests/libgit2/submodule/add.c	/^void test_submodule_add__url_relative_to_origin(void)$/;"	f	typeref:typename:void
test_submodule_add__url_relative_to_workdir	my_project/libgit2/tests/libgit2/submodule/add.c	/^void test_submodule_add__url_relative_to_workdir(void)$/;"	f	typeref:typename:void
test_submodule_escape__cleanup	my_project/libgit2/tests/libgit2/submodule/escape.c	/^void test_submodule_escape__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_escape__from_gitdir	my_project/libgit2/tests/libgit2/submodule/escape.c	/^void test_submodule_escape__from_gitdir(void)$/;"	f	typeref:typename:void
test_submodule_escape__from_gitdir_windows	my_project/libgit2/tests/libgit2/submodule/escape.c	/^void test_submodule_escape__from_gitdir_windows(void)$/;"	f	typeref:typename:void
test_submodule_init__absolute_url	my_project/libgit2/tests/libgit2/submodule/init.c	/^void test_submodule_init__absolute_url(void)$/;"	f	typeref:typename:void
test_submodule_init__cleanup	my_project/libgit2/tests/libgit2/submodule/init.c	/^void test_submodule_init__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_init__relative_url	my_project/libgit2/tests/libgit2/submodule/init.c	/^void test_submodule_init__relative_url(void)$/;"	f	typeref:typename:void
test_submodule_init__relative_url_detached_head	my_project/libgit2/tests/libgit2/submodule/init.c	/^void test_submodule_init__relative_url_detached_head(void)$/;"	f	typeref:typename:void
test_submodule_inject_option__cleanup	my_project/libgit2/tests/libgit2/submodule/inject_option.c	/^void test_submodule_inject_option__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_inject_option__initialize	my_project/libgit2/tests/libgit2/submodule/inject_option.c	/^void test_submodule_inject_option__initialize(void)$/;"	f	typeref:typename:void
test_submodule_inject_option__path	my_project/libgit2/tests/libgit2/submodule/inject_option.c	/^void test_submodule_inject_option__path(void)$/;"	f	typeref:typename:void
test_submodule_inject_option__url	my_project/libgit2/tests/libgit2/submodule/inject_option.c	/^void test_submodule_inject_option__url(void)$/;"	f	typeref:typename:void
test_submodule_lookup__accessors	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__accessors(void)$/;"	f	typeref:typename:void
test_submodule_lookup__backslashes	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__backslashes(void)$/;"	f	typeref:typename:void
test_submodule_lookup__cached	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__cached(void)$/;"	f	typeref:typename:void
test_submodule_lookup__can_be_dupped	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__can_be_dupped(void)$/;"	f	typeref:typename:void
test_submodule_lookup__cleanup	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_lookup__dotpath_in_name	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__dotpath_in_name(void)$/;"	f	typeref:typename:void
test_submodule_lookup__duplicated_path	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__duplicated_path(void)$/;"	f	typeref:typename:void
test_submodule_lookup__fail_invalid_gitmodules	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__fail_invalid_gitmodules(void)$/;"	f	typeref:typename:void
test_submodule_lookup__foreach	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__foreach(void)$/;"	f	typeref:typename:void
test_submodule_lookup__foreach_in_bare_repository_fails	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__foreach_in_bare_repository_fails(void)$/;"	f	typeref:typename:void
test_submodule_lookup__initialize	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__initialize(void)$/;"	f	typeref:typename:void
test_submodule_lookup__just_added	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__just_added(void)$/;"	f	typeref:typename:void
test_submodule_lookup__lookup_even_with_missing_index	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__lookup_even_with_missing_index(void)$/;"	f	typeref:typename:void
test_submodule_lookup__lookup_even_with_unborn_head	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__lookup_even_with_unborn_head(void)$/;"	f	typeref:typename:void
test_submodule_lookup__lookup_in_bare_repository_fails	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__lookup_in_bare_repository_fails(void)$/;"	f	typeref:typename:void
test_submodule_lookup__prefix_name	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__prefix_name(void)$/;"	f	typeref:typename:void
test_submodule_lookup__renamed	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__renamed(void)$/;"	f	typeref:typename:void
test_submodule_lookup__simple_lookup	my_project/libgit2/tests/libgit2/submodule/lookup.c	/^void test_submodule_lookup__simple_lookup(void)$/;"	f	typeref:typename:void
test_submodule_modify__init	my_project/libgit2/tests/libgit2/submodule/modify.c	/^void test_submodule_modify__init(void)$/;"	f	typeref:typename:void
test_submodule_modify__initialize	my_project/libgit2/tests/libgit2/submodule/modify.c	/^void test_submodule_modify__initialize(void)$/;"	f	typeref:typename:void
test_submodule_modify__set_branch	my_project/libgit2/tests/libgit2/submodule/modify.c	/^void test_submodule_modify__set_branch(void)$/;"	f	typeref:typename:void
test_submodule_modify__set_fetch_recurse_submodules	my_project/libgit2/tests/libgit2/submodule/modify.c	/^void test_submodule_modify__set_fetch_recurse_submodules(void)$/;"	f	typeref:typename:void
test_submodule_modify__set_ignore	my_project/libgit2/tests/libgit2/submodule/modify.c	/^void test_submodule_modify__set_ignore(void)$/;"	f	typeref:typename:void
test_submodule_modify__set_relative_url	my_project/libgit2/tests/libgit2/submodule/modify.c	/^void test_submodule_modify__set_relative_url(void)$/;"	f	typeref:typename:void
test_submodule_modify__set_update	my_project/libgit2/tests/libgit2/submodule/modify.c	/^void test_submodule_modify__set_update(void)$/;"	f	typeref:typename:void
test_submodule_modify__set_url	my_project/libgit2/tests/libgit2/submodule/modify.c	/^void test_submodule_modify__set_url(void)$/;"	f	typeref:typename:void
test_submodule_modify__sync	my_project/libgit2/tests/libgit2/submodule/modify.c	/^void test_submodule_modify__sync(void)$/;"	f	typeref:typename:void
test_submodule_nosubs__add	my_project/libgit2/tests/libgit2/submodule/nosubs.c	/^void test_submodule_nosubs__add(void)$/;"	f	typeref:typename:void
test_submodule_nosubs__add_and_delete	my_project/libgit2/tests/libgit2/submodule/nosubs.c	/^void test_submodule_nosubs__add_and_delete(void)$/;"	f	typeref:typename:void
test_submodule_nosubs__bad_gitmodules	my_project/libgit2/tests/libgit2/submodule/nosubs.c	/^void test_submodule_nosubs__bad_gitmodules(void)$/;"	f	typeref:typename:void
test_submodule_nosubs__cleanup	my_project/libgit2/tests/libgit2/submodule/nosubs.c	/^void test_submodule_nosubs__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_nosubs__foreach	my_project/libgit2/tests/libgit2/submodule/nosubs.c	/^void test_submodule_nosubs__foreach(void)$/;"	f	typeref:typename:void
test_submodule_nosubs__lookup	my_project/libgit2/tests/libgit2/submodule/nosubs.c	/^void test_submodule_nosubs__lookup(void)$/;"	f	typeref:typename:void
test_submodule_open__cleanup	my_project/libgit2/tests/libgit2/submodule/open.c	/^void test_submodule_open__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_open__direct_open_succeeds	my_project/libgit2/tests/libgit2/submodule/open.c	/^void test_submodule_open__direct_open_succeeds(void)$/;"	f	typeref:typename:void
test_submodule_open__direct_open_succeeds_for_broken_sm_with_gitdir	my_project/libgit2/tests/libgit2/submodule/open.c	/^void test_submodule_open__direct_open_succeeds_for_broken_sm_with_gitdir(void)$/;"	f	typeref:typename:void
test_submodule_open__initialize	my_project/libgit2/tests/libgit2/submodule/open.c	/^void test_submodule_open__initialize(void)$/;"	f	typeref:typename:void
test_submodule_open__opening_via_lookup_succeeds	my_project/libgit2/tests/libgit2/submodule/open.c	/^void test_submodule_open__opening_via_lookup_succeeds(void)$/;"	f	typeref:typename:void
test_submodule_repository_init__basic	my_project/libgit2/tests/libgit2/submodule/repository_init.c	/^void test_submodule_repository_init__basic(void)$/;"	f	typeref:typename:void
test_submodule_status__cleanup	my_project/libgit2/tests/libgit2/submodule/status.c	/^void test_submodule_status__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_status__ignore_all	my_project/libgit2/tests/libgit2/submodule/status.c	/^void test_submodule_status__ignore_all(void)$/;"	f	typeref:typename:void
test_submodule_status__ignore_dirty	my_project/libgit2/tests/libgit2/submodule/status.c	/^void test_submodule_status__ignore_dirty(void)$/;"	f	typeref:typename:void
test_submodule_status__ignore_none	my_project/libgit2/tests/libgit2/submodule/status.c	/^void test_submodule_status__ignore_none(void)$/;"	f	typeref:typename:void
test_submodule_status__ignore_untracked	my_project/libgit2/tests/libgit2/submodule/status.c	/^void test_submodule_status__ignore_untracked(void)$/;"	f	typeref:typename:void
test_submodule_status__initialize	my_project/libgit2/tests/libgit2/submodule/status.c	/^void test_submodule_status__initialize(void)$/;"	f	typeref:typename:void
test_submodule_status__iterator	my_project/libgit2/tests/libgit2/submodule/status.c	/^void test_submodule_status__iterator(void)$/;"	f	typeref:typename:void
test_submodule_status__unchanged	my_project/libgit2/tests/libgit2/submodule/status.c	/^void test_submodule_status__unchanged(void)$/;"	f	typeref:typename:void
test_submodule_status__untracked_dirs_containing_ignored_files	my_project/libgit2/tests/libgit2/submodule/status.c	/^void test_submodule_status__untracked_dirs_containing_ignored_files(void)$/;"	f	typeref:typename:void
test_submodule_update__can_force_update	my_project/libgit2/tests/libgit2/submodule/update.c	/^void test_submodule_update__can_force_update(void)$/;"	f	typeref:typename:void
test_submodule_update__cleanup	my_project/libgit2/tests/libgit2/submodule/update.c	/^void test_submodule_update__cleanup(void)$/;"	f	typeref:typename:void
test_submodule_update__uninitialized_submodule_no_init	my_project/libgit2/tests/libgit2/submodule/update.c	/^void test_submodule_update__uninitialized_submodule_no_init(void)$/;"	f	typeref:typename:void
test_submodule_update__update_already_checked_out_submodule	my_project/libgit2/tests/libgit2/submodule/update.c	/^void test_submodule_update__update_already_checked_out_submodule(void)$/;"	f	typeref:typename:void
test_submodule_update__update_and_init_submodule	my_project/libgit2/tests/libgit2/submodule/update.c	/^void test_submodule_update__update_and_init_submodule(void)$/;"	f	typeref:typename:void
test_submodule_update__update_blocks_on_dirty_wd	my_project/libgit2/tests/libgit2/submodule/update.c	/^void test_submodule_update__update_blocks_on_dirty_wd(void)$/;"	f	typeref:typename:void
test_submodule_update__update_skip_configured_missing_submodule	my_project/libgit2/tests/libgit2/submodule/update.c	/^void test_submodule_update__update_skip_configured_missing_submodule(void)$/;"	f	typeref:typename:void
test_submodule_update__update_submodule	my_project/libgit2/tests/libgit2/submodule/update.c	/^void test_submodule_update__update_submodule(void)$/;"	f	typeref:typename:void
test_submodule_update__update_submodule_with_path	my_project/libgit2/tests/libgit2/submodule/update.c	/^void test_submodule_update__update_submodule_with_path(void)$/;"	f	typeref:typename:void
test_threads_atomic__atomic32_add	my_project/libgit2/tests/libgit2/threads/atomic.c	/^void test_threads_atomic__atomic32_add(void)$/;"	f	typeref:typename:void
test_threads_atomic__atomic32_dec	my_project/libgit2/tests/libgit2/threads/atomic.c	/^void test_threads_atomic__atomic32_dec(void)$/;"	f	typeref:typename:void
test_threads_atomic__atomic32_get	my_project/libgit2/tests/libgit2/threads/atomic.c	/^void test_threads_atomic__atomic32_get(void)$/;"	f	typeref:typename:void
test_threads_atomic__atomic32_inc	my_project/libgit2/tests/libgit2/threads/atomic.c	/^void test_threads_atomic__atomic32_inc(void)$/;"	f	typeref:typename:void
test_threads_atomic__atomic32_set	my_project/libgit2/tests/libgit2/threads/atomic.c	/^void test_threads_atomic__atomic32_set(void)$/;"	f	typeref:typename:void
test_threads_atomic__atomic64_add	my_project/libgit2/tests/libgit2/threads/atomic.c	/^void test_threads_atomic__atomic64_add(void)$/;"	f	typeref:typename:void
test_threads_atomic__atomic64_get	my_project/libgit2/tests/libgit2/threads/atomic.c	/^void test_threads_atomic__atomic64_get(void)$/;"	f	typeref:typename:void
test_threads_atomic__atomic64_set	my_project/libgit2/tests/libgit2/threads/atomic.c	/^void test_threads_atomic__atomic64_set(void)$/;"	f	typeref:typename:void
test_threads_atomic__cas_intptr	my_project/libgit2/tests/libgit2/threads/atomic.c	/^void test_threads_atomic__cas_intptr(void)$/;"	f	typeref:typename:void
test_threads_atomic__cas_pointer	my_project/libgit2/tests/libgit2/threads/atomic.c	/^void test_threads_atomic__cas_pointer(void)$/;"	f	typeref:typename:void
test_threads_atomic__load_intptr	my_project/libgit2/tests/libgit2/threads/atomic.c	/^void test_threads_atomic__load_intptr(void)$/;"	f	typeref:typename:void
test_threads_atomic__load_ptr	my_project/libgit2/tests/libgit2/threads/atomic.c	/^void test_threads_atomic__load_ptr(void)$/;"	f	typeref:typename:void
test_threads_atomic__swap	my_project/libgit2/tests/libgit2/threads/atomic.c	/^void test_threads_atomic__swap(void)$/;"	f	typeref:typename:void
test_threads_basic__cache	my_project/libgit2/tests/libgit2/threads/basic.c	/^void test_threads_basic__cache(void)$/;"	f	typeref:typename:void
test_threads_basic__cleanup	my_project/libgit2/tests/libgit2/threads/basic.c	/^void test_threads_basic__cleanup(void)$/;"	f	typeref:typename:void
test_threads_basic__exit	my_project/libgit2/tests/libgit2/threads/basic.c	/^void test_threads_basic__exit(void)$/;"	f	typeref:typename:void
test_threads_basic__initialize	my_project/libgit2/tests/libgit2/threads/basic.c	/^void test_threads_basic__initialize(void)$/;"	f	typeref:typename:void
test_threads_basic__multiple_init	my_project/libgit2/tests/libgit2/threads/basic.c	/^void test_threads_basic__multiple_init(void)$/;"	f	typeref:typename:void
test_threads_basic__set_error	my_project/libgit2/tests/libgit2/threads/basic.c	/^void test_threads_basic__set_error(void)$/;"	f	typeref:typename:void
test_threads_diff__cleanup	my_project/libgit2/tests/libgit2/threads/diff.c	/^void test_threads_diff__cleanup(void)$/;"	f	typeref:typename:void
test_threads_diff__concurrent_diffs	my_project/libgit2/tests/libgit2/threads/diff.c	/^void test_threads_diff__concurrent_diffs(void)$/;"	f	typeref:typename:void
test_threads_diff__initialize	my_project/libgit2/tests/libgit2/threads/diff.c	/^void test_threads_diff__initialize(void)$/;"	f	typeref:typename:void
test_threads_diff__with_concurrent_index_modified	my_project/libgit2/tests/libgit2/threads/diff.c	/^void test_threads_diff__with_concurrent_index_modified(void)$/;"	f	typeref:typename:void
test_threads_iterator__cleanup	my_project/libgit2/tests/libgit2/threads/iterator.c	/^void test_threads_iterator__cleanup(void)$/;"	f	typeref:typename:void
test_threads_iterator__workdir	my_project/libgit2/tests/libgit2/threads/iterator.c	/^void test_threads_iterator__workdir(void)$/;"	f	typeref:typename:void
test_threads_refdb__cleanup	my_project/libgit2/tests/libgit2/threads/refdb.c	/^void test_threads_refdb__cleanup(void)$/;"	f	typeref:typename:void
test_threads_refdb__edit_while_iterate	my_project/libgit2/tests/libgit2/threads/refdb.c	/^void test_threads_refdb__edit_while_iterate(void)$/;"	f	typeref:typename:void
test_threads_refdb__initialize	my_project/libgit2/tests/libgit2/threads/refdb.c	/^void test_threads_refdb__initialize(void)$/;"	f	typeref:typename:void
test_threads_tlsdata__can_set_and_get	my_project/libgit2/tests/libgit2/threads/tlsdata.c	/^void test_threads_tlsdata__can_set_and_get(void)$/;"	f	typeref:typename:void
test_threads_tlsdata__threads	my_project/libgit2/tests/libgit2/threads/tlsdata.c	/^void test_threads_tlsdata__threads(void)$/;"	f	typeref:typename:void
test_trace_trace__can_reset	my_project/libgit2/tests/libgit2/trace/trace.c	/^void test_trace_trace__can_reset(void)$/;"	f	typeref:typename:void
test_trace_trace__can_unset	my_project/libgit2/tests/libgit2/trace/trace.c	/^void test_trace_trace__can_unset(void)$/;"	f	typeref:typename:void
test_trace_trace__cleanup	my_project/libgit2/tests/libgit2/trace/trace.c	/^void test_trace_trace__cleanup(void)$/;"	f	typeref:typename:void
test_trace_trace__initialize	my_project/libgit2/tests/libgit2/trace/trace.c	/^void test_trace_trace__initialize(void)$/;"	f	typeref:typename:void
test_trace_trace__sets	my_project/libgit2/tests/libgit2/trace/trace.c	/^void test_trace_trace__sets(void)$/;"	f	typeref:typename:void
test_trace_trace__skips_higher_level	my_project/libgit2/tests/libgit2/trace/trace.c	/^void test_trace_trace__skips_higher_level(void)$/;"	f	typeref:typename:void
test_trace_trace__writes	my_project/libgit2/tests/libgit2/trace/trace.c	/^void test_trace_trace__writes(void)$/;"	f	typeref:typename:void
test_trace_trace__writes_lower_level	my_project/libgit2/tests/libgit2/trace/trace.c	/^void test_trace_trace__writes_lower_level(void)$/;"	f	typeref:typename:void
test_trace_windows_stacktrace__aux1	my_project/libgit2/tests/libgit2/trace/windows/stacktrace.c	/^void test_trace_windows_stacktrace__aux1(void)$/;"	f	typeref:typename:void
test_trace_windows_stacktrace__basic	my_project/libgit2/tests/libgit2/trace/windows/stacktrace.c	/^void test_trace_windows_stacktrace__basic(void)$/;"	f	typeref:typename:void
test_trace_windows_stacktrace__leaks	my_project/libgit2/tests/libgit2/trace/windows/stacktrace.c	/^void test_trace_windows_stacktrace__leaks(void)$/;"	f	typeref:typename:void
test_transport_register__custom_transport	my_project/libgit2/tests/libgit2/transport/register.c	/^void test_transport_register__custom_transport(void)$/;"	f	typeref:typename:void
test_transport_register__custom_transport_callbacks	my_project/libgit2/tests/libgit2/transport/register.c	/^void test_transport_register__custom_transport_callbacks(void)$/;"	f	typeref:typename:void
test_transport_register__custom_transport_error_doubleregister	my_project/libgit2/tests/libgit2/transport/register.c	/^void test_transport_register__custom_transport_error_doubleregister(void)$/;"	f	typeref:typename:void
test_transport_register__custom_transport_error_remove_non_existing	my_project/libgit2/tests/libgit2/transport/register.c	/^void test_transport_register__custom_transport_error_remove_non_existing(void)$/;"	f	typeref:typename:void
test_transport_register__custom_transport_ssh	my_project/libgit2/tests/libgit2/transport/register.c	/^void test_transport_register__custom_transport_ssh(void)$/;"	f	typeref:typename:void
test_transport_ssh_exec__reject_injection_hostname	my_project/libgit2/tests/libgit2/transport/ssh_exec.c	/^void test_transport_ssh_exec__reject_injection_hostname(void)$/;"	f	typeref:typename:void
test_transport_ssh_exec__reject_injection_path	my_project/libgit2/tests/libgit2/transport/ssh_exec.c	/^void test_transport_ssh_exec__reject_injection_path(void)$/;"	f	typeref:typename:void
test_transport_ssh_exec__reject_injection_username	my_project/libgit2/tests/libgit2/transport/ssh_exec.c	/^void test_transport_ssh_exec__reject_injection_username(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__ack_pkt	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^void test_transports_smart_packet__ack_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__comment_pkt	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^void test_transports_smart_packet__comment_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__data_pkt	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^void test_transports_smart_packet__data_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__error_pkt	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^void test_transports_smart_packet__error_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__flush_parses	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^void test_transports_smart_packet__flush_parses(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__nak_pkt	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^void test_transports_smart_packet__nak_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__ng_pkt	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^void test_transports_smart_packet__ng_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__ok_pkt	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^void test_transports_smart_packet__ok_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__parsing_garbage_fails	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^void test_transports_smart_packet__parsing_garbage_fails(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__ref_pkt	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^void test_transports_smart_packet__ref_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__sideband_err_pkt	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^void test_transports_smart_packet__sideband_err_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__sideband_progress_pkt	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^void test_transports_smart_packet__sideband_progress_pkt(void)$/;"	f	typeref:typename:void
test_transports_smart_packet__unpack_pkt	my_project/libgit2/tests/libgit2/transports/smart/packet.c	/^void test_transports_smart_packet__unpack_pkt(void)$/;"	f	typeref:typename:void
test_tree_to_tree_computed_to_parsed	my_project/libgit2/tests/libgit2/diff/parse.c	/^static void test_tree_to_tree_computed_to_parsed($/;"	f	typeref:typename:void	file:
test_url_http__cleanup	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__cleanup(void)$/;"	f	typeref:typename:void
test_url_http__empty_path_with_empty_authority	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__empty_path_with_empty_authority(void)$/;"	f	typeref:typename:void
test_url_http__fragment_with_question_mark	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__fragment_with_question_mark(void)$/;"	f	typeref:typename:void
test_url_http__has_scheme	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__has_scheme(void)$/;"	f	typeref:typename:void
test_url_http__hostname_empty_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_empty_port(void)$/;"	f	typeref:typename:void
test_url_http__hostname_encoded_password	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_encoded_password(void)$/;"	f	typeref:typename:void
test_url_http__hostname_implied_root	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_implied_root(void)$/;"	f	typeref:typename:void
test_url_http__hostname_implied_root_custom_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_implied_root_custom_port(void)$/;"	f	typeref:typename:void
test_url_http__hostname_implied_root_empty_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_implied_root_empty_port(void)$/;"	f	typeref:typename:void
test_url_http__hostname_numeric	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_numeric(void)$/;"	f	typeref:typename:void
test_url_http__hostname_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_port(void)$/;"	f	typeref:typename:void
test_url_http__hostname_root	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_root(void)$/;"	f	typeref:typename:void
test_url_http__hostname_user	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_user(void)$/;"	f	typeref:typename:void
test_url_http__hostname_user_pass	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_user_pass(void)$/;"	f	typeref:typename:void
test_url_http__hostname_user_pass_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_user_pass_port(void)$/;"	f	typeref:typename:void
test_url_http__hostname_user_pass_port_fragment	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_user_pass_port_fragment(void)$/;"	f	typeref:typename:void
test_url_http__hostname_user_pass_port_query	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_user_pass_port_query(void)$/;"	f	typeref:typename:void
test_url_http__hostname_user_pass_port_query_fragment	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_user_pass_port_query_fragment(void)$/;"	f	typeref:typename:void
test_url_http__hostname_user_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__hostname_user_port(void)$/;"	f	typeref:typename:void
test_url_http__initialize	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__initialize(void)$/;"	f	typeref:typename:void
test_url_http__invalid_scheme_is_relative	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__invalid_scheme_is_relative(void)$/;"	f	typeref:typename:void
test_url_http__ipv4_empty_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv4_empty_port(void)$/;"	f	typeref:typename:void
test_url_http__ipv4_encoded_password	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv4_encoded_password(void)$/;"	f	typeref:typename:void
test_url_http__ipv4_implied_root	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv4_implied_root(void)$/;"	f	typeref:typename:void
test_url_http__ipv4_implied_root_custom_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv4_implied_root_custom_port(void)$/;"	f	typeref:typename:void
test_url_http__ipv4_implied_root_empty_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv4_implied_root_empty_port(void)$/;"	f	typeref:typename:void
test_url_http__ipv4_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv4_port(void)$/;"	f	typeref:typename:void
test_url_http__ipv4_root	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv4_root(void)$/;"	f	typeref:typename:void
test_url_http__ipv4_trivial	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv4_trivial(void)$/;"	f	typeref:typename:void
test_url_http__ipv4_user	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv4_user(void)$/;"	f	typeref:typename:void
test_url_http__ipv4_user_pass	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv4_user_pass(void)$/;"	f	typeref:typename:void
test_url_http__ipv4_user_pass_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv4_user_pass_port(void)$/;"	f	typeref:typename:void
test_url_http__ipv4_user_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv4_user_port(void)$/;"	f	typeref:typename:void
test_url_http__ipv6_empty_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv6_empty_port(void)$/;"	f	typeref:typename:void
test_url_http__ipv6_encoded_password	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv6_encoded_password(void)$/;"	f	typeref:typename:void
test_url_http__ipv6_implied_root	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv6_implied_root(void)$/;"	f	typeref:typename:void
test_url_http__ipv6_implied_root_custom_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv6_implied_root_custom_port(void)$/;"	f	typeref:typename:void
test_url_http__ipv6_implied_root_empty_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv6_implied_root_empty_port(void)$/;"	f	typeref:typename:void
test_url_http__ipv6_invalid_addresses	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv6_invalid_addresses(void)$/;"	f	typeref:typename:void
test_url_http__ipv6_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv6_port(void)$/;"	f	typeref:typename:void
test_url_http__ipv6_root	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv6_root(void)$/;"	f	typeref:typename:void
test_url_http__ipv6_trivial	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv6_trivial(void)$/;"	f	typeref:typename:void
test_url_http__ipv6_user	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv6_user(void)$/;"	f	typeref:typename:void
test_url_http__ipv6_user_pass	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv6_user_pass(void)$/;"	f	typeref:typename:void
test_url_http__ipv6_user_pass_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv6_user_pass_port(void)$/;"	f	typeref:typename:void
test_url_http__ipv6_user_port	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__ipv6_user_port(void)$/;"	f	typeref:typename:void
test_url_http__no_scheme	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__no_scheme(void)$/;"	f	typeref:typename:void
test_url_http__no_scheme_absolute_path	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__no_scheme_absolute_path(void)$/;"	f	typeref:typename:void
test_url_http__no_scheme_relative_path	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__no_scheme_relative_path(void)$/;"	f	typeref:typename:void
test_url_http__scheme_case_is_normalized	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__scheme_case_is_normalized(void)$/;"	f	typeref:typename:void
test_url_http__spaces_in_the_name	my_project/libgit2/tests/util/url/http.c	/^void test_url_http__spaces_in_the_name(void)$/;"	f	typeref:typename:void
test_url_joinpath__cleanup	my_project/libgit2/tests/util/url/joinpath.c	/^void test_url_joinpath__cleanup(void)$/;"	f	typeref:typename:void
test_url_joinpath__empty_query_ignored	my_project/libgit2/tests/util/url/joinpath.c	/^void test_url_joinpath__empty_query_ignored(void)$/;"	f	typeref:typename:void
test_url_joinpath__initialize	my_project/libgit2/tests/util/url/joinpath.c	/^void test_url_joinpath__initialize(void)$/;"	f	typeref:typename:void
test_url_joinpath__source_has_query	my_project/libgit2/tests/util/url/joinpath.c	/^void test_url_joinpath__source_has_query(void)$/;"	f	typeref:typename:void
test_url_joinpath__source_is_slash	my_project/libgit2/tests/util/url/joinpath.c	/^void test_url_joinpath__source_is_slash(void)$/;"	f	typeref:typename:void
test_url_joinpath__source_lacks_path	my_project/libgit2/tests/util/url/joinpath.c	/^void test_url_joinpath__source_lacks_path(void)$/;"	f	typeref:typename:void
test_url_joinpath__source_query_removed	my_project/libgit2/tests/util/url/joinpath.c	/^void test_url_joinpath__source_query_removed(void)$/;"	f	typeref:typename:void
test_url_joinpath__target_paths_and_queries	my_project/libgit2/tests/util/url/joinpath.c	/^void test_url_joinpath__target_paths_and_queries(void)$/;"	f	typeref:typename:void
test_url_parse__cleanup	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__cleanup(void)$/;"	f	typeref:typename:void
test_url_parse__empty_path	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__empty_path(void)$/;"	f	typeref:typename:void
test_url_parse__empty_path_with_empty_authority	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__empty_path_with_empty_authority(void)$/;"	f	typeref:typename:void
test_url_parse__empty_scheme	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__empty_scheme(void)$/;"	f	typeref:typename:void
test_url_parse__fragment_with_question_mark	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__fragment_with_question_mark(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_empty_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_empty_port(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_encoded_password	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_encoded_password(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_implied_root	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_implied_root(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_implied_root_custom_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_implied_root_custom_port(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_implied_root_empty_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_implied_root_empty_port(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_numeric	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_numeric(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_port(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_root	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_root(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_trivial	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_trivial(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_user	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_user(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_user_pass	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_user_pass(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_user_pass_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_user_pass_port(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_user_pass_port_fragment	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_user_pass_port_fragment(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_user_pass_port_query	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_user_pass_port_query(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_user_pass_port_query_fragment	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_user_pass_port_query_fragment(void)$/;"	f	typeref:typename:void
test_url_parse__hostname_user_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__hostname_user_port(void)$/;"	f	typeref:typename:void
test_url_parse__http_follows_the_rfc	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__http_follows_the_rfc(void)$/;"	f	typeref:typename:void
test_url_parse__initialize	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__initialize(void)$/;"	f	typeref:typename:void
test_url_parse__invalid_scheme_is_relative	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__invalid_scheme_is_relative(void)$/;"	f	typeref:typename:void
test_url_parse__ipv4_empty_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv4_empty_port(void)$/;"	f	typeref:typename:void
test_url_parse__ipv4_encoded_password	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv4_encoded_password(void)$/;"	f	typeref:typename:void
test_url_parse__ipv4_implied_root	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv4_implied_root(void)$/;"	f	typeref:typename:void
test_url_parse__ipv4_implied_root_custom_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv4_implied_root_custom_port(void)$/;"	f	typeref:typename:void
test_url_parse__ipv4_implied_root_empty_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv4_implied_root_empty_port(void)$/;"	f	typeref:typename:void
test_url_parse__ipv4_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv4_port(void)$/;"	f	typeref:typename:void
test_url_parse__ipv4_root	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv4_root(void)$/;"	f	typeref:typename:void
test_url_parse__ipv4_trivial	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv4_trivial(void)$/;"	f	typeref:typename:void
test_url_parse__ipv4_user	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv4_user(void)$/;"	f	typeref:typename:void
test_url_parse__ipv4_user_pass	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv4_user_pass(void)$/;"	f	typeref:typename:void
test_url_parse__ipv4_user_pass_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv4_user_pass_port(void)$/;"	f	typeref:typename:void
test_url_parse__ipv4_user_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv4_user_port(void)$/;"	f	typeref:typename:void
test_url_parse__ipv6_empty_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv6_empty_port(void)$/;"	f	typeref:typename:void
test_url_parse__ipv6_encoded_password	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv6_encoded_password(void)$/;"	f	typeref:typename:void
test_url_parse__ipv6_implied_root	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv6_implied_root(void)$/;"	f	typeref:typename:void
test_url_parse__ipv6_implied_root_custom_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv6_implied_root_custom_port(void)$/;"	f	typeref:typename:void
test_url_parse__ipv6_implied_root_empty_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv6_implied_root_empty_port(void)$/;"	f	typeref:typename:void
test_url_parse__ipv6_invalid_addresses	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv6_invalid_addresses(void)$/;"	f	typeref:typename:void
test_url_parse__ipv6_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv6_port(void)$/;"	f	typeref:typename:void
test_url_parse__ipv6_root	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv6_root(void)$/;"	f	typeref:typename:void
test_url_parse__ipv6_trivial	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv6_trivial(void)$/;"	f	typeref:typename:void
test_url_parse__ipv6_user	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv6_user(void)$/;"	f	typeref:typename:void
test_url_parse__ipv6_user_pass	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv6_user_pass(void)$/;"	f	typeref:typename:void
test_url_parse__ipv6_user_pass_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv6_user_pass_port(void)$/;"	f	typeref:typename:void
test_url_parse__ipv6_user_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ipv6_user_port(void)$/;"	f	typeref:typename:void
test_url_parse__no_scheme_absolute_path	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__no_scheme_absolute_path(void)$/;"	f	typeref:typename:void
test_url_parse__no_scheme_relative_path	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__no_scheme_relative_path(void)$/;"	f	typeref:typename:void
test_url_parse__nonhierarchical_scheme	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__nonhierarchical_scheme(void)$/;"	f	typeref:typename:void
test_url_parse__scheme_case_is_normalized	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__scheme_case_is_normalized(void)$/;"	f	typeref:typename:void
test_url_parse__spaces_in_the_name	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__spaces_in_the_name(void)$/;"	f	typeref:typename:void
test_url_parse__specified_default_port	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__specified_default_port(void)$/;"	f	typeref:typename:void
test_url_parse__ssh_from_terrible_google_rfc_violating_products	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ssh_from_terrible_google_rfc_violating_products(void)$/;"	f	typeref:typename:void
test_url_parse__ssh_with_password_from_terrible_google_rfc_violating_products	my_project/libgit2/tests/util/url/parse.c	/^void test_url_parse__ssh_with_password_from_terrible_google_rfc_violating_products(void)$/;"	f	typeref:typename:void
test_url_pattern__list	my_project/libgit2/tests/util/url/pattern.c	/^void test_url_pattern__list(void)$/;"	f	typeref:typename:void
test_url_pattern__single	my_project/libgit2/tests/util/url/pattern.c	/^void test_url_pattern__single(void)$/;"	f	typeref:typename:void
test_url_redirect__cleanup	my_project/libgit2/tests/util/url/redirect.c	/^void test_url_redirect__cleanup(void)$/;"	f	typeref:typename:void
test_url_redirect__initialize	my_project/libgit2/tests/util/url/redirect.c	/^void test_url_redirect__initialize(void)$/;"	f	typeref:typename:void
test_url_redirect__redirect_cross_host_allowed	my_project/libgit2/tests/util/url/redirect.c	/^void test_url_redirect__redirect_cross_host_allowed(void)$/;"	f	typeref:typename:void
test_url_redirect__redirect_cross_host_denied	my_project/libgit2/tests/util/url/redirect.c	/^void test_url_redirect__redirect_cross_host_denied(void)$/;"	f	typeref:typename:void
test_url_redirect__redirect_encoded_username_password	my_project/libgit2/tests/util/url/redirect.c	/^void test_url_redirect__redirect_encoded_username_password(void)$/;"	f	typeref:typename:void
test_url_redirect__redirect_http	my_project/libgit2/tests/util/url/redirect.c	/^void test_url_redirect__redirect_http(void)$/;"	f	typeref:typename:void
test_url_redirect__redirect_http_downgrade_denied	my_project/libgit2/tests/util/url/redirect.c	/^void test_url_redirect__redirect_http_downgrade_denied(void)$/;"	f	typeref:typename:void
test_url_redirect__redirect_leaves_root_path	my_project/libgit2/tests/util/url/redirect.c	/^void test_url_redirect__redirect_leaves_root_path(void)$/;"	f	typeref:typename:void
test_url_redirect__redirect_relative	my_project/libgit2/tests/util/url/redirect.c	/^void test_url_redirect__redirect_relative(void)$/;"	f	typeref:typename:void
test_url_redirect__redirect_relative_ssl	my_project/libgit2/tests/util/url/redirect.c	/^void test_url_redirect__redirect_relative_ssl(void)$/;"	f	typeref:typename:void
test_url_redirect__redirect_ssl	my_project/libgit2/tests/util/url/redirect.c	/^void test_url_redirect__redirect_ssl(void)$/;"	f	typeref:typename:void
test_url_redirect__service_query_no_query_params_in_location	my_project/libgit2/tests/util/url/redirect.c	/^void test_url_redirect__service_query_no_query_params_in_location(void)$/;"	f	typeref:typename:void
test_url_redirect__service_query_with_query_params_in_location	my_project/libgit2/tests/util/url/redirect.c	/^void test_url_redirect__service_query_with_query_params_in_location(void)$/;"	f	typeref:typename:void
test_url_scp__cleanup	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__cleanup(void)$/;"	f	typeref:typename:void
test_url_scp__hexhost_and_port	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__hexhost_and_port(void)$/;"	f	typeref:typename:void
test_url_scp__hostname_bracketed	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__hostname_bracketed(void)$/;"	f	typeref:typename:void
test_url_scp__hostname_port	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__hostname_port(void)$/;"	f	typeref:typename:void
test_url_scp__hostname_root	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__hostname_root(void)$/;"	f	typeref:typename:void
test_url_scp__hostname_specified_default_port	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__hostname_specified_default_port(void)$/;"	f	typeref:typename:void
test_url_scp__hostname_trivial	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__hostname_trivial(void)$/;"	f	typeref:typename:void
test_url_scp__hostname_user	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__hostname_user(void)$/;"	f	typeref:typename:void
test_url_scp__hostname_user_bracketed	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__hostname_user_bracketed(void)$/;"	f	typeref:typename:void
test_url_scp__hostname_user_port	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__hostname_user_port(void)$/;"	f	typeref:typename:void
test_url_scp__initialize	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__initialize(void)$/;"	f	typeref:typename:void
test_url_scp__invalid_addresses	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__invalid_addresses(void)$/;"	f	typeref:typename:void
test_url_scp__ipv4_bracketed	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__ipv4_bracketed(void)$/;"	f	typeref:typename:void
test_url_scp__ipv4_port	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__ipv4_port(void)$/;"	f	typeref:typename:void
test_url_scp__ipv4_trivial	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__ipv4_trivial(void)$/;"	f	typeref:typename:void
test_url_scp__ipv4_user	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__ipv4_user(void)$/;"	f	typeref:typename:void
test_url_scp__ipv4_user_port	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__ipv4_user_port(void)$/;"	f	typeref:typename:void
test_url_scp__ipv6_port	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__ipv6_port(void)$/;"	f	typeref:typename:void
test_url_scp__ipv6_trivial	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__ipv6_trivial(void)$/;"	f	typeref:typename:void
test_url_scp__ipv6_user	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__ipv6_user(void)$/;"	f	typeref:typename:void
test_url_scp__ipv6_user_port	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__ipv6_user_port(void)$/;"	f	typeref:typename:void
test_url_scp__malformed_ipv6_one	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__malformed_ipv6_one(void)$/;"	f	typeref:typename:void
test_url_scp__malformed_ipv6_two	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__malformed_ipv6_two(void)$/;"	f	typeref:typename:void
test_url_scp__malformed_ipv6_with_user	my_project/libgit2/tests/util/url/scp.c	/^void test_url_scp__malformed_ipv6_with_user(void)$/;"	f	typeref:typename:void
test_url_valid__test	my_project/libgit2/tests/util/url/valid.c	/^void test_url_valid__test(void)$/;"	f	typeref:typename:void
test_utf8__char_length	my_project/libgit2/tests/util/utf8.c	/^void test_utf8__char_length(void)$/;"	f	typeref:typename:void
test_utf8_to_utf16	my_project/libgit2/tests/util/path/win32.c	/^static void test_utf8_to_utf16(const char *utf8_in, const wchar_t *utf16_expected)$/;"	f	typeref:typename:void	file:
test_utf8_to_utf16_relative	my_project/libgit2/tests/util/path/win32.c	/^static void test_utf8_to_utf16_relative(const char* utf8_in, const wchar_t* utf16_expected)$/;"	f	typeref:typename:void	file:
test_vector__0	my_project/libgit2/tests/util/vector.c	/^void test_vector__0(void)$/;"	f	typeref:typename:void
test_vector__1	my_project/libgit2/tests/util/vector.c	/^void test_vector__1(void)$/;"	f	typeref:typename:void
test_vector__2	my_project/libgit2/tests/util/vector.c	/^void test_vector__2(void)$/;"	f	typeref:typename:void
test_vector__3	my_project/libgit2/tests/util/vector.c	/^void test_vector__3(void)$/;"	f	typeref:typename:void
test_vector__4	my_project/libgit2/tests/util/vector.c	/^void test_vector__4(void)$/;"	f	typeref:typename:void
test_vector__5	my_project/libgit2/tests/util/vector.c	/^void test_vector__5(void)$/;"	f	typeref:typename:void
test_vector__dup_empty_vector	my_project/libgit2/tests/util/vector.c	/^void test_vector__dup_empty_vector(void)$/;"	f	typeref:typename:void
test_vector__grow_and_shrink	my_project/libgit2/tests/util/vector.c	/^void test_vector__grow_and_shrink(void)$/;"	f	typeref:typename:void
test_vector__remove_matching	my_project/libgit2/tests/util/vector.c	/^void test_vector__remove_matching(void)$/;"	f	typeref:typename:void
test_vector__reverse	my_project/libgit2/tests/util/vector.c	/^void test_vector__reverse(void)$/;"	f	typeref:typename:void
test_walk	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static int test_walk(git_revwalk *walk, const git_oid *root,$/;"	f	typeref:typename:int	file:
test_walk_only	my_project/libgit2/tests/libgit2/revwalk/basic.c	/^static int test_walk_only(git_revwalk *walk,$/;"	f	typeref:typename:int	file:
test_wildmatch__additional_with_malformed	my_project/libgit2/tests/util/wildmatch.c	/^void test_wildmatch__additional_with_malformed(void)$/;"	f	typeref:typename:void
test_wildmatch__basic_wildmatch	my_project/libgit2/tests/util/wildmatch.c	/^void test_wildmatch__basic_wildmatch(void)$/;"	f	typeref:typename:void
test_wildmatch__case_sensitivity	my_project/libgit2/tests/util/wildmatch.c	/^void test_wildmatch__case_sensitivity(void)$/;"	f	typeref:typename:void
test_wildmatch__character_classes	my_project/libgit2/tests/util/wildmatch.c	/^void test_wildmatch__character_classes(void)$/;"	f	typeref:typename:void
test_wildmatch__pathmatch	my_project/libgit2/tests/util/wildmatch.c	/^void test_wildmatch__pathmatch(void)$/;"	f	typeref:typename:void
test_wildmatch__recursion	my_project/libgit2/tests/util/wildmatch.c	/^void test_wildmatch__recursion(void)$/;"	f	typeref:typename:void
test_wildmatch__slash_matching_features	my_project/libgit2/tests/util/wildmatch.c	/^void test_wildmatch__slash_matching_features(void)$/;"	f	typeref:typename:void
test_wildmatch__various_additional	my_project/libgit2/tests/util/wildmatch.c	/^void test_wildmatch__various_additional(void)$/;"	f	typeref:typename:void
test_win32_forbidden__can_add_forbidden_filename_with_entry	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^void test_win32_forbidden__can_add_forbidden_filename_with_entry(void)$/;"	f	typeref:typename:void
test_win32_forbidden__can_blame_file	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^void test_win32_forbidden__can_blame_file(void)$/;"	f	typeref:typename:void
test_win32_forbidden__can_diff_index_to_workdir	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^void test_win32_forbidden__can_diff_index_to_workdir(void)$/;"	f	typeref:typename:void
test_win32_forbidden__can_diff_tree_to_index	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^void test_win32_forbidden__can_diff_tree_to_index(void)$/;"	f	typeref:typename:void
test_win32_forbidden__can_diff_tree_to_tree	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^void test_win32_forbidden__can_diff_tree_to_tree(void)$/;"	f	typeref:typename:void
test_win32_forbidden__can_open_index	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^void test_win32_forbidden__can_open_index(void)$/;"	f	typeref:typename:void
test_win32_forbidden__can_query_submodules	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^void test_win32_forbidden__can_query_submodules(void)$/;"	f	typeref:typename:void
test_win32_forbidden__cannot_add_dot_git_even_with_entry	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^void test_win32_forbidden__cannot_add_dot_git_even_with_entry(void)$/;"	f	typeref:typename:void
test_win32_forbidden__cannot_add_forbidden_filename_from_filesystem	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^void test_win32_forbidden__cannot_add_forbidden_filename_from_filesystem(void)$/;"	f	typeref:typename:void
test_win32_forbidden__checking_out_forbidden_index_fails	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^void test_win32_forbidden__checking_out_forbidden_index_fails(void)$/;"	f	typeref:typename:void
test_win32_forbidden__cleanup	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^void test_win32_forbidden__cleanup(void)$/;"	f	typeref:typename:void
test_win32_forbidden__initialize	my_project/libgit2/tests/libgit2/win32/forbidden.c	/^void test_win32_forbidden__initialize(void)$/;"	f	typeref:typename:void
test_win32_longpath__cleanup	my_project/libgit2/tests/libgit2/win32/longpath.c	/^void test_win32_longpath__cleanup(void)$/;"	f	typeref:typename:void
test_win32_longpath__errmsg_on_checkout	my_project/libgit2/tests/libgit2/win32/longpath.c	/^void test_win32_longpath__errmsg_on_checkout(void)$/;"	f	typeref:typename:void
test_win32_longpath__initialize	my_project/libgit2/tests/libgit2/win32/longpath.c	/^void test_win32_longpath__initialize(void)$/;"	f	typeref:typename:void
test_win32_longpath__status_and_add	my_project/libgit2/tests/libgit2/win32/longpath.c	/^void test_win32_longpath__status_and_add(void)$/;"	f	typeref:typename:void
test_win32_longpath__status_and_add_with_filter	my_project/libgit2/tests/libgit2/win32/longpath.c	/^void test_win32_longpath__status_and_add_with_filter(void)$/;"	f	typeref:typename:void
test_win32_longpath__workdir_path_validated	my_project/libgit2/tests/libgit2/win32/longpath.c	/^void test_win32_longpath__workdir_path_validated(void)$/;"	f	typeref:typename:void
test_win32_name	my_project/libgit2/tests/libgit2/refs/create.c	/^static void test_win32_name(const char *name)$/;"	f	typeref:typename:void	file:
test_win32_systemdir__cleanup	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^void test_win32_systemdir__cleanup(void)$/;"	f	typeref:typename:void
test_win32_systemdir__finds_etc_in_path	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^void test_win32_systemdir__finds_etc_in_path(void)$/;"	f	typeref:typename:void
test_win32_systemdir__finds_etc_in_registry	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^void test_win32_systemdir__finds_etc_in_registry(void)$/;"	f	typeref:typename:void
test_win32_systemdir__finds_mingw64_etc_in_path	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^void test_win32_systemdir__finds_mingw64_etc_in_path(void)$/;"	f	typeref:typename:void
test_win32_systemdir__finds_mingw64_etc_in_registry	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^void test_win32_systemdir__finds_mingw64_etc_in_registry(void)$/;"	f	typeref:typename:void
test_win32_systemdir__initialize	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^void test_win32_systemdir__initialize(void)$/;"	f	typeref:typename:void
test_win32_systemdir__no_git_installed	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^void test_win32_systemdir__no_git_installed(void)$/;"	f	typeref:typename:void
test_win32_systemdir__prefers_etc_to_mingw64_in_path	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^void test_win32_systemdir__prefers_etc_to_mingw64_in_path(void)$/;"	f	typeref:typename:void
test_win32_systemdir__prefers_etc_to_mingw64_in_registry	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^void test_win32_systemdir__prefers_etc_to_mingw64_in_registry(void)$/;"	f	typeref:typename:void
test_win32_systemdir__prefers_path_to_registry	my_project/libgit2/tests/libgit2/win32/systemdir.c	/^void test_win32_systemdir__prefers_path_to_registry(void)$/;"	f	typeref:typename:void
test_with_many	my_project/libgit2/tests/libgit2/stress/diff.c	/^static void test_with_many(int expected_new)$/;"	f	typeref:typename:void	file:
test_worktree_bare__add	my_project/libgit2/tests/libgit2/worktree/bare.c	/^void test_worktree_bare__add(void)$/;"	f	typeref:typename:void
test_worktree_bare__cleanup	my_project/libgit2/tests/libgit2/worktree/bare.c	/^void test_worktree_bare__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_bare__initialize	my_project/libgit2/tests/libgit2/worktree/bare.c	/^void test_worktree_bare__initialize(void)$/;"	f	typeref:typename:void
test_worktree_bare__list	my_project/libgit2/tests/libgit2/worktree/bare.c	/^void test_worktree_bare__list(void)$/;"	f	typeref:typename:void
test_worktree_bare__repository_path	my_project/libgit2/tests/libgit2/worktree/bare.c	/^void test_worktree_bare__repository_path(void)$/;"	f	typeref:typename:void
test_worktree_config__cleanup	my_project/libgit2/tests/libgit2/worktree/config.c	/^void test_worktree_config__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_config__exists	my_project/libgit2/tests/libgit2/worktree/config.c	/^void test_worktree_config__exists(void)$/;"	f	typeref:typename:void
test_worktree_config__initialize	my_project/libgit2/tests/libgit2/worktree/config.c	/^void test_worktree_config__initialize(void)$/;"	f	typeref:typename:void
test_worktree_config__open	my_project/libgit2/tests/libgit2/worktree/config.c	/^void test_worktree_config__open(void)$/;"	f	typeref:typename:void
test_worktree_config__requires_extension	my_project/libgit2/tests/libgit2/worktree/config.c	/^void test_worktree_config__requires_extension(void)$/;"	f	typeref:typename:void
test_worktree_config__set_level_local	my_project/libgit2/tests/libgit2/worktree/config.c	/^void test_worktree_config__set_level_local(void)$/;"	f	typeref:typename:void
test_worktree_config__set_level_worktree	my_project/libgit2/tests/libgit2/worktree/config.c	/^void test_worktree_config__set_level_worktree(void)$/;"	f	typeref:typename:void
test_worktree_merge__cleanup	my_project/libgit2/tests/libgit2/worktree/merge.c	/^void test_worktree_merge__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_merge__initialize	my_project/libgit2/tests/libgit2/worktree/merge.c	/^void test_worktree_merge__initialize(void)$/;"	f	typeref:typename:void
test_worktree_merge__merge_conflict	my_project/libgit2/tests/libgit2/worktree/merge.c	/^void test_worktree_merge__merge_conflict(void)$/;"	f	typeref:typename:void
test_worktree_merge__merge_head	my_project/libgit2/tests/libgit2/worktree/merge.c	/^void test_worktree_merge__merge_head(void)$/;"	f	typeref:typename:void
test_worktree_merge__merge_setup	my_project/libgit2/tests/libgit2/worktree/merge.c	/^void test_worktree_merge__merge_setup(void)$/;"	f	typeref:typename:void
test_worktree_open__cleanup	my_project/libgit2/tests/libgit2/worktree/open.c	/^void test_worktree_open__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_open__initialize	my_project/libgit2/tests/libgit2/worktree/open.c	/^void test_worktree_open__initialize(void)$/;"	f	typeref:typename:void
test_worktree_open__open_discovered_worktree	my_project/libgit2/tests/libgit2/worktree/open.c	/^void test_worktree_open__open_discovered_worktree(void)$/;"	f	typeref:typename:void
test_worktree_open__open_from_nonworktree_fails	my_project/libgit2/tests/libgit2/worktree/open.c	/^void test_worktree_open__open_from_nonworktree_fails(void)$/;"	f	typeref:typename:void
test_worktree_open__open_from_repository	my_project/libgit2/tests/libgit2/worktree/open.c	/^void test_worktree_open__open_from_repository(void)$/;"	f	typeref:typename:void
test_worktree_open__repository	my_project/libgit2/tests/libgit2/worktree/open.c	/^void test_worktree_open__repository(void)$/;"	f	typeref:typename:void
test_worktree_open__repository_through_gitdir	my_project/libgit2/tests/libgit2/worktree/open.c	/^void test_worktree_open__repository_through_gitdir(void)$/;"	f	typeref:typename:void
test_worktree_open__repository_through_gitlink	my_project/libgit2/tests/libgit2/worktree/open.c	/^void test_worktree_open__repository_through_gitlink(void)$/;"	f	typeref:typename:void
test_worktree_open__repository_through_workdir	my_project/libgit2/tests/libgit2/worktree/open.c	/^void test_worktree_open__repository_through_workdir(void)$/;"	f	typeref:typename:void
test_worktree_open__repository_with_nonexistent_parent	my_project/libgit2/tests/libgit2/worktree/open.c	/^void test_worktree_open__repository_with_nonexistent_parent(void)$/;"	f	typeref:typename:void
test_worktree_reflog__append_then_read	my_project/libgit2/tests/libgit2/worktree/reflog.c	/^void test_worktree_reflog__append_then_read(void)$/;"	f	typeref:typename:void
test_worktree_reflog__cleanup	my_project/libgit2/tests/libgit2/worktree/reflog.c	/^void test_worktree_reflog__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_reflog__initialize	my_project/libgit2/tests/libgit2/worktree/reflog.c	/^void test_worktree_reflog__initialize(void)$/;"	f	typeref:typename:void
test_worktree_reflog__read	my_project/libgit2/tests/libgit2/worktree/reflog.c	/^void test_worktree_reflog__read(void)$/;"	f	typeref:typename:void
test_worktree_reflog__read_parent_HEAD	my_project/libgit2/tests/libgit2/worktree/reflog.c	/^void test_worktree_reflog__read_parent_HEAD(void)$/;"	f	typeref:typename:void
test_worktree_reflog__read_worktree_HEAD	my_project/libgit2/tests/libgit2/worktree/reflog.c	/^void test_worktree_reflog__read_worktree_HEAD(void)$/;"	f	typeref:typename:void
test_worktree_refs__cleanup	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_refs__creating_refs_uses_commondir	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__creating_refs_uses_commondir(void)$/;"	f	typeref:typename:void
test_worktree_refs__delete_fails_for_checked_out_branch	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__delete_fails_for_checked_out_branch(void)$/;"	f	typeref:typename:void
test_worktree_refs__delete_succeeds_after_pruning_worktree	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__delete_succeeds_after_pruning_worktree(void)$/;"	f	typeref:typename:void
test_worktree_refs__delete_unrelated_branch_on_parent	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__delete_unrelated_branch_on_parent(void)$/;"	f	typeref:typename:void
test_worktree_refs__delete_unrelated_branch_on_worktree	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__delete_unrelated_branch_on_worktree(void)$/;"	f	typeref:typename:void
test_worktree_refs__initialize	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__initialize(void)$/;"	f	typeref:typename:void
test_worktree_refs__list_no_difference_in_worktree	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__list_no_difference_in_worktree(void)$/;"	f	typeref:typename:void
test_worktree_refs__list_worktree_specific	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__list_worktree_specific(void)$/;"	f	typeref:typename:void
test_worktree_refs__list_worktree_specific_hidden_in_main_repo	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__list_worktree_specific_hidden_in_main_repo(void)$/;"	f	typeref:typename:void
test_worktree_refs__read_head	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__read_head(void)$/;"	f	typeref:typename:void
test_worktree_refs__renaming_reference_updates_worktree_heads	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__renaming_reference_updates_worktree_heads(void)$/;"	f	typeref:typename:void
test_worktree_refs__set_head_fails_when_already_checked_out	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__set_head_fails_when_already_checked_out(void)$/;"	f	typeref:typename:void
test_worktree_refs__set_head_fails_when_main_repo_wants_worktree_head	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__set_head_fails_when_main_repo_wants_worktree_head(void)$/;"	f	typeref:typename:void
test_worktree_refs__set_head_fails_when_worktree_wants_linked_repos_HEAD	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__set_head_fails_when_worktree_wants_linked_repos_HEAD(void)$/;"	f	typeref:typename:void
test_worktree_refs__set_head_works_for_current_HEAD	my_project/libgit2/tests/libgit2/worktree/refs.c	/^void test_worktree_refs__set_head_works_for_current_HEAD(void)$/;"	f	typeref:typename:void
test_worktree_repository__cleanup	my_project/libgit2/tests/libgit2/worktree/repository.c	/^void test_worktree_repository__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_repository__head	my_project/libgit2/tests/libgit2/worktree/repository.c	/^void test_worktree_repository__head(void)$/;"	f	typeref:typename:void
test_worktree_repository__head_detached	my_project/libgit2/tests/libgit2/worktree/repository.c	/^void test_worktree_repository__head_detached(void)$/;"	f	typeref:typename:void
test_worktree_repository__head_detached_fails_for_invalid_worktree	my_project/libgit2/tests/libgit2/worktree/repository.c	/^void test_worktree_repository__head_detached_fails_for_invalid_worktree(void)$/;"	f	typeref:typename:void
test_worktree_repository__head_fails_for_invalid_worktree	my_project/libgit2/tests/libgit2/worktree/repository.c	/^void test_worktree_repository__head_fails_for_invalid_worktree(void)$/;"	f	typeref:typename:void
test_worktree_repository__initialize	my_project/libgit2/tests/libgit2/worktree/repository.c	/^void test_worktree_repository__initialize(void)$/;"	f	typeref:typename:void
test_worktree_submodule__cleanup	my_project/libgit2/tests/libgit2/worktree/submodule.c	/^void test_worktree_submodule__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_submodule__initialize	my_project/libgit2/tests/libgit2/worktree/submodule.c	/^void test_worktree_submodule__initialize(void)$/;"	f	typeref:typename:void
test_worktree_submodule__open_discovered_submodule_worktree	my_project/libgit2/tests/libgit2/worktree/submodule.c	/^void test_worktree_submodule__open_discovered_submodule_worktree(void)$/;"	f	typeref:typename:void
test_worktree_submodule__resolve_relative_url	my_project/libgit2/tests/libgit2/worktree/submodule.c	/^void test_worktree_submodule__resolve_relative_url(void)$/;"	f	typeref:typename:void
test_worktree_submodule__submodule_worktree_child	my_project/libgit2/tests/libgit2/worktree/submodule.c	/^void test_worktree_submodule__submodule_worktree_child(void)$/;"	f	typeref:typename:void
test_worktree_submodule__submodule_worktree_parent	my_project/libgit2/tests/libgit2/worktree/submodule.c	/^void test_worktree_submodule__submodule_worktree_parent(void)$/;"	f	typeref:typename:void
test_worktree_worktree__add_locked	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__add_locked(void)$/;"	f	typeref:typename:void
test_worktree_worktree__add_no_checkout	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__add_no_checkout(void)$/;"	f	typeref:typename:void
test_worktree_worktree__add_remove_add	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__add_remove_add(void)$/;"	f	typeref:typename:void
test_worktree_worktree__add_with_explicit_branch	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__add_with_explicit_branch(void)$/;"	f	typeref:typename:void
test_worktree_worktree__cleanup	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__cleanup(void)$/;"	f	typeref:typename:void
test_worktree_worktree__foreach_worktree_lists_all_worktrees	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__foreach_worktree_lists_all_worktrees(void)$/;"	f	typeref:typename:void
test_worktree_worktree__init	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__init(void)$/;"	f	typeref:typename:void
test_worktree_worktree__init_existing_branch	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__init_existing_branch(void)$/;"	f	typeref:typename:void
test_worktree_worktree__init_existing_path	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__init_existing_path(void)$/;"	f	typeref:typename:void
test_worktree_worktree__init_existing_worktree	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__init_existing_worktree(void)$/;"	f	typeref:typename:void
test_worktree_worktree__init_submodule	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__init_submodule(void)$/;"	f	typeref:typename:void
test_worktree_worktree__initialize	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__initialize(void)$/;"	f	typeref:typename:void
test_worktree_worktree__is_prunable_missing_repo	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__is_prunable_missing_repo(void)$/;"	f	typeref:typename:void
test_worktree_worktree__list	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__list(void)$/;"	f	typeref:typename:void
test_worktree_worktree__list_in_worktree_repo	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__list_in_worktree_repo(void)$/;"	f	typeref:typename:void
test_worktree_worktree__list_with_invalid_worktree_dirs	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__list_with_invalid_worktree_dirs(void)$/;"	f	typeref:typename:void
test_worktree_worktree__list_without_worktrees	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__list_without_worktrees(void)$/;"	f	typeref:typename:void
test_worktree_worktree__lock_with_reason	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__lock_with_reason(void)$/;"	f	typeref:typename:void
test_worktree_worktree__lock_without_reason	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__lock_without_reason(void)$/;"	f	typeref:typename:void
test_worktree_worktree__lookup	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__lookup(void)$/;"	f	typeref:typename:void
test_worktree_worktree__lookup_nonexistent_worktree	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__lookup_nonexistent_worktree(void)$/;"	f	typeref:typename:void
test_worktree_worktree__name	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__name(void)$/;"	f	typeref:typename:void
test_worktree_worktree__open	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__open(void)$/;"	f	typeref:typename:void
test_worktree_worktree__open_invalid_commondir	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__open_invalid_commondir(void)$/;"	f	typeref:typename:void
test_worktree_worktree__open_invalid_gitdir	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__open_invalid_gitdir(void)$/;"	f	typeref:typename:void
test_worktree_worktree__open_invalid_parent	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__open_invalid_parent(void)$/;"	f	typeref:typename:void
test_worktree_worktree__path	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__path(void)$/;"	f	typeref:typename:void
test_worktree_worktree__prune_gitdir_only	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__prune_gitdir_only(void)$/;"	f	typeref:typename:void
test_worktree_worktree__prune_locked	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__prune_locked(void)$/;"	f	typeref:typename:void
test_worktree_worktree__prune_valid	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__prune_valid(void)$/;"	f	typeref:typename:void
test_worktree_worktree__prune_without_opts_fails	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__prune_without_opts_fails(void)$/;"	f	typeref:typename:void
test_worktree_worktree__prune_worktree	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__prune_worktree(void)$/;"	f	typeref:typename:void
test_worktree_worktree__unlock_locked_worktree	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__unlock_locked_worktree(void)$/;"	f	typeref:typename:void
test_worktree_worktree__unlock_unlocked_worktree	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__unlock_unlocked_worktree(void)$/;"	f	typeref:typename:void
test_worktree_worktree__validate	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__validate(void)$/;"	f	typeref:typename:void
test_worktree_worktree__validate_invalid_commondir	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__validate_invalid_commondir(void)$/;"	f	typeref:typename:void
test_worktree_worktree__validate_invalid_gitdir	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__validate_invalid_gitdir(void)$/;"	f	typeref:typename:void
test_worktree_worktree__validate_invalid_parent	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__validate_invalid_parent(void)$/;"	f	typeref:typename:void
test_worktree_worktree__validate_invalid_worktreedir	my_project/libgit2/tests/libgit2/worktree/worktree.c	/^void test_worktree_worktree__validate_invalid_worktreedir(void)$/;"	f	typeref:typename:void
test_write_object_permission	my_project/libgit2/tests/libgit2/odb/loose.c	/^static void test_write_object_permission($/;"	f	typeref:typename:void	file:
test_write_pack_permission	my_project/libgit2/tests/libgit2/pack/packbuilder.c	/^static void test_write_pack_permission(mode_t given, mode_t expected)$/;"	f	typeref:typename:void	file:
test_zstream__basic	my_project/libgit2/tests/util/zstream.c	/^void test_zstream__basic(void)$/;"	f	typeref:typename:void
test_zstream__big_data	my_project/libgit2/tests/util/zstream.c	/^void test_zstream__big_data(void)$/;"	f	typeref:typename:void
test_zstream__buffer	my_project/libgit2/tests/util/zstream.c	/^void test_zstream__buffer(void)$/;"	f	typeref:typename:void
test_zstream__fails_on_trailing_garbage	my_project/libgit2/tests/util/zstream.c	/^void test_zstream__fails_on_trailing_garbage(void)$/;"	f	typeref:typename:void
testrepo2_subdir_paths	my_project/libgit2/tests/libgit2/status/worktree.c	/^static const char *testrepo2_subdir_paths[] = {$/;"	v	typeref:typename:const char * []	file:
testrepo2_subdir_paths_icase	my_project/libgit2/tests/libgit2/status/worktree.c	/^static const char *testrepo2_subdir_paths_icase[] = {$/;"	v	typeref:typename:const char * []	file:
tests	my_project/libgit2/tests/clar/clar.c	/^	const struct clar_func *tests;$/;"	m	struct:clar_suite	typeref:typename:const struct clar_func *	file:
tests_ran	my_project/libgit2/tests/clar/clar.c	/^	int tests_ran;$/;"	m	struct:__anon15d96e120108	typeref:typename:int	file:
testt	my_project/libgit2/src/util/hash/sha1dc/ubc_check.h	/^typedef struct { int dvType; int dvK; int dvB; int testt; int maski; int maskb; uint32_t dm[80];/;"	m	struct:__anonf957b8130108	typeref:typename:int
text	my_project/libgit2/.vscode/launch.json	/^                    "text": "-enable-pretty-printing",$/;"	s	object:configurations.0.setupCommands.0
text	my_project/libgit2/deps/zlib/zlib.h	/^    int     text;       \/* true if compressed data believed to be text *\/$/;"	m	struct:gz_header_s	typeref:typename:int
text_eol_is_crlf	my_project/libgit2/src/libgit2/crlf.c	/^static int text_eol_is_crlf(struct crlf_attrs *ca)$/;"	f	typeref:typename:int	file:
textual_content	my_project/libgit2/tests/libgit2/object/blob/fromstream.c	/^static char textual_content[] = "libgit2\\n\\r\\n\\0";$/;"	v	typeref:typename:char[]	file:
th_data	my_project/libgit2/tests/libgit2/threads/refdb.c	/^struct th_data {$/;"	s	file:
their_entry	my_project/libgit2/src/libgit2/merge.h	/^	git_index_entry their_entry;$/;"	m	struct:__anon7b397d650308	typeref:typename:git_index_entry
their_label	my_project/libgit2/include/git2/checkout.h	/^	const char *their_label; \/**< the name of the "their" side of conflicts *\/$/;"	m	struct:git_checkout_options	typeref:typename:const char *
their_label	my_project/libgit2/include/git2/merge.h	/^	const char *their_label;$/;"	m	struct:__anon1374edca0508	typeref:typename:const char *
their_mode	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	unsigned int their_mode;$/;"	m	struct:merge_reuc_entry	typeref:typename:unsigned int
their_oid_str	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	char their_oid_str[GIT_OID_SHA1_HEXSIZE+1];$/;"	m	struct:merge_reuc_entry	typeref:typename:char[]
their_path	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	char their_path[128];$/;"	m	struct:merge_name_entry	typeref:typename:char[128]
their_status	my_project/libgit2/src/libgit2/merge.h	/^	git_delta_t their_status;$/;"	m	struct:__anon7b397d650308	typeref:typename:git_delta_t
theirs	my_project/libgit2/include/git2/sys/index.h	/^	char *theirs;$/;"	m	struct:git_index_name_entry	typeref:typename:char *
theirs	my_project/libgit2/src/libgit2/checkout.c	/^	const git_index_entry *theirs;$/;"	m	struct:__anon35c6e5c60308	typeref:typename:const git_index_entry *	file:
theirs	my_project/libgit2/src/libgit2/merge_driver.h	/^	const git_index_entry *theirs;$/;"	m	struct:git_merge_driver_source	typeref:typename:const git_index_entry *
theirs	my_project/libgit2/tests/libgit2/checkout/conflict.c	/^	char theirs[64];$/;"	m	struct:checkout_name_entry	typeref:typename:char[64]	file:
theirs	my_project/libgit2/tests/libgit2/merge/merge_helpers.h	/^	struct merge_index_with_status theirs;$/;"	m	struct:merge_index_conflict_data	typeref:struct:merge_index_with_status
then_offsets	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u8 *then_offsets;$/;"	m	struct:compiler_common	typeref:typename:sljit_u8 *	file:
then_trap	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct then_trap_backtrack *then_trap;$/;"	m	struct:then_trap_backtrack	typeref:struct:then_trap_backtrack *	file:
then_trap	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  then_trap_backtrack *then_trap;$/;"	m	struct:compiler_common	typeref:typename:then_trap_backtrack *	file:
then_trap_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^typedef struct then_trap_backtrack {$/;"	s	file:
then_trap_backtrack	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^} then_trap_backtrack;$/;"	t	typeref:struct:then_trap_backtrack	file:
then_trap_opcode	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^static pcre_uchar then_trap_opcode[1] = { OP_THEN_TRAP };$/;"	v	typeref:typename:pcre_uchar[1]	file:
thin_pack	my_project/libgit2/src/libgit2/transports/smart.h	/^	             thin_pack:1,$/;"	m	struct:transport_smart_caps	typeref:typename:unsigned int:1
thin_pack	my_project/libgit2/tests/libgit2/pack/indexer.c	/^static const unsigned char thin_pack[] = {$/;"	v	typeref:typename:const unsigned char[]	file:
thin_pack_len	my_project/libgit2/tests/libgit2/pack/indexer.c	/^static const unsigned int thin_pack_len = 78;$/;"	v	typeref:typename:const unsigned int	file:
third section	my_project/libgit2/tests/resources/userdiff/after/file.html	/^  <h1 id="third section">$/;"	I
third section	my_project/libgit2/tests/resources/userdiff/before/file.html	/^  <h1 id="third section">$/;"	I
third section	my_project/libgit2/tests/resources/userdiff/expected/driver/diff.html	/^@@ -35,4 +37,2 @@ <h1 id="third section">$/;"	I
third section	my_project/libgit2/tests/resources/userdiff/files/file.html	/^  <h1 id="third section">$/;"	I
third_tree	my_project/libgit2/tests/libgit2/object/tree/write.c	/^static const char *third_tree = "eb86d8b81d6adbd5290a935d6c9976882de98488";$/;"	v	typeref:typename:const char *	file:
thread	my_project/libgit2/src/libgit2/pack-objects.c	/^	git_thread thread;$/;"	m	struct:thread_params	typeref:typename:git_thread	file:
thread	my_project/libgit2/src/util/unix/pthread.h	/^	pthread_t thread;$/;"	m	struct:__anon6b9c93610108	typeref:typename:pthread_t
thread	my_project/libgit2/src/util/win32/thread.h	/^	HANDLE thread;$/;"	m	struct:__anond08cd1a00108	typeref:typename:HANDLE
thread_params	my_project/libgit2/src/libgit2/pack-objects.c	/^struct thread_params {$/;"	s	file:
thread_str_free	my_project/libgit2/src/libgit2/oid.c	/^static void GIT_SYSTEM_CALL thread_str_free(void *s)$/;"	f	typeref:typename:void GIT_SYSTEM_CALL	file:
thread_str_global_shutdown	my_project/libgit2/src/libgit2/oid.c	/^static void thread_str_global_shutdown(void)$/;"	f	typeref:typename:void	file:
thread_str_key	my_project/libgit2/src/libgit2/oid.c	/^static git_tlsdata_key thread_str_key;$/;"	v	typeref:typename:git_tlsdata_key	file:
threaded_find_deltas	my_project/libgit2/src/libgit2/pack-objects.c	/^static void *threaded_find_deltas(void *arg)$/;"	f	typeref:typename:void *	file:
threadid_cb	my_project/libgit2/src/libgit2/streams/openssl_legacy.c	/^static void threadid_cb(CRYPTO_THREADID *threadid)$/;"	f	typeref:typename:void	file:
threadstate_dispose	my_project/libgit2/src/util/errors.c	/^static void threadstate_dispose(struct error_threadstate *threadstate)$/;"	f	typeref:typename:void	file:
threadstate_free	my_project/libgit2/src/util/errors.c	/^static void GIT_SYSTEM_CALL threadstate_free(void *threadstate)$/;"	f	typeref:typename:void GIT_SYSTEM_CALL	file:
threadstate_get	my_project/libgit2/src/util/errors.c	/^static struct error_threadstate *threadstate_get(void)$/;"	f	typeref:struct:error_threadstate *	file:
throughput_bytes	my_project/libgit2/src/cli/progress.h	/^	double throughput_bytes;$/;"	m	struct:__anonb5f2ec150208	typeref:typename:double
throughput_update	my_project/libgit2/src/cli/progress.h	/^	uint64_t throughput_update;$/;"	m	struct:__anonb5f2ec150208	typeref:typename:uint64_t
tick_index	my_project/libgit2/tests/libgit2/checkout/checkout_helpers.c	/^void tick_index(git_index *index)$/;"	f	typeref:typename:void
time	my_project/libgit2/deps/zlib/zlib.h	/^    uLong   time;       \/* modification time *\/$/;"	m	struct:gz_header_s	typeref:typename:uLong
time	my_project/libgit2/include/git2/types.h	/^	git_time_t time; \/**< time in seconds from epoch *\/$/;"	m	struct:git_time	typeref:typename:git_time_t
time	my_project/libgit2/src/libgit2/commit_list.h	/^	int64_t time;$/;"	m	struct:git_commit_list_node	typeref:typename:int64_t
time	my_project/libgit2/tests/libgit2/commit/parse.c	/^	git_time_t time;$/;"	m	struct:__anon39d5c3ee0208	typeref:typename:git_time_t	file:
time_in_ms	my_project/libgit2/tests/benchmarks/benchmark.sh	/^time_in_ms() { if [ "$(uname -s)" = "Darwin" ]; then date "+%s000"; else date "+%s%N" ; fi; }$/;"	f
time_started	my_project/libgit2/tests/clar/clar_libgit2_timer.h	/^	uint64_t time_started;$/;"	m	struct:cl_perf_timer	typeref:typename:uint64_t
time_started	my_project/libgit2/tests/libgit2/perf/helper__perf__timer.h	/^	LARGE_INTEGER time_started;$/;"	m	struct:perf__timer	typeref:typename:LARGE_INTEGER
time_started	my_project/libgit2/tests/libgit2/perf/helper__perf__timer.h	/^	uint32_t time_started;$/;"	m	struct:perf__timer	typeref:typename:uint32_t
timeout	my_project/libgit2/include/git2/sys/stream.h	/^	int timeout;$/;"	m	struct:git_stream	typeref:typename:int
timespec	my_project/libgit2/src/util/win32/win32-compat.h	/^#define timespec /;"	d
timestamp	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	uint64_t timestamp;$/;"	m	struct:ntlm_client	typeref:typename:uint64_t
timezone_names	my_project/libgit2/src/util/date.c	/^} timezone_names[] = {$/;"	v	typeref:typename:const struct __anon0f244edf0208[]
tlno	my_project/libgit2/src/libgit2/blame_git.c	/^	long tlno;$/;"	m	struct:blame_chunk_cb_data	typeref:typename:long	file:
tls_callbacks	my_project/libgit2/src/libgit2/streams/registry.c	/^	git_stream_registration tls_callbacks;$/;"	m	struct:stream_registry	typeref:typename:git_stream_registration	file:
tls_key	my_project/libgit2/src/util/errors.c	/^static git_tlsdata_key tls_key;$/;"	v	typeref:typename:git_tlsdata_key	file:
tlsdata_cnt	my_project/libgit2/src/util/thread.c	/^static int tlsdata_cnt = 0;$/;"	v	typeref:typename:int	file:
tlsdata_error	my_project/libgit2/src/util/errors.c	/^static git_error tlsdata_error = {$/;"	v	typeref:typename:git_error	file:
tlsdata_value	my_project/libgit2/src/util/thread.c	/^} tlsdata_value;$/;"	t	typeref:struct:__anon43da2a990108	file:
tlsdata_values	my_project/libgit2/src/util/thread.c	/^static tlsdata_value tlsdata_values[TLSDATA_MAX];$/;"	v	typeref:typename:tlsdata_value[]	file:
tm_to_time_t	my_project/libgit2/src/util/date.c	/^static git_time_t tm_to_time_t(const struct tm *tm)$/;"	f	typeref:typename:git_time_t	file:
tmp	my_project/libgit2/src/libgit2/attr_file.h	/^	git_str tmp;$/;"	m	struct:__anon0df92d8f0a08	typeref:typename:git_str
tmp	my_project/libgit2/src/libgit2/checkout.c	/^	git_str tmp;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_str	file:
tmp	my_project/libgit2/src/libgit2/repository.c	/^	git_str tmp;$/;"	m	struct:__anon453495b00208	typeref:typename:git_str	file:
tmp_buf	my_project/libgit2/src/libgit2/iterator.c	/^	git_str tmp_buf;$/;"	m	struct:__anon2f88b95a0808	typeref:typename:git_str	file:
to	my_project/libgit2/include/git2/revparse.h	/^	git_object *to;$/;"	m	struct:__anonc6e279620208	typeref:typename:git_object *
to	my_project/libgit2/src/util/futils.c	/^	git_str to;$/;"	m	struct:__anon45ee97580208	typeref:typename:git_str	file:
to_hex	my_project/libgit2/tests/libgit2/core/pool.c	/^static char to_hex[] = "0123456789abcdef";$/;"	v	typeref:typename:char[]	file:
to_root	my_project/libgit2/src/util/futils.c	/^	const char *to_root;$/;"	m	struct:__anon45ee97580208	typeref:typename:const char *	file:
top	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct backtrack_common *top;$/;"	m	struct:backtrack_common	typeref:struct:backtrack_common *	file:
top_backref	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int  top_backref;                 \/* Maximum back reference *\/$/;"	m	struct:compile_data	typeref:typename:int
top_backref	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 top_backref;        \/* Highest numbered back reference *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
top_backref	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 top_backref;        \/* Highest numbered back reference *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
top_bracket	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 top_bracket;        \/* Highest numbered group *\/$/;"	m	struct:real_pcre32	typeref:typename:pcre_uint16
top_bracket	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 top_bracket;        \/* Highest numbered group *\/$/;"	m	struct:real_pcre8_or_16	typeref:typename:pcre_uint16
top_bracket	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_u32 top_bracket;$/;"	m	struct:executable_functions	typeref:typename:sljit_u32	file:
top_dir	my_project/libgit2/tests/util/dirent.c	/^static char *top_dir = "dir-walk";$/;"	v	typeref:typename:char *	file:
topbacktracks	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *topbacktracks;$/;"	m	struct:backtrack_common	typeref:typename:jump_list *	file:
topo_delay	my_project/libgit2/src/libgit2/commit_list.h	/^			 topo_delay:1,$/;"	m	struct:git_commit_list_node	typeref:typename:unsigned int:1
toptable1	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^static const pcre_uint8 toptable1[] = {$/;"	v	typeref:typename:const pcre_uint8[]	file:
toptable2	my_project/libgit2/deps/pcre/pcre_dfa_exec.c	/^static const pcre_uint8 toptable2[] = {$/;"	v	typeref:typename:const pcre_uint8[]	file:
total	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned long total;        \/* protected copy of output count *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned long
total	my_project/libgit2/src/libgit2/commit.c	/^	size_t total;$/;"	m	struct:__anon9e6354d90108	typeref:typename:size_t	file:
total	my_project/libgit2/src/libgit2/commit.c	/^	size_t total;$/;"	m	struct:__anon9e6354d90208	typeref:typename:size_t	file:
total	my_project/libgit2/src/libgit2/commit.c	/^	size_t total;$/;"	m	struct:__anon9e6354d90308	typeref:typename:size_t	file:
total	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^	uint64_t total;$/;"	m	struct:__anon09d552690108	typeref:typename:uint64_t
total_deltas	my_project/libgit2/include/git2/indexer.h	/^	unsigned int total_deltas;$/;"	m	struct:git_indexer_progress	typeref:typename:unsigned int
total_errors	my_project/libgit2/tests/clar/clar.c	/^	int total_errors;$/;"	m	struct:__anon15d96e120108	typeref:typename:int	file:
total_in	my_project/libgit2/deps/zlib/zlib.h	/^    uLong    total_in;  \/* total number of input bytes read so far *\/$/;"	m	struct:z_stream_s	typeref:typename:uLong
total_objects	my_project/libgit2/include/git2/indexer.h	/^	unsigned int total_objects;$/;"	m	struct:git_indexer_progress	typeref:typename:unsigned int
total_out	my_project/libgit2/deps/zlib/zlib.h	/^    uLong    total_out; \/* total number of bytes output so far *\/$/;"	m	struct:z_stream_s	typeref:typename:uLong
total_patches	my_project/libgit2/include/git2/deprecated.h	/^	size_t total_patches;$/;"	m	struct:__anon325f306b0208	typeref:typename:size_t
total_skipped	my_project/libgit2/tests/clar/clar.c	/^	int total_skipped;$/;"	m	struct:__anon15d96e120108	typeref:typename:int	file:
total_steps	my_project/libgit2/examples/clone.c	/^	size_t total_steps;$/;"	m	struct:progress_data	typeref:typename:size_t	file:
total_steps	my_project/libgit2/src/libgit2/checkout.c	/^	size_t total_steps;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:size_t	file:
touch_file	my_project/libgit2/tests/libgit2/diff/workdir.c	/^static int touch_file(void *payload, git_str *path)$/;"	f	typeref:typename:int	file:
tr_static_init	my_project/libgit2/deps/zlib/trees.c	/^local void tr_static_init(void) {$/;"	f	typeref:typename:local void
trace_callback	my_project/libgit2/tests/libgit2/trace/trace.c	/^static void trace_callback(git_trace_level_t level, const char *message)$/;"	f	typeref:typename:void	file:
trace_payload	my_project/libgit2/tests/clar/clar.c	/^	void *trace_payload;$/;"	m	struct:__anon15d96e120108	typeref:typename:void *	file:
trailer	my_project/libgit2/src/libgit2/indexer.c	/^	git_hash_ctx trailer;$/;"	m	struct:git_indexer	typeref:typename:git_hash_ctx	file:
trailer_state	my_project/libgit2/src/libgit2/trailer.c	/^enum trailer_state {$/;"	g	file:
trailers	my_project/libgit2/include/git2/message.h	/^  git_message_trailer *trailers;$/;"	m	struct:__anon2d3685bf0208	typeref:typename:git_message_trailer *
trailingBytesForUTF8	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^static const char trailingBytesForUTF8[256] = {$/;"	v	typeref:typename:const char[256]	file:
trailing_space_length	my_project/libgit2/src/libgit2/attr_file.c	/^static size_t trailing_space_length(const char *p, size_t len)$/;"	f	typeref:typename:size_t	file:
trampoline	my_project/libgit2/tests/clar/clar.c	/^	jmp_buf trampoline;$/;"	m	struct:__anon15d96e120108	typeref:typename:jmp_buf	file:
trampoline_enabled	my_project/libgit2/tests/clar/clar.c	/^	int trampoline_enabled;$/;"	m	struct:__anon15d96e120108	typeref:typename:int	file:
transaction_node	my_project/libgit2/src/libgit2/transaction.c	/^} transaction_node;$/;"	t	typeref:struct:__anonbebdb9760208	file:
transaction_t	my_project/libgit2/src/libgit2/transaction.c	/^} transaction_t;$/;"	t	typeref:enum:__anonbebdb9760103	file:
transferProgressCallback	my_project/libgit2/tests/libgit2/online/fetch.c	/^static int transferProgressCallback(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
transfer_cb	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^static int transfer_cb(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
transfer_encoding	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static const wchar_t *transfer_encoding = L"Transfer-Encoding: chunked";$/;"	v	typeref:typename:const wchar_t *	file:
transfer_progress	my_project/libgit2/include/git2/remote.h	/^	git_indexer_progress_cb transfer_progress;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_indexer_progress_cb
transfer_progress_calls	my_project/libgit2/tests/libgit2/online/push_util.h	/^	int transfer_progress_calls;$/;"	m	struct:__anonec09f7510208	typeref:typename:int
transfer_progress_cb	my_project/libgit2/examples/fetch.c	/^static int transfer_progress_cb(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
transfer_to_push_transfer	my_project/libgit2/src/libgit2/transports/local.c	/^static int transfer_to_push_transfer(const git_indexer_progress *stats, void *payload)$/;"	f	typeref:typename:int	file:
transient_count_leaks	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^	unsigned int transient_count_leaks; \/* sum of leaks *\/$/;"	m	struct:__anonc260a6b90308	typeref:typename:unsigned int	file:
transitions	my_project/libgit2/src/libgit2/patch_parse.c	/^static const parse_header_transition transitions[] = {$/;"	v	typeref:typename:const parse_header_transition[]	file:
translate_path	my_project/libgit2/tests/clar/clar/fs.h	/^static void translate_path(WCHAR *path, size_t path_size)$/;"	f	typeref:typename:void
transport	my_project/libgit2/include/git2/remote.h	/^	git_transport_cb transport;$/;"	m	struct:git_remote_callbacks	typeref:typename:git_transport_cb
transport	my_project/libgit2/src/libgit2/remote.h	/^	git_transport *transport;$/;"	m	struct:git_remote	typeref:typename:git_transport *
transport_definition	my_project/libgit2/src/libgit2/transport.c	/^typedef struct transport_definition {$/;"	s	file:
transport_definition	my_project/libgit2/src/libgit2/transport.c	/^} transport_definition;$/;"	t	typeref:struct:transport_definition	file:
transport_find_by_url	my_project/libgit2/src/libgit2/transport.c	/^static transport_definition * transport_find_by_url(const char *url)$/;"	f	typeref:typename:transport_definition *	file:
transport_find_fn	my_project/libgit2/src/libgit2/transport.c	/^static int transport_find_fn($/;"	f	typeref:typename:int	file:
transport_local	my_project/libgit2/src/libgit2/transports/local.c	/^} transport_local;$/;"	t	typeref:struct:__anona3bc4f8a0108	file:
transport_set_paths	my_project/libgit2/src/libgit2/transports/ssh.c	/^static int transport_set_paths(git_transport *t, git_strarray *paths)$/;"	f	typeref:typename:int	file:
transport_smart	my_project/libgit2/src/libgit2/transports/smart.h	/^} transport_smart;$/;"	t	typeref:struct:__anonb9ceeb0b0c08
transport_smart_caps	my_project/libgit2/src/libgit2/transports/smart.h	/^typedef struct transport_smart_caps {$/;"	s
transport_smart_caps	my_project/libgit2/src/libgit2/transports/smart.h	/^} transport_smart_caps;$/;"	t	typeref:struct:transport_smart_caps
transports	my_project/libgit2/src/libgit2/transport.c	/^static transport_definition transports[] = {$/;"	v	typeref:typename:transport_definition[]	file:
tree	my_project/libgit2/src/libgit2/annotated_commit.h	/^	git_tree *tree;$/;"	m	struct:git_annotated_commit	typeref:typename:git_tree *
tree	my_project/libgit2/src/libgit2/index.c	/^	git_tree_cache *tree;$/;"	m	struct:read_tree_data	typeref:typename:git_tree_cache *	file:
tree	my_project/libgit2/src/libgit2/index.h	/^	git_tree_cache *tree;$/;"	m	struct:git_index	typeref:typename:git_tree_cache *
tree	my_project/libgit2/src/libgit2/iterator.c	/^	git_tree *tree;$/;"	m	struct:__anon2f88b95a0408	typeref:typename:git_tree *	file:
tree	my_project/libgit2/src/libgit2/iterator.c	/^	git_tree *tree;$/;"	m	struct:__anon2f88b95a0808	typeref:typename:git_tree *	file:
tree	my_project/libgit2/src/libgit2/reader.c	/^	git_tree *tree;$/;"	m	struct:__anon57d570630108	typeref:typename:git_tree *	file:
tree	my_project/libgit2/src/libgit2/tree.c	/^	git_tree *tree;$/;"	m	struct:__anon62877c000108	typeref:typename:git_tree *	file:
tree	my_project/libgit2/tests/libgit2/object/tree/frompath.c	/^static	git_tree *tree;$/;"	v	typeref:typename:git_tree *	file:
tree	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static object_data tree = {$/;"	v	typeref:typename:object_data
tree	my_project/libgit2/tests/libgit2/repo/headtree.c	/^static git_tree *tree;$/;"	v	typeref:typename:git_tree *	file:
tree_buf	my_project/libgit2/src/libgit2/iterator.c	/^	git_str tree_buf;$/;"	m	struct:__anon2f88b95a0908	typeref:typename:git_str	file:
tree_bytes	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char tree_bytes[] = {$/;"	v	typeref:typename:unsigned char[]
tree_bytes_sha256	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char tree_bytes_sha256[] = {$/;"	v	typeref:typename:unsigned char[]
tree_checker	my_project/libgit2/tests/libgit2/object/tree/duplicateentries.c	/^static void tree_checker($/;"	f	typeref:typename:void	file:
tree_creator	my_project/libgit2/tests/libgit2/object/tree/duplicateentries.c	/^static void tree_creator(git_oid *out, void (*fn)(git_treebuilder *))$/;"	f	typeref:typename:void	file:
tree_data	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static unsigned char tree_data[] = {$/;"	v	typeref:typename:unsigned char[]
tree_data	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char tree_data[] = {$/;"	v	typeref:typename:unsigned char[]
tree_data_sha256	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char tree_data_sha256[] = {$/;"	v	typeref:typename:unsigned char[]
tree_desc	my_project/libgit2/deps/zlib/deflate.h	/^} FAR tree_desc;$/;"	t	typeref:struct:tree_desc_s FAR
tree_desc_s	my_project/libgit2/deps/zlib/deflate.h	/^typedef struct tree_desc_s {$/;"	s
tree_entry	my_project/libgit2/src/libgit2/iterator.c	/^	git_index_entry tree_entry;$/;"	m	struct:__anon2f88b95a0908	typeref:typename:git_index_entry	file:
tree_entry	my_project/libgit2/src/libgit2/iterator.c	/^	git_tree_entry *tree_entry;$/;"	m	struct:__anon2f88b95a0308	typeref:typename:git_tree_entry *	file:
tree_entry_cmp	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(int) tree_entry_cmp($/;"	f	typeref:typename:int
tree_error	my_project/libgit2/src/libgit2/tree.c	/^static int tree_error(const char *str, const char *path)$/;"	f	typeref:typename:int	file:
tree_id	my_project/libgit2/src/libgit2/commit.h	/^	git_oid tree_id;$/;"	m	struct:git_commit	typeref:typename:git_oid
tree_id	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static char *tree_id = "dff2da90b254e1beb889d1f1f1288be1803782df";$/;"	v	typeref:typename:char *
tree_id_str	my_project/libgit2/tests/libgit2/commit/write.c	/^static const char *tree_id_str = "1810dff58d8a660512d4832e740f692884338ccd";$/;"	v	typeref:typename:const char *	file:
tree_iterator	my_project/libgit2/src/libgit2/iterator.c	/^} tree_iterator;$/;"	t	typeref:struct:__anon2f88b95a0508	file:
tree_iterator_advance	my_project/libgit2/src/libgit2/iterator.c	/^static int tree_iterator_advance(const git_index_entry **out, git_iterator *i)$/;"	f	typeref:typename:int	file:
tree_iterator_advance_into	my_project/libgit2/src/libgit2/iterator.c	/^static int tree_iterator_advance_into($/;"	f	typeref:typename:int	file:
tree_iterator_advance_over	my_project/libgit2/src/libgit2/iterator.c	/^static int tree_iterator_advance_over($/;"	f	typeref:typename:int	file:
tree_iterator_clear	my_project/libgit2/src/libgit2/iterator.c	/^static void tree_iterator_clear(tree_iterator *iter)$/;"	f	typeref:typename:void	file:
tree_iterator_compute_path	my_project/libgit2/src/libgit2/iterator.c	/^static int tree_iterator_compute_path($/;"	f	typeref:typename:int	file:
tree_iterator_current	my_project/libgit2/src/libgit2/iterator.c	/^static int tree_iterator_current($/;"	f	typeref:typename:int	file:
tree_iterator_current_entry	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(tree_iterator_entry *) tree_iterator_current_entry($/;"	f	typeref:typename:tree_iterator_entry *
tree_iterator_current_frame	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(tree_iterator_frame *) tree_iterator_current_frame($/;"	f	typeref:typename:tree_iterator_frame *
tree_iterator_entry	my_project/libgit2/src/libgit2/iterator.c	/^} tree_iterator_entry;$/;"	t	typeref:struct:__anon2f88b95a0308	file:
tree_iterator_entry_cmp_icase	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(int) tree_iterator_entry_cmp_icase($/;"	f	typeref:typename:int
tree_iterator_entry_sort_icase	my_project/libgit2/src/libgit2/iterator.c	/^static int tree_iterator_entry_sort_icase(const void *ptr_a, const void *ptr_b)$/;"	f	typeref:typename:int	file:
tree_iterator_frame	my_project/libgit2/src/libgit2/iterator.c	/^} tree_iterator_frame;$/;"	t	typeref:struct:__anon2f88b95a0408	file:
tree_iterator_frame_init	my_project/libgit2/src/libgit2/iterator.c	/^static int tree_iterator_frame_init($/;"	f	typeref:typename:int	file:
tree_iterator_frame_pop	my_project/libgit2/src/libgit2/iterator.c	/^static int tree_iterator_frame_pop(tree_iterator *iter)$/;"	f	typeref:typename:int	file:
tree_iterator_frame_push	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(int) tree_iterator_frame_push($/;"	f	typeref:typename:int
tree_iterator_frame_push_neighbors	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(int) tree_iterator_frame_push_neighbors($/;"	f	typeref:typename:int
tree_iterator_free	my_project/libgit2/src/libgit2/iterator.c	/^static void tree_iterator_free(git_iterator *i)$/;"	f	typeref:typename:void	file:
tree_iterator_init	my_project/libgit2/src/libgit2/iterator.c	/^static int tree_iterator_init(tree_iterator *iter)$/;"	f	typeref:typename:int	file:
tree_iterator_parent_frame	my_project/libgit2/src/libgit2/iterator.c	/^GIT_INLINE(tree_iterator_frame *) tree_iterator_parent_frame($/;"	f	typeref:typename:tree_iterator_frame *
tree_iterator_reset	my_project/libgit2/src/libgit2/iterator.c	/^static int tree_iterator_reset(git_iterator *i)$/;"	f	typeref:typename:int	file:
tree_iterator_set_current	my_project/libgit2/src/libgit2/iterator.c	/^static void tree_iterator_set_current($/;"	f	typeref:typename:void	file:
tree_iterator_test	my_project/libgit2/tests/libgit2/iterator/tree.c	/^static void tree_iterator_test($/;"	f	typeref:typename:void	file:
tree_key_search	my_project/libgit2/src/libgit2/tree.c	/^static int tree_key_search($/;"	f	typeref:typename:int	file:
tree_key_search	my_project/libgit2/src/libgit2/tree.c	/^struct tree_key_search {$/;"	s	file:
tree_obj	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static git_rawobj tree_obj = {$/;"	v	typeref:typename:git_rawobj
tree_oid	my_project/libgit2/src/libgit2/commit_graph.c	/^	git_oid tree_oid;$/;"	m	struct:packed_commit	typeref:typename:git_oid	file:
tree_oid	my_project/libgit2/src/libgit2/commit_graph.h	/^	git_oid tree_oid;$/;"	m	struct:git_commit_graph_entry	typeref:typename:git_oid
tree_oid	my_project/libgit2/tests/libgit2/object/tree/attributes.c	/^static const char *tree_oid  = "1b05fdaa881ee45b48cbaa5e9b037d667a47745e";$/;"	v	typeref:typename:const char *	file:
tree_oid	my_project/libgit2/tests/libgit2/object/tree/read.c	/^static const char *tree_oid = "1810dff58d8a660512d4832e740f692884338ccd";$/;"	v	typeref:typename:const char *	file:
tree_oid	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^static const char *tree_oid = "1810dff58d8a660512d4832e740f692884338ccd";$/;"	v	typeref:typename:const char *	file:
tree_parse_error	my_project/libgit2/src/libgit2/tree.c	/^static int tree_parse_error(const char *str, const char *path)$/;"	f	typeref:typename:int	file:
tree_parsing	my_project/libgit2/examples/general.c	/^static void tree_parsing(git_repository *repo)$/;"	f	typeref:typename:void	file:
tree_pool	my_project/libgit2/src/libgit2/index.h	/^	git_pool tree_pool;$/;"	m	struct:git_index	typeref:typename:git_pool
tree_reader	my_project/libgit2/src/libgit2/reader.c	/^} tree_reader;$/;"	t	typeref:struct:__anon57d570630108	file:
tree_reader_read	my_project/libgit2/src/libgit2/reader.c	/^static int tree_reader_read($/;"	f	typeref:typename:int	file:
tree_sha256	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static object_data tree_sha256 = {$/;"	v	typeref:typename:object_data
tree_stack_entry	my_project/libgit2/src/libgit2/tree.c	/^} tree_stack_entry;$/;"	t	typeref:struct:__anon62877c000108	file:
tree_walk	my_project/libgit2/src/libgit2/tree.c	/^static int tree_walk($/;"	f	typeref:typename:int	file:
tree_walk_context	my_project/libgit2/src/libgit2/pack-objects.c	/^struct tree_walk_context {$/;"	s	file:
tree_write	my_project/libgit2/src/libgit2/notes.c	/^static int tree_write($/;"	f	typeref:typename:int	file:
treebuilder_filter_prefixed	my_project/libgit2/tests/libgit2/object/tree/write.c	/^static int treebuilder_filter_prefixed($/;"	f	typeref:typename:int	file:
treebuilder_get	my_project/libgit2/src/libgit2/tree.c	/^static git_tree_entry *treebuilder_get(git_treebuilder *bld, const char *filename)$/;"	f	typeref:typename:git_tree_entry *	file:
treeish1	my_project/libgit2/examples/diff.c	/^	const char *treeish1;$/;"	m	struct:diff_options	typeref:typename:const char *	file:
treeish2	my_project/libgit2/examples/diff.c	/^	const char *treeish2;$/;"	m	struct:diff_options	typeref:typename:const char *	file:
treeish_to_tree	my_project/libgit2/examples/common.c	/^void treeish_to_tree($/;"	f	typeref:typename:void
treewalk_count_cb	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^static int treewalk_count_cb($/;"	f	typeref:typename:int	file:
treewalk_skip_data	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^struct treewalk_skip_data {$/;"	s	file:
treewalk_skip_de_cb	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^static int treewalk_skip_de_cb($/;"	f	typeref:typename:int	file:
treewalk_stop_cb	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^static int treewalk_stop_cb($/;"	f	typeref:typename:int	file:
treewalk_stop_immediately_cb	my_project/libgit2/tests/libgit2/object/tree/walk.c	/^static int treewalk_stop_immediately_cb($/;"	f	typeref:typename:int	file:
trie_node	my_project/libgit2/src/libgit2/oid.c	/^} trie_node;$/;"	t	typeref:union:__anon312886ec010a	file:
trim_common_tail	my_project/libgit2/src/libgit2/blame_git.c	/^static void trim_common_tail(mmfile_t *a, mmfile_t *b, long ctx)$/;"	f	typeref:typename:void	file:
true	my_project/libgit2/deps/ntlmclient/compat.h	/^#  define true /;"	d
true	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^#define true /;"	d	file:
true	my_project/libgit2/src/util/cc-compat.h	/^#		define true /;"	d
truncate_fetch_head	my_project/libgit2/src/libgit2/remote.c	/^static int truncate_fetch_head(const char *gitdir)$/;"	f	typeref:typename:int	file:
truncate_racily_clean	my_project/libgit2/src/libgit2/index.c	/^static int truncate_racily_clean(git_index *index)$/;"	f	typeref:typename:int	file:
try_build_signature	my_project/libgit2/tests/libgit2/commit/signature.c	/^static int try_build_signature(const char *name, const char *email, git_time_t time, int offset)$/;"	f	typeref:typename:int	file:
try_create_file_with_nsec_timestamp	my_project/libgit2/tests/libgit2/index/nsec.c	/^static bool try_create_file_with_nsec_timestamp(const char *path)$/;"	f	typeref:typename:bool	file:
try_delta	my_project/libgit2/src/libgit2/pack-objects.c	/^static int try_delta(git_packbuilder *pb, struct unpacked *trg,$/;"	f	typeref:typename:int	file:
try_lcs	my_project/libgit2/deps/xdiff/xhistogram.c	/^static int try_lcs(struct histindex *index, struct region *lcs, int b_ptr,$/;"	f	typeref:typename:int	file:
try_parse_numeric	my_project/libgit2/src/libgit2/revparse.c	/^static int try_parse_numeric(int *n, const char *curly_braces_content)$/;"	f	typeref:typename:int	file:
try_read_status	my_project/libgit2/src/util/unix/process.c	/^static int try_read_status(size_t *out, int fd, void *buf, size_t len)$/;"	f	typeref:typename:int	file:
try_remove_existing_backend	my_project/libgit2/src/libgit2/config.c	/^static void try_remove_existing_backend($/;"	f	typeref:typename:void	file:
try_set_locale	my_project/libgit2/tests/util/regexp.c	/^static void try_set_locale(int category)$/;"	f	typeref:typename:void	file:
try_write_status	my_project/libgit2/src/util/unix/process.c	/^static bool try_write_status(int fd, const void *buf, size_t len)$/;"	f	typeref:typename:bool	file:
tsort_r_cmp	my_project/libgit2/src/util/tsort.c	/^static int tsort_r_cmp(const void *a, const void *b, void *payload)$/;"	f	typeref:typename:int	file:
tsort_run	my_project/libgit2/src/util/tsort.c	/^struct tsort_run {$/;"	s	file:
tsort_store	my_project/libgit2/src/util/tsort.c	/^struct tsort_store {$/;"	s	file:
ttt	my_project/libgit2/tests/libgit2/object/message.c	/^#define ttt /;"	d	file:
tv_nsec	my_project/libgit2/src/util/win32/win32-compat.h	/^	long tv_nsec;$/;"	m	struct:p_timespec	typeref:typename:long
tv_sec	my_project/libgit2/src/util/win32/win32-compat.h	/^	time_t tv_sec;$/;"	m	struct:p_timespec	typeref:typename:time_t
tv_sec	my_project/libgit2/src/util/win32/win32-compat.h	/^	time_t tv_sec;$/;"	m	struct:p_timeval	typeref:typename:time_t
tv_usec	my_project/libgit2/src/util/win32/win32-compat.h	/^	suseconds_t tv_usec;$/;"	m	struct:p_timeval	typeref:typename:suseconds_t
two	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static object_data two = {$/;"	v	typeref:typename:object_data
two_blobs	my_project/libgit2/tests/libgit2/object/tree/duplicateentries.c	/^static void two_blobs(git_treebuilder *bld)$/;"	f	typeref:typename:void	file:
two_bytes	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char two_bytes[] = {$/;"	v	typeref:typename:unsigned char[]
two_data	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static unsigned char two_data[] = {$/;"	v	typeref:typename:unsigned char[]
two_data	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char two_data[] = {$/;"	v	typeref:typename:unsigned char[]
two_id	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static char *two_id = "78981922613b2afb6025042ff6bd878ac1994e85";$/;"	v	typeref:typename:char *
two_obj	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static git_rawobj two_obj = {$/;"	v	typeref:typename:git_rawobj
two_sha256	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static object_data two_sha256 = {$/;"	v	typeref:typename:object_data
type	my_project/libgit2/.vscode/launch.json	/^            "type": "cppdbg",$/;"	s	object:configurations.0
type	my_project/libgit2/.vscode/tasks.json	/^        "type": "shell",$/;"	s	object:tasks.0
type	my_project/libgit2/.vscode/tasks.json	/^        "type": "shell",$/;"	s	object:tasks.1
type	my_project/libgit2/deps/llhttp/llhttp.h	/^  uint8_t type;$/;"	m	struct:llhttp__internal_s	typeref:typename:uint8_t
type	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 type;$/;"	m	struct:__anon9562267c0508	typeref:typename:pcre_uint16
type	my_project/libgit2/include/git2/cert.h	/^	git_cert_ssh_t type;$/;"	m	struct:__anon7ca863480308	typeref:typename:git_cert_ssh_t
type	my_project/libgit2/include/git2/config.h	/^	git_configmap_t type;$/;"	m	struct:__anon3fe317b00308	typeref:typename:git_configmap_t
type	my_project/libgit2/include/git2/diff.h	/^	git_diff_binary_t type;$/;"	m	struct:__anon7f3f1dd30808	typeref:typename:git_diff_binary_t
type	my_project/libgit2/include/git2/odb.h	/^	git_object_t type;$/;"	m	struct:git_odb_expand_id	typeref:typename:git_object_t
type	my_project/libgit2/include/git2/oid.h	/^	unsigned char type;$/;"	m	struct:git_oid	typeref:typename:unsigned char
type	my_project/libgit2/include/git2/proxy.h	/^	git_proxy_t type;$/;"	m	struct:__anon188a123c0208	typeref:typename:git_proxy_t
type	my_project/libgit2/include/git2/rebase.h	/^	git_rebase_operation_t type;$/;"	m	struct:__anonf9a5428c0308	typeref:typename:git_rebase_operation_t
type	my_project/libgit2/src/cli/opt.h	/^	cli_opt_type_t type;$/;"	m	struct:cli_opt_spec	typeref:typename:cli_opt_type_t
type	my_project/libgit2/src/libgit2/annotated_commit.h	/^	git_annotated_commit_t type;$/;"	m	struct:git_annotated_commit	typeref:typename:git_annotated_commit_t
type	my_project/libgit2/src/libgit2/attr_file.h	/^	git_attr_file_source_t type;$/;"	m	struct:__anon0df92d8f0208	typeref:typename:git_attr_file_source_t
type	my_project/libgit2/src/libgit2/cache.h	/^	int16_t      type;  \/* git_object_t value *\/$/;"	m	struct:__anon6f0f98290208	typeref:typename:int16_t
type	my_project/libgit2/src/libgit2/diff.h	/^	git_diff_origin_t type;$/;"	m	struct:git_diff	typeref:typename:git_diff_origin_t
type	my_project/libgit2/src/libgit2/diff_driver.c	/^	git_diff_driver_t type;$/;"	m	struct:git_diff_driver	typeref:typename:git_diff_driver_t	file:
type	my_project/libgit2/src/libgit2/iterator.h	/^	git_iterator_t type;$/;"	m	struct:git_iterator	typeref:typename:git_iterator_t
type	my_project/libgit2/src/libgit2/merge.h	/^	git_merge_diff_t type;$/;"	m	struct:__anon7b397d650308	typeref:typename:git_merge_diff_t
type	my_project/libgit2/src/libgit2/odb.c	/^	git_object_t type;$/;"	m	struct:__anon3125c0850208	typeref:typename:git_object_t	file:
type	my_project/libgit2/src/libgit2/odb.h	/^	git_object_t type;		\/**< Type of this object. *\/$/;"	m	struct:__anon3125c08a0108	typeref:typename:git_object_t
type	my_project/libgit2/src/libgit2/odb_loose.c	/^	git_object_t type; \/* object type *\/$/;"	m	struct:__anon5ce333660108	typeref:typename:git_object_t	file:
type	my_project/libgit2/src/libgit2/odb_mempack.c	/^	git_object_t type;$/;"	m	struct:memobject	typeref:typename:git_object_t	file:
type	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_object_t type;$/;"	m	struct:git_pobject	typeref:typename:git_object_t
type	my_project/libgit2/src/libgit2/pack.h	/^	git_object_t type;$/;"	m	struct:pack_chain_elem	typeref:typename:git_object_t
type	my_project/libgit2/src/libgit2/rebase.c	/^	git_rebase_t type;$/;"	m	struct:git_rebase	typeref:typename:git_rebase_t	file:
type	my_project/libgit2/src/libgit2/refs.h	/^	git_reference_t type;$/;"	m	struct:git_reference	typeref:typename:git_reference_t
type	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int type;$/;"	m	struct:__anon6b5cad8b0108	typeref:typename:int
type	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int type;$/;"	m	struct:__anon6b5cad8b0208	typeref:typename:int
type	my_project/libgit2/src/libgit2/streams/openssl_dynamic.h	/^    int type;$/;"	m	struct:bio_method_st	typeref:typename:int
type	my_project/libgit2/src/libgit2/tag.h	/^	git_object_t type;$/;"	m	struct:git_tag	typeref:typename:git_object_t
type	my_project/libgit2/src/libgit2/transaction.c	/^	transaction_t type;$/;"	m	struct:git_transaction	typeref:typename:transaction_t	file:
type	my_project/libgit2/src/libgit2/transports/auth.h	/^	git_http_auth_t type;$/;"	m	struct:__anon4118c2d60208	typeref:typename:git_http_auth_t
type	my_project/libgit2/src/libgit2/transports/auth.h	/^	git_http_auth_t type;$/;"	m	struct:git_http_auth_context	typeref:typename:git_http_auth_t
type	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anonb9ceeb0b0208	typeref:typename:git_pkt_type
type	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anonb9ceeb0b0308	typeref:typename:git_pkt_type
type	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anonb9ceeb0b0408	typeref:typename:git_pkt_type
type	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anonb9ceeb0b0508	typeref:typename:git_pkt_type
type	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anonb9ceeb0b0608	typeref:typename:git_pkt_type
type	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anonb9ceeb0b0708	typeref:typename:git_pkt_type
type	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anonb9ceeb0b0808	typeref:typename:git_pkt_type
type	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anonb9ceeb0b0908	typeref:typename:git_pkt_type
type	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anonb9ceeb0b0a08	typeref:typename:git_pkt_type
type	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:__anonb9ceeb0b0b08	typeref:typename:git_pkt_type
type	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_pkt_type type;$/;"	m	struct:git_pkt_cmd	typeref:typename:git_pkt_type
type	my_project/libgit2/src/util/date.c	/^	const char *type;$/;"	m	struct:typelen	typeref:typename:const char *	file:
type	my_project/libgit2/src/util/hash/win32.c	/^	git_hash_win32_provider_t type;$/;"	m	struct:__anon307989470108	typeref:typename:git_hash_win32_provider_t	file:
type	my_project/libgit2/src/util/zstream.h	/^	git_zstream_t type;$/;"	m	struct:__anon596d958c0208	typeref:typename:git_zstream_t
type	my_project/libgit2/tests/libgit2/object/cache.c	/^	git_object_t type;$/;"	m	struct:__anon393b45750108	typeref:typename:git_object_t	file:
type	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^    char          *type;   \/* object type                               *\/$/;"	m	struct:object_data	typeref:typename:char *
type_mark	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  type_mark = 0,$/;"	e	enum:control_types	file:
type_name	my_project/libgit2/src/cli/cmd_cat_file.c	/^static char *type_name, *object_spec;$/;"	v	typeref:typename:char *	file:
type_name	my_project/libgit2/src/cli/cmd_hash_object.c	/^static char *type_name;$/;"	v	typeref:typename:char *	file:
type_size_sort	my_project/libgit2/src/libgit2/pack-objects.c	/^static int type_size_sort(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
type_then_trap	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  type_then_trap = 1$/;"	e	enum:control_types	file:
typelen	my_project/libgit2/src/util/date.c	/^static const struct typelen {$/;"	s	file:
typelen	my_project/libgit2/src/util/date.c	/^} typelen[] = {$/;"	v	typeref:typename:const struct typelen[]
u	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  } u;$/;"	m	struct:bracket_backtrack	typeref:union:bracket_backtrack::__anon4bd17169010a	file:
u	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  } u;$/;"	m	struct:char_iterator_backtrack	typeref:union:char_iterator_backtrack::__anon4bd17169020a	file:
u	my_project/libgit2/src/util/bitvec.h	/^	} u;$/;"	m	struct:__anonfa138ea30108	typeref:union:__anonfa138ea30108::__anonfa138ea3020a
uInt	my_project/libgit2/deps/zlib/zconf.h	/^#  define uInt /;"	d
uInt	my_project/libgit2/deps/zlib/zconf.h	/^typedef unsigned int   uInt;  \/* 16 bits or more *\/$/;"	t	typeref:typename:unsigned int
uIntf	my_project/libgit2/deps/zlib/zconf.h	/^#  define uIntf /;"	d
uIntf	my_project/libgit2/deps/zlib/zconf.h	/^typedef uInt  FAR uIntf;$/;"	t	typeref:typename:uInt FAR
uLong	my_project/libgit2/deps/zlib/zconf.h	/^#  define uLong /;"	d
uLong	my_project/libgit2/deps/zlib/zconf.h	/^typedef unsigned long  uLong; \/* 32 bits or more *\/$/;"	t	typeref:typename:unsigned long
uLongf	my_project/libgit2/deps/zlib/zconf.h	/^#  define uLongf /;"	d
uLongf	my_project/libgit2/deps/zlib/zconf.h	/^typedef uLong FAR uLongf;$/;"	t	typeref:typename:uLong FAR
ubc_check	my_project/libgit2/src/util/hash/sha1dc/sha1.h	/^	int ubc_check;$/;"	m	struct:__anon09d552690108	typeref:typename:int
ubc_check	my_project/libgit2/src/util/hash/sha1dc/ubc_check.c	/^void ubc_check(const uint32_t W[80], uint32_t dvmask[1])$/;"	f	typeref:typename:void
ucd_caseless_sets	my_project/libgit2/deps/pcre/pcre_ucd.c	/^const pcre_uint32 PRIV(ucd_caseless_sets)[] = {$/;"	v	typeref:typename:const pcre_uint32 PRIV ()[]
ucd_caseless_sets	my_project/libgit2/deps/pcre/pcre_ucd.c	/^const pcre_uint32 PRIV(ucd_caseless_sets)[] = {0};$/;"	v	typeref:typename:const pcre_uint32 PRIV ()[]
ucd_record	my_project/libgit2/deps/pcre/pcre_internal.h	/^} ucd_record;$/;"	t	typeref:struct:__anon9562267c0608
ucd_records	my_project/libgit2/deps/pcre/pcre_ucd.c	/^const ucd_record PRIV(ucd_records)[] = { \/* 5760 bytes, record size 8 *\/$/;"	v	typeref:typename:const ucd_record PRIV ()[]
ucd_records	my_project/libgit2/deps/pcre/pcre_ucd.c	/^const ucd_record PRIV(ucd_records)[] = {{0,0,0,0,0 }};$/;"	v	typeref:typename:const ucd_record PRIV ()[]
ucd_stage1	my_project/libgit2/deps/pcre/pcre_ucd.c	/^const pcre_uint8 PRIV(ucd_stage1)[] = { \/* 8704 bytes *\/$/;"	v	typeref:typename:const pcre_uint8 PRIV ()[]
ucd_stage1	my_project/libgit2/deps/pcre/pcre_ucd.c	/^const pcre_uint8 PRIV(ucd_stage1)[] = {0};$/;"	v	typeref:typename:const pcre_uint8 PRIV ()[]
ucd_stage2	my_project/libgit2/deps/pcre/pcre_ucd.c	/^const pcre_uint16 PRIV(ucd_stage2)[] = { \/* 58112 bytes, block = 128 *\/$/;"	v	typeref:typename:const pcre_uint16 PRIV ()[]
ucd_stage2	my_project/libgit2/deps/pcre/pcre_ucd.c	/^const pcre_uint16 PRIV(ucd_stage2)[] = {0};$/;"	v	typeref:typename:const pcre_uint16 PRIV ()[]
uch	my_project/libgit2/deps/zlib/zutil.h	/^typedef unsigned char  uch;$/;"	t	typeref:typename:unsigned char
uchar	my_project/libgit2/src/util/wildmatch.c	/^typedef unsigned char uchar;$/;"	t	typeref:typename:unsigned char	file:
ucharptr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  int ucharptr;$/;"	m	struct:compare_context	typeref:typename:int	file:
uchf	my_project/libgit2/deps/zlib/zutil.h	/^typedef uch FAR uchf;$/;"	t	typeref:typename:uch FAR
ucp_Arabic	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Arabic,$/;"	e	enum:__anon8dceed7e0403
ucp_Armenian	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Armenian,$/;"	e	enum:__anon8dceed7e0403
ucp_Avestan	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Avestan,$/;"	e	enum:__anon8dceed7e0403
ucp_Balinese	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Balinese,$/;"	e	enum:__anon8dceed7e0403
ucp_Bamum	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Bamum,$/;"	e	enum:__anon8dceed7e0403
ucp_Bassa_Vah	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Bassa_Vah,$/;"	e	enum:__anon8dceed7e0403
ucp_Batak	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Batak,$/;"	e	enum:__anon8dceed7e0403
ucp_Bengali	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Bengali,$/;"	e	enum:__anon8dceed7e0403
ucp_Bopomofo	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Bopomofo,$/;"	e	enum:__anon8dceed7e0403
ucp_Brahmi	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Brahmi,$/;"	e	enum:__anon8dceed7e0403
ucp_Braille	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Braille,$/;"	e	enum:__anon8dceed7e0403
ucp_Buginese	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Buginese,$/;"	e	enum:__anon8dceed7e0403
ucp_Buhid	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Buhid,$/;"	e	enum:__anon8dceed7e0403
ucp_C	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_C,     \/* Other *\/$/;"	e	enum:__anon8dceed7e0103
ucp_Canadian_Aboriginal	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Canadian_Aboriginal,$/;"	e	enum:__anon8dceed7e0403
ucp_Carian	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Carian,$/;"	e	enum:__anon8dceed7e0403
ucp_Caucasian_Albanian	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Caucasian_Albanian,$/;"	e	enum:__anon8dceed7e0403
ucp_Cc	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Cc,    \/* Control *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Cf	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Cf,    \/* Format *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Chakma	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Chakma,$/;"	e	enum:__anon8dceed7e0403
ucp_Cham	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Cham,$/;"	e	enum:__anon8dceed7e0403
ucp_Cherokee	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Cherokee,$/;"	e	enum:__anon8dceed7e0403
ucp_Cn	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Cn,    \/* Unassigned *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Co	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Co,    \/* Private use *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Common	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Common,$/;"	e	enum:__anon8dceed7e0403
ucp_Coptic	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Coptic,$/;"	e	enum:__anon8dceed7e0403
ucp_Cs	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Cs,    \/* Surrogate *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Cuneiform	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Cuneiform,$/;"	e	enum:__anon8dceed7e0403
ucp_Cypriot	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Cypriot,$/;"	e	enum:__anon8dceed7e0403
ucp_Cyrillic	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Cyrillic,$/;"	e	enum:__anon8dceed7e0403
ucp_Deseret	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Deseret,$/;"	e	enum:__anon8dceed7e0403
ucp_Devanagari	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Devanagari,$/;"	e	enum:__anon8dceed7e0403
ucp_Duployan	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Duployan,$/;"	e	enum:__anon8dceed7e0403
ucp_Egyptian_Hieroglyphs	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Egyptian_Hieroglyphs,$/;"	e	enum:__anon8dceed7e0403
ucp_Elbasan	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Elbasan,$/;"	e	enum:__anon8dceed7e0403
ucp_Ethiopic	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Ethiopic,$/;"	e	enum:__anon8dceed7e0403
ucp_Georgian	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Georgian,$/;"	e	enum:__anon8dceed7e0403
ucp_Glagolitic	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Glagolitic,$/;"	e	enum:__anon8dceed7e0403
ucp_Gothic	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Gothic,$/;"	e	enum:__anon8dceed7e0403
ucp_Grantha	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Grantha,$/;"	e	enum:__anon8dceed7e0403
ucp_Greek	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Greek,$/;"	e	enum:__anon8dceed7e0403
ucp_Gujarati	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Gujarati,$/;"	e	enum:__anon8dceed7e0403
ucp_Gurmukhi	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Gurmukhi,$/;"	e	enum:__anon8dceed7e0403
ucp_Han	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Han,$/;"	e	enum:__anon8dceed7e0403
ucp_Hangul	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Hangul,$/;"	e	enum:__anon8dceed7e0403
ucp_Hanunoo	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Hanunoo,$/;"	e	enum:__anon8dceed7e0403
ucp_Hebrew	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Hebrew,$/;"	e	enum:__anon8dceed7e0403
ucp_Hiragana	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Hiragana,$/;"	e	enum:__anon8dceed7e0403
ucp_Imperial_Aramaic	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Imperial_Aramaic,$/;"	e	enum:__anon8dceed7e0403
ucp_Inherited	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Inherited,$/;"	e	enum:__anon8dceed7e0403
ucp_Inscriptional_Pahlavi	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Inscriptional_Pahlavi,$/;"	e	enum:__anon8dceed7e0403
ucp_Inscriptional_Parthian	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Inscriptional_Parthian,$/;"	e	enum:__anon8dceed7e0403
ucp_Javanese	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Javanese,$/;"	e	enum:__anon8dceed7e0403
ucp_Kaithi	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Kaithi,$/;"	e	enum:__anon8dceed7e0403
ucp_Kannada	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Kannada,$/;"	e	enum:__anon8dceed7e0403
ucp_Katakana	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Katakana,$/;"	e	enum:__anon8dceed7e0403
ucp_Kayah_Li	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Kayah_Li,$/;"	e	enum:__anon8dceed7e0403
ucp_Kharoshthi	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Kharoshthi,$/;"	e	enum:__anon8dceed7e0403
ucp_Khmer	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Khmer,$/;"	e	enum:__anon8dceed7e0403
ucp_Khojki	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Khojki,$/;"	e	enum:__anon8dceed7e0403
ucp_Khudawadi	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Khudawadi,$/;"	e	enum:__anon8dceed7e0403
ucp_L	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_L,     \/* Letter *\/$/;"	e	enum:__anon8dceed7e0103
ucp_Lao	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Lao,$/;"	e	enum:__anon8dceed7e0403
ucp_Latin	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Latin,$/;"	e	enum:__anon8dceed7e0403
ucp_Lepcha	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Lepcha,$/;"	e	enum:__anon8dceed7e0403
ucp_Limbu	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Limbu,$/;"	e	enum:__anon8dceed7e0403
ucp_Linear_A	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Linear_A,$/;"	e	enum:__anon8dceed7e0403
ucp_Linear_B	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Linear_B,$/;"	e	enum:__anon8dceed7e0403
ucp_Lisu	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Lisu,$/;"	e	enum:__anon8dceed7e0403
ucp_Ll	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Ll,    \/* Lower case letter *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Lm	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Lm,    \/* Modifier letter *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Lo	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Lo,    \/* Other letter *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Lt	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Lt,    \/* Title case letter *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Lu	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Lu,    \/* Upper case letter *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Lycian	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Lycian,$/;"	e	enum:__anon8dceed7e0403
ucp_Lydian	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Lydian,$/;"	e	enum:__anon8dceed7e0403
ucp_M	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_M,     \/* Mark *\/$/;"	e	enum:__anon8dceed7e0103
ucp_Mahajani	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Mahajani,$/;"	e	enum:__anon8dceed7e0403
ucp_Malayalam	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Malayalam,$/;"	e	enum:__anon8dceed7e0403
ucp_Mandaic	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Mandaic,$/;"	e	enum:__anon8dceed7e0403
ucp_Manichaean	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Manichaean,$/;"	e	enum:__anon8dceed7e0403
ucp_Mc	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Mc,    \/* Spacing mark *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Me	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Me,    \/* Enclosing mark *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Meetei_Mayek	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Meetei_Mayek,$/;"	e	enum:__anon8dceed7e0403
ucp_Mende_Kikakui	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Mende_Kikakui,$/;"	e	enum:__anon8dceed7e0403
ucp_Meroitic_Cursive	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Meroitic_Cursive,$/;"	e	enum:__anon8dceed7e0403
ucp_Meroitic_Hieroglyphs	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Meroitic_Hieroglyphs,$/;"	e	enum:__anon8dceed7e0403
ucp_Miao	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Miao,$/;"	e	enum:__anon8dceed7e0403
ucp_Mn	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Mn,    \/* Non-spacing mark *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Modi	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Modi,$/;"	e	enum:__anon8dceed7e0403
ucp_Mongolian	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Mongolian,$/;"	e	enum:__anon8dceed7e0403
ucp_Mro	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Mro,$/;"	e	enum:__anon8dceed7e0403
ucp_Myanmar	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Myanmar,$/;"	e	enum:__anon8dceed7e0403
ucp_N	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_N,     \/* Number *\/$/;"	e	enum:__anon8dceed7e0103
ucp_Nabataean	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Nabataean,$/;"	e	enum:__anon8dceed7e0403
ucp_Nd	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Nd,    \/* Decimal number *\/$/;"	e	enum:__anon8dceed7e0203
ucp_New_Tai_Lue	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_New_Tai_Lue,$/;"	e	enum:__anon8dceed7e0403
ucp_Nko	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Nko,$/;"	e	enum:__anon8dceed7e0403
ucp_Nl	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Nl,    \/* Letter number *\/$/;"	e	enum:__anon8dceed7e0203
ucp_No	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_No,    \/* Other number *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Ogham	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Ogham,$/;"	e	enum:__anon8dceed7e0403
ucp_Ol_Chiki	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Ol_Chiki,$/;"	e	enum:__anon8dceed7e0403
ucp_Old_Italic	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Old_Italic,$/;"	e	enum:__anon8dceed7e0403
ucp_Old_North_Arabian	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Old_North_Arabian,$/;"	e	enum:__anon8dceed7e0403
ucp_Old_Permic	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Old_Permic,$/;"	e	enum:__anon8dceed7e0403
ucp_Old_Persian	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Old_Persian,$/;"	e	enum:__anon8dceed7e0403
ucp_Old_South_Arabian	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Old_South_Arabian,$/;"	e	enum:__anon8dceed7e0403
ucp_Old_Turkic	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Old_Turkic,$/;"	e	enum:__anon8dceed7e0403
ucp_Oriya	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Oriya,$/;"	e	enum:__anon8dceed7e0403
ucp_Osmanya	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Osmanya,$/;"	e	enum:__anon8dceed7e0403
ucp_P	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_P,     \/* Punctuation *\/$/;"	e	enum:__anon8dceed7e0103
ucp_Pahawh_Hmong	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Pahawh_Hmong,$/;"	e	enum:__anon8dceed7e0403
ucp_Palmyrene	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Palmyrene,$/;"	e	enum:__anon8dceed7e0403
ucp_Pau_Cin_Hau	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Pau_Cin_Hau,$/;"	e	enum:__anon8dceed7e0403
ucp_Pc	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Pc,    \/* Connector punctuation *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Pd	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Pd,    \/* Dash punctuation *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Pe	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Pe,    \/* Close punctuation *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Pf	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Pf,    \/* Final punctuation *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Phags_Pa	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Phags_Pa,$/;"	e	enum:__anon8dceed7e0403
ucp_Phoenician	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Phoenician,$/;"	e	enum:__anon8dceed7e0403
ucp_Pi	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Pi,    \/* Initial punctuation *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Po	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Po,    \/* Other punctuation *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Ps	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Ps,    \/* Open punctuation *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Psalter_Pahlavi	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Psalter_Pahlavi,$/;"	e	enum:__anon8dceed7e0403
ucp_Rejang	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Rejang,$/;"	e	enum:__anon8dceed7e0403
ucp_Runic	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Runic,$/;"	e	enum:__anon8dceed7e0403
ucp_S	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_S,     \/* Symbol *\/$/;"	e	enum:__anon8dceed7e0103
ucp_Samaritan	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Samaritan,$/;"	e	enum:__anon8dceed7e0403
ucp_Saurashtra	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Saurashtra,$/;"	e	enum:__anon8dceed7e0403
ucp_Sc	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Sc,    \/* Currency symbol *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Sharada	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Sharada,$/;"	e	enum:__anon8dceed7e0403
ucp_Shavian	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Shavian,$/;"	e	enum:__anon8dceed7e0403
ucp_Siddham	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Siddham,$/;"	e	enum:__anon8dceed7e0403
ucp_Sinhala	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Sinhala,$/;"	e	enum:__anon8dceed7e0403
ucp_Sk	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Sk,    \/* Modifier symbol *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Sm	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Sm,    \/* Mathematical symbol *\/$/;"	e	enum:__anon8dceed7e0203
ucp_So	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_So,    \/* Other symbol *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Sora_Sompeng	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Sora_Sompeng,$/;"	e	enum:__anon8dceed7e0403
ucp_Sundanese	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Sundanese,$/;"	e	enum:__anon8dceed7e0403
ucp_Syloti_Nagri	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Syloti_Nagri,$/;"	e	enum:__anon8dceed7e0403
ucp_Syriac	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Syriac,$/;"	e	enum:__anon8dceed7e0403
ucp_Tagalog	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Tagalog,$/;"	e	enum:__anon8dceed7e0403
ucp_Tagbanwa	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Tagbanwa,$/;"	e	enum:__anon8dceed7e0403
ucp_Tai_Le	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Tai_Le,$/;"	e	enum:__anon8dceed7e0403
ucp_Tai_Tham	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Tai_Tham,$/;"	e	enum:__anon8dceed7e0403
ucp_Tai_Viet	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Tai_Viet,$/;"	e	enum:__anon8dceed7e0403
ucp_Takri	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Takri,$/;"	e	enum:__anon8dceed7e0403
ucp_Tamil	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Tamil,$/;"	e	enum:__anon8dceed7e0403
ucp_Telugu	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Telugu,$/;"	e	enum:__anon8dceed7e0403
ucp_Thaana	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Thaana,$/;"	e	enum:__anon8dceed7e0403
ucp_Thai	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Thai,$/;"	e	enum:__anon8dceed7e0403
ucp_Tibetan	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Tibetan,$/;"	e	enum:__anon8dceed7e0403
ucp_Tifinagh	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Tifinagh,$/;"	e	enum:__anon8dceed7e0403
ucp_Tirhuta	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Tirhuta,$/;"	e	enum:__anon8dceed7e0403
ucp_Ugaritic	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Ugaritic,$/;"	e	enum:__anon8dceed7e0403
ucp_Vai	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Vai,$/;"	e	enum:__anon8dceed7e0403
ucp_Warang_Citi	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Warang_Citi$/;"	e	enum:__anon8dceed7e0403
ucp_Yi	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Yi,$/;"	e	enum:__anon8dceed7e0403
ucp_Z	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Z      \/* Separator *\/$/;"	e	enum:__anon8dceed7e0103
ucp_Zl	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Zl,    \/* Line separator *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Zp	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Zp,    \/* Paragraph separator *\/$/;"	e	enum:__anon8dceed7e0203
ucp_Zs	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_Zs     \/* Space separator *\/$/;"	e	enum:__anon8dceed7e0203
ucp_gbCR	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_gbCR,                \/*  0 *\/$/;"	e	enum:__anon8dceed7e0303
ucp_gbControl	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_gbControl,           \/*  2 *\/$/;"	e	enum:__anon8dceed7e0303
ucp_gbExtend	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_gbExtend,            \/*  3 *\/$/;"	e	enum:__anon8dceed7e0303
ucp_gbL	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_gbL,                 \/*  6 Hangul syllable type L *\/$/;"	e	enum:__anon8dceed7e0303
ucp_gbLF	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_gbLF,                \/*  1 *\/$/;"	e	enum:__anon8dceed7e0303
ucp_gbLV	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_gbLV,                \/*  9 Hangul syllable type LV *\/$/;"	e	enum:__anon8dceed7e0303
ucp_gbLVT	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_gbLVT,               \/* 10 Hangul syllable type LVT *\/$/;"	e	enum:__anon8dceed7e0303
ucp_gbOther	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_gbOther              \/* 12 *\/$/;"	e	enum:__anon8dceed7e0303
ucp_gbPrepend	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_gbPrepend,           \/*  4 *\/$/;"	e	enum:__anon8dceed7e0303
ucp_gbRegionalIndicator	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_gbRegionalIndicator, \/* 11 *\/$/;"	e	enum:__anon8dceed7e0303
ucp_gbSpacingMark	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_gbSpacingMark,       \/*  5 *\/$/;"	e	enum:__anon8dceed7e0303
ucp_gbT	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_gbT,                 \/*  8 Hangul syllable type T *\/$/;"	e	enum:__anon8dceed7e0303
ucp_gbV	my_project/libgit2/deps/pcre/ucp.h	/^  ucp_gbV,                 \/*  7 Hangul syllable type V *\/$/;"	e	enum:__anon8dceed7e0303
ucp_gentype	my_project/libgit2/deps/pcre/pcre_tables.c	/^const pcre_uint32 PRIV(ucp_gentype)[] = {$/;"	v	typeref:typename:const pcre_uint32 PRIV ()[]
ucp_type_table	my_project/libgit2/deps/pcre/pcre_internal.h	/^} ucp_type_table;$/;"	t	typeref:struct:__anon9562267c0508
ucp_typerange	my_project/libgit2/deps/pcre/pcre_tables.c	/^const int PRIV(ucp_typerange)[] = {$/;"	v	typeref:typename:const int PRIV ()[]
uid	my_project/libgit2/include/git2/index.h	/^	uint32_t uid;$/;"	m	struct:git_index_entry	typeref:typename:uint32_t
uid	my_project/libgit2/src/libgit2/index.c	/^	uint32_t uid;$/;"	m	struct:entry_common	typeref:typename:uint32_t	file:
uid	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^	char uid[STACKTRACE_UID_LEN + 1];$/;"	m	struct:__anonc260a6b90208	typeref:typename:char[]	file:
uid	my_project/libgit2/src/util/win32/w32_leakcheck.c	/^	git_win32_leakcheck_stacktrace_uid uid; \/* must be first *\/$/;"	m	struct:__anonc260a6b90308	typeref:typename:git_win32_leakcheck_stacktrace_uid	file:
uint16_t	my_project/libgit2/include/git2/stdint.h	/^   typedef unsigned __int16  uint16_t;$/;"	t	typeref:typename:unsigned __int16
uint16_t	my_project/libgit2/include/git2/stdint.h	/^   typedef unsigned short    uint16_t;$/;"	t	typeref:typename:unsigned short
uint32_t	my_project/libgit2/include/git2/stdint.h	/^   typedef unsigned __int32  uint32_t;$/;"	t	typeref:typename:unsigned __int32
uint32_t	my_project/libgit2/include/git2/stdint.h	/^   typedef unsigned int      uint32_t;$/;"	t	typeref:typename:unsigned int
uint64_t	my_project/libgit2/include/git2/stdint.h	/^typedef unsigned __int64     uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint8_t	my_project/libgit2/include/git2/stdint.h	/^   typedef unsigned __int8   uint8_t;$/;"	t	typeref:typename:unsigned __int8
uint8_t	my_project/libgit2/include/git2/stdint.h	/^   typedef unsigned char     uint8_t;$/;"	t	typeref:typename:unsigned char
uint_fast16_t	my_project/libgit2/include/git2/stdint.h	/^typedef uint16_t  uint_fast16_t;$/;"	t	typeref:typename:uint16_t
uint_fast32_t	my_project/libgit2/include/git2/stdint.h	/^typedef uint32_t  uint_fast32_t;$/;"	t	typeref:typename:uint32_t
uint_fast64_t	my_project/libgit2/include/git2/stdint.h	/^typedef uint64_t  uint_fast64_t;$/;"	t	typeref:typename:uint64_t
uint_fast8_t	my_project/libgit2/include/git2/stdint.h	/^typedef uint8_t   uint_fast8_t;$/;"	t	typeref:typename:uint8_t
uint_least16_t	my_project/libgit2/include/git2/stdint.h	/^typedef uint16_t  uint_least16_t;$/;"	t	typeref:typename:uint16_t
uint_least32_t	my_project/libgit2/include/git2/stdint.h	/^typedef uint32_t  uint_least32_t;$/;"	t	typeref:typename:uint32_t
uint_least64_t	my_project/libgit2/include/git2/stdint.h	/^typedef uint64_t  uint_least64_t;$/;"	t	typeref:typename:uint64_t
uint_least8_t	my_project/libgit2/include/git2/stdint.h	/^typedef uint8_t   uint_least8_t;$/;"	t	typeref:typename:uint8_t
uintmax_t	my_project/libgit2/include/git2/stdint.h	/^typedef uint64_t  uintmax_t;$/;"	t	typeref:typename:uint64_t
uintptr_t	my_project/libgit2/include/git2/stdint.h	/^   typedef _W64 unsigned int uintptr_t;$/;"	t	typeref:typename:_W64 unsigned int
uintptr_t	my_project/libgit2/include/git2/stdint.h	/^   typedef unsigned __int64  uintptr_t;$/;"	t	typeref:typename:unsigned __int64
ulg	my_project/libgit2/deps/zlib/zutil.h	/^typedef unsigned long  ulg;$/;"	t	typeref:typename:unsigned long
unaffected	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^static char *unaffected[][4] = {$/;"	v	typeref:typename:char * [][4]	file:
unc_path	my_project/libgit2/tests/libgit2/clone/local.c	/^static int unc_path(git_str *buf, const char *host, const char *path)$/;"	f	typeref:typename:int	file:
uncompress	my_project/libgit2/deps/zlib/zconf.h	/^#    define uncompress /;"	d
uncompress2	my_project/libgit2/deps/zlib/zconf.h	/^#    define uncompress2 /;"	d
unescape_line	my_project/libgit2/src/libgit2/config_parse.c	/^static int unescape_line(char **out, bool *is_multi, const char *ptr, int *quote_count)$/;"	f	typeref:typename:int	file:
unescape_spaces	my_project/libgit2/src/libgit2/attr_file.c	/^static size_t unescape_spaces(char *str)$/;"	f	typeref:typename:size_t	file:
unicode_builtin_encoding_convert	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^static inline bool unicode_builtin_encoding_convert($/;"	f	typeref:typename:bool	file:
unicode_builtin_encoding_direction	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^} unicode_builtin_encoding_direction;$/;"	t	typeref:enum:__anon2762a15e0303	file:
unicode_builtin_utf16_to_8	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^	unicode_builtin_utf16_to_8$/;"	e	enum:__anon2762a15e0303	file:
unicode_builtin_utf8_to_16	my_project/libgit2/deps/ntlmclient/unicode_builtin.c	/^	unicode_builtin_utf8_to_16,$/;"	e	enum:__anon2762a15e0303	file:
unicode_ctx	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	ntlm_unicode_ctx unicode_ctx;$/;"	m	struct:ntlm_client	typeref:typename:ntlm_unicode_ctx
unicode_iconv_encoding_convert	my_project/libgit2/deps/ntlmclient/unicode_iconv.c	/^static inline bool unicode_iconv_encoding_convert($/;"	f	typeref:typename:bool	file:
unicode_iconv_encoding_direction	my_project/libgit2/deps/ntlmclient/unicode_iconv.c	/^} unicode_iconv_encoding_direction;$/;"	t	typeref:enum:__anon413eee660103	file:
unicode_iconv_utf16_to_8	my_project/libgit2/deps/ntlmclient/unicode_iconv.c	/^	unicode_iconv_utf16_to_8$/;"	e	enum:__anon413eee660103	file:
unicode_iconv_utf8_to_16	my_project/libgit2/deps/ntlmclient/unicode_iconv.c	/^	unicode_iconv_utf8_to_16,$/;"	e	enum:__anon413eee660103	file:
unicode_initialized	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	    unicode_initialized : 1;$/;"	m	struct:ntlm_client	typeref:typename:int:1
uninitialized_error	my_project/libgit2/src/util/errors.c	/^static git_error uninitialized_error = {$/;"	v	typeref:typename:git_error	file:
uninteresting	my_project/libgit2/src/libgit2/commit_list.h	/^			 uninteresting:1,$/;"	m	struct:git_commit_list_node	typeref:typename:unsigned int:1
uninteresting	my_project/libgit2/src/libgit2/pack-objects.c	/^	unsigned int uninteresting:1,$/;"	m	struct:walk_object	typeref:typename:unsigned int:1	file:
uninteresting	my_project/libgit2/src/libgit2/revwalk.h	/^	int uninteresting;$/;"	m	struct:__anoncf11cd510108	typeref:typename:int
uniques	my_project/libgit2/tests/resources/userdiff/after/file.php	/^    protected $uniques = array();$/;"	v	class:Faker\\UniqueGenerator
uniques	my_project/libgit2/tests/resources/userdiff/before/file.php	/^    protected $uniques = array();$/;"	v	class:Faker\\UniqueGenerator
uniques	my_project/libgit2/tests/resources/userdiff/files/file.php	/^    protected $uniques = array();$/;"	v	class:Faker\\UniqueGenerator
unlink_file	my_project/libgit2/tests/libgit2/checkout/crlf.c	/^static int unlink_file(void *payload, git_str *path)$/;"	f	typeref:typename:int	file:
unlink_once	my_project/libgit2/src/util/win32/posix_w32.c	/^GIT_INLINE(int) unlink_once(const wchar_t *path)$/;"	f	typeref:typename:int
unmerged_index_init	my_project/libgit2/tests/libgit2/reset/hard.c	/^static void unmerged_index_init(git_index *index, int entries)$/;"	f	typeref:typename:void	file:
unpack_ok	my_project/libgit2/src/libgit2/push.h	/^	bool unpack_ok;$/;"	m	struct:git_push	typeref:typename:bool
unpack_ok	my_project/libgit2/src/libgit2/transports/smart.h	/^	int unpack_ok;$/;"	m	struct:__anonb9ceeb0b0a08	typeref:typename:int
unpack_pkt	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int unpack_pkt(git_pkt **out, const char *line, size_t len)$/;"	f	typeref:typename:int	file:
unpacked	my_project/libgit2/src/libgit2/pack-objects.c	/^struct unpacked {$/;"	s	file:
unposix_path	my_project/libgit2/tests/libgit2/repo/open.c	/^static void unposix_path(git_str *path)$/;"	f	typeref:typename:void	file:
unset_upstream	my_project/libgit2/src/libgit2/branch.c	/^static int unset_upstream(git_config *config, const char *shortname)$/;"	f	typeref:typename:int	file:
unshallow_pkt	my_project/libgit2/src/libgit2/transports/smart_pkt.c	/^static int unshallow_pkt($/;"	f	typeref:typename:int	file:
untracked	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^	int untracked;$/;"	m	struct:__anon79a1dca80108	typeref:typename:int	file:
unused	my_project/libgit2/src/libgit2/attr_file.h	/^	git_refcount unused;$/;"	m	struct:__anon0df92d8f0508	typeref:typename:git_refcount
update	my_project/libgit2/deps/ntlmclient/crypt_openssl.h	/^    int (*update) (EVP_MD_CTX *ctx, const void *data, size_t count);$/;"	m	struct:env_md_ctx_st	typeref:typename:int (*)(EVP_MD_CTX * ctx,const void * data,size_t count)
update	my_project/libgit2/src/libgit2/submodule.h	/^	git_submodule_update_t update;$/;"	m	struct:git_submodule	typeref:typename:git_submodule_update_t
update_addr	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  sljit_uw *update_addr;$/;"	m	struct:label_addr_list	typeref:typename:sljit_uw *	file:
update_attr_callback	my_project/libgit2/tests/libgit2/checkout/tree.c	/^static void update_attr_callback($/;"	f	typeref:typename:void	file:
update_branch_remote_config_entry	my_project/libgit2/src/libgit2/remote.c	/^static int update_branch_remote_config_entry($/;"	f	typeref:typename:int	file:
update_cb	my_project/libgit2/examples/fetch.c	/^static int update_cb(const char *refname, const git_oid *a, const git_oid *b, void *data)$/;"	f	typeref:typename:int	file:
update_config_entries_cb	my_project/libgit2/src/libgit2/remote.c	/^static int update_config_entries_cb($/;"	f	typeref:typename:int	file:
update_conflicts	my_project/libgit2/src/libgit2/checkout.c	/^	git_vector update_conflicts;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_vector	file:
update_count	my_project/libgit2/tests/util/dirent.c	/^static int update_count(name_data *data, const char *name)$/;"	f	typeref:typename:int	file:
update_data	my_project/libgit2/src/libgit2/remote.c	/^struct update_data {$/;"	s	file:
update_default	my_project/libgit2/src/libgit2/submodule.h	/^	git_submodule_update_t update_default;$/;"	m	struct:git_submodule	typeref:typename:git_submodule_update_t
update_fetchhead	my_project/libgit2/include/git2/remote.h	/^	unsigned int update_fetchhead;$/;"	m	struct:__anon144be4e60808	typeref:typename:unsigned int
update_head_to_branch	my_project/libgit2/src/libgit2/clone.c	/^static int update_head_to_branch($/;"	f	typeref:typename:int	file:
update_head_to_default	my_project/libgit2/src/libgit2/clone.c	/^static int update_head_to_default(git_repository *repo)$/;"	f	typeref:typename:int	file:
update_head_to_new_branch	my_project/libgit2/src/libgit2/clone.c	/^static int update_head_to_new_branch($/;"	f	typeref:typename:int	file:
update_head_to_remote	my_project/libgit2/src/libgit2/clone.c	/^static int update_head_to_remote($/;"	f	typeref:typename:int	file:
update_header_and_rehash	my_project/libgit2/src/libgit2/indexer.c	/^static int update_header_and_rehash(git_indexer *idx, git_indexer_progress *stats)$/;"	f	typeref:typename:int	file:
update_hunk	my_project/libgit2/src/libgit2/apply.c	/^static int update_hunk($/;"	f	typeref:typename:int	file:
update_names	my_project/libgit2/src/libgit2/checkout.c	/^	git_vector *update_names;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_vector *	file:
update_one_tip	my_project/libgit2/src/libgit2/remote.c	/^static int update_one_tip($/;"	f	typeref:typename:int	file:
update_ref	my_project/libgit2/src/libgit2/remote.c	/^static int update_ref($/;"	f	typeref:typename:int	file:
update_reflog	my_project/libgit2/src/libgit2/stash.c	/^static int update_reflog($/;"	f	typeref:typename:int	file:
update_refs_from_report	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int update_refs_from_report($/;"	f	typeref:typename:int	file:
update_remote_head	my_project/libgit2/src/libgit2/clone.c	/^static int update_remote_head($/;"	f	typeref:typename:int	file:
update_reuc	my_project/libgit2/src/libgit2/checkout.c	/^	git_vector *update_reuc;$/;"	m	struct:__anon35c6e5c60208	typeref:typename:git_vector *	file:
update_submodule_cb_payload	my_project/libgit2/tests/libgit2/submodule/update.c	/^struct update_submodule_cb_payload {$/;"	s	file:
update_target	my_project/libgit2/src/libgit2/transaction.c	/^static int update_target(git_refdb *db, transaction_node *node)$/;"	f	typeref:typename:int	file:
update_tips	my_project/libgit2/tests/libgit2/online/clone.c	/^static int update_tips(const char *refname, const git_oid *a, const git_oid *b, void *payload)$/;"	f	typeref:typename:int	file:
update_tips	my_project/libgit2/tests/libgit2/online/fetch.c	/^static int update_tips(const char *refname, const git_oid *a, const git_oid *b, void *data)$/;"	f	typeref:typename:int	file:
update_tips	my_project/libgit2/tests/libgit2/submodule/update.c	/^static int update_tips(const char *refname, const git_oid *a, const git_oid *b, void *data)$/;"	f	typeref:typename:int	file:
update_tips_called	my_project/libgit2/tests/libgit2/submodule/update.c	/^	int update_tips_called;$/;"	m	struct:update_submodule_cb_payload	typeref:typename:int	file:
update_tips_error	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^static int update_tips_error(const char *ref, const git_oid *old, const git_oid *new, void *data/;"	f	typeref:typename:int	file:
update_tips_fail_on_call	my_project/libgit2/tests/libgit2/network/fetchlocal.c	/^static int update_tips_fail_on_call(const char *ref, const git_oid *old, const git_oid *new, voi/;"	f	typeref:typename:int	file:
update_tips_for_spec	my_project/libgit2/src/libgit2/remote.c	/^static int update_tips_for_spec($/;"	f	typeref:typename:int	file:
update_tm	my_project/libgit2/src/util/date.c	/^static git_time_t update_tm(struct tm *tm, struct tm *now, unsigned long sec)$/;"	f	typeref:typename:git_time_t	file:
updated	my_project/libgit2/src/util/hash/win32.h	/^	bool updated;$/;"	m	struct:git_hash_win32_cng_ctx	typeref:typename:bool
updated_tip	my_project/libgit2/tests/libgit2/online/push_util.h	/^} updated_tip;$/;"	t	typeref:struct:__anonec09f7510108
updated_tip_free	my_project/libgit2/tests/libgit2/online/push_util.c	/^void updated_tip_free(updated_tip *t)$/;"	f	typeref:typename:void
updated_tips	my_project/libgit2/tests/libgit2/online/push_util.h	/^	git_vector updated_tips;$/;"	m	struct:__anonec09f7510208	typeref:typename:git_vector
updates	my_project/libgit2/src/libgit2/push.h	/^	git_vector updates;$/;"	m	struct:git_push	typeref:typename:git_vector
updates	my_project/libgit2/tests/libgit2/checkout/typechange.c	/^	int updates;$/;"	m	struct:__anon79a1dca80108	typeref:typename:int	file:
updatewindow	my_project/libgit2/deps/zlib/inflate.c	/^local int updatewindow(z_streamp strm, const Bytef *end, unsigned copy) {$/;"	f	typeref:typename:local int
upgrade	my_project/libgit2/deps/llhttp/llhttp.h	/^  uint8_t upgrade;$/;"	m	struct:llhttp__internal_s	typeref:typename:uint8_t
upload_pack_ls_service	my_project/libgit2/src/libgit2/transports/http.c	/^static const http_service upload_pack_ls_service = {$/;"	v	typeref:typename:const http_service	file:
upload_pack_ls_service_url	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static const char *upload_pack_ls_service_url = "\/info\/refs?service=git-upload-pack";$/;"	v	typeref:typename:const char *	file:
upload_pack_service	my_project/libgit2/src/libgit2/transports/http.c	/^static const http_service upload_pack_service = {$/;"	v	typeref:typename:const http_service	file:
upload_pack_service	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static const char *upload_pack_service = "upload-pack";$/;"	v	typeref:typename:const char *	file:
upload_pack_service_url	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static const char *upload_pack_service_url = "\/git-upload-pack";$/;"	v	typeref:typename:const char *	file:
upstream	my_project/libgit2/tests/libgit2/refs/branches/upstream.c	/^static git_reference *branch, *upstream;$/;"	v	typeref:typename:git_reference *	file:
upstream_name	my_project/libgit2/tests/libgit2/refs/branches/upstreamname.c	/^static git_buf upstream_name;$/;"	v	typeref:typename:git_buf	file:
url	my_project/libgit2/include/git2/proxy.h	/^	const char *url;$/;"	m	struct:__anon188a123c0208	typeref:typename:const char *
url	my_project/libgit2/src/libgit2/remote.h	/^	char *url;$/;"	m	struct:git_remote	typeref:typename:char *
url	my_project/libgit2/src/libgit2/submodule.h	/^	char *url;$/;"	m	struct:git_submodule	typeref:typename:char *
url	my_project/libgit2/src/libgit2/transports/git.c	/^	char *url;$/;"	m	struct:__anoneb1923e30108	typeref:typename:char *	file:
url	my_project/libgit2/src/libgit2/transports/http.c	/^	const char *url;$/;"	m	struct:__anon515ae8bf0208	typeref:typename:const char *	file:
url	my_project/libgit2/src/libgit2/transports/http.c	/^	git_net_url url;$/;"	m	struct:__anon515ae8bf0408	typeref:typename:git_net_url	file:
url	my_project/libgit2/src/libgit2/transports/httpclient.c	/^	git_net_url url;$/;"	m	struct:__anon3d590bbe0108	typeref:typename:git_net_url	file:
url	my_project/libgit2/src/libgit2/transports/httpclient.h	/^	git_net_url *url;                  \/**< Full request URL *\/$/;"	m	struct:__anon3d590bc30208	typeref:typename:git_net_url *
url	my_project/libgit2/src/libgit2/transports/local.c	/^	char *url;$/;"	m	struct:__anona3bc4f8a0108	typeref:typename:char *	file:
url	my_project/libgit2/src/libgit2/transports/smart.h	/^	char *url;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:char *
url	my_project/libgit2/src/libgit2/transports/ssh_libssh2.c	/^	git_net_url url;$/;"	m	struct:__anonf54f66e30108	typeref:typename:git_net_url	file:
url	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	git_net_url url;$/;"	m	struct:__anon5ba854ad0308	typeref:typename:git_net_url	file:
url	my_project/libgit2/tests/libgit2/remote/httpproxy.c	/^static git_net_url url = GIT_NET_URL_INIT;$/;"	v	typeref:typename:git_net_url	file:
url	my_project/libgit2/tests/util/url/pattern.c	/^	const char *url;$/;"	m	struct:url_pattern	typeref:typename:const char *	file:
url_config_trim	my_project/libgit2/src/libgit2/remote.c	/^static void url_config_trim(git_net_url *url)$/;"	f	typeref:typename:void	file:
url_cred_presented	my_project/libgit2/src/libgit2/transports/http.c	/^	unsigned url_cred_presented : 1;$/;"	m	struct:__anon515ae8bf0408	typeref:typename:unsigned:1	file:
url_cred_presented	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	bool url_cred_presented;$/;"	m	struct:__anon5ba854ad0308	typeref:typename:bool	file:
url_invalid	my_project/libgit2/src/util/net.c	/^static int url_invalid(const char *message)$/;"	f	typeref:typename:int	file:
url_parse_authority	my_project/libgit2/src/util/net.c	/^static int url_parse_authority($/;"	f	typeref:typename:int	file:
url_parse_finalize	my_project/libgit2/src/util/net.c	/^static int url_parse_finalize(git_net_url *url, git_net_url_parser *parser)$/;"	f	typeref:typename:int	file:
url_parse_path	my_project/libgit2/src/util/net.c	/^static int url_parse_path($/;"	f	typeref:typename:int	file:
url_pattern	my_project/libgit2/tests/util/url/pattern.c	/^struct url_pattern {$/;"	s	file:
urlresolve_callback	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^static int urlresolve_callback(git_buf *url_resolved, const char *url, int direction, void *payl/;"	f	typeref:typename:int	file:
urlresolve_passthrough_callback	my_project/libgit2/tests/libgit2/network/remote/remotes.c	/^static int urlresolve_passthrough_callback(git_buf *url_resolved, const char *url, int direction/;"	f	typeref:typename:int	file:
usage	my_project/libgit2/examples/blame.c	/^static void usage(const char *msg, const char *arg)$/;"	f	typeref:typename:void	file:
usage	my_project/libgit2/examples/cat-file.c	/^static void usage(const char *message, const char *arg)$/;"	f	typeref:typename:void	file:
usage	my_project/libgit2/examples/diff.c	/^static void usage(const char *message, const char *arg)$/;"	f	typeref:typename:void	file:
usage	my_project/libgit2/examples/init.c	/^static void usage(const char *error, const char *arg)$/;"	f	typeref:typename:void	file:
usage	my_project/libgit2/examples/lg2.c	/^static int usage(const char *prog)$/;"	f	typeref:typename:int	file:
usage	my_project/libgit2/examples/log.c	/^static void usage(const char *message, const char *arg)$/;"	f	typeref:typename:void	file:
usage	my_project/libgit2/examples/ls-files.c	/^static void usage(const char *message, const char *arg)$/;"	f	typeref:typename:void	file:
usage	my_project/libgit2/examples/remote.c	/^static void usage(const char *msg, const char *arg)$/;"	f	typeref:typename:void	file:
usage	my_project/libgit2/examples/rev-parse.c	/^static void usage(const char *message, const char *arg)$/;"	f	typeref:typename:void	file:
usage	my_project/libgit2/examples/stash.c	/^static void usage(const char *fmt, ...)$/;"	f	typeref:typename:void	file:
usage	my_project/libgit2/src/cli/opt.h	/^	uint32_t usage;$/;"	m	struct:cli_opt_spec	typeref:typename:uint32_t
usage	my_project/libgit2/tests/benchmarks/benchmark.sh	/^usage() { echo "usage: $(basename "$0") [--cli <path>] [--name <cli-name>] [--baseline-cli <path/;"	f
usage	my_project/libgit2/tests/benchmarks/benchmark_helpers.sh	/^usage() { echo "usage: $(basename "$0") [--cli <path>] [--baseline-cli <path>] [--output-style </;"	f
use_connect_proxy	my_project/libgit2/src/libgit2/transports/httpclient.c	/^static bool use_connect_proxy(git_http_client *client)$/;"	f	typeref:typename:bool	file:
use_ctr	my_project/libgit2/src/libgit2/pack.h	/^	size_t use_ctr;$/;"	m	struct:__anon57fe39b40108	typeref:typename:size_t
use_env	my_project/libgit2/src/libgit2/repository.h	/^	unsigned use_env:1,$/;"	m	struct:git_repository	typeref:typename:unsigned:1
use_ignores	my_project/libgit2/src/libgit2/hashsig.c	/^	int use_ignores;$/;"	m	struct:__anon8885faf70208	typeref:typename:int	file:
use_remote	my_project/libgit2/examples/ls-remote.c	/^static int use_remote(git_repository *repo, char *name)$/;"	f	typeref:typename:int	file:
use_ucp	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   use_ucp;                 \/* PCRE_UCP flag *\/$/;"	m	struct:match_data	typeref:typename:BOOL
use_ucp	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL use_ucp;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
used_ctr	my_project/libgit2/src/libgit2/mwindow.h	/^	size_t used_ctr;$/;"	m	struct:git_mwindow_ctl	typeref:typename:size_t
used_memory	my_project/libgit2/src/libgit2/cache.h	/^	ssize_t     used_memory;$/;"	m	struct:__anon6f0f98290308	typeref:typename:ssize_t
user	my_project/libgit2/src/util/net.c	/^	const char *user;$/;"	m	struct:__anon850d8ea80108	typeref:typename:const char *	file:
user_agent	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int user_agent(bool *exists, git_str *out)$/;"	f	typeref:typename:int	file:
user_extensions	my_project/libgit2/src/libgit2/repository.c	/^static git_vector user_extensions = { 0, git__strcmp_cb };$/;"	v	typeref:typename:git_vector	file:
user_from_env	my_project/libgit2/src/libgit2/signature.c	/^static int user_from_env($/;"	f	typeref:typename:int	file:
user_input	my_project/libgit2/src/libgit2/revwalk.h	/^	git_commit_list *user_input;$/;"	m	struct:git_revwalk	typeref:typename:git_commit_list *
user_len	my_project/libgit2/src/util/net.c	/^	size_t user_len;$/;"	m	struct:__anon850d8ea80108	typeref:typename:size_t	file:
userdata	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  void *userdata;$/;"	m	struct:executable_functions	typeref:typename:void *	file:
userdomain	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *userdomain;$/;"	m	struct:ntlm_client	typeref:typename:char *
userdomain_utf16	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *userdomain_utf16;$/;"	m	struct:ntlm_client	typeref:typename:char *
userdomain_utf16_len	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	size_t userdomain_utf16_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
username	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *username;$/;"	m	struct:ntlm_client	typeref:typename:char *
username	my_project/libgit2/include/git2/credential_helpers.h	/^	const char *username;$/;"	m	struct:git_credential_userpass_payload	typeref:typename:const char *
username	my_project/libgit2/include/git2/sys/credential.h	/^	char *username;        \/**< The username to authenticate as *\/$/;"	m	struct:git_credential_ssh_custom	typeref:typename:char *
username	my_project/libgit2/include/git2/sys/credential.h	/^	char *username;        \/**< The username to authenticate as *\/$/;"	m	struct:git_credential_ssh_interactive	typeref:typename:char *
username	my_project/libgit2/include/git2/sys/credential.h	/^	char *username;        \/**< The username to authenticate as *\/$/;"	m	struct:git_credential_ssh_key	typeref:typename:char *
username	my_project/libgit2/include/git2/sys/credential.h	/^	char *username;        \/**< The username to authenticate as *\/$/;"	m	struct:git_credential_userpass_plaintext	typeref:typename:char *
username	my_project/libgit2/include/git2/sys/credential.h	/^	char username[1];      \/**< The username to authenticate as *\/$/;"	m	struct:git_credential_username	typeref:typename:char[1]
username	my_project/libgit2/src/util/net.h	/^	char *username;$/;"	m	struct:git_net_url	typeref:typename:char *
username_free	my_project/libgit2/src/libgit2/transports/credential.c	/^static void username_free(struct git_credential *cred)$/;"	f	typeref:typename:void	file:
username_upper	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *username_upper;$/;"	m	struct:ntlm_client	typeref:typename:char *
username_upper_utf16	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *username_upper_utf16;$/;"	m	struct:ntlm_client	typeref:typename:char *
username_upper_utf16_len	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	size_t username_upper_utf16_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
username_utf16	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	char *username_utf16;$/;"	m	struct:ntlm_client	typeref:typename:char *
username_utf16_len	my_project/libgit2/deps/ntlmclient/ntlm.h	/^	size_t username_utf16_len;$/;"	m	struct:ntlm_client	typeref:typename:size_t
ush	my_project/libgit2/deps/zlib/zutil.h	/^typedef unsigned short ush;$/;"	t	typeref:typename:unsigned short
ushf	my_project/libgit2/deps/zlib/zutil.h	/^typedef ush FAR ushf;$/;"	t	typeref:typename:ush FAR
utf	my_project/libgit2/deps/pcre/pcre_internal.h	/^  BOOL   utf;                     \/* UTF-8 \/ UTF-16 flag *\/$/;"	m	struct:match_data	typeref:typename:BOOL
utf	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  BOOL utf;$/;"	m	struct:compiler_common	typeref:typename:BOOL	file:
utf16_to_8	my_project/libgit2/deps/ntlmclient/unicode_iconv.h	/^	iconv_t utf16_to_8;$/;"	m	struct:ntlm_unicode_ctx	typeref:typename:iconv_t
utf8_charlen	my_project/libgit2/src/util/utf8.c	/^static int utf8_charlen(const uint8_t *str, size_t str_len)$/;"	f	typeref:typename:int	file:
utf8_int32_t	my_project/libgit2/deps/ntlmclient/utf8.h	/^typedef __int32 utf8_int32_t;$/;"	t	typeref:typename:__int32
utf8_int32_t	my_project/libgit2/deps/ntlmclient/utf8.h	/^typedef int32_t utf8_int32_t;$/;"	t	typeref:typename:int32_t
utf8_nonnull	my_project/libgit2/deps/ntlmclient/utf8.h	/^#define utf8_nonnull /;"	d
utf8_null	my_project/libgit2/deps/ntlmclient/utf8.h	/^#define utf8_null /;"	d
utf8_pure	my_project/libgit2/deps/ntlmclient/utf8.h	/^#define utf8_pure /;"	d
utf8_restrict	my_project/libgit2/deps/ntlmclient/utf8.h	/^#define utf8_restrict /;"	d
utf8_table1	my_project/libgit2/deps/pcre/pcre_tables.c	/^const int PRIV(utf8_table1)[] =$/;"	v	typeref:typename:const int PRIV ()[]
utf8_table2	my_project/libgit2/deps/pcre/pcre_tables.c	/^const int PRIV(utf8_table2)[] = { 0,    0xc0, 0xe0, 0xf0, 0xf8, 0xfc};$/;"	v	typeref:typename:const int PRIV ()[]
utf8_table3	my_project/libgit2/deps/pcre/pcre_tables.c	/^const int PRIV(utf8_table3)[] = { 0xff, 0x1f, 0x0f, 0x07, 0x03, 0x01};$/;"	v	typeref:typename:const int PRIV ()[]
utf8_table4	my_project/libgit2/deps/pcre/pcre_tables.c	/^const pcre_uint8 PRIV(utf8_table4)[] = {$/;"	v	typeref:typename:const pcre_uint8 PRIV ()[]
utf8_to_16	my_project/libgit2/deps/ntlmclient/unicode_iconv.h	/^	iconv_t utf8_to_16;$/;"	m	struct:ntlm_unicode_ctx	typeref:typename:iconv_t
utf8_weak	my_project/libgit2/deps/ntlmclient/utf8.h	/^#define utf8_weak /;"	d
utf8casecmp	my_project/libgit2/deps/ntlmclient/utf8.h	/^int utf8casecmp(const void *src1, const void *src2) {$/;"	f	typeref:typename:int
utf8casestr	my_project/libgit2/deps/ntlmclient/utf8.h	/^void *utf8casestr(const void *haystack, const void *needle) {$/;"	f	typeref:typename:void *
utf8cat	my_project/libgit2/deps/ntlmclient/utf8.h	/^void *utf8cat(void *utf8_restrict dst, const void *utf8_restrict src) {$/;"	f	typeref:typename:void *
utf8catcodepoint	my_project/libgit2/deps/ntlmclient/utf8.h	/^void *utf8catcodepoint(void *utf8_restrict str, utf8_int32_t chr, size_t n) {$/;"	f	typeref:typename:void *
utf8chr	my_project/libgit2/deps/ntlmclient/utf8.h	/^void *utf8chr(const void *src, utf8_int32_t chr) {$/;"	f	typeref:typename:void *
utf8cmp	my_project/libgit2/deps/ntlmclient/utf8.h	/^int utf8cmp(const void *src1, const void *src2) {$/;"	f	typeref:typename:int
utf8codepoint	my_project/libgit2/deps/ntlmclient/utf8.h	/^void *utf8codepoint(const void *utf8_restrict str,$/;"	f	typeref:typename:void *
utf8codepointsize	my_project/libgit2/deps/ntlmclient/utf8.h	/^size_t utf8codepointsize(utf8_int32_t chr) {$/;"	f	typeref:typename:size_t
utf8cpy	my_project/libgit2/deps/ntlmclient/utf8.h	/^void *utf8cpy(void *utf8_restrict dst, const void *utf8_restrict src) {$/;"	f	typeref:typename:void *
utf8cspn	my_project/libgit2/deps/ntlmclient/utf8.h	/^size_t utf8cspn(const void *src, const void *reject) {$/;"	f	typeref:typename:size_t
utf8dup	my_project/libgit2/deps/ntlmclient/utf8.h	/^void *utf8dup(const void *src) {$/;"	f	typeref:typename:void *
utf8islower	my_project/libgit2/deps/ntlmclient/utf8.h	/^int utf8islower(utf8_int32_t chr) { return chr != utf8uprcodepoint(chr); }$/;"	f	typeref:typename:int
utf8isupper	my_project/libgit2/deps/ntlmclient/utf8.h	/^int utf8isupper(utf8_int32_t chr) { return chr != utf8lwrcodepoint(chr); }$/;"	f	typeref:typename:int
utf8len	my_project/libgit2/deps/ntlmclient/utf8.h	/^size_t utf8len(const void *str) {$/;"	f	typeref:typename:size_t
utf8lwr	my_project/libgit2/deps/ntlmclient/utf8.h	/^void utf8lwr(void *utf8_restrict str) {$/;"	f	typeref:typename:void
utf8lwrcodepoint	my_project/libgit2/deps/ntlmclient/utf8.h	/^utf8_int32_t utf8lwrcodepoint(utf8_int32_t cp) {$/;"	f	typeref:typename:utf8_int32_t
utf8ncasecmp	my_project/libgit2/deps/ntlmclient/utf8.h	/^int utf8ncasecmp(const void *src1, const void *src2, size_t n) {$/;"	f	typeref:typename:int
utf8ncat	my_project/libgit2/deps/ntlmclient/utf8.h	/^void *utf8ncat(void *utf8_restrict dst, const void *utf8_restrict src,$/;"	f	typeref:typename:void *
utf8ncmp	my_project/libgit2/deps/ntlmclient/utf8.h	/^int utf8ncmp(const void *src1, const void *src2, size_t n) {$/;"	f	typeref:typename:int
utf8ncpy	my_project/libgit2/deps/ntlmclient/utf8.h	/^void *utf8ncpy(void *utf8_restrict dst, const void *utf8_restrict src,$/;"	f	typeref:typename:void *
utf8ndup	my_project/libgit2/deps/ntlmclient/utf8.h	/^void *utf8ndup(const void *src, size_t n) {$/;"	f	typeref:typename:void *
utf8pbrk	my_project/libgit2/deps/ntlmclient/utf8.h	/^void *utf8pbrk(const void *str, const void *accept) {$/;"	f	typeref:typename:void *
utf8proc_utf8class	my_project/libgit2/src/util/utf8.c	/^static const uint8_t utf8proc_utf8class[256] = {$/;"	v	typeref:typename:const uint8_t[256]	file:
utf8rchr	my_project/libgit2/deps/ntlmclient/utf8.h	/^void *utf8rchr(const void *src, int chr) {$/;"	f	typeref:typename:void *
utf8size	my_project/libgit2/deps/ntlmclient/utf8.h	/^size_t utf8size(const void *str) {$/;"	f	typeref:typename:size_t
utf8spn	my_project/libgit2/deps/ntlmclient/utf8.h	/^size_t utf8spn(const void *src, const void *accept) {$/;"	f	typeref:typename:size_t
utf8str	my_project/libgit2/deps/ntlmclient/utf8.h	/^void *utf8str(const void *haystack, const void *needle) {$/;"	f	typeref:typename:void *
utf8upr	my_project/libgit2/deps/ntlmclient/utf8.h	/^void utf8upr(void *utf8_restrict str) {$/;"	f	typeref:typename:void
utf8uprcodepoint	my_project/libgit2/deps/ntlmclient/utf8.h	/^utf8_int32_t utf8uprcodepoint(utf8_int32_t cp) {$/;"	f	typeref:typename:utf8_int32_t
utf8valid	my_project/libgit2/deps/ntlmclient/utf8.h	/^void *utf8valid(const void *str) {$/;"	f	typeref:typename:void *
utfreadchar	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *utfreadchar;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
utfreadchar16	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *utfreadchar16;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
utfreadtype8	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *utfreadtype8;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
util	my_project/libgit2/src/util/CMakeLists.txt	/^add_library(util OBJECT)$/;"	t
util_tests	my_project/libgit2/tests/util/CMakeLists.txt	/^add_executable(util_tests ${SRC_CLAR} ${SRC_TEST} ${LIBGIT2_OBJECTS})$/;"	t
utt	my_project/libgit2/deps/pcre/pcre_tables.c	/^const ucp_type_table PRIV(utt)[] = {$/;"	v	typeref:typename:const ucp_type_table PRIV ()[]
v0.22	my_project/libgit2/docs/changelog.md	/^v0.22$/;"	s	chapter:Security Fixes
v0.23	my_project/libgit2/docs/changelog.md	/^v0.23$/;"	s	chapter:Security Fixes
v0.24	my_project/libgit2/docs/changelog.md	/^v0.24$/;"	s	chapter:Security Fixes
v0.25	my_project/libgit2/docs/changelog.md	/^v0.25$/;"	s	chapter:Security Fixes
v0.26	my_project/libgit2/docs/changelog.md	/^v0.26$/;"	s	chapter:Security Fixes
v0.27	my_project/libgit2/docs/changelog.md	/^v0.27$/;"	s	chapter:Security Fixes
v0.28	my_project/libgit2/docs/changelog.md	/^v0.28$/;"	s	chapter:Security Fixes
v0.99	my_project/libgit2/docs/changelog.md	/^v0.99$/;"	s
v1.0	my_project/libgit2/docs/changelog.md	/^v1.0$/;"	s
v1.0.1	my_project/libgit2/docs/changelog.md	/^v1.0.1$/;"	s
v1.1	my_project/libgit2/docs/changelog.md	/^v1.1$/;"	s
v1.2	my_project/libgit2/docs/changelog.md	/^v1.2$/;"	s
v1.3	my_project/libgit2/docs/changelog.md	/^v1.3$/;"	s
v1.4	my_project/libgit2/docs/changelog.md	/^v1.4$/;"	s
v1.5	my_project/libgit2/docs/changelog.md	/^v1.5$/;"	s
v1.6	my_project/libgit2/docs/changelog.md	/^v1.6$/;"	s
v1.6.2	my_project/libgit2/docs/changelog.md	/^v1.6.2$/;"	s
v1.6.3	my_project/libgit2/docs/changelog.md	/^v1.6.3$/;"	s
v1.7	my_project/libgit2/docs/changelog.md	/^v1.7$/;"	s
v1.8	my_project/libgit2/docs/changelog.md	/^v1.8$/;"	s
v1.8.1	my_project/libgit2/docs/changelog.md	/^v1.8.1$/;"	s
v1.8.2	my_project/libgit2/docs/changelog.md	/^v1.8.2$/;"	s
va_copy	my_project/libgit2/src/util/cc-compat.h	/^#		define va_copy(/;"	d
va_list	my_project/libgit2/script/user_model.c	/^typedef struct va_list_str *va_list;$/;"	t	typeref:struct:va_list_str *	file:
val	my_project/libgit2/deps/zlib/inftrees.h	/^    unsigned short val;         \/* offset in table or code value *\/$/;"	m	struct:__anon3554db3d0108	typeref:typename:unsigned short
val	my_project/libgit2/src/libgit2/delta.c	/^	unsigned int val;$/;"	m	struct:index_entry	typeref:typename:unsigned int	file:
val	my_project/libgit2/src/util/thread.h	/^	volatile __int64 val;$/;"	m	struct:__anon43da2a9e0208	typeref:typename:volatile __int64
val	my_project/libgit2/src/util/thread.h	/^	volatile long val;$/;"	m	struct:__anon43da2a9e0108	typeref:typename:volatile long
valid	my_project/libgit2/src/util/hash/win32.h	/^	bool valid;$/;"	m	struct:git_hash_win32_cryptoapi_ctx	typeref:typename:bool
valid_blob_id	my_project/libgit2/tests/libgit2/index/add.c	/^static const char *valid_blob_id = "fa49b077972391ad58037050f2a75f74e3671e92";$/;"	v	typeref:typename:const char *	file:
valid_blob_id	my_project/libgit2/tests/libgit2/submodule/add.c	/^static const char *valid_blob_id = "fa49b077972391ad58037050f2a75f74e3671e92";$/;"	v	typeref:typename:const char *	file:
valid_commit_id	my_project/libgit2/tests/libgit2/index/add.c	/^static const char *valid_commit_id = "763d71aadf09a7951596c9746c024e7eece7c7af";$/;"	v	typeref:typename:const char *	file:
valid_entry_name	my_project/libgit2/src/libgit2/tree.c	/^static int valid_entry_name(git_repository *repo, const char *filename)$/;"	f	typeref:typename:int	file:
valid_filemode	my_project/libgit2/src/libgit2/index.c	/^GIT_INLINE(bool) valid_filemode(const int filemode)$/;"	f	typeref:typename:bool
valid_filemode	my_project/libgit2/src/libgit2/tree.c	/^static bool valid_filemode(const int filemode)$/;"	f	typeref:typename:bool	file:
valid_tree_id	my_project/libgit2/tests/libgit2/index/add.c	/^static const char *valid_tree_id = "181037049a54a1eb5fab404658a3a250b44335d7";$/;"	v	typeref:typename:const char *	file:
validate_and_apply_patchfile	my_project/libgit2/tests/libgit2/apply/fromfile.c	/^static int validate_and_apply_patchfile($/;"	f	typeref:typename:int	file:
validate_apply_index	my_project/libgit2/tests/libgit2/apply/apply_helpers.c	/^void validate_apply_index($/;"	f	typeref:typename:void
validate_apply_workdir	my_project/libgit2/tests/libgit2/apply/apply_helpers.c	/^void validate_apply_workdir($/;"	f	typeref:typename:void
validate_char	my_project/libgit2/src/util/fs_path.c	/^GIT_INLINE(bool) validate_char(unsigned char c, unsigned int flags)$/;"	f	typeref:typename:bool
validate_component	my_project/libgit2/src/util/fs_path.c	/^static bool validate_component($/;"	f	typeref:typename:bool	file:
validate_custom_headers	my_project/libgit2/src/libgit2/remote.c	/^static int validate_custom_headers(const git_strarray *custom_headers)$/;"	f	typeref:typename:int	file:
validate_dospath	my_project/libgit2/src/util/fs_path.c	/^GIT_INLINE(bool) validate_dospath($/;"	f	typeref:typename:bool
validate_dotgit_hfs	my_project/libgit2/src/libgit2/path.c	/^static bool validate_dotgit_hfs(const char *path, size_t len)$/;"	f	typeref:typename:bool	file:
validate_dotgit_hfs_generic	my_project/libgit2/src/libgit2/path.c	/^static bool validate_dotgit_hfs_generic($/;"	f	typeref:typename:bool	file:
validate_dotgit_ntfs	my_project/libgit2/src/libgit2/path.c	/^GIT_INLINE(bool) validate_dotgit_ntfs($/;"	f	typeref:typename:bool
validate_dotgit_ntfs_generic	my_project/libgit2/src/libgit2/path.c	/^GIT_INLINE(bool) validate_dotgit_ntfs_generic($/;"	f	typeref:typename:bool
validate_index_unchanged	my_project/libgit2/tests/libgit2/apply/apply_helpers.c	/^void validate_index_unchanged(git_repository *repo)$/;"	f	typeref:typename:void
validate_length	my_project/libgit2/src/util/fs_path.c	/^GIT_INLINE(bool) validate_length($/;"	f	typeref:typename:bool
validate_local_path	my_project/libgit2/src/cli/cmd_clone.c	/^static bool validate_local_path(const char *path)$/;"	f	typeref:typename:bool	file:
validate_ownership	my_project/libgit2/src/libgit2/repository.c	/^static int validate_ownership(git_repository *repo)$/;"	f	typeref:typename:int	file:
validate_ownership	my_project/libgit2/tests/libgit2/repo/open.c	/^static int validate_ownership = 0;$/;"	v	typeref:typename:int	file:
validate_ownership_cb	my_project/libgit2/src/libgit2/repository.c	/^static int validate_ownership_cb(const git_config_entry *entry, void *payload)$/;"	f	typeref:typename:int	file:
validate_ownership_config	my_project/libgit2/src/libgit2/repository.c	/^static int validate_ownership_config($/;"	f	typeref:typename:int	file:
validate_ownership_data	my_project/libgit2/src/libgit2/repository.c	/^} validate_ownership_data;$/;"	t	typeref:struct:__anon453495b00208	file:
validate_ownership_path	my_project/libgit2/src/libgit2/repository.c	/^static int validate_ownership_path(bool *is_safe, const char *path)$/;"	f	typeref:typename:int	file:
validate_repo_component	my_project/libgit2/src/libgit2/path.c	/^static bool validate_repo_component($/;"	f	typeref:typename:bool	file:
validate_repo_path	my_project/libgit2/src/libgit2/repository.c	/^GIT_INLINE(int) validate_repo_path(git_str *path)$/;"	f	typeref:typename:int
validate_required	my_project/libgit2/src/cli/opt.c	/^static cli_opt_status_t validate_required($/;"	f	typeref:typename:cli_opt_status_t	file:
validate_target_directory	my_project/libgit2/src/libgit2/checkout.c	/^static int validate_target_directory(checkout_data *data)$/;"	f	typeref:typename:int	file:
validate_templates	my_project/libgit2/tests/libgit2/repo/template.c	/^static void validate_templates(git_repository *repo, const char *template_path)$/;"	f	typeref:typename:void	file:
validate_tree_and_parents	my_project/libgit2/src/libgit2/commit.c	/^static int validate_tree_and_parents(git_array_oid_t *parents, git_repository *repo, const git_o/;"	f	typeref:typename:int	file:
validate_workdir_unchanged	my_project/libgit2/tests/libgit2/apply/apply_helpers.c	/^void validate_workdir_unchanged(git_repository *repo)$/;"	f	typeref:typename:void
value	my_project/libgit2/deps/pcre/pcre_internal.h	/^  pcre_uint16 value;$/;"	m	struct:__anon9562267c0508	typeref:typename:pcre_uint16
value	my_project/libgit2/include/git2/config.h	/^	const char *value;$/;"	m	struct:git_config_entry	typeref:typename:const char *
value	my_project/libgit2/include/git2/message.h	/^  const char *value;$/;"	m	struct:__anon2d3685bf0108	typeref:typename:const char *
value	my_project/libgit2/src/cli/cmd_config.c	/^static char *name, *value, *value_pattern;$/;"	v	typeref:typename:char *	file:
value	my_project/libgit2/src/cli/opt.h	/^	char *value;$/;"	m	struct:cli_opt	typeref:typename:char *
value	my_project/libgit2/src/cli/opt.h	/^	void *value;$/;"	m	struct:cli_opt_spec	typeref:typename:void *
value	my_project/libgit2/src/libgit2/attr_file.h	/^	const char *value;$/;"	m	struct:__anon0df92d8f0608	typeref:typename:const char *
value	my_project/libgit2/src/libgit2/config_file.c	/^	const char *value;$/;"	m	struct:write_data	typeref:typename:const char *	file:
value	my_project/libgit2/src/util/thread.c	/^	void *value;$/;"	m	struct:__anon43da2a990108	typeref:typename:void *	file:
value	my_project/libgit2/tests/libgit2/config/memory.c	/^	const char *value;$/;"	m	struct:expected_entry	typeref:typename:const char *	file:
value	my_project/libgit2/tests/util/sortedcache.c	/^	int value;$/;"	m	struct:__anonbd76c9710108	typeref:typename:int	file:
value	my_project/libgit2/tests/util/strmap.c	/^		char *value;$/;"	m	struct:test_strmap__iteration::__anon7435b5230108	typeref:typename:char *	file:
value_name	my_project/libgit2/src/cli/opt.h	/^	const char *value_name;$/;"	m	struct:cli_opt_spec	typeref:typename:const char *
value_pattern	my_project/libgit2/src/cli/cmd_config.c	/^static char *name, *value, *value_pattern;$/;"	v	typeref:typename:char *	file:
values	my_project/libgit2/src/libgit2/config_mem.c	/^	char **values;$/;"	m	struct:__anon766d71c40108	typeref:typename:char **	file:
values	my_project/libgit2/src/libgit2/hashsig.c	/^	hashsig_t values[HASHSIG_HEAP_SIZE];$/;"	m	struct:__anon8885faf70108	typeref:typename:hashsig_t[]	file:
values_len	my_project/libgit2/src/libgit2/config_mem.c	/^	size_t values_len;$/;"	m	struct:__anon766d71c40108	typeref:typename:size_t	file:
values_mutex	my_project/libgit2/src/libgit2/config_file.c	/^	git_mutex values_mutex;$/;"	m	struct:__anon341047050108	typeref:typename:git_mutex	file:
values_mutex	my_project/libgit2/src/libgit2/config_snapshot.c	/^	git_mutex values_mutex;$/;"	m	struct:__anon05a78b950108	typeref:typename:git_mutex	file:
verb	my_project/libgit2/src/libgit2/transports/winhttp.c	/^	const wchar_t *verb;$/;"	m	struct:__anon5ba854ad0208	typeref:typename:const wchar_t *	file:
verbcount	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const int verbcount = sizeof(verbs)\/sizeof(verbitem);$/;"	v	typeref:typename:const int	file:
verbitem	my_project/libgit2/deps/pcre/pcre_compile.c	/^typedef struct verbitem {$/;"	s	file:
verbitem	my_project/libgit2/deps/pcre/pcre_compile.c	/^} verbitem;$/;"	t	typeref:struct:verbitem	file:
verbnames	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const char verbnames[] =$/;"	v	typeref:typename:const char[]	file:
verbose	my_project/libgit2/deps/zlib/zutil.c	/^#    define verbose /;"	d	file:
verbose	my_project/libgit2/examples/add.c	/^	int verbose;$/;"	m	struct:index_options	typeref:typename:int	file:
verbose	my_project/libgit2/examples/cat-file.c	/^	int verbose;$/;"	m	struct:catfile_options	typeref:typename:int	file:
verbose	my_project/libgit2/src/cli/cmd_index_pack.c	/^static int show_help, verbose, read_stdin;$/;"	v	typeref:typename:int	file:
verbosity	my_project/libgit2/tests/clar/clar.c	/^	int verbosity;$/;"	m	struct:__anon15d96e120108	typeref:typename:int	file:
verbs	my_project/libgit2/deps/pcre/pcre_compile.c	/^static const verbitem verbs[] = {$/;"	v	typeref:typename:const verbitem[]	file:
verify	my_project/libgit2/include/git2/indexer.h	/^	unsigned char verify;$/;"	m	struct:git_indexer_options	typeref:typename:unsigned char
verify_last_error	my_project/libgit2/src/util/filebuf.c	/^static int verify_last_error(git_filebuf *file)$/;"	f	typeref:typename:int	file:
verify_patch_id	my_project/libgit2/tests/libgit2/diff/patchid.c	/^static void verify_patch_id(const char *diff_content, const char *expected_id)$/;"	f	typeref:typename:void	file:
verify_refs	my_project/libgit2/tests/libgit2/online/push.c	/^static void verify_refs(git_remote *remote, expected_ref expected_refs[], size_t expected_refs_l/;"	f	typeref:typename:void	file:
verify_remote_refs	my_project/libgit2/tests/libgit2/online/push_util.c	/^void verify_remote_refs(const git_remote_head *actual_refs[], size_t actual_refs_len, const expe/;"	f	typeref:typename:void
verify_server_cert	my_project/libgit2/src/libgit2/streams/mbedtls.c	/^static int verify_server_cert(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int	file:
verify_server_cert	my_project/libgit2/src/libgit2/streams/openssl.c	/^static int verify_server_cert(SSL *ssl, const char *host)$/;"	f	typeref:typename:int	file:
verify_tracking_branches	my_project/libgit2/tests/libgit2/online/push.c	/^static void verify_tracking_branches(git_remote *remote, expected_ref expected_refs[], size_t ex/;"	f	typeref:typename:void	file:
verify_update_tips_callback	my_project/libgit2/tests/libgit2/online/push.c	/^static void verify_update_tips_callback(git_remote *remote, expected_ref expected_refs[], size_t/;"	f	typeref:typename:void	file:
verify_version	my_project/libgit2/script/release.py	/^def verify_version(version):$/;"	f
version	my_project/libgit2/deps/pcre/pcre.h	/^  int          version;           \/* Identifies version of block *\/$/;"	m	struct:pcre16_callout_block	typeref:typename:int
version	my_project/libgit2/deps/pcre/pcre.h	/^  int          version;           \/* Identifies version of block *\/$/;"	m	struct:pcre32_callout_block	typeref:typename:int
version	my_project/libgit2/deps/pcre/pcre.h	/^  int          version;           \/* Identifies version of block *\/$/;"	m	struct:pcre_callout_block	typeref:typename:int
version	my_project/libgit2/include/git2/apply.h	/^	unsigned int version; \/**< The version *\/$/;"	m	struct:__anon9141b5a00208	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/attr.h	/^	unsigned int version;$/;"	m	struct:__anon790e91d50208	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/blame.h	/^	unsigned int version;$/;"	m	struct:git_blame_options	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/blob.h	/^	int version;$/;"	m	struct:__anon7acff4790208	typeref:typename:int
version	my_project/libgit2/include/git2/checkout.h	/^	unsigned int version; \/**< The version *\/$/;"	m	struct:git_checkout_options	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/cherrypick.h	/^	unsigned int version;$/;"	m	struct:__anon241c174e0108	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/clone.h	/^	unsigned int version;$/;"	m	struct:git_clone_options	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/commit.h	/^	unsigned int version;$/;"	m	struct:__anon3e0cd1e30108	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/deprecated.h	/^	unsigned int version;$/;"	m	struct:__anon325f306b0208	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/describe.h	/^	unsigned int version;$/;"	m	struct:__anon07cf78db0208	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/describe.h	/^	unsigned int version;$/;"	m	struct:git_describe_options	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/diff.h	/^	unsigned int version;      \/**< version for the struct *\/$/;"	m	struct:__anon7f3f1dd30608	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/diff.h	/^	unsigned int version;$/;"	m	struct:__anon7f3f1dd30f08	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/diff.h	/^	unsigned int version;$/;"	m	struct:__anon7f3f1dd31108	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/diff.h	/^	unsigned int version;$/;"	m	struct:git_diff_patchid_options	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/email.h	/^	unsigned int version;$/;"	m	struct:__anonbd19e2c20208	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/filter.h	/^	unsigned int version;$/;"	m	struct:__anon331c2ce00308	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/indexer.h	/^	unsigned int version;$/;"	m	struct:git_indexer_options	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/merge.h	/^	unsigned int version;$/;"	m	struct:__anon1374edca0108	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/merge.h	/^	unsigned int version;$/;"	m	struct:__anon1374edca0508	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/merge.h	/^	unsigned int version;$/;"	m	struct:__anon1374edca0708	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/odb.h	/^	unsigned int version; \/**< version for the struct *\/$/;"	m	struct:__anonc68fd3af0208	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/odb_backend.h	/^	unsigned int version; \/**< version for the struct *\/$/;"	m	struct:__anon6d9003760108	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/odb_backend.h	/^	unsigned int version; \/**< version for the struct *\/$/;"	m	struct:__anon6d9003760308	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/proxy.h	/^	unsigned int version;$/;"	m	struct:__anon188a123c0208	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/rebase.h	/^	unsigned int version;$/;"	m	struct:__anonf9a5428c0108	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/remote.h	/^	int version;$/;"	m	struct:__anon144be4e60808	typeref:typename:int
version	my_project/libgit2/include/git2/remote.h	/^	unsigned int version; \/**< The version *\/$/;"	m	struct:git_remote_callbacks	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/remote.h	/^	unsigned int version;$/;"	m	struct:__anon144be4e60908	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/remote.h	/^	unsigned int version;$/;"	m	struct:__anon144be4e60a08	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/remote.h	/^	unsigned int version;$/;"	m	struct:git_remote_create_options	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/repository.h	/^	unsigned int version;$/;"	m	struct:__anon67af0d3a0408	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/revert.h	/^	unsigned int version;$/;"	m	struct:__anon289484920108	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/stash.h	/^	unsigned int version;$/;"	m	struct:git_stash_apply_options	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/stash.h	/^	unsigned int version;$/;"	m	struct:git_stash_save_options	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/status.h	/^	unsigned int version;$/;"	m	struct:__anon6794a3fe0408	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/submodule.h	/^	unsigned int version;$/;"	m	struct:git_submodule_update_options	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/sys/commit_graph.h	/^	unsigned int version;$/;"	m	struct:__anon6744c2020208	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/sys/config.h	/^	unsigned int version;$/;"	m	struct:__anonebfd18fe0108	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/sys/config.h	/^	unsigned int version;$/;"	m	struct:git_config_backend	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/sys/diff.h	/^	unsigned int version;$/;"	m	struct:__anon9aac73a10108	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/sys/filter.h	/^	unsigned int           version;$/;"	m	struct:git_filter	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/sys/merge.h	/^	unsigned int                 version;$/;"	m	struct:git_merge_driver	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/sys/odb_backend.h	/^	unsigned int version;$/;"	m	struct:git_odb_backend	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/sys/refdb_backend.h	/^	unsigned int version; \/**< The backend API version *\/$/;"	m	struct:git_refdb_backend	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/sys/stream.h	/^	int version;$/;"	m	struct:__anon3a3bd7540108	typeref:typename:int
version	my_project/libgit2/include/git2/sys/stream.h	/^	int version;$/;"	m	struct:git_stream	typeref:typename:int
version	my_project/libgit2/include/git2/sys/transport.h	/^	unsigned int version; \/**< The struct version *\/$/;"	m	struct:git_transport	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/worktree.h	/^	unsigned int version;$/;"	m	struct:git_worktree_add_options	typeref:typename:unsigned int
version	my_project/libgit2/include/git2/worktree.h	/^	unsigned int version;$/;"	m	struct:git_worktree_prune_options	typeref:typename:unsigned int
version	my_project/libgit2/package.json	/^  "version": "1.8.2",$/;"	s
version	my_project/libgit2/src/libgit2/commit_graph.c	/^	uint8_t version;$/;"	m	struct:git_commit_graph_header	typeref:typename:uint8_t	file:
version	my_project/libgit2/src/libgit2/index.c	/^	uint32_t version;$/;"	m	struct:index_header	typeref:typename:uint32_t	file:
version	my_project/libgit2/src/libgit2/index.h	/^	unsigned int version;$/;"	m	struct:git_index	typeref:typename:unsigned int
version	my_project/libgit2/src/libgit2/midx.c	/^	uint8_t version;$/;"	m	struct:git_midx_header	typeref:typename:uint8_t	file:
voidp	my_project/libgit2/deps/zlib/zconf.h	/^   typedef Byte       *voidp;$/;"	t	typeref:typename:Byte *
voidp	my_project/libgit2/deps/zlib/zconf.h	/^   typedef void       *voidp;$/;"	t	typeref:typename:void *
voidp	my_project/libgit2/deps/zlib/zconf.h	/^#  define voidp /;"	d
voidpc	my_project/libgit2/deps/zlib/zconf.h	/^   typedef Byte const *voidpc;$/;"	t	typeref:typename:Byte const *
voidpc	my_project/libgit2/deps/zlib/zconf.h	/^   typedef void const *voidpc;$/;"	t	typeref:typename:void const *
voidpc	my_project/libgit2/deps/zlib/zconf.h	/^#  define voidpc /;"	d
voidpf	my_project/libgit2/deps/zlib/zconf.h	/^   typedef Byte FAR   *voidpf;$/;"	t	typeref:typename:Byte FAR *
voidpf	my_project/libgit2/deps/zlib/zconf.h	/^   typedef void FAR   *voidpf;$/;"	t	typeref:typename:void FAR *
voidpf	my_project/libgit2/deps/zlib/zconf.h	/^#  define voidpf /;"	d
vsnprintf	my_project/libgit2/deps/zlib/gzguts.h	/^#         define vsnprintf /;"	d
vspace	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *vspace;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
vspace_list	my_project/libgit2/deps/pcre/pcre_tables.c	/^const pcre_uint32 PRIV(vspace_list)[] = { VSPACE_LIST };$/;"	v	typeref:typename:const pcre_uint32 PRIV ()[]
w_bits	my_project/libgit2/deps/zlib/deflate.h	/^    uInt  w_bits;        \/* log2(w_size)  (8..16) *\/$/;"	m	struct:internal_state	typeref:typename:uInt
w_mask	my_project/libgit2/deps/zlib/deflate.h	/^    uInt  w_mask;        \/* w_size - 1 *\/$/;"	m	struct:internal_state	typeref:typename:uInt
w_size	my_project/libgit2/deps/zlib/deflate.h	/^    uInt  w_size;        \/* LZ77 window size (32K by default) *\/$/;"	m	struct:internal_state	typeref:typename:uInt
wait_while_ack	my_project/libgit2/src/libgit2/transports/smart_protocol.c	/^static int wait_while_ack(transport_smart *t)$/;"	f	typeref:typename:int	file:
walk_and_search	my_project/libgit2/src/libgit2/revparse.c	/^static int walk_and_search(git_object **out, git_revwalk *walk, git_regexp *regex)$/;"	f	typeref:typename:int	file:
walk_common_sequence	my_project/libgit2/deps/xdiff/xpatience.c	/^static int walk_common_sequence(struct hashmap *map, struct entry *first,$/;"	f	typeref:typename:int	file:
walk_data	my_project/libgit2/tests/util/dirent.c	/^typedef struct walk_data {$/;"	s	file:
walk_data	my_project/libgit2/tests/util/dirent.c	/^} walk_data;$/;"	t	typeref:struct:walk_data	file:
walk_object	my_project/libgit2/src/libgit2/pack-objects.c	/^struct walk_object {$/;"	s	file:
walk_objects	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_oidmap *walk_objects;$/;"	m	struct:git_packbuilder	typeref:typename:git_oidmap *
walker	my_project/libgit2/examples/log.c	/^	git_revwalk *walker;$/;"	m	struct:log_state	typeref:typename:git_revwalk *	file:
walking	my_project/libgit2/src/libgit2/revwalk.h	/^	unsigned walking:1,$/;"	m	struct:git_revwalk	typeref:typename:unsigned:1
want	my_project/libgit2/deps/zlib/gzguts.h	/^    unsigned want;          \/* requested buffer size, default is GZBUFSIZE *\/$/;"	m	struct:__anonea1c2cc10108	typeref:typename:unsigned
want_reachable_sha1	my_project/libgit2/src/libgit2/transports/smart.h	/^	             want_reachable_sha1:1,$/;"	m	struct:transport_smart_caps	typeref:typename:unsigned int:1
want_tip_sha1	my_project/libgit2/src/libgit2/transports/smart.h	/^	             want_tip_sha1:1,$/;"	m	struct:transport_smart_caps	typeref:typename:unsigned int:1
was	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned was;               \/* initial length of match *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
wasm_on_headers_complete_wrap	my_project/libgit2/deps/llhttp/api.c	/^static int wasm_on_headers_complete_wrap(llhttp_t* p) {$/;"	f	typeref:typename:int	file:
wasm_settings	my_project/libgit2/deps/llhttp/api.c	/^const llhttp_settings_t wasm_settings = {$/;"	v	typeref:typename:const llhttp_settings_t
watchman_clock	my_project.git/hooks/fsmonitor-watchman.sample	/^sub watchman_clock {$/;"	s
watchman_clock	my_project/libgit2/tests/resources/testrepo_256.git/hooks/fsmonitor-watchman.sample	/^sub watchman_clock {$/;"	s
watchman_query	my_project.git/hooks/fsmonitor-watchman.sample	/^sub watchman_query {$/;"	s
watchman_query	my_project/libgit2/tests/resources/testrepo_256.git/hooks/fsmonitor-watchman.sample	/^sub watchman_query {$/;"	s
wbits	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned wbits;             \/* log base 2 of requested window size *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
wcscat_s	my_project/libgit2/tests/clar/clar/fs.h	/^#define wcscat_s(/;"	d
wcscpy_s	my_project/libgit2/tests/clar/clar/fs.h	/^#define wcscpy_s(/;"	d
wd_item_is_removable	my_project/libgit2/src/libgit2/checkout.c	/^static bool wd_item_is_removable($/;"	f	typeref:typename:bool	file:
wd_oid	my_project/libgit2/src/libgit2/submodule.h	/^	git_oid wd_oid;$/;"	m	struct:git_submodule	typeref:typename:git_oid
weekday_names	my_project/libgit2/src/util/date.c	/^static const char *weekday_names[] = {$/;"	v	typeref:typename:const char * []	file:
what	my_project/libgit2/tests/libgit2/stash/apply.c	/^	bool what;$/;"	m	struct:seen_paths	typeref:typename:bool	file:
whave	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned whave;             \/* valid bytes in the window *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
when	my_project/libgit2/include/git2/types.h	/^	git_time when; \/**< time when the action happened *\/$/;"	m	struct:git_signature	typeref:typename:git_time
when	my_project/libgit2/tests/libgit2/stash/apply.c	/^	bool when;$/;"	m	struct:seen_paths	typeref:typename:bool	file:
who	my_project/libgit2/tests/libgit2/stash/apply.c	/^	bool who;$/;"	m	struct:seen_paths	typeref:typename:bool	file:
wildcard_filter_apply	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^static int wildcard_filter_apply($/;"	f	typeref:typename:int	file:
wildcard_filter_check	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^static int wildcard_filter_check($/;"	f	typeref:typename:int	file:
wildcard_filter_cleanup	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^static void wildcard_filter_cleanup(git_filter *self, void *payload)$/;"	f	typeref:typename:void	file:
wildcard_filter_free	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^static void wildcard_filter_free(git_filter *f)$/;"	f	typeref:typename:void	file:
wildcard_filter_stream	my_project/libgit2/tests/libgit2/filter/wildcard.c	/^static int wildcard_filter_stream($/;"	f	typeref:typename:int	file:
wildmatch	my_project/libgit2/src/util/wildmatch.c	/^int wildmatch(const char *pattern, const char *text, unsigned int flags)$/;"	f	typeref:typename:int
wildmatch_flags	my_project/libgit2/src/libgit2/pathspec.c	/^	int wildmatch_flags;$/;"	m	struct:pathspec_match_context	typeref:typename:int	file:
wildmatch_flags	my_project/libgit2/src/libgit2/status.c	/^	int wildmatch_flags;$/;"	m	struct:status_file_info	typeref:typename:int	file:
win32	my_project/libgit2/src/util/hash/win32.h	/^	git_hash_win32_ctx win32;$/;"	m	struct:git_hash_sha1_ctx	typeref:typename:git_hash_win32_ctx
win32	my_project/libgit2/src/util/hash/win32.h	/^	git_hash_win32_ctx win32;$/;"	m	struct:git_hash_sha256_ctx	typeref:typename:git_hash_win32_ctx
win32_path_cwd	my_project/libgit2/src/util/win32/path_w32.c	/^static int win32_path_cwd(wchar_t *out, size_t len)$/;"	f	typeref:typename:int	file:
win32_path_iter	my_project/libgit2/src/util/win32/path_w32.c	/^struct win32_path_iter {$/;"	s	file:
win32_path_iter_dispose	my_project/libgit2/src/util/win32/path_w32.c	/^static void win32_path_iter_dispose(struct win32_path_iter *iter)$/;"	f	typeref:typename:void	file:
win32_path_iter_init	my_project/libgit2/src/util/win32/path_w32.c	/^static int win32_path_iter_init(struct win32_path_iter *iter)$/;"	f	typeref:typename:int	file:
win32_path_iter_next	my_project/libgit2/src/util/win32/path_w32.c	/^static int win32_path_iter_next($/;"	f	typeref:typename:int	file:
win32_path_to_utf8	my_project/libgit2/src/libgit2/sysdir.c	/^static int win32_path_to_utf8(git_str *dest, const wchar_t *src)$/;"	f	typeref:typename:int	file:
win32_prefix_length	my_project/libgit2/src/util/fs_path.c	/^static int win32_prefix_length(const char *path, int len)$/;"	f	typeref:typename:int	file:
win32_srwlock_acquire_exclusive	my_project/libgit2/src/util/win32/thread.c	/^static win32_srwlock_fn win32_srwlock_acquire_exclusive;$/;"	v	typeref:typename:win32_srwlock_fn	file:
win32_srwlock_acquire_shared	my_project/libgit2/src/util/win32/thread.c	/^static win32_srwlock_fn win32_srwlock_acquire_shared;$/;"	v	typeref:typename:win32_srwlock_fn	file:
win32_srwlock_fn	my_project/libgit2/src/util/win32/thread.c	/^typedef void (WINAPI *win32_srwlock_fn)(GIT_SRWLOCK *);$/;"	t	typeref:typename:void (WINAPI *)(GIT_SRWLOCK *)	file:
win32_srwlock_initialize	my_project/libgit2/src/util/win32/thread.c	/^static win32_srwlock_fn win32_srwlock_initialize;$/;"	v	typeref:typename:win32_srwlock_fn	file:
win32_srwlock_release_exclusive	my_project/libgit2/src/util/win32/thread.c	/^static win32_srwlock_fn win32_srwlock_release_exclusive;$/;"	v	typeref:typename:win32_srwlock_fn	file:
win32_srwlock_release_shared	my_project/libgit2/src/util/win32/thread.c	/^static win32_srwlock_fn win32_srwlock_release_shared;$/;"	v	typeref:typename:win32_srwlock_fn	file:
window	my_project/libgit2/deps/zlib/deflate.h	/^    Bytef *window;$/;"	m	struct:internal_state	typeref:typename:Bytef *
window	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned char FAR *window;  \/* allocated sliding window, if needed *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned char FAR *
window	my_project/libgit2/src/libgit2/pack-objects.c	/^	size_t window;$/;"	m	struct:thread_params	typeref:typename:size_t	file:
window_map	my_project/libgit2/src/libgit2/mwindow.h	/^	git_map window_map;$/;"	m	struct:git_mwindow	typeref:typename:git_map
window_memory_limit	my_project/libgit2/src/libgit2/pack-objects.h	/^	size_t window_memory_limit;$/;"	m	struct:git_packbuilder	typeref:typename:size_t
window_size	my_project/libgit2/deps/zlib/deflate.h	/^    ulg window_size;$/;"	m	struct:internal_state	typeref:typename:ulg
windowfiles	my_project/libgit2/src/libgit2/mwindow.h	/^	git_vector windowfiles;$/;"	m	struct:git_mwindow_ctl	typeref:typename:git_vector
windows	my_project/libgit2/src/libgit2/mwindow.h	/^	git_mwindow *windows;$/;"	m	struct:git_mwindow_file	typeref:typename:git_mwindow *
winhttp_action	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int winhttp_action($/;"	f	typeref:typename:int	file:
winhttp_authmechanism_t	my_project/libgit2/src/libgit2/transports/winhttp.c	/^} winhttp_authmechanism_t;$/;"	t	typeref:enum:__anon5ba854ad0103	file:
winhttp_close	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int winhttp_close(git_smart_subtransport *subtransport)$/;"	f	typeref:typename:int	file:
winhttp_close_connection	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int winhttp_close_connection(winhttp_subtransport *t)$/;"	f	typeref:typename:int	file:
winhttp_connect	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int winhttp_connect($/;"	f	typeref:typename:int	file:
winhttp_free	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static void winhttp_free(git_smart_subtransport *subtransport)$/;"	f	typeref:typename:void	file:
winhttp_receivepack	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int winhttp_receivepack($/;"	f	typeref:typename:int	file:
winhttp_receivepack_ls	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int winhttp_receivepack_ls($/;"	f	typeref:typename:int	file:
winhttp_server	my_project/libgit2/src/libgit2/transports/winhttp.c	/^} winhttp_server;$/;"	t	typeref:struct:__anon5ba854ad0308	file:
winhttp_status	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static void CALLBACK winhttp_status($/;"	f	typeref:typename:void CALLBACK	file:
winhttp_stream	my_project/libgit2/src/libgit2/transports/winhttp.c	/^} winhttp_stream;$/;"	t	typeref:struct:__anon5ba854ad0208	file:
winhttp_stream_alloc	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int winhttp_stream_alloc(winhttp_subtransport *t, winhttp_stream **stream)$/;"	f	typeref:typename:int	file:
winhttp_stream_close	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static void winhttp_stream_close(winhttp_stream *s)$/;"	f	typeref:typename:void	file:
winhttp_stream_connect	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int winhttp_stream_connect(winhttp_stream *s)$/;"	f	typeref:typename:int	file:
winhttp_stream_free	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static void winhttp_stream_free(git_smart_subtransport_stream *stream)$/;"	f	typeref:typename:void	file:
winhttp_stream_read	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int winhttp_stream_read($/;"	f	typeref:typename:int	file:
winhttp_stream_write_buffered	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int winhttp_stream_write_buffered($/;"	f	typeref:typename:int	file:
winhttp_stream_write_chunked	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int winhttp_stream_write_chunked($/;"	f	typeref:typename:int	file:
winhttp_stream_write_single	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int winhttp_stream_write_single($/;"	f	typeref:typename:int	file:
winhttp_subtransport	my_project/libgit2/src/libgit2/transports/winhttp.c	/^} winhttp_subtransport;$/;"	t	typeref:struct:__anon5ba854ad0408	file:
winhttp_uploadpack	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int winhttp_uploadpack($/;"	f	typeref:typename:int	file:
winhttp_uploadpack_ls	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int winhttp_uploadpack_ls($/;"	f	typeref:typename:int	file:
wnext	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned wnext;             \/* window write index *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
word_pattern	my_project/libgit2/src/libgit2/diff_driver.c	/^	git_regexp  word_pattern;$/;"	m	struct:git_diff_driver	typeref:typename:git_regexp	file:
wordboundary	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  jump_list *wordboundary;$/;"	m	struct:compiler_common	typeref:typename:jump_list *	file:
words	my_project/libgit2/src/libgit2/userdiff.h	/^	const char *words;$/;"	m	struct:__anonf1be5fcd0108	typeref:typename:const char *
words	my_project/libgit2/src/util/bitvec.h	/^		uint64_t *words;$/;"	m	union:__anonfa138ea30108::__anonfa138ea3020a	typeref:typename:uint64_t *
work	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned short work[288];   \/* work area for code table building *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned short[288]
workdir	my_project/libgit2/src/libgit2/attr.c	/^	const char *workdir;$/;"	m	struct:__anon36621a0b0208	typeref:typename:const char *	file:
workdir	my_project/libgit2/src/libgit2/repository.c	/^	git_str workdir;$/;"	m	struct:repo_paths	typeref:typename:git_str	file:
workdir	my_project/libgit2/src/libgit2/repository.h	/^	char *workdir;$/;"	m	struct:git_repository	typeref:typename:char *
workdir_data	my_project/libgit2/tests/libgit2/filter/custom.c	/^static char workdir_data[] =$/;"	v	typeref:typename:char[]	file:
workdir_delta2status	my_project/libgit2/src/libgit2/status.c	/^static unsigned int workdir_delta2status($/;"	f	typeref:typename:unsigned int	file:
workdir_iterator_test	my_project/libgit2/tests/libgit2/iterator/workdir.c	/^static void workdir_iterator_test($/;"	f	typeref:typename:void	file:
workdir_path	my_project/libgit2/include/git2/repository.h	/^	const char *workdir_path;$/;"	m	struct:__anon67af0d3a0408	typeref:typename:const char *
workdir_reader	my_project/libgit2/src/libgit2/reader.c	/^} workdir_reader;$/;"	t	typeref:struct:__anon57d570630208	file:
workdir_reader_read	my_project/libgit2/src/libgit2/reader.c	/^static int workdir_reader_read($/;"	f	typeref:typename:int	file:
working	my_project/libgit2/src/libgit2/pack-objects.c	/^	size_t working;$/;"	m	struct:thread_params	typeref:typename:size_t	file:
workspace_size	my_project/libgit2/deps/pcre/pcre_internal.h	/^  int  workspace_size;              \/* Size of workspace *\/$/;"	m	struct:compile_data	typeref:typename:int
worktree	my_project/libgit2/tests/libgit2/worktree/worktree_helpers.h	/^	git_repository *worktree;$/;"	m	struct:__anon349ebb670108	typeref:typename:git_repository *
worktree_fixture	my_project/libgit2/tests/libgit2/worktree/worktree_helpers.h	/^} worktree_fixture;$/;"	t	typeref:struct:__anon349ebb670108
worktree_path	my_project/libgit2/src/libgit2/worktree.h	/^	char *worktree_path;$/;"	m	struct:git_worktree	typeref:typename:char *
worktreename	my_project/libgit2/tests/libgit2/worktree/worktree_helpers.h	/^	const char *worktreename;$/;"	m	struct:__anon349ebb670108	typeref:typename:const char *
wrap	my_project/libgit2/deps/zlib/deflate.h	/^    int   wrap;          \/* bit 0 true for zlib, bit 1 true for gzip *\/$/;"	m	struct:internal_state	typeref:typename:int
wrap	my_project/libgit2/deps/zlib/inflate.h	/^    int wrap;                   \/* bit 0 true for zlib, bit 1 true for gzip,$/;"	m	struct:inflate_state	typeref:typename:int
wrapped	my_project/libgit2/src/libgit2/transports/smart.h	/^	git_smart_subtransport *wrapped;$/;"	m	struct:__anonb9ceeb0b0c08	typeref:typename:git_smart_subtransport *
write	my_project/libgit2/deps/zlib/gzguts.h	/^#  define write /;"	d
write	my_project/libgit2/src/util/filebuf.h	/^	int (*write)(git_filebuf *file, void *source, size_t len);$/;"	m	struct:git_filebuf	typeref:typename:int (*)(git_filebuf * file,void * source,size_t len)
write	my_project/libgit2/tests/clar/generate.py	/^    def write(self):$/;"	m	class:TestSuite
write_add_refspec	my_project/libgit2/src/libgit2/remote.c	/^static int write_add_refspec(git_repository *repo, const char *name, const char *refspec, bool f/;"	f	typeref:typename:int	file:
write_all	my_project/libgit2/tests/util/process/start.c	/^static void write_all(git_process *process, char *buf)$/;"	f	typeref:typename:void	file:
write_at	my_project/libgit2/src/libgit2/indexer.c	/^static int write_at(git_indexer *idx, const void *data, off64_t offset, size_t size)$/;"	f	typeref:typename:int	file:
write_attributes	my_project/libgit2/tests/libgit2/object/blob/fromstream.c	/^static void write_attributes(git_repository *repo)$/;"	f	typeref:typename:void	file:
write_buf	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool write_buf($/;"	f	typeref:typename:bool	file:
write_bufinfo	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool write_bufinfo($/;"	f	typeref:typename:bool	file:
write_byte	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool write_byte($/;"	f	typeref:typename:bool	file:
write_cache	my_project/libgit2/src/libgit2/tree.h	/^	git_str write_cache;$/;"	m	struct:git_treebuilder	typeref:typename:git_str
write_cb	my_project/libgit2/src/libgit2/commit_graph.c	/^	commit_graph_write_cb write_cb;$/;"	m	struct:commit_graph_write_hash_context	typeref:typename:commit_graph_write_cb	file:
write_cb	my_project/libgit2/src/libgit2/midx.c	/^	midx_write_cb write_cb;$/;"	m	struct:midx_write_hash_context	typeref:typename:midx_write_cb	file:
write_cb	my_project/libgit2/src/libgit2/pack-objects.c	/^static int write_cb(void *buf, size_t len, void *payload)$/;"	f	typeref:typename:int	file:
write_cb	my_project/libgit2/src/libgit2/streams/stransport.c	/^static OSStatus write_cb(SSLConnectionRef conn, const void *data, size_t *len)$/;"	f	typeref:typename:OSStatus	file:
write_cherrypick_head	my_project/libgit2/src/libgit2/cherrypick.c	/^static int write_cherrypick_head($/;"	f	typeref:typename:int	file:
write_chunk	my_project/libgit2/src/libgit2/transports/winhttp.c	/^static int write_chunk(HINTERNET request, const char *buffer, size_t len)$/;"	f	typeref:typename:int	file:
write_chunk_header	my_project/libgit2/src/libgit2/commit_graph.c	/^static int write_chunk_header($/;"	f	typeref:typename:int	file:
write_chunk_header	my_project/libgit2/src/libgit2/midx.c	/^static int write_chunk_header(int chunk_id, off64_t offset, midx_write_cb write_cb, void *cb_dat/;"	f	typeref:typename:int	file:
write_data	my_project/libgit2/src/libgit2/config_file.c	/^struct write_data {$/;"	s	file:
write_deflate	my_project/libgit2/src/util/filebuf.c	/^static int write_deflate(git_filebuf *file, void *source, size_t len)$/;"	f	typeref:typename:int	file:
write_disk_entry	my_project/libgit2/src/libgit2/index.c	/^static int write_disk_entry($/;"	f	typeref:typename:int	file:
write_entries	my_project/libgit2/src/libgit2/index.c	/^static int write_entries(git_index *index, git_filebuf *file)$/;"	f	typeref:typename:int	file:
write_extension	my_project/libgit2/src/libgit2/index.c	/^static int write_extension(git_filebuf *file, struct index_extension *header, git_str *data)$/;"	f	typeref:typename:int	file:
write_file	my_project/libgit2/tests/libgit2/repo/discover.c	/^static void write_file(const char *path, const char *content)$/;"	f	typeref:typename:void	file:
write_file_contents	my_project/libgit2/tests/libgit2/merge/workdir/setup.c	/^static void write_file_contents(const char *filename, const char *output)$/;"	f	typeref:typename:void	file:
write_file_filtered	my_project/libgit2/src/libgit2/blob.c	/^static int write_file_filtered($/;"	f	typeref:typename:int	file:
write_file_stream	my_project/libgit2/src/libgit2/blob.c	/^static int write_file_stream($/;"	f	typeref:typename:int	file:
write_files	my_project/libgit2/tests/libgit2/merge/workdir/dirty.c	/^static void write_files(char *files[])$/;"	f	typeref:typename:void	file:
write_fn	my_project/libgit2/src/libgit2/filter.c	/^	int (*write_fn)(git_filter *, void **, git_str *, const git_str *, const git_filter_source *);$/;"	m	struct:buffered_stream	typeref:typename:int (*)(git_filter *,void **,git_str *,const git_str *,const git_filter_source *)	file:
write_header	my_project/libgit2/tests/clar/generate.py	/^    def write_header(self):$/;"	m	class:TestSuite
write_index	my_project/libgit2/src/libgit2/index.c	/^static int write_index($/;"	f	typeref:typename:int	file:
write_int16	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool write_int16($/;"	f	typeref:typename:bool	file:
write_int32	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool write_int32($/;"	f	typeref:typename:bool	file:
write_line	my_project/libgit2/src/libgit2/config_file.c	/^static int write_line(struct write_data *write_data, const char *line, size_t line_len)$/;"	f	typeref:typename:int	file:
write_line_to	my_project/libgit2/src/libgit2/config_file.c	/^static int write_line_to(git_str *buf, const char *line, size_t line_len)$/;"	f	typeref:typename:int	file:
write_mapped_var	my_project/libgit2/src/libgit2/submodule.c	/^static int write_mapped_var(git_repository *repo, const char *name, git_configmap *maps, size_t /;"	f	typeref:typename:int	file:
write_merge_head	my_project/libgit2/src/libgit2/merge.c	/^static int write_merge_head($/;"	f	typeref:typename:int	file:
write_merge_mode	my_project/libgit2/src/libgit2/merge.c	/^static int write_merge_mode(git_repository *repo)$/;"	f	typeref:typename:int	file:
write_merge_msg	my_project/libgit2/src/libgit2/cherrypick.c	/^static int write_merge_msg($/;"	f	typeref:typename:int	file:
write_merge_msg	my_project/libgit2/src/libgit2/merge.c	/^static int write_merge_msg($/;"	f	typeref:typename:int	file:
write_merge_msg	my_project/libgit2/src/libgit2/revert.c	/^static int write_merge_msg($/;"	f	typeref:typename:int	file:
write_name_extension	my_project/libgit2/src/libgit2/index.c	/^static int write_name_extension(git_index *index, git_filebuf *file)$/;"	f	typeref:typename:int	file:
write_normal	my_project/libgit2/src/util/filebuf.c	/^static int write_normal(git_filebuf *file, void *source, size_t len)$/;"	f	typeref:typename:int	file:
write_object	my_project/libgit2/src/cli/cmd_hash_object.c	/^static int write_object, read_stdin, literally;$/;"	v	typeref:typename:int	file:
write_object	my_project/libgit2/src/libgit2/pack-objects.c	/^static int write_object($/;"	f	typeref:typename:int	file:
write_object_files	my_project/libgit2/tests/libgit2/odb/loose.c	/^static void write_object_files(object_data *d)$/;"	f	typeref:typename:void	file:
write_object_to_loose_odb	my_project/libgit2/tests/libgit2/odb/loose.c	/^static void write_object_to_loose_odb(int fsync)$/;"	f	typeref:typename:void	file:
write_offset	my_project/libgit2/src/libgit2/commit_graph.c	/^static int write_offset(off64_t offset, commit_graph_write_cb write_cb, void *cb_data)$/;"	f	typeref:typename:int	file:
write_offset	my_project/libgit2/src/libgit2/midx.c	/^static int write_offset(off64_t offset, midx_write_cb write_cb, void *cb_data)$/;"	f	typeref:typename:int	file:
write_on_comment	my_project/libgit2/src/libgit2/config_file.c	/^static int write_on_comment(git_config_parser *reader, const char *line, size_t line_len, void */;"	f	typeref:typename:int	file:
write_on_eof	my_project/libgit2/src/libgit2/config_file.c	/^static int write_on_eof($/;"	f	typeref:typename:int	file:
write_on_section	my_project/libgit2/src/libgit2/config_file.c	/^static int write_on_section($/;"	f	typeref:typename:int	file:
write_on_variable	my_project/libgit2/src/libgit2/config_file.c	/^static int write_on_variable($/;"	f	typeref:typename:int	file:
write_one	my_project/libgit2/src/libgit2/pack-objects.c	/^static int write_one($/;"	f	typeref:typename:int	file:
write_one_status	my_project/libgit2/src/libgit2/pack-objects.c	/^enum write_one_status {$/;"	g	file:
write_order	my_project/libgit2/src/libgit2/config.c	/^	int write_order;$/;"	m	struct:__anona0399aa60208	typeref:typename:int	file:
write_output	my_project/libgit2/tests/clar/generate.py	/^    def write_output(self, fn, data):$/;"	m	class:TestSuite
write_pack	my_project/libgit2/src/libgit2/pack-objects.c	/^static int write_pack(git_packbuilder *pb,$/;"	f	typeref:typename:int	file:
write_pack_buf	my_project/libgit2/src/libgit2/pack-objects.c	/^static int write_pack_buf(void *buf, size_t size, void *data)$/;"	f	typeref:typename:int	file:
write_reuc_extension	my_project/libgit2/src/libgit2/index.c	/^static int write_reuc_extension(git_index *index, git_filebuf *file)$/;"	f	typeref:typename:int	file:
write_revert_head	my_project/libgit2/src/libgit2/revert.c	/^static int write_revert_head($/;"	f	typeref:typename:int	file:
write_section	my_project/libgit2/src/libgit2/config_file.c	/^static int write_section(git_str *fbuf, const char *key)$/;"	f	typeref:typename:int	file:
write_similarity_file_two	my_project/libgit2/tests/libgit2/diff/rename.c	/^static void write_similarity_file_two(const char *filename, size_t b_lines)$/;"	f	typeref:typename:void	file:
write_status	my_project/libgit2/src/util/unix/process.c	/^static void write_status(int fd, const char *fn, int error, int os_error)$/;"	f	typeref:typename:void	file:
write_suite	my_project/libgit2/tests/clar/generate.py	/^    def write_suite(self):$/;"	m	class:TestSuite
write_summary	my_project/libgit2/tests/clar/clar.c	/^	int write_summary;$/;"	m	struct:__anon15d96e120108	typeref:typename:int	file:
write_symlink	my_project/libgit2/src/libgit2/blob.c	/^static int write_symlink($/;"	f	typeref:typename:int	file:
write_table	my_project/libgit2/deps/zlib/crc32.c	/^local void write_table(FILE *out, const z_crc_t FAR *table, int k) {$/;"	f	typeref:typename:local void
write_table32hi	my_project/libgit2/deps/zlib/crc32.c	/^local void write_table32hi(FILE *out, const z_word_t FAR *table, int k) {$/;"	f	typeref:typename:local void
write_table64	my_project/libgit2/deps/zlib/crc32.c	/^local void write_table64(FILE *out, const z_word_t FAR *table, int k) {$/;"	f	typeref:typename:local void
write_tag_annotation	my_project/libgit2/src/libgit2/tag.c	/^static int write_tag_annotation($/;"	f	typeref:typename:int	file:
write_tree	my_project/libgit2/src/libgit2/tree-cache.c	/^static void write_tree(git_str *out, git_tree_cache *tree)$/;"	f	typeref:typename:void	file:
write_tree	my_project/libgit2/src/libgit2/tree.c	/^static int write_tree($/;"	f	typeref:typename:int	file:
write_tree_extension	my_project/libgit2/src/libgit2/index.c	/^static int write_tree_extension(git_index *index, git_filebuf *file)$/;"	f	typeref:typename:int	file:
write_value	my_project/libgit2/src/libgit2/config_file.c	/^static int write_value(struct write_data *write_data)$/;"	f	typeref:typename:int	file:
write_var	my_project/libgit2/src/libgit2/submodule.c	/^static int write_var(git_repository *repo, const char *name, const char *var, const char *val)$/;"	f	typeref:typename:int	file:
write_version	my_project/libgit2/deps/ntlmclient/ntlm.c	/^static inline bool write_version($/;"	f	typeref:typename:bool	file:
write_wtfile	my_project/libgit2/src/libgit2/worktree.c	/^static int write_wtfile(const char *base, const char *file, const git_str *buf)$/;"	f	typeref:typename:int	file:
writefile	my_project/libgit2/tests/libgit2/filter/stream.c	/^static void writefile(const char *filename, size_t numchunks)$/;"	f	typeref:typename:void	file:
writefile	my_project/libgit2/tests/libgit2/odb/largefiles.c	/^static void writefile(git_oid *oid)$/;"	f	typeref:typename:void	file:
writepack	my_project/libgit2/src/libgit2/transports/local.c	/^	git_odb_writepack *writepack;$/;"	m	struct:foreach_data	typeref:typename:git_odb_writepack *	file:
writer_cmp	my_project/libgit2/src/libgit2/config.c	/^static int writer_cmp(const void *_a, const void *_b)$/;"	f	typeref:typename:int	file:
writers	my_project/libgit2/src/libgit2/config.h	/^	git_vector writers;$/;"	m	struct:git_config	typeref:typename:git_vector
written	my_project/libgit2/src/libgit2/merge.c	/^	bool written;$/;"	m	struct:merge_msg_entry	typeref:typename:bool	file:
written	my_project/libgit2/src/libgit2/odb.c	/^	size_t size, written;$/;"	m	struct:__anon3125c0850208	typeref:typename:size_t	file:
written	my_project/libgit2/src/libgit2/pack-objects.h	/^	unsigned int written:1,$/;"	m	struct:git_pobject	typeref:typename:unsigned int:1
written	my_project/libgit2/tests/libgit2/trace/trace.c	/^static int written = 0;$/;"	v	typeref:typename:int	file:
wrong_sorted_path	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^	int wrong_sorted_path;$/;"	m	struct:__anon6ff743e90108	typeref:typename:int
wrong_status_flags_count	my_project/libgit2/tests/libgit2/status/status_helpers.h	/^	int wrong_status_flags_count;$/;"	m	struct:__anon6ff743e90108	typeref:typename:int
wsize	my_project/libgit2/deps/zlib/inflate.h	/^    unsigned wsize;             \/* window size or zero if not using window *\/$/;"	m	struct:inflate_state	typeref:typename:unsigned
wt_adds	my_project/libgit2/tests/libgit2/index/addall.c	/^	size_t wt_adds;$/;"	m	struct:__anond08108c40108	typeref:typename:size_t	file:
wt_dels	my_project/libgit2/tests/libgit2/index/addall.c	/^	size_t wt_dels;$/;"	m	struct:__anond08108c40108	typeref:typename:size_t	file:
wt_mods	my_project/libgit2/tests/libgit2/index/addall.c	/^	size_t wt_mods;$/;"	m	struct:__anond08108c40108	typeref:typename:size_t	file:
x	my_project/libgit2/deps/zlib/gzguts.h	/^    struct gzFile_s x;      \/* "x" for exposed *\/$/;"	m	struct:__anonea1c2cc10108	typeref:struct:gzFile_s
x2n_table	my_project/libgit2/deps/zlib/crc32.c	/^   local z_crc_t FAR x2n_table[32];$/;"	v	typeref:typename:local z_crc_t FAR[32]
x2n_table	my_project/libgit2/deps/zlib/crc32.h	/^local const z_crc_t FAR x2n_table[] = {$/;"	v	typeref:typename:local const z_crc_t FAR[]
x2nmodp	my_project/libgit2/deps/zlib/crc32.c	/^local z_crc_t x2nmodp(z_off64_t n, unsigned k) {$/;"	f	typeref:typename:local z_crc_t
x509	my_project/libgit2/src/libgit2/streams/schannel.c	/^	git_cert_x509 x509;$/;"	m	struct:__anonafd1b44a0208	typeref:typename:git_cert_x509	file:
x509_succeed_certificate_check	my_project/libgit2/tests/libgit2/online/clone.c	/^static int x509_succeed_certificate_check(git_cert *cert, int valid, const char *host, void *pay/;"	f	typeref:typename:int	file:
xd_new_data	my_project/libgit2/src/libgit2/diff_xdiff.c	/^	mmfile_t xd_old_data, xd_new_data;$/;"	m	struct:__anon544d96590108	typeref:typename:mmfile_t	file:
xd_old_data	my_project/libgit2/src/libgit2/diff_xdiff.c	/^	mmfile_t xd_old_data, xd_new_data;$/;"	m	struct:__anon544d96590108	typeref:typename:mmfile_t	file:
xdalgoenv_t	my_project/libgit2/deps/xdiff/xdiffi.h	/^} xdalgoenv_t;$/;"	t	typeref:struct:s_xdalgoenv
xdchange_t	my_project/libgit2/deps/xdiff/xdiffi.h	/^} xdchange_t;$/;"	t	typeref:struct:s_xdchange
xdemitcb_t	my_project/libgit2/deps/xdiff/xdiff.h	/^} xdemitcb_t;$/;"	t	typeref:struct:s_xdemitcb
xdemitconf_t	my_project/libgit2/deps/xdiff/xdiff.h	/^} xdemitconf_t;$/;"	t	typeref:struct:s_xdemitconf
xdf1	my_project/libgit2/deps/xdiff/xtypes.h	/^	xdfile_t xdf1, xdf2;$/;"	m	struct:s_xdfenv	typeref:typename:xdfile_t
xdf2	my_project/libgit2/deps/xdiff/xtypes.h	/^	xdfile_t xdf1, xdf2;$/;"	m	struct:s_xdfenv	typeref:typename:xdfile_t
xdfenv_t	my_project/libgit2/deps/xdiff/xtypes.h	/^} xdfenv_t;$/;"	t	typeref:struct:s_xdfenv
xdfile_t	my_project/libgit2/deps/xdiff/xtypes.h	/^} xdfile_t;$/;"	t	typeref:struct:s_xdfile
xdiff	my_project/libgit2/deps/xdiff/CMakeLists.txt	/^add_library(xdiff OBJECT ${SRC_XDIFF})$/;"	t
xdl_add_change	my_project/libgit2/deps/xdiff/xdiffi.c	/^static xdchange_t *xdl_add_change(xdchange_t *xscr, long i1, long i2, long chg1, long chg2) {$/;"	f	typeref:typename:xdchange_t *	file:
xdl_alloc_grow_helper	my_project/libgit2/deps/xdiff/xutils.c	/^void* xdl_alloc_grow_helper(void *p, long nr, long *alloc, size_t size)$/;"	f	typeref:typename:void *
xdl_append_merge	my_project/libgit2/deps/xdiff/xmerge.c	/^static int xdl_append_merge(xdmerge_t **merge, int mode,$/;"	f	typeref:typename:int	file:
xdl_blankline	my_project/libgit2/deps/xdiff/xutils.c	/^int xdl_blankline(const char *line, long size, long flags)$/;"	f	typeref:typename:int
xdl_bogosqrt	my_project/libgit2/deps/xdiff/xutils.c	/^long xdl_bogosqrt(long n) {$/;"	f	typeref:typename:long
xdl_build_script	my_project/libgit2/deps/xdiff/xdiffi.c	/^int xdl_build_script(xdfenv_t *xe, xdchange_t **xscr) {$/;"	f	typeref:typename:int
xdl_call_hunk_func	my_project/libgit2/deps/xdiff/xdiffi.c	/^static int xdl_call_hunk_func(xdfenv_t *xe XDL_UNUSED, xdchange_t *xscr, xdemitcb_t *ecb,$/;"	f	typeref:typename:int	file:
xdl_calloc	my_project/libgit2/deps/xdiff/git-xdiff.h	/^#define xdl_calloc(/;"	d
xdl_cha_alloc	my_project/libgit2/deps/xdiff/xutils.c	/^void *xdl_cha_alloc(chastore_t *cha) {$/;"	f	typeref:typename:void *
xdl_cha_free	my_project/libgit2/deps/xdiff/xutils.c	/^void xdl_cha_free(chastore_t *cha) {$/;"	f	typeref:typename:void
xdl_cha_init	my_project/libgit2/deps/xdiff/xutils.c	/^int xdl_cha_init(chastore_t *cha, long isize, long icount) {$/;"	f	typeref:typename:int
xdl_change_compact	my_project/libgit2/deps/xdiff/xdiffi.c	/^int xdl_change_compact(xdfile_t *xdf, xdfile_t *xdfo, long flags) {$/;"	f	typeref:typename:int
xdl_classify_record	my_project/libgit2/deps/xdiff/xprepare.c	/^static int xdl_classify_record(unsigned int pass, xdlclassifier_t *cf, xrecord_t **rhash,$/;"	f	typeref:typename:int	file:
xdl_clean_mmatch	my_project/libgit2/deps/xdiff/xprepare.c	/^static int xdl_clean_mmatch(char const *dis, long i, long s, long e) {$/;"	f	typeref:typename:int	file:
xdl_cleanup_merge	my_project/libgit2/deps/xdiff/xmerge.c	/^static int xdl_cleanup_merge(xdmerge_t *c)$/;"	f	typeref:typename:int	file:
xdl_cleanup_records	my_project/libgit2/deps/xdiff/xprepare.c	/^static int xdl_cleanup_records(xdlclassifier_t *cf, xdfile_t *xdf1, xdfile_t *xdf2) {$/;"	f	typeref:typename:int	file:
xdl_diff	my_project/libgit2/deps/xdiff/xdiffi.c	/^int xdl_diff(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,$/;"	f	typeref:typename:int
xdl_do_diff	my_project/libgit2/deps/xdiff/xdiffi.c	/^int xdl_do_diff(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,$/;"	f	typeref:typename:int
xdl_do_histogram_diff	my_project/libgit2/deps/xdiff/xhistogram.c	/^int xdl_do_histogram_diff(xpparam_t const *xpp, xdfenv_t *env)$/;"	f	typeref:typename:int
xdl_do_merge	my_project/libgit2/deps/xdiff/xmerge.c	/^static int xdl_do_merge(xdfenv_t *xe1, xdchange_t *xscr1,$/;"	f	typeref:typename:int	file:
xdl_do_patience_diff	my_project/libgit2/deps/xdiff/xpatience.c	/^int xdl_do_patience_diff(xpparam_t const *xpp, xdfenv_t *env)$/;"	f	typeref:typename:int
xdl_emit_diff	my_project/libgit2/deps/xdiff/xemit.c	/^int xdl_emit_diff(xdfenv_t *xe, xdchange_t *xscr, xdemitcb_t *ecb,$/;"	f	typeref:typename:int
xdl_emit_diffrec	my_project/libgit2/deps/xdiff/xutils.c	/^int xdl_emit_diffrec(char const *rec, long size, char const *pre, long psize,$/;"	f	typeref:typename:int
xdl_emit_hunk_consume_func_t	my_project/libgit2/deps/xdiff/xdiff.h	/^typedef int (*xdl_emit_hunk_consume_func_t)(long start_a, long count_a,$/;"	t	typeref:typename:int (*)(long start_a,long count_a,long start_b,long count_b,void * cb_data)
xdl_emit_hunk_hdr	my_project/libgit2/deps/xdiff/xutils.c	/^int xdl_emit_hunk_hdr(long s1, long c1, long s2, long c2,$/;"	f	typeref:typename:int
xdl_emit_record	my_project/libgit2/deps/xdiff/xemit.c	/^static int xdl_emit_record(xdfile_t *xdf, long ri, char const *pre, xdemitcb_t *ecb) {$/;"	f	typeref:typename:int	file:
xdl_fall_back_diff	my_project/libgit2/deps/xdiff/xutils.c	/^int xdl_fall_back_diff(xdfenv_t *diff_env, xpparam_t const *xpp,$/;"	f	typeref:typename:int
xdl_fill_merge_buffer	my_project/libgit2/deps/xdiff/xmerge.c	/^static int xdl_fill_merge_buffer(xdfenv_t *xe1, const char *name1,$/;"	f	typeref:typename:int	file:
xdl_format_hunk_hdr	my_project/libgit2/deps/xdiff/xutils.c	/^static int xdl_format_hunk_hdr(long s1, long c1, long s2, long c2,$/;"	f	typeref:typename:int	file:
xdl_free	my_project/libgit2/deps/xdiff/git-xdiff.h	/^#define xdl_free(/;"	d
xdl_free_classifier	my_project/libgit2/deps/xdiff/xprepare.c	/^static void xdl_free_classifier(xdlclassifier_t *cf) {$/;"	f	typeref:typename:void	file:
xdl_free_ctx	my_project/libgit2/deps/xdiff/xprepare.c	/^static void xdl_free_ctx(xdfile_t *xdf) {$/;"	f	typeref:typename:void	file:
xdl_free_env	my_project/libgit2/deps/xdiff/xprepare.c	/^void xdl_free_env(xdfenv_t *xe) {$/;"	f	typeref:typename:void
xdl_free_script	my_project/libgit2/deps/xdiff/xdiffi.c	/^void xdl_free_script(xdchange_t *xscr) {$/;"	f	typeref:typename:void
xdl_get_hunk	my_project/libgit2/deps/xdiff/xemit.c	/^xdchange_t *xdl_get_hunk(xdchange_t **xscr, xdemitconf_t const *xecfg)$/;"	f	typeref:typename:xdchange_t *
xdl_get_rec	my_project/libgit2/deps/xdiff/xemit.c	/^static long xdl_get_rec(xdfile_t *xdf, long ri, char const **rec) {$/;"	f	typeref:typename:long	file:
xdl_guess_lines	my_project/libgit2/deps/xdiff/xutils.c	/^long xdl_guess_lines(mmfile_t *mf, long sample) {$/;"	f	typeref:typename:long
xdl_hash_record	my_project/libgit2/deps/xdiff/xutils.c	/^unsigned long xdl_hash_record(char const **data, char const *top, long flags) {$/;"	f	typeref:typename:unsigned long
xdl_hash_record_with_whitespace	my_project/libgit2/deps/xdiff/xutils.c	/^static unsigned long xdl_hash_record_with_whitespace(char const **data,$/;"	f	typeref:typename:unsigned long	file:
xdl_hashbits	my_project/libgit2/deps/xdiff/xutils.c	/^unsigned int xdl_hashbits(unsigned int size) {$/;"	f	typeref:typename:unsigned int
xdl_init_classifier	my_project/libgit2/deps/xdiff/xprepare.c	/^static int xdl_init_classifier(xdlclassifier_t *cf, long size, long flags) {$/;"	f	typeref:typename:int	file:
xdl_malloc	my_project/libgit2/deps/xdiff/git-xdiff.h	/^#define xdl_malloc(/;"	d
xdl_mark_ignorable_lines	my_project/libgit2/deps/xdiff/xdiffi.c	/^static void xdl_mark_ignorable_lines(xdchange_t *xscr, xdfenv_t *xe, long flags)$/;"	f	typeref:typename:void	file:
xdl_mark_ignorable_regex	my_project/libgit2/deps/xdiff/xdiffi.c	/^static void xdl_mark_ignorable_regex(xdchange_t *xscr, const xdfenv_t *xe,$/;"	f	typeref:typename:void	file:
xdl_merge	my_project/libgit2/deps/xdiff/xmerge.c	/^int xdl_merge(mmfile_t *orig, mmfile_t *mf1, mmfile_t *mf2,$/;"	f	typeref:typename:int
xdl_merge_cmp_lines	my_project/libgit2/deps/xdiff/xmerge.c	/^static int xdl_merge_cmp_lines(xdfenv_t *xe1, int i1, xdfenv_t *xe2, int i2,$/;"	f	typeref:typename:int	file:
xdl_merge_two_conflicts	my_project/libgit2/deps/xdiff/xmerge.c	/^static void xdl_merge_two_conflicts(xdmerge_t *m)$/;"	f	typeref:typename:void	file:
xdl_mmfile_first	my_project/libgit2/deps/xdiff/xutils.c	/^void *xdl_mmfile_first(mmfile_t *mmf, long *size)$/;"	f	typeref:typename:void *
xdl_mmfile_size	my_project/libgit2/deps/xdiff/xutils.c	/^long xdl_mmfile_size(mmfile_t *mmf)$/;"	f	typeref:typename:long
xdl_num_out	my_project/libgit2/deps/xdiff/xutils.c	/^int xdl_num_out(char *out, long val) {$/;"	f	typeref:typename:int
xdl_optimize_ctxs	my_project/libgit2/deps/xdiff/xprepare.c	/^static int xdl_optimize_ctxs(xdlclassifier_t *cf, xdfile_t *xdf1, xdfile_t *xdf2) {$/;"	f	typeref:typename:int	file:
xdl_orig_copy	my_project/libgit2/deps/xdiff/xmerge.c	/^static int xdl_orig_copy(xdfenv_t *xe, int i, int count, int needs_cr, int add_nl, char *dest)$/;"	f	typeref:typename:int	file:
xdl_prepare_ctx	my_project/libgit2/deps/xdiff/xprepare.c	/^static int xdl_prepare_ctx(unsigned int pass, mmfile_t *mf, long narec, xpparam_t const *xpp,$/;"	f	typeref:typename:int	file:
xdl_prepare_env	my_project/libgit2/deps/xdiff/xprepare.c	/^int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,$/;"	f	typeref:typename:int
xdl_realloc	my_project/libgit2/deps/xdiff/git-xdiff.h	/^#define xdl_realloc(/;"	d
xdl_recmatch	my_project/libgit2/deps/xdiff/xutils.c	/^int xdl_recmatch(const char *l1, long s1, const char *l2, long s2, long flags)$/;"	f	typeref:typename:int
xdl_recs_cmp	my_project/libgit2/deps/xdiff/xdiffi.c	/^int xdl_recs_cmp(diffdata_t *dd1, long off1, long lim1,$/;"	f	typeref:typename:int
xdl_recs_copy	my_project/libgit2/deps/xdiff/xmerge.c	/^static int xdl_recs_copy(xdfenv_t *xe, int i, int count, int needs_cr, int add_nl, char *dest)$/;"	f	typeref:typename:int	file:
xdl_recs_copy_0	my_project/libgit2/deps/xdiff/xmerge.c	/^static int xdl_recs_copy_0(int use_orig, xdfenv_t *xe, int i, int count, int needs_cr, int add_n/;"	f	typeref:typename:int	file:
xdl_refine_conflicts	my_project/libgit2/deps/xdiff/xmerge.c	/^static int xdl_refine_conflicts(xdfenv_t *xe1, xdfenv_t *xe2, xdmerge_t *m,$/;"	f	typeref:typename:int	file:
xdl_refine_zdiff3_conflicts	my_project/libgit2/deps/xdiff/xmerge.c	/^static void xdl_refine_zdiff3_conflicts(xdfenv_t *xe1, xdfenv_t *xe2, xdmerge_t *m,$/;"	f	typeref:typename:void	file:
xdl_regex_t	my_project/libgit2/deps/xdiff/git-xdiff.h	/^#define xdl_regex_t /;"	d
xdl_regexec_buf	my_project/libgit2/deps/xdiff/git-xdiff.h	/^GIT_INLINE(int) xdl_regexec_buf($/;"	f	typeref:typename:int
xdl_regmatch_t	my_project/libgit2/deps/xdiff/git-xdiff.h	/^#define xdl_regmatch_t /;"	d
xdl_simplify_non_conflicts	my_project/libgit2/deps/xdiff/xmerge.c	/^static int xdl_simplify_non_conflicts(xdfenv_t *xe1, xdmerge_t *m,$/;"	f	typeref:typename:int	file:
xdl_split	my_project/libgit2/deps/xdiff/xdiffi.c	/^static long xdl_split(unsigned long const *ha1, long off1, long lim1,$/;"	f	typeref:typename:long	file:
xdl_trim_ends	my_project/libgit2/deps/xdiff/xprepare.c	/^static int xdl_trim_ends(xdfile_t *xdf1, xdfile_t *xdf2) {$/;"	f	typeref:typename:int	file:
xdlclass_t	my_project/libgit2/deps/xdiff/xprepare.c	/^} xdlclass_t;$/;"	t	typeref:struct:s_xdlclass	file:
xdlclassifier_t	my_project/libgit2/deps/xdiff/xprepare.c	/^} xdlclassifier_t;$/;"	t	typeref:struct:s_xdlclassifier	file:
xdlgroup	my_project/libgit2/deps/xdiff/xdiffi.c	/^struct xdlgroup {$/;"	s	file:
xdmerge_t	my_project/libgit2/deps/xdiff/xmerge.c	/^} xdmerge_t;$/;"	t	typeref:struct:s_xdmerge	file:
xdpsplit_t	my_project/libgit2/deps/xdiff/xdiffi.c	/^} xdpsplit_t;$/;"	t	typeref:struct:s_xdpsplit	file:
xflags	my_project/libgit2/deps/zlib/zlib.h	/^    int     xflags;     \/* extra flags (not used when writing a gzip file) *\/$/;"	m	struct:gz_header_s	typeref:typename:int
xmparam_t	my_project/libgit2/deps/xdiff/xdiff.h	/^} xmparam_t;$/;"	t	typeref:struct:s_xmparam
xo	my_project/libgit2/src/libgit2/diff_xdiff.c	/^	git_xdiff_output *xo;$/;"	m	struct:__anon544d96590108	typeref:typename:git_xdiff_output *	file:
xpp	my_project/libgit2/deps/xdiff/xdiff.h	/^	xpparam_t xpp;$/;"	m	struct:s_xmparam	typeref:typename:xpparam_t
xpp	my_project/libgit2/deps/xdiff/xhistogram.c	/^	xpparam_t const *xpp;$/;"	m	struct:histindex	typeref:typename:xpparam_t const *	file:
xpp	my_project/libgit2/deps/xdiff/xpatience.c	/^	xpparam_t const *xpp;$/;"	m	struct:hashmap	typeref:typename:xpparam_t const *	file:
xpparam_t	my_project/libgit2/deps/xdiff/xdiff.h	/^} xpparam_t;$/;"	t	typeref:struct:s_xpparam
xrealloc	my_project/libgit2/examples/common.c	/^void *xrealloc(void *oldp, size_t newsz)$/;"	f	typeref:typename:void *
xrecord_t	my_project/libgit2/deps/xdiff/xtypes.h	/^} xrecord_t;$/;"	t	typeref:struct:s_xrecord
z	my_project/libgit2/src/util/zstream.h	/^	z_stream z;$/;"	m	struct:__anon596d958c0208	typeref:typename:z_stream
zError	my_project/libgit2/deps/zlib/zconf.h	/^#  define zError /;"	d
zError	my_project/libgit2/deps/zlib/zutil.c	/^const char * ZEXPORT zError(int err) {$/;"	f	typeref:typename:const char * ZEXPORT
z_adler32_combine	my_project/libgit2/deps/zlib/zlib.h	/^#    define z_adler32_combine /;"	d
z_buf	my_project/libgit2/src/util/filebuf.h	/^	unsigned char *z_buf;$/;"	m	struct:git_filebuf	typeref:typename:unsigned char *
z_const	my_project/libgit2/deps/zlib/zconf.h	/^#  define z_const /;"	d
z_const	my_project/libgit2/deps/zlib/zconf.h	/^#  define z_const$/;"	d
z_crc32_combine	my_project/libgit2/deps/zlib/zlib.h	/^#    define z_crc32_combine /;"	d
z_crc32_combine_gen	my_project/libgit2/deps/zlib/zlib.h	/^#    define z_crc32_combine_gen /;"	d
z_crc_t	my_project/libgit2/deps/zlib/zconf.h	/^   typedef Z_U4 z_crc_t;$/;"	t	typeref:typename:Z_U4
z_crc_t	my_project/libgit2/deps/zlib/zconf.h	/^   typedef unsigned long z_crc_t;$/;"	t	typeref:typename:unsigned long
z_deflateInit	my_project/libgit2/deps/zlib/zlib.h	/^#  define z_deflateInit(/;"	d
z_deflateInit2	my_project/libgit2/deps/zlib/zlib.h	/^#  define z_deflateInit2(/;"	d
z_delta_size	my_project/libgit2/src/libgit2/pack-objects.h	/^	size_t z_delta_size;$/;"	m	struct:git_pobject	typeref:typename:size_t
z_errmsg	my_project/libgit2/deps/zlib/zutil.c	/^z_const char * const z_errmsg[10] = {$/;"	v	typeref:typename:z_const char * const[10]
z_error	my_project/libgit2/deps/zlib/zutil.c	/^void ZLIB_INTERNAL z_error(char *m) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
z_gzgetc	my_project/libgit2/deps/zlib/zlib.h	/^#  define z_gzgetc(/;"	d
z_gzoffset	my_project/libgit2/deps/zlib/zlib.h	/^#    define z_gzoffset /;"	d
z_gzopen	my_project/libgit2/deps/zlib/zlib.h	/^#    define z_gzopen /;"	d
z_gzseek	my_project/libgit2/deps/zlib/zlib.h	/^#    define z_gzseek /;"	d
z_gztell	my_project/libgit2/deps/zlib/zlib.h	/^#    define z_gztell /;"	d
z_inflateBackInit	my_project/libgit2/deps/zlib/zlib.h	/^#  define z_inflateBackInit(/;"	d
z_inflateInit	my_project/libgit2/deps/zlib/zlib.h	/^#  define z_inflateInit(/;"	d
z_inflateInit2	my_project/libgit2/deps/zlib/zlib.h	/^#  define z_inflateInit2(/;"	d
z_longlong	my_project/libgit2/deps/zlib/zconf.h	/^#  define z_longlong /;"	d
z_off64_t	my_project/libgit2/deps/zlib/zconf.h	/^#    define z_off64_t /;"	d
z_off64_t	my_project/libgit2/deps/zlib/zconf.h	/^#  define z_off64_t /;"	d
z_off_t	my_project/libgit2/deps/zlib/zconf.h	/^#      define z_off_t /;"	d
z_off_t	my_project/libgit2/deps/zlib/zconf.h	/^#  define z_off_t /;"	d
z_size_t	my_project/libgit2/deps/zlib/zconf.h	/^     typedef size_t z_size_t;$/;"	t	typeref:typename:size_t
z_size_t	my_project/libgit2/deps/zlib/zconf.h	/^     typedef unsigned NO_SIZE_T z_size_t;$/;"	t	typeref:typename:unsigned NO_SIZE_T
z_size_t	my_project/libgit2/deps/zlib/zconf.h	/^     typedef unsigned long long z_size_t;$/;"	t	typeref:typename:unsigned long long
z_size_t	my_project/libgit2/deps/zlib/zconf.h	/^     typedef unsigned long z_size_t;$/;"	t	typeref:typename:unsigned long
z_stream	my_project/libgit2/deps/zlib/zlib.h	/^} z_stream;$/;"	t	typeref:struct:z_stream_s
z_stream_s	my_project/libgit2/deps/zlib/zlib.h	/^typedef struct z_stream_s {$/;"	s
z_streamp	my_project/libgit2/deps/zlib/zlib.h	/^typedef z_stream FAR *z_streamp;$/;"	t	typeref:typename:z_stream FAR *
z_verbose	my_project/libgit2/deps/zlib/zutil.c	/^int ZLIB_INTERNAL z_verbose = verbose;$/;"	v	typeref:typename:int ZLIB_INTERNAL
z_word_t	my_project/libgit2/deps/zlib/crc32.c	/^     typedef Z_U4 z_word_t;$/;"	t	typeref:typename:Z_U4	file:
z_word_t	my_project/libgit2/deps/zlib/crc32.c	/^     typedef Z_U8 z_word_t;$/;"	t	typeref:typename:Z_U8	file:
zalloc	my_project/libgit2/deps/zlib/zlib.h	/^    alloc_func zalloc;  \/* used to allocate the internal state *\/$/;"	m	struct:z_stream_s	typeref:typename:alloc_func
zcalloc	my_project/libgit2/deps/zlib/zconf.h	/^#    define zcalloc /;"	d
zcalloc	my_project/libgit2/deps/zlib/zutil.c	/^voidpf ZLIB_INTERNAL zcalloc(voidpf opaque, uInt items, uInt size) {$/;"	f	typeref:typename:voidpf ZLIB_INTERNAL
zcalloc	my_project/libgit2/deps/zlib/zutil.c	/^voidpf ZLIB_INTERNAL zcalloc(voidpf opaque, unsigned items, unsigned size) {$/;"	f	typeref:typename:voidpf ZLIB_INTERNAL
zcfree	my_project/libgit2/deps/zlib/zconf.h	/^#    define zcfree /;"	d
zcfree	my_project/libgit2/deps/zlib/zutil.c	/^void ZLIB_INTERNAL zcfree(voidpf opaque, voidpf ptr) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
zero	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static object_data zero = {$/;"	v	typeref:typename:object_data
zero_bytes	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char zero_bytes[] = {$/;"	v	typeref:typename:unsigned char[]
zero_data	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static unsigned char zero_data[] = {$/;"	v	typeref:typename:unsigned char[]
zero_data	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static unsigned char zero_data[] = {$/;"	v	typeref:typename:unsigned char[]
zero_id	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static char *zero_id = "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391";$/;"	v	typeref:typename:char *
zero_matchingpath	my_project/libgit2/deps/pcre/pcre_jit_compile.c	/^  struct sljit_label *zero_matchingpath;$/;"	m	struct:bracket_backtrack	typeref:struct:sljit_label *	file:
zero_obj	my_project/libgit2/tests/libgit2/object/raw/data.h	/^static git_rawobj zero_obj = {$/;"	v	typeref:typename:git_rawobj
zero_sha256	my_project/libgit2/tests/libgit2/odb/loose_data.h	/^static object_data zero_sha256 = {$/;"	v	typeref:typename:object_data
zerr	my_project/libgit2/src/util/zstream.h	/^	int zerr;$/;"	m	struct:__anon596d958c0208	typeref:typename:int
zfree	my_project/libgit2/deps/zlib/zlib.h	/^    free_func  zfree;   \/* used to free the internal state *\/$/;"	m	struct:z_stream_s	typeref:typename:free_func
zlib	my_project/libgit2/deps/zlib/CMakeLists.txt	/^add_library(zlib OBJECT ${SRC_ZLIB})$/;"	t
zlibCompileFlags	my_project/libgit2/deps/zlib/zconf.h	/^#  define zlibCompileFlags /;"	d
zlibCompileFlags	my_project/libgit2/deps/zlib/zutil.c	/^uLong ZEXPORT zlibCompileFlags(void) {$/;"	f	typeref:typename:uLong ZEXPORT
zlibVersion	my_project/libgit2/deps/zlib/zconf.h	/^#  define zlibVersion /;"	d
zlibVersion	my_project/libgit2/deps/zlib/zutil.c	/^const char * ZEXPORT zlibVersion(void) {$/;"	f	typeref:typename:const char * ZEXPORT
zlib_version	my_project/libgit2/deps/zlib/zlib.h	/^#define zlib_version /;"	d
zmemcmp	my_project/libgit2/deps/zlib/zutil.c	/^int ZLIB_INTERNAL zmemcmp(const Bytef* s1, const Bytef* s2, uInt len) {$/;"	f	typeref:typename:int ZLIB_INTERNAL
zmemcmp	my_project/libgit2/deps/zlib/zutil.h	/^#    define zmemcmp /;"	d
zmemcpy	my_project/libgit2/deps/zlib/zutil.c	/^void ZLIB_INTERNAL zmemcpy(Bytef* dest, const Bytef* source, uInt len) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
zmemcpy	my_project/libgit2/deps/zlib/zutil.h	/^#    define zmemcpy /;"	d
zmemzero	my_project/libgit2/deps/zlib/zutil.c	/^void ZLIB_INTERNAL zmemzero(Bytef* dest, uInt len) {$/;"	f	typeref:typename:void ZLIB_INTERNAL
zmemzero	my_project/libgit2/deps/zlib/zutil.h	/^#    define zmemzero(/;"	d
zs	my_project/libgit2/src/util/filebuf.h	/^	z_stream zs;$/;"	m	struct:git_filebuf	typeref:typename:z_stream
zstream	my_project/libgit2/src/libgit2/odb_loose.c	/^	git_zstream zstream;$/;"	m	struct:__anon5ce333660308	typeref:typename:git_zstream	file:
zstream	my_project/libgit2/src/libgit2/pack-objects.h	/^	git_zstream zstream;$/;"	m	struct:git_packbuilder	typeref:typename:git_zstream
zstream	my_project/libgit2/src/libgit2/pack.h	/^	git_zstream zstream;$/;"	m	struct:git_packfile_stream	typeref:typename:git_zstream
zstream_buf	my_project/libgit2/src/util/zstream.c	/^static int zstream_buf(git_str *out, const void *in, size_t in_len, git_zstream_t type)$/;"	f	typeref:typename:int	file:
zstream_seterr	my_project/libgit2/src/util/zstream.c	/^GIT_INLINE(int) zstream_seterr(git_zstream *zs)$/;"	f	typeref:typename:int
zstrerror	my_project/libgit2/deps/zlib/gzguts.h	/^#    define zstrerror(/;"	d
zstrerror	my_project/libgit2/deps/zlib/gzguts.h	/^#  define zstrerror(/;"	d
zterm	my_project/libgit2/examples/status.c	/^	int zterm;$/;"	m	struct:status_opts	typeref:typename:int	file:
